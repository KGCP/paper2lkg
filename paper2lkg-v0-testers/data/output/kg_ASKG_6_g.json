{
  "iri": "Paper-Active_knowledge_graph_completion",
  "title": "Active knowledge graph completion",
  "authors": [
    "Pouya Ghiasnezhad Omran",
    "Kerry Taylor",
    "Sergio Rodriguez Mendez",
    "Armin Haller"
  ],
  "keywords": [
    "Existential rule learning",
    "Knowledge graph completion",
    "Rule learning",
    "Knowledge graph"
  ],
  "sections": [
    {
      "iri": "Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-1-Sentence-1",
              "text": "Enterprise and public Knowledge Graphs (KGs) are known to be incomplete."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-2",
              "text": "Methods for automatic completion, sometimes by rule learning, scale well."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-3",
              "text": "While previous rule-based methods learn closed (non-existential) rules, we introduce Open Path (OP) rules that are constrained existential rules."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-4",
              "text": "We present a novel algorithm, OPRL, for learning OP rules."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-2-Sentence-1",
              "text": "Closed rules complete a KG by answering queries of unclear origin, usually derived from a holdback test set in experimental settings."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-2",
              "text": "However, OP rules can generate relevant queries for KG completion."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-3",
              "text": "OPRL generates queries even when there is no closed rule to answer the query, or when the correct answer is a missing entity that is not present in the KG."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-3-Sentence-1",
              "text": "For OPRL to scale well, we propose a novel embedding-based fitness function to efficiently estimate rule quality."
            },
            {
              "iri": "Section-1-Paragraph-3-Sentence-2",
              "text": "Additionally, we introduce a novel, efficient vector computation to formally assess rule quality."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-4-Sentence-1",
              "text": "We evaluate OPRL using adaptations of Freebase, YAGO2, Wikidata, and a synthetic Poker KG."
            },
            {
              "iri": "Section-1-Paragraph-4-Sentence-2",
              "text": "We find that OPRL mines hundreds of accurate rules from massive KGs with up to 8 M facts."
            },
            {
              "iri": "Section-1-Paragraph-4-Sentence-3",
              "text": "The OP rules generate queries with precision as high as 98% and recall of 62% on a complete KG, demonstrating the first solution for active knowledge graph completion."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-5-Sentence-1",
              "text": "Crown Copyright 2022 Published by Elsevier Inc."
            },
            {
              "iri": "Section-1-Paragraph-5-Sentence-2",
              "text": "This is an open access article under the"
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-2",
      "subtitle": "Introduction",
      "paragraphs": [
        {
          "iri": "Section-2-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-1-Sentence-1",
              "text": "Knowledge Graphs (KGs) are a convenient technology to model and store massive quantities of weakly-structured data."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-2",
              "text": "The power of KGs arises from a data-first approach."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-3",
              "text": "They allow information to be added in a relatively arbitrary manner as structural constraints are few; unlike, for example, relational databases where type, not-null, and key constraints abound to enforce a kind of completeness."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-4",
              "text": "However, the intended scope of KGs is usually poorly defined and they fail to record relevant entities, as well as relevant relationships for the entities they do record."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-5",
              "text": "This is just like in Wikipedia, where some topics are more richly covered than others."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-6",
              "text": "Even for the same topic area, say movie actors for instance, we have much better coverage for the movies produced in some countries than we do for others."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-7",
              "text": "KGs are often (semi-) automatically built from unstructured sources such as Wikipedia articles."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-8",
              "text": "The building methods are prone to asserting some erroneous facts, while missing some others."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-2-Sentence-1",
              "text": "Techniques have been developed for knowledge graph completion and rule learning to curate KGs automatically."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-2",
              "text": "In these approaches, models, often expressed as logical rules or vector embeddings, are learnt from a given KG."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-3",
              "text": "The models are then used for curating tasks including link prediction that predict missing facts about extant entities."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-3-Sentence-1",
              "text": "Rule learning methods for KGs consider Closed (non-existential) rules which are used to predict a fact that instantiates the triple at the head of the rule."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-2",
              "text": "For example, consider a rule defining a relationship between citizenship and the residence of a person, citizenOf(x, y) livesIn(x, z) ^ locatedIn(z, y)."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-3",
              "text": "Using this rule, someone's citizenship can be inferred from facts about a person's city of residence and the nation in which that city is located."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-4",
              "text": "In Closed rules all head variables occur in the body of the rule and all variables appear at least twice."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-5",
              "text": "Thus, there can be no variable quantified existentially in the head of the rule."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-4-Sentence-1",
              "text": "Closed rules enable inference of specific facts that, if true, are missing from the KG."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-2",
              "text": "They draw attention to a potential missing fact only if the fact is able to be inferred by the learnt rule."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-3",
              "text": "KG completion in this way predicts answers for known unknowns."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-4",
              "text": "In this paper we consider, for the first time, the problem of rule-based knowledge graph completion that guides the discovery of unknown unknowns."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-5",
              "text": "Generally, in knowledge graph completion, a specific missing fact is predicted."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-6",
              "text": "In contrast, we predict the existence of missing facts even when an entity involved in the missing fact may be absent from the KG."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-5-Sentence-1",
              "text": "We propose learning open path rules (OP) from which we infer open-ended questions (e.g. citizenOf(Ann, ?)) instead of facts (e.g. citizenOf(Ann, Australia))."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-2",
              "text": "Traditional knowledge graph completion is then done by answering the actively generated questions."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-3",
              "text": "The proposed OP rule formalism is a fragment of the language of existential rules which is expressive enough to adduce queries yet suitable for our scalable embedding-based rule mining system."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-4",
              "text": "OP rules provide evidence that a fact is missing even when there is evidence for only one entity of the pair, and a question is generated accordingly."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-5",
              "text": "The queries adduced from OP rules identify that a new fact is needed when the answer is not known."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-6",
              "text": "The answer might be an entity already present in the KG, or absent from it."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-7",
              "text": "In the latter case, a query could be posed to a user engaged in a curating task or to a Web question-answering engine."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-8",
              "text": "In particular, an answer to the question could introduce new entities to the KG, and by this the approach addresses a previously unstudied direction in knowledge graph completion, that is missing entities."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-9",
              "text": "The process of OP rule learning and adducing queries from OP rules is not an alternative to link prediction; it complements traditional link prediction by providing relevant queries to link predictors and can, for the first time, make knowledge graph completion fully automatic."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-6-Sentence-1",
              "text": "For example, consider the OP rule, citizenOf(x, y) studiesIn(x, z)."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-2",
              "text": "This rule implies that if we know an entity x studies in an institute z, then x is a citizen of somewhere (y)."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-3",
              "text": "If the body of this rule is instantiated like studiesIn(Sam, ANU) we can infer the query citizenOf(Sam, ?)."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-7-Sentence-1",
              "text": "Our work addresses a long-standing gap in traditional link prediction systems that use the KG to propose missing facts, but need to be seeded with queries about potential missing facts."
            },
            {
              "iri": "Section-2-Paragraph-7-Sentence-2",
              "text": "Conventionally, for evaluating link predictors, these queries are trivially generated from test facts that are held out from the KG in the hope that a high-performing predictor will rediscover the held-out (and thereby missing) facts."
            },
            {
              "iri": "Section-2-Paragraph-7-Sentence-3",
              "text": "However, once a link predictor is deployed over a working KG, test facts cannot be held out, and re-discovery of held-out facts is unproductive, so whence does a query arise to drive the link predictor?"
            },
            {
              "iri": "Section-2-Paragraph-7-Sentence-4",
              "text": "We propose that the queries we derive from our OP rules can be used to generate the queries that link predictors need to repair working KGs."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-8-Sentence-1",
              "text": "Arbitrary queries are of little use; queries need to be relevant in order to be useful."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-2",
              "text": "For example, consider the fact presidentOf(Obama, USA), held back from training data for a link predictor."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-3",
              "text": "Conventionally, this known-missing fact is used to generate the following two relevant queries presidentOf(?, USA) and presidentOf(Obama, ?)."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-4",
              "text": "Instead when a link predictor is asked an irrelevant query like presidentOf(Celine Dion, ?), it will try to rank a set of entities (countries) to answer this query even though no correct answer exists either inside or outside the KG."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-9-Sentence-1",
              "text": "In summary, by learning OP rules to derive queries we address the following problems in traditional knowledge graph completion:"
            },
            {
              "iri": "Section-2-Paragraph-9-Sentence-2",
              "text": "Identifying a missing fact even when there is no pattern (such as a closed rule) that fully instantiates the fact in the KG;"
            },
            {
              "iri": "Section-2-Paragraph-9-Sentence-3",
              "text": "Generating relevant queries that can serve as input to link predictors to complete the KG (which is feasible when the correct answer is an entity extant in the KG); and"
            },
            {
              "iri": "Section-2-Paragraph-9-Sentence-4",
              "text": "Generating queries that can introduce missing entities into the KG (although this requires answer sources beyond current link predictors)."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-10-Sentence-1",
              "text": "The contributions of this paper are as follows, greatly extending early explorations published in."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-2",
              "text": "We present a novel method for learning open path rules from a KG."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-3",
              "text": "These are existential rules with a different form to the usual closed path rules that are conventionally used for knowledge graph completion tasks."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-4",
              "text": "We propose an algorithm, OPRL, for learning these rules, including novel fitness criteria for discarding poor rules early, and efficient vector computation of formal quality criteria."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-5",
              "text": "We show that, together with KG sampling, our algorithm is effective over very large KGs."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-6",
              "text": "As such, we introduce a first solution to the problem of active knowledge graph completion (AKGC), where we aim, instead of suggesting missing facts, to ask the best questions to complete a KG."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-11-Sentence-1",
              "text": "The rest of the paper is structured as follows."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-2",
              "text": "After presenting some foundations in Section 2, we describe our target language for learning in Section 3, including the formalism of OP rules."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-3",
              "text": "Section 4 proposes the OP rule learning method OPRL that includes a novel embedding-based heuristic function and evaluation method."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-4",
              "text": "Section 5 presents the process for generating relevant queries derived from the learnt OP rules."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-5",
              "text": "In Section 6 we formalise the new quality notion of query relevance and discuss the results of a range of experiments with our novel OPRL."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-6",
              "text": "In Section 7, we present the work in the literature related to link prediction and active knowledge graph completion."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-3",
      "subtitle": "Background",
      "paragraphs": [
        {
          "iri": "Section-3-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-1-Sentence-1",
              "text": "2.1 Rule-Based KG Completion"
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-2",
              "text": "An entity e is an identifier for an object such as a place or a person, and a fact (also known as a link) is an RDF triple (e, P, e'), whereby the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-3",
              "text": "Here we write facts in the form P(e, e')."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-4",
              "text": "A knowledge graph (KG) is a pair K = (E, F) where F is a set of facts and E is the set of entities that exist in the facts F."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-2-Sentence-1",
              "text": "Rule learning systems employ a rule language to express rules."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-2",
              "text": "RLVLR and ScaleKB use so-called closed path (CP) rules that are a kind of closed rule with no free variables."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-3",
              "text": "Each consists of two parts, a head at the front of the implication arrow and a body at the tail."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-4",
              "text": "The rule forms a closed path, or single unbroken loop of links between the variables."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-5",
              "text": "It has the following general form, where P_h is the single predicate of the head, and P_1, ..., P_n (for n >= 1) are predicates of the body and x, y, z_1, ..., z_{n-1} are variables in the rule."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-3-Sentence-1",
              "text": "We interpret this kind of rule with universal quantification of all variables at the outside, and so we can infer a fact that instantiates the head of the rule by finding an instantiation of the body of the rule in the KG."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-2",
              "text": "For example, from the rule citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y), if we have the facts in the KG, livesIn(Bronte, Canberra) and locatedIn(Canberra, Australia), then we can infer and assert the following new fact in the KG, citizenOf(Bronte, Australia)."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-4-Sentence-1",
              "text": "Rules are considered more useful if they generalise well, that is, they explain many facts."
            },
            {
              "iri": "Section-3-Paragraph-4-Sentence-2",
              "text": "To quantify this idea, we recall measures support, head coverage, and standard confidence that are used in some major approaches to rule learning."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-5-Sentence-1",
              "text": "Definition 1 (satisfies, support)."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-2",
              "text": "Let r be a CP rule of the form given earlier."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-3",
              "text": "A pair of entities (e, e') satisfies the body of r, denoted body_r(e, e'), if there exist entities e_1, ..., e_{n-1} in the KG such that all of {P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')} are facts in the KG."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-4",
              "text": "Further, (e, e') satisfies the head of r, denoted P_h(e, e'), if P_h(e, e') is a fact in the KG."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-5",
              "text": "In other words, a pair of entities satisfies both the body and the head of a CP rule if the rule, instantiated by those entities, holds true in the KG."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-6",
              "text": "Then the support of r counts the head (target) instances for which the rule body and head are both satisfied in the KG."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-6-Sentence-1",
              "text": "Definition 2 (Standard confidence (SC), head coverage (HC))."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-2",
              "text": "SC describes how frequently the rule is true, i.e., of the ways that the body is satisfied in the KG, the proportion of the inferred head instances that are also satisfied."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-3",
              "text": "It is closely related to confidence widely used in association rule mining."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-4",
              "text": "On the other hand, HC measures the explanatory power of the rule, i.e., the proportion of the facts satisfying the head of the rule that can be inferred by satisfying the rule body."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-5",
              "text": "It is closely related to coverage widely used for rule learning in inductive logic programming."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-6",
              "text": "A rule that has both 100% HC and SC explains every fact in the KG that is an instance of its head and is redundant with respect to the KG."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-7-Sentence-1",
              "text": "Representation Learning for KG Completion"
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-2",
              "text": "Representation learning methods have been developed to model KGs for tasks such as link prediction, entity resolution, and link-based clustering."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-3",
              "text": "The two key phases in representation learning are (1) embedding the entities and predicates of a given KG into a latent space, and (2) reconstructing the KG based on the learned embeddings to predict new facts."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-8-Sentence-1",
              "text": "The KG is embedded into a low-dimensional vector space of latent, unnamed features not present in the KG vocabulary."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-2",
              "text": "The plausibility of a fact is defined by a scoring function over the embedded representations of its predicate and entities."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-3",
              "text": "Learning and operating on latent representations benefits from the use of unobserved but intrinsic properties of entities and their relations."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-9-Sentence-1",
              "text": "Various methods have been proposed to construct embeddings."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-2",
              "text": "Two main categories are translation-based embeddings and compositional embeddings."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-3",
              "text": "The translation-based embeddings represent predicates as vectors and use an additive calculus for scoring."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-4",
              "text": "The compositional embeddings represent predicates as weight matrices and use a product calculus for scoring."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-10-Sentence-1",
              "text": "We use embeddings learned by RESCAL for our novel heuristic function for mining OP rules."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-2",
              "text": "RESCAL is a compositional-based embedding learner."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-3",
              "text": "It embeds each entity e_i by a vector e_i \u2208 \u211d^d and each predicate P_k by a matrix P_k \u2208 \u211d^{d\u00d7d}, where \u211d is the set of real numbers and d is an integer."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-4",
              "text": "d is a parameter to the learner specifying the dimensionality of the latent feature space."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-5",
              "text": "RESCAL learns the two sets of embeddings, vectors {e_i} and matrices {P_k}, by minimizing a loss function defined over the product of the entity and predicate embeddings."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-6",
              "text": "RESCAL captures rich interactions amongst entities and predicates because it learns a larger number of more finely-targeted weight parameters than methods which embed the predicates into vectors."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-7",
              "text": "RESCAL embeddings are also larger and simpler than those in more recent embedding-based link predictors such as HOLE and TuckER."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-8",
              "text": "The compactness of the latter embeddings is useful for link prediction but counter-productive for our purposes where we use embeddings in a heuristic function."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-9",
              "text": "Furthermore, RESCAL has empirically demonstrated strength when used in a heuristic for mining logical axioms as we need here."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-4",
      "subtitle": "Rules with Free Variables for Active Knowledge Graph Completion",
      "paragraphs": [
        {
          "iri": "Section-4-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-1-Sentence-1",
              "text": "Unlike earlier work in rule mining for KG completion, for our active knowledge graph completion task we mine open path (OP) rules of the following form:"
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-2",
              "text": "P_t(x, z_0) \u2190 P_1(z_0, z_1) \u2227 P_2(z_1, z_2) \u2227 ... \u2227 P_n(z_{n-1}, y)."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-2-Sentence-1",
              "text": "Each P_i and P_t are predicates in the KG and each of {x, z_i, y} are variables; x and y are free while the z_i are bound."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-3-Sentence-1",
              "text": "Unlike CP rules, OP rules do not necessarily form a looping path over variables, but can have a more linear shape."
            },
            {
              "iri": "Section-4-Paragraph-3-Sentence-2",
              "text": "From an OP rule, two CP rules are logical consequences: one for each unification of free variable y with a variable of the head P_t."
            },
            {
              "iri": "Section-4-Paragraph-3-Sentence-3",
              "text": "However, the OP rule is not a consequence of any CP rule; OP rules are strictly more expressive than CP rules."
            },
            {
              "iri": "Section-4-Paragraph-3-Sentence-4",
              "text": "While every instantiation of a CP rule is also an instantiation of a corresponding OP rule, OP rules admit instantiations that cannot be instantiations of any CP rule."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-4-Sentence-1",
              "text": "From an instantiation of the body of an OP rule, we cannot infer a fact, but only a question."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-2",
              "text": "For example, the following OP rule, citizenOf(x, t) \u2190 livesIn(x, z), states that if an entity, x, lives in z, then that entity is a citizen of somewhere (t)."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-3",
              "text": "By instantiating the body of this rule as follows, livesIn(Bronte, Canberra), we could infer the query, citizenOf(Bronte, ?)."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-5-Sentence-1",
              "text": "To assess the quality of our mined open path rules, we introduce open path standard confidence (OPSC) and open path head coverage (OPHC) derived from the closed path forms (Definition 2)."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-6-Sentence-1",
              "text": "Definition 3 (open path: OPsupp, OPSC, OPHC)."
            },
            {
              "iri": "Section-4-Paragraph-6-Sentence-2",
              "text": "Let r be an OP rule of the form given earlier."
            },
            {
              "iri": "Section-4-Paragraph-6-Sentence-3",
              "text": "Let r, e, e', e_i, body_r, P_t be as given in Definition 1 but adapted straightforwardly to the open path rule case."
            },
            {
              "iri": "Section-4-Paragraph-6-Sentence-4",
              "text": "Then a pair of entities (e, e') satisfies the body of r, denoted body_r(e, e'), if there exist entities e_1, ..., e_{n-1} in the KG such that P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') are facts in the KG."
            },
            {
              "iri": "Section-4-Paragraph-6-Sentence-5",
              "text": "A pair (e', e) satisfies the head of r, denoted P_t(e', e), if P_t(e', e) is a fact in the KG."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-7-Sentence-1",
              "text": "The open path support, open path standard confidence, and open path head coverage of r are given respectively by the KG."
            },
            {
              "iri": "Section-4-Paragraph-7-Sentence-2",
              "text": "Then the support degree of r is defined as:"
            },
            {
              "iri": "Section-4-Paragraph-7-Sentence-3",
              "text": "OPsupp(r) = |{e : \u2203e', e' s.t. body_r(e, e') and P_t(e', e)}|."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-8-Sentence-1",
              "text": "OPSC(r) = OPsupp(r) / |{e: \u2203e' s.t. body_r(e, e')}|."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-9-Sentence-1",
              "text": "OPHC(r) = OPsupp(r) / |{e: \u2203e' s.t. P_t(e', e)}|."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-10-Sentence-1",
              "text": "For example, consider the OP rule, P_1(x, z_0) \u2190 P_2(z_0, z_1) \u2227 P_3(z_1, y)."
            },
            {
              "iri": "Section-4-Paragraph-10-Sentence-2",
              "text": "Assume we have 3 entities ({e_3, e_4, e_5}) which can instantiate z_0 to satisfy both P_1(x, z_0) and P_2(z_0, z_1) \u2227 P_3(z_1, y)."
            },
            {
              "iri": "Section-4-Paragraph-10-Sentence-3",
              "text": "Assume the number of entities that can instantiate z_0 to satisfy the head part is 5 ({e_1, e_2, e_3, e_4, e_5}) and the number of entities that can instantiate z_0 to satisfy the body part is 7 ({e_3, e_4, e_5, e_6, e_7, e_8, e_9})."
            },
            {
              "iri": "Section-4-Paragraph-10-Sentence-4",
              "text": "Hence, we have for this rule, OPsupp = 3, OPSC = 3/7 and OPHC = 3/5."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-5",
      "subtitle": "OP Rule Learning",
      "paragraphs": [
        {
          "iri": "Section-5-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-1-Sentence-1",
              "text": "Our objective is to mine a KG for high-quality OP rules about a specific target predicate in the head, P."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-2",
              "text": "While we adhere to the architecture of RLVLR that learns CP rules, we propose the following novelties for mining OP rules: (i) a novel fitness function which can estimate the quality of an OP rule based on the embedding representations of its predicates; and (ii) a novel vector computation which allows the system to evaluate the OP rules against a massive KG to compute quality measures, OPSC and OPHC."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-3",
              "text": "Our OP rule miner, OPRL, is summarised in Algorithm 1."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-4",
              "text": "It takes user parameters for the maximum length of rules and the least acceptable OPSC and OPHC scores."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-2-Sentence-1",
              "text": "Algorithm 1: OPRL"
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-2",
              "text": "Input: a KG K, a target predicate P."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-3",
              "text": "Parameter: a max rule length l, MinOPSC and MinOPHC."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-4",
              "text": "Output: a set of OP rules R."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-5",
              "text": "K' := Sampling(K, P)."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-6",
              "text": "(P, A) := Embeddings(K')."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-7",
              "text": "R' := \u2205."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-8",
              "text": "For 2 \u2264 k \u2264 l do."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-9",
              "text": "Add PathFinding(K', P_t, P, A, k) to R'."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-10",
              "text": "End for."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-11",
              "text": "Add IncPathFinding(K', P_t, P, A, k, R') to R'."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-12",
              "text": "R := Evaluation(R', K)."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-13",
              "text": "Return R."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-3-Sentence-1",
              "text": "First, we reduce the KG size because existing embedding-based methods cannot handle vast KGs."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-2",
              "text": "For instance, RESCAL is unable to handle YAGO2."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-3",
              "text": "We use the sampling algorithm, Sampling(), proposed in RLVLR to build a reduced KG."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-4",
              "text": "This means that embeddings are computed only for entities that are relevant to a target predicate."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-5",
              "text": "In more detail, Sampling() computes a fragment of the KG (K') consisting of a bounded number of entities that are related to the target predicate (i.e., P_t)."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-6",
              "text": "The method initializes a set of entities by considering a number of entities which are involved in the target predicate."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-7",
              "text": "For example, if we have P_t(e1, e2) as a fact, then our set of entities includes e1 and e2."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-8",
              "text": "Then, the method extends the set of entities by adding entities that are related to the existing entities in the set via any predicates, like adding e3 if we have some P_i(e3, e1) as a fact."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-9",
              "text": "This last step iterates a number of times based on the maximum length of target rules."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-10",
              "text": "After the set of entities is obtained, all facts (i.e., links) between these entities form the reduced KG, K'."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-4-Sentence-1",
              "text": "We then compute embedding models to construct a fitness function to rapidly estimate a rule's quality, and so significantly improve scalability."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-2",
              "text": "Embeddings() obtains the embeddings for predicates and arguments in the sample KG."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-3",
              "text": "Existing representation learners such as RESCAL usually compute embeddings for entities and predicates."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-4",
              "text": "Instead, we use the method proposed in RLVLR, extending RESCAL, to additionally compute argument embeddings that are derived from entity embeddings."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-5",
              "text": "RESCAL embeds each entity e_j to a vector E_j \u2208 R^d and each predicate P_i to a 2D array P_i \u2208 R^(d\u00d7d) where d is an integer parameter of RESCAL and R is the set of real numbers."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-6",
              "text": "For each given fact P_1(e0, e1), the following scoring function is defined: f(e0, P1, e1) = E_0^T \u00b7 P1 \u00b7 E1."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-7",
              "text": "The scoring function specifies the plausibility of the fact that e0 is connected to e1 via predicate P1."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-8",
              "text": "After computing embeddings, in shortest-first order, we exhaustively generate OP rules for a target predicate P_i and its inverse P_i^-1 in PathFinding()."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-9",
              "text": "The inverse is defined as \u2200e, e' P_i^-1(e', e) = P_i(e, e')."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-10",
              "text": "Since the target predicate is fixed, generating an OP rule is reduced to generating a path to comprise the body, i.e., a sequence of predicates P1', P2', ..., Pn' with required OP rule variable patterns."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-11",
              "text": "We apply the proposed fitness function to each rule on generation to rapidly discard poor performers."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-12",
              "text": "In IncPathFinding(), we create additional candidate rules by extending some top-ranked candidates."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-13",
              "text": "We learn new short OP rules for the rightmost predicate using PathFinding()."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-14",
              "text": "If we find a good rule about that predicate, then we extend the original rule by appending the new body to the original tail, and we keep both the original and extended rules."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-15",
              "text": "For example, consider that PathFinding() generated the rule: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, y)."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-16",
              "text": "In IncPathFinding(), the rule is extended to: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, z3) \u2227 P5(z3, y) if PathFinding() also generates P4(x, z0) \u2190 P5(z0, y)."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-17",
              "text": "We then use a redundancy elimination method to make sure there is no repetition in all the mined rules and then evaluate candidate rules by OPSC and OPHC in Evaluate()."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-18",
              "text": "We use efficient matrix and vector multiplication for evaluation, which is crucial for scalability."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-6",
      "subtitle": "OP Rule Learning: Rule Quality Estimation using Embeddings",
      "paragraphs": [
        {
          "iri": "Section-6-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-1-Sentence-1",
              "text": "Since the number of potential rules generated in PathFinding() is enormous, we rapidly filter out candidates of low quality."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-2",
              "text": "For this purpose, the quality is estimated by either of two fitness functions: co-occurrence or open path, both of which are derived from embedding representations."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-3",
              "text": "The former uses entity embeddings alone, while the latter incorporates predicate embeddings as well."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-4",
              "text": "We use RESCAL to compute both."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-2-Sentence-1",
              "text": "Co-occurrence Fitness Function."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-2",
              "text": "Each instance of an OP rule connects its head and body via a shared entity in place of z0, so an OP rule tends to have high OPsupp (and so high OPSC and OPHC) if the entities which satisfy the second argument of P_t have a large intersection with the entities that satisfy the first argument of P_t."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-3",
              "text": "When predicate pairs associate similar entities this way, this induces a latent-feature relationship between the predicates that we call co-occurrence."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-4",
              "text": "For instance, the two predicates liveIn(e'', e) and locatedIn(e', e') may co-occur because in both cases e is often a city."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-3-Sentence-1",
              "text": "Based on this observation, a co-occurrence fitness function for mining CP rules is defined using argument embeddings in RLVLR, and we adapt it here."
            },
            {
              "iri": "Section-6-Paragraph-3-Sentence-2",
              "text": "RLVLR also defines a similarity fitness function that is not applicable here because it relies on the head predicate to share a large number of entities with the body in both argument positions (i.e., one with the first argument of the first body predicate and the other with the last argument of the last body predicate)."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-4-Sentence-1",
              "text": "Since CP rules have no free variables, searching for good CP rules is computationally easier than for OP rules where there are many more satisfying facts."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-2",
              "text": "In CP rules, the head and body present similar concepts so the RLVLR algorithm can use a similarity scoring function."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-3",
              "text": "For OP rules, there is no holistic similarity between the head and body."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-5-Sentence-1",
              "text": "For example, consider the following CP rule: isCitizenOf(x,y) \u2190 isBornIn(x,z) \u2227 locatedIn(z,y), where the head and body present similar relations between the pair of entities (x,y)."
            },
            {
              "iri": "Section-6-Paragraph-5-Sentence-2",
              "text": "On the other hand, in an OP rule like citizenOf(x,t) \u2190 marriedTo(x,z) \u2227 parentOf(z,y), there is no holistic similarity, and the head relates different pairs of entities (x,t) to the pairs connected via the body of the same rule (x,y), so we cannot expect the pairs to be similar."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-6-Sentence-1",
              "text": "For argument embeddings, each predicate has a subject argument in the first position and an object argument in the second position."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-2",
              "text": "Each argument's embedding is a vector obtained by averaging the embeddings of all the entities in the argument position."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-3",
              "text": "For entity e, we write its embedding vector as e."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-4",
              "text": "For predicate P, we write its embedding matrix as P, also called a weight matrix."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-7-Sentence-1",
              "text": "Definition 4 (argument embedding). Let K = (E, F) be a KG."
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-2",
              "text": "The argument embeddings of the subject and object arguments of a predicate P are vectors defined respectively as:"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-8-Sentence-1",
              "text": "P(1) = (1/n) \u2211 s_e * e for e in S_p, and P(2) = (1/n) \u2211 o_e * e for e in O_p."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-9-Sentence-1",
              "text": "Here, n is the number of facts in the KG."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-2",
              "text": "S_p and O_p are the sets of entities occurring as subjects and objects of P, respectively."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-3",
              "text": "More precisely, S_p = {e | \u2203e' such that P(e, e') \u2208 F} and O_p = {e' | \u2203e such that P(e, e') \u2208 F}."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-4",
              "text": "The terms s_e and o_e represent the number of times an entity e occurs as a subject and an object of P in K respectively."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-5",
              "text": "More precisely, s_e = |{e' such that P(e, e') \u2208 F}| and o_e = |{e' such that P(e', e) \u2208 F}|."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-10-Sentence-1",
              "text": "Now the co-occurrence fitness function for CP rules used in RLVLR is modified for the OP case."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-2",
              "text": "In an OP rule of the form (2), the co-occurrences of z_0 as the object argument of P_t and subject argument of P_1, and z_i (1 \u2264 i \u2264 n - 1) as the object argument of P_i and subject argument of P_{i+1}, motivates us to highly value rules with the properties:"
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-3",
              "text": "P(2)_t \u2248 P(1)_1, and P(2)_i \u2248 P(1)_{i+1} (1 \u2264 i \u2264 n - 1)."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-4",
              "text": "Pairwise local fitness functions are defined accordingly."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-11-Sentence-1",
              "text": "Definition 5 (local co-occurrence fitness). Let r be an OP rule of the form (2)."
            },
            {
              "iri": "Section-6-Paragraph-11-Sentence-2",
              "text": "Then:"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-12",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-12-Sentence-1",
              "text": "f^0_loc (P_t, P_1) = sim(P(2)_t , P(1)_1)"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-2",
              "text": "f^i_loc (P_i, P_{i+1}) = sim(P(2)_i , P(1)_{i+1}) for 1 \u2264 i \u2264 n - 1."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-13",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-13-Sentence-1",
              "text": "The similarity function sim is defined by the Frobenius norm, i.e., for two matrices M_1 and M_2:"
            },
            {
              "iri": "Section-6-Paragraph-13-Sentence-2",
              "text": "sim(M_1, M_2) = exp(-||M_1 - M_2||_F)."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-14",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-14-Sentence-1",
              "text": "Co-occurrence for the whole rule can then be obtained by aggregating the pairwise local occurrences as follows."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-15",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-15-Sentence-1",
              "text": "Definition 6 (co-occurrence fitness). Let r be an open path rule of the form (2)."
            },
            {
              "iri": "Section-6-Paragraph-15-Sentence-2",
              "text": "Then:"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-16",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-16-Sentence-1",
              "text": "f_coo (r) = f^0_loc (P_t, P_1) + \u2211_{i=1}^{n-1} f^i_loc (P_i, P_{i+1})."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-17",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-17-Sentence-1",
              "text": "By using argument embeddings built from entity embeddings, the co-occurrence captures the weight of connections of sequential entities along the path."
            },
            {
              "iri": "Section-6-Paragraph-17-Sentence-2",
              "text": "Next, we introduce an alternative quality estimation function that uses both entity and predicate embeddings, called open path fitness, f_op (.)."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-18",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-18-Sentence-1",
              "text": "4.1.2. Open Path Fitness Function"
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-2",
              "text": "An OP rule acts to connect entities satisfying the subject argument of the head predicate, P_t, to entities forming the object argument of the tail predicate, P_n, along a path of entities that satisfy a chain of predicates in the rule."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-3",
              "text": "The product of the predicate embeddings along the path acts as a low-dimensional representation of the latent features of a path that connects its endpoints, and therefore represents the overall rule from the perspective of the predicates."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-4",
              "text": "However, to anchor the rule, we also need to account for the entities that satisfy the free variables at the endpoints, as does the RESCAL evaluation function for a single predicate."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-5",
              "text": "Conveniently, our argument embeddings for the subject argument of P_t and the object argument of P_n give us what we need by averaging the embeddings of all the entities at the endpoints."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-6",
              "text": "Based on this observation, we propose the open path fitness function to estimate the rule quality."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-7",
              "text": "Definition 7 (open path fitness)."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-8",
              "text": "Let r be an OP rule of the form (2)."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-9",
              "text": "Then the open path fitness for r is defined by the product:"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-19",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-19-Sentence-1",
              "text": "f_op (r) = P(1)^T P_t P_1 P_2 ... P_n P(2)_n."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-20",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-20-Sentence-1",
              "text": "There is no clear reason to prefer either of the fitness functions, f_op(.) or f_coo(.), over the other, although the first focuses on entities and the second on predicates."
            },
            {
              "iri": "Section-6-Paragraph-20-Sentence-2",
              "text": "Experimentally, we find that they complement each other, and that a hybrid approach is preferable (see Table 3)."
            },
            {
              "iri": "Section-6-Paragraph-20-Sentence-3",
              "text": "In the hybrid setting, we use both fitness functions to pick the top candidate rules."
            },
            {
              "iri": "Section-6-Paragraph-20-Sentence-4",
              "text": "Hence, for each fitness function, based on fitness values of rules, we pick up only the top t% of rules, where t% is a learning system parameter that is going to be tuned."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-7",
      "subtitle": "OP Rule Learning: Evaluating Potential Rules through Matrices and Vectors",
      "paragraphs": [
        {
          "iri": "Section-7-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-1-Sentence-1",
              "text": "Now we are ready to explain the evaluation method, Evaluation() in Algorithm 1."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-2",
              "text": "We assess the candidate rules based on the sampled KG first for efficiency, then pick the rules with OPsupp(r) \u2265 1."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-3",
              "text": "These rules also may include a significant number of obsolete and low-quality rules, so we perform a second collection based on the two metrics, OPSC and OPHC, assessed over the whole KG."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-4",
              "text": "We show in the following how to efficiently compute the measures using an adjacency matrix representation of the KG."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-2-Sentence-1",
              "text": "To compute OPSC and OPHC, a method is required to check the satisfiability of body atoms of all candidate rules."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-2",
              "text": "In other words, we need to find all KG facts that can trigger a candidate rule."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-3",
              "text": "Let KG, K = (E,F) with E= {e1,...,en} be the set of all entities and P = {P1,...,Pm} be the set of all predicates in F."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-4",
              "text": "Like RESCAL, we represent K as a set of square n \u00d7 n adjacency matrices by defining the function A."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-5",
              "text": "Specifically, the (i, j)th element A(Pk)[i,j] = 1 if the fact Pk(ei, ej) is in F; and 0 otherwise."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-6",
              "text": "Thus, A(Pk) is a matrix of binary values and the set {A(Pk) : k \u2208 {1,...,m}} represents K."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-3-Sentence-1",
              "text": "We illustrate the method for computing OPSC and OPHC through an example."
            },
            {
              "iri": "Section-7-Paragraph-3-Sentence-2",
              "text": "Consider the OP rule: r: P1(x,z0) \u2190 P2(z0,z1) \u2227 P3(z1,y) and KG."
            },
            {
              "iri": "Section-7-Paragraph-3-Sentence-3",
              "text": "E = {e1,e2,e3} and F = {P1(e1,e2), P1(e2,e1), P1(e2,e3), P1(e3,e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-4-Sentence-1",
              "text": "For OPSC and OPHC, we need to calculate:"
            },
            {
              "iri": "Section-7-Paragraph-4-Sentence-2",
              "text": "(1) The number of entities that satisfy the head of the rule in the second argument position."
            },
            {
              "iri": "Section-7-Paragraph-4-Sentence-3",
              "text": "(2) The number of entities that satisfy the body of a rule in the first argument position."
            },
            {
              "iri": "Section-7-Paragraph-4-Sentence-4",
              "text": "(3) The number of entities that join the head of a rule to its body."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-5-Sentence-1",
              "text": "For (1), to find distinct entities, we sum each column of the adjacency matrix and transpose to obtain the vector v(2)(P1)."
            },
            {
              "iri": "Section-7-Paragraph-5-Sentence-2",
              "text": "Each non-zero element of this vector indicates a satisfying entity, and the number of distinct entities is given by counting the number of non-zero elements in it."
            },
            {
              "iri": "Section-7-Paragraph-5-Sentence-3",
              "text": "Formally, the satisfying entities are {ei : \u2211j A(P1)[i,j] > 0 and 1 \u2264 j \u2264 n}, and the cardinality is the number we need."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-6-Sentence-1",
              "text": "For (2), the pairs (e, e') satisfying the body are connected by the path P1, P2, ..., Pm."
            },
            {
              "iri": "Section-7-Paragraph-6-Sentence-2",
              "text": "This can be obtained directly from the matrix product B = A(P1) A(P2) ... A(Pm), with elements having a non-zero value."
            },
            {
              "iri": "Section-7-Paragraph-6-Sentence-3",
              "text": "To find distinct entities, we sum each row corresponding to each value for the first argument to obtain the vector v(1)(B)."
            },
            {
              "iri": "Section-7-Paragraph-6-Sentence-4",
              "text": "Each non-zero element of this vector indicates a satisfying entity, and the number of distinct entities is given by counting the number of non-zero elements in v(1)(B)."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-7-Sentence-1",
              "text": "For the example, we have:"
            },
            {
              "iri": "Section-7-Paragraph-7-Sentence-2",
              "text": "B = A(P1) A(P2) = | 0 0 2 | | 0 2 1 | | 1 0 0 |."
            },
            {
              "iri": "Section-7-Paragraph-7-Sentence-3",
              "text": "v(1)(B) = | 0 | | 3 | | 1 |."
            },
            {
              "iri": "Section-7-Paragraph-7-Sentence-4",
              "text": "With satisfying entities e2 and e3 and a count of 2."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-8-Sentence-1",
              "text": "Computing (3) is now straightforward."
            },
            {
              "iri": "Section-7-Paragraph-8-Sentence-2",
              "text": "We have that the row index of non-zero elements of v(2)(P1) indicate entities that satisfy the second argument of the head."
            },
            {
              "iri": "Section-7-Paragraph-8-Sentence-3",
              "text": "Similarly, the row index of non-zero elements of v(1)(B) indicate entities that satisfy the first argument of the body."
            },
            {
              "iri": "Section-7-Paragraph-8-Sentence-4",
              "text": "Therefore, we can find the entities that satisfy both of these conditions by pairwise multiplication."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-9-Sentence-1",
              "text": "The entities we need are {ei : (v(2)(P1)[i] \u00d7 v(1)(A(P1) A(P2) ... A(Pm))[i]) > 0 and 1 \u2264 i \u2264 n}."
            },
            {
              "iri": "Section-7-Paragraph-9-Sentence-2",
              "text": "The count is the cardinality of this set."
            },
            {
              "iri": "Section-7-Paragraph-9-Sentence-3",
              "text": "For the example, we have only e3 in the set with a count of 1."
            },
            {
              "iri": "Section-7-Paragraph-9-Sentence-4",
              "text": "Hence, OPsupp(r) = 1."
            },
            {
              "iri": "Section-7-Paragraph-9-Sentence-5",
              "text": "From (1) and (2), we can easily obtain OPHC(r) = 1/1 and OPSC(r) = 1/2."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-10-Sentence-1",
              "text": "Minimum thresholds for OPSC and OPHC are supplied to Algorithm 1 at runtime, and Evaluation() discards failing rules."
            },
            {
              "iri": "Section-7-Paragraph-10-Sentence-2",
              "text": "The remaining rules are the final result of the algorithm."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-11-Sentence-1",
              "text": "In summary, we introduce the following novel components to mine OP rules from KGs:"
            },
            {
              "iri": "Section-7-Paragraph-11-Sentence-2",
              "text": "1. Proposing OP rules: We propose a fragment of function-free Horn rules that allows us to mine rules with free variables while keeping the complexity of the learning phase manageable."
            },
            {
              "iri": "Section-7-Paragraph-11-Sentence-3",
              "text": "2. Learning OP rules based on an embedding representation: We introduce a novel method to rapidly estimate the quality of each candidate rule for early pruning, based on its embedding representation."
            },
            {
              "iri": "Section-7-Paragraph-11-Sentence-4",
              "text": "3. Evaluating OP rules: We propose an efficient method to exactly compute the quality of each rule by matrix and vector operations."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-8",
      "subtitle": "Generating relevant queries for Active Knowledge Graph Completion",
      "paragraphs": [
        {
          "iri": "Section-8-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-1-Sentence-1",
              "text": "As discussed, we can now mine OP rules with measurable qualities from KGs."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-2",
              "text": "In this section, we show how the mined rules can be used for AKGC."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-3",
              "text": "We use OP rules to generate relevant questions which can be posed to an oracle or a human expert, just as for other active learning settings."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-4",
              "text": "In our case, an automated link predictor makes a convenient oracle."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-2-Sentence-1",
              "text": "Given predicate P, the AKGC task is to generate queries of the form P(?, e') and P(e, ?) for entities e and e' occurring in the KG."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-2",
              "text": "To find relevant queries, we implement an inference module that derives queries from KG facts together with OP rules found by Algorithm 1."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-3",
              "text": "We first use OPRL to learn OP rules about P in the head and then use the rules to induce queries of the form P(?, e') and P(e, ?)."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-3-Sentence-1",
              "text": "For an OP rule of the form (2), if an instance of the rule body such as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') exists in the KG, then the existence of an instance of the head with one free variable, viz the query P_t(?, e), can be induced with a quantifiable confidence."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-4-Sentence-1",
              "text": "We define the confidence degree (CD) of such a query to be the maximum OPSC of all the rules inducing the query, thereby giving no weight to redundant rules that induce the same query."
            },
            {
              "iri": "Section-8-Paragraph-4-Sentence-2",
              "text": "Formally, the CD of q is defined as follows for a query q = P(?, e') or q = P(e, ?) and the collection of rules R that can induce q from the given KG:"
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-5-Sentence-1",
              "text": "CD(q) = max(OPSC(r))"
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-6-Sentence-1",
              "text": "In this way, we go beyond link prediction to infer relevant queries for missing links, that is, Active KGC."
            },
            {
              "iri": "Section-8-Paragraph-6-Sentence-2",
              "text": "Conventionally, a link predictor is given a query derived from the hold-out test data to predict facts, and then uses the test data to evaluate its prediction performance."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-7-Sentence-1",
              "text": "This begs the question, whence does the query arise in an industrial application of a link prediction model?"
            },
            {
              "iri": "Section-8-Paragraph-7-Sentence-2",
              "text": "You have a KG and a high-performing link-predicting model built for the KG, but do you continue to hold out facts from your KG in order to generate queries that predict those same facts: facts that are missing only because you need them to generate queries?"
            },
            {
              "iri": "Section-8-Paragraph-7-Sentence-3",
              "text": "Or do you instead generate every possible query with no indication of comparative value to the KG?"
            },
            {
              "iri": "Section-8-Paragraph-7-Sentence-4",
              "text": "Or do you generate queries with a preference given to those with a higher probability in the KG?"
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-8-Sentence-1",
              "text": "For AKGC, we need only a named predicate (or all predicates) and use OP rules mined over training data to induce the most relevant queries over the full KB."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-9-Sentence-1",
              "text": "For example, assume we have the following facts about the target predicate, P_1 in the test data:"
            },
            {
              "iri": "Section-8-Paragraph-9-Sentence-2",
              "text": "{P_1(e_1, e_2), P_1(e_1, e_3), P_1(e_4, e_5), P_1(e_8, e_7), P_1(e_9, e_7)}."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-10-Sentence-1",
              "text": "Possible queries about this set of facts are: {P_1(e_1, ?), P_1(?, e_2), P_1(?, e_3), P_1(e_4, ?), P_1(?, e_5), P_1(e_8, ?), P_1(e_9, ?), P_1(?, e_7)}."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-11-Sentence-1",
              "text": "While link predictors try to answer this set of queries, in our AGKGC we mine OP rules to predict the queries themselves."
            },
            {
              "iri": "Section-8-Paragraph-11-Sentence-2",
              "text": "The number of induced queries is upper-bounded by twice the number of facts since different facts (P_1(e_8, e_7) and P_1(e_9, e_7)) can derive the same query (P_1(?, e_7))."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-9",
      "subtitle": "Experiments",
      "paragraphs": [
        {
          "iri": "Section-9-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-1-Sentence-1",
              "text": "We conducted two sets of experiments to evaluate OPRL."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-2-Sentence-1",
              "text": "Knowledge graph completion approaches are usually evaluated by link prediction, for which relevant questions are provided by human experimenters."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-2",
              "text": "The link predictors answer each query with a sequence of ranked entities."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-3",
              "text": "In this paper, we are concerned with asking relevant questions rather than answering such questions."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-4",
              "text": "Our generated queries can be used in combination with a link predictor to infer new facts, but we do not use any specific link predictor to answer our questions in this paper."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-3-Sentence-1",
              "text": "This is because link predictors vary in performance and are not designed to answer a query with one correct answer, but instead a ranked sequence of answers where the top-ranked alone is not considered significant."
            },
            {
              "iri": "Section-9-Paragraph-3-Sentence-2",
              "text": "To evaluate our system, we assume a perfect link predictor that can answer any question with a correct answer when such an answer exists."
            },
            {
              "iri": "Section-9-Paragraph-3-Sentence-3",
              "text": "By this, the problem of knowledge graph completion is reduced to the problem of finding relevant questions."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-4-Sentence-1",
              "text": "We can evaluate the relevancy of a question based on the test facts."
            },
            {
              "iri": "Section-9-Paragraph-4-Sentence-2",
              "text": "If we have the answer to a question in the test set, it means the question is relevant because it uncovers some missing fact, and if we have a perfect link predictor, the question can be fed to it, and the missing fact can be retrieved."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-5-Sentence-1",
              "text": "Since our proposed system is the first method to learn rules to generate relevant questions automatically, we have no benchmark solution with which to compare."
            },
            {
              "iri": "Section-9-Paragraph-5-Sentence-2",
              "text": "We construct two baselines with which to compare: a probabilistic-based query generator and a rule-based link predictor whose output is modified to produce questions."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-6-Sentence-1",
              "text": "In our experiments, we demonstrate:"
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-7-Sentence-1",
              "text": "1. OPRL can mine quality OP rules from a range of KGs."
            },
            {
              "iri": "Section-9-Paragraph-7-Sentence-2",
              "text": "OPRL can mine massive KGs in a reasonable time."
            },
            {
              "iri": "Section-9-Paragraph-7-Sentence-3",
              "text": "Our novel hybrid fitness function outperforms the fitness function adapted from RLVLR."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-8-Sentence-1",
              "text": "2. Queries generated from OPRL's rules are relevant with good recall and precision in multiple KGs."
            },
            {
              "iri": "Section-9-Paragraph-8-Sentence-2",
              "text": "They far outperform a probabilistic baseline."
            },
            {
              "iri": "Section-9-Paragraph-8-Sentence-3",
              "text": "They also outperform queries generated by a modified leading-edge link predictor."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-9-Sentence-1",
              "text": "We conducted experiments over the four benchmark datasets given in Table 1."
            },
            {
              "iri": "Section-9-Paragraph-9-Sentence-2",
              "text": "FB15K SELECTED (which we call FB15KSE) is derived from Freebase and is widely adopted for link prediction."
            },
            {
              "iri": "Section-9-Paragraph-9-Sentence-3",
              "text": "YAGO2 core is often used for rule mining."
            },
            {
              "iri": "Section-9-Paragraph-9-Sentence-4",
              "text": "Wikidata is a multilingual, collaboratively-created KG to manage the factual information of a popular online encyclopedia."
            },
            {
              "iri": "Section-9-Paragraph-9-Sentence-5",
              "text": "We use a copy dated December 2014 provided in AMIE+."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-10-Sentence-1",
              "text": "Poker is a synthetic dataset adapted by the authors from the classic version to be a correct and complete KG for experiments."
            },
            {
              "iri": "Section-9-Paragraph-10-Sentence-2",
              "text": "Each poker hand consists of 5 playing cards drawn from a reduced deck with 6 ranks and 2 suits."
            },
            {
              "iri": "Section-9-Paragraph-10-Sentence-3",
              "text": "Each card is described using two attributes (suit and rank), for a total of 10 predictive attributes."
            },
            {
              "iri": "Section-9-Paragraph-10-Sentence-4",
              "text": "There is one Class attribute that describes the 'Poker Hand'."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-11-Sentence-1",
              "text": "All experiments were conducted on an Intel Xeon CPU E5-4620v2 @ 2.60 GHz, 66 GB RAM, and running CentOS 7."
            },
            {
              "iri": "Section-9-Paragraph-11-Sentence-2",
              "text": "For sampling, we use similar parameters to those proposed in RLVLR."
            },
            {
              "iri": "Section-9-Paragraph-11-Sentence-3",
              "text": "We set the maximum size of each sample to 800 entities."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-12",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-12-Sentence-1",
              "text": "We use RESCAL to generate embeddings with the vector size set to 100."
            },
            {
              "iri": "Section-9-Paragraph-12-Sentence-2",
              "text": "We retain the top 10% of the OP rules according to the fitness function."
            },
            {
              "iri": "Section-9-Paragraph-12-Sentence-3",
              "text": "The number of possible rules grows significantly with increasing length, as does the runtime for mining."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-13",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-13-Sentence-1",
              "text": "We use a maximum rule length of 4 for PathFinding() and we allow the extension to 6 by IncPathFinding()."
            },
            {
              "iri": "Section-9-Paragraph-13-Sentence-2",
              "text": "These parameters are the optimum obtained by tuning."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-10",
      "subtitle": "Experiments: OP Rule Learning",
      "paragraphs": [
        {
          "iri": "Section-10-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-1-Sentence-1",
              "text": "First, we assess how well OPRL finds high quality rules."
            },
            {
              "iri": "Section-10-Paragraph-1-Sentence-2",
              "text": "We are not aware of other OP rule learners with which to compare, but we do compare the performance of fitness functions proposed for OPRL."
            },
            {
              "iri": "Section-10-Paragraph-1-Sentence-3",
              "text": "The quality of rules is reported based on their OPSC/OPHC scores calculated against the full benchmark KGs, not only the samples."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-2-Sentence-1",
              "text": "Later, we will use the mined rules for generating queries, so we need some hold-out facts for query evaluation."
            },
            {
              "iri": "Section-10-Paragraph-2-Sentence-2",
              "text": "For FB15KSE, test and training sets are available."
            },
            {
              "iri": "Section-10-Paragraph-2-Sentence-3",
              "text": "For Poker and YAGO2 core, we can find no previously prepared data, so we randomly partition 90% for training and 10% for testing."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-3-Sentence-1",
              "text": "Table 2 shows the average numbers of quality rules mined for all predicates in the respective KGs."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-2",
              "text": "Wikidata is an exception: only 50 randomly selected predicates are targeted."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-3",
              "text": "Table 2 shows run times in hours, averaged over the targets."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-4",
              "text": "Similarly, only rules with quality OPSC > 0.1 and OPHC > 0.01 are included."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-5",
              "text": "The average number of accurate rules, i.e., the rules with OPSC > 0.8, are given as #Arules."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-4-Sentence-1",
              "text": "Figure 1 shows the distribution of mined rules by OPSC and length."
            },
            {
              "iri": "Section-10-Paragraph-4-Sentence-2",
              "text": "We can see that OPRL can learn plausible rules over popular benchmark KGs of over eight million facts and four million entities in less than two hours."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-5-Sentence-1",
              "text": "For illustration, we present the following two OP rules which are mined from Wikidata, with their OPSC and OPHC values respectively."
            },
            {
              "iri": "Section-10-Paragraph-5-Sentence-2",
              "text": "The first rule states that if the spouse of a person (z) is known, it is likely that the place of birth of that person is also known."
            },
            {
              "iri": "Section-10-Paragraph-5-Sentence-3",
              "text": "Thus, if the body of each rule is instantiated but there is no fact to fully instantiate the head of the rule, a relevant query is induced."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-6-Sentence-1",
              "text": "The second rule states that if there is a region (z) in a country (w) that is known to the KG and the continent of that country (y) is also known, it is likely that the region\u2019s highest point (x) is known."
            },
            {
              "iri": "Section-10-Paragraph-6-Sentence-2",
              "text": "The third rule states that if there is a TV program (z) that has a participant (w) that has an occupation (y), then it is likely that the presenter of the program (x) is known."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-7-Sentence-1",
              "text": "0.50, 0.02 placeOfBirth(z, x) \u2190 spouse(z, y)."
            },
            {
              "iri": "Section-10-Paragraph-7-Sentence-2",
              "text": "0.19, 0.45 highestPoint(z, x) \u2190 country\u207b\u00b9(z, w) \u2227 continent(w, y)."
            },
            {
              "iri": "Section-10-Paragraph-7-Sentence-3",
              "text": "0.59, 0.15 presenter(z, x) \u2190 participant(z, w) \u2227 occupation(w, y)."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-8-Sentence-1",
              "text": "We conducted an experiment to assess the utility of our fitness functions, using random.org to select 20 random predicates from FB15KSE."
            },
            {
              "iri": "Section-10-Paragraph-8-Sentence-2",
              "text": "The results summarized in Table 3 show that a hybrid fitness function that combines both f_co(.) and f_op(.) is capable of mining more quality rules than either of these functions individually."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-11",
      "subtitle": "Experiments: Query Generation for Active Knowledge Graph Completion",
      "paragraphs": [
        {
          "iri": "Section-11-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-1-Sentence-1",
              "text": "Our second set of experiments assesses the relevance of queries induced from OPRL-mined rules."
            },
            {
              "iri": "Section-11-Paragraph-1-Sentence-2",
              "text": "For this purpose, we consider that a query with an answer present in the test set is a relevant query, having previously filtered out queries that can be answered from the training set."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-2-Sentence-1",
              "text": "In the absence of any comparative system for query generation, we developed three baseline query sets of the same cardinality as those generated from OPRL, called Prand."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-2",
              "text": "Prand queries are generated by first selecting a bag of predicates, with each selected randomly with probability of its proportion in the test set."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-3",
              "text": "Then, for half of the instances of each predicate, a subject (respectively object) entity is assigned by random selection of an entity with probability of its proportion as a subject (respectively object) of any predicate in the test set."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-4",
              "text": "The object (respectively subject) position is free (denoted '?')."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-3-Sentence-1",
              "text": "We assess relevance over three KGs but not Wikidata because there are no public test and train sets, and the baseline query generator Prand cannot handle the massive size."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-4-Sentence-1",
              "text": "Table 4 shows average precision, recall, and F1, where a query is counted as true if it has an instance fact in the test data and false otherwise."
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-2",
              "text": "The queries were induced by OPRL rules learned over the training data with quality thresholds OPSC > 0.8 and OPHC > 0.01."
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-3",
              "text": "We see that OPRL's performance exceeds Prand on FB15KSE, YAGO2 core, and Poker by factors of approximately 6, 2, and 9, respectively."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-5-Sentence-1",
              "text": "We suspect that YAGO2 induces fewer rules and has much weaker performance because it has significantly fewer repeatable patterns."
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-2",
              "text": "This could be because it is quite correctly weakly structured or because it has significantly more missing facts."
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-3",
              "text": "If the latter, then the validity of our test set is questionable because genuinely missing facts will be treated as false instead of true, thereby incorrectly punishing precision and recall."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-6-Sentence-1",
              "text": "Supporting this explanation, we see that for synthetic Poker, which is naturally highly structured, and where all the missing facts are present in the test set, we have very close to 100% precision and excellent recall."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-2",
              "text": "Very high precision means our queries are highly relevant as they ask questions for which the answer facts are missing from the training set."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-3",
              "text": "Still, even for Poker, recall shows that there are relevant queries that were not generated, possibly due to the limitations of our OP language or to useful rules being discarded by the fitting function or the OPSC/OPHC thresholds."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-7-Sentence-1",
              "text": "Next, we consider the sensitivity of the performance of OPRL queries to the OPSC threshold by varying it from 0.1 to 1, learning the previously selected predicates for FB15KSE (Table 3)."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-2",
              "text": "In Figure 2, we see that increasing OPSC has the expected behavior of decreasing recall as poorer rules get through, and increasing precision as more missing facts are found."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-3",
              "text": "Observing a sharp anomaly where the OPSC threshold is 0.9, we suspect it might be caused by the incompleteness of FB15KSE (i.e., the generated queries may be valid but there is no answer in the test set)."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-4",
              "text": "We repeated the experiment on the complete Poker KG and the anomaly is indeed absent as expected."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-8-Sentence-1",
              "text": "Finally, we compare OPRL queries with the state-of-the-art rule-based link predictor, RLvLR."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-2",
              "text": "Rule learners predict facts, not queries, so we cannot compare them directly."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-3",
              "text": "Instead, we translate each fact generated by RLvLR to two queries, by freeing the subject and object entities respectively."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-4",
              "text": "However, while generating facts, RLvLR uses a Noisy-OR operator to aggregate high-performing rules about a target predicate."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-5",
              "text": "This aggregation is not compatible with the query generation task where only the top prediction matters."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-6",
              "text": "Consequently, experiments show that RLvLR with Noisy-OR performs very poorly for query generation."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-7",
              "text": "To more fairly compare, we changed the aggregation in RLvLR to use a Max operator instead of Noisy-OR and call this RLvLR*."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-9-Sentence-1",
              "text": "We used 20 randomly selected predicates from FB15KSE in the query generation task."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-2",
              "text": "Since RLvLR* and OPRL use the very similar minimum SC and minimum OPSC respectively, we use a ROC (Receiver Operating Characteristic) curve to compare the outputs of the two systems."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-3",
              "text": "We plot the query performance of OPRL and RLvLR* as ROC curves in Figure 3 using minimum OPSC and minimum SC parameters as the ordering criteria."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-10-Sentence-1",
              "text": "For OPRL, we vary the minimum OPSC from 1 to 0.5 in 4 decrements and get a False Positive Rate of almost 50%."
            },
            {
              "iri": "Section-11-Paragraph-10-Sentence-2",
              "text": "For RLvLR*, we vary SC from 1 to 0.1 (the minimum and default) in 4 decrements to achieve the same False Positive Rate."
            },
            {
              "iri": "Section-11-Paragraph-10-Sentence-3",
              "text": "Since SC and OPSC are similar measures, we say OPRL finds higher-confidence queries than RLvLR* does."
            },
            {
              "iri": "Section-11-Paragraph-10-Sentence-4",
              "text": "In Figure 3, the partial area under the curve (AUC) of RLvLR* is 0.23 while the partial AUC of OPRL is 0.30, showing OPRL outperforms RLvLR* on query generation by 30%."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-12",
      "subtitle": "Related Work and Discussion",
      "paragraphs": [
        {
          "iri": "Section-12-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-1-Sentence-1",
              "text": "Previous work in rule learning from a KG is closely related to ours, but it is generally focused on Closed rules."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-2",
              "text": "As discussed, Closed rules are less expressive than our OP rules and have a different application."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-3",
              "text": "While OP rule learners aim to generate new facts, we aim to generate relevant queries for new facts."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-4",
              "text": "There are some preliminary attempts towards learning existential rules from knowledge graphs."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-5",
              "text": "In this short paper, the authors outline several directions for future research to handle existential rule learning, although they do not propose a learning system."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-2-Sentence-1",
              "text": "We are unaware of any previous approach which produces relevant queries for link predictors in the knowledge graph completion process."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-2",
              "text": "However, CHAI filters facts before supplying them to a link predictor, aiming to improve the prediction by focusing its attention on the more probable facts and discarding irrelevant ones."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-3",
              "text": "It does not generate queries as OPRL does, and is highly dependent on the initial set of facts which it aims to filter."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-13",
      "subtitle": "Conclusion",
      "paragraphs": [
        {
          "iri": "Section-13-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-1-Sentence-1",
              "text": "In this paper, we proposed a method for learning rules with free variables from Knowledge Graphs (KGs)."
            },
            {
              "iri": "Section-13-Paragraph-1-Sentence-2",
              "text": "Such rules can be used to generate queries soliciting missing facts."
            },
            {
              "iri": "Section-13-Paragraph-1-Sentence-3",
              "text": "Notably, the queries could be fed to link predictors, enabling a fully automated framework for KG completion."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-2-Sentence-1",
              "text": "We introduced the following novel components:"
            },
            {
              "iri": "Section-13-Paragraph-2-Sentence-2",
              "text": "(1) We propose OP rules, a fragment of function-free Horn rules, which allows us to mine rules with free variables while keeping the complexity of the learning phase manageable."
            },
            {
              "iri": "Section-13-Paragraph-2-Sentence-3",
              "text": "(2) We introduced a novel method to estimate the quality of each candidate rule based on its embedding representation."
            },
            {
              "iri": "Section-13-Paragraph-2-Sentence-4",
              "text": "(3) We proposed an efficient method to evaluate OP rules by exactly computing the quality of each rule using matrix and vector operations."
            },
            {
              "iri": "Section-13-Paragraph-2-Sentence-5",
              "text": "(4) We showed how OP rules can be used to generate highly relevant queries for missing links, introducing the first work on active knowledge graph completion."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-3-Sentence-1",
              "text": "Our experiments show that OPRL can learn rules for KGs with varying sizes and degrees of incompleteness."
            },
            {
              "iri": "Section-13-Paragraph-3-Sentence-2",
              "text": "We demonstrate the usefulness of the mined rules by applying them to three different KGs to infer relevant queries."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-4-Sentence-1",
              "text": "Our proposed method outperforms the baselines and shows its strength, especially in the complete KG, Poker, with 0.98 precision."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-5-Sentence-1",
              "text": "There remain some intriguing challenges for future work."
            },
            {
              "iri": "Section-13-Paragraph-5-Sentence-2",
              "text": "We plan to extend OPRL to learn rules with more complex shapes, such as stars, and with numerical attributes."
            },
            {
              "iri": "Section-13-Paragraph-5-Sentence-3",
              "text": "We plan to pair OPRL with a link predictor to form a unified framework for fully automated KG completion."
            },
            {
              "iri": "Section-13-Paragraph-5-Sentence-4",
              "text": "We will also trial OPRL in a setting for human-curated maintenance on an enterprise KG."
            }
          ]
        }
      ]
    }
  ],
  "summary": "Enterprise and public Knowledge Graphs (KGs) are often incomplete, and while traditional rule-based methods learn closed rules, we introduce Open Path (OP) rules, which are existentially constrained. Our novel algorithm, OPRL, learns OP rules and generates relevant queries for KG completion, even in the absence of closed rules. To enhance scalability, we propose an embedding-based fitness function and efficient vector computation for assessing rule quality. Evaluations on Freebase, YAGO2, Wikidata, and a synthetic Poker KG show that OPRL can mine hundreds of accurate rules from KGs with up to 8 million facts, achieving query precision of 98% and recall of 62%, marking a significant advancement in active knowledge graph completion.\n\nKnowledge Graphs (KGs) are effective for modeling large amounts of weakly-structured data, allowing flexible information addition unlike relational databases. However, KGs often lack comprehensive coverage of entities and relationships, similar to Wikipedia's uneven topic coverage. Techniques for KG completion and rule learning have been developed to automate curation, using models to predict missing facts. This paper introduces a novel approach to rule-based KG completion that identifies unknown unknowns by learning open path rules (OP) to generate open-ended questions instead of specific facts. OP rules can infer missing facts even when entities are absent from the KG, facilitating the introduction of new entities. The proposed method complements traditional link prediction by generating relevant queries needed for KG completion. The paper presents an algorithm, OPRL, for learning OP rules and demonstrates its effectiveness in generating queries that can help complete KGs. The structure of the paper includes foundational concepts, the OP rule formalism, the OPRL method, query generation, and related literature.\n\nRule-Based KG Completion involves entities as identifiers for objects and facts as RDF triples relating these entities. Knowledge graphs (KGs) consist of entities and facts. Rule learning systems like RLVLR and ScaleKB use closed path (CP) rules, which have a head and a body, to infer new facts from existing ones in the KG. The effectiveness of rules is measured by support, standard confidence (SC), and head coverage (HC). Representation learning methods model KGs for tasks like link prediction by embedding entities and predicates into a latent space. Two main types of embeddings are translation-based and compositional embeddings. RESCAL, a compositional-based learner, captures complex interactions among entities and predicates, making it suitable for mining operational rules due to its effective heuristic function.\n\nIn our active knowledge graph completion task, we mine open path (OP) rules, which take the form: P_t(x, z_0) \u2190 P_1(z_0, z_1) \u2227 P_2(z_1, z_2) \u2227 ... \u2227 P_n(z_{n-1}, y). OP rules differ from closed path (CP) rules as they can be linear and are more expressive, allowing instantiations not possible with CP rules. From an OP rule, we can only infer questions, not facts. For example, the rule citizenOf(x, t) \u2190 livesIn(x, z) implies that if x lives in z, then x is a citizen of somewhere (t). To evaluate OP rules, we define open path standard confidence (OPSC) and open path head coverage (OPHC). The support degree of an OP rule is calculated based on the entities satisfying its body and head. For instance, for the rule P_1(x, z_0) \u2190 P_2(z_0, z_1) \u2227 P_3(z_1, y), if 3 entities satisfy the body and 5 satisfy the head, we find OPsupp = 3, OPSC = 3/7, and OPHC = 3/5.\n\nThe goal is to mine a Knowledge Graph (KG) for high-quality OP rules related to a target predicate P. We enhance the RLVLR architecture by introducing a novel fitness function to assess OP rule quality based on predicate embeddings and a vector computation method for evaluating these rules against large KGs. Our OP rule miner, OPRL, takes user-defined parameters for rule length and quality scores. We first reduce the KG size using a sampling algorithm to focus on entities relevant to P, creating a reduced KG K'. We compute embeddings for predicates and arguments to construct a fitness function that improves scalability. The PathFinding() method generates OP rules for P and its inverse, while IncPathFinding() extends top-ranked rules. We ensure no redundancy in mined rules and evaluate them using OPSC and OPHC metrics, employing efficient matrix and vector multiplication for scalability.\n\nTo manage potential rules in PathFinding(), we filter low-quality candidates using two fitness functions: co-occurrence and open path, based on embedding representations. The co-occurrence function evaluates predicates by shared entities, while the open path function connects them through predicate chains. CP rules are simpler to compute than OP rules due to fewer variables. Argument embeddings are averaged from subject and object entities. Co-occurrence fitness for OP rules is defined through local pairwise functions, and open path fitness uses the product of predicate embeddings. Both functions are complementary, and a hybrid approach selects the top candidate rules.\n\nThe Evaluation() method in Algorithm 1 assesses candidate rules from a sampled KG for efficiency, selecting those with OPsupp(r) \u2265 1 and filtering out obsolete rules using OPSC and OPHC metrics. The KG is represented as square adjacency matrices for efficient computation, checking satisfiability of body atoms to identify KG facts that trigger rules. Minimum thresholds for OPSC and OPHC are set at runtime, discarding non-compliant rules. The method introduces components for mining OP rules, including function-free Horn rules and a rapid rule quality estimation method.\n\nWe can mine OP rules from KGs to generate queries for Active Knowledge Graph Completion (AKGC). The task involves creating queries like P(?, e') and P(e, ?) using predicate P. An inference module derives these queries from KG facts and OP rules learned via OPRL, with the confidence degree (CD) defined as the maximum OPSC of the inducing rules. The challenge in industrial applications is generating valuable queries without hold-out facts. For AKGC, we use OP rules over training data to induce relevant queries across the knowledge base, focusing on mining OP rules to predict queries rather than relying solely on link predictors.\n\nWe conducted experiments to evaluate OPRL, focusing on generating relevant questions for knowledge graph completion rather than answering them. Our approach assumes a perfect link predictor to assess question relevancy based on test facts. As the first method to automatically generate relevant questions, we compared OPRL against two baselines: a probabilistic query generator and a modified rule-based link predictor. Our findings show that OPRL effectively mines quality OP rules from various KGs, demonstrating superior recall and precision in generated queries compared to the baselines. We tested our system on four benchmark datasets, including FB15K SELECTED and YAGO2 core, and utilized a synthetic poker dataset for experiments. All tests were performed on a high-performance server, with specific parameters set for rule mining and embeddings.\n\nThe study evaluates the effectiveness of OPRL in discovering high-quality rules, comparing its performance with proposed fitness functions. Rule quality is assessed using OPSC/OPHC scores against full benchmark KGs. For query evaluation, hold-out facts are needed; FB15KSE has available test and training sets, while Poker and YAGO2 core data is randomly split 90% for training and 10% for testing. Table 2 presents the average number of quality rules mined across predicates, with Wikidata being an exception. OPRL successfully learns plausible rules from large KGs in under two hours. Examples of mined rules from Wikidata illustrate their utility. An experiment using random predicates from FB15KSE indicates that a hybrid fitness function outperforms individual functions in mining quality rules.\n\nThe experiments evaluate the relevance of queries generated from OPRL-mined rules, considering a query relevant if it has an answer in the test set. Three baseline query sets, Prand, were created for comparison. OPRL outperformed Prand on FB15KSE, YAGO2 core, and Poker by factors of approximately 6, 2, and 9, respectively. YAGO2's weaker performance is attributed to fewer repeatable patterns and potentially more missing facts. In synthetic Poker, high precision and recall were observed, indicating relevant queries were generated. The sensitivity of OPRL performance to the OPSC threshold was analyzed, revealing a drop in recall and an anomaly at OPSC 0.9 due to FB15KSE's incompleteness. OPRL was compared to RLvLR, a state-of-the-art link predictor, by translating RLvLR-generated facts into queries. Adjustments to RLvLR's aggregation method improved its performance, but OPRL still showed superior query generation, with a partial AUC of 0.30 compared to RLvLR's 0.23.\n\nPrevious work in rule learning from knowledge graphs primarily focuses on Closed rules, which are less expressive than our OP rules. While OP rule learners generate new facts, our goal is to create relevant queries for these facts. There have been initial efforts to learn existential rules from knowledge graphs, but no learning system has been proposed. We have not found any prior methods that generate relevant queries for link predictors in knowledge graph completion. CHAI filters facts to enhance prediction by focusing on probable facts, but it does not generate queries like OPRL and relies heavily on the initial set of facts.\n\nIn this paper, we proposed a method for learning rules with free variables from Knowledge Graphs (KGs). Such rules can be used to generate queries soliciting missing facts. Notably, the queries could be fed to link predictors, enabling a fully automated framework for KG completion.\n\nWe introduced the following novel components: (1) We propose OP rules, a fragment of function-free Horn rules, which allows us to mine rules with free variables while keeping the complexity of the learning phase manageable. (2) We introduced a novel method to estimate the quality of each candidate rule based on its embedding representation. (3) We proposed an efficient method to evaluate OP rules by exactly computing the quality of each rule using matrix and vector operations. (4) We showed how OP rules can be used to generate highly relevant queries for missing links, introducing the first work on active knowledge graph completion.\n\nOur experiments show that OPRL can learn rules for KGs with varying sizes and degrees of incompleteness. We demonstrate the usefulness of the mined rules by applying them to three different KGs to infer relevant queries.\n\nOur proposed method outperforms the baselines and shows its strength, especially in the complete KG, Poker, with 0.98 precision.\n\nThere remain some intriguing challenges for future work. We plan to extend OPRL to learn rules with more complex shapes, such as stars, and with numerical attributes. We plan to pair OPRL with a link predictor to form a unified framework for fully automated KG completion. We will also trial OPRL in a setting for human-curated maintenance on an enterprise KG.",
  "kg2text": [
    "Our algorithm, known as the OP rule learning method OPRL, is designed to utilize KG K as input to mine hundreds of accurate rules. This novel algorithm, OPRL, proposes a unified framework for fully automated KG completion, which integrates the OP rule learning method OPRL. The method for learning rules with free variables from Knowledge Graphs (KGs) enables the extraction of the OP rule learning method OPRL, which is implemented by our algorithm. Additionally, KG K is utilized as input for OPRL, and it also utilizes the method for learning rules with free variables from Knowledge Graphs (KGs). The unified framework for fully automated KG completion is integrated into OPRL, forming a cohesive system that enhances knowledge graph completion.",
    "The unified framework for fully automated KG completion integrates the novel algorithm, OPRL, which is designed to learn Open Path rules. This framework also incorporates a method for learning rules with free variables from Knowledge Graphs (KGs), enabling the extraction of OPRL. The OP rule learning method OPRL generates relevant queries for multiple KGs and improves upon previous work in rule learning from a KG. It utilizes a range of KGs, focusing on those with varying sizes and degrees of incompleteness. Our algorithm, which is a novel method for learning open path rules, is mined by hundreds of accurate rules, and it generates OPRL-mined rules. Additionally, the OP rule learning method evaluates both the full benchmark KGs and the synthetic Poker KG, facilitating the generation of hundreds of accurate rules. Overall, the fully automated framework for KG completion enables our algorithm to effectively enhance knowledge graph completion.",
    "The novel algorithm, OPRL, mines hundreds of accurate rules, which are essential for enhancing knowledge graph completion. Our algorithm generates relevant queries for multiple KGs, utilizing a range of KGs to improve the process. Specifically, KG K utilizes the novel method for learning open path rules, which is represented by OPRL. The OP rule learning method OPRL evaluates the Poker KG and is also tested against three KGs, demonstrating its effectiveness. Furthermore, our algorithm is strictly more expressive than previous work in rule learning from a KG, which primarily focused on closed rules. The contributions of this paper introduce the OP rule learning method OPRL, which builds upon previous work in rule learning from a KG. Additionally, the unified framework for fully automated KG completion integrates the novel method for learning open path rules, allowing for the automatic generation of queries to fill in missing facts. KG K is utilized for mining rules from KGs with varying sizes and degrees of incompleteness, while multiple KGs form a unified framework for fully automated KG completion.",
    "The novel method for learning open path rules is identified as the novel algorithm, OPRL, which plays a crucial role in the fully automated framework for KG completion. This framework utilizes OPRL to generate relevant queries for knowledge graph completion across multiple KGs. Previous work in rule learning from a KG proposed a unified framework for fully automated KG completion, which OPRL improves upon. KG K is instrumental in mining OPRL-mined rules, while the method for learning rules with free variables from Knowledge Graphs enables the extraction of this novel method. Our algorithm evaluates the full benchmark KGs and is also tested against the synthetic Poker KG. The unified framework for fully automated KG completion is integrated into a range of KGs, which differ in sizes and degrees of incompleteness. OPRL not only mines from these various KGs but also focuses on learning from KGs with varying sizes and degrees of incompleteness, thereby enhancing the overall knowledge graph completion process.",
    "The full benchmark KGs are utilized to evaluate KG K, which serves as a specific input for the novel algorithm, OPRL. This algorithm improves upon previous work in rule learning from a KG by focusing on KGs with varying sizes and degrees of incompleteness. The method for learning rules with free variables from Knowledge Graphs (KGs) not only evaluates a range of KGs but also generates OPRL-mined rules that enhance knowledge graph completion. Furthermore, the unified framework for fully automated KG completion integrates these OPRL-mined rules and is evaluated by the synthetic Poker KG, which itself is used to evaluate KG K. Our algorithm, OPRL, introduces significant contributions to the field by generating relevant queries and evaluating the performance of the full benchmark KGs, as well as assessing three KGs in total. Overall, OPRL demonstrates its effectiveness through evaluations using both the synthetic Poker KG and KG K.",
    "The novel algorithm, OPRL, evaluates the performance of the full benchmark KGs and the synthetic Poker KG, demonstrating its effectiveness in learning Open Path rules. This algorithm is associated with a novel method for learning open path rules, which has successfully mined hundreds of accurate rules from a range of KGs, including those with varying sizes and degrees of incompleteness. The fully automated framework for KG completion utilizes these hundreds of accurate rules to enhance the automatic completion process. Additionally, KG K utilizes the contributions of this paper, which include the development of the OPRL algorithm and its evaluation using three KGs. The unified framework for fully automated KG completion is evaluated by Poker KG and proposes the contributions of this paper, further establishing the relevance of the OPRL method. Previous work in rule learning from a KG builds upon these hundreds of accurate rules, highlighting the advancements made in the field.",
    "The novel algorithm, OPRL, introduces the contributions of this paper, which include a method for learning rules with free variables from Knowledge Graphs (KGs). This method evaluates three KGs and generates queries for multiple KGs, enhancing the process of knowledge graph completion. The OPRL algorithm mines hundreds of accurate rules, which are essential for generating relevant queries. Furthermore, the fully automated framework for KG completion utilizes both the novel method for learning open path rules and multiple KGs, building upon previous work in rule learning from KGs. Additionally, the unified framework for fully automated KG completion has a broader term, encompassing Rule-Based KG Completion. The synthetic Poker KG is also evaluated on the hundreds of accurate rules mined by OPRL, which focuses on KGs with varying sizes and degrees of incompleteness. Overall, the contributions of this paper significantly improve upon previous methodologies by providing a comprehensive approach to active knowledge graph completion.",
    "The method for learning rules with free variables from Knowledge Graphs (KGs) encompasses a broader term known as rules, which are essential for knowledge graph completion. A fully automated framework for KG completion is specifically designed to handle KGs with varying sizes and degrees of incompleteness, utilizing OPRL-mined rules generated by the novel method for learning open path rules. This method not only generates these rules but also evaluates their quality against the full benchmark KGs. Previous work in rule learning from a KG focuses on KGs with varying sizes and degrees of incompleteness and evaluates a range of KGs, which are also utilized in the context of multiple KGs. The Poker KG is mined from hundreds of accurate rules, demonstrating the effectiveness of the OPRL algorithm. Furthermore, multiple KGs generate OPRL-mined rules, which are strictly more expressive than those derived from previous methods. The contributions of this paper highlight the demonstration of hundreds of accurate rules, while the fully automated framework for KG completion evaluates both the synthetic Poker KG and the full benchmark KGs, ensuring comprehensive assessment across diverse datasets.",
    "The full benchmark KGs are utilized to evaluate the performance on multiple KGs, which in turn evaluates the synthetic Poker KG. Previous work in rule learning from a KG also evaluates the full benchmark KGs and assesses the synthetic Poker KG. Furthermore, the full benchmark KGs are used to evaluate a range of KGs, including those with varying sizes and degrees of incompleteness. The OPRL algorithm, which is a novel method for learning open path rules, evaluates the Poker KG and is part of a broader system designed for knowledge graph completion. The synthetic Poker KG serves as a critical dataset for evaluating both a range of KGs and the effectiveness of OPRL-mined rules. Additionally, hundreds of accurate rules, which are a broader term for rules, are generated by the OPRL algorithm to facilitate the learning of OP rules. The contributions of this paper introduce a novel method for learning open path rules and a fully automated framework for KG completion, which evaluates the Poker KG and three KGs, while also assessing the quality of the full benchmark KGs.",
    "A range of KGs is utilized in the evaluation of the Poker KG, which serves to evaluate KGs with varying sizes and degrees of incompleteness. The fully automated framework for KG completion applies to three KGs, enhancing multiple KGs through its innovative approach. The contributions of this paper focus on KGs with varying sizes and degrees of incompleteness, contrasting with previous work in rule learning from a KG that primarily evaluates three KGs. Additionally, the full benchmark KGs evaluate the synthetic Poker KG, which in turn evaluates OPRL-mined rules. The novel method for learning open path rules introduced in this paper has a broader term, encompassing rules that are essential for effective knowledge graph completion. OPRL is capable of mining quality OP rules, which are then evaluated on three KGs, demonstrating the effectiveness of the proposed methodology.",
    "The synthetic Poker KG is a dataset used for evaluating the Poker KG, which serves as a foundation for assessing the effectiveness of the OP rule learning method OPRL. Section 4 proposes this method, which is designed to learn rules for KGs, specifically focusing on OP rules. Queries generated from OPRL's rules are relevant in multiple KGs, enhancing the knowledge graph completion process. The contributions of this paper evaluate the full benchmark KGs, which in turn assess three KGs. Notably, the synthetic Poker KG evaluates the contributions of this paper alongside these three KGs. The OPRL-mined rules encompass a broader term known as rules, which are essential for the knowledge graph completion task. The OPRL algorithm not only learns but also mines OP rules, utilizing fitness functions proposed for OPRL that have a broader term of OPRL itself. Additionally, the OP rule learning method OPRL includes an embedding-based heuristic function to improve its performance. The sensitivity of OPRL queries is crucial for understanding OPRL's performance, which demonstrates superior precision and recall compared to baseline methods.",
    "The OPRL rules are a specific subset of rules that play a crucial role in knowledge graph completion, as they are induced by the broader category of rules. This paper introduces a novel method for learning rules with free variables from Knowledge Graphs (KGs), which is essential for generating queries that can identify missing facts. The mined rules, which also fall under the broader term of rules, are integral to the learning OP rules process. Our system, which is a part of the proposed system, effectively utilizes these rules to enhance the completeness of knowledge graphs. Additionally, the collection of rules R and quality OP rules are both classified under rules, emphasizing their importance in the context of knowledge graph completion. The unified framework for fully automated KG completion integrates these concepts, showcasing the relationship between the queries induced from OPRL-mined rules and the broader category of rules. Our algorithm has demonstrated effectiveness over massive KGs, and it includes an evaluation method to assess its performance. Furthermore, the OP rule learning method OPRL is designed to compare its results with those of RLVLR, another rule learning system that employs closed path rules.",
    "Our proposed system is recognized as the first method to learn rules to generate relevant questions automatically, specifically through the OPRL algorithm. This novel method presents and learns Open Path (OP) rules, which are a type of existential rules that facilitate knowledge graph completion. The learnt OP rules have a broader term known as rules, which also encompasses this rule, OP rule formalism, and rules for KGs. The method for learning rules with free variables from Knowledge Graphs (KGs) is another significant aspect, as it operates within the framework of massive KGs. OPRL effectively mines these massive KGs and is designed to work well with KG sampling techniques. Additionally, OPRL has the capability to extend its learning to include rules with more complex shapes, such as stars, thereby enhancing its utility in generating high-quality OP rules. The performance of OPRL is quantified by the partial AUC of OPRL, which indicates its effectiveness in generating relevant queries for knowledge graph completion.",
    "The OP rules R is a specific set of Open Path rules that plays a crucial role in knowledge graph completion. KG K, which is a knowledge graph, has a broader term that encompasses the general concept of knowledge graphs (KG). Queries generated from OPRL's rules are designed to achieve good recall and precision, ensuring that they effectively retrieve relevant information. CP rules, which are a type of rule, also fall under the broader category of rules. The fully automated framework for KG completion is an advanced system that enhances KG completion processes. The OPRL algorithm is capable of finding higher-confidence queries and mining high quality rules from multiple KGs, which are essential for effective knowledge graph completion. Additionally, the method for learning rules with free variables from Knowledge Graphs (KGs) is related to the broader concept of knowledge graphs. Previous work in rule learning from a KG and a range of KGs also contribute to the understanding of knowledge graphs. AGKGC, an Active Knowledge Graph Completion system, is a broader term that includes the proposed system. The OP rules R is categorized under OP rules, indicating its specific function within the broader framework. The OPRL algorithm is planned to be trialed in the context of human-curated maintenance on an enterprise KG, showcasing its practical application. Finally, Rule-Based KG Completion is a methodology that falls under the broader category of rule-based knowledge graph completion, emphasizing the importance of useful rules in this domain.",
    "The synthetic Poker KG and Poker KG are both types of Knowledge Graphs (KGs), which serve as datasets for evaluating various algorithms. The OPRL algorithm utilizes the minimum OPSC parameter to enhance its performance in knowledge graph completion. This algorithm is a part of the broader category of active knowledge graph completion, which includes methodologies like Rule-Based KG Completion. Notably, our algorithm has been shown to outperform the baselines in its evaluations. Additionally, the concept of three KGs also falls under the umbrella of Knowledge Graphs (KGs). Earlier work in rule mining for KG completion is categorized under Rule-Based KG Completion, indicating its foundational role in this field. The OPRL algorithm learns over popular benchmark KGs, demonstrating its applicability across various datasets. Furthermore, the quality of rules generated is a critical aspect, as it encompasses the broader category of rules. The queries adduced from OP rules and the Open Path (OP) rules themselves are essential for identifying gaps in knowledge graphs. Lastly, a range of KGs and multiple KGs highlight the diversity of knowledge graphs utilized in this domain, while short OP rules and high-quality OP rules represent specific types of rules that enhance the efficiency of knowledge graph completion.",
    "Closed path rules are a subset of rules that play a significant role in knowledge graph completion, as they have a broader term encompassing all rules. Similarly, novelties for mining OP rules also fall under the category of rules, highlighting the innovative approaches to extracting Open Path rules. The OPRL algorithm is pivotal as it generates queries necessary for addressing gaps in knowledge graphs, although it may not always produce queries in certain contexts. Mined rules, which are high-quality Open Path rules, can be effectively utilized in the Active Knowledge Graph Completion (AKGC) system, demonstrating their practical application. These mined rules are also applied to three different KGs, showcasing their versatility across knowledge graphs with varying sizes and degrees of incompleteness. Furthermore, the rules with OPsupp(r) \u2265 1 indicate a subset of candidate rules that are relevant for generating queries. The average number of accurate rules identified by the OPRL algorithm reflects the reliability of these rules in enhancing knowledge graph completion. Additionally, CP rules are distinct from OP rules, with the latter being strictly more expressive, emphasizing the complexity of rule types in this domain. Enterprise and public Knowledge Graphs, along with the full benchmark KGs, represent broader categories of knowledge graphs that are essential for evaluating the effectiveness of these systems and methods.",
    "The following two OP rules are a specific subset of rules that fall under the broader category of rules, which are essential for knowledge graph completion. KG K, a particular knowledge graph, is also classified under the broader term Knowledge Graphs. Additionally, rules with more complex shapes, such as stars, are another type of rules that enhance the capabilities of knowledge graphs. The Poker KG serves as a synthetic knowledge graph, which is categorized under knowledge graph (KG). In the context of evaluating the OPRL algorithm, two sets of experiments are conducted to assess its performance. The queries generated by OPRL are identified as higher-confidence queries, indicating their reliability. Furthermore, three KGs are recognized as a broader term for knowledge graph (KG), emphasizing their relevance in the evaluation process. Rule-Based KG Completion is a methodology that falls under the active knowledge graph completion task, highlighting its role in enhancing knowledge graphs. The complete KG, Poker, is another example of a knowledge graph (KG) that is fully populated. The OPSC/OPHC scores are calculated against the full benchmark KGs, providing metrics for evaluating the quality of generated rules. The top 10% of the OP rules, along with closed path (CP) rules, are also categorized under rules, showcasing their significance in knowledge graph completion. The three KGs assess relevance over KGs, further illustrating their interconnectedness. Rule-Based KG Completion is also classified under knowledge graph (KG), while the method for learning rules with free variables from Knowledge Graphs (KGs) is used in conjunction with Knowledge Graphs. Traditional knowledge graph completion is another broader term that encompasses Rule-Based KG Completion. High quality rules and the usefulness of the mined rules are both classified under rules, emphasizing their importance in the knowledge graph completion process.",
    "Active KGC is a concept that encompasses rule-based knowledge graph completion, which aims to enhance the completeness of knowledge graphs. The OPRL algorithm achieves a partial AUC of 0.30, indicating its effectiveness in generating relevant queries. This algorithm utilizes novel components that both mine and introduce OP rules, which are essential for knowledge graph completion. The proposed fitness function applies to rules, ensuring that the quality of these rules is maintained. KG K, a specific knowledge graph, is part of the broader category of public Knowledge Graphs. Additionally, the Co-occurrence for the whole rule is a broader term that relates to rules, emphasizing the importance of entity relationships. The embedding-based rule mining system is a key component of the overall system designed for knowledge graph completion. Enterprise and public Knowledge Graphs (KGs) are structured representations that fall under the broader term of knowledge graph (KG). This kind of rule, along with the overall rule, contributes to the framework of rules used in knowledge graph completion. Active knowledge graph completion actively mines Open Path (OP) rules to fill in gaps within knowledge graphs. The OPRL algorithm has been shown to exceed the performance of the baseline query generator Prand, highlighting its superiority. The usefulness of the mined rules is demonstrated through their application in generating relevant queries, thereby enhancing knowledge graph completion. The full benchmark KGs not only include samples but also serve as a standard for evaluating the performance of knowledge graph completion methods. Finally, rules for KGs are a broader category that encompasses Knowledge Graphs (KGs), while the candidate rules represent potential OP rules that are evaluated for their effectiveness in completing knowledge graphs.",
    "Active KGC is a concept that falls under the broader term of active knowledge graph completion, which aims to enhance knowledge graphs by generating relevant queries. Enterprise and public Knowledge Graphs (KGs) are often recognized as incomplete, highlighting the need for effective methods to address this issue. One such method is the learning of rules with free variables from Knowledge Graphs, which is related to public Knowledge Graphs. This paper discusses rule-based knowledge graph completion, a methodology that utilizes predefined rules to fill in missing information. The OPRL algorithm, which is summarized in Algorithm 1, plays a crucial role in this process by generating Open Path rules. These rules are essential for identifying gaps in knowledge graphs, and they are evaluated against massive KGs that contain up to 8 M facts. The novelties for mining OP rules introduce innovative approaches to rule extraction, which are more expressive than any CP rule, a broader category of rules. Additionally, the unified framework integrates the OPRL method with a link predictor, forming a comprehensive system for knowledge graph completion. Multiple KGs are encompassed within the broader category of Knowledge Graphs, and the OPRL-mined rules contribute significantly to the field of rule mining, which is vital for enhancing KG completion.",
    "A range of KGs has a broader term known as Knowledge Graphs, which are structured representations of knowledge. Within this context, ScaleKB is a rule learning system that falls under the broader category of the proposed system, which is designed to enhance knowledge graph completion. The OPRL queries, which are generated by the OPRL algorithm, also belong to the broader category of queries. The OP rule formalism is particularly suitable for the embedding-based rule mining system, which is designed to learn open path rules from knowledge graphs. Furthermore, rules with the properties are a subset of rules that can induce queries, thereby facilitating the generation of relevant questions. Target rules, which are specific to designated predicates, also fall under the broader category of rules. The quality of these rules is calculated against the full benchmark KGs, which serve as standard datasets for evaluation. Rule-Based KG Completion is a methodology that addresses the problem of knowledge graph completion, and it encompasses two systems, including the OPRL and RLvLR* algorithms. The process to mine a KG is essential for extracting high-quality Open Path rules, which are relevant to Knowledge Graphs (KGs). The synthetic Poker KG serves as a dataset for evaluating the OPRL algorithm, while Queries generated from OPRL's rules are designed to uncover missing facts in knowledge graphs. Additionally, rules for KGs are structured guidelines that facilitate the identification of missing information within a knowledge graph. The active knowledge graph completion task involves mining Open Path rules to generate queries that help complete incomplete knowledge graphs. Generated queries can be used to answer our questions, which are relevant queries produced by the OPRL method. Lastly, the Open Path rules have a broader term known as the open path rule case, which allows for the generation of queries based on linear relationships between predicates.",
    "In the realm of knowledge graph completion, various types of rules play a crucial role. Each rule on generation is a specific instance of the broader category known as rules, which also includes Closed rules, closed (non-existential) rules, and existential rules from knowledge graphs. These rules are essential for generating queries that address gaps in knowledge graphs. The performance of the Open Path Rule Learning (OPRL) algorithm is evaluated through its ability to generate relevant queries, which are also categorized under the broader term of queries. Additionally, the Open Path Head Coverage (OPHC) serves as a quality measure for these rules. The process of learning OP rules is integral to the active knowledge graph completion task, which is exemplified by Active KGC. This task aims to enhance knowledge graphs, a process referred to as KG completion, which falls under the methodology of rule-based knowledge graph completion. Among the generated rules, the top 10% of the OP rules are particularly noteworthy, as they retain the highest quality OP rules. The Poker KG serves as a synthetic knowledge graph for evaluating these algorithms, while quality rules represent those that meet specific thresholds of accuracy and relevance. Furthermore, multiple KGs and a range of KGs are utilized in this context, all contributing to the broader category of public Knowledge Graphs. Previous work in rule learning from a KG has laid the groundwork for these advancements, leading to the first work on active knowledge graph completion, which significantly enhances the field.",
    "Active KGC is a concept that encompasses traditional knowledge graph completion, which is a broader term for the process of filling in missing information in knowledge graphs. Knowledge graphs (KGs) are utilized to mine OP rules, which are essential for knowledge graph completion. These OP rules are derived from KGs and play a crucial role in rule learning methods for KGs, which also fall under the broader category of knowledge graphs. The first method to learn rules to generate relevant questions automatically is a significant advancement in the approach to knowledge graph completion. This method is exemplified by the first work on active knowledge graph completion, which introduces active knowledge graph completion as a novel strategy. Additionally, rule-based knowledge graph completion is another methodology that leverages knowledge graphs to infer missing information. The original rule is a foundational element in this context, contributing to the broader category of rules. Queries induced from OPRL-mined rules are evaluated for their relevance, which is a critical aspect of the first work on active knowledge graph completion, further emphasizing the importance of KG completion. RLVLR, a rule learning system, also fits within the broader category of models used in knowledge graph completion. The quality of rules, high-performing rules, and candidate rules are all essential components that enhance the effectiveness of knowledge graph completion. Furthermore, three baseline query sets are developed from and by the OPRL algorithm, providing a comparative benchmark for evaluating the relevance of generated queries. The maximum OPSC of all the rules inducing the query is another measure that falls under the broader category of rules, highlighting the systematic approach to knowledge graph completion. Lastly, R' serves as a parameter in the OPRL algorithm, which is crucial for generating effective Open Path rules, while Rule-Based KG Completion is a methodology that systematically applies predefined rules to enhance knowledge graphs.",
    "Active Knowledge Graph Completion (AKGC) is a broader term that encompasses the process of enhancing knowledge graphs by identifying and introducing missing facts. This approach is closely related to KG completion, which also falls under the umbrella of active knowledge graph completion. The collection of rules R can induce queries that are essential for this process, while the method for learning rules with free variables from Knowledge Graphs (KGs) can be utilized to generate queries soliciting missing facts. Furthermore, the number of possible rules has a broader term of rules, indicating the increasing complexity and variety of rules that can be generated. In the context of evaluating the effectiveness of these queries, those generated from OPRL's rules significantly outperform the probabilistic baseline, demonstrating their superior capability in uncovering relevant information. Additionally, the OPRL algorithm scales well with the embedding-based fitness function, which aids in the mining of OP rules. The average numbers of quality rules mined for all predicates in the respective KGs highlight the performance of the OPRL system, while earlier work in rule mining for KG completion is notably different from the active knowledge graph completion approach. Ultimately, the mined rules infer relevant queries that are crucial for filling gaps in knowledge graphs, which are structured representations of information known as KG facts.",
    "The earlier work in rule mining for KG completion has a broader term known as KG completion, which refers to the process of enhancing knowledge graphs. Within this context, the maximum length of rules is a user-defined parameter that has a broader term of rules, which are logical constructs mined to facilitate knowledge graph completion. The RLVLR system adheres to its own architecture, while the process to mine a KG is encompassed within the broader term of knowledge graph (KG). Mined rules, which are derived from rule mining, also fall under this broader category. Notably, the eight million facts are part of KGs, highlighting the extensive data available for analysis. Learning OP rules provides relevant queries that are essential for identifying missing information. The following OP rule is a specific type of rule that has a broader term of rules, emphasizing its role in knowledge graph completion. Active knowledge graph completion is another term that encompasses Knowledge Graphs (KGs), indicating its relevance in this field. The Poker KG serves as a specific example of public Knowledge Graphs, which are structured representations of knowledge. The KG size, which refers to the number of entities and relationships, has a broader term of sizes, indicating the varying dimensions of knowledge graphs. The automated framework is an integral part of the system designed to enhance knowledge graph completion. KG completion itself is a broader term for Knowledge Graphs (KGs), emphasizing its foundational role. Enterprise and public Knowledge Graphs (KGs) also fall under the broader category of Knowledge Graphs. Queries induced from OPRL-mined rules are included in the broader category of queries, showcasing their importance in identifying missing facts. Our target language for learning includes the OP rule formalism, which is crucial for generating relevant queries. The predicate P is specifically given for the AKGC task, which focuses on generating queries for knowledge graph completion. The learnt rule, which enables the inference of missing facts, has a broader term of rules. Additionally, the embeddings for predicates and arguments in the sample KG are part of the broader category of Knowledge Graphs (KGs). Finally, rules are included in the subset of rules with quality OPSC > 0.1 and OPHC > 0.01, indicating their reliability for knowledge graph completion tasks.",
    "The rules encompass a specific subset known as rules with quality OPSC > 0.1 and OPHC > 0.01, which are characterized by their reliability in knowledge graph completion tasks. Within the broader category of Knowledge Graphs (KGs), three different KGs serve as distinct examples, while the complete Poker KG represents a fully structured synthetic knowledge graph. The OP rules, which are formalized as r: P1(x,z0) \u2190 P2(z0,z1) \u2227 P3(z1,y), play a crucial role in generating relevant queries for identifying missing facts. These OP rules are not merely a consequence of any CP rule, highlighting their unique contribution to the field. Furthermore, mined rules are instrumental in generating queries, thereby enhancing the active knowledge graph completion task, which falls under the umbrella of rule-based knowledge graph completion. The OPRL algorithm has been shown to outperform RLvLR*, demonstrating its effectiveness in the realm of rule learning methods. Overall, the active KGC initiative aims to facilitate knowledge graph completion by leveraging these mined rules and generating pertinent queries.",
    "Rule learning methods for KGs and rule-based knowledge graph completion are both encompassed within the broader concept of knowledge graphs (KGs). The PathFinding function, which generates candidate Open Path rules, is linked to the initially empty set R' where these rules are stored. Additionally, the sample KG and massive KGs are both types of knowledge graphs that fall under the umbrella of Knowledge Graphs (KGs). The queries derived from Open Path rules can be utilized to generate the queries necessary for link predictors to repair working KGs. The Co-occurrence Fitness Function is specifically defined for mining CP rules, while useful rules may be discarded by the fitting function. Working KGs also belong to the broader category of Knowledge Graphs (KGs). Notably, Queries generated from OPRL's rules outperform those generated by a modified leading-edge link predictor. The reduced KG is another variant that is classified under Knowledge Graphs (KGs). Rule-Based KG Completion serves as a broader term for link predictors in the knowledge graph completion process. The architecture of RLVLR is a foundational framework that relates to models used in this domain. The problem of active knowledge graph completion (AKGC) is a subset of rule-based knowledge graph completion. Furthermore, OPRL's performance exceeds that of the baseline query generator Prand. The distribution of mined rules is categorized under the general term rules. Open Path (OP) rules are instrumental in generating queries, with P2 being a specific predicate that is part of OP rules. AKGC is a broader term that encompasses the active knowledge graph completion task. Lastly, fitness functions proposed for OPRL are evaluated in comparison to the performance of fitness functions.",
    "OP rules play a crucial role in knowledge graph completion as they generate, derive, and induce queries that are essential for identifying missing information within knowledge graphs (KGs). The queries that link predictors need to repair working KGs are a subset of these generated queries, highlighting their importance in the broader context of KGs. Additionally, both the original and extended rules are encompassed within the broader category of rules, which are foundational for effective knowledge graph completion. Models are learnt from KGs, further emphasizing the interconnectedness of these elements. The active knowledge graph completion task is a key aspect of the active knowledge graph completion approach, which aims to enhance the completeness of KGs. The OP rule miner, summarized in Algorithm 1, is instrumental in this process, mining effective rules from KGs. Furthermore, Enterprise and public Knowledge Graphs (KGs) fall under the broader category of public Knowledge Graphs, illustrating the diverse applications of these structured representations. KG completion is a vital part of the active knowledge graph completion task, which seeks to fill in gaps in knowledge. The novel components introduced in this field are derived from KGs, showcasing the innovative methods being developed. The correct answer, which refers to missing entities needed to complete queries, is a broader term for answers that are inferred from existing data. KG facts, which are individual pieces of information within a knowledge graph, also fall under the broader category of knowledge graph (KG). Constrained existential rules, a type of rule used in this context, are part of the broader rules category. Open Path (OP) rules, which allow for the generation of relevant queries, are a specific type of path. Active KGC is a broader term for the problem of knowledge graph completion, which encompasses the challenges of identifying and inferring missing information. Closed rules are designed to answer the correct answer, providing a mechanism for addressing gaps in knowledge. The sampled KG is a subset of Knowledge Graphs (KGs) used for evaluating candidate rules, while AKGC is a broader term for traditional knowledge graph completion, reflecting the evolution of techniques in this area. Finally, hundreds of accurate rules mined from KGs contribute to the output of knowledge graph completion efforts.",
    "The concept of 'some intriguing challenges' encompasses a broader term known as 'challenges', which highlights the unresolved issues in the field. Within the realm of knowledge graphs, 'active knowledge graph completion' is a method that falls under the broader category of 'knowledge graph (KG)'. The RLVLR system utilizes 'closed path (CP) rules' as part of its architecture, which is specifically designed for learning these rules. In contrast, 'Closed rules' are recognized as being less expressive than 'OP rules', which are a more advanced form of rules used in knowledge graph completion. Furthermore, 'existential rule learning' is a broader term that includes 'rules', emphasizing its role in enhancing knowledge graph completion. The process of 'KG completion' is also categorized under 'Traditional knowledge graph completion', indicating its foundational significance. Additionally, 'top candidate rules' are a subset of 'rules' that represent the highest quality selections based on fitness values. The 'AKGC' task is a solution to the 'problem of active knowledge graph completion (AKGC)', aiming to generate relevant queries for knowledge graph completion. The predicate 'P_2(z_1, z_2)' is another example of a broader category of 'rules'. The size of a knowledge graph, referred to as 'the KG size', is an important factor in understanding 'Knowledge Graphs (KGs)'. The contributions of this paper build upon 'early explorations' in the field, while 'Previous work in rule learning from a KG' is closely related to 'rule learning' and serves as a foundation for further advancements. Notably, 'popular benchmark KGs' contain 'eight million facts', showcasing the extensive data available for analysis. Lastly, 'rules' can induce 'the CD of q', which is crucial for evaluating the confidence of queries in active knowledge graph completion.",
    "In the context of knowledge graph completion, rules are considered more useful if they relate to facts, highlighting the importance of accurate logical constructs. The problem of active knowledge graph completion (AKGC) is a subset of the broader concept of active knowledge graph completion, which aims to generate relevant queries to fill in missing information. The sampling algorithm is utilized to build a reduced KG, which serves as a smaller version of a knowledge graph, while the complete Poker KG exemplifies a fully structured knowledge graph. Open Path (OP) rules play a crucial role in generating relevant queries and assessing the quality of the mined open path rules. The Open Path Fitness Function proposes a method to evaluate rule quality, ensuring that the generated rules are effective. Learning OP rules aims to generate new facts, contributing to the overall completeness of knowledge graphs. Additionally, the introduction of the following novel components enhances the process of rule generation, further supporting the active knowledge graph completion efforts. Traditional knowledge graph completion is also a broader term that encompasses the methodologies used in Knowledge Graphs (KGs), which are structured representations of knowledge.",
    "In the realm of knowledge graph completion, the body and the head of a CP rule are integral components that fall under the broader category of rules. These rules, which include OP rules, are essential for rule mining and are characterized by their measurable qualities. The complete Poker KG, along with the whole KG and massive KGs, exemplifies structured knowledge graphs (KGs) that serve as foundational elements in this field. A good rule about a predicate also belongs to the category of rules, enhancing the completeness of knowledge graphs. Furthermore, the concept of a complete KG is a specific instance of a knowledge graph (KG) that is fully populated with relevant entities and relationships. The OP rules not only generate highly relevant queries for missing links but also contribute to the overall process of knowledge graph completion. These rules are supported by link predictors, which form a unified framework for fully automated KG completion. Additionally, the average numbers of quality rules mined for all predicates in the respective KGs reflect the effectiveness of the rule mining process, while fewer rules indicate potential gaps in the knowledge represented. Overall, the interplay between these elements underscores the complexity and significance of knowledge graph completion methodologies.",
    "The knowledge graphs (KGs) evaluated by the OPRL algorithm encompass four million entities, which are integral to their structure. Within this context, CP rules are a broader category that includes Closed rules, while K' represents a specific fragment of knowledge graphs. The efficient method to evaluate OP rules is a refined evaluation method that enhances the assessment of these rules. Working KGs, which are actively maintained, fall under the broader classification of knowledge graphs. Active KGC plays a crucial role in inferring highly relevant queries for missing links, thereby facilitating knowledge graph completion. The OPRL algorithm pairs effectively with link predictors to enhance its functionality. Additionally, the OP rule miner utilizes user parameters to tailor its operations. Massive KGs, which contain extensive data, also belong to the broader category of KGs. The reduced KG is a smaller version of a knowledge graph, retaining only relevant entities. Our questions, generated through the OPRL method, are a subset of the broader category of questions aimed at uncovering missing facts. OP rules induce specific queries of the form P(?, e'), which are essential for identifying gaps in knowledge. Previous work in rule learning from a KG has laid the groundwork for current rule learning methods. The rules mined by the OPRL algorithm include a head at the front of the implication arrow, which signifies the conclusions drawn from the rules. However, relevant queries may not be generated due to the absence of useful rules. The enterprise KG is another variant of knowledge graphs, specifically designed for business contexts. Our objective is to mine high-quality OP rules that enhance knowledge graph completion. The embeddings for predicates and arguments in the sample KG are derived from Embeddings(K'), which are crucial for evaluating the quality of the mined rules. Finally, the Evaluation process assesses the generated OP rules against R', an initially empty set that stores these rules.",
    "The 'reduced KG' has a broader term known as 'KGs', which refers to knowledge graphs that structure information through relationships between entities. Within this context, the 'max rule length l' is a parameter that also has a broader term, 'rules', which are logical constructs used in knowledge graph completion. The 'average number of accurate rules' is quantified as '#Arules', indicating the mean count of reliable rules identified. Additionally, 'additional candidate rules' fall under the broader category of 'rules', enhancing the knowledge graph completion process. The 'comparative system for query generation' is a baseline method that is part of the broader 'system' designed for knowledge graph completion. Furthermore, 'hundreds of accurate rules' contribute to the 'outputs' generated by the system. 'Open Path (OP) rules' provide evidence for 'a fact', facilitating the identification of missing information. The process of 'Generating relevant queries' is derived from 'learnt OP rules', which are essential for knowledge graph completion. The 'Co-occurrence Fitness Function' is utilized in the 'RLVLR' system to evaluate the quality of rules. The predicate 'P_n(z_{n-1}, y)' is categorized under 'rules', while 'rules with more complex shapes' also belong to the broader category of 'rules'. 'CP rules' are a type of rule mining that contributes to knowledge graph completion. The term 'the rule' encompasses various 'rules' that express relationships between entities. 'OP rules' not only provide evidence for 'a fact' but also connect 'its head and body', which are crucial components of the rules. The 'generated queries' can infer 'new facts', thereby enhancing the knowledge graph. The 'sampled KG' is a subset of the broader 'knowledge graph (KG)', and 'AKGC' is an overarching term for the knowledge graph completion process. Lastly, 'AGKGC' predicts 'the queries themselves', which are derived from the knowledge graph.",
    "These entities form a reduced KG, which is a smaller version of a knowledge graph that retains only the relevant entities for specific tasks. Our queries are designed to ask questions that help identify missing facts within the knowledge graph. The active knowledge graph completion (AKGC) task encompasses a broader process aimed at enhancing knowledge graphs. Within this context, P_i, a predicate, has a broader term known as Parameter, which defines user inputs for rule learning. The OP rule learning method OPRL evaluates its performance using YAGO2, a large-scale knowledge base. Additionally, the collection of rules R can induce the confidence degree of a query, which is crucial for assessing the quality of generated queries. Vast KGs, which are extensive knowledge graphs, fall under the broader category of Knowledge Graphs (KGs). Similarly, rules for KGs are related to public Knowledge Graphs, while a sampled KG is a subset of KGs used for evaluating rule efficiency. KG completion is a broader term that encompasses the knowledge graph completion process, which aims to fill in missing information. The support degree of an open path rule, known as OPsupp, also relates to the broader concept of Parameter. The size of the KG, which refers to the number of entities and relationships, is a critical factor in knowledge graph (KG) scalability. The OP rule learning method OPRL is categorized as an algorithm, while the queries that link predictors need to repair working KGs are part of the broader category of queries. The active knowledge graph completion task is a broader term that includes the knowledge graph (KG) and is part of the overall process of active knowledge graph completion. Finally, traditional knowledge graph completion is a specific approach within this broader context, and the process to mine a KG is essential for extracting valuable information from Knowledge Graphs.",
    "Rule learning methods for KGs consider closed (non-existential) rules as a fundamental approach. In the context of synthetic Poker, it has been demonstrated that these methods achieve excellent recall, showcasing their effectiveness. Closed path (CP) rules hold true in knowledge graphs (KGs) and are specifically used for knowledge graph completion. The rule 'r' is defined by the open path fitness for r, which evaluates the effectiveness of open path rules. Additionally, the predicate P_t(x, z_0) has a broader term known as rules, indicating its relevance in the broader context of rule learning. The queries generated by the OPRL system outperform the probabilistic baseline, highlighting their superior relevance and accuracy. CP rules also have a broader term referred to as patterns, which aid in identifying missing facts. The rules with OPsupp(r) \u2265 1 are crucial as they pick the candidate rules that can effectively contribute to knowledge graph completion. The proposed system assumes the use of a link predictor to enhance its performance. Furthermore, the probabilistic-based query generator is a broader term that encompasses the system designed for knowledge graph completion. The problem of active knowledge graph completion (AKGC) has a broader term known as the active knowledge graph completion task, which focuses on generating relevant queries. Traditional knowledge graph completion is a broader term under which knowledge graphs (KGs) operate, facilitating the process of filling in missing information. The knowledge graph completion process itself is a broader term that encompasses various methodologies used in Knowledge Graphs (KGs). Open path head coverage (OPHC) is given by the knowledge graph (KG), serving as a metric for evaluating mined rules. CP rules present similar concepts, indicating the relationships between the head and body of the rules. The number of facts in the KG has a broader term related to Knowledge Graphs (KGs), emphasizing the importance of understanding the completeness of the graph. Learning OP rules complements traditional link prediction, enhancing the overall knowledge graph completion task. Lastly, synthetic Poker has achieved 100% precision, demonstrating the high accuracy of the queries generated.",
    "The knowledge graph (KG) has a broader term known as KGs, which encompasses various structured representations of knowledge. Within this context, rules with free variables are a subset of rules that also fall under the broader category of rules. However, useful rules may be discarded by the OPSC/OPHC thresholds, which are quality measures in the knowledge graph completion process. The intended scope of KGs is related to Knowledge Graphs (KGs), indicating the often ambiguous boundaries of these graphs. Our second set of experiments assesses the relevance of queries induced from OPRL-mined rules, which are essential for improving KG completion, a broader term that includes the problem of knowledge graph completion. This problem is further extended by the challenge of active knowledge graph completion (AKGC), which is a more traditional approach to filling in missing information. Our queries, which are a broader category of queries, are generated to solicit missing facts. The head of r, representing a broader term of rules, is crucial in this process. K' is another broader term that refers to a reduced fragment of a knowledge graph. The candidate rules are evaluated based on the sampled KG, while OP rules are found through Algorithm 1, which aids in the learning process. Popular benchmark KGs serve as a broader term for widely used knowledge graphs. The OPRL algorithm, a broader term under Rule learners, plays a significant role in this domain. Active KGC is a broader term that includes link predictors in the knowledge graph completion process, while redundant rules that induce the same query are also categorized under rules. Rule learning methods for KGs are essential for deriving logical rules from Knowledge Graphs. Such rules can be used to generate queries soliciting missing facts, which are vital for the completion of KGs. Finally, the queries adduced from OP rules represent a broader category of queries aimed at identifying gaps in knowledge.",
    "The enterprise KG has a broader term known as the knowledge graph (KG), which encompasses various forms of structured knowledge representation. Within this context, rule-based knowledge graph completion is a methodology that falls under the broader category of Knowledge Graphs. Popular benchmark KGs are significant as they contain four million entities, providing a rich dataset for evaluation. In a recent experiment, the performance of the OPRL algorithm was repeatedly tested on the complete Poker KG, ensuring comprehensive assessment of query generation. Facts in the KG are part of the broader Knowledge Graphs (KGs), which also include relevant queries for new facts that are derived from these facts. However, KGs are often known to be incomplete, highlighting the need for methodologies like Open Path (OP) rules, which are a specific type of constrained existential rules. These rules facilitate the generation of relevant queries, particularly when traditional methods fall short. Link predictors play a crucial role in enabling a fully automated framework for KG completion, allowing for efficient processing of these queries. The inference module, which is a component of the proposed system, generates queries based on the existing knowledge graph facts and OP rules. Additionally, K' represents a reduced fragment of a knowledge graph, defined by user-specified parameters. The problem of knowledge graph completion is a significant challenge within Knowledge Graphs (KGs), and addressing intriguing challenges for future work is essential for advancing the field. Our algorithm, OPRL, is designed to learn from these complexities, while systems like ScaleKB utilize closed path (CP) rules for similar purposes. Ultimately, the generation of queries is crucial for filling gaps in the complete KG, and the rules mined from these processes can explain many facts within the knowledge graph.",
    "The OPSC threshold has a broader term known as Parameter, which encompasses user-defined inputs for the OPRL algorithm. Learning OP rules is a subset of rule learning, which is further categorized under the proposed system designed for knowledge graph completion. Notably, CP rules do not utilize free variables, distinguishing them from other rule types. The process of automatic completion is a broader term that includes various methods for generating relevant queries aimed at enhancing KG completion. Models are specifically learnt from Knowledge Graphs, which serve as structured representations of knowledge. The fact in the KG is a broader term for knowledge graph (KG), indicating its role in representing specific pieces of information. The set of OP rules R is categorized under output, which refers to the results generated by the OPRL algorithm. Additionally, the process to mine a KG is linked to public Knowledge Graphs, emphasizing the accessibility of data. Relevant queries are specifically designed for KG completion, facilitating the identification of missing facts. OP rules are characterized by the absence of holistic similarity, which is a unique feature compared to other rule types. Mined rules, which are high-quality OP rules, are derived from data, showcasing the importance of information in this context. The Co-occurrence Fitness Function is modified for the OP case, allowing for the evaluation of relationships in knowledge graph completion. The top t% of rules, which are selected based on their fitness values, are picked up from the broader category of rules. Vast KGs represent a broader term for knowledge graph (KG), indicating the scale of data involved. The top t% of rules also falls under the broader category of rules. The term 8 M facts refers to a larger set of facts, emphasizing the scale of data utilized in evaluating the OPRL algorithm. Previous rule-based methods focus on learning closed (non-existential) rules, contrasting with the flexibility of OP rules. KG facts play a crucial role in triggering candidate rules, highlighting their importance in the knowledge graph completion process.",
    "The Open Path Rule Learning (OPRL) algorithm is a novel approach that falls under the broader category of rule-based methods. It is specifically designed to enhance knowledge graph completion by generating relevant queries. The performance of Open Path rules, which include components like the predicate P3, is assessed over the entire knowledge graph (the whole KG) to ensure their effectiveness. In the context of knowledge graphs, KG facts represent individual pieces of information and are part of the broader concept of Knowledge Graphs. The active knowledge graph completion task is a subset of knowledge graph completion, focusing on identifying and filling in missing entities, which are referred to as missing entities. The correct answer to a query is classified as a missing entity, highlighting its importance in the completion process. Furthermore, three different KGs are utilized to infer relevant queries, demonstrating the versatility of the OPRL method. The earlier work in rule mining for KG completion is also a broader term that encompasses various techniques, including the human-curated maintenance on an enterprise KG, which ensures the accuracy and relevance of the knowledge graph. Overall, the active knowledge graph completion (AKGC) task generates specific queries of the form P(?, e'), contributing to the ongoing efforts to improve the completeness and utility of knowledge graphs.",
    "Knowledge graph completion is a process that curates and develops knowledge graphs (KGs), which are structured representations of knowledge. This process is closely related to rule mining, a broader term that encompasses various methodologies for discovering patterns within Knowledge Graphs (KGs). The number of facts in the KG is an important aspect of knowledge graph completion, as it reflects the completeness of the graph. Additionally, the system known as RLvLR* is a modified link predictor that plays a role in this domain. The embeddings for predicates and arguments in the sample KG are crucial for assessing the quality of rules, which are logical constructs that can be instantiated to generate queries. Learning OP rules is a significant aspect of rule learning methods, which aim to derive useful rules from data. The study also involves three different KGs to demonstrate the effectiveness of these methods. Furthermore, the work in the literature related to link prediction and active knowledge graph completion is part of the broader field of rule-based knowledge graph completion. The complete Poker KG serves as a fully structured example for evaluating these methods. The intended scope of KGs often leads to ambiguities, which can affect their representation. Rule learning methods for KGs are essential for deriving logical rules that can infer new relationships. In this context, the fitness functions f_co(.) and f_op(.) are compared to evaluate the quality of rules, while the minimum OPSC serves as a threshold for determining the relevance of Open Path rules. Lastly, the problem of active knowledge graph completion (AKGC) highlights the challenge of generating relevant queries to fill in missing facts, and the PathFinding() method is utilized to generate OP rules.",
    "Knowledge Graphs (KGs) encompass a broader term known as Knowledge Graphs, which are structured representations of knowledge. Our work specifically addresses a long-standing gap in traditional link prediction systems, highlighting the inadequacies in generating relevant queries for knowledge graph completion. Within this context, the fact in the KG is instantiated by a closed rule, which serves as a logical construct for inferring missing information. Additionally, fitness values of rules have a broader term, rules, which are essential for evaluating the effectiveness of generated queries. The correct answer, which refers to a missing entity, has a broader term of an entity, indicating its role in knowledge graph completion. The whole KG also has a broader term, Knowledge Graphs, emphasizing its comprehensive nature. The intended scope of KGs is poorly defined, leading to challenges in knowledge representation. The performance of Open Path rules is assessed over the whole KG using OPSC, while the active knowledge graph completion task is a broader term for the problem of knowledge graph completion. Popular benchmark KGs serve as standard datasets for evaluating knowledge graph methods, and highly relevant queries generated by the OPRL algorithm have a broader term of relevance, indicating their precision in targeting missing facts. The closed path rule 'r' is returned as Return R, which represents the output set of OP rules. OP rules complement traditional link prediction by providing a more dynamic approach to identifying missing facts. The following two OP rules have OPHC, a quality measure for evaluating their performance. RLVLR is compared with the state-of-the-art rule-based link predictor, showcasing advancements in knowledge graph completion techniques. A complete KG has a broader term of Knowledge Graphs, reinforcing the importance of comprehensive data representation. The queries we derive from our OP rules have a broader term of queries, which are crucial for addressing gaps in knowledge graphs. Excellent recall, a measure of the OPRL algorithm's effectiveness, has a broader term of recall, indicating its ability to retrieve relevant information. Finally, the queries adduced from OP rules identify the answer, which is the specific missing fact needed for knowledge graph completion, while higher-confidence queries have a broader term of queries, reflecting their reliability in yielding correct answers.",
    "Prand has a broader term known as models, which refers to the logical rules or vector embeddings learned from knowledge graphs. In the context of knowledge graphs, eight million facts are encompassed within the broader category of facts. The PathFinding() function generates the predicate P5(z3, y), which is crucial for constructing open path rules. The process of reconstructing the KG is a broader term that encompasses various methods used in knowledge graph completion. Possible queries are a subset of queries, which are generated to address gaps in the knowledge graph. The closed path rule r evaluates using the knowledge graph K, which itself is a broader term for Knowledge Graphs. Facts in the KG are part of the broader knowledge graph (KG) category. The OPRL algorithm, which is a broader term for query generation, facilitates the creation of OPRL queries, which are specific types of queries. The minimum OPSC and minimum SC parameters are defined under the broader term Parameter, which includes user-defined inputs for the OPRL algorithm. Massive KGs fall under the broader category of Knowledge Graphs, while popular benchmark KGs are classified as KGs. The sample KG is also a type of Knowledge Graph. A fragment of the KG (K') is a specific subset of Knowledge Graphs (KGs). Traditional knowledge graph completion is achieved by answering actively generated questions, which are derived from the Open Path rules. The Active Knowledge Graph Completion (AKGC) task requires a named predicate to generate relevant queries. The problem of knowledge graph completion is a broader issue that pertains to the knowledge graph (KG) itself. Lastly, both K and a fact in the KG are broader terms that relate to Knowledge Graphs (KGs).",
    "Closed path rules form a closed path, which is a specific type of logical rule used in knowledge graph completion. Working KGs, which are actively maintained knowledge graphs, have a broader term known as Knowledge Graphs. The body and the head of a CP rule are components of CP rules, which are essential in the inference process. Reconstructing the KG is a process aimed at predicting new facts, utilizing learned embeddings. The rules with OPsupp(r) \u2265 1 are selected from candidate rules, indicating their relevance in knowledge graph completion. Additionally, a preference is given to those with a higher probability in the KG, which is a strategy within the broader context of knowledge graphs. The set of OP rules R is categorized under outputs, which are results generated by the system. Link prediction systems are a broader category that includes various systems designed for inferring relationships. The reduced KG is a smaller version of Knowledge Graphs, focusing on specific entities. Previous work in rule learning from a KG falls under the broader category of Rule learners. The target predicate is fixed in the context of OP rules, which are designed to enhance knowledge graph completion. The RESCAL evaluation function anchors this rule, providing a measure of its quality. Queries are generated with a preference given to KGs, ensuring that the most relevant information is sought. KG facts encompass a broader term known as public Knowledge Graphs, which are openly accessible. The AKGC task is part of the broader work in the literature related to link prediction and active knowledge graph completion. P2 is a specific predicate that falls under the broader category of Parameters. Closed path (CP) rules are a kind of Closed rules, which serve specific functions in knowledge graph completion. The AKGC task is also categorized under Knowledge Graphs, emphasizing its relevance. The embeddings for predicates and arguments in the sample KG are part of the broader category of arguments, which are essential for evaluating rules. Finally, the problem of active knowledge graph completion (AKGC) is a subset of the broader problem of knowledge graph completion, focusing on generating relevant queries.",
    "Queries are known to have precision as high as 98%, showcasing their effectiveness in knowledge graph completion. The work in the literature related to link prediction and active knowledge graph completion encompasses a broader term known as active knowledge graph completion, which itself is part of the larger domain of public Knowledge Graphs. Within this context, P_i serves as a predicate that has a broader term of Knowledge Graphs, while KG completion also falls under the umbrella of public Knowledge Graphs. Every fact in the KG is categorized under Knowledge Graphs (KGs), highlighting the comprehensive nature of these structures. Furthermore, queries generated from OPRL's rules are a specific type of query, indicating their relevance in the broader category of queries. High-performing link-predicting models are classified under models, emphasizing their role in enhancing knowledge graph completion. The open path standard confidence (OPSC) is a metric given by the knowledge graph (KG), which is crucial for evaluating the quality of mined rules. The two metrics used in this evaluation are assessed over the whole KG, ensuring a thorough analysis. The AKGC task is specifically designed to generate queries of the form P(?, e'), which are essential for identifying missing relationships. An embedding-based rule mining system is a broader term for rule mining, indicating its significance in the process. The body of each rule is a fundamental aspect of rules, which are essential for knowledge graph completion. The closed path rule 'r' is evaluated by Evaluation(R', K), ensuring its effectiveness. Candidate rules are assessed based on a sampled KG, which serves as a subset for evaluation purposes. The following two OP rules are associated with OPSC, further illustrating their importance. The queries generated by the OPRL algorithm also fall under the broader term of a query, reinforcing their role in knowledge discovery. Lastly, the rule body is a critical component of rules, while AKGC is a broader term that encompasses link predictors in the knowledge graph completion process, demonstrating the interconnectedness of these concepts. The sampled KG is categorized under Knowledge Graphs, highlighting its relevance in the overall structure.",
    "Closed rules are essential for completing knowledge graphs (KGs), while learning OP rules is not an alternative to link prediction. The performance of the Open Path Rule Learning (OPRL) algorithm is closely related to the concept of a query, which serves as a broader term for various types of information requests. Additionally, the embeddings for predicates and arguments in the sample KG, along with three different KGs and the complete Poker KG, all fall under the category of public Knowledge Graphs. In the realm of rules, two CP rules can be derived as broader constructs from the general category of rules. Section 5 of the study presents the process of generating relevant queries, which is crucial for knowledge graph completion. The quality measure OPHC is defined in terms of user-defined Parameters, while KG completion is linked to the use of link predictors in the knowledge graph completion process. Furthermore, the concept of being redundant with respect to the KG is encompassed within the broader framework of knowledge graphs. The models learned from the KG are part of a larger set of models, and the size of the KG is a critical aspect of Knowledge Graphs. Knowledge Graphs (KGs) themselves are a subset of public Knowledge Graphs, which also include benchmark KGs. The adjacency matrix representation of the KG is another broader term that relates to Knowledge Graphs (KGs). Lastly, rule mining is a technique that falls under the broader category of knowledge graphs, and the query is a specific instance within the broader context of queries.",
    "The concept of '8 M facts' encompasses a broader term known as 'data', which refers to the large volumes of weakly-structured information that Knowledge Graphs are designed to model. Within the realm of knowledge graph completion, the 'active knowledge graph completion task' is a critical process that falls under the broader category of 'Knowledge Graphs'. The method 'Sampling()' is proposed in the context of the RLVLR system, which is a high-performing link-predicting model. Furthermore, 'OP rules' facilitate the mining of 'rules with free variables', enhancing the flexibility of knowledge graph completion. The term 'o_e' is a broader term for 'Parameter', which includes user-defined inputs essential for the completion process. High-quality OP rules are specifically related to 'a specific target predicate', indicating their relevance in identifying missing entities. The 'rule-based link predictor' is a broader term for the proposed system that utilizes predefined rules for inferring relationships. Metrics such as '100% precision' and 'precision' are crucial for evaluating the accuracy of generated queries, with 'correct answer' being a broader term for the 'output' produced by these systems. Additionally, 'induced queries' are a broader term for 'queries' generated to address gaps in knowledge graphs. The process of 'knowledge graph completion' is essential for creating a 'complete KG', which is a broader term for 'public Knowledge Graphs'. The proposed fitness function applies to 'each rule on generation', ensuring the quality of mined rules. The 'OPSC/OPHC thresholds' are parameters that help assess the relevance of generated queries, while 'open path head coverage (OPHC)' is derived from 'closed path forms', highlighting the relationship between different rule types. Lastly, 'massive KGs' are a broader term for 'public Knowledge Graphs', emphasizing the scale of data involved in knowledge graph tasks.",
    "The 'sample KG' has a broader term known as 'public Knowledge Graphs', which encompasses various structured representations of knowledge. Within this context, the 'OPSC threshold' is defined as '0.9', indicating a specific quality standard for rule validation. The metrics 'open path: OPsupp, OPSC, OPHC' are categorized under the broader term 'path', which relates to the evaluation of open path rules. Additionally, 'knowledge graph (KG)' is a subset of 'Knowledge Graphs', and 'Traditional knowledge graph completion' also falls under this broader category. The 'OPRL-mined rules' are classified as 'rule-based methods', highlighting their reliance on predefined logical constructs. The 'OPRL' algorithm evaluates its performance using 'Wikidata', a collaborative knowledge base. Furthermore, 'They', referring to the queries generated by the OPRL system, is a broader term for 'an entity'. A 'chain of predicates in the rule' is a specific type of 'rules', which are essential for knowledge graph completion. 'Working KGs' are another subset of 'public Knowledge Graphs', actively maintained to identify missing facts. The 'fitness function' is proposed for the 'OPRL' method, guiding its optimization. The 'rule language' is utilized to express 'rules', while the 'evaluation method' is a broader term for 'Evaluation', which assesses the quality of generated rules. 'Link predictors' are categorized under the broader term 'system', which refers to the proposed OPRL method. 'Closed rules' have 'a different application' compared to open path rules, focusing on answering queries. The 'reduced KG' is also a part of 'public Knowledge Graphs', serving as a smaller version for efficient processing. The 'maximum size of each sample' is defined under the broader term 'Parameter', which sets limits for the evaluation process. Lastly, 'rules' are a broader category that includes 'logical rules', and 'closed path (CP) rules' specifically form 'a closed path', allowing for the inference of new facts.",
    "In the realm of knowledge graph completion, queries actively ask questions, which are essential for identifying gaps in the knowledge graph. KG facts encompass a broader category of facts, highlighting the interconnectedness of information within the graph. The performance of OPRL, which refers to the effectiveness of the Open Path Rule Learning algorithm, is a subset of overall performance metrics in this context. Actively generated questions are a specific type of inquiry that falls under the broader category of questions, while the head of the rule is a critical component of the rules that guide the generation of these queries. Furthermore, queries about potential missing facts are designed to uncover unknown information, reinforcing the importance of queries in this process. The answer to these queries might be a specific knowledge graph (KG), which serves as a foundation for understanding the relationships between entities. OPHC is calculated for the candidate rules, ensuring that the most relevant rules are utilized in generating queries. Relevant queries are often derived from a full knowledge base (KB), allowing for comprehensive exploration of the data. RLVLR generates each fact produced by its algorithm, contributing to the overall knowledge graph. An entity extant in the KG is part of the broader category of Knowledge Graphs (KGs), which represent structured knowledge. A fragment of the KG (K') is a subset of the knowledge graph, facilitating focused analysis. Each fact in the KG is a representation of relationships within the knowledge graph, which itself is a broader term encompassing K. OPSC, a quality measure, is related to the Parameter that defines the criteria for rule mining. The answer to queries could introduce new entities into the knowledge graph, expanding its scope. K' is a fragment that contributes to the larger framework of Knowledge Graphs, while the average numbers of quality rules mined for all predicates in the respective KGs reflect the underlying data that supports these knowledge structures. Lastly, query P_t(?, e) represents a specific type of query that is part of the broader category of queries, emphasizing the diverse approaches to knowledge graph completion.",
    "Active knowledge graph completion (AKGC) is closely related to facts, as it aims to identify and introduce missing information within knowledge graphs. The performance of the Open Path Rule Learning (OPRL) algorithm exceeds that of both YAGO2 core and the Poker dataset, demonstrating its effectiveness in generating highly relevant queries. High precision in this context means that our queries are particularly effective at identifying missing answer facts. The broader term 'mining' encompasses the process of extracting valuable rules from knowledge graphs, while R' serves as a set for storing generated Open Path rules, which are defined by variables. The head of the rule is a component of the broader category of rules that guide the inference of missing facts. Additionally, the embeddings for predicates and arguments in the sample knowledge graph are a subset of learned embeddings, which are crucial for assessing the quality of generated queries. Knowledge graphs are often incomplete, indicating that they lack certain entities or facts, and the answer to these gaps might be found within KGs. In experimental settings, samples are limited to a maximum size of 800 entities, allowing for efficient evaluation of the OPRL algorithm. The OPSC threshold is a quality measure that determines the validity of rules generated by the OPRL algorithm. Open Path rules are specifically designed to generate questions that help uncover missing facts, with the variable A being applied to the predicate P2 in this process. Finally, generated queries can be effectively used in combination with a link predictor, which is a broader term that includes various models aimed at predicting missing relationships within knowledge graphs.",
    "The sampled KG has a broader term that encompasses public Knowledge Graphs, which are structured representations of knowledge. Within the realm of Knowledge Graphs, the enterprise KG serves as a specific instance designed for business contexts. Relevant queries, which are significant for knowledge graph completion, fall under the broader category of queries. OP rules play a crucial role as they connect a path of entities, facilitating the identification of relationships within the graph. The learning system, a component of the proposed system, is essential for tuning the selection of candidate rules. K, representing a knowledge graph, has a broader term known as Parameter, which includes user-defined inputs for rule generation. The reduced knowledge graph K' is assigned and obtained through the operation Sampling(K, P), which selects relevant entities based on a target predicate. The quality of rules mined from these graphs is reported based on OPSC/OPHC scores, reflecting their effectiveness. Knowledge graph completion is a broader approach that aims to enhance the completeness of knowledge graphs. Every fact in the KG is part of the larger concept of knowledge graph (KG). The maximum length of rules is also categorized under Parameter, indicating constraints on rule generation. P_t, a specific predicate, is recognized as a fact in KGs. YAGO2, a significant knowledge base, has a broader term that includes the system. The method IncPathFinding extends the predicate P5(z3, y), contributing to the generation of additional candidate rules. The size of the KG is related to public Knowledge Graphs, indicating its importance in scalability. The work in the literature related to link prediction and active knowledge graph completion is encompassed within the active knowledge graph completion task. Table 2 illustrates the average numbers of quality rules mined for all predicates in the respective KGs, showcasing the performance of the OPRL algorithm.",
    "In the realm of knowledge graph completion, queries induced from OPRL-mined rules have a broader term known as a query, which serves as a specific request for information. The predicate P_t is associated with the broader term Parameter, indicating its role in defining user inputs for the Open Path Rule Learning (OPRL) algorithm. OP rules play a crucial role as they act to connect and also connect entities forming the object argument of the tail predicate, P_n, thereby facilitating the identification of missing facts. KG sampling, which has a broader term of Sampling(), is a technique that enhances the efficiency of knowledge graph completion processes. The fact in the KG is a broader term for Knowledge Graphs, emphasizing the structured representation of information. The predicate P_n is recognized as a fact in KGs, indicating its significance in the knowledge graph structure. OPSC is calculated for the candidate rules, which are evaluated for their effectiveness in completing knowledge graphs. RLVLR, a broader term for current link predictors, utilizes closed path rules for knowledge graph completion. Additionally, novel, efficient vector computation is employed to assess rule quality, ensuring the effectiveness of the generated rules. The inference of specific facts is noted as being missing from KGs, highlighting the challenges in knowledge graph completion. MinOPHC, another parameter, has a broader term of Parameter, indicating its role in setting quality thresholds. The correct answer, which refers to a missing entity, is categorized under outputs, emphasizing its importance in the completion process. Vast KGs, representing large-scale knowledge graphs, also fall under the broader category of Knowledge Graphs. AKGC, which pertains to the Active Knowledge Graph Completion task, has a broader term of an entity, indicating its focus on generating relevant queries. The process of embedding the entities and predicates of a given KG is recognized as a broader term for process, showcasing its significance in knowledge graph representation. Lastly, the work in the literature related to link prediction and active knowledge graph completion is encompassed within the broader term of Traditional knowledge graph completion, reflecting the ongoing efforts to enhance knowledge graph methodologies. The extension to 6, which allows for longer rules, is categorized under Parameter, indicating its role in expanding the capabilities of the OPRL algorithm.",
    "In the realm of knowledge graph completion, various entities and concepts are interconnected through broader terms. For instance, the predicate P_n has a broader term known as Parameter, which encompasses user-defined inputs for rule-based frameworks. The term 'correct answer' is a broader concept that includes 'entities', highlighting the importance of identifying missing elements within knowledge graphs. Public Knowledge Graphs and benchmark KGs are both categorized under the broader term 'knowledge graph (KG)', emphasizing their role in structured knowledge representation. Traditional knowledge graph completion is a specific application that falls under public Knowledge Graphs, showcasing its relevance in this domain. Additionally, the adjacency matrix representation of the KG is another broader term associated with knowledge graphs, illustrating the mathematical structures used to depict relationships. The active knowledge graph completion task is linked to link predictors in the knowledge graph completion process, indicating its significance in enhancing graph completeness. RLVLR, a rule learning system, is classified under the broader category of a link predictor, demonstrating its function in knowledge graph completion. Furthermore, an instantiation of the body of an OP rule is a specific application of OP rules, which can instantiate entities to generate queries. The quality estimation function, denoted as f_op, plays a crucial role in evaluating the effectiveness of these rules. The set of OP rules R is a broader term that encompasses a mathematical collection of rules, while relevant queries for new facts are categorized under a query, highlighting their purpose in knowledge retrieval. The maximum rule length of 4 is another parameter that defines the constraints within which these rules operate. High-performing predictors are classified under models, indicating their role in accurately rediscovering missing facts. Facts themselves form the basis of a reduced KG, which retains only relevant entities for efficient processing. Rule mining is a broader process that encompasses various techniques for discovering patterns in knowledge graphs. The knowledge graph K = (E, F) represents a structured framework that includes entities and their relationships, falling under the broader category of Knowledge Graphs (KGs). Lastly, RLVLR is also recognized as a traditional link prediction method, while automatic completion methods are noted for their ability to scale well, ensuring effective handling of increasing data complexity.",
    "In the realm of knowledge graph completion, queries are answered by closed rules, which serve as logical constructs to address gaps in the data. Relevant questions, a broader term encompassing questions, are generated to identify missing links within the knowledge graph. The learning phase, which is part of the process of developing Open Path rules, plays a crucial role in refining these queries. The predicate livesIn(x, z) is a specific type of rule that indicates residency relationships, while P_t(e', e) represents a fact within knowledge graphs. OP rules evaluate the quality of each rule, ensuring that only the most effective ones are utilized. Link prediction extends beyond the scope of Active KGC, highlighting its broader applications. Failing rules, which do not meet the necessary thresholds, are also categorized under rules. Section 6 of the relevant literature discusses the results of a range of experiments that validate these concepts. The embedding representation P(2)_n is a parameter that aids in assessing rule quality. Knowledge graph completion is a broader term that encompasses the entire field of knowledge graphs, which are structured representations of information. Rules, as logical constructs, fall under the umbrella of algorithms that facilitate knowledge graph completion. K', a reduced fragment of a knowledge graph, is related to public knowledge graphs, which are often found to be incomplete. HOLE, an embedding-based link predictor, is classified under models that assist in knowledge graph tasks. The number of facts in the KG is a critical measure of its completeness. Variables such as x, y, z_1, ..., z_{n-1} are integral to closed path rules, which form logical loops to infer new facts. The inference module derives KG facts from existing data, while learning OP rules is a process that falls under the broader category of rule learners. Finally, public knowledge graphs are recognized for their incompleteness, emphasizing the ongoing need for knowledge graph completion efforts. OP rules act to connect entities satisfying the subject argument of the head predicate, P_t, thereby enhancing the overall structure and utility of knowledge graphs.",
    "OP rules connect entities satisfying the subject argument of the head predicate, P_t, facilitating the identification of relevant entities within knowledge graphs. The maximum size of each sample is set to 800 entities, which is crucial for the evaluation of various algorithms. In the context of the complete Poker KG, an anomaly is absent as expected, indicating a potential issue in the knowledge graph's completeness. The relationship between r and an entity shows that r has a broader term, emphasizing its role in knowledge representation. Similarly, OPRL rules are categorized under rule-based methods, while existential rules fall under the broader category of rules. OP rule variable patterns are also classified as patterns, highlighting their significance in rule formation. The Co-occurrence Fitness Function connects its head and body, playing a vital role in assessing the quality of open path rules. A high-performing link-predicting model is specifically built for knowledge graph (KG) applications, enhancing the graph's utility. The intended scope of KGs is encompassed within the broader concept of Knowledge Graphs. OP rules admit instantiation, allowing for the application of rules to specific entities. Predicate P is represented through its embedding matrix, which captures the relationships within the KG. Relevant queries, which are essential for knowledge graph completion, have a broader term of queries. The enterprise KG is a subset of public Knowledge Graphs, designed for business contexts. An automated link predictor is classified under models, indicating its predictive capabilities. P(2)_i is a specific instance of Parameter, which defines the rules' characteristics. Open path support is given by the knowledge graph (KG), and an entity extant in the KG is a specific representation within the broader knowledge graph. Finally, the problem of active knowledge graph completion (AKGC) is a challenge that falls under the domain of link predictors in the knowledge graph completion process.",
    "The OP rule miner is a specialized algorithm that plays a crucial role in the mining of Open Path rules, which are essential for knowledge graph completion. It operates on samples that have a maximum size of 800 entities, allowing for efficient evaluation of the OPRL rules, which are also categorized under algorithms. TuckER, another significant model, is designed for link prediction within knowledge graphs (KGs), which are structured representations of information. Generating queries is a process that stems from the need to identify missing facts in KGs, and it is closely related to active knowledge graph completion, which aims to fill these gaps. The rule quality, assessed through an embedding-based fitness function, is vital for ensuring the effectiveness of the generated rules. Additionally, the popular benchmark KGs serve as standard datasets for evaluating the performance of various knowledge graph completion methods, including those that utilize the high-performing link-predicting model. The rule P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, y) exemplifies the structured relationships within KGs, incorporating predicates like P2 to establish connections between entities.",
    "In the realm of knowledge graphs, the entity 'e_i' has a broader term known as 'Parameter', which signifies user-defined inputs essential for mining open path rules. Queries, which are crucial for addressing gaps in knowledge graphs, are often of little use without the right context. The entities 'e' and 'e'' occur within knowledge graphs (KGs), highlighting their significance in the structure of these data representations. Furthermore, every possible query is encompassed by the broader category of queries, emphasizing the vast potential for information retrieval. The embeddings for predicates and arguments in the sample KG fall under the broader term 'embedding', which is vital for representing relationships within the graph. Similarly, closed path forms are categorized under the broader term 'path', indicating their role in the logical structure of knowledge graph completion. The fact in the KG is part of the broader concept of public Knowledge Graphs, which serve as a repository of structured information. Highly relevant queries for missing links also belong to the broader category of queries, showcasing their importance in identifying gaps. Earlier work in rule mining for KG completion is classified under rule learning, reflecting the evolution of techniques in this field. Mined rules are associated with rule-based methods, indicating a systematic approach to knowledge graph enhancement. Facts in the KG are a subset of Knowledge Graphs, representing the individual pieces of information stored within. KG facts are categorized under data, emphasizing the foundational role of information in knowledge graphs. The predicate 'P_1' is another instance that falls under the broader term 'Parameter'. The model RLvLR* is classified under models, showcasing its application in knowledge graph tasks. The problem of knowledge graph completion is a challenge that is inherently linked to Knowledge Graphs, as it seeks to fill in missing information. Vast KGs are part of public Knowledge Graphs, indicating their extensive nature. A preference given to those with a higher probability in the KG is a strategy that aligns with the broader concept of Knowledge Graphs. Closed path (CP) rules are defined by their general form, which includes 'the body', illustrating their structural characteristics. Lastly, the predicate 'P' is categorized under relations, which are fundamental to the connections within knowledge graphs. The queries themselves are also part of the broader category of queries, reinforcing their role in knowledge graph completion.",
    "In the realm of knowledge graph completion, queries are categorized as queries of the form P(?, e'), which are defined by a query q = P(?, e') or q = P(e, ?). These queries serve as a broader term encompassing various types of requests for information. The RLVLR system, a specific automated link predictor, is associated with the generation of these queries. Furthermore, generating queries is another broader term that includes the process of creating relevant questions derived from open path rules. Open path head coverage (OPHC) is a metric that falls under the broader category of coverage, which evaluates the quality of mined open path rules. The OP rules lead to the derivation of two CP rules, which are logical consequences of the OP rules. Additionally, the distribution of mined rules is a broader term that represents the statistical categorization of these rules. The multilingual, collaboratively-created KG, such as Wikidata, is a type of Knowledge Graph (KG). The OP rule learning method OPRL is classified under the broader category of Methods, while CP rules are instantiated by the process of instantiation, which cannot be an instantiation of CP rules. Notably, this paper does not utilize any specific link predictor for answering questions. Lastly, z_0 is a logical variable that has a broader term known as Parameter, and the OP rule formalism is categorized under rule language, which facilitates the expression of rules in knowledge graph completion. Open Path (OP) is another broader term that encompasses relationships within the knowledge graph, and learning OP rules is classified under the broader category of algorithms.",
    "A learning system encompasses a broader term known as a system, which includes various methodologies for knowledge graph completion. Within this context, the open path standard confidence (OPSC) is derived from closed path forms, highlighting the relationship between different rule types in knowledge graph completion. Knowledge graphs (KGs) hold out facts, which are essential for the inference of specific facts, a process that is also a broader term for various methodologies involved in knowledge graph completion. Candidate rules are evaluated by OPHC, a quality measure that assesses the performance of these rules. Additionally, a closed path is a specific type of path, which is crucial for understanding the structure of rules in knowledge graphs. The average number of accurate rules is a quality measure that reflects the reliability of the rules generated. RESCAL embeddings serve as models that represent relational data, while a path is a broader term that encompasses various sequences of predicates connecting entities. Evaluation(R', K) is a process that assesses the quality of generated rules against a knowledge graph. CHAI is another system that enhances the performance of link predictors by filtering facts. The body of a rule must be satisfied in KGs to infer new facts, and the work in the literature related to link prediction and active knowledge graph completion falls under the broader category of knowledge graph completion. P(2)_t represents an argument embedding vector, which is a parameter in the context of open path rules. The concept of a single unbroken loop of links is a broader term for loops in knowledge graph completion. Knowledge graph completion itself is a broader term that includes public Knowledge Graphs, which are structured representations of knowledge. They, referring to the queries generated from the OPRL system, are categorized under entities, which represent the individual items within the graph. OP rules are a type of rule that facilitates the generation of queries for identifying missing facts, and preliminary attempts towards learning existential rules from knowledge graphs aim to enhance the generation of relevant queries. Finally, the number of facts in the KG is a broader term that relates to public Knowledge Graphs, indicating the total count of distinct relationships represented within.",
    "Generating relevant queries is a process that encompasses various methods, including the generation of queries adduced from OP rules, which identify a new fact necessary for knowledge graph completion. This process is part of a broader approach aimed at enhancing the quality of knowledge graphs. The rule quality, which assesses the effectiveness of rules in connecting entities, is a critical aspect of this approach. An efficient method has been proposed to evaluate OP rules, ensuring that the body and the head of a CP rule are satisfied within knowledge graphs (KGs). Furthermore, the algorithm developed achieves an impressive 0.98 precision, indicating its reliability in generating accurate queries. The facts that form K' are essential links between these entities, while the predicate P_i relates to the entity e3, highlighting the intricate relationships within the knowledge graph. Overall, the intended scope of KGs often overlaps with public Knowledge Graphs, emphasizing the need for effective rule learning methods like RLVLR, which is also referred to as RLvLR*.",
    "The concept of 'redundant with respect to the KG' is a broader term that encompasses 'Knowledge Graphs', which are structured representations of knowledge. Within this framework, 'Embeddings(K')' serves as a specific instance of 'learned embeddings', which are low-dimensional vector representations used in knowledge graph tasks. The 'OP rule formalism' is identified as a fragment of the 'language of existential rules', which facilitates the expression of rules in knowledge representation. Furthermore, 'Open Path (OP) rules' are categorized under 'logical rules', indicating their role in knowledge graph completion. The term 'the queries' is a broader category that includes 'queries', which are essential for addressing gaps in knowledge graphs. Similarly, 'satisfying facts' are a subset of 'facts', representing entities that meet the conditions of specific rules. The 'Co-occurrence for the whole rule' is derived by aggregating 'pairwise local occurrences', highlighting the interconnectedness of entities in the graph. Knowledge graphs, or 'KGs', are formally defined by the structure 'K = (E, F)', where E represents entities and F denotes the facts connecting them. In the context of knowledge graph completion, 'link predictors in the knowledge graph completion process' are closely related to the overall process of knowledge graph completion. The ability to 'predict new facts' is a broader aspect of the 'process' involved in knowledge graph completion. Additionally, 'length' and 'user parameters' are both broader terms under the category of 'Parameter', which defines user inputs for rule mining. The term 'rule mining' itself is a broader concept that falls under 'Knowledge Graphs'. The challenges posed by 'massive size' of knowledge graphs are encapsulated within the broader term 'sizes'. Popular benchmark KGs, which are widely used for evaluating knowledge graph methods, fall under the category of 'public Knowledge Graphs'. The 'OP rules' are also a broader term that includes 'logical rules', while 'r' represents a broader category of 'relations'. Lastly, 'a first solution' introduces the 'problem of active knowledge graph completion (AKGC)', emphasizing the need for generating relevant queries to fill in missing facts. The method 'Sampling()' is a broader term that refers to the 'process' of creating a reduced knowledge graph for efficient rule learning, and 'link predictors in the knowledge graph completion process' also falls under the broader category of 'process'.",
    "The average numbers of quality rules mined for all predicates in the respective KGs are related to the predicate, indicating that these rules are essential for understanding the relationships within knowledge graphs. Generating relevant queries is a process that encompasses the broader category of queries, which are crucial for addressing gaps in knowledge. The closed path rule 'r' is associated with variables, highlighting its role in logical expressions that infer new facts. In the context of knowledge graph completion, the predicate P_1 involves the entity e_1, establishing a connection between them. Furthermore, facts in the KG are part of the broader category of public Knowledge Graphs, emphasizing their significance in structured knowledge representation. The minimum SC serves as a parameter that influences the quality of rules, while candidate rules are evaluated by the quality measure OPSC, ensuring their effectiveness in knowledge graph completion. The concept of similar parameters is proposed in the RLVLR system, which focuses on enhancing knowledge graph completion methodologies. The work in the literature related to link prediction and active knowledge graph completion addresses the overarching problem of knowledge graph completion, which aims to fill in missing information. The fact in the KG is a specific instance of the broader category of facts, which are essential for knowledge representation. New entities are introduced as part of the broader category of entities, expanding the knowledge graph's coverage. OPHC is another quality measure that falls under the umbrella of quality thresholds, ensuring the reliability of the rules generated. KG completion aims to predict answers for known unknowns, thereby enhancing the knowledge graph's utility. Queries generated by a modified leading-edge link predictor are shown to outperform general queries, indicating their effectiveness in knowledge graph tasks. The problem of knowledge graph completion is closely tied to public Knowledge Graphs, which serve as a foundation for knowledge representation. Additionally, the rule is redundant with respect to the knowledge graph (KG), suggesting that it may not provide new insights. Link prediction is a broader concept that encompasses various models used to infer relationships in knowledge graphs. Lastly, a preference given to those with a higher probability in the KG reflects a strategy for prioritizing query generation based on relevance.",
    "Closed rules enable the inference of specific facts, allowing for logical deductions within knowledge graphs. Our algorithm, which is a part of broader methods, utilizes parameters such as max rule length l to define the maximum allowable length of rules. RLVLR, a system that employs closed path (CP) rules, falls under the category of link prediction systems. The IncPathFinding method allows for the extension to 6, facilitating the generation of longer rules. When an answer to the question is derived, it introduces new entities into the knowledge graph. High quality rules are essential as they contribute to the overall quality of the knowledge graph completion process. Baseline query sets serve as a reference for generating queries, which are crucial for identifying gaps in knowledge graphs. A fragment of the KG (K') is a subset of knowledge graphs that aids in efficient computation. Closed path (CP) rules have a specific structure, defined by the head of the rule. However, generated queries may be valid yet lack answers in the test set. These parameters, including the maximum rule length, are vital for the algorithm's performance. A fact in the KG represents a relationship within knowledge graphs, while K itself is a broader term encompassing knowledge graphs. Queries about potential missing facts are aimed at uncovering unknown information, and they achieve a recall of 62%. The Active Knowledge Graph Completion (AKGC) task involves generating relevant queries for entities. R' is an initially empty set that stores generated Open Path rules, and n refers to the total number of facts in the KG. Queries are essential for addressing potential missing facts, which are individual pieces of information within the knowledge graph. Unification is a process that matches variables in rules to derive logical conclusions.",
    "In the realm of knowledge graph completion, relevant questions are a subset of broader inquiries known simply as questions. These questions are essential for uncovering missing facts within knowledge graphs. The earlier work in rule mining for KG completion is closely related to the broader field of association rule mining, which focuses on discovering patterns in data. Within this context, specific entities can be categorized under the term 'an entity', highlighting their relevance in the knowledge graph. Each rule on generation is part of a larger process known as generation, which involves creating rules that facilitate knowledge graph completion. The quality estimation function, also referred to as the quality estimation function, plays a crucial role in evaluating these rules. Existential rule learning is another important aspect of this process, contributing to the generation of relevant queries. The path P1, P2, ..., Pm represents a broader category known as path, which is vital for understanding the relationships between entities. The results of a range of experiments have discussed the quality notion of query relevance, emphasizing the importance of effective queries in this domain. Additionally, the support degree of r is defined as OPSupp, a metric that quantifies the effectiveness of open path rules. CP rules, which are a type of logical rules, contribute to the overall framework of knowledge graph completion. OP rules include specific predicates like studiesIn(x, z), which help in inferring relationships between entities. Furthermore, embeddings are generated to enhance the quality of OP rules, while knowledge graph completion itself is focused on predicting facts that may be missing from the knowledge graph. This process is intricately related to relevant questions, as they guide the identification of these missing facts. The queries that link predictors need to repair working KGs can be classified under the broader term of a query, highlighting their significance in the completion process. Missing facts exist within the knowledge graph (KG), and the evaluation process assesses the quality of these graphs. Generated queries, which are a broader category of queries, play a pivotal role in this context, as they help uncover the number of facts in the KG, which is essential for understanding its completeness. Lastly, P_t is a predicate that falls under the broader category of Knowledge Graphs, illustrating the interconnectedness of these concepts.",
    "The term 'answer facts' has a broader term known as 'data', which encompasses the large volumes of weakly-structured information that knowledge graphs are designed to model. In the context of knowledge graph completion, 'learned embeddings' are utilized to predict 'new facts', thereby enhancing the knowledge represented in these graphs. A 'multilingual, collaboratively-created KG', such as Wikidata, is a specific instance of a broader 'knowledge graph (KG)'. The process of 'Generating relevant queries' effectively generates 'relevant queries' that can be used to identify missing information in a knowledge graph. Within this framework, entities like 'e_1' and 'e_2' are related, indicating their interconnectedness in the knowledge graph. The knowledge graph 'K' is assigned by the operation 'Sampling(K, P)', which selects relevant entities for analysis. The 'query performance of OPRL and RLvLR*' is evaluated and plotted as 'ROC curves', providing insights into the effectiveness of these algorithms. Furthermore, 'RLVLR', a specific link predictor, has a broader term that encompasses its role in link prediction. The tool 'AMIE+' is categorized under the broader term 'system', which refers to the proposed method for knowledge graph completion. The concept of 'rule learning' is crucial as it curates and develops knowledge graphs, ensuring they are comprehensive and useful. In this context, 'P1' is identified as a part of 'OP rules', which are essential for generating queries. The term 'incomplete' is related to 'quality', indicating that incomplete knowledge graphs lack certain necessary information. Additionally, 'link predictors' fall under the broader category of 'models', which are used to forecast relationships in knowledge graphs. 'Minimum thresholds' are defined as a broader term under 'Parameter', which specifies the criteria for evaluating the quality of generated rules. The quality measure 'OPSC' also has a broader term known as 'quality thresholds', which are used to assess the effectiveness of the rules. Lastly, 'Knowledge Graphs (KGs)' serve as a convenient technology to model and store 'massive quantities of weakly-structured data', facilitating the integration and retrieval of information.",
    "Every fact in the KG has a broader term known as Knowledge Graphs, which are structured representations of knowledge. The system, referred to as 'It', also has a broader term that encompasses the proposed system. Additionally, the concept of being redundant with respect to the KG is categorized under public Knowledge Graphs. In the realm of knowledge graph rule mining, a looping path is a specific type of path that has a broader term. The benchmark dataset FB15KSE causes the generation of relevant queries, which are essential for knowledge graph completion. The novel algorithm OPRL falls under the broader category of Methods, while the support degree of an open path rule, known as OPsupp, is related to variables. Rule mining is another method that has a broader term of public Knowledge Graphs. New facts are classified under the broader term of facts, indicating their role in knowledge representation. The method IncPathFinding extends the predicate P3(z1, z2), which is crucial for generating open path rules. RLVLR defines a similarity fitness function, which is used to evaluate the quality of rules. These rules include obsolete and low-quality rules, highlighting the need for effective rule evaluation. The support degree of OPsupp is equal to 1, establishing a minimum threshold for rule evaluation. Furthermore, the hybrid fitness function combines the open path fitness function, f_op(.), to enhance rule quality. The closed path rule, denoted as r, has a broader term that encompasses entities. The novel algorithm OPRL is categorized under Methods, emphasizing its innovative approach. The variable n represents the total number of facts in the KG, which is essential for understanding the graph's structure. Answering such questions is a broader term that includes questions generated for knowledge graph completion. Knowledge graphs (KGs) are built from unstructured sources, demonstrating their adaptability in knowledge representation. Lastly, RLVLR is classified under the broader term of rule-based link predictors, showcasing its role in inferring relationships within the graph.",
    "The method for learning rules with free variables from Knowledge Graphs (KGs) is a specific approach that falls under the broader category of Methods. Within this framework, CP rules are defined using argument embeddings, which serve as vector representations in natural language processing. Additionally, OP rules, which are a type of algorithm, have a broader term that encompasses various algorithms used in knowledge graph completion. The process of learning OP rules is categorized under the learner, while the mathematical variable P_{i+1} is associated with the Parameter that defines user inputs for rule mining. Open Path (OP) rules are constrained existential rules that facilitate knowledge graph completion. The facts in the KG represent the number of facts contained within the knowledge graph, and they are also classified under the broader term of facts. The Open Path Fitness Function plays a crucial role in estimating the rule quality, ensuring that the generated rules are effective. Prand, a baseline query generator, is part of the broader category of baseline query sets. Public Knowledge Graphs are a subset of Knowledge Graphs, which also include benchmark KGs that serve as reference datasets. Queries generated in this context aim to uncover facts, and they are specifically designed to address gaps in knowledge. The mention of four million entities highlights the extensive nature of the entities represented in these graphs, which are further categorized under entities. The adjacency matrix representation of the KG is another broader term that relates to Knowledge Graphs, while the process of Evaluation(R', K) is part of the broader Evaluation framework used to assess the quality of generated rules.",
    "In the realm of knowledge graph completion, relevant questions are a subset of queries that aim to uncover missing facts, highlighting their importance in evaluating link prediction systems. The logical expression locatedIn(z, y) is categorized under rules, which serve as guidelines for generating these queries. The process of generating relevant queries is a more specific aspect of generating queries, both of which are crucial for identifying missing entities. The entity e_1, which is part of the broader category of entities, plays a significant role in this context. Additionally, embeddings derived from a fragment of the knowledge graph (K') are essential for creating embeddings that enhance the understanding of relationships within the graph. RLVLR, a type of link predictor, utilizes these embeddings to improve the accuracy of predictions. The concept of a closed path is defined as a single unbroken loop of links, which is fundamental in the formulation of predicates like predicate P, which itself is a broader term for predicates in general. The queries generated from open path rules are structured to introduce missing entities, aligning with our objective to mine the head, P. Traditional link prediction encompasses the overall process of predicting missing relationships, while the queries adduced from OP rules represent specific inquiries aimed at filling gaps in knowledge. Parameters such as the maximum length of rules are critical in this process, as are the obsolete and low-quality rules that are included in the rules with OPsupp(r) \u2265 1. Furthermore, a fragment of the KG (K') is a reduced subset of public Knowledge Graphs, facilitating efficient analysis. The variable z_i (1 \u2264 i \u2264 n - 1) serves as the object argument of predicates P_i, illustrating the interconnectedness of entities within the graph. Lastly, possible queries about this set of facts are categorized as queries, emphasizing their role in exploring potential relationships.",
    "A link predictor is utilized to infer new facts, which are essential for enhancing knowledge graphs. Within this context, a fact in the KG has a broader term that encompasses public Knowledge Graphs, indicating the expansive nature of knowledge representation. Each query, which is a specific request for information, falls under the broader category of queries, highlighting the various forms these inquiries can take. The least acceptable OPSC and OPHC scores are defined by the Parameter, which also includes v(2)(P1), a vector related to the parameters of the knowledge graph. The knowledge graph K is also categorized under public Knowledge Graphs, emphasizing its role in structured information sharing. A query is a specific instance of the broader queries, while Possible queries about this set of facts also belong to this category. The original rule is maintained alongside both the original and extended rules, which are crucial for generating relevant queries. Scoring, an important aspect of knowledge graph completion, is a broader term for the evaluation method used to assess the quality of mined rules. The maximum length of target rules is another parameter that defines the complexity of the target rules being generated. Fitness values are derived from rules, providing a numerical basis for evaluating their effectiveness. The correct answer, which is necessary for completing knowledge graphs, is an entity extant in KGs. The hybrid fitness function combines f_co(.), enhancing the evaluation of rules. Additionally, embedding the entities and predicates of a given KG is a broader term for learned embeddings, which facilitate the reconstruction of knowledge graphs. The distribution of mined rules is characterized by OPSC, reflecting the quality of the rules extracted. Evaluation() serves as a broader term for the process of generating relevant queries from learned Open Path rules. Lastly, e_1 is categorized under instances, representing specific facts in the knowledge graph, while the partial area under the curve (AUC) is associated with OPRL, a novel algorithm for knowledge graph completion. The average number of accurate rules mined, referred to as #Arules, is classified under variables, which are essential for inferring relationships within the knowledge graph.",
    "The concept of '800 entities' encompasses a broader term known as 'an entity', which refers to distinct objects or concepts within a Knowledge Graph (KG). Within the realm of algorithms, 'IncPathFinding(K', P_t, P, A, k, R')' is a specific function that falls under the broader category of 'algorithm'. The dataset 'FB15KSE' is classified as a type of 'Knowledge Graphs (KGs)', serving as a benchmark for evaluating knowledge graph completion tasks. In knowledge graph completion, 'models' are expressed as 'logical rules', which are essential for inferring relationships. Furthermore, 'some missing fact' can be retrieved by employing 'a link predictor', a method designed to identify potential entities that fill gaps in the knowledge graph. The term 'variables' has a broader term 'Parameter', indicating user-defined inputs in the context of knowledge graph algorithms. Additionally, 'high precision' is a quality metric that falls under the broader category of 'precision', reflecting the accuracy of generated queries. An 'entity extant in the KG' is also categorized under 'Knowledge Graphs', highlighting its relevance in the structure. In Section 6 of the paper, the authors formalize a 'quality notion of query relevance', which is crucial for assessing the effectiveness of generated queries. The 'Sampling()' method computes 'a fragment of the KG (K')', which is a reduced subset of the knowledge graph, and it takes 'K', the complete knowledge graph, as input. The 'hybrid fitness function' is noted for outperforming the 'fitness function adapted from RLVLR', showcasing advancements in rule evaluation. The 'hybrid approach' is a broader term that refers to methodologies combining different fitness functions for improved rule selection. The set of entities 'E' is also categorized under 'Parameter', emphasizing its role in knowledge graph structures. The 'novel, efficient vector computation' is associated with 'formal quality criteria', indicating its importance in evaluating rule quality. The fragment 'K'' is a broader term for 'variables', which are symbolic placeholders in logical rules. Moreover, 'every fact in the KG' is classified under 'public Knowledge Graphs', indicating its relevance in open data contexts. The 'Minimum thresholds for OPSC and OPHC' are essential criteria that fall under 'OPHC', guiding the evaluation of candidate rules. The rule 'isCitizenOf(x,y)' is categorized under 'rules', establishing relationships within the knowledge graph. Lastly, 'link prediction systems' utilize 'knowledge graph (KG)' to infer relationships between entities.",
    "A hybrid approach is a broader term that encompasses various methods, including the approach used in knowledge graph completion. Within this context, the dataset FB15K SELECTED serves as a benchmark for evaluating link prediction algorithms in Knowledge Graphs (KGs). Short OP rules are specifically designed to learn the rightmost predicate in a sequence of predicates, enhancing the efficiency of knowledge graph completion. Algorithm 1 utilizes the maximum length of rules as a parameter to assess the quality of candidate rules. Questions generated during this process often seek answers to facts that are missing from the training set. The object argument of P_t, which is a broader term for the predicate P_t, plays a crucial role in connecting entities. Additionally, the learning system parameter is a broader term that includes various parameters, such as the embeddings for predicates and arguments in the sample KG, which are essential for evaluating the relationships between entities. Similar parameters also fall under the broader category of Parameter, which includes the top t% of rules that are selected based on their fitness values. The open path standard confidence (OPSC) is another broader term related to confidence metrics used in rule learning, which is part of the overall process of knowledge graph completion that aims to predict missing facts. The state-of-the-art rule-based link predictor is a high-performing link-predicting model that utilizes these principles. The targets within this framework are specific predicates that are evaluated for their performance. Relevant questions generated from the learned rules are posed to an oracle, which aids in identifying missing links. The OPSC threshold, which varies from 0.1 to 1, determines the minimum quality required for rules to be valid for query generation. Repeatable patterns, which are broader patterns, help improve the performance of rule learning, while instances represent specific facts within a sample of entities used for evaluation. Finally, queries soliciting missing facts are a broader category that encompasses various types of queries aimed at retrieving absent information from the knowledge graph.",
    "The synthetic Poker KG is a dataset that serves as a broader term for datasets used in various contexts, including knowledge graph completion. Within this domain, major approaches to rule learning encompass various methodologies, which can be classified under the broader term of approaches. Notably, Freebase and YAGO2 are significant examples of Knowledge Graphs (KGs), with Freebase being a foundational dataset in this field. ScaleKB represents a specific rule learning method that falls under the broader category of rule learning methods. An important aspect of knowledge graph completion involves the rule: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, y), which includes the predicate P3. Furthermore, preliminary attempts towards learning existential rules from knowledge graphs are directed towards the broader concept of existential rule learning. The challenge of finding relevant questions is a critical issue that relates to the broader category of questions. Parameters such as MinOPSC, SC, and maximum rule length are essential for defining the quality and constraints of the rules generated. The object argument of P_t is a specific instance of arguments that connect entities in these rules. Our proposed system operates without a benchmark solution, highlighting its innovative approach. Additionally, answer facts represent a broader category of information sought in knowledge graph queries. Benchmark KGs serve as public Knowledge Graphs that provide standardized datasets for evaluation. Function-free Horn rules are a subset of rules that play a significant role in this context. Evaluation processes assess candidate rules by OPSC and OPHC, ensuring their effectiveness in knowledge graph completion. Link prediction is a broader task that encompasses various evaluation methods, contributing to the overall understanding and improvement of knowledge graphs.",
    "Knowledge graph completion is fundamentally linked to the problem of finding relevant questions, as it aims to uncover missing facts within a knowledge graph. The complete Poker KG, which includes the synthetic dataset Poker, serves as a structured resource for evaluating various knowledge graph completion methods. Knowledge graphs (KGs) are particularly effective for modeling and storing massive quantities of weakly-structured data, allowing for flexible data integration. In this context, predicates like P_2 represent facts within KGs, while entities may sometimes be absent from the knowledge graph. The process of generating relevant queries is enhanced by a good rule about that predicate, which extends the original rule, and is supported by a novel method for learning open path rules, categorized under broader methods. Additionally, the inference module plays a crucial role in deriving queries that can identify missing links, while the confidence metric is essential in rule mining, providing insights into the reliability of the generated queries. The previous approach primarily produced relevant queries, but advancements in the field have led to more effective strategies for knowledge graph completion.",
    "A path comprises a sequence of predicates P1', P2', ..., Pn', which are essential for establishing connections between entities in knowledge graphs. The head of a rule has a broader term known as targets, which are specific predicates evaluated during the knowledge graph completion process. Missing entities, which are necessary for enhancing the completeness of knowledge graphs, also fall under the broader category of Knowledge Graphs. In this context, P_2 is classified under Parameters, indicating its role in defining user inputs for rule mining. New entities, which can be introduced to fill gaps in knowledge graphs, are a subset of entities that exist within these structured representations. The process of generating Open Path rules involves multiple steps, each contributing to the overall method of knowledge graph completion. Experiments are conducted to evaluate the performance of the OPRL algorithm, while the IncPathFinding method creates additional candidate rules to further enhance the graph's capabilities. Minimum thresholds for OPSC and OPHC serve as criteria for filtering candidate rules, ensuring only high-quality rules are considered. The work in the literature related to link prediction and active knowledge graph completion encompasses various methodologies, including link predictors that estimate relationships between entities. In this framework, one correct answer refers to a specific type of response expected from queries, which is part of the broader category of answers derived from knowledge graphs. KGs involve entities that can either exist within them or be absent, and they are utilized for link prediction tasks. The samples used in experiments are subsets of data points, with the broader term being sample, which helps in evaluating the quality of rules. Finally, test facts are intentionally held out from the knowledge graph to benchmark the effectiveness of link prediction models, while the body of a rule consists of predicates P_1, ..., P_n that must be satisfied to infer new facts.",
    "In the context of knowledge graph completion, 'the head' relates to pairs of entities (x,t), which are connected via 'the body'. A fact in the KG is a specific instance of the broader category of facts. Similarly, asking relevant questions falls under the broader term of questions. The novel algorithm, OPRL, is utilized in experiments to enhance the process of knowledge graph completion. The quality of each candidate rule based on its embedding representation is a subset of candidate rules. A path comprises the body of rules that connect entities. New facts are a broader term that encompasses data, while the predicate P is a specific instance of the broader category of parameters. Generating queries introduces missing entities into the knowledge graph, which is structured as K = (E, F). RLVLR, a rule learning system, is a type of rule learner. OP rule variable patterns are a broader category that includes variables used in rule formation. The work in the literature related to link prediction and active knowledge graph completion contributes to the development of high-performing link-predicting models. The queries derived from OP rules are a specific type of query aimed at uncovering missing information. Knowledge graphs (KGs) allow for the integration of information, and the process of knowledge graph completion aims to predict specific missing facts. These parameters are defined as the optimum obtained by tuning to enhance the performance of the OPRL algorithm. Finally, the answer facts represent a broader category that includes answers to the queries generated.",
    "In the context of knowledge graph completion, higher-confidence queries are a specific type of query that exhibit greater precision and reliability. These queries are generated through the OPRL algorithm, which also produces rules such as isBornIn(x,z) and parentOf(z,y), both of which fall under the broader category of rules. The paper presents a novel method that utilizes the PathFinding() technique to generate specific rules, including the rule: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, y). Additionally, test facts are intentionally held out from knowledge graphs (KGs) to evaluate the effectiveness of link prediction models, which are enhanced by the use of link-based clustering. The process of tuning is essential for optimizing the performance of these models, which include queries generated by a modified leading-edge link predictor. Furthermore, OP rules encompass predicates like citizenOf(x, y), which are crucial for inferring relationships within the knowledge graph. Overall, the interplay between these elements highlights the complexity and depth of knowledge graph completion methodologies.",
    "In the realm of knowledge graphs, these entities encompass a broader category known as entities. Representation Learning has been specifically developed for KG completion, indicating its crucial role in enhancing the completeness of knowledge graphs. Within this context, P_t(e1, e2) serves as a fact that falls under the broader term of facts, which are essential components in knowledge graph completion. The problem of knowledge graph completion is intricately linked to the problem of finding relevant questions, as both aim to address gaps in knowledge. Furthermore, a first solution is a term that encompasses a broader solution aimed at improving knowledge graph completion strategies. The top prediction, which represents the most relevant output generated, is also a broader term under output. Link predictors play a vital role in completing the knowledge graph (KG) by forecasting relationships between entities. OP rules, which are mined from Wikidata, contribute significantly to this process. The hybrid fitness function is capable of mining quality rules, ensuring that the rules generated meet specific quality standards. Rule learning focuses on Closed rules, which are essential for addressing queries that arise in knowledge graph contexts. Queries themselves are a broader term that includes data, reflecting the vast information landscape of knowledge graphs. Every fact in the KG is categorized under the broader term of facts, emphasizing the foundational role of these facts in knowledge representation. Additionally, a fitness function estimates the quality of OP rules, guiding the optimization of knowledge graph completion efforts. Models, which include algorithms, are fundamental in this process, as they help in predicting missing facts. User parameters define the maximum length of rules, ensuring that the generated rules remain manageable and effective. Lastly, RLVLR, a rule learning system, is classified under the broader category of Representation learning methods, highlighting its significance in the field. The maximum length of rules is also a broader term that relates to the concept of length, which governs the complexity of the rules generated.",
    "The 'extension to 6' has a broader term known as 'Parameter', which refers to user-defined inputs in the OPRL algorithm. In the context of knowledge graph completion, 'a question' is generated accordingly from 'questions', indicating that inquiries are actively derived from open path rules. Furthermore, 'queries' are deemed useful, emphasizing the relevance of these inquiries in enhancing knowledge graphs. The knowledge graph 'K' is defined as 'K = (E, F)', representing a structured collection of entities and their relationships. The rule learning system 'RLVLR' falls under the broader category of 'Representation Learning', which encompasses various techniques for data representation. Additionally, 'r', a closed path rule, is categorized under 'set', indicating its role in defining collections of entities. The term 'fitness function' includes 'Open Path (OP)', which is a type of rule used in knowledge graph completion. The 'body of the rule' is a broader term for 'rules', which are logical constructs that facilitate the generation of relevant queries. In practical applications, 'the query' arises in 'industrial application', showcasing its utility in real-world scenarios. The 'latter embeddings' are a broader term for 'Embeddings(K')', which are vector representations derived from knowledge graphs. Moreover, 'link predictors in the knowledge graph completion process' are encompassed by the broader term 'high-performing link-predicting model', which aims to accurately predict missing relationships. The quality measure 'OPSC' is related to 'an entity', highlighting its role in evaluating the performance of mined rules. The benchmark dataset 'FB15KSE' is classified under 'knowledge graph (KG)', serving as a standard for evaluating knowledge graph tasks. The variables 'x and y' are broader terms for 'free variables', which allow for flexible query generation. The evaluation of 'the quality of our mined open path rules' falls under the broader category of 'quality', assessing the effectiveness of generated rules. The 'following general form' of rules is defined in relation to 'P_h', the predicate in the head of a closed path rule. The 'target predicate' is identified as 'P_t', representing a specific relationship within the knowledge graph. Lastly, 'RESCAL' is a broader term for 'models', which are learned representations used in knowledge graph completion.",
    "The state-of-the-art rule-based link predictor is a specific type of current link predictors that enhances knowledge graph completion. It operates by embedding the entities and predicates of a given KG, which is a broader term for the embedding process itself. In this context, the object argument of P_n is categorized under arguments, which are essential for understanding the relationships within the graph. Queries generated from this process have a broader term known as output, which encompasses the results produced by the link predictors. Furthermore, the embeddings for predicates and arguments in the sample KG fall under the general category of embeddings, which are crucial for effective knowledge graph operations. Link predictors are designed to complete KGs, ensuring that the relationships between entities are accurately represented. The variable A is a broader term for variables used in the PathFinding function, which aids in generating open path rules. Additionally, link prediction systems require seeding with queries about potential missing facts to function effectively. The pairs of entities (x,t) represent a broader term known as a pair of entities, which are vital for establishing connections in the graph. Highly relevant queries for missing links are categorized under links, which are the connections that need to be established. The head of a rule is a broader term for arguments, indicating the conclusions drawn from the rules. Measurable qualities, which are essential for evaluating the effectiveness of the rules, fall under the broader term quality. Queries are often posed to a user, who plays a critical role in knowledge graph completion. The predicate P_h(e, e') is recognized as a fact in KGs, contributing to the overall structure of the graph. FB15K SELECTED serves as a benchmark knowledge graph, which is a broader term for knowledge graphs in general. The state-of-the-art rule-based link predictor is also classified as a link predictor, emphasizing its role in the completion process. The quality of rules is a broader term for quality, reflecting the effectiveness of the mined rules. P2, a specific predicate, is categorized under relations, which define the connections between entities. AKGC, or Active Knowledge Graph Completion, is a broader term for the algorithm that generates relevant queries for knowledge graph completion. Lastly, the answer to queries might be an entity, highlighting the potential for discovering missing facts within the knowledge graph.",
    "In the context of knowledge graph completion, the predicate P_t(e', e) denotes the head of r, which is essential for establishing relationships between entities. The remaining rules are identified as the final result of the algorithm, showcasing the effectiveness of the proposed system. A Web question-answering engine has a broader term known as the system, which refers to the method OPRL designed for generating relevant queries. Additionally, the logical expression livesIn(x, z) has a broader term categorized under rules, indicating its role in inferring relationships based on residence. The rule learning system RLVLR is classified under rule-based methods, emphasizing its approach to knowledge graph completion. Furthermore, the product of the entity and predicate embeddings is encompassed within Embeddings(K'), highlighting the mathematical operations that facilitate knowledge representation. The outputs of the two systems are linked to the output, which represents the results generated for knowledge graph completion. Rule learning is a broader term that includes rule mining, illustrating the techniques used for discovering patterns in data. The predicate P2 is associated with variables, indicating its role in logical expressions. Efficient matrix and vector multiplication is a broader term under Evaluation, which assesses the quality of generated rules. The evaluation method Evaluation() is also categorized under Evaluation, ensuring a systematic approach to quality assessment. The correct answer, which refers to a missing entity, has a broader term known as An entity e, representing the objects within the knowledge graph. The predicate P_t(e', e) is further classified under facts, emphasizing its role in knowledge representation. The object argument of P_i is a broader term for arguments, which are essential for connecting entities in the graph. Answers, which represent predicted facts, are also linked to the output. The variable z_0 can instantiate a set of seven entities, represented as 7 ({e_3, e_4, e_5, e_6, e_7, e_8, e_9}). The RLVLR system has changed to use the max operation, which determines the confidence degree of queries. The optimum obtained by tuning is a broader term for optimum, reflecting the best parameters identified for the rule mining process. Freebase serves as a broader term for knowledge graph (KG), providing a structured dataset for various tasks. Lastly, the function PathFinding() generates the predicate P4(z2, z3), illustrating its role in constructing open path rules.",
    "In the realm of knowledge graph mining, 'the head, P' has a broader term known as 'head', which signifies the initial part of a rule that represents inferred facts. The process of 'testing' is also encompassed within a broader term, 'process', highlighting its role in evaluating the performance of algorithms. The rule learning system 'RLVLR' is categorized under the broader term 'algorithm', indicating its systematic approach to knowledge graph completion. The tuple '(P, A)' is derived from 'Embeddings(K')', which refers to the computed vector representations used to assess the quality of open path rules. Additionally, the entity 'e_1' is related to 'e_3', showcasing a connection between different entities within the knowledge graph. 'YAGO2', a significant knowledge base, falls under the broader category of 'knowledge graph (KG)'. The predicate 'P_3' is a part of 'P3(z1,y)' and satisfies it, indicating its role in the context of open path rules. Furthermore, 'queries' possess 'quantifiable confidence', reflecting the certainty of the information they seek. The 'least acceptable OPSC and OPHC scores' are broader terms under 'OPHC', which is a quality measure for evaluating open path rules. The term 'questions' is a broader category that includes 'outputs', which are the results generated from knowledge graph queries. The query itself has a broader term, 'a query', emphasizing its function in knowledge graph completion. 'Relevant queries' are categorized under 'data', indicating their role in identifying missing facts. 'Prand queries' are a specific type of query that falls under the broader term 'queries'. The structured dataset 'synthetic Poker' is a broader term for 'Poker', which serves as a complete knowledge graph for experimental purposes. The 'correct answer' is a broader term for 'answers', representing the entities needed to complete the knowledge graph. Lastly, the quality of each candidate rule is assessed under the broader term 'candidate rules', while 'new facts' are categorized under 'facts', enhancing the completeness of the knowledge graph.",
    "The rule P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, y) includes the predicate P4, which is part of a logical framework for knowledge graph completion. The PathFinding() method utilizes a maximum rule length of 4 to generate Open Path rules. Induced queries, which are derived from knowledge graph facts, have a broader term known as a query, indicating their role in uncovering missing information. The multilingual, collaboratively-created KG, such as Wikidata, is a type of Knowledge Graph that organizes factual information. Similarly, YAGO2 core serves as a knowledge graph (KG) that integrates structured data. The relation marriedTo(x,z) is categorized under rules, highlighting its significance in logical constructs. The Embeddings() function obtains the embeddings for predicates and arguments in the sample KG, which are essential for evaluating knowledge graph completion through link prediction. The Poker dataset exemplifies a knowledge graph (KG) created for experimental purposes. The representation K = (E, F) signifies public Knowledge Graphs, where E denotes entities and F represents facts. The embeddings for predicates and arguments in the sample KG are broader than the Embeddings() method, indicating their interconnectedness. Other OP rule learners fall under the category of algorithms, showcasing the diversity of methods in knowledge graph completion. The variable z_0 serves as the subject argument of P_1, while P(2)_t is approximately equal to P(1)_1, indicating a relationship between these embeddings. Queries generated by a modified leading-edge link predictor are a broader category of current link predictors, emphasizing their role in knowledge graph completion. The path of entities is a broader term for path, illustrating the connections between entities through predicates. Arguments, which represent entities in the graph, have a broader term known as an entity. The embeddings for predicates and arguments in the sample KG are also categorized under embedding-based methods, reflecting their application in machine learning. Lastly, variables appear at least twice in Closed rules, indicating their importance in logical reasoning within knowledge graphs.",
    "The predicate 'citizenOf(x, t)' has a broader term known as 'rules', which encompasses various logical constructs used in knowledge graph completion. Among these constructs, 'closed path (CP) rules' are a specific type of logical rule that also falls under the broader category of 'logical rules'. Additionally, 'logical axioms' are foundational statements that are classified as 'rules'. In the context of quality measures, 'quality OPSC > 0.1' is a criterion that is part of the broader measure known as 'OPSC', while 'OPHC' is associated with 'variables'. The 'novel method' for learning open path rules is categorized under 'Methods', and the 'optimum obtained by tuning' relates to the process of 'tuning'. Furthermore, the body of work in the literature concerning link prediction and active knowledge graph completion is linked to 'a link predictor'. The concept of 'link prediction' is integral to the overall 'process' of knowledge graph completion. The embeddings for predicates and arguments in the sample knowledge graph are a subset of 'entity embeddings'. The rule itself explains 'every fact in the KG', where each fact is an instance of 'its head'. The method 'IncPathFinding' extends the predicate 'P1(x, z0)', while 'Minimum thresholds for OPSC and OPHC' are supplied to 'Algorithm 1'. The 'first argument' is a broader term that falls under 'Parameter', and the set of entities {e_3, e_4, e_5, e_6, e_7, e_8, e_9} is classified as 'an entity'. Open Path (OP) rules are designed to infer 'open-ended questions', and the predicate 'P_1' is associated with 'facts'. A 'rule-based link predictor' modifies its output to generate 'questions', while the queries produced by a modified leading-edge link predictor are categorized under 'a link predictor'.",
    "Existential rules are a different form to closed path rules, which are essential in knowledge representation. In this context, models are expressed as vector embeddings, allowing for effective reasoning and inference. A novel method was introduced to estimate the quality of each candidate rule, enhancing the process of knowledge graph completion. The work in the literature related to link prediction and active knowledge graph completion encompasses a broader term known as traditional link prediction. Additionally, candidate rules have a broader term that includes data, which represents the weakly-structured information in knowledge graphs. The variable count, denoted as o_e, also has a broader term, variables, which are crucial for logical reasoning. The algorithm utilized in this domain includes novel fitness criteria to assess rule quality. Specifically, Algorithm 1 takes user parameters to evaluate candidate rules effectively. Furthermore, the embeddings of all the entities at the endpoints have a broader term known as learned embeddings, which are vital for capturing semantic relationships. The experiments conducted were limited to 800 entities, which is a broader term for entities in general. The entities themselves can be categorized under a broader term, an entity, which signifies any distinct object within the knowledge graph. In the rules, the predicate P is associated with the variable A, indicating their relationship in the logical framework. The distribution of mined rules is characterized by their length, providing insights into the complexity of the rules extracted. A convenient oracle, which serves as an automated link predictor, has a broader term known as oracle, facilitating active knowledge graph completion. Rule-Based KG Completion is categorized under the broader term Methods, representing systematic approaches to enhance knowledge graphs. The Noisy-OR operator, a probabilistic model, also falls under the broader term models, indicating its role in knowledge representation. Our objective is to mine a specific target predicate, focusing on extracting high-quality rules. The process of embedding the entities and predicates has a broader term, which is the overall process of knowledge graph completion. Lastly, link predictors in the knowledge graph completion process are encompassed by the broader term current link predictors, which are essential for predicting missing relationships. In this framework, the predicate P_1 involves the entity e_2, illustrating the connections within the knowledge graph.",
    "In the context of knowledge graph completion, the term 'top prediction' has a broader term known as 'outputs', which refers to the results generated by various systems. Additionally, 'questions' and 'queries about potential missing facts' both fall under the broader category of 'a query', which encompasses specific inquiries aimed at uncovering missing information. The 'following two relevant queries' are categorized as 'queries', indicating their role in identifying gaps in knowledge. Furthermore, a 'single unbroken loop of links' consists of 'links', which are essential for establishing relationships within the graph. The 'rules with quality OPSC > 0.1 and OPHC > 0.01' are associated with the broader concept of 'quality', reflecting their reliability in knowledge graph tasks. Similarly, 'answers for known unknowns' are a subset of 'answers', which represent predicted facts to fill knowledge gaps. Each 'fact generated by RLvLR' is part of the broader category of 'facts', contributing to the overall knowledge base. The process of 'inference' is also categorized under 'process', highlighting its role in deriving missing facts. Moreover, 'highly relevant queries for missing links' are linked to 'links', emphasizing their importance in knowledge graph completion. The 'two sets of embeddings' are encompassed by 'Embeddings(K')', which are crucial for representing entities and predicates. Queries arise in an 'industrial application', showcasing their practical use in real-world scenarios. 'New facts' are classified under 'information', indicating their role in enriching the knowledge graph. The concept of 'instantiation' is also a part of the broader 'process', allowing for specific applications of rules. 'Link predictors in the knowledge graph completion process' are categorized as 'a link predictor', which aids in estimating relationships. The 'vector computation' allows the system to evaluate 'OP rules', facilitating the knowledge graph completion process. A 'novel method' is introduced to estimate the 'quality of each candidate rule', enhancing the efficiency of rule learning. The 'three baseline query sets' are referred to as 'Prand', serving as a benchmark for evaluating query relevance. Lastly, 'query P_t(?, e)' is a broader term for 'a query', while 'least acceptable OPSC and OPHC scores' relate to the quality measure known as 'OPSC'.",
    "A new fact is needed when the answer is not available, highlighting the importance of identifying missing information in knowledge graphs. In this context, they, which refers to the two fitness functions, co-occurrence and open path, has a broader term of an entity, emphasizing the role of distinct objects or concepts in this process. Additionally, #Arules, representing the average number of accurate rules mined from knowledge graphs, has a broader term of count, which quantifies the number of distinct entities satisfying specific conditions. The state-of-the-art rule-based link predictor encompasses the automated link predictor, showcasing advancements in predicting facts within knowledge graphs. Queries, which are essential for uncovering missing facts, have a broader term of outputs, indicating their role in generating results from knowledge graph completion tasks. The contributions of this paper are encapsulated within the broader term of paper, as it introduces novel methods for knowledge graph completion. The predicate P is used in queries, linking the relational aspect of knowledge graphs to the queries generated. Furthermore, link prediction goes beyond queries, indicating a more extensive framework for predicting relationships. OPSC is similar to RLvLR*, both serving as quality measures in the context of knowledge graph completion. Link predictors involve knowledge graph completion, demonstrating their integral role in enhancing the completeness of knowledge graphs. The concept of pairs to be similar has a broader term of pair of entities, emphasizing the need for holistic similarity in relationships. Queries generated from OPRL's rules fall under the broader term of Methods, reflecting systematic approaches to knowledge graph completion. Its embedding representation, which is crucial for estimating rule quality, has a broader term of learned embeddings. A high-performing link-predicting model is categorized under a link predictor, showcasing its effectiveness in predicting missing relationships. Highly relevant queries, which are designed to solicit missing facts, have a broader term of a query, emphasizing their significance. Head coverage (HC) is a metric that has a broader term of coverage, indicating the explanatory power of rules in knowledge graph completion. Each P_i and P_t, representing predicates in knowledge graphs, has a broader term of predicate, linking the relational structure of knowledge graphs. The facts satisfying the head of the rule are encompassed within the broader term of facts, which are essential for knowledge graph completion. Lastly, relevant queries, which are significant for knowledge graph completion, have a broader term of a query, reinforcing their importance in this context. The target predicate P_i is utilized in PathFinding(), a method designed to generate Open Path rules for knowledge graph completion.",
    "The hybrid approach is preferable for selecting top candidate rules, which are crucial for knowledge graph completion. In this context, 'x' has a broader term known as free variables, which are essential in open path rules. Additionally, a high-performing link-predicting model encompasses traditional link prediction, enhancing the ability to predict missing relationships. The quality measure OPSC also has a broader term, variables, which play a significant role in evaluating rules. An instance fact, representing specific data points, is a broader term for facts within the knowledge graph. Queries are generated from test facts, serving as requests for information to fill gaps in the graph. The method IncPathFinding extends the predicate P2(z0,z1), contributing to the generation of candidate rules. The evaluation method, Evaluation(), is explained in Algorithm 1, which assesses the quality of these candidate rules. Furthermore, the first method to learn rules to generate relevant questions automatically falls under the broader category of Methods. The outputs of the two systems are a broader term for outputs generated in the context of query performance comparison. A second collection is performed based on the two metrics, OPSC and OPHC, to ensure the quality of candidate rules. OPRL rules learn over training data, while the sampling algorithm is a broader term for algorithmic methods used in knowledge graph tasks. This kind of rule instantiates the head of the rule, which is critical for inferring facts. Induced queries are upper-bounded by twice the number of facts, indicating the potential for generating multiple queries from existing data. The entity e_i has a broader term, an entity, representing distinct objects in the knowledge graph. Lastly, the embeddings for predicates and arguments in the sample KG are a broader term for vector embeddings, which are used to assess the quality of rules, while answers are a broader term for outputs, representing the predicted facts inferred from the knowledge graph.",
    "The RLVLR system utilizes the Noisy-OR operator to enhance its rule learning capabilities. In this context, R' is a set that encompasses parameters, which are essential for the execution of the OPRL algorithm. Queries generated for knowledge graph completion must be relevant to effectively identify missing facts. Furthermore, an entity extant in the knowledge graph is a broader term that includes any entity, highlighting the importance of context in knowledge representation. The dimensionality 'd' is a parameter that plays a crucial role in the RESCAL embedding method, while learners are broader models that analyze data to improve performance. In the realm of open path rules, the head of a rule relates to pairs connected via the body, establishing the primary relationships between entities. The quality measure OPSC varies within the range of 0.1 to 1, indicating the sensitivity of performance evaluations. Additionally, aggregation is a process that combines multiple high-performing rules, and the variable y can be associated with free variables, which complicate the search for effective rules. The logical variable z_0 can instantiate a specific set of entities, represented as 5 ({e_1, e_2, e_3, e_4, e_5}). The method IncPathFinding extends the top-ranked candidates, contributing to the generation of effective rules. The entities within the knowledge graph must satisfy the conditions set by free variables, while the vector v(1)(A(P1) A(P2) ... A(Pm))[i] serves as a broader parameter in the analysis. The long-standing gap in traditional link prediction systems emphasizes the need for high-performing link-predicting models that can autonomously generate relevant queries. This last step in the process involves iteratively expanding the set of entities related to a target predicate. Representation learning methods have been developed to model knowledge graphs, enhancing their structure and semantics. OPHC serves as a broader term for entities, and only those rules with an OPHC greater than 0.01 are considered significant in the evaluation of the OPRL algorithm's performance.",
    "In the realm of knowledge graphs, entities e and e' are considered to have a broader term, which is an entity, highlighting their role as specific elements within a larger framework. The multilingual, collaboratively-created KG, known as public Knowledge Graphs, serves as a foundational structure for organizing information. Within this context, the body and the head of a CP rule are components that relate to the head, emphasizing the logical implications derived from relationships. They, representing queries generated from the Open Path Rule Learning system, are broader than An entity e, showcasing their significance in knowledge graph completion. Representation Learning has been developed to model KGs, enhancing the understanding of data relationships. A query is a broader term for queries, indicating its function in uncovering missing information. The knowledge graph K is defined in terms of variables, with facts forming a pair represented as K = (E, F). Answers, which are broader than information, signify the predicted facts that fill gaps in the graph. The predicate P5(z3, y) is a broader term for predicates, illustrating its role in defining relationships. Association rule mining, a broader term for rule mining, aids in discovering patterns within data. Argument embedding encompasses arguments, providing a vector representation of entities involved in predicates. OP rules, which are fragments of function-free Horn rules, allow for the generation of open-ended queries. Endpoints satisfy the object argument of P_n, connecting entities within the rules. However, KGs often fail to record relevant entities, indicating gaps in representation. Additionally, rules with more complex shapes, such as stars, include stars, enhancing the complexity of relationships modeled. Link predictors evaluate and need queries to forecast relationships between entities, demonstrating their critical role in knowledge graph analysis.",
    "In the context of knowledge graph completion, queries serve as input to link predictors, which are essential for predicting missing relationships. Table 4 shows the evaluation metrics, including average precision, recall, and F1 scores, that assess the effectiveness of these queries. Each fact generated by the RLvLR algorithm has a broader term of an entity, indicating its role in the knowledge graph. The predicate P_t is related to broader relations, while the work in the literature related to link prediction and active knowledge graph completion encompasses automated link predictors. OPSC and SC are similar quality measures used to evaluate the performance of Open Path rules. Learning OP rules and the proposed system both fall under the broader category of Methods, which include various systematic approaches. The head of a rule to its body is a fundamental concept in rules, as exemplified by the specific rule studiesIn(Sam, ANU). Additionally, queries generated by a modified leading-edge link predictor also belong to the category of automated link predictors. Entities e2 and e3, along with the subject argument of P_1, are classified as entities, while the oracle serves as a source of knowledge for generating relevant queries. The embeddings of all the entities at the endpoints are crucial for evaluating the quality of the rules. Representation Learning includes the phase of reconstructing the KG, which is vital for predicting new facts. The head and body of rules present similar concepts, while fewer repeatable patterns indicate the limitations in generating effective rules.",
    "In the context of knowledge graphs, the predicate P_t(e1, e2) has a broader term known as relations, which encompasses various connections between entities. Similarly, P_t itself is related to variables, indicating its role in representing relationships. A potential missing fact can be inferred by a learnt rule, showcasing the dynamic nature of knowledge graph completion. The maximum length of target rules is a concept that falls under the broader category of length, which defines the complexity of the rules. The collection of binary adjacency matrices, represented as {A(Pk) : k \u2208 {1,...,m}}, serves to represent the knowledge graph K. Additionally, ROC curves utilize minimum OPSC and minimum SC parameters to evaluate model performance. The predicate P1 is categorized under the broader term Parameter, while ScaleKB is a type of rule learner that contributes to knowledge graph completion. The inferred head instances are a specific type of instance that can be derived from the application of rules. The support degree of r is defined as the open path support, quantifying the number of entities satisfying the rule's body in relation to the head predicate P_t. Link predictors aim to address this set of queries, which are generated to fill gaps in the knowledge graph. Link prediction is a broader term that encompasses rule mining, highlighting its significance in the field. The sequence of predicates P_n also falls under the category of relations. Knowledge Graphs are particularly effective for modeling and storing massive quantities of weakly-structured data, although KGs may fail to record relevant relationships. The argument embedding vector P(2)_i is approximately equal to the subject argument P_{i+1}, indicating a relationship between these components. The method IncPathFinding allows for an extension to 6, increasing the maximum rule length during the mining process. Queries are often derived from queries of unclear origin, which are essential for knowledge graph completion. Furthermore, queries of unclear origin are a broader category that encompasses various types of queries. Finally, head coverage (HC) measures the explanatory power of the rule, reflecting its ability to infer facts from the knowledge graph.",
    "In the realm of knowledge graph completion, various entities and concepts are interconnected through broader terms. For instance, 'queries that can be answered from the training set' is a specific type of 'queries', while 'a relevant query' also falls under the broader category of 'queries'. Similarly, 'a head at the front of the implication arrow' is encompassed by the term 'head'. The performance of fitness functions is a subset of the broader concept of 'performance', and 'P_n' relates to 'variables' as a broader term. The 'Open Path Fitness Function' and 'fitting function' are both classified under the broader term 'algorithm'. Furthermore, 'HOLE' is recognized as a high-performing link-predicting model, and 'link predictors in the knowledge graph completion process' are a type of automated link predictor. The pairs connected via the body of rules are categorized as a 'pair of entities', while 'the body' is a broader term for 'body'. The process of 'testing' is a part of the broader evaluation framework. Additionally, 'embeddings' are utilized in the context of a 'novel heuristic function'. The data used in these processes is often partitioned, with 10% reserved for testing purposes. The query generation task is crucial as it relates to the 'top prediction' generated. The complexity of the learning phase is a broader concept that encompasses the 'learning phase' itself. The state-of-the-art rule-based link predictor is classified under 'link prediction systems'. Queries soliciting missing facts are a broader category that includes 'facts', which in turn are related to 'links'.",
    "In the realm of knowledge graphs, the entity 'e_2' has a broader term known as 'an entity', which encompasses various distinct objects or concepts. The 'RLVLR algorithm', a specific computational method, is categorized under the broader term 'algorithm'. In the context of knowledge graph completion, 'the original rule' can be extended by 'the new body', enhancing its applicability. Furthermore, 'the method for computing OPSC and OPHC' illustrates 'an example' that demonstrates its functionality. The synthetic dataset 'Poker' is instrumental in generating 'relevant queries' that are significant for knowledge graph completion. Additionally, 'entities' are a broader term that includes 'Knowledge Graphs', while 'missing entity' also falls under the broader category of 'an entity'. The concept of 'link prediction' is similarly classified under 'Knowledge Graphs'. In terms of embeddings, 'embeddings' are a broader term that includes 'Embeddings(K')', which are used to evaluate the quality of open path rules. The method 'IncPathFinding' extends the predicate 'P4(z2, z3)', contributing to the generation of candidate rules. The occurrence count 'o_e' is defined by the foundational facts 'F' within the knowledge graph. The predicate 'P2' is a broader term for 'predicate', while 'a link predictor' is categorized under 'current link predictors'. The quality measure 'OPSC' is also a broader term that includes 'entities'. The components of a closed path rule, referred to as 'the body and the head of a CP rule', fall under the broader term 'body'. The count 's_e' is defined by the broader term 'Parameter'. The 'Co-occurrence Fitness Function' is defined using 'argument embeddings', which capture the semantic meaning of arguments. Moreover, a 'high-performing link-predicting model' is a broader term for 'automated link predictor', which generates queries for missing links. Lastly, 'other OP rule learners' are categorized under the broader term 'learner', while 'the entities' indicate the 'satisfying entities' that fulfill the conditions set by candidate rules.",
    "In the context of knowledge graph completion, answers are ranked in a ranked sequence of answers, which serves as a structured output format for link predictors. The question has a broader term, questions, indicating that it encompasses various inquiries aimed at uncovering missing facts. Similarly, learned embeddings, which are essential for representing entities and predicates, have a broader term, embedding. The ranked sequence of answers also has a broader term, answers, highlighting its role in providing multiple potential responses. The concept of its head is related to the broader term head, which signifies the conclusion derived from rules. Relevant queries, which are generated to identify missing facts, have a broader term, a query, emphasizing their specific nature. The max rule length l is defined by its broader term, length, which limits the complexity of generated rules. A fitness function is employed to estimate rule quality, ensuring that the generated rules are effective. Embedding models, which facilitate the representation of entities, have a broader term, models, indicating their foundational role in knowledge graph tasks. The embeddings of all the entities at the endpoints also fall under the broader term embedding, as they are crucial for evaluating rule quality. P_t(e', e) represents a predicate that has a broader term, relations, which are the connections between entities. TuckER, a high-performing link-predicting model, utilizes advanced techniques to enhance knowledge graph completion. Sequential entities, which are interconnected along a path, have a broader term, an entity, reflecting their role in the graph. Existential rule learning, aimed at generating relevant queries, has a broader term, rule learning, indicating its methodological foundation. Closed rules specifically answer queries of unclear origin, providing clarity in knowledge graph completion. Relevant queries are directed towards link predictors, which forecast relationships between entities. Our proposed system, which refers to the OPRL algorithm, has a broader term, Methods, indicating its systematic approach. Free variables, which add complexity to rule generation, have a broader term, variables, highlighting their role in logical expressions. The answer facts, which are the missing pieces of information, have a broader term, facts, underscoring their significance in knowledge graphs. Finally, early pruning is an optimization technique that has a broader term, process, aimed at improving the efficiency of rule learning.",
    "The enterprise KG involves human-curated maintenance, which ensures the accuracy and completeness of the knowledge graph. Within this context, latent, unnamed features are not present in the KG vocabulary, highlighting the limitations of explicit definitions in knowledge representation. The query format P_1(?, e_7) has a broader term known as a query, which serves as a request for information within the graph. Additionally, HOLE, an embedding-based link predictor, has a broader term of learned embeddings, indicating its reliance on low-dimensional representations for predicting links. The entity e_2 is categorized under the broader term instance, which represents specific facts in the knowledge graph. Furthermore, the mention of 5 ({e_1, e_2, e_3, e_4, e_5}) refers to a broader term of an entity, emphasizing the count of entities that can instantiate a variable in rule-based reasoning. Wikidata, a collaborative knowledge base, is recognized as a broader term for Knowledge Graphs (KGs), showcasing its role in structured data management. The open path fitness for r is defined by the product, which evaluates the effectiveness of open path rules. The latent features of a path are associated with the broader term path, while a body at the tail is linked to the broader term body, both of which are essential in rule-based knowledge graph completion. Head coverage is a metric used in major approaches to rule learning, reflecting the explanatory power of rules. AKGC, which stands for Active Knowledge Graph Completion, has a broader term of An entity e, indicating its focus on generating relevant queries. The latter, referring to a fitness function, is also categorized under an entity. The state-of-the-art rule-based link predictor is a specific link predictor that employs advanced techniques for predicting facts in knowledge graphs. Entities forming the object argument of the tail predicate, P_n, are classified under arguments, which are crucial for understanding relationships in the graph. P(2)_i, associated with the object argument of the i-th predicate, has a broader term of variables, which are symbolic placeholders in logical rules. The state-of-the-art rule-based link predictor is also recognized as a link prediction model, emphasizing its role in predicting relationships. The quality estimation function utilizes embedding the entities and predicates to evaluate the effectiveness of rules. Lastly, the confidence degree (CD) is defined as the maximum OPSC of all the rules inducing the query, quantifying the reliability of queries in knowledge graph completion. Every possible query encompasses a broader term of a query, representing the complete set of inquiries that can be generated from the knowledge graph.",
    "In the realm of knowledge graphs, 'head instances' are recognized as having a broader term known as 'targets', which encompasses the specific predicates evaluated for average run times in rule mining algorithms. Similarly, 'missing facts' fall under the broader category of 'facts', highlighting the information gaps that can be inferred through learned rules. The concept of 'maximum rule length of 4' is a subset of 'maximum rule length', which sets limits on the components included in rules for effective knowledge graph completion. Furthermore, 'highly relevant queries for missing links' are categorized under 'a query', emphasizing their role in identifying missing entities. An 'automated link predictor' is instrumental in creating 'a convenient oracle', facilitating active knowledge graph completion. The 'RLvLR*' model is classified as a type of 'high-performing link-predicting model', showcasing its advanced capabilities. In the context of predicates, 'the subject argument of P_t' is a broader term for 'arguments', while 'the head' is a more specific term under 'head'. The representation of rules is evaluated through 'its embedding representation', which is a broader concept of 'embedding'. The 'subject argument of P_1' is a specific instance of 'P_1', and the challenges faced by traditional link prediction systems are encapsulated in the term 'a long-standing gap in traditional link prediction systems', which relates to 'a link predictor'. The 'quality of each candidate rule based on its embedding representation' is an essential aspect of 'quality' in rule evaluation. Queries that can be answered from the training set are filtered out from 'relevant queries', ensuring that only pertinent questions are considered. 'TuckER' serves as a broader term for 'learned embeddings', while the body of work in link prediction and active knowledge graph completion is classified under 'link prediction systems'. Both 'existential rules from knowledge graphs' and 'Closed rules' are types of 'type', indicating their structural roles. The sequence of predicates 'P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')' is categorized under 'facts', demonstrating their relevance in knowledge representation. Additionally, '3 entities ({e_3, e_4, e_5})' are utilized to instantiate 'z_0', a logical variable in open path rules. Lastly, queries are evaluated against the classification of 'false', indicating that they do not correspond to any instance fact present in the test data.",
    "Link predictors have a broader term known as Knowledge Graphs, which are essential for understanding relationships within data. In the context of knowledge graphs, the embeddings of all the entities in the argument position are categorized under arguments, highlighting their role in representing relationships. Algorithm 1 is designed to take the least acceptable OPSC, which serves as a threshold for evaluating the quality of rules in knowledge graph completion. Furthermore, a long-standing gap in traditional link prediction systems is recognized as part of traditional link prediction, indicating the limitations of existing methods. Argument embedding, which refers to the vector representation of arguments, falls under the broader category of learned embeddings. The concept of linear shape is also classified under shapes, emphasizing the structural patterns in knowledge graph rules. The queries themselves are a broader term for a query, showcasing their importance in knowledge graph interactions. Additionally, queries generated by a modified leading-edge link predictor are encompassed within link prediction systems, illustrating the evolution of query generation methods. The number of entities that can instantiate z_0 to satisfy the head part is specifically identified as 7 ({e_3, e_4, e_5, e_6, e_7, e_8, e_9}), providing a concrete example of entity instantiation. Two baselines are constructed with a probabilistic-based query generator, which serves as a comparative method for evaluating performance. The quality of each candidate rule is based on its embedding representation, ensuring that the effectiveness of rules is quantitatively assessed. Embeddings(K') is a broader term for Embeddings(), indicating the foundational role of embeddings in knowledge graph analysis. The variables x, y, z_1, ..., z_{n-1} are categorized under variables, which are crucial for rule formulation. The data-first approach is a broader term for approach, emphasizing the methodology used in knowledge graph construction. Queries of the form P(?, e') are also classified under a query, demonstrating their specific application in knowledge graph tasks. P_1, a predicate in closed path rules, is categorized under relations, while P(1)_1 is recognized as a broader term for variables. Lastly, the embedding-based heuristic function is classified under heuristic function, showcasing its role in optimizing knowledge graph completion processes.",
    "In the realm of knowledge graph completion, various entities and concepts are interconnected through specific relationships. For instance, 'e_i' has a broader term known as 'variables', which are symbolic placeholders essential for inferring relationships. Similarly, 'Generating queries' and 'a query q = P(?, e') or q = P(e, ?)' both fall under the broader category of 'a query', which is crucial for uncovering missing facts in knowledge graphs. The 'state-of-the-art rule-based link predictor' is a specific type of 'rule-based link predictor', showcasing the evolution of predictive models in this field. The dataset 'FB15KSE' serves as a benchmark for 'Knowledge Graphs', while 'Embeddings(K')' is categorized under 'embedding-based methods', highlighting the importance of vector representations in this context. The process of 'Sampling()' utilizes 'similar parameters' to enhance efficiency in rule learning. Furthermore, 'any question' is a broader term encompassing 'questions', which are actively generated inquiries aimed at identifying missing entities. The 'predicate P' is also referred to as 'weight matrices', indicating its role in defining relationships within the graph. Additionally, 'co-occurrences of z_0' serve as the object argument of 'P_t', illustrating the connections between different predicates. The entities involved satisfy the 'endpoints' of these predicates, while 'the question' is relevant as it uncovers 'some missing fact', which can be retrieved through the appropriate queries. Lastly, 'P_1' is another predicate that falls under the broader term 'variables', and 'facts' are categorized under 'data', emphasizing the structured nature of knowledge representation. The 'Co-occurrence Fitness Function' is a statistical measure that belongs to the broader category of 'algorithm', further illustrating the systematic approaches used in knowledge graph completion.",
    "The embeddings for predicates and arguments in the sample KG has a broader term known as embedding models, which are essential for representing relationships in knowledge graphs. Incomplete knowledge graphs are categorized under the broader term property, indicating their lack of certain entities or information. A new fact, which is a missing piece of information, falls under the broader category of facts. The entity r, representing a closed path rule, is associated with the broader term An entity e, highlighting its role in knowledge representation. Each query is associated with a sequence of ranked entities, which helps in retrieving relevant information. The previously selected predicates for FB15KSE were specifically learned for the FB15KSE dataset, enhancing the knowledge graph's completeness. An instance, which corresponds to a specific fact, is also a type of entity. The knowledge graph K consists of the foundational facts represented by F. A pair of entities (e, e') is connected by the path P1, P2, ..., Pm, illustrating the relationships defined by the predicates. The set of entities {e_3, e_4, e_5, e_6, e_7, e_8, e_9} has a broader term of entities, indicating its role in knowledge graph completion. The former, referring to a co-occurrence fitness function, is a broader term for an entity. FB15K SELECTED, a dataset derived from Freebase, is categorized under Knowledge Graphs. The target predicate P is a specific relationship that falls under the broader term predicate. Both closed (non-existential) rules and Closed rules are types of logical rules used in knowledge graph completion. HOLE, an embedding-based link predictor, is a broader term for current link predictors. The concept of useful is associated with the broader term quality, emphasizing the effectiveness of rules in knowledge graph completion. Link predictors in the knowledge graph completion process are a subset of link prediction systems. Finally, relevant questions are categorized under the broader term output, which refers to the results generated for evaluating knowledge graph completion.",
    "The ROC (Receiver Operating Characteristic) curve is a graphical representation that has a broader term known as evaluation method, which is used to assess the performance of binary classification models. Existential rule learning, a method that enhances knowledge graph completion, falls under the broader category of Rule learning methods. In the context of knowledge graphs, the query format P_1(?, e_7) is classified as a predicate, which is essential for inferring missing links. The entity e3 is also categorized as an entity, indicating its role in the graph. However, embedding-based methods struggle to handle vast KGs, which are large-scale knowledge graphs containing extensive data. Facts, which are individual pieces of information in knowledge graphs, can be seen as a broader term for links that connect entities. The state-of-the-art rule-based link predictor, known as RLvLR, is a type of link predictor that utilizes rule learning techniques. Additionally, the head of r, which refers to the predicate P_t in open path rules, is classified under relations, while the head of r itself is a broader term for head. Major approaches to rule learning encompass various methodologies within the broader field of rule learning. The entities in a knowledge graph are distinct elements that can fulfill specific conditions, and they are categorized under the broader term entities. The following two OP rules, which illustrate relationships between known entities, are mined from Wikidata, a collaborative knowledge base. The quality of these rules is assessed and is a broader term for quality in the context of knowledge graph completion. The work in the literature related to link prediction and active knowledge graph completion is a broader term for link prediction methodologies. Entities satisfying the subject argument of the head predicate, P_t, are classified as arguments in the graph. Ann serves as an example entity, categorized under an entity. HOLE is an embedding-based link predictor that falls under the broader category of link predictors. Queries generated by a modified leading-edge link predictor are classified as a specific link predictor. Lastly, the mention of four million entities refers to the total number of distinct entities present in the knowledge graphs evaluated, which can be categorized as An entity e.",
    "The variable A is applied to the predicate P1, which plays a crucial role in evaluating the plausibility of facts within a knowledge graph. The distinct entities that satisfy the conditions of a rule are referred to as satisfying entities, which are equal to entities e2 and e3. YAGO2 core serves as a comprehensive resource that is often used for rule mining, a technique aimed at discovering patterns in data. The total count of facts in the knowledge graph, denoted as n, has a broader term known as variables, which are symbolic placeholders in logical rules. Additionally, link prediction systems are a subset of high-performing link-predicting models designed to infer relationships between entities. The predicate P3 is categorized under the broader term relations, indicating its role in connecting entities. Furthermore, queries generated by a modified leading-edge link predictor fall under the broader category of link prediction, which encompasses the task of predicting missing relationships. A potential missing fact is a specific instance of facts that can be inferred through learned rules. The variable y represents an entity associated with the citizenship of another entity x, while z_0 serves as a logical variable within open path rules. KG sampling, a technique for selecting subsets of data, is a broader term for sampling algorithms. The set of all entities in the knowledge graph is represented as E= {e1,...,en}, which is a broader term for an entity. The entities that satisfy the second argument of P_t also fall under the broader category of an entity. Specific missing facts are instances of facts that can be inferred, and the entities in the knowledge graph are essential for completing the graph through open path rules. Freebase is a large collaborative knowledge base that is a broader term for Knowledge Graphs, while predicates are also categorized under Knowledge Graphs. Lastly, the inference of specific facts is a broader term for the process of inference, which involves deriving missing facts from existing data.",
    "Human-curated maintenance is a process that ensures the accuracy and completeness of knowledge graphs. Within this context, RESCAL embeddings serve as a broader term for learned embeddings, which are essential for representing relational data. The variable P(2)_t is a specific instance of the broader category of variables, which are crucial in knowledge graph completion. TuckER, an advanced algorithm, falls under the umbrella of current link predictors, which are used to predict missing facts in knowledge graphs. Baseline query sets are part of the broader query generation task, which aims to create effective queries for retrieving information. YAGO2 exemplifies a large-scale knowledge graph, contributing to the field of Knowledge Graphs. Open Path (OP) rules represent a method for generating queries to complete knowledge graphs, while a link predictor is a specific type of automated link predictor that ranks potential entities for missing relationships. The entity e is categorized under parameters, which are user-defined inputs in knowledge graph algorithms. The queries generated in this context can be seen as specific instances of a query. Additionally, the predicate P_1 involves the entity e_7, illustrating the relationships within the graph. OP rules are also classified under methods, highlighting their systematic approach to knowledge representation. The term 'they' refers to entities, which are the individual items represented in knowledge graphs. P_3 is a broader term for predicates, while many facts encompass the numerous individual facts within knowledge graphs. The language of existential rules provides a formal framework for expressing relationships, which is a subset of existential rules from knowledge graphs. Knowledge graphs (KGs) are utilized for entity resolution, ensuring that different records referring to the same entity are accurately merged. The function PathFinding(K', P_t, P, A, k) is categorized as an algorithm that generates candidate Open Path rules. Finally, user parameters define the least acceptable OPSC and OPHC scores, which are critical for evaluating the quality of mined rules in knowledge graph completion.",
    "Prand cannot handle massive size, indicating its limitations in processing large-scale knowledge graphs. In the literature, the work related to link prediction and active knowledge graph completion encompasses methodologies such as the rule-based link predictor. This approach is part of a broader category that includes entities, as seen in the sequence of ranked entities, which are essentially potential answers ranked by relevance. The previously selected predicates for FB15KSE also fall under the broader term of predicates. Section 3 of the paper describes our target language for learning, which is crucial for understanding the formalism of Open Path (OP) rules. In this context, P_h is identified as the single predicate of the head, which is essential for rule-based knowledge graph completion. The queries generated could be fed to link predictors, including TuckER, which is a specific link predictor that utilizes tensor decomposition methods. Link predictors in the knowledge graph completion process can be categorized under the broader term of link prediction. Open Path (OP) and Active KGC are also classified under Methods, emphasizing their roles in generating relevant queries. YAGO2 core and Poker serve as examples of Knowledge Graphs, while arbitrary queries represent a less effective subset of queries. Additionally, Sampling() takes P as input, and f_coo(.) focuses on predicates to estimate the quality of open path rules. Lastly, the support of r is a statistical measure that has a broader term of support, reflecting its importance in rule learning.",
    "The query generation task encompasses the broader concept of generating queries, which focuses on creating relevant questions to retrieve information from knowledge graphs. Within this context, the hybrid setting represents an approach that combines various fitness functions to enhance knowledge graph completion. The target predicate, which is a specific relation within the graph, is part of the broader category of relations that define connections between entities. Additionally, the entity e_2 falls under the category of variables, which serve as symbolic placeholders in logical rules. The predicates P_1, ..., P_n are also classified under the broader term predicate, indicating their role in connecting entities. A pair of entities (e, e') satisfies the condition defined by the head of r, which is crucial for inferring relationships. The method proposed in RLVLR computes argument embeddings, enhancing the understanding of entity relationships. Generating relevant queries is a process that leads to the formulation of a query, which is essential for uncovering missing facts. The logical rule citizenOf(x, y) livesIn(x, z) ^ locatedIn(z, y) is categorized under rules, illustrating how citizenship can be inferred from residence. Closed rules contain head variables that define the conclusions drawn from the rules. Furthermore, the set of three entities ({e_3, e_4, e_5}) is classified as an entity, highlighting its role in knowledge graph completion. The phrase missing some others refers to facts that are not recorded in knowledge graphs, emphasizing the incomplete nature of these structures. The RLvLR* model is a variant of current link predictors, utilizing a Max operator for rule aggregation. The top 10% of the OP rules are selected based on a fitness function, which is a broader term that includes the evaluation method used to assess rule quality. The parameter t% defines the percentage of top-performing rules selected during the mining process, while candidate rules are derived from logical rules to enhance knowledge graph completion. Lastly, OP rules are mined over training data, facilitating the identification of missing entities and facts.",
    "Generating relevant queries serves as input to link predictors, which are essential for enhancing knowledge graph completion. The predicate P_1 involves the entity e_3, indicating a specific relationship within the graph. Additionally, queries generated by a modified leading-edge link predictor are a subset of a broader category known as queries. In the context of evaluation, 10% for testing refers to the portion of the dataset designated as the test set, which is crucial for assessing the performance of various algorithms. There exists a long-standing gap in traditional link prediction systems, which is addressed by automated link predictors that aim to autonomously generate relevant queries. The quality of each candidate rule is a measure that falls under the broader term quality, reflecting the effectiveness of rules in knowledge graph completion. Link prediction itself is a task that encompasses high-performing link-predicting models designed to accurately predict relationships between entities. The answer to a question in the test set is part of a larger category of questions that aim to uncover missing information. The modified link predictor RLvLR* utilizes a parameter known as minimum SC to enhance its query generation capabilities. Furthermore, the first argument in a rule is part of a broader set of arguments that include various entities, represented as e_i. The sequence of predicates P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') is classified as an instance, demonstrating the relationships defined by the rules. The work in the literature related to link prediction and active knowledge graph completion contributes to the development of link predictors. Wikidata serves as a prominent example of a knowledge graph (KG), providing a structured representation of knowledge. The set of variables {x, z_i, y} is essential in the context of open path rules, indicating the symbolic placeholders used in logical expressions. An entity extant in the KG is part of the broader category of entities that populate the knowledge graph. The modified link predictor RLvLR* is classified under the broader term of a link predictor, while the answer facts represent specific pieces of information that are missing from the training set. Finally, link predictors in the knowledge graph completion process include rule-based link predictors, which utilize predefined rules to infer relationships.",
    "The queries generated by a modified leading-edge link predictor are a subset of link predictors, which are algorithms designed to forecast relationships between entities. In the context of knowledge graph completion, the entities which satisfy the second argument of P_t have a large intersection with themselves, indicating a strong relationship among them. The product of the predicate embeddings represents the overall rule, encapsulating the latent features of the predicates involved. Different facts, which are distinct entries in a knowledge graph, have a broader term that encompasses all facts. Similarly, P_t, a specific predicate, is a broader term for predicates in general. The queries that link predictors need to repair working KGs are related to predictors, which are models that estimate outcomes based on input data. The Open Path Fitness Function, a method for evaluating the quality of open path rules, falls under the broader category of fitness functions. A link predictor can answer the correct answer, which is essential for completing knowledge graphs. The term predictor also encompasses broader models used in knowledge graph tasks. Entities e and e' are specific examples of entities, while the embeddings of all the entities in the argument position are a broader term for learned embeddings. Major approaches to rule learning are classified under Rule learning methods, and the benchmark dataset FB15KSE is part of public Knowledge Graphs. The entity e_{n-1} is a specific instance of an entity, and a pair of entities represents relations within the graph. Rule mining for KG completion is a method that extracts patterns to enhance knowledge graph completion. HOLE, an embedding-based link predictor, is a type of embedding, and quantifiable confidence is a broader term for confidence metrics used in evaluating rules. Finally, embedding the entities and predicates of a given KG refers to the broader concept of embeddings, while r, a closed path rule, is associated with parameters that define its structure.",
    "In the context of knowledge graphs, P_2 is a part of the predicate P_2(z_1, z_2) and satisfies the same predicate. Definition 1 is associated with the concept of support, which is crucial for understanding the conditions under which entities satisfy the body and head of closed path rules. The predicate P_h denotes the head of r, while P_1 involves the entity e_9. The quality of each candidate rule has a broader term known as quality, which evaluates the effectiveness of rules in knowledge graph completion. Similarly, its endpoints and endpoints are related terms that refer to the entities satisfying the subject and object arguments of predicates. The latter embeddings are a broader term for learned embeddings, which represent entities and predicates in a low-dimensional space. A rule-based link predictor is a type of high-performing link-predicting model, and rule-based methods fall under the broader approach to knowledge graph completion. Genuinely missing facts are encompassed by the broader category of facts. Section 2 of the study presents the foundations necessary for understanding these concepts. The number of entities that can instantiate z_0 to satisfy the head part is quantified as 5 ({e_1, e_2, e_3, e_4, e_5}). Co-occurrences of z_0 serve as the subject argument of P_1, while each fact generated by RLvLR relates to the broader term entities. The last argument of the last body predicate is a broader term for arguments, and the sequence of entities e_1, ..., e_{n-1} is categorized under an entity. Links in the knowledge graph are reiterated as a broader term for links, and P_n is recognized as a broader term for predicate. Finally, FB15K SELECTED is classified under public Knowledge Graphs.",
    "The rule quality has a broader term known as quality, which refers to the effectiveness of generated rules in knowledge graph completion. Similarly, the correct answer, which is essential for completing a knowledge graph, is categorized under the broader term of an entity. The set of predicates in the knowledge graph, referred to as Pm, also falls under the broader category of variables. In the context of knowledge graph completion, query generation is a process that creates relevant queries, indicating its broader classification as a process. The term useful, which emphasizes the relevance of queries, is another aspect of quality. The entity e_6 is classified under the broader term of an entity, while OP rules are specifically designed for the inverse relationship represented by inverse P_i^-1. Additionally, run times in hours are averaged over the targets, which are specific predicates or entities being evaluated. Entities e2 and e3 are included under the broader term of entities, and the oracle, which serves as a source of knowledge, is also classified as an entity. Link predictors in the knowledge graph completion process are a broader category that includes link predictors. The embeddings of all the entities at the endpoints are categorized under entities, and the first argument is a specific type of argument, falling under the broader term of arguments. The paper detailing these concepts is structured as follows, while closed (non-existential) rules are utilized to predict a fact that instantiates the triple at the head of the rule. The named predicate is a broader term for predicate, and satisfying entities are classified under the broader term of an entity. The set of entities in a knowledge graph, denoted as E, also falls under the broader term of an entity. Coverage is related to rule learning in inductive logic programming, and TuckER, an embedding-based link prediction algorithm, is classified under the broader term of embedding.",
    "In the context of knowledge graphs, E is the set of entities, which has a broader term of an entity. Such an answer, which refers to a correct response in knowledge graph completion, has a broader term of answers. The baseline query generator Prand is categorized under the broader term of baseline query generator. Relevant questions, essential for uncovering missing facts, fall under the broader category of outputs. HOLE, an automated link predictor, is also classified under the broader term of automated link predictor. The fitness function encompasses f_op(.), which is a specific type of fitness function used in evaluating open path rules. Link prediction is provided with relevant questions, highlighting the relationship between these concepts. The process of embedding the entities and predicates is a broader term for learned embeddings, which are crucial for representing knowledge graph data. Generating relevant queries is part of the query generation task, indicating its role in knowledge graph completion. The product of the entity and predicate embeddings is another instance of learned embeddings. The absence of a structured rule is referred to as no pattern, which is a broader term for pattern. Argument embedding, which represents the subject and object arguments of predicates, is a type of embedding. A high-performing link-predicting model is classified under link predictors, emphasizing its effectiveness in predicting relationships. The subject argument of P_{i+1} is a broader term for arguments, which are associated with predicates in the graph. Links are established between variables, indicating the connections within the knowledge graph. The predicate P_1 is defined and satisfied by P1(x,z0), demonstrating its role in logical expressions. The plausibility of the fact that e0 is connected to e1 via predicate P1 is related to facts, which are the individual pieces of information in knowledge graphs. The logical variable z_1 is a broader term for variables, which are essential in rule-based systems. Finally, missing facts, which highlight gaps in knowledge representation, are categorized under the broader term of data.",
    "The plausibility of the fact that e0 is connected to e1 via predicate P1 is a concept that falls under the broader category of facts. Similarly, 50 randomly selected predicates are classified as predicates, indicating their role in knowledge representation. Freebase, a significant knowledge base, is categorized under public Knowledge Graphs, which are structured datasets accessible for various applications. The number of entities that can instantiate z_0 to satisfy the head part is a specific instance of an entity, highlighting the importance of entity representation in knowledge graphs. Confidence, which is closely related to association rule mining, plays a crucial role in evaluating the reliability of inferred relationships. A missing fact is another type of fact that emphasizes the need for completeness in knowledge graphs. Additionally, the number of entities is also categorized as an entity, reinforcing the significance of entity counts in knowledge representation. Embedding representations of its predicates are essential for understanding the relationships defined by predicates. The entity e_6 serves as an instance that can instantiate variables in knowledge graph rules. The variable y is associated with output, indicating its role in generating results. IncPathFinding is an algorithm that contributes to knowledge graph completion by generating candidate rules. Endpoints are critical as they satisfy the subject argument of P_t, connecting entities through predicates. Facts are related to the target predicate, P_1, which defines specific relationships within the graph. A pair of entities (e, e') is a broader term that encompasses the relationships defined by pairs of entities in knowledge graphs. YAGO2, another public knowledge graph, integrates information from various sources. Link prediction systems are a type of link predictor that infers relationships between entities. Rules with the properties enhance the effectiveness of properties in knowledge graph completion. Lastly, the method proposed in RLVLR extends the RESCAL algorithm, showcasing advancements in knowledge graph completion techniques.",
    "In the realm of knowledge graphs, various entities and concepts are interconnected through broader terms and relationships. For instance, the 'path of entities' encompasses 'an entity', while 'targets' relate to 'object' as a broader term. Similarly, 'similar entities' also fall under the category of 'an entity'. The term 'facts' is a broader concept that includes 'information', and 'P_t(e', e)' is classified under 'predicate'. Furthermore, 'e_2' is a broader term for 'entities', and 'new entities' are considered a subset of 'An entity e'. On the other hand, 'Arbitrary queries' are deemed to have little 'use'. A 'number of entities' are involved in the 'target predicate', and 'x' is a broader term for 'variables'. The concept of 'missing entity' is categorized under 'entities', while 'link prediction systems' are a broader term for 'traditional link prediction'. Additionally, 'test facts' are included under 'facts', and the tuple '(P, A)' is a broader term for 'learned embeddings'. The entities we need are classified as 'an entity', and the rule: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, y' includes 'P1'. The knowledge graph 'K' is a broader term for 'set', while 'TuckER' is classified under 'automated link predictor'. Lastly, 'YAGO2 core' is a broader term for 'public Knowledge Graphs', and 'e3' is categorized under 'variables'.",
    "In the context of knowledge graphs, entities are relevant to the target predicate, indicating a significant relationship between them. Furthermore, entities are related to the target predicate in multiple ways, highlighting their interconnectedness. The Poker dataset, which serves as a complete knowledge graph for experimental purposes, has a broader term of public Knowledge Graphs, emphasizing its role in the larger framework of knowledge representation. Similarly, FB15K SELECTED, a benchmark dataset, is associated with high-performing link-predicting models, showcasing its importance in evaluating algorithms. The statistical measure SC is related to an entity, suggesting its role in performance evaluation. Additionally, z_i and somewhere (t) are both broader terms under variables, indicating their function as placeholders in logical rules. The process of embedding the entities and predicates of a given KG is encapsulated by the broader term Embeddings(), which facilitates the transformation of knowledge into vector representations. The set of all entities, represented as e1,...,en, also falls under the category of an entity, further illustrating the diverse nature of entities in knowledge graphs. Instance facts are broader terms of information, emphasizing their role in providing specific data points. The condition body_r is related to an entity, indicating its significance in rule-based inference. The modified leading-edge link predictor is a variant of high-performing link-predicting models, enhancing the accuracy of predictions. Erroneous facts, which can lead to inaccuracies, are categorized under facts, highlighting the importance of accurate data representation. Rule learning, a technique for discovering patterns, is a broader term for Rule learning methods, indicating its foundational role in knowledge extraction. The embedding-based methods encompass the broader term of embedding the entities and predicates of a given KG, showcasing their utility in machine learning. The body of a rule, represented by body_r, is also a broader term, emphasizing its structural importance. The entity e_7 can instantiate the variable z_0, further illustrating the complexity of relationships in knowledge graphs. The runtime for mining, which refers to the computational time required for rule extraction, is categorized under mining, indicating the resource-intensive nature of this process. Lastly, the entities forming the object argument of the tail predicate, P_n, are also classified as an entity, underscoring their role in connecting various predicates within the knowledge graph.",
    "In the context of knowledge graphs, the 'missing entity' has a broader term known as 'information', which encompasses the data that can be added to enhance the graph's completeness. Similarly, the 'last argument' is categorized under 'arguments', indicating its role in logical constructs. The predicate 'P3(z1, z2)' is a specific type of 'predicate', while 'y' falls under the broader category of 'variables'. The process of 'embedding the entities and predicates of a given KG' is related to 'entity embeddings', which are crucial for representing entities in a vector space. Furthermore, 'sequential entities' are part of the broader group of 'entities', and the 'specific link predictor' is a subset of 'current link predictors' used for predicting links in knowledge graphs. The predicate 'P_i' is associated with 'parameters', and '20 random predicates' are part of the larger dataset referred to as 'data'. The concept of 'a long-standing gap in traditional link prediction systems' is encompassed within 'link prediction systems', highlighting the challenges faced in this area. Additionally, 'others' also refers to additional data points within 'data'. The 'answer to a question in the test set' is categorized under 'answers', which represent the predicted facts for knowledge graph completion. The statistical measure 'SC' describes 'the rule', which is a logical construct in knowledge graph completion. The set of entities 'E' is defined by 'E= {e1,...,en}', indicating the collection of elements within the knowledge graph. 'Relevant questions' are broader than 'a query', as they aim to uncover missing facts. The mention of '5 ({e_1, e_2, e_3, e_4, e_5})' refers to a specific count of entities that can instantiate a variable in the context of knowledge graph rules. The term 'pair' is a broader category that includes 'relations', which represent the connections between entities. Lastly, 'OPsupp' is a broader term for 'parameters', while 'r' is defined as 'the set of real numbers', representing a mathematical construct in this context.",
    "In the context of knowledge graphs, the term 'P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')' has a broader term known as 'relations', which encompasses the intrinsic properties and connections between entities. The collection of facts, referred to as 'F', is fundamentally the set of 'facts' that form the basis of the knowledge graph. The method 'Sampling()' is utilized to compute 'a set of entities' relevant to specific predicates. Furthermore, 'Evaluation()' is represented by 'Evaluation() in Algorithm 1', which explains the assessment of candidate rules for knowledge graph completion. The variable 'ei' is a broader term for 'an entity', indicating its role in the evaluation process. In the realm of link prediction, 'a link predictor' is a broader term that includes 'specific link predictor', while 'link predictors' are algorithms that predict 'facts' based on relationships in the graph. The modified link predictor 'RLvLR*' is categorized under 'automated link predictor', highlighting its function in query generation tasks. Additionally, 'the latter' refers to a broader term encompassing 'entities', and 'RESCAL embeddings' are a type of 'embedding' used for representing relational data. The embeddings of all entities in the argument position are also classified under 'an entity'. The subset of 'these entities' is a broader term for 'An entity e', which signifies its relevance in the knowledge graph. The fitness function 'f_co(.)' is a broader term for 'fitness function', used to evaluate the quality of rules. The pair of entities 'entities (e, e')' is a broader term for 'pair of entities', and the complete Poker KG is categorized under 'dataset', serving as a structured collection for testing methods. Lastly, 'Rule learning methods for KGs' fall under the broader category of 'Methods', while 'e_7' is a specific instance that can instantiate the variable in the context of open path rules.",
    "The predicate P_1(e_1, ?) is a specific type of query that seeks to identify missing entities related to the broader concept of a query. Within this context, e_3 is recognized as an entity, which is a broader term encompassing various distinct objects or concepts. The variable z_{n-1} also falls under the category of variables, which are essential for expressing relationships in knowledge graphs. Additionally, OPSC is classified as an algorithm, indicating its role in evaluating the performance of Open Path rules. A number of entities can be considered as entities themselves, highlighting their importance in knowledge representation. The predicate P_1 is a broader term for predicates, which define relationships between entities. Link prediction, a critical task in knowledge graph completion, is categorized under traditional link prediction, emphasizing its foundational role in predicting relationships. The known-missing fact is another instance of facts, which are the building blocks of knowledge graphs. The query citizenOf(Sam, ?) exemplifies a specific type of query aimed at uncovering citizenship information, while the target predicate P_i is a broader term for predicates used in knowledge graph analysis. Furthermore, the rule-based link predictor is a type of current link predictor that utilizes predefined rules to infer relationships. Links between the variables represent connections in knowledge graphs, and the predicate citizenOf is a relational predicate within Knowledge Graphs (KGs). Existential rules are derived from Knowledge Graphs, allowing for reasoning about the existence of entities. Overall, each query generated in this context serves to address gaps in knowledge graphs, reinforcing the interconnected nature of entities and their relationships.",
    "In the context of knowledge graphs, the entity e0 is considered to have a broader term of 'an entity', indicating its role as a distinct object within the graph. Similarly, 'rules with free variables' encompasses 'variables', highlighting the flexibility of these rules in knowledge graph completion. The set of entities represented by {e_3, e_4, e_5, e_6, e_7, e_8, e_9} is classified under the broader term 'set', which refers to a collection of elements that meet specific criteria. The 'head of r' is associated with 'relations', emphasizing its function in defining connections between entities. Additionally, the fact P_1(e0, e1) is categorized under 'facts', representing a specific relationship between e0 and e1. This paper, which introduces novel approaches to knowledge graph completion, is classified as a 'paper'. The 'fitness function adapted from RLVLR' is a specialized type of 'fitness function' used to evaluate the quality of generated rules. Furthermore, 'the two sets of embeddings' fall under 'learned embeddings', which are crucial for representing entities and predicates in a latent space. The term 'object' is a broader category that includes 'arguments', which are the entities associated with predicates. The 'quality estimation function' is a type of 'algorithm' that assesses the effectiveness of open path rules. In the realm of link prediction, 'link predictors' are designed to answer 'each query', providing insights into potential relationships. The 'satisfying entities e2 and e3' are classified as 'an entity', indicating their role in fulfilling specific conditions within the graph. A 'rule-based link predictor' is a broader term for 'a link predictor', which utilizes predefined rules to infer connections. The 'knowledge graph (KG)' is represented by an 'adjacency matrix representation', illustrating the relationships between entities. The 'initial set of facts' is foundational to the broader category of 'facts', serving as the basis for knowledge graph completion. The concept of 'a long-standing gap in traditional link prediction systems' is related to 'link prediction', highlighting the challenges faced in this area. The logical expression 'citizenOf(x, y)' is categorized under 'rules', defining relationships within the graph. 'Embeddings(K')' refers to 'embedding models', which are essential for representing entities in a continuous vector space. Lastly, 'link prediction systems' aim to address 'missing facts', while 'a pair of entities (e, e')' is a broader term for 'pair', indicating the relationship between two entities in the graph.",
    "In the context of knowledge graphs, various entities and concepts are interconnected through broader terms. For instance, 'e_3' is categorized under the broader term 'instance', while 'e_9' falls under 'an entity'. The 'embedding-based heuristic function' is a method that is part of the broader category of 'Methods'. Similarly, both 'the second argument position' and 'first argument of the first body predicate' are classified as 'arguments'. The term 'facts' is associated with 'relationships', indicating that facts are a type of relationship within the graph. Additionally, 'the new body' is a broader term for 'body', which refers to the part of a rule containing predicates. The process of 'embedding the entities and predicates' is also classified under 'an entity'. Furthermore, 'rule-based link predictor' is a specific type of 'traditional link prediction', and 'the product of the entity and predicate embeddings' is another instance of 'an entity'. The system known as 'HOLE' is categorized under 'link prediction systems'. The variable 'l' is a broader term for 'variables', while 'subject' is classified as an 'argument'. Notably, 'It' does not generate 'queries', and the ability to 'scale well' is a broader aspect of 'performance'. The term 'entities satisfying the subject argument of the head predicate, P_t' is classified under 'an entity', and 'P_2(z_1, z_2)' is recognized as a type of 'predicate'. Lastly, 'P_t' is utilized in the context of 'f^0_loc', while 'instance' is a broader term for 'entities', and 'Embeddings(K')' refers to 'embedding vector'.",
    "In the context of knowledge graphs, a sequence of predicates P1', P2', ..., Pn' has a broader term known as predicate, which signifies the binary relations connecting entities. The existence of missing facts is encompassed within the broader category of facts, highlighting the gaps in the knowledge representation. Variables, which include v(2)(P1) and e_{n-1}, are essential components that represent symbolic placeholders in logical rules. The compositional-based embedding learner is a method that falls under the broader term of embedding, facilitating the representation of entities and predicates in a latent space. Additionally, weight parameters are defined as a subset of Parameters, influencing the learning process. The quality of rules is often assessed through the identification of obsolete and low-quality rules, which do not contribute effectively to knowledge graph completion. The former, referring to a specific fitness function, is categorized under entities, while the comparative system for query generation is a method that fits within the query generation task. Compositional embeddings are a type of learned embeddings that utilize weight matrices for effective representation. Section 7 of the study presents the work in the literature related to link prediction and active knowledge graph completion, providing insights into existing methodologies. The embedding-based heuristic function is a novel approach classified under heuristics, and the ROC (Receiver Operating Characteristic) curve is used to compare the outputs of the two systems involved in query generation. P3, another predicate, also fits within the broader category of predicates. The embeddings of all the entities in the argument position are part of the embedding framework, while head instances represent specific entities within the knowledge graph. The rule in question is characterized by achieving 100% HC and SC, indicating its comprehensive coverage. Among the entities, e3 is included, demonstrating its role in the knowledge graph. Finally, embedding the entities and predicates of a given KG is a process that leads to vector embeddings, which are crucial for capturing the relationships within the graph. A link predictor, which is a broader term for link predictors, plays a significant role in forecasting relationships in knowledge graphs.",
    "Link prediction systems encompass a variety of models, including automated link predictors, which are designed to infer relationships between entities. Within this domain, entities are often categorized, with e3 representing a specific entity that falls under the broader category of entities. Furthermore, there are entities that are related to existing entities, which can be considered as instances of a more general entity. In knowledge graphs, entities are linked to locations or other entities, as seen in the relationship where entities are citizens of somewhere (t). The process of expanding the set of entities related to a target predicate is iterative and depends on the maximum length of target rules. This iterative process is crucial for refining the quality of each rule, which is a broader concept that encompasses the overall quality of the rules generated. Traditional link prediction systems have faced a long-standing gap, which has led to the development of rule-based link predictors. Additionally, embeddings, which are broader representations of vectors, play a significant role in the representation of facts in the form P(e, e'). The proportion of facts satisfying the head of a rule is another important metric that falls under the broader category of facts. The latter embeddings are a specific type of embedding that, while useful, may not be as effective for certain tasks. Entities like Ann serve as examples within this framework, while e_9 represents an instance that can fulfill specific roles in the knowledge graph. Queries, including irrelevant queries, are generated to address gaps in knowledge, and systems like TuckER are part of the broader category of link prediction systems. The variable y denotes outputs related to queries, and the correct answer is essential for resolving inquiries. The Active Knowledge Graph Completion (AKGC) task is a methodical approach that utilizes various methods, including rule learning in inductive logic programming, to enhance knowledge representation and decision-making.",
    "In the context of knowledge graphs, the concept of '7 ({e_3, e_4, e_5, e_6, e_7, e_8, e_9})' has a broader term known as 'set', which refers to a mathematical collection of entities. Additionally, the logical statement 'fact Pk(ei, ej)' is encompassed within the broader category of 'facts', which represent individual pieces of information in knowledge graphs. Similarly, 'hold-out facts' and 'F is a set of facts' also fall under the term 'facts'. The variable 'y', which denotes the citizenship of an entity 'x' studying in an institution 'z', is categorized under 'entities'. The set of all entities, represented as 'E= {e1,...,en}', is another example of a broader term within 'entities'. Furthermore, the 'two baselines' are constructed to compare the performance of a 'rule-based link predictor', highlighting the relationship between these comparative methods. The 'modified leading-edge link predictor' is a specific type of 'current link predictors', indicating its role in enhancing link prediction tasks. In terms of query generation, 'baseline query sets' serve as a broader term that encompasses various methods for generating queries. The predicate 'P_1(z_0, z_1)' is classified under 'predicate', while 'E' represents a broader category of 'variables'. The entities involved in knowledge graphs, including 'the entities' and 'the entities which satisfy the second argument of P_t', are all part of the broader classification of 'entities'. The term 'Parameter' is associated with 'parameters', indicating its role in defining user inputs for algorithms. In the context of open path rules, 'z_i (1 \u2264 i \u2264 n - 1)' serves as the subject argument of 'P_{i+1}', illustrating the sequential nature of predicates. Lastly, 'twice the number of facts' refers to a theoretical upper limit on the number of distinct queries that can be generated, which is also categorized under 'facts', while 'queries soliciting missing facts' are a specific type of 'a query'.",
    "In the realm of knowledge graphs, the entity e_1 has a broader term that encompasses An entity e, indicating its foundational role in the graph's structure. The novel heuristic function, which is an innovative computational method, is categorized under the broader term heuristic function, highlighting its significance in optimizing decision-making processes. Furthermore, the term significant is recognized as a broader term for relevance, emphasizing the importance of the top-ranked answers in link prediction tasks. Link prediction itself plays a crucial role in predicting missing facts within the knowledge graph, while a pair of entities (e, e') satisfies the conditions set by the body and the head of a closed path (CP) rule. Active knowledge graph completion is classified under the broader category of Methods, showcasing its systematic approach to enhancing knowledge graphs. Additionally, a good rule about that predicate is linked to the broader term predicate, and head instances are recognized as a broader term for instance, illustrating their role in the graph's factual representation. The link predictor HOLE is categorized under specific link predictor and also falls under the broader term link prediction, indicating its utility in predicting relationships. K' is identified as a broader term for parameters, which are essential for the sampling process in knowledge graph completion. The target predicate is also classified under predicate, reinforcing its significance in the mining of high-quality rules. KG completion is another method that aims to enhance the completeness of knowledge graphs. The dataset FB15K SELECTED is recognized as a broader term for a link predictor, serving as a benchmark for evaluating link prediction algorithms. The method PathFinding() is specifically used for generating the rightmost predicate in the context of knowledge graph completion. Queries soliciting missing facts can be utilized by link predictors to identify gaps in the knowledge base. Moreover, two queries are categorized under queries, indicating their role in addressing missing information. The support of r is recognized as a broader term for relations, which are intrinsic to the connections between entities. Lastly, the language of existential rules encompasses constrained existential rules, providing a formal framework for knowledge representation. The entity e1 is also classified under the broader term an entity, highlighting its role within the knowledge graph.",
    "In the realm of knowledge graphs, a long-standing gap in traditional link prediction systems has been identified, which encompasses link predictors that aim to forecast relationships between entities. This gap is addressed by the modified leading-edge link predictor, a specific type of link predictor designed to enhance query generation for knowledge graph completion. The process of embedding the entities and predicates plays a crucial role in this context, as it refers to the representation of these elements in a low-dimensional space, which is essential for effective link prediction. The product of the entity and predicate embeddings further facilitates this process, allowing for the capture of interactions within the graph. Additionally, the sequence of ranked entities generated by link predictors provides a structured approach to identifying potential relationships, all of which are derived from massive quantities of weakly-structured data. The ROC curve is employed to compare the outputs of the two systems, evaluating their performance in generating relevant queries. Furthermore, the locatedIn predicate is a broader term within Knowledge Graphs (KGs), which are fundamentally built on a data-first approach that empowers them to manage vast amounts of information. Parameters such as the OPSC threshold are critical in determining the quality of generated rules, while the models developed are instrumental in curating tasks that enhance the knowledge graph. The RLvLR* system, which varies based on the SC measure, represents an evolution in link prediction systems, contributing to the broader category of methods used in this field. Lastly, the YAGO2 knowledge graph induces fewer rules due to its unique structure, highlighting the challenges faced in knowledge graph completion.",
    "In the context of knowledge graph completion, the body of each rule has a broader term known as body, which refers to the part of a rule that contains predicates and variables. Missing facts, which represent specific pieces of information that are absent from a knowledge graph, fall under the broader category of information. The subject and object arguments, essential components of predicates, are encompassed by the broader term arguments. A specific link predictor is a type of automated link predictor, which is a model used to predict links in a knowledge graph. The Noisy-OR operator aggregates high-performing rules, enhancing the prediction of facts related to a specific target predicate, denoted as P, which appears in the head of the rule. The runtime for mining is related to the number of possible rules that can be generated, indicating the computational complexity involved. Link prediction, a broader term for automated link predictors, plays a crucial role in inferring relationships. The rule body, similar to the body, also has broader implications in knowledge graph completion. Representation Learning for KG Completion is categorized under Methods, which encompasses various systematic approaches. Prand, a baseline query generator, is classified as an algorithm. The body includes argument positions, which define the roles of entities within predicates. Existing representation learners compute embeddings, which are vector representations of entities and predicates. The body_r, which refers to the conditions satisfied by pairs of entities, involves intermediary entities denoted as entities e_1, ..., e_{n-1}. Argument embedding is represented as vectors, capturing the essence of the arguments in a low-dimensional space. Outputs generated from these processes fall under the broader category of data, which encompasses the information modeled by knowledge graphs. Lastly, a set of entities (countries) is a specific instance of entities, illustrating the diverse nature of the elements represented in knowledge graphs.",
    "TuckER is a specific link predictor that falls under the broader category of link prediction algorithms. It is associated with 800 entities, which represent individual objects within a knowledge graph, and these entities can be identified as An entity e. The statistical measure SC is related to variables, which are symbolic placeholders essential for inferring relationships in knowledge graphs. Additionally, links between the variables are a broader term for links that connect entities through predicates. Existential rule learning is a method utilized by Rule learners to enhance knowledge graph completion. The term entities encompasses the broader concept of data, which refers to the information modeled within knowledge graphs. The head of the rule is a specific instance of the broader term head, while the tuple (P, A) represents an embedding, which is a broader concept in representation learning. HOLE, another rule-based link predictor, also fits within the broader category of link prediction. The predicate livesIn is a specific instance of the broader concept of Knowledge Graphs (KGs). Held-out facts are a subset of facts that are used to evaluate link predictors, while open-ended questions are a broader category that includes questions aimed at identifying missing information. The set of entities, represented as E= {e1,...,en}, is a broader term that includes all entities within a knowledge graph. The body of a rule is a broader term for the conditions that must be satisfied, while body_r refers to the variables involved in these conditions. The RLVLR algorithm can utilize a similarity scoring function to evaluate the quality of generated rules. The plausibility of a fact is a broader term for facts that assess the validity of relationships, and the proportion of the inferred head instances is a measure of instances that satisfy the head of a rule. Lastly, e_7 is an example of a variable that can instantiate within the context of knowledge graph completion.",
    "The method for learning rules with free variables is categorized under broader methods, which also includes previous rule-based methods. In the context of knowledge graph completion, the vector v(2)(P1) is a specific type of vector that falls under the broader category of vectors. The output generated by a rule-based link predictor is considered a subset of outputs, while argument embeddings are a form of learned embeddings. The pair of entities (e, e') is a specific instance of an entity, highlighting the relationships between them. Rule learners are designed to predict facts, which are essential components of knowledge graphs. The rule-based link predictor is a more specific type of automated link predictor. Data, which is foundational to knowledge graphs, is a broader term that encompasses information. Links represent the relationships within the graph and are a broader category of relationships. The binary predicate P_2 is classified under relations, which define the connections between entities. Questions generated in this context evaluate the relevancy of a question, which itself is a broader term for questions. Generating queries necessitates the use of answer sources to identify missing entities. The set S_p, which includes subjects of a predicate, is a broader term for an entity. Test facts, which are crucial for evaluating models, fall under the broader category of data. A pair of entities (e, e') is also a broader term for an entity, while e_{n-1} is classified under entities. A satisfying entity is another instance of an entity, and YAGO2 is recognized as a significant entity within this framework.",
    "Synthetic Poker has a broader term known as dataset, which encompasses structured collections of data. Within this context, rules with more complex shapes, such as stars, include numerical attributes, enhancing the representation of relationships in knowledge graphs. The concept of links between the variables is related to the broader category of variables, which also includes the variable ei. Additionally, RLvLR*, a specific link predictor, is categorized under link prediction and has a broader term that includes other link predictors like HOLE. TuckER, another link prediction algorithm, falls under the rule-based link predictor category. The set of entities, which refers to a collection of identifiers for objects, has a broader term of an entity, while embeddings, which are mathematical representations, include learned embeddings. Algorithm 1, which is used for evaluating candidate rules, is also classified under algorithms. Furthermore, P_n(z_{n-1}, y) represents a predicate that connects variables in knowledge graph completion. Lastly, erroneous facts are a broader term for data, and the relational predicate citizenOf is part of the knowledge graph (KG) framework.",
    "In the context of knowledge graphs, embeddings are crucial as they involve averaging the embeddings of all the entities at the endpoints, which in turn has a broader term of embeddings. Entities within these graphs have intrinsic relations, and link predictors play a significant role by answering with a sequence of ranked entities. The predicate P has a broader term known as relations, while P5 is categorized under predicates. Additionally, e_3 is a variable that also has a broader term, indicating its connection to variables in the graph. The row index of non-zero elements of v(2)(P1) is considered an entity, highlighting its importance in the structure of the graph. Furthermore, the sequence of entities e_1, ..., e_{n-1} is recognized as a broader term for entities, and its body is encompassed within the broader term of body. The correct answer in knowledge graph completion is classified under entities, while some others refer to additional facts that may not be represented in the graph. Their relations are also categorized under relations, and the Poker dataset serves as an entity with a broader classification. The entity e_6 is recognized as part of the broader term entities. The redundancy elimination method is a type of algorithm, and RLVLR is a paper that discusses these concepts. Measures support are utilized in major approaches to rule learning, and the predicate P_1 is specifically used in the local co-occurrence fitness function f^0_loc. Lastly, the authors of the paper outline several directions for future research.",
    "In the realm of knowledge graphs, the target predicate has a broader term known as predicate, which is fundamental in defining relationships between entities. Similarly, P_h, another important concept, also falls under the broader category of predicates. Within this context, some topics are more richly covered than others, highlighting the uneven representation of knowledge. The term entities encompasses a broader category that includes variables, with e0 and P also classified as variables. The set E is defined as the collection of entities, which further emphasizes the interconnectedness of these concepts. Additionally, body_r denotes a specific condition that pairs of entities must satisfy within closed path rules. Table 2 illustrates the run times in hours associated with various processes, providing insights into the efficiency of knowledge graph operations. Satisfying entities, which fulfill specific rule conditions, are a subset of entities, while query evaluation is a broader term that includes the generation of queries aimed at addressing gaps in knowledge. The set E is reiterated as a broader term for entities, and KGs are recognized as a broader category that includes datasets. The object argument of P_n is classified under the broader term object, and E is the set of entities further emphasizes the importance of entities in knowledge representation. Generating relevant queries is a process that falls under the broader category of query generation, while the efficient method to evaluate OP rules is categorized within Methods. The sets of entities occurring as subjects and objects of P are also classified under the broader term an entity. Finally, facts within knowledge graphs are expressed in the form P(e, e'), and link predictors, which include algorithms like TuckER, are essential for predicting relationships between entities.",
    "RESCAL is a tensor factorization method that falls under the broader category of existing representation learners, which are algorithms designed to compute embeddings for entities and predicates in knowledge graphs. In this context, predicate pairs, which represent combinations of two predicates, can be seen as a broader term for an entity, highlighting their interconnectedness. Similarly, a fact, which is an RDF triple representing a relationship between two entities, is encompassed within the broader term of facts. Prand, a baseline query generator, is categorized under query generation, while RLvLR*, a modified link predictor, is classified as a rule-based link predictor. TuckER, another embedding-based algorithm, is part of the broader group of link predictors. Knowledge graphs (KGs) exist within the body of the rule, and queries that can be answered from the training set are filtered out from the training set itself. The more probable facts are a subset of data that is deemed relevant for predictions, while the two sets of embeddings learned by RESCAL represent the broader concept of embedding. Furthermore, queries that can be answered from the training set also fall under the broader term of the training set. The factual statement livesIn(Bronte, Canberra) is categorized as a rule, and P3(z1,y) is a broader term for predicates. The entity e_9 represents a broader category of variables, while each entity e_j is a specific instance of an entity. The plausibility of the fact that e0 is connected to e1 via predicate P1 is a broader term for plausibility itself. Additionally, the number of entities that can instantiate z_0 to satisfy the head part is a broader term for entities. The minimum OPSC serves as a threshold parameter under the broader category of parameters. Redundant rules that induce the same query do not contribute to the confidence degree (CD), which quantifies the reliability of a query. Lastly, the question that reveals missing facts in a knowledge graph can be fed to a link predictor for further analysis.",
    "A link predictor can be fed to the question, which highlights its role in knowledge graph completion. The co-occurrences of z_0 has a broader term, variables, indicating the symbolic placeholders used in logical rules. Similarly, the number of entities is encompassed by the broader term entities, representing the distinct items in a knowledge graph. The query presidentOf(Celine Dion, ?) has a broader term, queries, which are essential for addressing gaps in knowledge graphs. Its embedding representation is related to embeddings, which are mathematical representations used to capture semantic relationships. Missing facts are directly related to the existence of missing facts, emphasizing the identification of unrepresented information in a knowledge graph. Wikidata serves as a broader term for Knowledge Graphs, showcasing its role as a collaborative knowledge base. Automatic completion is categorized under Methods, reflecting the systematic approaches used to fill in missing information. The set {x, z_i, y} has a broader term, set, which denotes a collection of entities. OPHC, a quality measure, is associated with An entity e, indicating its relevance in evaluating open path rules. The 20 random predicates are derived from FB15KSE, a benchmark dataset for knowledge graph tasks. The path of entities has a broader term, entities, illustrating the connections between them. The sequence of predicates P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') is classified under relationships, showing how entities are interconnected. Entities that are related to the existing entities fall under relations, expanding the scope of analysis. Similar entities are encompassed by the broader term entities, indicating their relational similarities. FB15K SELECTED is a broader term for automated link predictor, highlighting its use in generating queries for missing links. The query generation task matters significantly for the top prediction, which is crucial for identifying relevant missing facts. Major approaches to rule learning are classified under Rule learners, reflecting the methodologies employed in this field. The argument embedding vector P(2)_i has a broader term, property, indicating its role in establishing relationships. Lastly, the original tail is categorized under tail, representing the conclusion of a rule in knowledge graph completion.",
    "The modified leading-edge link predictor is a specific type of automated link predictor, which is a broader category of predictive models designed to infer missing links in knowledge graphs. In this context, 'e2' represents an entity that falls under the broader term of 'an entity'. Additionally, the mention '5 ({e_1, e_2, e_3, e_4, e_5})' refers to a specific count of entities that can be categorized under the broader term 'set'. The entities we need are classified as entities, indicating their role in the knowledge graph. Furthermore, the predicate P_t(x, z_0) is a specific instance of a broader category known as predicates. The entities we need also have a broader classification as entities. In the realm of scoring, additive calculus is utilized for scoring, which is a method of evaluating the plausibility of facts in knowledge graph completion. The RLvLR* model is a type of link predictor that falls under the broader category of link predictors. Compositional embeddings are a more specific form of embedding, which is a broader term for representing entities and predicates in a low-dimensional space. This last step in the process of knowledge graph completion is part of a broader iterative step. The set of entities represented as E= {e1,...,en} is a broader term for the collection of entities within the knowledge graph. Link prediction systems are a broader category that encompasses link prediction tasks. The pair of entities (x,y) is classified under the broader term of an entity. The set E= {e1,...,en} also falls under the broader classification of a set of entities. SC is a statistical measure that is categorized under entities. KG sampling is a method that is part of broader methodologies used in knowledge graph completion. The initial set of facts is foundational data that is classified under the broader term of data. The set of entities e1,...,en is also categorized under entities. The predicate P4 is another instance of a broader category of predicates. Lastly, a synthetic dataset is recognized as a correct and complete representation of knowledge graphs (KGs).",
    "Some intriguing challenges remain for future work, particularly in the context of enhancing the OPRL method. The YAGO2 core has a broader term of rule learning, which encompasses various techniques for discovering patterns in data. Within this framework, the sequence of predicates, represented as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e'), also has a broader term of predicate, indicating its role in connecting entities. The body_r of a rule is related to entities, highlighting the importance of these connections in knowledge graphs. Furthermore, learned embeddings, which are crucial for representing entities and predicates, have a broader term of Embeddings(). A fact that instantiates the triple at the head of the rule is categorized under facts, emphasizing its significance in knowledge representation. The RESCAL method, which is a tensor factorization approach, has a broader term of learned embeddings, showcasing its utility in embedding-based methods. Additionally, the co-occurrence fitness function, f_coo(.), is a type of fitness function that evaluates the quality of open path rules. The process of embedding the entities and predicates of a given KG falls under embedding models, which are essential for knowledge graph completion. The test facts, which are used for evaluation, also belong to the broader category of facts. The quality estimation function, known as open path fitness, is another fitness function that assesses the effectiveness of rules. Parameters such as the minimum OPSC and minimum SC parameters are critical in filtering generated queries. The embeddings of all the entities at the endpoints are represented by Embeddings(), which are vital for evaluating rule quality. The entity e_7 is classified under entities, while the variable A is also categorized as parameters. Overall, learned embeddings are part of embedding-based methods, and the RESCAL evaluation function specifically evaluates a single predicate. Lastly, the scoring function is a broader term for evaluation methods, and the number of entities that can instantiate z_0 to satisfy the head part relates to instantiation, which is fundamental in applying rules within knowledge graphs.",
    "In the realm of knowledge graphs, various entities and predicates interact through defined relationships. For instance, 'entities forming the object argument of the tail predicate, P_n' has a broader term of 'entities', indicating its classification within the larger category of entities. Similarly, 'the embeddings of all the entities at the endpoints' falls under 'embedding-based methods', showcasing its role in representing entities within a vector space. The concept of 'learned embeddings' is a subset of 'entity embeddings', emphasizing the process of generating low-dimensional representations of entities. Furthermore, 'a specific target predicate' is categorized under 'predicate', while 'P(1)_1' is classified as a 'property'. The process of 'rule learning' employs a 'rule language' to express logical rules, and the system known as 'CHAI' plays a crucial role by filtering and supplying 'facts' to enhance knowledge graph completion. Additionally, 'embedding the entities and predicates of a given KG' is a broader term for 'embedding vector', and 'the embeddings of all the entities at the endpoints' also relates to 'entity embeddings'. The 'embedding-based rule mining system' is categorized under 'Methods', while the 'support of r' counts the 'head instances' that satisfy specific rules. The statistical measure known as 'Standard confidence (SC)' is a broader term for 'confidence', and 'top-ranked candidates' are classified under 'candidates'. The mathematical operation of 'matrix and vector multiplication' is utilized in the 'Evaluation' of generated rules. The predicate 'locatedIn' is a broader term for 'knowledge graph (KG)', and the query 'citizenOf(Ann, ?)' is classified under 'queries'. Lastly, entities such as 'e_3' and 'e_9' are related to other entities, illustrating the interconnected nature of knowledge graphs.",
    "In the context of knowledge graphs, the variable 'ei' has a broader term known as 'entities', which represent the individual items within the graph. Similarly, 'Prand queries' are a specific type of query that falls under the broader category of 'a query'. The pair of entities denoted as '(e, e')' satisfies the condition defined by the 'head of r', which is crucial for evaluating relationships in the graph. Furthermore, the embeddings of all the entities in the argument position are associated with 'entities' and have a broader term that encompasses them. The entity 'e1' is categorized under 'variables', indicating its role in representing entities within logical rules. The 'rule-based link predictor' is a broader term for 'link prediction systems', which are designed to infer relationships between entities. Additionally, the embeddings of all the entities in the argument position also have a broader term of 'entities'. The variable 'A' is related to 'matrices', while 'the final result of the algorithm' is a broader term for the 'algorithm' itself. The predicate 'P2' is categorized under 'parameters', highlighting its role in the context of knowledge graph completion. A 'high-performing predictor' is expected to rediscover 'held-out facts', which are known facts excluded from training data. Moreover, 'RESCAL embeddings' are noted to be larger and simpler than traditional 'link predictors'. The 'entities' are said to live in 'z', indicating a specific context or location within the graph. The '20 random predicates' are utilized in the 'query generation task' and have a broader term of 'predicate'. The absence of a 'benchmark solution' is recognized as a broader term for the 'solution' proposed in the context of knowledge graph completion. 'Evidence' is provided for 'one entity of the pair', indicating its role in suggesting the existence of missing facts. Lastly, the pair of entities '(e, e')' also satisfies the 'head of r', reinforcing the interconnectedness of these concepts within the knowledge graph.",
    "Link prediction is a crucial task that finds its application in various industrial contexts, enhancing the practical use of knowledge graphs. Within this domain, entities such as e_3 are recognized as part of a broader category known as entities, which encompass all individual items represented in a knowledge graph. The process of embedding the entities and predicates of a given knowledge graph into a latent space allows for the effective representation of complex relationships. The latter embeddings, which are compact representations learned through embedding methods, prove to be particularly useful for link prediction tasks. A link predictor is capable of answering any question posed within the framework of knowledge graph completion. Furthermore, the evaluation method employed in this context falls under the broader category of methods, indicating systematic approaches to problem-solving. A number of entities also belong to the larger group of entities, while relations are recognized as a subset of relationships that define the connections between these entities. Each non-zero element of a vector, which represents distinct entities, plays a significant role in the overall structure of the knowledge graph. Additionally, the embedding representation of these entities is part of the broader embedding-based methods, which utilize novel, efficient vector computation techniques to enhance the performance of algorithms in this field.",
    "In the realm of knowledge graphs, entities have their relations, which are crucial for understanding the connections between different data points. The vector representation E_j has a broader term, known as an entity, which encompasses various identifiable objects within the graph. Similarly, the predicate P2 is categorized under matrices, indicating its mathematical foundation. The embedding representation of entities is also significant, as it falls under the broader category of entity embeddings, which capture the semantic properties of these entities. Traditional knowledge graph completion is a method that aims to fill in missing information, and it is part of a larger set of methods used in this field. Within this context, a set contains entities like e3, which are essential for linking various facts. Additionally, 20 randomly selected predicates from FB15KSE are part of the broader data landscape that knowledge graphs utilize. The satisfying entities e2 and e3 are classified as entities, emphasizing their role in fulfilling specific conditions within the graph. Link prediction systems, which are designed to infer relationships, are categorized under link predictors, showcasing their interconnected nature. The performance of the Open Path Rule Learning (OPRL) algorithm is measured by the partial AUC, which is a specific instance of the partial area under the curve (AUC). Furthermore, this kind of rule, characterized by closed path rules, interprets universal quantification, allowing for the inference of facts. The RLVLR system has changed to use the Max operator, enhancing its rule learning capabilities. The number of entities that satisfy the rule body is a critical metric in evaluating knowledge graph completion. However, the validity of our test set is questionable because of genuinely missing facts, which can impact the overall accuracy of the knowledge graph. Rule learning encompasses a broader term known as Rule learners, which are essential for discovering patterns within the data. Each predicate has a broader term, referred to as relations, which define the connections between entities. A fact, represented as an RDF triple, has a broader term known as links, which establish relationships in the graph. The four benchmark datasets serve as a foundational dataset for evaluating various algorithms in knowledge graph completion. Lastly, the variable i has a broader term, which includes variables that are essential for logical reasoning within the graph.",
    "In the knowledge graph, the entity e_9 has a broader term known as entities, which in turn encompasses information. The method PathFinding() is categorized under the broader term algorithm, indicating its role in computational processes. Additionally, a query derived from the hold-out test data is classified as a type of queries, highlighting its significance in link prediction models. The mathematical expression P(2)_t is recognized as a property, while the process of embedding the entities and predicates is also linked to entities. Furthermore, the product of the entity and predicate embeddings is associated with entities, emphasizing its relevance in knowledge graph representation. The predicate P1(x, z0) is identified as a broader term under predicates, and the variable z0 is classified as an entity. The probabilistic-based query generator is another instance of an algorithm, showcasing its utility in generating queries for knowledge graph completion. Closed path (CP) rules are defined as having no free variables, which distinguishes them from other types of rules. Extant entities are categorized under an entity, reinforcing their role in the knowledge graph. Argument embeddings fall under the broader term embedding, indicating their function in capturing semantic meanings. The comparative system for query generation is a method of query generation, used for evaluating performance in knowledge graph tasks. The following two relevant queries are examples of a query, demonstrating their application in identifying missing facts. All variables are classified under variables, indicating their universal application in rule-based systems. The rule-based link predictor is a broader term for specific link predictors, illustrating its function in predicting links within the graph. Entities satisfying the subject argument of the head predicate, P_t, are categorized under entities, while its predicate and entities are also recognized as an entity. Lastly, E= {e1,...,en} represents a set, which is crucial for evaluating candidate rules in knowledge graph completion.",
    "The rule-based link predictor is a specific type of link prediction model, which is a broader category encompassing various methods for predicting relationships between entities. In the context of knowledge graphs, queries are often posed to a Web question-answering engine to retrieve information. Within these graphs, satisfying entities are defined as those that meet the criteria of a satisfying entity, indicating their role in fulfilling specific conditions. The work in the literature related to link prediction and active knowledge graph completion falls under the broader term of literature, which encompasses various studies and methodologies. OPHC, a quality measure, is associated with parameters that define the settings for experiments. Wikidata serves as an exception for 50 randomly selected predicates, which are specifically targeted by this knowledge base. Furthermore, head instances represent a broader category of entities, while test facts are a subset of information that is crucial for evaluating link prediction models. The set of entities, denoted as E, is a broader term that includes all entities within a knowledge graph. Query evaluation is a critical aspect of the broader evaluation process, ensuring the effectiveness of queries. FB15K SELECTED is a dataset that belongs to the broader category of link prediction systems, which are essential for inferring relationships. Additionally, e3 is an entity that relates to elements within the graph. The concept of entities that are related to the existing entities also falls under the broader category of entities. RESCAL demonstrates its strength when applied in a heuristic for mining logical axioms, which aids in the identification of relationships. Lastly, a pair of entities (e, e') satisfies the body of rules, indicating their interconnectedness within the knowledge graph.",
    "In the realm of knowledge graphs, a 'pair' is recognized as having a broader term of 'set', which denotes a collection of entities. The 'modified leading-edge link predictor' is a specific type of 'link prediction systems', enhancing the prediction of relationships between entities. Within this context, the 'learning system parameter' is a subset of the broader 'learning system', which is crucial for tuning the selection of candidate rules. Additionally, 'vector embeddings' are a more specific form of 'learned embeddings', representing entities in a numerical format. The 'body of the rule' plays a pivotal role as it induces the 'query P_t(?, e)', facilitating the inference of missing links. The term 'o_e', which counts occurrences of an entity as an object in a predicate, falls under the broader category of 'parameters'. Furthermore, 'embeddings' encompass a wider range of representations, including the specific 'embedding'. A 'known-missing fact' is instrumental in generating 'the following two relevant queries', which guide the completion of knowledge graphs. The 'embeddings of all the entities at the endpoints' are a specific type of 'vector embeddings', crucial for evaluating rule quality. The evaluation method, 'Evaluation()', is responsible for discarding 'failing rules' that do not meet the necessary criteria. 'Erroneous facts' are a broader category that includes 'information' that may misrepresent data. The 'parameters' used in the system are aligned with 'the optimum obtained by tuning', ensuring effective performance. 'Predicate embeddings' are a specific type of 'learned embeddings', capturing the semantics of relationships. The predicate 'P_i(e3, e1)' is categorized under 'facts', representing relationships in the knowledge graph. The 'knowledge graph (KG)' is embedded into a 'low-dimensional vector space', facilitating efficient data processing. The RESCAL method is employed to learn 'matrices {P_k}', which represent the interactions between entities. 'Satisfying entities' are identified as 'distinct entities' that fulfill the conditions of rules. The knowledge base 'YAGO2' is characterized by 'fewer repeatable patterns', which can limit its effectiveness in generating rules. A 'specific link predictor' is a type of 'link predictors', used to forecast relationships. Lastly, 'compositional embeddings' utilize 'scoring' methods to evaluate the plausibility of facts based on embedded representations.",
    "The latent features of a path connect its endpoints, illustrating the relationships defined within a knowledge graph. In this context, a pair of entities satisfies the body of r, which outlines the conditions necessary for specific rules to hold true. Link prediction, a task that forecasts the existence of relationships between entities, is a broader term encompassing link predictors, which are the algorithms that facilitate this process. Furthermore, Pairwise local fitness functions are defined accordingly to evaluate the quality of these rules, and they also fall under the broader category of fitness functions. The embeddings used in models like HOLE are essential for link prediction, as they provide a compact representation of the relationships in the graph. Additionally, OPSC/OPHC thresholds are parameters that help assess the relevance of generated queries, while the concept of learned embeddings captures the latent features derived from predicate embeddings. In this framework, entities such as e1 and e0 are interconnected, with e1 representing a broader category of entities. The body of r and the relevancy of a question are both evaluated through specific measures, ensuring that the generated queries are effective for knowledge graph completion.",
    "In the realm of knowledge graphs, the term 'sample' has a broader term known as 'dataset', indicating that samples are subsets of datasets used for various analyses. Furthermore, 'facts about the target predicate' are possible queries about 'the target predicate, P_1', which assumes the existence of this predicate. This concept is linked to 'This aggregation', which has a broader term 'aggregation', highlighting the method of combining rules in knowledge graph completion. Additionally, 'entities forming the object argument of the tail predicate, P_n' falls under the broader category of 'predicate', emphasizing its role in connecting entities. The 'more probable facts' are categorized under 'information', suggesting their relevance in knowledge graph tasks. The query 'citizenOf(Ann, ?)' is associated with 'Knowledge Graphs', indicating its application in this structured representation of knowledge. The 'maximum size of each sample' is defined by 'parameters', which set limits on the number of entities included. Moreover, 'its embedding representation' is a type of 'vector embeddings', used to mathematically represent candidate rules. The 'novel heuristic function' is a specific type of 'heuristic', while the 'hybrid fitness function' is classified as an 'algorithm' designed to optimize rule quality. The dataset 'FB15K SELECTED' is adopted for 'link prediction', serving as a benchmark in this area. 'OPHC' is a broader term for 'predictive attributes', which are essential for evaluating rules. The 'known-missing fact' also falls under 'information', highlighting its significance in knowledge graph completion. The fact 'P_1(e_1, e_2)' is categorized under 'relations', which represent the connections between entities. The entity 'e2' is classified as a type of 'variables', indicating its role in logical rules. Lastly, the 'modified leading-edge link predictor' is a variant of a 'specific link predictor', enhancing its performance in generating relevant queries, while 'P2(z0,z1)' is another predicate that connects entities within the knowledge graph.",
    "The rule-based link predictor is a specific type of link predictor, which is a broader category of algorithms designed to forecast relationships between entities. The quality of each candidate rule is evaluated based on embeddings, which are mathematical representations that capture semantic relationships. Additionally, the minimum OPSC and minimum SC parameters are crucial as they directly influence the False Positive Rate in link prediction tasks. TuckER, another algorithm in this domain, also falls under the broader category of embeddings. The inference module serves as an algorithmic component that aids in generating relevant queries for knowledge graph completion. High-performing predictors, which are also classified as algorithms, aim to accurately rediscover missing facts. The number of entities in a knowledge graph satisfies the conditions set by the head of the rule, while predicate P_k is a specific type of predicate that is represented by a matrix in the context of knowledge graph embeddings. The probabilistic-based query generator is a method used in query generation, and the modified leading-edge link predictor is a variant of link prediction algorithms. A set of entities, such as countries, is categorized under entities, and the partial AUC of OPRL is a performance metric related to AUC. Unobserved but intrinsic properties are essential for understanding the relations within the graph. Each predicate P_k is embedded by a matrix that captures its interactions, and predicate pairs are associated with similar entities, indicating shared contextual relationships. Probability is generally higher in knowledge graphs, reflecting the likelihood of connections between entities. Interestingly, the authors of the study do not propose a specific learning system, but they do discuss various aspects of argument embedding, which is a broader term encompassing embeddings. Finally, the entities within the knowledge graph have a broader classification that includes individual entities like An entity e.",
    "In the context of knowledge graph completion, missing entities require answer sources to enhance the graph's completeness. The former utilizes entity embeddings to estimate the quality of rules. P(2) is defined as the average of the embeddings of all entities occurring as objects of a predicate, represented mathematically as (1/n) \u2211 s_e * e for e in S_p. The relational rule country\u207b\u00b9(z, w) has a broader term known as relations, while P_2 is a specific instance of a broader term called predicate. Rule learning, which is a broader term for algorithms, plays a crucial role in this domain. OPSC serves as a quality measure that falls under the broader category of parameters. Link predictors attempt to rank a set of entities, although they are not designed to answer a query directly. Training is a process that encompasses various methods, including the Co-occurrence Fitness Function, which evaluates the quality of open path rules. YAGO2 core is a comprehensive resource that relates to association rule mining. The top-ranked entities are determined by their position within the ranking, which is a broader term for the concept of information. RESCAL is a method that relates to embedding, while the dimensionality of the latent feature space is represented by the variable d. The row index of non-zero elements of v(1)(B) corresponds to an entity that satisfies specific conditions. Lastly, HOLE is an algorithm that utilizes embeddings for link prediction.",
    "The proportion of the inferred head instances are also satisfied by head instances, indicating a relationship between these two concepts. In the context of knowledge graphs, the head and body present similar relations between entities (x,y), which are crucial for understanding the connections within the graph. However, this aggregation is not compatible with the query generation task, highlighting a limitation in its application. Furthermore, the pair (e, e') has a broader term known as entities, which encompasses a wider range of connections. In terms of scoring, product calculus is utilized for scoring, providing a mathematical framework for evaluating relationships. The vector v(1)(A(P1) A(P2) ... A(Pm))[i] has a broader term of variables, which are essential in the logical structure of rules. Additionally, a fact has a broader term referred to as links, which connect various entities. The predicate P also has a broader term, indicating its foundational role in defining relationships. The dataset FB15K SELECTED serves as a broader term for rule-based link predictors, which are essential in knowledge graph completion. The RESCAL evaluation function is categorized under algorithms, emphasizing its computational nature. Moreover, answer sources extend beyond current link predictors, providing additional data for knowledge graph enhancement. A pair of entities (e, e') is instantiated by entities, reinforcing the concept of relationships in the graph. The vector v(2)(P1) indicates satisfying entities, which are those that meet the conditions of specific rules. The set of entities E has a broader term, which is simply set, while satisfying entities also fall under the broader category of set. Entity embeddings, which represent entities in a vector space, have a broader term known as embedding. The modified leading-edge link predictor is a variant of the rule-based link predictor, showcasing advancements in link prediction methodologies. Lastly, the plausibility of the fact that e0 is connected to e1 via predicate P1 has a broader term, which is predicate, further illustrating the interconnectedness of these concepts. The set S_p represents the subjects of a predicate P, contributing to the overall structure of entities in knowledge graphs, while YAGO2 serves as a comprehensive resource that has a broader term of entities.",
    "In the context of knowledge graphs, a pair of entities (e, e') has a broader term known as entities, which encompasses all individual items represented within the graph. Similarly, a satisfying entity also falls under the broader category of entities. A set of entities is considered by a number of entities, indicating a relationship between these collections. Head variables, which are crucial in logical rules, have a broader term of variables, highlighting their role in defining outputs. The set E, representing all entities, has a broader term referred to as set. An object entity, which identifies a specific object in the graph, is a subset of an entity. The embedding-based link predictor HOLE is categorized under Embeddings(), showcasing its reliance on vector representations. Additionally, the term 'they' refers to An entity e, emphasizing the connection between these concepts. Rule quality, which assesses the effectiveness of generated rules, is a broader term for quality measures. Each non-zero element of a vector indicates a satisfying entity, demonstrating how specific conditions are met within the graph. The target predicate, P_1, is a specific relation that falls under the broader category of predicates. The set of entities is synonymous with entities, reinforcing the interconnectedness of these terms. K, representing the knowledge graph, has parameters as a broader term, indicating the settings used in its construction. HOLE is also classified under embedding-based methods, which are essential for capturing semantic relationships. The automated link predictor is a type of algorithm designed to infer missing links in the graph. A set of entities is obtained from the broader collection of entities, while each fact generated by RLvLR is translated into two queries, facilitating knowledge graph completion. Lastly, P(e, e') represents a relation within the graph, and the second argument of the head is categorized under arguments, highlighting its role in logical rule evaluation.",
    "The latter incorporates predicate embeddings, which are essential for enhancing the evaluation of open path rules in knowledge graph completion. The test facts, which are a subset of data, play a crucial role in assessing the relevance of generated queries. The row index of non-zero elements of v(2)(P1) indicates the entities involved, and it also has a broader term that encompasses all entities. Genuinely missing facts will be treated as false, impacting the accuracy of knowledge graph evaluations. Measurable qualities, which are derived from predictive attributes, help in quantifying the effectiveness of the rules. The variable z2 has a broader term that includes all variables used in the rule generation process. HOLE, an embedding-based link predictor, is related to entity embeddings, which capture the semantic properties of entities. Additionally, vectors {e_i} are a broader term for vectors that represent the relationships among entities and predicates. Queries of unclear origin are a type of query that aims to fill gaps in the knowledge graph. Subject and object arguments are integral to predicate P, which is utilized in the generation of top candidate rules. The fitness function is employed to evaluate these top candidate rules, while the maximum length of rules is defined by parameters that guide the rule generation process. The concept of being more richly covered relates to the broader term of coverage, indicating the depth of information available in knowledge repositories. An efficient method computes the quality of each rule, ensuring that the generated rules are effective. The fitness function adapted from RLVLR is part of the broader category of methods used in knowledge graph completion. The Poker dataset serves as a complete knowledge graph, representing various entities. Queries that can be answered from the training set are also classified under the broader term of a query, just like a relevant query, which indicates potential missing entities. Finally, the product of the entity and predicate embeddings is a broader term for predicates that connect entities within the knowledge graph.",
    "TuckER is an algorithm that has a broader term encompassing various computational methods. Within the realm of knowledge graphs, distinct entities are identified to find entities that represent unique elements. Link predictors play a crucial role by providing a ranked sequence of answers, which helps in predicting relationships between entities. The concept of position is characterized as free, allowing flexibility in query generation. Additionally, its embedding vector is a specific type of vector that has a broader term, which includes various vectors used in knowledge graph representations. Completeness, an important property in knowledge graphs, ensures that all relevant relationships are accurately represented. The entities satisfying the subject argument of the head predicate, P_t, are categorized under predicates, which are essential for establishing connections between entities. Furthermore, P1 is recognized as a broader term for relations, while the collection of binary adjacency matrices, denoted as {A(Pk) : k \u2208 {1,...,m}}, falls under the broader category of sets. The dataset FB15K SELECTED is a specific type of link predictor used for evaluating algorithms. Vector size, which refers to the dimensionality of vector representations, is classified under parameters. The predicates P1,...,Pm are also broader terms for predicates in the knowledge graph. Link predictors aim to rank a set of entities, such as countries, to identify potential answers to queries. Any question posed in this context is expected to have the correct answer, which is vital for knowledge graph completion. The performance of link predictors is dependent on the initial set of facts, which provides foundational data for predictions. The modified leading-edge link predictor is a variant that enhances the capabilities of link predictors. In the knowledge graph, E represents a broader term for elements, while P_t is categorized under parameters, and P1 is associated with variables. Lastly, TuckER is linked to the broader term Embeddings(), which generates vector representations for entities.",
    "In the realm of knowledge graphs, the sets of entities occurring as subjects and objects of a predicate P are encompassed within the broader category of entities. Similarly, OPSC, a quality measure for evaluating Open Path rules, falls under the broader term of predictive attributes. Queries, which include a relevant query, are also categorized under this broader term. RESCAL embeddings, a specific type of embeddings used for relational data representation, are part of the larger group of embeddings. Additionally, entities that are related to existing entities are incorporated into the graph via predicates, while predicate pairs represent a broader category that includes entities. Hold-out facts, which are essential for model evaluation, are classified under the test set. The notation e_i signifies a specific entity that is part of the broader category of an entity e. TuckER, an embedding-based link prediction algorithm, is classified under embedding-based methods, and each entity e_i is also recognized as an entity. Argument embeddings, which are vector representations of predicate arguments, belong to the broader category of Embeddings(). Furthermore, an entity extant in the knowledge graph is a specific instance of an entity e. Genuinely missing facts can adversely affect the evaluation of precision and recall metrics. YAGO2, a large-scale knowledge base, is characterized as weakly structured. TuckER is also associated with entity embeddings, while each entity e_j is recognized as part of the broader category of entities. Finally, the number of entities is determined by satisfying the conditions set by the second argument position in the context of knowledge graph completion.",
    "The vector v(1)(B) indicates the satisfying entities, which are the distinct entities fulfilling the conditions of a rule in a knowledge graph. In this context, the top prediction has a broader term known as prediction, which refers to estimations about future outcomes based on current data. Additionally, facts, which are individual pieces of information in knowledge graphs, have a broader term of RDF, the standard model for data interchange on the web. The predicate P1(x,z0) is categorized under the broader term predicate, while predicate P1 itself falls under relations, indicating its role in connecting entities. The RLvLR* algorithm is another broader term that encompasses various algorithms used in knowledge graph completion. Variables are represented by z0, which is also a broader term in this context. Furthermore, MinOPHC is a parameter that defines the minimum quality score for Open Path rules, and it is part of a broader category of parameters. A set of entities includes entities that are related to the existing entities, which are subsequently added to this set. In terms of counts, e3 has a count of 1, indicating a unique entity satisfying a specific condition. A relevant query is induced by the body of each rule, which in turn induces a relevant query, highlighting the dynamic relationship between rules and queries. Argument embedding, which refers to the vector representation of arguments in predicates, has a broader term of entity embeddings. The entities e and e' are broader terms under An entity e, emphasizing their roles in knowledge graph tasks. The extension to 6 and P_n are both parameters that expand the capabilities of the algorithms used. The set of all entities encompasses all distinct elements in a knowledge graph, categorized under an entity. Lastly, link predictors vary in performance, reflecting the effectiveness of these algorithms in predicting relationships within the graph.",
    "In the context of knowledge graphs, the predicate P4(z2, z3) has a broader term known as 'predicate', which is a fundamental component that connects entities. The hybrid approach is preferable when utilizing fitness functions to optimize the selection of rules for knowledge graph completion. Each row in an adjacency matrix corresponds to the first argument of a rule, indicating the entities involved. Among these entities, e2 is included, which is a broader term for the general category of entities. Additionally, the concept of irrelevant ones is encompassed within the broader term 'data', highlighting the less useful facts in the graph. Redundant rules are classified under the broader term 'property', indicating their lack of new information. The mathematical set O_p also has a broader term, which is 'an entity', emphasizing its role in the graph structure. The matrix M_1 is related to variables, serving as a broader term for the symbolic placeholders used in logical rules. Prand queries are generated by a bag of predicates, which aids in evaluating the relevance of the queries. The second argument position is another aspect that falls under the broader term 'position', reflecting its significance in rule evaluation. Furthermore, curating tasks often include link prediction, which is essential for enhancing the knowledge graph. The existence of such an answer is contingent upon the correct answer, which is necessary for completing the graph. The product of the entity and predicate embeddings is a broader term for the mathematical operation that combines these representations. Queries are considered true if they correspond to an instance fact in the test data, ensuring their relevance. The plausibility of the fact that e0 is connected to e1 via predicate P1 is a broader term for assessing the likelihood of connections within the graph. Lastly, P_{i+1} and s_e are both broader terms for properties and variables, respectively, while each fact generated by RLvLR is categorized under the broader term 'An entity e', representing the individual predictions made by the algorithm.",
    "The 'maximum rule length of 4' has a broader term known as 'parameters', which encompasses the specific settings used in experiments. In the realm of knowledge graphs, 'entities (x,y)' are a subset of 'entities', representing pairs connected by rules. Initial efforts, referred to as 'preliminary attempts', are directed towards learning 'existential rules'. Interestingly, 'a missing fact' can be identified even when there is 'no pattern' present in the data. Furthermore, 'translation-based embeddings' fall under the broader category of 'learned embeddings', which are essential for capturing semantic meanings. The term 'oracle' is a broader concept that includes 'An entity e', which signifies an object within a knowledge graph. Additionally, 'the embeddings of all the entities at the endpoints' also relate back to 'An entity e', highlighting their role in knowledge representation. The entities 'e2' and 'e3' are part of this broader category as well. Moreover, 'unobserved but intrinsic properties' are crucial features of 'entities' that enhance representation learning. In terms of vector representations, 'argument embeddings' are classified as 'vectors', which are fundamental in natural language processing. The function 'f^i_loc (P_i, P_{i+1})' is a component of 'f_coo (r)', which measures co-occurrence fitness in open path rules. 'Vector embeddings' are a broader term that includes 'embedding', while 'argument embeddings' also relate to 'vectors'. The predicate 'citizenOf' is categorized under 'Knowledge Graphs', illustrating its significance in this domain. The mathematical representation 'vector v(2)(P1)' is another example of 'vectors'. Performance metrics such as '0.98 precision' are a subset of 'precision', indicating the accuracy of generated queries. 'Learned embeddings' are part of 'embedding models', which are vital for knowledge graph completion. The dataset 'FB15K SELECTED' is derived from 'Freebase', serving as a benchmark for evaluating algorithms. Lastly, 'stars' are a broader category that includes 'shapes', reflecting the complexity of rule learning in knowledge graphs.",
    "The baseline query sets have a broader term known as dataset, which refers to structured collections of data. Within this context, a set of entities includes e1, highlighting the specific entities relevant to the knowledge graph. The foundational facts of the graph, denoted as F, are defined as F = {P1(e1,e2), P1(e2,e1), P1(e2,e3), P1(e3,e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}. Furthermore, intriguing challenges for future work remain for future work, indicating ongoing research directions. The parameters, which include P(2)_n, have a broader term that encompasses various settings used in experiments. Predicate embeddings, which are essential for understanding relationships in the graph, also fall under the broader category of embedding. Entities, as a broader term, relate to the concept of a set, while queries that have answers present in the test set are a specific type of queries. The embeddings of all the entities in the argument position are a broader term for embeddings, capturing the vector representations of entities. Additionally, the subject argument of P_t is a broader term for subject, and argument positions include the first argument, which is crucial for defining relationships. Learned embeddings, representing low-dimensional vector representations, are categorized under embedding vectors. The rightmost predicate is a broader term for predicate, and HOLE, an embedding-based link predictor, falls under vector embeddings. The previously selected predicates for FB15KSE are categorized as a dataset, while the learning system parameter is a broader term for a learning system. Lastly, the embeddings of all the entities at the endpoints are classified as embedding vectors.",
    "In the realm of knowledge graphs, the 'tail predicate' has a broader term known as 'predicate', which signifies its role in connecting entities through relational statements. Similarly, 'embeddings' encompass a broader category referred to as 'vectors', which are essential for representing data points in a continuous vector space. The 'RESCAL embeddings' are a specific type of embeddings that fall under the broader umbrella of 'Embeddings()', highlighting their significance in relational data representation. Furthermore, 'training data' is categorized under 'data', emphasizing its role in evaluating link prediction models. The 'latter embeddings' also belong to the broader category of 'embeddings', showcasing their utility in capturing semantic relationships. 'Representation learning methods' are employed for 'link prediction', illustrating their application in predicting relationships between entities. The predicate 'citizenOf' establishes a connection with 'pairs of entities (x,t)', indicating its relational nature. Additionally, 'entities' are a broader term that includes 'object', which represents the second argument in a predicate. The 'product of the predicate embeddings' is a specific instance of 'embedding', summarizing the relationships between predicates. The 'explanatory power of the rule' is a broader concept that encompasses 'explanatory power', reflecting its ability to predict outcomes. 'RESCAL embeddings' also relate to 'embedding-based methods', which utilize vector representations for various tasks. The 'baselines' serve as a broader term for 'the baselines', providing reference points for evaluating methodologies. 'Embeddings' are specifically computed for 'entities', ensuring that their semantic properties are captured. The vector 'P(2)_i' is categorized under 'parameters', indicating its role in knowledge graph completion. 'RESCAL embeddings' further extend to 'entity embeddings', which are crucial for representing entities in a low-dimensional space. The vector 'E_j' is a broader term for 'vectors', mapping entities to a d-dimensional vector space. 'Link prediction systems' are classified under 'algorithm', showcasing their systematic approach to inferring relationships. The entity 'e_2' is a broader term for 'An entity e', representing objects within the knowledge graph. The set 'E= {e1,...,en}' is a broader term for 'the set of all entities', encompassing all distinct elements in the graph. Lastly, 'B' is categorized under 'variables', which are essential for inferring relationships in knowledge graph completion.",
    "In the context of knowledge graphs, the (i, j)th element A(Pk)[i,j] is 0 otherwise indicates the absence of the fact Pk(ei, ej) in the collection of facts F. The last argument of the last body predicate has a broader term known as predicate, which connects entities through defined relationships. Methods, which are systematic approaches to problem-solving, also have a broader term called approach. However, the latter embeddings are considered counter-productive for our purposes, particularly in the context of knowledge graph completion. Entities are those that satisfy the first argument of the first body predicate, while a missing entity is a broader term for an entity e that is not currently represented in the graph. Relevant entities, which are crucial for the graph's completeness, fall under the broader category of entities. The first argument position is defined by the Parameter, which specifies user-defined inputs for rule mining. An object entity e' is a specific type of entity, and both P1,...,Pm and property have broader terms of set and relations, respectively. The number of distinct entities is also categorized under entities, while its embedding representation is a broader term for embedding models. The subject of a predicate is another broader term for entities. The body of each rule can be instantiated, but there may be no fact to fully instantiate the head of the rule, which is essential for knowledge graph completion. Closed (non-existential) rules are a type of Methods, and E_j, representing the vector of an entity, also falls under the broader term entities. A single predicate is categorized under predicate, while TuckER, an embedding-based link prediction algorithm, is a broader term for vector embeddings.",
    "The quality of rule candidates in knowledge graph completion is estimated by a fitness function, which evaluates their effectiveness. In this context, the embedding matrix P(1)_1 is used in the similarity function sim(P(2)_t , P(1)_1) to quantify the relationship between predicate embeddings. The quality measure OPHC is computed with various methods, and it is important to note that the head of the rule satisfies the rule body, establishing a logical connection between them. Additionally, the vector v(1)(B) has a broader term known as vectors, which represent mathematical objects capturing relationships in the graph. Each non-zero element of this vector corresponds to elements that indicate the presence of distinct entities related to the rule's head. The method proposed in RLVLR also falls under the broader category of methods, as does OPHC. Evaluation() in Algorithm 1 is a function that belongs to the broader category of algorithms, which systematically assess the quality of candidate rules. The term 'it' refers to the subject in the context of the YAGO2 knowledge graph. Furthermore, the factual relationship locatedIn(Canberra, Australia) is a fact within knowledge graphs (KGs). Representation learning methods are utilized for link-based clustering, and they include the phase of embedding the entities and predicates, which is essential for effective representation learning. Compositional embeddings represent predicates, while the remaining rules are identified as the final result after evaluation. Argument embedding, which has a broader term of vector embeddings, plays a crucial role in representing the subject and object arguments of predicates. Lastly, the fact Pk(ei, ej) is a logical statement that has a broader term of predicate, and association rule mining is recognized as a type of algorithm.",
    "In the realm of knowledge graphs, a heuristic has a broader term known as an approach, which refers to novel methods for addressing issues such as missing entities. The product of the entity and predicate embeddings is a concept that falls under the broader category of embeddings, which are essential for capturing semantic relationships. Similarly, embedding the entities and predicates also belongs to the embeddings category. The subject and object entities are types of entities that play crucial roles in knowledge graph queries. IncPathFinding is a method that is classified under the broader term Methods, indicating its systematic approach to knowledge graph completion. Its embedding representation is a specific instance of an embedding vector, highlighting the mathematical representation of candidate rules. A pair of entities (e, e') satisfies the conditions set by the body of r, which in turn is satisfied by this pair, illustrating the relational dynamics within the graph. The embedding matrix P(1)_1 is categorized under parameters, which are essential for various computations. Sequential entities are also considered as entities, emphasizing their interconnected nature. Standard confidence is a metric used in major approaches to rule learning, providing a statistical basis for evaluating rules. The mention of 20 random predicates indicates a subset of the broader set of all predicates, which define relationships in the graph. Predicate pairs represent combinations of relationships, further categorized under relationships. The entity e_i is another example of parameters used in the context of open path rules. The quality of generated rules is estimated by a fitness function, which guides the optimization process. The count of five specific entities, represented as 5 ({e_1, e_2, e_3, e_4, e_5}), is also classified under entities. The variable z0 serves as a placeholder for entities in rule structures. Link prediction models are designed to predict relationships about extant entities, which are already recorded in the knowledge graph. Lastly, facts are represented as RDF triples, illustrating the structured relationships between entities.",
    "In the realm of knowledge graphs, 'F' has a broader term known as 'set', which represents a mathematical collection of entities. The individual pieces of information, referred to as 'facts', are encompassed by the broader term 'an RDF triple (e, P, e')', which structures the relationships between entities. Furthermore, 'its predicate and entities' are part of the broader category of 'entities', while 'a chain of predicates in the rule' falls under the broader term 'predicate'. The 'body of r' is denoted by 'body_r', indicating the conditions that must be satisfied for a rule to hold true. Variables such as 'z1' are included in the broader term 'variables', and 'P_1' is categorized under 'parameters'. The method known as 'RESCAL' is identified as a 'compositional-based embedding learner', which is a specific type of embedding-based method. Additionally, 'argument positions' include the 'last argument', and the local co-occurrence fitness function 'f^0_loc' is a part of the broader function 'f_coo (r)'. A subset of '20 randomly selected predicates from FB15KSE' is classified under the broader term 'predicate'. Entities within the graph must satisfy 'both of these conditions' to be valid, and 'embeddings' are defined by the tuple '(P, A)'. The 'hybrid fitness function' is noted for outperforming traditional 'fitness functions', while the modified link predictor 'RLvLR*' has a partial area under the curve (AUC) of '0.23'. The term 'the latter' refers to a fitness function that incorporates both predicate and entity embeddings, and '(P, A)' is a broader term for 'embeddings'. Lastly, the 'compositional-based embedding learner' is a subset of 'embedding-based methods'.",
    "In the context of knowledge graphs, S_p refers to the sets of entities occurring as subjects and objects of a predicate P. The Poker dataset is associated with YAGO2 core, which serves as a comprehensive knowledge base. Predicate pairs have a broader term known as predicates, while the embeddings of all the entities in the argument position are encompassed by the broader term Embeddings(). The query citizenOf(Sam, ?) falls under the category of queries, with Sam being classified as an entity. Additionally, the embedding-based fitness function is a specific type of fitness function, and the embeddings of all the entities in the argument position are also related to embedding-based methods. The predicate locatedIn is a broader term within Knowledge Graphs. Furthermore, e_{n-1} is related to entity e, and the method initializes and extends a set of entities, which is obtained through this method. A vector is a broader term for vectors, and the latter embeddings are also categorized under Embeddings(). The concept of a preference given to those with a higher probability in the KG is related to the broader concept of probability. The fact P_1(e_9, e_7) is classified under predicates, and the embeddings of all the entities in the argument position are also referred to as entity embeddings. Lastly, the probabilistic baseline is a broader term within Methods, and the second argument of the head is categorized under the head.",
    "Experiments are conducted over four benchmark datasets, which include FB15K SELECTED, YAGO2 core, Wikidata, and a synthetic Poker dataset. The Open Path Fitness Function has a broader term known as quality measures, which are essential for evaluating the effectiveness of knowledge graph completion methods. The method initializes a set of entities relevant to a specific target predicate, facilitating the mining of high-quality Open Path rules. In this context, genuinely missing facts will be treated as true, while those that are not genuinely missing will not be classified as such. Additionally, candidates of low quality are encompassed within the broader term quality, indicating their inadequacy for effective knowledge graph completion. Arbitrary queries fall under the broader category of a query, highlighting their lack of relevance. The latter embeddings, which are less effective for certain tasks, are classified under embedding-based methods. An entity e is a specific instance of an entity, and RESCAL computes the relationships between entities. Each predicate P_i is a specific relation that belongs to the broader category of predicates. The outputs of a rule-based link predictor, whose output is modified to produce questions, are also significant in this context. The last argument is associated with the last argument of the last body predicate, which connects entities through a series of predicates. The head of the rule is joined to its body, establishing the conditions for inference. Wikidata is recognized as a multilingual, collaboratively-created knowledge graph, and Figure 1 illustrates the distribution of mined rules, which is further detailed in the same figure. Lastly, the relationship between participant(z, w) and presenter(z, x) indicates that if a TV program has a participant with a specific occupation, the presenter of that program is likely known. The latter embeddings are also categorized under entity embeddings, emphasizing their role in representing entities within the knowledge graph.",
    "The holdback test set has a broader term known as the evaluation method, which refers to a novel embedding-based heuristic function. In the context of knowledge graph completion, z_0 is a logical variable that has a broader term of parameters, which are specific settings used for sampling in experiments. The similarity fitness function, a mathematical function for evaluating rule quality, is categorized under algorithms. Each predicate P_i is represented as a 2D array, specifically the 2D array P_i, which facilitates the computation of relationships between entities. Additionally, P(2)_t is utilized in the similarity function sim(P(2)_t , P(1)_1) to quantify relationships between predicate embeddings. The predicate livesIn is a broader term under Knowledge Graphs, while the probabilistic baseline serves as a reference point within baselines. Various methods have been proposed to construct embeddings, indicating the diversity of approaches in this area. Prand, a baseline query generator, is classified under datasets, and the predicate citizenOf is associated with public Knowledge Graphs. The entities (e, e') satisfy the conditions defined in the body of r, which is crucial for rule-based reasoning. Benchmark KGs are also categorized under datasets, and each row in an adjacency matrix corresponds to each value, representing connections between entities. The fact P_1(e_1, e_2) is a broader term for predicates, while entity e is a broader term for variables used in knowledge graphs. RESCAL embeddings, which represent relational data, fall under the category of vector embeddings. Lastly, the rule-based link predictor is classified as an algorithm, and P(2)_t is also categorized under parameters, while a set of entities includes e2, highlighting the interconnectedness of these concepts.",
    "The quality measure OPSC is computed with various Methods, which encompass systematic approaches for knowledge graph completion. In this context, the (i, j)th element A(Pk)[i,j] is 1 if the fact Pk(ei, ej) holds true, indicating the presence of a relationship between entities ei and ej. Furthermore, e1, which represents an entity involved in a target predicate, has a broader term known as elements, which refers to the individual binary values in the adjacency matrices. OPSC also has a broader term, Methods, highlighting its classification within systematic approaches. The process of embedding the entities and predicates is related to the function Embeddings(), which generates vector representations for these entities and predicates. Additionally, the product of the entity and predicate embeddings, which captures interactions in knowledge graphs, also falls under the broader category of Embeddings(). One entity of the pair is classified under entities, emphasizing its role in relationships within the graph. The novel, efficient vector computation is a significant advancement in vector computation, enhancing the evaluation of rules in knowledge graph completion. Embedding the entities and predicates is a key aspect of embedding-based methods, which utilize vector representations to capture semantic relationships. The instance, representing a specific fact in the knowledge graph, has a broader term, An entity e, indicating its role as an identifier within the graph. Compositional embeddings utilize product calculus to model complex interactions, while the shortest-first order method is a systematic approach within Methods for generating Open Path rules. The set of all entities, denoted as E, encompasses all distinct elements in the knowledge graph. The former, referring to the co-occurrence fitness function, has a broader term, An entity e, as it estimates the quality of rules using entity embeddings. The embedding of entities and predicates is crucial for generating entity embeddings, which are essential for various machine learning tasks. The latent-feature relationship highlights the connections between predicates based on co-occurrence, which is vital for understanding relationships in the graph. Lastly, the test data, a subset of facts related to a target predicate, has a broader term, data, representing the large volumes of information that knowledge graphs are designed to model.",
    "The results of a range of experiments have a broader term known as experiments, which encompass systematic investigations aimed at testing hypotheses. Within this context, S_p, which refers to the set of entities that occur as subjects of a predicate P in a knowledge graph, is categorized under the broader term set. Additionally, the portion designated as 10% for testing is classified as a test set, used for evaluating the performance of algorithms. The entity e3, which is related to another entity e1 through a predicate P_i, falls under the broader category of An entity e. The count of occurrences of an entity e as a subject in relation to a predicate P, denoted as s_e, is defined by the collection of facts, F, which is itself a set of facts represented as RDF triples. Methods introduce a novel method, which is a new approach for estimating the quality of candidate rules, and this novel method is included in the broader category of Methods. The two sets of embeddings, which consist of entity vectors and predicate matrices, are classified under embeddings. Furthermore, facts, which are individual pieces of information in knowledge graphs, are encompassed by the broader term RDF triple. The set of entities, which represents a collection of identifiers within a knowledge graph, is also categorized under set. The tuple (P, A), representing the target predicate P and its associated argument embeddings, is classified under Embeddings() and is part of embedding-based methods. Irrelevant ones, which refer to less probable facts, are included in the broader category of information. Ann, an example entity, is classified under An entity e. Link predictors, which are algorithms used to forecast relationships between entities, fall under the broader term algorithm. The following OP rule states that if an entity x lives in a location z, then x is a citizen of some entity t, represented by the predicate citizenOf(x, t). Lastly, a set of entities is categorized under set, and F is a set of facts that also belongs to the broader category of set. CHAI supplies link predictors, enhancing their performance in knowledge graph completion.",
    "User parameters have a broader term known as parameters, which encompasses various configurable settings. Additionally, a heuristic for mining logical axioms is categorized under the broader term heuristic function. The concept of length also falls under parameters, indicating its relevance in defining the maximum number of components in generated rules. In the context of knowledge graphs, 'y' is a broader term for An entity e, representing the citizenship of another entity. The predicate studiesIn(x, z) is classified under the broader term predicate, which connects entities in the graph. The row index of non-zero elements of v(1)(B) indicates the entities that satisfy specific conditions, and it is also categorized under entities. CHAI focuses attention on the more probable facts, which are crucial for enhancing link prediction tasks. Furthermore, translation-based embeddings are a broader term for embedding, capturing semantic meanings in vector representations. The predicate function P_i(e, e') is classified under relations, establishing connections between entities. The state-of-the-art rule-based link predictor is a broader term for Methods, indicating its systematic approach to knowledge graph completion. The tuple (P, A) represents entity embeddings, while E= {e1,...,en} and the entities are broader terms for An entity e, highlighting their roles in the graph. The entities which satisfy the second argument of P_t also fall under An entity e. The first argument position is categorized under arguments, and distinct entities represent a broader term for set, emphasizing the uniqueness of elements in the graph. Lastly, facts in the form P(e, e') are represented by the expression P(e, e'), illustrating the relationships within the knowledge graph.",
    "In the realm of knowledge graphs, various entities and their relationships are defined through specific predicates. For instance, 'entity e_i' is categorized under the broader term 'an entity', indicating its role as a distinct object or concept within the graph. Similarly, the relationship 'continent(w, y)' is associated with the broader term 'relations', highlighting its significance in connecting countries to their respective continents. The classification of 'false' is noted for incorrectly punishing 'precision and recall', which are crucial metrics in evaluating information retrieval systems. Furthermore, 'the product' is recognized as a broader term for 'product', emphasizing its mathematical operation in knowledge graph representations. The set of facts represented as 'F = {P1(e1,e2), P1(e2,e1), P1(e2,e3), P1(e3,e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}' is classified under the broader term 'set', illustrating the relationships among entities through predicates. The 'first argument' is defined as being of the 'first argument of the first body predicate', which is crucial for evaluating similarity in knowledge graph rules. Additionally, 'the answer to a question in the test set' is a broader term for 'the test set', indicating its relevance in knowledge graph completion tasks. 'Compositional embeddings' fall under the broader category of 'embeddings', which are essential for representing complex interactions. The learning system parameter 't%' is identified as a broader term for itself, signifying its role in selecting top-performing rules. The embeddings of all entities in the argument position are classified under 'vector embeddings', showcasing their representation in a continuous vector space. Relevant relationships are also categorized under 'relationships', emphasizing their importance in knowledge graphs. The predicate 'P1' is recognized as a broader term for 'predicate', while 'object entity' is classified under 'entities'. The answer to a question is categorized under 'questions', illustrating its role in resolving inquiries. Lastly, 'HOLE' is a broader term for 'embedding models', and the 'bag of predicates' is classified under 'predicate', while the 'sequence of ranked entities' is recognized as a broader term for 'An entity e', highlighting the structured nature of knowledge graphs.",
    "The minimum SC has a broader term known as parameters, which are essential for various algorithms. Among these algorithms, the modified leading-edge link predictor is a notable example. In the context of experiments, the experiment itself is a specific instance of broader experiments. The latter embeddings, which are a type of vector embeddings, are also relevant in this domain. Additionally, P(1)^T, a transposed embedding vector, falls under the broader category of matrices. Efficient matrix and vector multiplication is crucial for ensuring scalability in knowledge graph completion tasks. The system CHAI is dependent on an initial set of facts to enhance its performance. In experimental settings, a sample can be considered a broader term for an example. Predicate embeddings, which are a form of vectors, play a significant role in representing relationships. However, building methods are prone to asserting erroneous facts, which can compromise the integrity of knowledge graphs. The first argument in a predicate is used to obtain the vector v(1)(B), which is vital for calculations. HOLE, another embedding-based link predictor, is categorized under embedding vectors. The components of knowledge graphs, including its predicate and entities, are encompassed within the broader term predicate. Furthermore, predicate pairs induce a latent-feature relationship, highlighting the connections between different predicates. The concept of not known is a broader term for known unknowns, emphasizing the gaps in knowledge. In the context of knowledge graph completion, 3 entities ({e_3, e_4, e_5}) represent a broader category of An entity e. The baseline query generator, referred to as Prand, is classified as an algorithm. The predicate locatedIn is associated with public Knowledge Graphs, illustrating geographical relationships. Lastly, P is defined as the set of all predicates, while the max rule length l is a parameter that has a broader term of parameters.",
    "In the realm of knowledge graphs, various predicates and entities interact through defined relationships. For instance, 'predicate P1' and 'livesIn(x, z)' are both classified under the broader term 'predicate', which signifies their role in connecting entities. The 'learning system' is a specialized type of 'algorithm' that optimizes the selection of rules based on their fitness values. Additionally, a 'fact that instantiates the triple at the head of the rule' is a specific instance of a 'triple', which is a fundamental structure in knowledge graphs. Performance metrics are also crucial, as 'weaker performance' is a subset of 'performance', indicating challenges in generating relevant queries. The 'head of the rule' is specifically positioned within 'the second argument position', highlighting its importance in rule evaluation. Furthermore, 'TuckER' is an advanced 'embedding model' that generates embeddings for entities and predicates, while 'RESCAL' is responsible for learning 'the two sets of embeddings' that represent relational data. Each 'entity e' can serve as both a subject and an object of a predicate, illustrating its dual role in relationships. The knowledge graph YAGO2 is noted for its 'weaker performance', which affects its ability to generate queries effectively. The concept of 'length' encompasses 'predictive attributes', which are essential for defining characteristics in datasets. Each 'entity e_i' is a broader category of 'entities', emphasizing the diversity within the graph. The matrix 'B' is equivalent to the result of a specific matrix multiplication, represented as '| 0 0 2 | | 0 2 1 | | 1 0 0 |', which helps identify connections between entities. Relevant questions derived from the graph are often posed to a 'human expert' for insights. The 'product of the entity and predicate embeddings' and the process of 'embedding the entities and predicates' both fall under the broader category of 'vector embeddings', which are crucial for capturing semantic relationships. Lastly, a 'fitness function' is employed to select the 'top t% of rules', ensuring that the most effective rules are retained for further analysis.",
    "In the realm of knowledge graphs, the concept of 'argument embedding' is a specific instance of 'embedding models', which are mathematical constructs that represent objects in a continuous vector space. Similarly, 'These parameters' are a subset of 'parameters' that define optimal settings in the OPRL algorithm. The query 'presidentOf(Obama, ?)' exemplifies a broader category of 'queries' aimed at knowledge graph completion. The set 'Pm' is categorized under 'matrices', which are essential for evaluating candidate rules. Furthermore, 'the two sets of embeddings' fall under 'embedding-based methods', which leverage vector representations for various tasks. Each entity 'e_j' is mapped to a vector 'E_j', illustrating the relationship between entities and their embeddings. The predicate 'livesIn' is a broader term within 'public Knowledge Graphs', indicating the residence of individuals. The measures used for evaluation are computed using an 'adjacency matrix representation', which structures the relationships in the graph. Additionally, 'some topics' are encompassed within the broader category of 'topics', reflecting the varying levels of detail in knowledge representation. The RESCAL model is responsible for computing the 'predicate', linking entities through relational data. The two sets of embeddings also relate to 'entity embeddings', capturing semantic properties. The concept of 'answers for known unknowns' is a broader term for 'known unknowns', addressing gaps in knowledge. 'TuckER' serves as a broader term for 'embedding vector', illustrating its role in link prediction. The baseline query generator 'Prand' is categorized under 'Methods', showcasing systematic approaches in knowledge graph completion. This iterative process, referred to as 'This last step', occurs 'a number of times' to expand the set of related entities. The 'set of all entities' is a broader term for 'entities', representing the distinct elements within the graph. The vector 'v(1)(B)' is classified under 'variables', which are symbolic placeholders in logical rules. In the context of knowledge graphs, 'topics' are a broader term for 'subject', while 'e_{n-1}' represents a specific instance of 'An entity e'. Lastly, the matrices {P_k} are included in the broader category of 'matrices', essential for understanding the interactions within the graph.",
    "RESCAL cannot handle YAGO2, indicating a limitation in its application to this large-scale knowledge base. In the realm of knowledge representation, the co-occurrences of z_0 has a broader term known as co-occurrence, which refers to the statistical measure of simultaneous occurrences of entities. Similarly, the number of distinct entities is encompassed by the broader term count, which quantifies unique entities in a knowledge graph. Logical rules, which define relationships within a logical system, fall under the broader category of rule-based methods. The mathematical collection O_p is related to entities, highlighting its role in representing elements within a knowledge graph. The predicate presidentOf is a specific type of predicate that also has a broader term, indicating its relationship to the general concept of predicates. The entity e2 is categorized under elements, showcasing its role in the structure of the graph. The set of all predicates, represented as P1,...,Pm, is a broader term that encompasses all relational functions in the knowledge graph. Argument embedding, which represents the subject and object arguments of predicates, is a specific instance of the broader concept of embedding vector. The subject entity is a more specific term under the general category of an entity. The parentOf predicate relates to pairs connected via the body, illustrating familial relationships within the graph. The process to predict new facts is a broader term for prediction, which involves estimating future outcomes based on existing data. Facts are inferred by finding an instantiation of the body of the rule, where the body of the rule finds facts through its conditions. Compositional embeddings, which utilize weight matrices for representation, are a broader term for the function Embeddings(). The tuple (P, A) represents a broader concept known as vector embeddings. Prand serves as a baseline query generator, falling under the broader category of baselines. Current link predictors, which are models for predicting missing facts, are a specific type of predictor. The correct answer, which is essential for completing a knowledge graph, is a broader term for An entity e. Lastly, the sequence of entities e_1, ..., e_{n-1} is also categorized under the broader term An entity e, emphasizing their role in satisfying the body of closed path rules.",
    "In the context of knowledge graph completion, the entity 'e_6' has a broader term known as 'An entity e', which represents a fundamental object within the graph. The concept of 'compositional embeddings' is categorized under 'embedding-based methods', indicating its role in representation learning. Furthermore, 'matrix product B' is a specific instance of the broader mathematical operation referred to as 'product'. This paper builds upon 'early explorations', contributing to the ongoing research in the field. The predicate 'citizenOf' is linked to 'pairs connected via the body', highlighting its relational significance. The performance of the Open Path Rule Learning (OPRL) algorithm is quantified by the 'partial area under the curve (AUC)', which is measured at a value of '0.30'. Additionally, 'compositional embeddings' encompass 'entity embeddings', showcasing their hierarchical relationship. The predicate 'P_t' is associated with the broader concept of 'probability', while 'Minimum thresholds' are defined in relation to 'parameters' used in evaluations. The term 'argument embeddings' falls under the category of 'embeddings', emphasizing its importance in capturing semantic relationships. The RESCAL method is utilized to learn 'vectors {e_i}', which represent the embeddings of entities. The notion of 'satisfying entities' is also a broader term for 'An entity e', indicating its relevance in fulfilling rule conditions. The 'object argument' is a specific type of 'arguments', which are essential in the context of knowledge graphs. The query 'citizenOf(Sam, ?)' is a broader representation of 'a query', aimed at uncovering citizenship information. The set of entities 'E' is a broader term for 'An entity e', encompassing all elements within the knowledge graph. The embedding matrix associated with predicates is referred to as 'weight matrices', which are crucial for capturing relationships. The foundational data structure 'F' is identified as 'the set of all predicates', while 'a link predictor' is a broader term for 'predictor', used to estimate missing relationships. Lastly, 'E is the set of entities' is a broader term for 'An entity e', reinforcing the comprehensive nature of the knowledge graph, and 'an entity x' is a broader term for 'an entity', representing subjects whose attributes can be inferred.",
    "Sampling() has a broader term known as Methods, which encompasses various systematic approaches used to achieve specific objectives. The count, which refers to the numerical value representing distinct entities, also has a broader term, count. Existential rules, a type of logical rule, fall under the broader category of logical rules. Algorithm 1, which is an Evaluation() method for assessing candidate rules, is another example of a method. In the realm of experimentation, two sets of experiments are categorized under experiments. The multilingual, collaboratively-created KG, which serves the popular online encyclopedia, is a significant resource for knowledge representation. The method for computing OPSC and OPHC is classified as a method as well. The logical expression locatedIn(z, y) is a broader term for relations that define geographical connections. Latent representations benefit from the use of unobserved but intrinsic properties, highlighting the importance of hidden features in data representation. The number of entities that can instantiate z_0 to satisfy the head part is a broader term for An entity e, emphasizing the role of entities in knowledge graphs. Translation-based embeddings utilize scoring to evaluate the plausibility of facts, while RESCAL is a method that embeds each entity e_j to facilitate relational data representation. The predicate is a broader term for property, indicating the relationships between entities. P_n, which refers to a sequence of predicates, is a broader term for probability, quantifying the likelihood of events. The number of entities is also a broader term for An entity e, reinforcing the significance of entities in knowledge graphs. The redundancy elimination method is categorized under Methods, ensuring no repeated rules in knowledge graph evaluations. RESCAL embeddings, which represent relational data, are a broader term for embedding models. This paper is concerned with answering such questions related to knowledge graph completion. The predicate occupation(w, y) is linked to the presenter(z, x) rule, indicating the relationship between occupations and presenters. Lastly, data is a broader term for weakly-structured data, emphasizing the nature of information managed within knowledge graphs.",
    "The query generation task has a broader term known as query generation, which encompasses the process of creating effective search queries. Within this context, the path of entities and similar entities are both broader terms under the category of an entity e, indicating their connection to the concept of entities in knowledge graphs. Additionally, institute z is classified as an entity, further illustrating the diverse types of entities involved. The RESCAL method embeds each predicate P_i, facilitating the representation of relational data. The answer to a question is a broader term for answers, which are the predicted facts derived from knowledge graphs. Queries, such as presidentOf(?, USA), also fall under this broader category. The row index of non-zero elements of v(1)(B) satisfies the first argument, linking it to the evaluation of candidate rules. Fitness functions are based on the fitness values of rules, which assess the quality of generated rules. Rule learners, a broader term for algorithms, are essential in this process. The entities we need are categorized under an entity e, emphasizing their significance in knowledge graph completion. P_{i+1} is a broader term for parameters, which are crucial in the sampling process. Unstructured sources, including Wikipedia articles, provide valuable data for knowledge graph construction. Quality, which refers to the effectiveness of generated rules, is a broader term for predictive attributes. Wikipedia articles themselves are classified under unstructured sources, highlighting their role in knowledge representation. RESCAL embeddings, a broader term for embedding vectors, represent entities in a low-dimensional space. An object entity e' is categorized under entities, indicating its role in the knowledge graph. The target predicate, P_1, is found within the test data, which is used for evaluating link prediction models. The count of distinct entities satisfying specific conditions is quantified as a count of 2. Lastly, candidates of low quality are identified as a broader term for candidates, which are potential rules generated during the knowledge graph completion process.",
    "In the context of knowledge representation, various entities and their relationships are defined through broader terms. For instance, 'a count of 2' has a broader term known as 'count', which quantifies the number of distinct entities satisfying specific conditions. Similarly, 'SC' and 'e1,...,en' both relate to 'An entity e', indicating their roles within the knowledge graph. The condition 'body_r' also falls under the broader category of 'An entity e'. Furthermore, the 'language of existential rules' is encompassed by 'existential rules', highlighting its foundational role in logical reasoning. The predicate 'P_i(e3, e1)' is classified under the broader term 'predicate', while 'the two sets of embeddings' are categorized as 'vector embeddings', essential for representing entities and relationships. Other entities like 'e_7' and 'the subject and object entities' also relate back to 'An entity e' and 'entities', respectively. The term 'P(2)_n' is associated with 'probability', indicating its significance in evaluating relationships. The concept of 'position' is denoted by '?', serving as a placeholder in queries. Additionally, 'co-occurrence' is a broader term for 'relationships', emphasizing the connections between entities. The vector 'v(1)(B)' is classified under 'vectors', which are crucial for knowledge graph completion. The term 'experiments' is linked to 'Evaluation', reflecting the systematic investigations conducted to assess knowledge graph quality. Moreover, 'entities forming the object argument of the tail predicate, P_n' are categorized under 'An entity e'. The parameter 'd' is integral to the RESCAL method, which is used for learning embeddings. The 'matrix product B' is obtained from the multiplication of adjacency matrices 'A(P1) A(P2) ... A(Pm)', which represent the relationships in the graph. Lastly, the relationship 'presidentOf(Obama, USA)' is classified under 'queries', while 'irrelevant query' is a broader term for 'a query', indicating the nature of questions posed within the knowledge graph.",
    "The concept of '90% for training' has a broader term known as 'the training set', which is crucial in machine learning. In this context, 'its embedding matrix' is a specific type of 'matrices' that represents embeddings associated with predicates. Additionally, the query 'citizenOf(Bronte, ?)' falls under the broader category of 'queries', which are essential for knowledge graph completion. The 'formal quality criteria' serve as a broader term for 'quality measures', ensuring the effectiveness of learned rules. Furthermore, 'argument embeddings' are a subset of 'Embeddings()', capturing the semantic meaning of arguments. The relationship between 'co-occurrence' and 'weight of connections' highlights how statistical measures can reflect the strength of relationships in a knowledge graph. The variable 'l' is categorized under 'parameters', indicating its role in rule generation. The 'body of the rule' is a broader term for 'body', which contains the conditions for rule application. Queries are derived from the 'holdback test set', ensuring that evaluations are conducted on unseen data. The 'number of potential rules generated in PathFinding()' is classified under 'Methods', showcasing the systematic approaches used in knowledge graph completion. The 'set of all predicates' encompasses the broader category of 'predicate', defining relationships between entities. 'Link predictors' can be asked about 'irrelevant queries', which lack valid answers in the knowledge graph. The 'Noisy-OR operator' is noted for its incompatibility with the 'query generation task', indicating limitations in certain contexts. The variable 'ei' is a broader term for 'An entity e', representing entities in the knowledge graph. 'Representation Learning' is a broader term for 'algorithm', emphasizing its role in learning efficient data representations. 'Argument embeddings' also fall under 'embedding-based methods', which utilize vector representations for various tasks. The term 'embeddings' is categorized under 'algorithm', reflecting its foundational role in machine learning. The 'count' is defined as 'the cardinality of this set', quantifying distinct entities that meet specific conditions. Lastly, 'function-free Horn rules' allow for the mining of 'rules with free variables', enhancing the expressiveness of rule learning.",
    "The 'least acceptable OPSC and OPHC scores' has a broader term known as 'parameters', which refers to the specific settings used in experiments. Additionally, 'v(2)(P1)', a vector representing the count of distinct entities, also falls under the broader category of 'parameters'. In the context of knowledge graphs, 'argument embeddings' are derived from and built from 'entity embeddings', which are vector representations capturing semantic properties. Furthermore, 'true' is noted to incorrectly punish 'precision and recall', highlighting the importance of these metrics in evaluating information retrieval systems. The portion '10% for testing' is categorized under 'test and training sets', indicating its role in model evaluation. 'Compositional embeddings', which utilize weight matrices for representation, are a broader term for 'vector embeddings'. 'Sam', an individual in the knowledge graph, is classified under 'entities', while 'PathFinding' is recognized as a broader term for 'algorithm'. The system 'It' is dependent on the 'initial set of facts' to filter information effectively. 'RESCAL', a tensor factorization method, is part of the broader category of 'Representation learning methods'. Quality measures include 'OPHC', which is a specific metric for evaluating Open Path rules. The embeddings of all entities in the argument position are classified under 'embedding models'. The entity 'e_3' is a specific instance of 'An entity e', and a query derived from the hold-out test data is categorized under 'data'. 'OPHC' is also a broader term for 'quality measures', while 'an instance fact in the test data' is a specific type of 'instance fact'. Lastly, the rule 'isCitizenOf(x,y)' is classified under 'relations', emphasizing the connections between entities.",
    "In the realm of knowledge graphs, 'two queries' is a term that encompasses the generation of two distinct queries from a single fact, which is a specific type of 'a query'. The method known as RESCAL, which falls under the broader category of Representation Learning, plays a crucial role in this context. It is responsible for learning and generating 'embeddings', which are mathematical representations of data points. RESCAL not only computes these embeddings but also utilizes them effectively in various applications. The function Embeddings() is integral to this process, as it obtains embeddings that are essential for understanding relationships within the data. Furthermore, RESCAL is recognized for its ability to generate embeddings, which are foundational to many embedding-based methods. In the context of knowledge graphs, 'a number of entities' refers to a collection of entities that relate to a specific predicate, and this concept is a broader term for 'An entity e'. Additionally, 'x and y' are identified as free variables that allow for flexible query generation. Link predictors leverage 'the test data' to forecast relationships between entities, while the data itself is strategically partitioned, with 90% allocated for training purposes. The embeddings derived from these processes are categorized under embedding models, and the embeddings of all the entities in the argument position can be represented as an embedding vector.",
    "In the realm of knowledge graphs, embeddings serve as a broader term encompassing entity embeddings, which are crucial for capturing semantic relationships. Variables, which are symbolic placeholders in logical rules, have parameters as their broader term, indicating their role in inferring relationships. Additionally, unobserved but intrinsic properties relate to properties, highlighting the latent features essential for effective representation learning. The concept of an embedding vector is also a broader term for vectors, emphasizing its mathematical representation of entities. The scoring function f(e0, P1, e1) is calculated using the embedding vector E_0^T, demonstrating the connection between entities and predicates. Satisfying entities e2 and e3 fall under the broader category of an entity e, while the set of entities E is linked to parameters. The similarity function sim is defined in terms of two matrices M_1 and M_2, which are compared to assess their closeness. The predicate P_1 involves the variable e_8, indicating its role in logical expressions. The cardinality of this set is a broader term for set, while a count of 1 signifies a specific condition within the count of entities. The entity e_9 also represents an instance of an entity e. Furthermore, P_1 is associated with probability, linking it to the likelihood of events. The automated link predictor is a type of predictor that generates queries for missing links, while the hybrid approach combines various methods for knowledge graph completion. Embedding the entities and predicates is another aspect of an entity e, as is the product of the entity and predicate embeddings. Lastly, translation-based embeddings utilize additive calculus to represent predicates, and each entity e has its embedding vector, which encapsulates its semantic properties.",
    "In the context of knowledge graphs, 'entity e' is represented by 'its embedding vector', which serves as a crucial identifier. The 'entities satisfying the subject argument of the head predicate, P_t' are broader terms that encompass 'An entity e'. The 'plausibility of a fact' is quantitatively assessed through 'a scoring function', which plays a vital role in evaluating relationships. Among the mathematical constructs, 'M_1' is identified as one of 'two matrices M_1 and M_2', essential for similarity evaluations. The process of 'embedding the entities and predicates' falls under the broader category of 'embedding models', which also includes 'the product of the entity and predicate embeddings'. Furthermore, 'novel, efficient vector computation' and 'a hybrid approach' are both classified under 'Methods', indicating systematic techniques for knowledge graph completion. The scoring function 'f(e0, P1, e1)' specifically involves the entity 'e0', while 'the training set' is a subset of 'dataset' used for training purposes. Additionally, 'learning system parameter' and 'similar parameters' are broader terms that fall under 'parameters', which guide the selection of top candidate rules. The 'building methods' used in constructing knowledge graphs are prone to missing 'some others', highlighting the incompleteness of the knowledge representation. The 'top t% of rules' is another parameter that determines the highest-scoring rules for further analysis. 'Head instances' are also broader terms related to 'An entity e', while 'CHAI' is categorized as an 'algorithm' that enhances link prediction performance. Moreover, 'a heuristic for mining logical axioms' effectively mines 'logical axioms', contributing to the knowledge graph's integrity. The 'product of the predicate embeddings' is a broader term known as 'product', which summarizes relationships in the graph. Finally, 'the answer' is a broader term that refers to 'the answer to a question', essential for completing the knowledge graph, while 'entities that are related to the existing entities' also fall under 'An entity e', expanding the knowledge base.",
    "In the context of knowledge graphs, O_p refers to the sets of entities occurring as subjects and objects of a predicate P, while S_p is defined as the predicate function P_i(e, e'). The relationship citizenOf(x, y) is a specific instance of a broader category known as predicate. Additionally, the final result of a process has a broader term, which is output, indicating the results generated by a rule-based link predictor. The concept of embedding the entities and predicates encompasses the use of embedding vectors, which are mathematical representations capturing the relationships between entities. RESCAL, a method for learning embeddings, falls under the broader category of algorithms. The set of entities is represented by An entity e, and the binary predicate is also classified under the term predicate. The previous approach to knowledge graph rule learning is categorized as Methods, while the variable t is a specific instance of variables used in logical rules. Traditional link prediction, which aims to predict missing relationships, is a subset of prediction. The PathFinding() method is another example of Methods used for generating Open Path rules. Embedding-based methods are techniques that utilize algorithms to capture semantic relationships. The maximum rule length is defined by parameters that set limits on rule components, while a vector e_i \u2208 \u211d^d represents entities in a d-dimensional space, also classified under vectors. MinOPSC and SC are parameters that specify minimum thresholds for quality in rule generation and query confidence, respectively. The tuple (P, A) represents the target predicate and its associated argument embeddings, which are part of the broader category of embedding models. Lastly, the probabilistic-based query generator is a method that generates queries for knowledge graph completion.",
    "Quality measures include OPSC, which is a specific quality measure used to evaluate the performance of Open Path rules in knowledge graph completion. In this context, entities satisfy the second argument of the head, indicating their role in the relationships defined by the rules. RESCAL, a tensor factorization method, has a broader term of Embeddings(), which encompasses various techniques for generating vector representations. The latter embeddings are used in a heuristic function, guiding decision-making processes in optimization problems. The vector E_j is represented in R^d, a d-dimensional real number space, where the object argument of P_n is defined as an object argument, representing the entities involved in the predicate. The collection of binary adjacency matrices, denoted as {A(Pk) : k \u2208 {1,...,m}}, has a broader term of matrices, which are essential in representing relationships in knowledge graphs. Additionally, a heuristic for mining logical axioms falls under the broader category of Methods, while argument embeddings are a subset of vector embeddings, capturing the semantic meaning of arguments. Data, which refers to the large volumes of information in knowledge graphs, has a broader term of dataset. RESCAL also relates to embedding-based methods, which utilize vector representations for various tasks. Existential rule learning is a topic of future research, aimed at enhancing knowledge graph completion. The entity e_i, representing an entity in the graph, has a broader term of entities. The predicate P has a broader term of weight matrices, which define relationships between entities. Query evaluation, crucial for assessing the effectiveness of queries, has a broader term of a query. The set of all predicates, which defines the relationships in a knowledge graph, has a broader term of set. Furthermore, RESCAL is associated with entity embeddings, which are vector representations capturing semantic properties. Lastly, the predicate marriedTo relates pairs connected via the body, indicating the marital relationships between entities.",
    "The website random.org selects 20 random predicates, which are a specific subset of a broader dataset. In the context of knowledge graphs, half of the instances of each predicate can be categorized under instances, while benchmark solutions are considered a type of solution. The entity e1 is a broader term for An entity e, and entity embeddings fall under the category of embedding-based methods. The relationship presidentOf(Obama, USA) is classified within Knowledge Graphs, and the quality estimation function is a type of quality measure. Link predictors evaluate their prediction performance, while the CHAI system discards irrelevant ones to enhance the accuracy of predictions. The relation isBornIn(x,z) is a broader term for relations, and unstructured sources include Wikipedia as a key resource. The components of its predicate and entities are part of embedded representations, and The count is synonymous with the cardinality of this set. A heuristic for mining logical axioms is a broader term for heuristic methods, and a fact is defined by a scoring function that assesses its plausibility. The adjacency matrix sums the entities represented in the graph, and the relevancy of a question is determined based on test facts. Lastly, P_2 is a broader term for parameters, and vector embeddings are a type of embeddings used in various applications.",
    "The relationship 'highestPoint(z, x)' is derived from the rule 'country\u207b\u00b9(z, w)', indicating that if a region is known to belong to a country, then its highest point is likely also known. Conversely, 'country\u207b\u00b9(z, w)' implies that the highest point of the region is represented by 'highestPoint(z, x)'. In the context of knowledge graphs, 'Evaluation()' and 'Evaluate()' are both broader terms under 'Methods', which encompass systematic approaches for assessing the quality of candidate rules. The predicate 'parentOf' also falls under the broader category of 'relations', which includes various familial connections. A factual statement, 'livesIn(Bronte, Canberra)', is recorded within knowledge graphs (KGs), illustrating the residence of an individual. Additionally, 'the product of the predicate embeddings' serves as a low-dimensional representation, summarizing relationships between predicates. The term 'non-zero elements in v(1)(B)' is a broader concept that includes 'elements', indicating the presence of satisfying entities in knowledge graph rules. The query 'presidentOf(Celine Dion, ?)' highlights the challenges in generating meaningful queries for link prediction. The 'training set' is a subset of data used for training, which is distinct from the 'test set' used for evaluation. Lastly, 'this paper' focuses on the importance of 'asking relevant questions' to uncover missing facts in knowledge graphs.",
    "In the context of knowledge graphs, various entities and their relationships can be described through a series of triples. For instance, the predicate P_k has a broader term known as matrices, which are essential mathematical constructs. Similarly, O_p is categorized under the broader term set, indicating its role as a collection of elements. The relational predicate citizenOf also falls under the broader category of relations, highlighting its significance in defining citizenship status. Furthermore, E_0^T, which represents an embedding vector, is classified as a matrix, reinforcing the connection between embeddings and matrices. The predicate P is associated with parameters, indicating the specific settings used in knowledge graph methodologies. The head of a rule to its body is a concept that encompasses the broader term head, which is crucial in rule-based systems. Additionally, the scoring function f(e0, P1, e1) involves the entity e1, showcasing the interaction between entities and predicates. The product of the predicate embeddings is categorized under embeddings, emphasizing its role in capturing relationships. The binary adjacency matrix A(Pk) is also classified as a matrix, further illustrating the mathematical foundations of knowledge graphs. A scoring function operates over its predicate and entities, highlighting the evaluative nature of these constructs. The entity e is recognized as having a broader term elements, which are the individual components within the graph. Moreover, three baseline query sets are classified under baselines, serving as comparative benchmarks. The transposed embedding vector P(1)^T is associated with probability, indicating its role in evaluating the likelihood of facts. Representation learning methods are utilized for entity resolution, demonstrating their application in merging records. The two sets of embeddings are categorized under embedding models, which are crucial for representing entities and predicates. The pair of entities (e, e') is recognized as a broader term for An entity e, emphasizing its role in evaluating relationships. The method for computing OPSC and OPHC illustrates an example of systematic approaches in knowledge graph evaluation. The hybrid fitness function is classified under Methods, showcasing its innovative approach to optimizing rule quality. Lastly, two baselines are recognized as part of the broader category of baselines, providing reference points for evaluating methodologies. Rule learners, which generate rules from data, are classified under the broader term learner, indicating their role in machine learning.",
    "In the context of knowledge graphs, various entities and their relationships are defined through specific predicates. For instance, 'elements having a non-zero value' has a broader term 'elements', which refers to the individual binary values within adjacency matrices. Additionally, 'translation-based embeddings' represent the predicate, and they are also classified as 'compositional embeddings'. The logical construct 'inverse P_i^-1' is utilized within the 'PathFinding()' method, which is essential for generating Open Path rules. The concept of 'the top prediction' is a broader term for 'prediction', indicating the most confident query generated for knowledge graph completion. Furthermore, 'highestPoint' is categorized under 'relations', while 'S_p', 'YAGO2', 'A pair of entities (e, e')', and 'a satisfying entity' all fall under the broader category of 'An entity e'. The relationship 'presidentOf(Obama, USA)' is recognized as a fact, and 'locatedIn(z, y)' is classified under 'relationships'. The 'set of entities' and 'subject entity' are both broader terms for 'An entity e' and 'entities', respectively. The process of 'rule learning' is a method that encompasses various techniques, while 'citizenOf(Ann, ?)' represents a query seeking to identify Ann's country of citizenship. The 'extension to 6' parameter allows for increased rule length in mining processes, and 'a set of entities' is another broader term for 'An entity e'. Lastly, 'entities' are found by employing 'pairwise multiplication', which is a mathematical operation crucial for knowledge graph analysis.",
    "In the context of knowledge graphs, the 'row index of non-zero elements of v(2)(P1)' has a broader term that encompasses 'An entity e', indicating that it represents a specific instance of an entity. Similarly, 'matrix and vector operations' are related to 'vectors', which are fundamental in various mathematical computations. The parameter 'd' is crucial as it is a parameter to 'the learner', which is responsible for determining the dimensionality of the latent feature space. The variable 'e_8' also falls under the broader category of 'an entity', highlighting its role as an instance within a logical framework. The dataset 'Poker' is classified under 'An entity e', serving as a synthetic representation of poker hands. Furthermore, 'compositional embeddings' are a type of 'embedding models', showcasing their role in representing complex relationships. The 'Noisy-OR operator' is categorized under 'algorithm', reflecting its probabilistic nature in aggregating independent causes. The variable 'x' is a broader term for 'free variables', which are essential in logical expressions. 'Vector embeddings' are linked to 'Embeddings()', indicating their function in generating vector representations. The logical expression 'locatedIn(z, y)' is a broader term for 'predicate', defining spatial relationships. The method 'RESCAL' is associated with 'vector embeddings', emphasizing its role in learning relational data. The 'function A' is defined as 'the function A' and also as 'A(Pk)[i,j]', which represents adjacency matrices in knowledge graphs. 'Vector embeddings' further relate to 'embedding-based methods', which utilize these representations for various tasks. 'Hold-out facts' are necessary for 'query evaluation', ensuring the effectiveness of model assessments. Additionally, 'compositional embeddings' are broader than 'embedding vector', indicating their complexity. The 'hybrid setting' involves and utilizes 'fitness function', which is crucial for optimizing solutions. Lastly, 'predicate embeddings' are a broader term for 'Embeddings()', capturing the semantic meaning of predicates, while 'the sets of entities occurring as subjects and objects of P' also fall under 'An entity e', illustrating the interconnectedness of entities within knowledge graphs.",
    "In the realm of knowledge graphs, 'an entity x' is recognized as having a broader term, which is 'entities'. Similarly, 'Evaluate' falls under the broader category of 'Methods'. The concept of 'vector embeddings' is a subset of 'entity embeddings', highlighting the hierarchical relationship between these representations. The 'quality of each rule' is computed by employing 'matrix and vector operations', which are essential for assessing the effectiveness of candidate rules. Furthermore, 'predicate pairs' are categorized under 'An entity e', indicating their role in the graph. This short paper contributes to the academic discourse by being classified as a 'paper'. The 'Methods' are crucial for checking the 'satisfiability of body atoms of all candidate rules', ensuring that the rules can be effectively applied. 'Predicate embeddings' are also a broader term that encompasses 'embedding-based methods', illustrating their interconnectedness. In the context of variables, 'y' is identified as a broader term for 'free variables', while 'variables' themselves are quantified by 'universal quantification'. The matrix representation 'A(Pk)' consists of 'binary values', which are fundamental in computational contexts. 'Our second set of experiments' is part of a larger category of 'experiments', aimed at evaluating various hypotheses. A 'human expert' is classified under 'an entity', emphasizing the expertise involved in knowledge graph analysis. Some topics within this domain are noted to be 'more richly covered', indicating disparities in the depth of information available. The 'prediction performance' is a broader term that relates to 'performance', reflecting the effectiveness of models in making accurate predictions. The 'final result' of evaluations leads to 'outputs', which are the results generated from the experiments. Additionally, 'predicate embeddings' are recognized as a broader term for 'entity embeddings', while 'each entity e_j' is categorized under 'An entity e', reinforcing the structure of the knowledge graph. Lastly, 'the subject and object arguments of a predicate P' are encompassed within the broader term 'arguments', highlighting their role in the relationships defined in the graph.",
    "Fitness functions are derived from embeddings, which serve as mathematical representations in various optimization problems. In the context of rule-based systems, the head of a rule to its body has a broader term known as the body, which contains predicates and variables essential for inference. The variable e_8 is an instance that can satisfy certain conditions, indicating its broader term as an instance. The training set, a subset of data used for training, has a broader term referred to as training data. Methods are employed to estimate the quality of each candidate rule, ensuring effective rule selection. An object entity e' is a specific identifier that has a broader term, object, representing entities acted upon in relational statements. The product of the predicate embeddings, which captures latent features of predicates, has broader terms including Embeddings() and embedding-based methods. The adjacency matrices A(P1) and A(P2) are equal, indicating a direct relationship between the two predicates. In knowledge graphs, the top-ranked answers provided by link predictors are not considered significant if they do not meet relevance criteria. The predicate locatedIn has a broader term, relations, which encompasses various geographical relationships. The entity e2 is a broader term for An entity e, representing identifiable objects within the graph. Additionally, locatedIn(e', e') is a predicate that indicates spatial relationships. The product of the predicate embeddings also has a broader term, entity embeddings, which are crucial for capturing semantic properties. The statistical measure SC achieves a False Positive Rate, indicating the performance of query generation. Furthermore, predicates are represented as weight matrices, which define relationships in machine learning. Lastly, this short paper discusses future research directions, highlighting the ongoing exploration in the field.",
    "In the realm of knowledge graphs, the predicate 'citizenOf(x, t)' has a broader term known as 'relations', which encompasses various intrinsic properties and connections between entities. Similarly, the subject and object entities are linked to the broader term 'object', while any predicate in the test set is categorized under 'predicate'. A scoring function operates over and on embedded representations, which are crucial for evaluating the plausibility of facts within the graph. Link predictors are provided with a query derived from the hold-out test data, enabling them to forecast relationships between entities. The term 'entities (x,y)' is a broader classification that includes 'An entity e', highlighting the connection between pairs of entities. Additionally, the row index of non-zero elements of v(2)(P1) satisfies the second argument of the head, demonstrating the structural relationships in the graph. The entity 'e1' is also classified under 'matrices', which are essential for various computations. Training data serves as a broader term for 'data', emphasizing its role in machine learning. The matrix '| 0 0 2 | | 0 2 1 | | 1 0 0 |' is another example of a broader term under 'matrices', representing the results of matrix operations in knowledge graph evaluation. Compositional embeddings utilize weight matrices to model complex interactions, while the modified link predictor 'RLvLR*' falls under the broader category of 'Methods'. The predicate 'livesIn' is also categorized under 'relations', and the rule-based link predictor is a specific type of 'predictor'. The subject and object entities are further defined by their roles as 'subject', and the open-ended query 'citizenOf(Ann, ?)' is classified under 'predicate'. Lastly, the learner is a broader term for 'algorithm', and a matrix of binary values is classified under 'matrices', illustrating the structural representation of knowledge graphs.",
    "In the realm of knowledge representation, various concepts are interconnected through broader terms and specific relationships. For instance, 'subject and object arguments' has a broader term known as 'arguments', which encompasses the entities associated with predicates. Additionally, 'The number of entities' satisfies the condition of 'the first argument position', indicating its relevance in the context of argument placement. 'Rule learning methods' fall under the broader category of 'Methods', which includes systematic approaches to problem-solving. The relationship between 'test and training sets' is also defined, where the former is a broader term for 'the training set'. Furthermore, 'argument embeddings' are a subset of 'embedding models', illustrating the hierarchical nature of these concepts. The relation 'isCitizenOf' is categorized under 'relations', while 'fitness function' and 'sampling algorithm' are both broader terms for 'algorithm'. The 'first argument position' is related to 'position', and 'locatedIn(Canberra, Australia)' is classified as a type of 'facts'. The 'first argument' is associated with 'parameters', and the local co-occurrence fitness function 'f^i_loc' is utilized in the computation of 'f^i_loc (P_i, P_{i+1})'. The 'test set' is a broader term for 'the test set', and the integer 'd' specifies 'the dimensionality of the latent feature space'. Moreover, 'link predictors' are a broader category that includes 'predictor', while 'argument embeddings' relate to 'embedding vector'. 'Translation-based embeddings' are classified under 'embeddings', and the matrix 'P_k' is a broader term for 'matrices'. Lastly, the effectiveness of 'the utility of our fitness functions' is recognized as a broader term for 'fitness function'.",
    "In the context of knowledge graphs, relevant entities have a broader term known as An entity e, which serves as a fundamental identifier for objects within the graph. Embeddings, which are mathematical representations of data points, also fall under the broader category of embedding models. The entities within the graph are assigned through a process called random selection, ensuring a diverse representation. Furthermore, the number of distinct entities is encompassed by the term An entity e, highlighting the uniqueness of each entity. The subject of a relationship is similarly classified under An entity e. Predicate embeddings, which capture the semantic meaning of relationships, are a subset of vector embeddings. The vector representation E_j is another instance of An entity e, illustrating the mapping of entities in a d-dimensional space. The fact that Ann is a citizen of Australia is categorized under queries, indicating its relevance in information retrieval. The validity of our test set is linked to the broader concept of a test set, emphasizing the importance of reliable data in evaluations. Countries, as distinct territorial entities, are also classified under the broader term an entity. Additionally, embeddings are related to embedding vectors, which serve as their mathematical representations. Free variables, which are not bound by quantifiers, are a broader category that includes variables. The product of predicate embeddings is a representation that falls under vector embeddings, summarizing relationships in a low-dimensional space. A matrix of binary values, which indicates the presence or absence of facts, is a specific instance of binary values. The predicate marriedTo signifies a marital relationship and is categorized under relations. Entities serve as identifiers for objects such as places or people, further illustrating their role in the graph. The variable z0 is another representation of An entity e, used in rule structures. The term its predicate and entities also falls under An entity e, emphasizing the connections between predicates and their associated entities. Extant entities, which are already recorded in the graph, are classified under An entity e. Lastly, FB15KSE is recognized as a benchmark dataset, which is a broader term for dataset, used in evaluating knowledge graph completion tasks.",
    "The vector size is set to 100, which is significant in various computational models. The RLvLR* method has a partial area under the curve (AUC) that indicates its performance in link prediction tasks. In this context, the scoring function f(e0, P1, e1) involves the predicate P1, which is crucial for evaluating the plausibility of connections between entities. Additionally, a copy dated December 2014 was provided in the AMIE+ system, which is a tool for knowledge extraction. Association rule mining is a technique that has a broader term known as Methods, which also encompasses the compositional-based embedding learner. This learner is essential for knowledge graph completion tasks. Furthermore, a fact is defined as an RDF triple (e, P, e'), representing relationships between entities. The scoring function specifies the plausibility of the fact that e0 is connected to e1 via predicate P1. Function-free Horn rules are a subset of logical rules, while e_8 is categorized under variables. The local co-occurrence fitness function f^i_loc (P_i, P_{i+1}) is equal to the similarity function sim(P(2)_t , P(1)_1), which measures the relationship between predicate embeddings. The adjacency matrix can be transposed to obtain the vector v(2)(P1), which represents the distinct entities related to the predicate P1. The body of each rule has a broader term known as the body of the rule. The relationship presidentOf(Obama, USA) falls under the broader category of facts. The dataset FB15K SELECTED is also a broader term for datasets used in knowledge graph evaluations. In this framework, the object is defined as the second argument of any predicate in the test set. Instances in this context have a broader term referred to as examples, while the initial set of facts is categorized under datasets. Lastly, the entity place is a broader term for objects, indicating specific locations.",
    "Link prediction is a specialized area within the broader concept of prediction, focusing on forecasting relationships between entities. It is categorized under methods that utilize various techniques to analyze data. One such technique involves translation-based embeddings, which are a subset of embedding-based methods that leverage the semantic meaning captured through translations. These embeddings are generated by the function Embeddings(), which is essential for creating entity embeddings that represent the relationships between entities in a continuous vector space. The predicate citizenOf is an example of a relationship that defines citizenship status, while parentOf and parentOf(z,y) illustrate familial connections within the realm of predicates. Additionally, the dimensionality of the latent feature space in methods like RESCAL is denoted by the integer d, which is part of the parameters used in these models. The RESCAL method itself is a type of embedding model that facilitates the learning of embeddings for relational data. Furthermore, the liveIn predicate indicates residency relationships, and the multilingual, collaboratively-created KG manages factual information, providing a rich context for queries. A relevant query is a specific type of query that has answers present in the test set, highlighting the importance of understanding the subject of any predicate in the test set.",
    "Freebase has a broader term known as dataset, which is also applicable to YAGO2. In the realm of knowledge graphs, the predicate citizenOf has a broader term that is simply referred to as predicate. When comparing structural constraints to relational databases, it is noted that structural constraints are few compared to relational databases. Methods play a crucial role as they compute the quality of each rule, which is essential for evaluating the effectiveness of knowledge graph completion. The subject and object entities are freed from the constraints of the object entity, allowing for more flexible relationships. Furthermore, entity embeddings encompass a broader term called embedding vector, while an identifier for an object is a broader term for object. The concept of one correct answer is a broader term for the answer to a question, emphasizing the specificity of responses in knowledge graph queries. Fitness functions include co-occurrence, which itself has a broader term within the context of fitness functions. The number of entities is joined to the head of a rule to its body, indicating the structural relationships within the graph. The relevancy of a question is based on the test facts, which are crucial for determining the significance of queries. Additionally, hold-out facts represent a broader term for the test set, used for evaluating model performance. In terms of relationships, e_8 is related to e_7, showcasing the connections between entities. The logical expression livesIn(x, z) has a broader term known as relationships, further illustrating the nature of entity associations. Lastly, YAGO2 core also has a broader term of dataset, and O_p is defined by the predicate function P_i(e, e'), establishing the relationships between entities in a mathematical context.",
    "Factual information has a broader term known as data, which encompasses various forms of information. In the realm of methodologies, a rule-based link predictor is categorized under the broader term Methods, indicating its systematic approach to predicting relationships. The concept of P(1) is associated with probability, highlighting its role in quantifying likelihoods. The relationship between highestPoint(z, x) and continent(w, y) is significant, as the former is derived from the latter, establishing a connection where knowledge of a continent can lead to insights about the highest point within it. Additionally, Poker, a synthetic dataset, falls under the broader category of datasets, while the predicate highestPoint is also recognized as a broader term for the concept of predicates. Test data, which is essential for evaluating models, is classified under data, and a query with an answer present in the test set is a subset of the broader test set. The expression A(P1) A(P2) ... A(Pm) is related to matrices, indicating its mathematical foundation. Furthermore, P1 is a broader term for parameters, and heuristic functions are encompassed within algorithms. The loss function is defined over the product of the entity and predicate embeddings, illustrating its application in optimization. The row index of non-zero elements of v(1)(B) is a broader term for an entity e, while the fact that Ann is a citizen of Australia is categorized under Knowledge Graphs. The answer facts are related to the broader concept of the answer to a question, and queries that can be answered from the training set are linked to both training and the training set itself. Lastly, the relationship livesIn(x, z) is classified under predicates, emphasizing its role in knowledge representation.",
    "The local co-occurrence fitness function f^0_loc is defined by the similarity function sim(P(2)_t , P(1)_1), which quantifies the relationship between the predicate embeddings of two predicates in an open path rule. This function is equivalent to f^0_loc, indicating a direct relationship between them. In the context of knowledge graphs, a low-dimensional vector space contains latent, unnamed features that represent intrinsic properties of entities and predicates. The object entity is a broader term for an entity e, which refers to any identifiable object within the graph. Additionally, the predicate P_2 is associated with the broader concept of probability, while P1 relates to matrices. A query with an answer present in the test set is a specific type of query, which is a broader category that includes all queries. The subject entity, which identifies the subject in a relationship, is also a broader term for the subject itself. Link predictors, which are methods used to forecast relationships between entities, fall under the broader category of Methods. The count of occurrences of an entity as a subject, denoted as s_e, is related to the broader term parameters. The entity e_8 is classified under the broader term entities, while the predicate locatedIn is a type of relationship. The synthetic dataset Poker serves as a complete knowledge graph for experimental purposes and is categorized as a synthetic dataset. Various methods developed for knowledge graph completion are encompassed within the broader term Methods. Translation-based embeddings, which capture semantic meanings, are a subset of vector embeddings. The 2D array P_i is represented within the mathematical structure R^(d\u00d7d). Bronte, an individual living in Canberra, Australia, is classified under the broader term an entity. The learner, responsible for determining the dimensionality of the latent feature space, is a specific type of learner. Finally, the similarity function sim is a broader term for the mathematical function that quantifies similarity between matrices.",
    "In the realm of knowledge representation, vector embeddings have a broader term known as embedding models, which are essential for capturing semantic relationships. Similarly, the matrix product B and M_1 are both encompassed within the broader category of matrices, which serve as fundamental structures in mathematical computations. The set of real numbers, denoted as \u211d, is a subset of the broader mathematical concept of sets. In the context of relationships, the predicate marriedTo(x,z) falls under the broader classification of predicates, just as the similarity function is categorized under algorithms. The fact that Bronte is a citizen of Australia is inferred from knowledge graphs (KGs), while the concept of half of the instances of each predicate also belongs to the broader category of predicates. Predicate embeddings, which are crucial for understanding relationships, are included within embedding models. The predicate locatedIn is another example of a broader term within the category of predicates. Each entity e_i is a specific instance that falls under the broader definition of an entity e, which itself is a type of entity. Human experts, who possess specialized knowledge, are classified under the broader term entities. The mathematical representation of the set of real numbers is also a part of the broader set category. Vector embeddings can be seen as a specific type of embedding vector, while the variables x and y are broader terms that include free variable y. The predicate livesIn is categorized under relationships, and the modified leading-edge link predictor is a specific instance of the broader category of methods. Lastly, the citizenship of Ann in Australia is classified as a fact, while the predicate citizenOf(x, t) is another example of a broader predicate.",
    "The hold-out test data has a broader term known as data, which encompasses various forms of information. Within this context, two matrices M_1 and M_2 are categorized under the broader term matrices, indicating their mathematical significance. The test set, which is crucial for evaluating model performance, falls under the broader category of test and training sets. Predicate embeddings, essential for capturing semantic meanings, are also a subset of embedding vectors. Furthermore, the set of all entities includes An entity e, highlighting the diverse elements represented in knowledge graphs. The product of the predicate embeddings is classified under embedding models, showcasing its role in summarizing relationships. O_p, another entity, is similarly categorized under An entity e. Additionally, entity e is represented by an embedding vector, emphasizing the connection between entities and their mathematical representations. The concept of occupation is a broader term that relates to relations, while the predicate livesIn signifies a broader category of predicates. In logical rules, head variables occur in the body of the rule, which defines the conditions for inference. The similarity function sim, which quantifies similarity, is a specific instance of a broader similarity scoring function. The validity of our test set is crucial and falls under test and training sets, ensuring reliable evaluations. Queries that can be answered from the training set are encompassed within the broader category of training data. The query citizenOf(Sam, ?) represents a specific inquiry, classified under a query. Entity x is a broader term for variables, which are essential in logical reasoning. An efficient method introduced in the paper is categorized under Methods, indicating its systematic approach. The relation isCitizenOf is a broader term for predicates, while studiesIn(Sam, ANU) represents a specific instantiation of a rule.",
    "The region (z) is known to be located in the country (w), establishing a geographical relationship between the two entities. In the realm of knowledge graphs, relevant questions are provided by human experimenters, who play a crucial role in generating inquiries that help uncover missing information. The correct answer is a broader term that encompasses the answer to a question, highlighting the relationship between these concepts. Additionally, B, which represents the result of a matrix product, has a broader term in matrices, indicating its mathematical foundation. The predictor, as a forecasting model, also has a broader term in algorithm, showcasing its role in computational methods. The benchmark dataset FB15KSE is associated with test and training sets, which are essential for evaluating knowledge graph completion tasks. Furthermore, entities within the graph possess intrinsic properties that define their characteristics. The subject argument is a specific type of argument, which is part of a broader category known as arguments. The method, which refers to a process for extending knowledge graphs, is categorized under Methods. Each entity e_i is represented in a latent space by a vector e_i \u2208 \u211d^d, facilitating their embedding in the graph. Objects in the graph are assigned through random selection, ensuring a diverse representation. The predicate locatedIn relates to pairs of entities (x,y), emphasizing the connections defined by geographical relationships. The perspective of the predicates is a broader term that encompasses the concept of predicates themselves. Embedding models compute a fitness function, which evaluates the quality of solutions in optimization problems. An object entity e' is a specific identifier within the graph, and it has a broader term in An entity e, illustrating the hierarchical structure of entities. Lastly, the embedding matrix serves as a broader term for matrices, reinforcing its role in representing entities in a continuous vector space.",
    "In the realm of knowledge graphs, the predicate 'marriedTo' is a specific type of relationship that falls under the broader category of predicates. Each predicate, including 'marriedTo', is associated with an object argument, which represents the entity affected by the action. The test data is utilized to evaluate the prediction performance of models, ensuring their effectiveness in inferring relationships. Various methods, such as early pruning, are employed to optimize the learning process. Countries, as entities, represent distinct territorial units and are categorized under the broader term of entities. An object, which can be a place or a person, is also a broader term that encompasses specific instances. The adjacency matrix A(P1) is another broader term that relates to matrices, indicating the presence or absence of relationships between entities. Participants in a knowledge graph are identified as entities, and irrelevant queries, such as 'presidentOf(Celine Dion, ?)', illustrate the challenges in generating meaningful queries. In contrast, relevant queries like 'presidentOf(Obama, ?)' are essential for identifying missing facts. The subject entity is inherently related to the object entity, forming the basis of relational statements. The learner specifies the dimensionality of the latent feature space, which is crucial for representation learning. The target predicate P_1 is integral to the test data, guiding the inference process. Properties in knowledge graphs have broader terms, such as predictive attributes, which describe the characteristics of entities. The USA, as a sovereign entity, also falls under the broader category of entities. Answers for known unknowns represent the predicted missing facts, while factual information serves as the foundation for knowledge representation. The inverse relationship of predicates is captured by constructs like inverse P_i^-1. Lastly, the relationship 'spouse(z, y)' is used to infer the place of birth of an individual based on their spouse's known attributes.",
    "In the context of knowledge graphs, 'entity e' has a broader term known as 'parameters', which refers to the specific settings used in experiments. The 'head predicate' shares a relationship with 'the body', indicating how predicates link variables in logical constructs. The relationship 'presidentOf(Obama, USA)' is categorized under the broader term 'relations', which encompasses various connections between entities. Additionally, 'a place or a person' is a broader term for 'place', highlighting the distinction between geographical locations and individuals. The relation 'isCitizenOf' connects to 'entities (x,y)', representing the citizenship status of individuals. Furthermore, 'Sam' is identified as a broader term for 'An entity e', illustrating his role as a person within the knowledge graph. 'Hold-out facts' are included under 'test and training sets', which are essential for evaluating model performance. The term 'entity x' is a broader category for 'entities', emphasizing the individual nature of entities in the graph. The 'similarity scoring function' is a specific type of 'a scoring function', used to evaluate the similarity between entities. The concept of 'work in the literature' is encompassed by 'literature', which discusses previous research in the field. The parameter 't%' is also a broader term for 'parameters', indicating its role in rule selection. The predicate 'liveIn' is categorized under 'predicate', defining the relationship of residence. The 'set of entities' includes 'countries', which are recognized as distinct territorial entities. 'Vector multiplication' is a component of 'matrix and vector multiplication', illustrating mathematical operations in linear algebra. The authors of the research are a broader term for 'authors', who contribute to academic works. 'Representation learning methods' fall under the broader category of 'Methods', which includes various systematic approaches. The structured representation of relationships is captured in 'an RDF triple (e, P, e')', which is a broader term for 'RDF'. Lastly, 'Representation Learning' is classified under 'Methods', emphasizing its significance in machine learning. The answer to a question in the test set is a broader term for 'test set', indicating its relevance in knowledge graph completion, while 'embeddings' are also categorized under 'Methods', showcasing their role in capturing semantic relationships.",
    "Translation-based embeddings are a specific type of embedding models that capture semantic meanings through translations. They are also related to embedding vectors, which serve as mathematical representations in vector space. In optimization contexts, a fitness function is utilized to improve scalability, ensuring systems can handle increased workloads effectively. The concept of P_i^-1, which is a broader term for predicates, plays a crucial role in defining relationships within knowledge graphs. PathFinding, a method for determining routes, falls under the broader category of Methods. In the realm of knowledge representation, the variable x is a broader term for the free variable y, indicating its role in logical expressions. The proportion of the inferred head instances is a measure that relates to the broader concept of proportion, reflecting the reliability of rules in knowledge graphs. Additionally, the matrix product is derived from the adjacency matrices A(P1) A(P2) ... A(Pm), which are essential for computing relationships between entities. Scoring functions, which evaluate data quality, are a subset of algorithms. Queries such as presidentOf(Obama, ?) and citizenOf(Bronte, ?) exemplify the need for knowledge graph completion, with the latter being a specific instance of the broader category of facts. The relationship between head predicates and bodies indicates a significant overlap in the information they share. Argument embeddings are linked to object arguments, highlighting their role in natural language processing. Lastly, a set of entities (countries) is a broader term encompassing all countries, while the term spouse refers to an entity involved in a legal partnership.",
    "In the context of knowledge graphs, the mathematical operation 'max' has a broader term known as 'Methods', which encompasses systematic approaches including algorithms. The subject entity is connected to the binary predicate, illustrating the relationship between entities. A specific fact, 'livesIn(Bronte, Canberra)', also falls under the broader category of facts. Furthermore, 'Methods' includes various algorithms, such as RESCAL and Embeddings(), which are essential for processing relational data. The similarity function sim is defined by the Frobenius norm, which quantifies the similarity between matrices. Additionally, non-zero elements are part of the broader category of elements, indicating significant characteristics within the data. The rule body is positioned in the first argument position, contributing to the structure of rules in knowledge graph completion. The similarity fitness function is a type of quality measure that evaluates the effectiveness of these rules. In the realm of media, a TV program is classified as an entity, while link predictors utilize queries derived from hold-out test data to forecast relationships. The proportion of facts satisfying the head of a rule is a broader concept of proportion, and RDF triples are part of the RDF framework. The matrix product B is a broader term for the matrix product, which is crucial in linear algebra. Lastly, embedding-based methods are categorized under Methods, and notable entities like Obama and users, who are participants in various contexts, are also recognized. RESCAL minimizes a loss function, highlighting its role in optimizing knowledge graph completion.",
    "In the realm of knowledge graphs, the term 'participant' is connected to 'relations' as it has a broader term relationship. Similarly, 'Bronte' is linked to 'entities' through a broader term connection. The entity 'E' is often categorized as a 'city', indicating its nature within the graph. Queries such as 'presidentOf(?, USA)' and 'presidentOf(Obama, USA)' are both examples of broader term relationships under the category of 'a query'. The 'ranked sequence of answers' is a broader term for 'the answer to a question', highlighting its role in providing information. Additionally, 'its proportion in the test set' and 'holdback test set' are both broader terms under 'the test set', which is crucial for evaluating models. The concept of 'occupation' is a broader term for 'predicate', while 'binary predicate' is a broader term for 'property'. Open-ended questions are exemplified by 'citizenOf(Ann, ?)', and 'citizenOf(Bronte, ?)' also falls under the broader term of 'a query'. The term 'building methods' is categorized under 'Methods', and 'subject entity' is a broader term for 'An entity e'. The 'free variable y' is related to 'variables', indicating its flexibility in expressions. The entity 'B' is identified as a 'matrix product', which is a mathematical operation. The 'presenter' is another term that connects back to 'relations'. Furthermore, 'movies produced in some countries' is a broader term for 'an entity', while 'country (w)' is a broader term for 'countries'. Lastly, 'Wikidata' serves as a broader term for 'dataset', emphasizing its role in structured data storage.",
    "In the context of knowledge representation, an entity x has a broader term of An entity e, indicating its role as a subject within a knowledge graph. The free variable y unifies with a variable of the head P_t, demonstrating its flexibility in logical expressions. Additionally, the concept of continent is classified under the broader term of an entity, highlighting its significance in geographical contexts. The statement livesIn(Bronte, Canberra) is categorized as an instance, showing its specific factual nature. Weight parameters are encompassed within the broader category of parameters, which are essential for model configurations. The Noisy-OR operator is classified under Methods, representing a probabilistic approach in AI. An RDF triple (e, P, e') is a specific instance of an RDF triple, illustrating the structured relationships in knowledge graphs. Performance is evaluated through quality measures, ensuring the effectiveness of link predictors. Queries of unclear origin are derived from a holdback test set, which is crucial for assessing knowledge graph completion. Institute z is another entity that falls under An entity e, while the query citizenOf(Bronte, ?) is part of the broader relationships category. Square n \u00d7 n adjacency matrices are a specific type of adjacency matrix, used to represent graph structures. Weight matrices are included in the broader category of matrices, which are fundamental in various mathematical applications. The answer to a question in the test set is related to test and training sets, emphasizing its role in model evaluation. Furthermore, square n \u00d7 n adjacency matrices are represented as an adjacency matrix representation, providing a structured view of graph connections. The ROC (Receiver Operating Characteristic) curve is also classified under Methods, serving as a tool for performance evaluation. The term spouse is categorized under relations, reflecting its social significance. Lastly, movie actors are recognized as a subset of an entity, while the count of distinct entities is defined as cardinality, quantifying the elements within a set.",
    "In the realm of knowledge graphs, various entities and their relationships are defined through specific predicates. For instance, 'cardinality' has a broader term 'count', indicating its role in quantifying the number of elements in a set. Similarly, 'participant' is a broader term for 'entities', highlighting the involvement of individuals in various contexts. The concept of 'adjacency matrix' is also categorized under 'matrices', which are essential for representing graphs. The 'USA' is classified as an 'entity', showcasing its significance in the graph. Furthermore, 'adjacency matrix representation' falls under 'matrices', emphasizing its mathematical structure. The similarity function 'sim(P(2)_t , P(1)_1)' is recognized as a broader term for 'similarity function', which quantifies relationships between predicates. The subject and object arguments of a predicate P are encompassed within the broader term 'predicate'. Additionally, 'Canberra' is identified as an 'entity', while the relation 'isBornIn' is categorized under 'relations'. The 'set' is defined by its 'cardinality', and 'link prediction' is a task that is provided by 'human experimenters'. The 'public test and train sets' are classified as a 'dataset', which is crucial for model evaluation. Moreover, 'square n \u00d7 n adjacency matrices' are included under 'matrices', and 'type, not-null, and key constraints' are prevalent in 'relational databases'. 'Entity x' is a broader term for 'subject', while 'experiments' assess 'the utility of our fitness functions'. The similarity function 'sim(P(2)_t , P(1)_1)' is also recognized as a broader term for 'similarity scoring function'. Lastly, 'fitness function' and 'sampling algorithm' are both categorized under 'Methods', while 'An entity e' serves as an identifier for 'an object such as a place or a person'.",
    "In the realm of knowledge graphs, the term 'person' has a broader term known as 'entities', which encompasses various identifiable data points. The relationship 'livesIn(x, z)' is logically connected to 'locatedIn(z, y)', indicating that if an entity lives in a location, that location is situated within a broader geographical area. Furthermore, the specific instance 'studiesIn(Sam, ANU)' instantiates the query 'citizenOf(Sam, ?)', suggesting a link between Sam's educational affiliation and his citizenship. Additionally, 'benchmark datasets' are categorized under the broader term 'dataset', while 'matrix and vector operations' fall under 'matrices'. The concept of 'any predicate in the test set' is similarly classified under 'test set'. The 'head predicate' is significant as it shares a large number of entities, and the term 'spouse' also relates back to the broader category of 'entities'. In the context of knowledge graph completion, 'such an answer' is a broader term for 'the answer to a question'. The 'similarity fitness function' relies on the 'head predicate', which is crucial for evaluating the quality of relationships. The subject and object arguments of a predicate P are represented by 'argument embeddings', which capture their semantic meanings. The predicate 'locatedIn' is represented by 'locatedIn(z, y)', further illustrating geographical relationships. The 'TV program' is another entity that falls under the broader category of 'entities'. The relationship 'presidentOf(Obama, USA)' is classified as a fact, while the 'scoring function' is represented as 'f(e0, P1, e1)', evaluating the plausibility of connections between entities. The term 'participant' is a broader term for 'predicate', and 'cardinality' is defined as 'the number we need', indicating the count of distinct entities satisfying a rule. Lastly, 'Obama' is recognized as a significant entity within the broader category of 'entities', and 'citizenOf(x, y)' represents a fundamental relationship in this context.",
    "The matrix of binary values has a broader term known as matrices, which are essential in various mathematical applications. In the context of card games, Each poker hand is a specific instance of a broader category referred to as poker hand. Additionally, the bag of predicates is selected with a probability that reflects its proportion in the test set, highlighting the statistical nature of predicate selection. In knowledge graphs, an object such as a place or a person is categorized under the broader term place. The relationship livesIn(Bronte, Canberra) infers the query related to Bronte's residence. Furthermore, the TV program is a specific type of program, while the logical expression citizenOf(x, y) falls under the broader category of predicates. The probability of its proportion is a specific instance of the broader concept of probability. The answer to a question in the test set is a more specific instance of the answer to a question. In terms of roles, a presenter is categorized under predicates, and the subject argument of P_t is defined as a subject argument. The cardinality of this set is a specific instance of cardinality, and the highest point is a broader term for predictive attributes. The place of birth is a specific type of an entity, while movies produced in some countries are categorized under entities. The fact that citizenOf(Bronte, Australia) is a broader term for facts illustrates the relationships within knowledge graphs. Lastly, e_8 represents a specific instance of An entity e, and the term spouse is a broader category under relationships. The heuristic function is a specific type of heuristic, and the strategy of 90% for training is a broader term for training.",
    "In the realm of knowledge representation, various entities and their relationships are defined through specific predicates. For instance, 'numerical attributes' has a broader term known as 'predictive attributes', which encompasses the characteristics used to describe data points. Similarly, 'continent' is categorized under the broader term 'entities', highlighting its role as a geographical classification. The term 'head predicate' also falls under the broader category of 'predicate', indicating its significance in logical constructs. Wikipedia, recognized as an 'online encyclopedia', serves as a comprehensive source of information, while 'human expert' is a more specific instance of 'An entity e', emphasizing the specialized knowledge individuals can possess. The relationship 'citizenOf(Ann, Australia)' is a specific query that illustrates citizenship status, which is a broader concept in the context of knowledge graphs. In machine learning, '90% for training' is a strategy that fits within the broader category of 'training set', and the 'test set' is a subset of the 'dataset' used for evaluation purposes. Notably, Celine Dion, a prominent figure, is classified as an 'entity'. The experiments conducted assess the utility of various 'fitness functions', which are crucial in optimizing algorithms. The term 'spouse' is another example of a predicate that has broader implications. In the context of card games, 'Each poker hand' is a specific instance of the broader classification known as 'Poker Hand'. The relation 'isCitizenOf' is represented by the conditional rule 'isCitizenOf(x,y)', which establishes citizenship based on specific conditions. Wikidata plays a vital role in managing 'factual information', ensuring data integrity. Furthermore, 'the dimensionality of the latent feature space' is a concept that falls under the broader term 'dimensionality', essential for understanding data representation. The 'predictive attributes' total to '10 predictive attributes', which further categorizes the features used in datasets. An 'experiment' is a broader term that encompasses various 'experiments' conducted in research. Lastly, 'movie actors' are classified under 'entities', and the 'similarity scoring function' is a specific type of 'scoring function' used to evaluate relationships between entities.",
    "Each poker hand consists of 5 playing cards, which are essential for evaluating various poker scenarios. The relationship presidentOf(Obama, USA) is held back from the training data, indicating a specific exclusion in the dataset used for model training. The term isBornIn has a broader term known as predicate, which encompasses various relationships in knowledge graphs. Additionally, the dataset has a broader term of synthetic dataset, highlighting the distinction between real and artificially generated data. Any predicate in the test set is categorized under test and training sets, which are crucial for evaluating model performance. Canberra, as a city, has a broader term of entities, representing its classification within a larger context. Methods employed in data analysis often use matrix and vector operations to manipulate data effectively. The training set, which is a subset of the dataset, has a broader term of dataset itself. The relationship citizenOf(Ann, Australia) also falls under the broader category of predicate, while livesIn(Bronte, Canberra) is classified under relationships, indicating the connections between individuals and locations. The runtime for mining is a broader term for runtime, reflecting the computational time needed for data extraction processes. In machine learning, 90% for training is a strategy that falls under the broader category of training data. Predictive attributes, which include ranks, are vital for classifying poker hands, with ranks themselves being a broader term for predictive attributes. Countries are classified under the broader term of An entity e, representing various entities within the knowledge graph. The term person has a broader term of object, indicating its role within relational statements. Furthermore, a region has a highest point, which signifies its geographical characteristics. The predicate has a subject argument, which is essential for understanding the structure of relational statements. The relation isBornIn relates to entities (x,y), connecting individuals to their birthplaces. Lastly, half of the instances of each predicate is assigned by random selection, ensuring a fair representation in the query generation process.",
    "In the context of knowledge graphs, a query with an answer present in the test set is classified as a relevant query, which is a specific type of query that can be answered using the information contained within the test set. The test set itself is a broader term that encompasses both test and training sets, which are essential for evaluating model performance. Additionally, the fitness function is a broader term for quality measures, indicating its role in assessing the effectiveness of solutions. The training set, which is a subset of training data, is part of the broader training process. Furthermore, residence is categorized under predictive attributes, while vector size falls under parameters, highlighting their significance in data representation. Entity x, which can be linked to An entity e, is also part of the broader relationships represented in the graph. The placeOfBirth is another relation that connects to the broader category of relations. Experiments are conducted over benchmark datasets, providing a foundation for systematic investigations. A region (z) is classified under the broader term region, and random selection is a method used in various processes. The spouse of a person (z) is recognized as part of the broader relationships. The region's highest point (x) is categorized under the highest point, while this paper is a broader term for scholarly documents. The query citizenOf(Ann, ?) is an example of an open-ended query, while citizenOf(Ann, Australia) represents a specific fact within the knowledge graph.",
    "Argument embeddings are closely related to the subject argument, as they capture the semantic meaning of arguments in natural language processing. Query relevance is a concept that falls under the broader category of quality measures, which assess the effectiveness of search queries. The similarity function sim(M_1, M_2) is defined as exp(-||M_1 - M_2||_F), indicating that it quantifies the similarity between two matrices using the exponential of the negative Frobenius norm of their difference. In the realm of topics, movie actors represent a specific area of interest. The place of birth is a broader term that encompasses various entities, while intrinsic properties relate to predictive attributes that define the essential characteristics of entities. The first argument position is another term that falls under parameters, which are crucial for understanding function inputs. Wikidata serves as a multilingual knowledge base, and Bronte is identified as an entity within this context. Each card in a poker hand is categorized under the broader term card, and heuristics are practical methods that belong to the category of methods. The term somewhere (y) refers to a broader category of places, while test and training sets are integral to the training process in machine learning. Celine Dion, a notable figure, is classified under entities, and the training set is a specific subset of the broader test and training sets. The concept of a country (w) is a broader term that includes various countries, and 5 playing cards represent a specific combination of cards within the broader category of card. Lastly, experiments utilize random.org as a tool for randomization, and class attributes are associated with predictive attributes, highlighting their shared characteristics.",
    "The concept of test data is a subset of a broader dataset, which is essential for evaluating model performance. Each card in a poker hand is described using predictive attributes, such as suit and rank. The predicates locatedIn and liveIn may co-occur, indicating relationships between entities and their geographical locations. In knowledge graphs, a place or a person is a broader term that encompasses the concept of a person. Entity x is associated with institute z, where it studies, and this relationship can be expressed as studiesIn. A query with an answer present in the test set is a specific type of query that falls under the broader category of test and training sets, which in turn is a subset of training data. Participants in various contexts are identified as entities, with the USA also being classified as an entity. The term 6 ranks refers to a broader category of ranks in the context of playing cards. Hold-out test data is another subset of the dataset used for evaluation. The predicate placeOfBirth is a broader term that relates to geographical identifiers. Regions are classified as being within countries, and an instance fact in the test data is a specific fact that contributes to the overall test data. Sam, as a person, studies at ANU, which infers the query citizenOf(Sam, ?). Overall, the relationships among these entities illustrate the interconnectedness of concepts within knowledge graphs, where cards are a broader category of playing cards.",
    "The relationship 'studiesIn(Sam, ANU)' is instantiated as 'studiesIn(Sam, ANU)', indicating that Sam is enrolled at the Australian National University (ANU). Each card in a poker hand has 10 predictive attributes, which include the suits and ranks of the cards. The term 'its proportion in the test set' is related to the broader concept of the test set, which is a collection of data used for model evaluation. Similarly, the holdback test set is also a subset of the test set reserved for performance evaluation. ANU, as an educational institution, falls under the broader category of entities. The term 'spouse' is a broader term for an entity e, just as a TV program and Obama also belong to this category. The partial area under the curve (AUC) is a specific measure within the broader AUC metric. In the context of poker, predictive attributes include suits, which are part of the broader category of predictive attributes. The inverse of a predicate is defined as P_i^-1, which reverses the order of its arguments. Movies produced in some countries are classified under the broader term of an entity e. Additionally, the country (w) is associated with the continent of that country (y). Open-ended questions serve as examples of the relationship 'citizenOf(Ann, Australia)'. The concept of continent is also a broader term for an entity e, as are movie actors. The reduced deck used in poker consists of 6 ranks, which are essential for determining the composition of poker hands. Lastly, Canberra, the capital city of Australia, is categorized under the broader term of an entity e.",
    "In the realm of poker, a 'poker hand' is classified under the broader term of 'Poker Hand', which encompasses specific combinations of five playing cards. The relationship between citizenship and residence is defined by the predicates 'citizenOf(x, y)' and 'livesIn', where an individual lives in a location that infers their citizenship. The concept of 'its proportion in the test set' is part of the larger category of 'test and training sets', which are essential in machine learning for evaluating model performance. Additionally, the 'holdback test set' also falls under this broader term. The relation 'isBornIn' is represented by 'isBornIn(x,z)', indicating the birthplace of an individual. The predicate 'locatedIn' is integral to the 'citizenOf(x, y)' relationship, while 'livesIn' is also a component of this citizenship framework. In the context of poker, 'Class attribute' describes the characteristics of a 'Poker Hand', and 'citizenship' and 'continent' are both broader terms under 'predictive attributes'. The statistical measure 'its proportion in the test set' relates to the concept of 'proportion'. Furthermore, 'entity x' is identified as a citizen of an unspecified location 'somewhere (y)'. In poker, '5 playing cards' are drawn from a 'reduced deck', which consists of a limited set of cards. Geographically, 'Australia' is classified as a 'place', just like 'Canberra', which is also a broader term for 'place'. The 'place of birth' is a broader term for 'An entity e', while 'Celine Dion' is categorized under 'An entity e' as well. Lastly, the 'Intel Xeon CPU E5-4620v2' is equipped with '66 GB RAM', and the 'reduced deck' is a broader term for 'deck'.",
    "The USA is a broader term that encompasses various countries, highlighting its role as a significant political entity. In the context of television, a participant is defined by their occupation, which also has broader terms that include various job types. Specifically, an occupation (y) is a type of occupation that falls under this category. In card games, 5 playing cards represent a specific subset of playing cards, which are used in various games. The subject and object arguments of a predicate P are essential components that define the relationships in a sentence, aligning with the concept of subject and object arguments. A presenter, who is typically the host of a TV program, is also defined by their occupation, which is a broader term in this context. Nations are recognized as broader terms for countries, indicating their political significance. The place of birth is categorized under predictive attributes, which are characteristics used to infer various relationships. Citizenship establishes a connection between an individual and their residence, emphasizing the legal status of individuals within a country. In poker, a reduced deck consists of 2 suits, which are essential for gameplay. The Australian National University (ANU) is a notable example of an entity e, representing a significant institution in education. The concept of citizenship is illustrated through the example of 'citizenOf(Ann, Australia)', which signifies Ann's legal status in Australia. Movies produced in some countries reflect the diverse cinematic landscape across different nations. The Intel Xeon CPU E5-4620v2 operates on CentOS 7, showcasing its compatibility with this Linux distribution, and it runs at a clock speed of 2.60 GHz, indicating its performance capabilities. Lastly, countries are associated with continents, further defining their geographical context.",
    "Bronte is an individual who lives in Canberra, Australia, which is a city that falls under the broader category of a person. In the context of television, a TV program (z) encompasses various participants, including a presenter, who is defined by their role as a participant. The presenter, like Bronte, is also classified as a person. Additionally, human experimenters, who conduct research involving participants, share a broader classification with participants. In the realm of poker, the term '2 suits' refers to a specific subset of suits, which are categories of playing cards. The USA, a nation, is represented by Obama, who served as its president. Furthermore, the holdback test set is utilized within experimental settings, indicating its importance in research methodologies. Australia, as a country, is part of the broader classification of countries, while the continent of that country (y) is known to include a region (z).",
    "In the realm of relationships, a spouse is recognized as a person who is married to another individual, forming a legal partnership. Within the context of television, a participant (w) is a specific type of participant who holds an occupation, indicating a broader classification of participants involved in TV programs. Notably, Barack Obama, a prominent political figure, is categorized under the broader term 'person'. In Australia, Bronte is identified as a citizen, residing in Canberra, which is classified as a city. The concept of a person's city of residence is crucial, as it is located within the nation that encompasses that city, and this relationship is essential for inferring citizenship. Furthermore, the presenter of a TV program (x) is likely known for their role in a specific TV program (z), which also has a presenter. Movies produced in some countries fall under the broader category of movies, and movie actors tend to have better coverage in these films. Additionally, the place of birth is an important identifier for a person, and someone's citizenship can be inferred from their city of residence, which is linked to the nation in which that city is located. Celine Dion, a renowned singer, is also classified under the broader term 'person'.",
    "The concept of placeOfBirth is derived from the relationship with a spouse, indicating that the birthplace can be associated with a marital partner. Furthermore, the place of birth of that person is a broader term that encompasses the individual known as a person. In geographical terms, Canberra is located in Australia, which is a significant detail about the capital city. Additionally, the spouse of a person (z) is likely known to have a connection with the place of birth of that person, and this relationship is further confirmed as the spouse is known to have ties to the same birthplace. The broader geographical context is also highlighted, as the continent of that country (y) is recognized as a broader term for continent, and the place of birth of that person is similarly categorized under the broader term of place of birth."
  ],
  "times": [
    1352.4803931713104
  ]
}