{
  "iri": "Paper-48",
  "title": "ICML_2006_119_abs",
  "authors": [],
  "keywords": [],
  "sections": [
    {
      "iri": "Paper-48-Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Paper-48-Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Paper-48-Section-1-Paragraph-1-Sentence-1",
              "text": "We investigate the problem of learning to predict moves in the board game of Go from game records of expert players ."
            },
            {
              "iri": "Paper-48-Section-1-Paragraph-1-Sentence-2",
              "text": "In particular , we obtain a probability distribution over legal moves for professional play in a given position ."
            },
            {
              "iri": "Paper-48-Section-1-Paragraph-1-Sentence-3",
              "text": "This distribution has numerous applications in computer Go , including serving as an efficient stand-alone Go player ."
            },
            {
              "iri": "Paper-48-Section-1-Paragraph-1-Sentence-4",
              "text": "It would also be effective as a move selector and move sorter for game tree search and as a training tool for Go players ."
            },
            {
              "iri": "Paper-48-Section-1-Paragraph-1-Sentence-5",
              "text": "Our method has two major components : a -RRB- a pattern extraction scheme for efficiently harvesting patterns of given size and shape from expert game records and b -RRB- a Bayesian learning algorithm -LRB- in two variants -RRB- that learns a distribution over the values of a move given a board position based on the local pattern context ."
            },
            {
              "iri": "Paper-48-Section-1-Paragraph-1-Sentence-6",
              "text": "The system is trained on 181,000 expert games and shows excellent prediction performance as indicated by its ability to perfectly predict the moves made by professional Go players in 34 % of test positions ."
            }
          ]
        }
      ]
    }
  ],
  "summary": "We investigate the problem of learning to predict moves in the board game of Go from game records of expert players . In particular , we obtain a probability distribution over legal moves for professional play in a given position . This distribution has numerous applications in computer Go , including serving as an efficient stand-alone Go player . It would also be effective as a move selector and move sorter for game tree search and as a training tool for Go players . Our method has two major components : a -RRB- a pattern extraction scheme for efficiently harvesting patterns of given size and shape from expert game records and b -RRB- a Bayesian learning algorithm -LRB- in two variants -RRB- that learns a distribution over the values of a move given a board position based on the local pattern context . The system is trained on 181,000 expert games and shows excellent prediction performance as indicated by its ability to perfectly predict the moves made by professional Go players in 34 % of test positions .",
  "kg2text": [
    "The problem of learning to predict moves in the board game of Go investigates and addresses the task of learning to predict moves. Our method and the system both address this problem by implementing learning to predict moves. The system is implemented by learning to predict moves and has a broader term of system. Our method is trained on a dataset of 181,000 expert games, which is also used to train the system. This distribution over the values of a move has numerous applications, while the system successfully predicts moves in 34% of test positions. Additionally, moves made by professional Go players have a broader term of move, and the problem of learning to predict moves in the board game of Go is related to the broader context of Go itself. The distribution over the values of a move is linked to the concept of move and distribution, further emphasizing the intricate relationships within the domain of Go.",
    "The board game of Go involves the process of learning to predict moves, which is essential for enhancing gameplay strategies. A significant dataset of 181,000 expert games contributes to the broader category of game records, which are derived from expert players. These game records of expert players not only encompass the strategies employed by these skilled individuals but also serve as a foundation for training tools aimed at Go players. In evaluating the performance of predictive models, 34% of test positions are successfully predicted, highlighting the effectiveness of the systems developed. The probability distribution over legal moves for professional play is crucial, as it obtains insights from given positions and legal moves, thereby enhancing the understanding of professional play. Additionally, the move selector is effective as a move sorter for game tree search, optimizing decision-making processes in the game. Overall, the intricate relationships between these elements underscore the complexity and depth of the board game of Go.",
    "The Bayesian learning algorithm is represented in two variants, which are different implementations used to learn a distribution over the values of a move in the game of Go. A move sorter for game tree search is a specific type of move sorter that enhances the efficiency of decision-making processes in strategic games. The stand-alone Go player, which is a computer program designed to play Go independently, is a broader term that encompasses both Go and Go player, as well as the board game of Go itself. Similarly, computer Go refers to the field focused on developing algorithms for the board game of Go. Additionally, a training tool is effective as a training tool for Go players, helping them improve their strategic decision-making. The move sorter for game tree search is also categorized under game tree search, which is a method for exploring possible moves in a game. Furthermore, a probability distribution obtains legal moves, and the probability distribution over legal moves for professional play is a specific type of probability distribution."
  ],
  "times": [
    14.969217538833618
  ]
}