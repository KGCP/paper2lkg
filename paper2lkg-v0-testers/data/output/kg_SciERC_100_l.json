{
  "iri": "Paper-100",
  "title": "NIPS_2016_80_abs",
  "authors": [],
  "keywords": [],
  "sections": [
    {
      "iri": "Paper-100-Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Paper-100-Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Paper-100-Section-1-Paragraph-1-Sentence-1",
              "text": "Fast algorithms for nearest neighbor -LRB- NN -RRB- search have in large part focused on 2 distance ."
            },
            {
              "iri": "Paper-100-Section-1-Paragraph-1-Sentence-2",
              "text": "Here we develop an approach for 1 distance that begins with an explicit and exactly distance-preserving embedding of the points into 2 2 ."
            },
            {
              "iri": "Paper-100-Section-1-Paragraph-1-Sentence-3",
              "text": "We show how this can efficiently be combined with random-projection based methods for 2 NN search , such as locality-sensitive hashing -LRB- LSH -RRB- or random projection trees ."
            },
            {
              "iri": "Paper-100-Section-1-Paragraph-1-Sentence-4",
              "text": "We rigorously establish the correctness of the methodology and show by experimentation using LSH that it is competitive in practice with available alternatives ."
            }
          ]
        }
      ]
    }
  ],
  "summary": "Fast algorithms for nearest neighbor -LRB- NN -RRB- search have in large part focused on 2 distance . Here we develop an approach for 1 distance that begins with an explicit and exactly distance-preserving embedding of the points into 2 2 . We show how this can efficiently be combined with random-projection based methods for 2 NN search , such as locality-sensitive hashing -LRB- LSH -RRB- or random projection trees . We rigorously establish the correctness of the methodology and show by experimentation using LSH that it is competitive in practice with available alternatives .",
  "kg2text": [
    "We show how locality-sensitive hashing (LSH) or random projection trees can efficiently be combined with random-projection-based methods for 2-nearest neighbor search. This approach involves an explicit embedding of points into higher-dimensional space and combines it with random-projection-based algorithms used for searching nearest neighbors efficiently. We rigorously establish the correctness of this methodology, which starts by explicitly preserving distances through an embedding process from high-dimensional space to a lower-dimensional space.",
    "Locality-sensitive hashing, an efficient data indexing technique, has its roots in algorithms. This approach allows for proximity-based search and retrieval of similar items. The concept of distance plays a crucial role here, with both 1-distance and 2-distance measures being used to determine the nearest neighbor. LSH is one such algorithm that uses locality-sensitive hashing to index large datasets efficiently. Nearest-neighbor searches are another application where algorithms like NN come into play. Fast algorithms have focused on optimizing these distance metrics for improved performance. Embedding, a mathematical representation of data, also relies heavily on algorithms and methodology. In summary, the relationships between entities in this graph highlight the importance of proximity-based search, efficient indexing, and optimized algorithmic approaches."
  ],
  "times": [
    11.664632320404053
  ]
}