{
  "iri": "Paper-Learning_SHACL_shapes_from_knowledge_graphs",
  "title": "Learning SHACL shapes from knowledge graphs",
  "authors": [
    "Pouya Ghiasnezhad Omran",
    "Kerry Taylor",
    "Sergio Rodr\u00edguez M\u00e9ndez",
    "Armin Haller"
  ],
  "keywords": [
    "HACL shape learning",
    "hapes constraint language",
    "knowledge graph",
    "inverse open path rule"
  ],
  "sections": [
    {
      "iri": "Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-1-Sentence-1",
              "text": "Knowledge Graphs (KGs) have proliferated on the Web since the introduction of knowledge panels to Google search in 2012."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-2",
              "text": "KGs are large data-first graph databases with weak inference rules and weakly-constraining data schemes."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-3",
              "text": "SHACL, the Shapes Constraint Language, is a W3C recommendation for expressing constraints on graph data as shapes."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-4",
              "text": "SHACL shapes serve to validate a KG, to underpin manual KG editing tasks, and to offer insight into KG structure."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-5",
              "text": "Often in practice, large KGs have no available shape constraints and so cannot obtain these benefits for ongoing maintenance and extension."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-2-Sentence-1",
              "text": "We introduce Inverse Open Path (IOP) rules, a predicate logic formalism which presents specific shapes in the form of paths over connected entities that are present in a KG."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-2",
              "text": "IOP rules express simple shape patterns that can be augmented with minimum cardinality constraints and also used as a building block for more complex shapes, such as trees and other rule patterns."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-3",
              "text": "We define formal quality measures for IOP rules and propose a novel method to learn high-quality rules from KGs."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-4",
              "text": "We show how to build high-quality tree shapes from the IOP rules."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-5",
              "text": "Our learning method, SHACLEARNER, is adapted from a state-of-the-art embedding-based open path rule learner."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-3-Sentence-1",
              "text": "We evaluate SHACLEARNER on some real-world massive KGs, including YAGO2s with 4 million facts, DBpedia 3.8 with 11 million facts, and Wikidata with 8 million facts."
            },
            {
              "iri": "Section-1-Paragraph-3-Sentence-2",
              "text": "The experiments show that our SHACLEARNER can effectively learn informative and intuitive shapes from massive KGs."
            },
            {
              "iri": "Section-1-Paragraph-3-Sentence-3",
              "text": "The shapes are diverse in structural features such as depth and width, and also in quality measures that indicate confidence and generality."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-2",
      "subtitle": "Introduction",
      "paragraphs": [
        {
          "iri": "Section-2-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-1-Sentence-1",
              "text": "While public knowledge graphs (KGs) became popular with the development of DBpedia and Yago more than a decade ago, interest in enterprise knowledge graphs has taken off since the inclusion of knowledge panels on the Google Search engine in 2012, driven by its internal knowledge graph."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-2",
              "text": "Although these KGs are massive and diverse, they are typically incomplete."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-3",
              "text": "Regardless of the method that is used to build a KG, whether collaboratively or individually, manually or automatically, it will be incomplete because of the evolving nature of human knowledge, cultural bias, and resource constraints."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-4",
              "text": "Consider Wikidata, for example, where there is more complete information for some types of entities, such as pop stars, while less for others, like opera singers."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-5",
              "text": "Even for the same type of entity, such as computer scientists, there are different depths of detail for similarly accomplished scientists, depending on their country of residence."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-2-Sentence-1",
              "text": "However, the power of KGs comes from their data-first approach, enabling contributors to extend a KG in a relatively arbitrary manner."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-2",
              "text": "By contrast, a relational database typically employs not-null and other schema-based constraints that require some attributes to be instantiated in a defined way at all times."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-3",
              "text": "Large KGs are typically populated by automatic and semi-automatic methods using non-structured sources such as Wikipedia that are prone to errors of omission and commission."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-4",
              "text": "Both kinds of errors can be highlighted for correction by a careful application of schema constraints."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-5",
              "text": "However, such constraints are commonly unavailable and, if available, uncertain and frequently violated in a KG for valid reasons, arising from the intended data-first approach of KG applications."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-3-Sentence-1",
              "text": "SHACL was formally recommended by the W3C in 2017 to express such constraints on a KG as shapes."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-2",
              "text": "For example, SHACL can be used to express that a person in a specific use case needs to have a name, birth date, and place of birth, and that these attributes have particular types: a string, a date, and a location."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-3",
              "text": "The shapes are used to guide the population of a KG, although they are not necessarily enforced."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-4",
              "text": "Typically, SHACL shapes are manually specified."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-5",
              "text": "However, as for multidimensional relational database schemes, shapes could, in principle, be inferred from KG data."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-6",
              "text": "As frequent patterns, the shapes characterize a KG and can be used for subsequent data cleaning or ongoing data entry."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-7",
              "text": "There is scant previous research on this topic."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-4-Sentence-1",
              "text": "While basic SHACL and its advanced features allow the modeling of diverse shapes including rules and constraints, most of these shapes are previously well known when expressed by alternative formalisms, including closed rules, trees, existential rules, and graph functional dependencies."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-2",
              "text": "We claim that the common underlying form of all these shapes is the path, over which additional constraints induce alternative shapes."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-3",
              "text": "For example, in DBpedia we see the following path: if an entity x is a song, then x is in an album y which has a record label z."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-5-Sentence-1",
              "text": "Since the satisfaction of a less-constrained shape is a necessary condition for satisfaction of a more complex shape but not a sufficient condition, in this paper we focus on learning paths, the least constrained shape for our purposes."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-2",
              "text": "In addition, we learn cardinality constraints that can express, for example, that a song has at least 2 producers."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-3",
              "text": "We also investigate the process of constructing one kind of more complex shape, that is a tree, out of paths."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-4",
              "text": "For example, we discover a tree about an entity which has song as its type."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-5",
              "text": "In a KG context, the tree suggests that if we have an entity of type song in the KG, then we would expect to have the associated facts too."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-6-Sentence-1",
              "text": "In this paper, we present a system, SHACLEARNER, that mines shapes from KG data."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-2",
              "text": "For this purpose, we propose a predicate calculus formalism in which rules have one body atom and a chain of conjunctive atoms in the head with a specific variable binding pattern."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-3",
              "text": "Since these rules are an inverse version of open path rules, we call them inverse open path (IOP) rules."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-4",
              "text": "To learn IOP rules, we adapt an embedding-based open path rule learner."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-5",
              "text": "We define quality measures to express the validity of IOP rules in a KG."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-6",
              "text": "SHACLEARNER uses the mined IOP rules to subsequently discover more complex tree shapes."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-7",
              "text": "Each IOP rule or tree is a SHACL shape, in the sense that it can be syntactically rewritten in SHACL."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-8",
              "text": "Our mined shapes are augmented with a novel numerical confidence measure to express the strength of evidence in the KG for each shape."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-7-Sentence-1",
              "text": "In summary, the main contributions of this paper are: we introduce a new formalism called Inverse Open Path rules, that serves as a building block for more complex shapes such as trees, together with cardinality constraints and quality measurements; we extend the Open Path rule learning method to learn IOP rules annotated with cardinality constraints, while introducing unary predicates that can act as class or type constraints; and we propose a method to aggregate IOP rules to produce tree shapes."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-8-Sentence-1",
              "text": "This paper is organized as follows: after presenting some foundations in Section 2, we describe our SHACL learning method in Section 3, including the formalism of IOP rules, the embedding-based method that discovers IOP rules from a KG, and the method for aggregating IOP rules into trees."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-2",
              "text": "In Section 4, we present related work."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-3",
              "text": "We discuss results of an experimental evaluation in Section 5 before we conclude in Section 6."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-3",
      "subtitle": "Preliminaries: Closed-path rules",
      "paragraphs": [
        {
          "iri": "Section-3-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-1-Sentence-1",
              "text": "The presentation of closed path rules and open path rules in this section is adapted and extended."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-2-Sentence-1",
              "text": "An entity e is an identifier for an object such as a place or a person."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-2",
              "text": "A fact (also known as a link) is an RDF triple (e, P, e'), written here as P(e, e'), meaning that the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-3",
              "text": "In addition, we allow unary predicates of the form P(e), also equivalently written here as the binary fact P(e, e)."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-4",
              "text": "We model unary predicates as self-loops to have a unary predicate act as the label of a link in the graph, as shown in Fig. 1, just as for binary predicates."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-5",
              "text": "Unary predicates may, but are not limited to, represent class assertions expressed in an RDF triple as (e, rdf:type, P) where P is a class or a datatype."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-6",
              "text": "A knowledge graph (KG) is a pair K = (E, F), where E is a set of entities and F is a set of facts and all the entities occurring in F also occur in E."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-3-Sentence-1",
              "text": "2.1. Closed-path rules"
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-2",
              "text": "KG rule learning systems employ various rule languages to express rules."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-3",
              "text": "RLvLR and SCALEKB use so-called closed path (CP) rules."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-4",
              "text": "Each consists of a head at the front of the implication arrow and a body at the tail."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-5",
              "text": "We say the rule is about the predicate of the head."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-6",
              "text": "The rule forms a closed path, or single unbroken loop of links between the variables."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-7",
              "text": "It has the following general form."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-4-Sentence-1",
              "text": "Pt(x, y) <- P1(x, z1) ^ P2(z1, z2) ^ ... ^ Pn(zn-1, y). (1)"
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-5-Sentence-1",
              "text": "We interpret these kinds of rules with universal quantification of all variables at the outside, and so we can infer a fact that instantiates the head of the rule by finding an instantiation of the body of the rule in the KG."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-2",
              "text": "For example, from the rule citizenOf(x, y) <- livesIn(x, z) ^ locatedIn(z, y) and the facts in the KG: livesIn(Mary, Canberra) and locatedIn(Canberra, Australia), we can infer and assert the new fact: citizenOf(Mary, Australia)."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-6-Sentence-1",
              "text": "Rules are considered more use if they generalise well, that is, they explain many facts."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-2",
              "text": "To quantify this idea we recall measures support, head coverage and standard confidence that are used in some major approaches to rule learning."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-7-Sentence-1",
              "text": "Definition 1 (satisfies, support)."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-2",
              "text": "Let r be a CP rule of the form (1)."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-3",
              "text": "A pair of entities (e, e') satisfies the body of r, denoted body_r(e, e'), if there exist entities e1, ..., e(n-1) in the KG such that all of {P1(e, e1), P2(e1, e2), ..., Pn(e(n-1), e')} are facts in the KG."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-4",
              "text": "Further (e, e') satisfies the head of r, denoted Pt(e, e'), if Pt(e, e') is a fact in the KG."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-5",
              "text": "Then the support of r counts the rule instances for which the body and the head are both satisfied in the KG."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-6",
              "text": "suppr = |{ (e, e') : body_r(e, e') and Pt(e, e') }|"
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-8-Sentence-1",
              "text": "Standard confidence (SC) and head coverage (HC) offer standardised measures for comparing rule quality."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-2",
              "text": "SC describes how frequently the rule is true, i.e., of the number of entity pairs that satisfy the body in the KG, what proportion of the inferred head instances are satisfied?"
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-3",
              "text": "It is closely related to confidence widely used in association rule mining."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-4",
              "text": "HC measures the explanatory power of the rule, i.e., what proportion of the facts satisfying the head of the rule could be inferred by satisfying the rule body?"
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-5",
              "text": "It is closely related to cover which is widely used for rule learning in inductive logic programming."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-6",
              "text": "A non-recursive rule that has both 100% SC and HC is redundant with respect to the KG, and every KG fact that is an instance of the rule head is redundant with respect to the rule."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-9-Sentence-1",
              "text": "Definition 2 (standard confidence, head coverage)."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-2",
              "text": "Let r, e, e', body_r be as given in Definition 1."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-3",
              "text": "Then standard confidence is SC(r) = suppr / |{ (e, e') : body_r(e, e') }|"
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-4",
              "text": "and head coverage is HC(r) = suppr / |{ (e, e') : Pt(e, e') }|"
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-4",
      "subtitle": "Preliminaries: Open-path rules: Rules with open variables",
      "paragraphs": [
        {
          "iri": "Section-4-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-1-Sentence-1",
              "text": "Unlike earlier work in rule mining for KG completion, OPRL for active knowledge graph completion defines open path (OP) rules of the form:"
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-2",
              "text": "P1(z0, z1) \u2227 P2(z1, z2) \u2227 ... \u2227 Pn(zn\u22121, y) \u2192 \u2203x Pt(x, z0)."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-3",
              "text": "Here, Pi is a predicate in the KG, each of {x, zi, y} are entity variables, and all free variables are universally quantified at the outside."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-2-Sentence-1",
              "text": "We call a variable closed if it occurs in at least two distinct predicate terms, such as z0 here, and otherwise it is open."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-2",
              "text": "If all variables of a rule are closed then the rule is closed."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-3",
              "text": "An OP rule has two open variables, y and x."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-4",
              "text": "OP rules are used since they imply the existence of a fact, like spouse(x, y) \u2192 \u2203z child(x, z)."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-5",
              "text": "Unlike CP rules, OP rules do not necessarily form a loop, but a straightforward variable unification transforms an OP rule to a CP rule."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-6",
              "text": "Every entity-instantiation of a CP rule is also an entity-instantiation of the related OP rule, but not vice versa."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-3-Sentence-1",
              "text": "To assess the quality of OP rules, we use open path standard confidence (OPSC) and open path head coverage (OPHC), which are derived from the closed path forms."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-4-Sentence-1",
              "text": "Definition 3 (open path: OPsupp, OPSC, OPHC)."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-2",
              "text": "Let r be an OP rule of the given form."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-3",
              "text": "A pair of entities (e, e') satisfies the body of r, denoted as body_r(e, e'), if there exist entities e1, ..., en\u22121 in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(en\u22121, e') are facts in the KG."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-4",
              "text": "Also, (e', e) satisfies the head of r, denoted Pt(e', e), if Pt(e', e) is a fact in the KG."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-5-Sentence-1",
              "text": "The open path support, open path standard confidence, and open path head coverage of r are given respectively by:"
            },
            {
              "iri": "Section-4-Paragraph-5-Sentence-2",
              "text": "OPsupp(r) = |{e : \u2203e', e'' such that body_r(e, e') and Pt(e'', e)}|."
            },
            {
              "iri": "Section-4-Paragraph-5-Sentence-3",
              "text": "OPSC(r) = OPsupp(r) / |{e : \u2203e' such that body_r(e, e')}|."
            },
            {
              "iri": "Section-4-Paragraph-5-Sentence-4",
              "text": "OPHC(r) = OPsupp(r) / |{e : \u2203e' such that Pt(e', e)}|."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-5",
      "subtitle": "Preliminaries: SHACL shapes",
      "paragraphs": [
        {
          "iri": "Section-5-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-1-Sentence-1",
              "text": "A KG is a schema-free database and does not need to be augmented with schema information natively."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-2",
              "text": "However, many KGs are augmented with type information that can be used to understand and validate data and can also be very helpful for inference processes on the KG."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-3",
              "text": "In 2017 the Shapes Constraint Language (SHACL) was introduced as a W3C recommendation to define schema information for KGs stored as an RDF graph."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-4",
              "text": "SHACL defines constraints for graphs as shapes."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-5",
              "text": "KGs can then be validated against a set of shapes."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-2-Sentence-1",
              "text": "Shapes can serve two main purposes: validating the quality of a KG and characterising the frequent patterns in a KG."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-2",
              "text": "In Fig. 2, we illustrate an example of a shape from Wikidata, where x and z_i are variables that are instantiated by entities."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-3",
              "text": "Although the shape is originally expressed in ShEx, we translate it to SHACL in the following."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-3-Sentence-1",
              "text": "SHACL, together with SHACL advanced features is extensive."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-2",
              "text": "Here we focus on the core of SHACL in which node shapes constrain a target predicate (e.g., the unary predicate human in Fig. 2), with property shapes expressing constraints over facts related to the target predicate."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-3",
              "text": "We particularly focus on property shapes which act to constrain an argument of the target predicate."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-4",
              "text": "In Fig. 2 the shape expresses that each entity x which satisfies human(x) should satisfy the following paths: (1) citizenOf(x, z1) ^ country(z1), (2) father(x, z2) ^ human(z2), and (3) nativeLanguage(x, z3) ^ language(z3)."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-4-Sentence-1",
              "text": "Various formalisms with corresponding shapes have been proposed to express diverse kinds of patterns exhibited in KGs, such as k-cliques, Closed rules (CR) (that include closed path rules), Functional Graph Dependency (FGD), and trees."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-2",
              "text": "CRs are used for inferring new facts."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-3",
              "text": "FGDs define constraints like the type of entities in the domain and range of predicates, or the number of entities to which an entity can be related by a specific predicate."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-4",
              "text": "These constraints are deployed to make the KG consistent."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-5",
              "text": "Regardless of differences between the formalisms, they share a key feature in their syntax."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-6",
              "text": "The building block for expressing all of these shape constraints is a sequence of predicates."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-5-Sentence-1",
              "text": "We focus on such path shapes for our shape learning system."
            },
            {
              "iri": "Section-5-Paragraph-5-Sentence-2",
              "text": "A path is a sequence of predicates connected by closed intermediate variables but terminating with open variables at both ends."
            },
            {
              "iri": "Section-5-Paragraph-5-Sentence-3",
              "text": "Although shapes in the form of a path are less constrained than some more complex shapes, they are a more general template for more complex shapes like closed rules or trees, which are also paths (with further restrictions)."
            },
            {
              "iri": "Section-5-Paragraph-5-Sentence-4",
              "text": "We will define Inverse Open Path rules induced from paths that have a straightforward interpretation as shapes, and also propose a method to mine such rules from a KG."
            },
            {
              "iri": "Section-5-Paragraph-5-Sentence-5",
              "text": "To demonstrate the potential for these kinds of shapes to serve as building blocks for more complex trees, we then propose a method that builds trees out of mined rules, and briefly discuss the application of such trees to KG completion."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-6",
      "subtitle": "SHACL learning: Rules with open variables or uncertain shapes",
      "paragraphs": [
        {
          "iri": "Section-6-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-1-Sentence-1",
              "text": "We observe that the converse of OP rules, which we call inverse open path rules (IOP), correspond to SHACL shapes."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-2",
              "text": "For example, a shape can be derived from the following three IOP rules: human(x, x) -> citizenOf(x, z1) ^ country(z1, z1), human(x, x) -> father(x, z2) ^ human(z2, z2), and human(x, x) -> nativeLanguage(x, z3) ^ language(z3, z3)."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-2-Sentence-1",
              "text": "The general form of an IOP rule is given by Pt'(x, z0) -> exists(z1, ..., z(n-1), y) P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y). (3)"
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-2",
              "text": "Here each P'i is either a predicate in the KG or its reverse with subject and object bindings swapped, and free variables are universally quantified at the outside."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-3",
              "text": "We often omit the quantifiers when writing IOP rules."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-4",
              "text": "In an IOP rule, the body of the rule is Pt, and its head is the sequence of predicates P1 ^ P2 ^ ... ^ Pn."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-5",
              "text": "Hence we instantiate the atomic body to predict an instance of the head."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-6",
              "text": "IOP rules are not Horn."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-7",
              "text": "The pattern of existential variables in the head and universal variables in the body has been investigated in the literature as existential rules."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-3-Sentence-1",
              "text": "To assess the quality of IOP rules, we follow a style of quality measures similar to those used for OP rules."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-4-Sentence-1",
              "text": "Definition 4 (inverse open path: IOPsupp, IOPSC, IOPHC)."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-2",
              "text": "Let r be an IOP rule of the form (3)."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-3",
              "text": "Then a pair of entities (e, e') satisfies the head of r, denoted head_r(e, e'), if there exist entities e1, ..., e(n-1) in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(e(n-1), e') are facts in the KG."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-4",
              "text": "A pair of entities (e'', e) satisfies the body of r, denoted Pt(e'', e), if Pt(e'', e) is a fact in the KG."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-5",
              "text": "The inverse open path support, inverse open path standard confidence, and inverse open path head coverage of r are given respectively by"
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-6",
              "text": "IOPsupp(r) = |{ (e', e'') : there exists e', e'' such that head_r(e, e') and Pt(e'', e) }|"
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-7",
              "text": "IOPSC(r) = IOPsupp(r) / |{ e' : Pt(e', e) }|"
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-8",
              "text": "IOPHC(r) = IOPsupp(r) / |{ e : there exists e' such that head_r(e, e') }|"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-5-Sentence-1",
              "text": "Notably, because any instantiated open path in a KG includes both an OP and IOP rule, the support for an IOP rule is the same as the corresponding OPSC."
            },
            {
              "iri": "Section-6-Paragraph-5-Sentence-2",
              "text": "This close relationship between OP and IOP rules helps us to mine both OP and IOP rules in one process."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-6-Sentence-1",
              "text": "We show the relationship between an OP rule and its converse IOP version in the following example."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-2",
              "text": "Consider the OP rule P1(x, z0) <- P2(z0, z1) ^ P3(z1, z2)."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-3",
              "text": "Assume we have three entities (e3, e4, e5) which can instantiate z0 and satisfy both P1(x, z0) and P2(z0, z1) ^ P3(z1, z2)."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-4",
              "text": "Assume the number of entities that can instantiate z0 to satisfy the head part is 5 ({e1, e2, e3, e4, e5}) and the number of entities that can instantiate z0 to satisfy the body part is 7 ({e2, e4, e5, e6, e7, e8, e9})."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-5",
              "text": "Hence, for this rule OPsupp = 3, OPSC = 3/7, and OPHC = 3/5."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-6",
              "text": "For the IOP version of the same rule, P1(x, z0) -> P2(z0, z1) ^ P3(z1, z2), the same entities instantiate z0, but now the body and head predicates are swapped."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-7",
              "text": "Hence, we have IOPsupp = 3, IOPSC = 3/5, and IOPHC = 3/7."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-7-Sentence-1",
              "text": "In many cases, we need rules to express not only the necessity of a chain of facts (the facts in the head of the IOP rule), but also the number of different chains which should exist."
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-2",
              "text": "For example, we may need a rule to express that each human has at least two parents."
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-3",
              "text": "Thus, we introduce IOP rules annotated with a cardinality Car, giving the following form."
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-4",
              "text": "IOPSC, IOPHC, Car : Pt'(x, z0) -> P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y). (4)"
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-5",
              "text": "Here IOPSC and IOPHC belong to [0, 1] and denote the qualities of the rule, while Car is an integer >= 1."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-8-Sentence-1",
              "text": "Definition 5 (Cardinality of an IOP rule, Car)."
            },
            {
              "iri": "Section-6-Paragraph-8-Sentence-2",
              "text": "Let r be an annotated IOP rule of the form (4), and let Car(r) be the cardinality annotation for r."
            },
            {
              "iri": "Section-6-Paragraph-8-Sentence-3",
              "text": "Then r satisfies Car(r) if and only if, for each entity e such that Pt(e', e) holds, the number of distinct instantiations of head_r(e, e') is at least Car(r)."
            },
            {
              "iri": "Section-6-Paragraph-8-Sentence-4",
              "text": "In other words, the cardinality expresses a lower bound on the number of head paths that are satisfied in the KG for every instantiation linking the body to the head."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-9-Sentence-1",
              "text": "Rules with the same head and the same body may have different cardinalities."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-2",
              "text": "While a rule might have a certain cardinality c1, lower-cardinality versions of that rule may have the same or higher IOPSC values, since a larger required cardinality places a stricter lower bound on the number of instances of the head in the KB."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-10-Sentence-1",
              "text": "Lemma 1 (IOPSC is non-increasing with length)."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-2",
              "text": "Let r be an IOP rule of the form (3) with n >= 2, and let r' be the same rule shortened by removing the last head predicate."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-3",
              "text": "Then IOPSC(r) <= IOPSC(r')."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-4",
              "text": "This result follows because the denominator of IOPSC(r) is not affected by the head of the rule, yet the numerator can only decrease when additional head predicates are included."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-11-Sentence-1",
              "text": "This lemma is useful for rule learning, because it shows that if we discard a rule due to its low IOPSC, we do not need to check versions of the rule extended with additional head atoms, since their IOPSC values would be at most as low."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-12",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-12-Sentence-1",
              "text": "Algorithm 1: SHACLearner"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-2",
              "text": "Input: a KG K, a target predicate Pt"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-3",
              "text": "Parameters: max rule length l, max rule cardinality MCar, MinIOPSC, MinIOPHC, and MinTreeSC"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-4",
              "text": "Output: a set of IOP rules R and Tree"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-5",
              "text": "1: K' := Sampling(K, Pt)"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-6",
              "text": "2: (P, A) := Embeddings(K')"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-7",
              "text": "3: R' := empty"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-8",
              "text": "4: for k from 2 to l do"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-9",
              "text": "   Add PathFinding(K', Pt, P, A, k) to R'"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-10",
              "text": "end for"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-11",
              "text": "7: R := Ev(R', K, MCar, MinIOPSC, MinIOPHC)"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-12",
              "text": "8: Tree := GreedySearch(R, MinTreeSC)"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-13",
              "text": "9: return Tree and R"
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-7",
      "subtitle": "SHACL learning: IOP learning through representation learning",
      "paragraphs": [
        {
          "iri": "Section-7-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-1-Sentence-1",
              "text": "To mine IOP rules, we start with the open path rule learner OPRL and adapt its embedding-based OP rule learning to learn annotated IOP rules."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-2",
              "text": "We call this new IOP rule learner SHACLEARNER, shown in Algorithm 1."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-3",
              "text": "SHACLEARNER uses a sampling method Sampling, shown in Algorithm 2, to prune the entities and predicates that are less relevant to the target predicate to obtain a sampled knowledge graph."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-4",
              "text": "The sample is fed to an embedding learner, RESCAL, in Embeddings."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-5",
              "text": "Then in PathFinding, SHACLEARNER uses the computed embedding representations of predicates and entities in heuristic functions that inform the generation of IOP rules bounded by a maximum length."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-6",
              "text": "Then, potential IOP rules are evaluated, annotated, and filtered in Ev to produce annotated IOP rules."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-7",
              "text": "Eventually, a tree is discovered for each argument of each target predicate by aggregating mined IOP rules in GreedySearch."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-2-Sentence-1",
              "text": "While the overall algorithm structure of SHACLEARNER is similar to OPRL, as is the embedding-based scoring function, the following elements are novel in SHACLEARNER:"
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-2",
              "text": "OPRL cannot handle unary predicates while SHACLEARNER admits unary predicates both in the head and the body of IOP rules."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-3",
              "text": "SHACLEARNER can discover and evaluate IOP rules with minimum cardinality constraints in the head of the IOP rule, while OPRL is effectively limited to learning the special case of minimum cardinality 1 for all rules."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-4",
              "text": "For this reason, the evaluation method of SHACLEARNER, Ev, differs from the OPRL evaluation module."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-5",
              "text": "The aggregation module that produces trees out of learnt IOP rules, ready for translation to SHACL, is novel in SHACLEARNER."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-8",
      "subtitle": "SHACL learning: Sampling",
      "paragraphs": [
        {
          "iri": "Section-8-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-1-Sentence-1",
              "text": "In more detail, the Sampling() method in line 1 of Algorithm 1 computes a fragment of the KG K', consisting of a bounded number of entities that are related to the target predicate Pt."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-2",
              "text": "This sampling is essential since embedding learners (e.g., HOLE and RESCAL) cannot handle massive KGs with millions of entities (e.g., YAGO2)."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-3",
              "text": "The sampling method, first introduced, is shown in Algorithm 2."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-4",
              "text": "Since we search for IOP rules with up to l atoms (including the specific body target predicate, Pt), the entity set Esample and corresponding fact set K' contains the information needed for learning such rules."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-5",
              "text": "Predicates less relevant to the target predicate are pruned in the sampling process and no facts about those predicates remain in K'."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-2-Sentence-1",
              "text": "This simple approach reduces the size of the problem significantly, as discussed."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-2",
              "text": "For a KG K with entities E and facts F, the set of sampled entities for a target predicate will be of size 2l|F||E| in the worst case."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-3",
              "text": "Hence, the complexity of the sampling algorithm is O(|K|) where |K| = |E||F|."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-4",
              "text": "In the worst case, the sampled KG is the same as the original KG, but real-world KGs are sparse with only a very small proportion of entities associated with any predicate within distance l."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-5",
              "text": "In practice, the sampled KG is far smaller than the original KG."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-3-Sentence-1",
              "text": "Algorithm 2: Sampling"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-2",
              "text": "Input: a KG K, a target predicate Pt"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-3",
              "text": "Parameters: max rule length l"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-4",
              "text": "Output: K' a subgraph of the input graph"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-5",
              "text": "1: E1 = { e | there exists e': Pt(e, e') or Pt(e', e) }"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-6",
              "text": "2: for 2 <= k <= l do"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-7",
              "text": "3:   Ek = { e | there exists e': e' in E(k-1) and (Pi(e, e') or Pi(e', e)) }"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-8",
              "text": "4: end for"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-9",
              "text": "5: Esample = union (from i=1 to l) of Ei"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-10",
              "text": "6: K' = { Pi(e, e') | (e in Esample) and (e' in Esample) }"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-11",
              "text": "7: return K'"
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-9",
      "subtitle": "SHACL learning: Embeddings",
      "paragraphs": [
        {
          "iri": "Section-9-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-1-Sentence-1",
              "text": "After sampling, in line 2 Embeddings(), we compute predicate embeddings as well as subject and object argument embeddings for all predicates in the sampled K'."
            },
            {
              "iri": "Section-9-Paragraph-1-Sentence-2",
              "text": "The embedding is obtained from RESCAL as it can provide an extensive representation of predicates and entities as shown in previous heuristic rule learners."
            },
            {
              "iri": "Section-9-Paragraph-1-Sentence-3",
              "text": "Briefly, we use RESCAL to embed each entity e_i to a vector E_i in R^d and each predicate P_k to a matrix P_k in R^(d x d), where R is the set of real numbers and d is an integer parameter of RESCAL."
            },
            {
              "iri": "Section-9-Paragraph-1-Sentence-4",
              "text": "For each given fact P0(e1, e2), the following scoring function is computed: f(e1, P0, e2) = E1^T . P0 . E2."
            },
            {
              "iri": "Section-9-Paragraph-1-Sentence-5",
              "text": "The scoring function indicates the plausibility of the fact that e1 has relation P0 with e2."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-2-Sentence-1",
              "text": "In Embeddings() we additionally compute argument embeddings."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-2",
              "text": "To compute the subject (respectively object) argument embeddings of a predicate P_k, we aggregate the embeddings of entities that occur as the subject (respectively object) of P_k in the KG."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-3",
              "text": "Hence, for each predicate P_k we have two vectors, P1_k and P2_k, that represent the subject argument and object argument of P_k respectively."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-10",
      "subtitle": "SHACL learning: Generating and pruning rules",
      "paragraphs": [
        {
          "iri": "Section-10-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-1-Sentence-1",
              "text": "After that, in line 3 to line 7 of Algorithm 1, PathFinding() produces candidate IOP rules based on the embedding representation of the predicates involved in each rule."
            },
            {
              "iri": "Section-10-Paragraph-1-Sentence-2",
              "text": "The candidate rules are pruned by the scoring function heuristic for OP rules."
            },
            {
              "iri": "Section-10-Paragraph-1-Sentence-3",
              "text": "Due to the close relationship between OP and IOP rules, a high-scoring candidate OP rule suggests both a good OP rule and a good IOP rule."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-2-Sentence-1",
              "text": "An IOP rule Pt(x, y) -> P1(y, z) ^ P2(z, t) acts to connect entities satisfying the subject argument of the body predicate, Pt, to entities forming the object argument of the last predicate, P2, along a path of entities that satisfy a chain of predicates in the rule."
            },
            {
              "iri": "Section-10-Paragraph-2-Sentence-2",
              "text": "There is a relationship between the logical statement of the rule and certain properties in the embedding space."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-3-Sentence-1",
              "text": "1. The predicate arguments that have the same variable in the rule should have similar argument embeddings."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-2",
              "text": "For example, we should have the following similarities: P2_t ~ P1_1 and P2_1 ~ P2_1."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-4-Sentence-1",
              "text": "2. The whole path forms a composite predicate, like P*(x, t) = Pt(x, y) ^ P1(y, z) ^ P2(z, t)."
            },
            {
              "iri": "Section-10-Paragraph-4-Sentence-2",
              "text": "We compute the embedding representation of the composite predicate based on its components: P*(x, t) = Pt(x, y) . P1(y, z) . P2(z, t)."
            },
            {
              "iri": "Section-10-Paragraph-4-Sentence-3",
              "text": "Now we could check the plausibility of P*(x, t) for any pair of entities using the scoring function introduced earlier."
            },
            {
              "iri": "Section-10-Paragraph-4-Sentence-4",
              "text": "However, since we are interested in the existence of an entity-free rule, the following similarity will hold: 1 approx P1_t . Pt . P1 . P2 . P2_2."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-5-Sentence-1",
              "text": "Based on the above two properties, two scoring functions are defined to help heuristically mine the space of all possible IOP rules, producing a reduced set of candidate IOP rules."
            },
            {
              "iri": "Section-10-Paragraph-5-Sentence-2",
              "text": "The ultimate evaluation of an IOP rule will be done in the next step as described below."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-11",
      "subtitle": "SHACL learning: Efficient computation of quality measures",
      "paragraphs": [
        {
          "iri": "Section-11-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-1-Sentence-1",
              "text": "Now we focus our attention on the efficient matrix-computation of the quality measures that are novel for SHACLearner."
            },
            {
              "iri": "Section-11-Paragraph-1-Sentence-2",
              "text": "Ev() in Algorithm 1 first evaluates candidate rules on the small sampled KG, and selects only the rules with IOPsupp(r) >= 1."
            },
            {
              "iri": "Section-11-Paragraph-1-Sentence-3",
              "text": "They may still include a large number of redundant and low quality rules and so are further downselected based on their IOPSC and IOPHC calculated over the full KG."
            },
            {
              "iri": "Section-11-Paragraph-1-Sentence-4",
              "text": "We show next how to efficiently compute these measures over massive KGs using an adjacency matrix representation of the KG."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-2-Sentence-1",
              "text": "Let K = (E, F) with E = {e1, ..., en} be the set of all entities and P = {P1, ..., Pm} be the set of all predicates in F."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-2",
              "text": "We represent K as a set of square n x n adjacency matrices by defining the function A."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-3",
              "text": "Specifically, the [i, j]-th element A(Pk)[i, j] is 1 if the fact Pk(ei, ej) is in F, and 0 otherwise."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-4",
              "text": "Thus, A(Pk) is a matrix of binary values, and the set {A(Pk) | k in 1..m} represents K."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-3-Sentence-1",
              "text": "We illustrate the computation of IOPSC and IOPHC through an example."
            },
            {
              "iri": "Section-11-Paragraph-3-Sentence-2",
              "text": "Consider the IOP rule r: Pt(x, z0) -> P1(z0, x) ^ P2(z1, y)."
            },
            {
              "iri": "Section-11-Paragraph-3-Sentence-3",
              "text": "Let E = {e1, e2, e3} and F = {P1(e1, e2), P1(e2, e1), P1(e2, e3), P1(e3, e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3), Pt(e3, e2), Pt(e3, e3)}."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-4-Sentence-1",
              "text": "The adjacency matrices for the predicates P1, P2, and Pt are:"
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-2",
              "text": "A(P1) = [0 1 0; 1 0 1; 0 0 0],"
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-3",
              "text": "A(P2) = [0 1 0; 0 0 0; 0 1 1],"
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-4",
              "text": "A(Pt) = [0 0 0; 0 0 0; 0 1 1]."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-5-Sentence-1",
              "text": "For IOPSC and IOPHC (Definition 4), we need to calculate:"
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-2",
              "text": "1) The number of entities that satisfy the body of the rule, i.e. the count of e' such that there exists e'' with Pt(e'', e')."
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-3",
              "text": "2) The number of entities that satisfy the head of the rule, i.e. the count of e' such that there exists e'' with head_r(e'', e')."
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-4",
              "text": "3) The number of entities that join the head of the rule to its body, i.e. the count of e' for which there exist e'', e''' such that head_r(e'', e') and Pt(e''', e')."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-6-Sentence-1",
              "text": "For (1), we can read the pairs (e', e) directly from the matrix A(Pt)."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-2",
              "text": "To find distinct e's we sum each column and transpose to obtain the vector V^2(Pt)."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-3",
              "text": "Each non-zero element indicates a satisfying e, and the number of distinct e's is the count of non-zero elements."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-4",
              "text": "In the example, the only non-zero element in A(Pt) is A(Pt)[1, 3], and after summing columns and transposing we have V^2(Pt) = [0 1 2]^T, so {e2, e3} satisfies the head with count 2."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-7-Sentence-1",
              "text": "For (2), the pairs (e, e') satisfying the head are connected by the path P1, P2, ..., Pm."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-2",
              "text": "They can be obtained from the matrix product A(P1)*A(P2)*...*A(Pm), taking elements with a value >= Car for rules with cardinality Car."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-3",
              "text": "We find distinct e's by summing each row of this product to obtain the vector V^1(A(P1)*A(P2)*...*A(Pm))."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-4",
              "text": "Each element with value >= Car indicates a satisfying e, and the count of distinct e's is the count of non-zero elements in that vector."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-5",
              "text": "In the example, A(P1)*A(P2) = [[0,0,0],[0,2,1],[1,0,0]], and V^1(P1, P2) = [0,3,1]."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-6",
              "text": "Thus, for Car=1 we have satisfying entities e2 and e3 with a count of 2."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-7",
              "text": "For Car=2, only e2 satisfies the rule, so the count is 1."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-8-Sentence-1",
              "text": "Computing (3) is then straightforward."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-2",
              "text": "The row index of non-zero elements of V^2(Pt) indicates entities that satisfy the second argument of the body, and the row index of elements with value >= Car of V^1(A(P1)*A(P2)*...*A(Pm)) indicates entities that satisfy the first argument of the head."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-3",
              "text": "We find the entities satisfying both conditions by pairwise multiplication of those vectors."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-4",
              "text": "For the example, when Car=1, the set of such entities is {e2, e3} with count 2."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-5",
              "text": "When Car=2, the set is {e2} with count 1."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-9-Sentence-1",
              "text": "Hence, we could have three versions of r, namely r1, r2, and r3, with three different Car values 1, 2, and 3 respectively."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-2",
              "text": "For Car=1, IOPsupp(r1) = |{e2, e3}| = 2."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-3",
              "text": "From Definition 4, IOPHC(r1) = 2/2 and IOPSC(r1) = 2/2."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-4",
              "text": "For Car=2, IOPsupp(r2) = |{e2}| = 1, IOPHC(r2) = 1/1, and IOPSC(r2) = 1/2."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-5",
              "text": "In this case, for Car=3 we get the same values as for Car=2."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-12",
      "subtitle": "SHACL learning: From IOP rules to tree shapes",
      "paragraphs": [
        {
          "iri": "Section-12-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-1-Sentence-1",
              "text": "Now in line 8 of Algorithm 1 we turn to deriving SHACL trees, as illustrated in Fig. 3, from annotated IOP rules."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-2",
              "text": "This procedure is used in SHACLearner."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-3",
              "text": "We use a greedy search to aggregate the IOP rules for the subject argument and the object argument of each target predicate."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-4",
              "text": "For example, the shape of Fig. 2 has the following tree: human(x, x) -> citizenOf(x, z1) ^ country(z1, z1) ^ father(x, z2) ^ human(z2, z2) ^ nativeLanguage(x, z3) ^ language(z3, z3)."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-2-Sentence-1",
              "text": "The general form of a tree is given by P't(x, z0) -> exists(z*s, y*s) P'1( z0, z1 ) ^ P'1_1(z1, z2 ) ^ ... ^ P'n_1(z(n-1), y1 ) ^ P'1_2( z0, z1 ) ^ P'2_2(z1, z2 ) ^ ... ^ P'm_2(z(m-1), y2 ) ... ^ P'1^q(z0, z1^q ) ^ P'2^q(z1^q, z2^q ) ^ ... ^ P't^q(z(q-1)^q, y^q)."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-2",
              "text": "Here each P'i is either a predicate in the KG or its reverse with the subject and object bindings swapped."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-3",
              "text": "Free variables are universally quantified at the outside."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-4",
              "text": "In a tree we say the body of the shape is Pt and its head is the sequence of paths or branches, Path1 ^ Path2 ^ ... ^ Pathq."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-5",
              "text": "Hence we instantiate the atomic body to predict an instance of the head."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-6",
              "text": "All head branches and the body join in one shared variable, z0."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-7",
              "text": "To assess the quality of a tree we follow the quality measures for IOP rules."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-3-Sentence-1",
              "text": "Definition 6 (Tree: Treesupp, TreeSC)."
            },
            {
              "iri": "Section-12-Paragraph-3-Sentence-2",
              "text": "Let r be a tree of the above form."
            },
            {
              "iri": "Section-12-Paragraph-3-Sentence-3",
              "text": "Then a set of pairs of entities (e, e1), ..., (e, eq) satisfies the head of r, denoted headr(e), if there exist sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' in the KG such that P1(e, e1), P2(e1, e2), ..., Pt(e(q-1)', eq) are facts in the KG."
            },
            {
              "iri": "Section-12-Paragraph-3-Sentence-4",
              "text": "A pair of entities (e'', e) satisfies the body of r, denoted Pt(e'', e), if Pt(e'', e) is a fact in the KG."
            },
            {
              "iri": "Section-12-Paragraph-3-Sentence-5",
              "text": "The tree support and tree standard confidence of r are given respectively by Treesupp(r) = |{ e : there exists e' such that headr(e) and Pt(e', e) }| and TreeSC(r) = Treesupp(r) / |{ e' : Pt(e'', e') }|."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-4-Sentence-1",
              "text": "To learn each tree we employ a greedy search, GreedySearch, in line 8 of Algorithm 1."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-2",
              "text": "To do so, we sort all rules that bind the subject argument (for the left-hand tree in Fig. 3) in a non-increasing order with respect to IOPSC."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-3",
              "text": "Then we iteratively try to add the first rule in the list to the tree and compute the TreeSC."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-4",
              "text": "If the TreeSC drops below the defined threshold (TreeSCMIN) we dismiss the rule; otherwise we add it to the tree."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-5",
              "text": "For the right-hand tree we do the same with the rules that bind the object argument of the target predicate."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-6",
              "text": "Since a conjunction of IOP rules forms a tree, TreeSC is bounded above by the minimum IOPSC of its constituent IOP rules."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-5-Sentence-1",
              "text": "These uncertain shapes can be presented as standard SHACL shapes by ignoring those that fail to satisfy minimum quality thresholds and deleting the quality annotations."
            },
            {
              "iri": "Section-12-Paragraph-5-Sentence-2",
              "text": "Aside from the cardinality, the tree may be straightforwardly interpreted as a set of SHACL shapes by reading off every path from the target predicate terminating at a node in the tree."
            },
            {
              "iri": "Section-12-Paragraph-5-Sentence-3",
              "text": "The body predicate is declared as sh:nodeShape and the path of head predicates as nested sh:path declarations within a sh:property declaration."
            },
            {
              "iri": "Section-12-Paragraph-5-Sentence-4",
              "text": "Cardinality of a path is read from the annotation of the branch at the terminating node, and declared by sh:minCount within the property declaration."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-6-Sentence-1",
              "text": "SHACLearner supports all the SHACL Core features (node and property shapes)."
            },
            {
              "iri": "Section-12-Paragraph-6-Sentence-2",
              "text": "The limitations of SHACLearner with respect to SHACL Core are: (1) it treats all properties, both object and datatype properties, as plain predicates so there is no distinction; (2) it does not perform any kind of data type validation; and (3) of cardinality expressions, only min cardinality is handled."
            },
            {
              "iri": "Section-12-Paragraph-6-Sentence-3",
              "text": "SHACLearner does not mine SPARQL-like constraints (SHACL-SPARQL)."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-7-Sentence-1",
              "text": "3.7.1. Tree shapes are useful for human interaction"
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-8-Sentence-1",
              "text": "Shapes offer KG documentation as readable patterns and also provide a way to validate a KG."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-2",
              "text": "Our novel tree shapes can additionally be used for KG-completion."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-3",
              "text": "While there are several methods proposed to complete KGs automatically by predicting missing facts, these methods traverse the KG in a breadth-first manner."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-4",
              "text": "Our proposed tree shapes instead provide an opportunity to work sequentially along a path of dependent questions such as birthPlace(Trump, ?) followed by capitalOf(?, ?)."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-5",
              "text": "The latter question cannot even be asked until we have an answer for the former question, and the existence of an answer to the former gives us the confidence to proceed to the next question along the path."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-6",
              "text": "This completion strategy is depth-first as it works through a shape tree."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-7",
              "text": "Importantly, when we want to ask such completion questions of a human, this depth-first questioning strategy will reduce the cognitive load due to the contextual connections between successive questions."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-8",
              "text": "This strategy for human-KG-completion is applied in a smart KG editor using trees that can be generated by SHACLearner."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-9-Sentence-1",
              "text": "Tree shapes can also help a human expert extract a more intuitive concise sub-tree out of a deeper, more complex tree when desired for human interpretability."
            },
            {
              "iri": "Section-12-Paragraph-9-Sentence-2",
              "text": "If a tree with confidence TreeSCorig is pruned either by removing a branch or by removing an entire path of shape predicates, it remains a valid tree with a new TreeSCnew, with the property that TreeSCnew >= TreeSCorig."
            },
            {
              "iri": "Section-12-Paragraph-9-Sentence-3",
              "text": "Hence, by pruning a tree we obtain a simpler tree with higher confidence in the KG."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-13",
      "subtitle": "Related work",
      "paragraphs": [
        {
          "iri": "Section-13-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-1-Sentence-1",
              "text": "There are some exploratory attempts to address learning SHACL shapes from KGs."
            },
            {
              "iri": "Section-13-Paragraph-1-Sentence-2",
              "text": "They are procedural methods without logical foundations and are not shown to be scalable to handle real-world KGs."
            },
            {
              "iri": "Section-13-Paragraph-1-Sentence-3",
              "text": "They work with a small amount of data and the representation formalism they use for their output is difficult to compare with the IOP rules which we use in this paper."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-2-Sentence-1",
              "text": "One approach carries out the task in a semi-automatic manner: it provides a sample of data to an off-the-shelf graph structure learner and provides the output in an interactive interface for a human user to create SHACL shapes."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-3-Sentence-1",
              "text": "Another work provides an interactive framework to define SHACL shapes with different complexities, including nested patterns that are similar to the trees that we use."
            },
            {
              "iri": "Section-13-Paragraph-3-Sentence-2",
              "text": "A formalisation of the approach is given, but there are no shape quality measures that are essential for large scale shape mining."
            },
            {
              "iri": "Section-13-Paragraph-3-Sentence-3",
              "text": "Because the paper does not provide a system that discovers patterns from massive KGs, we cannot deploy their method for comparison purposes."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-4-Sentence-1",
              "text": "There are some works that use existing ontologies for KGs to generate SHACL shapes."
            },
            {
              "iri": "Section-13-Paragraph-4-Sentence-2",
              "text": "One work uses two different kinds of knowledge to automatically generate SHACL shapes: ontology constraint patterns as well as input ontologies."
            },
            {
              "iri": "Section-13-Paragraph-4-Sentence-3",
              "text": "In our work, we use the KG itself to discover the shapes, without relying on external modelling artefacts."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-5-Sentence-1",
              "text": "From an application point of view, there are papers which investigate the application of SHACL shapes to the validation of RDF databases, but these do not contribute to the discovery of shapes."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-6-Sentence-1",
              "text": "One proposal suggests an extended validation framework for the interaction between inference rules and SHACL shapes in KGs."
            },
            {
              "iri": "Section-13-Paragraph-6-Sentence-2",
              "text": "When a set of rules and shapes are provided, a method is proposed to detect which shapes could be violated by applying a rule."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-7-Sentence-1",
              "text": "There are some attempts to provide logical foundations for the semantics of the SHACL language, including one that presents the semantics of recursive SHACL shapes."
            },
            {
              "iri": "Section-13-Paragraph-7-Sentence-2",
              "text": "By contrast, in our work we approach SHACL semantics in the reverse direction."
            },
            {
              "iri": "Section-13-Paragraph-7-Sentence-3",
              "text": "We start with logical formalisms with both well-defined semantics and motivating use cases to derive shapes that can be trivially expressed in a fragment of SHACL."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-14",
      "subtitle": "Experiments: Transforming KGs with type predicates for experiments",
      "paragraphs": [
        {
          "iri": "Section-14-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-1-Sentence-1",
              "text": "We have implemented our SHACLEARNER based on Algorithm 1 and conducted experiments to assess it."
            },
            {
              "iri": "Section-14-Paragraph-1-Sentence-2",
              "text": "Our experiments are designed to prove the effectiveness of our SHACLEARNER at capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs (KGs)."
            },
            {
              "iri": "Section-14-Paragraph-1-Sentence-3",
              "text": "Since our proposed system is the first method to learn shapes from massive KGs automatically, we have no benchmark with which to compare."
            },
            {
              "iri": "Section-14-Paragraph-1-Sentence-4",
              "text": "However, the performance of our system shows that it can handle the task satisfactorily and can be applied in practice."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-2-Sentence-1",
              "text": "We demonstrate that SHACLEARNER is scalable so it can handle real-world massive KGs including DBpedia with over 11 million facts."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-2",
              "text": "SHACLEARNER can learn several shapes each for various target predicates."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-3",
              "text": "SHACLEARNER can discover diverse shapes with respect to the quality measurements of IOPSC and IOPHC."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-4",
              "text": "SHACLEARNER discovers shapes of varying complexity and diversity with respect to length and cardinality."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-5",
              "text": "SHACLEARNER discovers every high-quality rule (with IOPSC greater than or equal to 0.9) for a small complete KG, by comparison with an ideal learner."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-6",
              "text": "SHACLEARNER discovers more complex shapes (trees) by aggregating learned IOP rules efficiently."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-3-Sentence-1",
              "text": "Our four benchmark KGs are described in Table 1."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-2",
              "text": "Three benchmarks, namely YAGO2s, Wikidata, and DBpedia, are common KGs and have been used in rule learning experiments previously."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-3",
              "text": "The fourth is a small synthetic KG, Poker, for analyzing the completeness of our algorithm."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-4",
              "text": "The Poker KG was adapted from the classic version to be a rich and correct KG for evaluation experiments."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-5",
              "text": "Each poker hand comprises five playing cards drawn from a deck with thirteen ranks and four suits."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-6",
              "text": "Each card is described using two attributes: suit and rank."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-7",
              "text": "Each hand is assigned to any or all of nine different ranks, including High Card, One Pair, Two Pair, etc."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-8",
              "text": "We randomly generate five hundred poker hands and all facts related to them to build a small but complete and correct KG."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-9",
              "text": "Twenty-eight out of thirty-five predicates are unary predicates, such as fullHouse(x) where x is a specific poker hand."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-4-Sentence-1",
              "text": "All experiments were conducted on an Intel Xeon CPU E5-2650 v4 at 2.20 GHz, with 66 GB RAM and running CentOS 8."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-5-Sentence-1",
              "text": "Transforming KGs with type predicates for experiments is necessary since real-world KG models treat predicates and entities in a variety of ways."
            },
            {
              "iri": "Section-14-Paragraph-5-Sentence-2",
              "text": "We require a common representation for this work that clearly distinguishes entities and predicates."
            },
            {
              "iri": "Section-14-Paragraph-5-Sentence-3",
              "text": "We employ an abstract model that is used in Description Logic ontologies, where classes and types are named unary predicates, and roles (also called properties) are named binary predicates."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-6-Sentence-1",
              "text": "Presenting the class and type information as unary predicates also allows us to learn fully abstracted (entity-free) shapes instead of partially instantiated shapes."
            },
            {
              "iri": "Section-14-Paragraph-6-Sentence-2",
              "text": "This feature is important since learning partially instantiated shapes can cause an explosion in the space of possible shapes."
            },
            {
              "iri": "Section-14-Paragraph-6-Sentence-3",
              "text": "Using self-loop links for unary predicates is convenient syntactic sugar to keep the presentation in the triple format, as for the original input KGs."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-7-Sentence-1",
              "text": "In real-world KGs, concept or class membership may be modeled as entity instances of a binary fact."
            },
            {
              "iri": "Section-14-Paragraph-7-Sentence-2",
              "text": "For example, DBpedia contains predicates where the second arguments of these predicates are types or classes."
            },
            {
              "iri": "Section-14-Paragraph-7-Sentence-3",
              "text": "Instead, we choose to model types and classes with unary predicates."
            },
            {
              "iri": "Section-14-Paragraph-7-Sentence-4",
              "text": "To do so, we make new predicates from facts in the form, where x is the name of an album."
            },
            {
              "iri": "Section-14-Paragraph-7-Sentence-5",
              "text": "Then we produce new unary facts based on the new predicate and related facts."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-8-Sentence-1",
              "text": "We use the two type-like predicates from DBpedia 3.8 and the one from Wikidata to generate our unary predicates and facts."
            },
            {
              "iri": "Section-14-Paragraph-8-Sentence-2",
              "text": "These predicates each have a class as their second argument."
            },
            {
              "iri": "Section-14-Paragraph-8-Sentence-3",
              "text": "To prune the classes with few instances for which learning may be pointless, we consider only our unary predicates which have at least one hundred facts."
            },
            {
              "iri": "Section-14-Paragraph-8-Sentence-4",
              "text": "We retain the original predicates and facts in the KG as well as extending it with our new ones."
            },
            {
              "iri": "Section-14-Paragraph-8-Sentence-5",
              "text": "In Table 1, we report the specifications of two benchmarks where we have added the unary predicates and facts."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-15",
      "subtitle": "Experiments: Learning IOP rules",
      "paragraphs": [
        {
          "iri": "Section-15-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-1-Sentence-1",
              "text": "We follow the established approach for evaluating KG rule-learning methods, that is, measuring the quantity and quality of distinct rules learnt."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-2",
              "text": "Rule quality is measured by Inverse open path standard confidence (IOPSC) and Inverse open path head coverage (IOPHC)."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-3",
              "text": "We randomly select 50 target predicates from Wikidata and DBPedia unary predicates (157 and 355 respectively)."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-4",
              "text": "We use all binary predicates of YAGO2s (i.e., 37) as target predicates."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-5",
              "text": "Each binary target predicate serves as two target predicates, once in the straight form (where the object argument of the predicate is the common variable to connect the head) and secondly in its reverse form (where the subject argument serves to connect)."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-6",
              "text": "In this manner, we ensure that the results of SHACLEARNER on YAGO2s with its binary predicates as targets is comparable with the results for Wikidata and DBpedia that have unary predicates as targets."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-7",
              "text": "Hence for YAGO2s we have 74 target predicates."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-8",
              "text": "A 10 hour limit is set for learning each target predicate."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-2-Sentence-1",
              "text": "Table 2 shows the number of rules, the average numbers of quality IOP rules found, the proportion of target predicates for which at least one IOP rule was found, and the running times in hours, averaged over the targets."
            },
            {
              "iri": "Section-15-Paragraph-2-Sentence-2",
              "text": "Only high quality rules meeting minimum quality thresholds are included in these figures, that is, with IOPSC greater than or equal to 0.1 and IOPHC greater than or equal to 0.01, thresholds established in comparative work."
            },
            {
              "iri": "Section-15-Paragraph-2-Sentence-3",
              "text": "These thresholds are quite low, so rules of low quality are also included."
            },
            {
              "iri": "Section-15-Paragraph-2-Sentence-4",
              "text": "Generally, selecting a low threshold at the time of learning is a safe choice since the rules can be further pruned by applying stricter quality thresholds later on."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-3-Sentence-1",
              "text": "SHACLEARNER shows satisfactory performance in terms of both the runtime and the numbers of quality rules mined."
            },
            {
              "iri": "Section-15-Paragraph-3-Sentence-2",
              "text": "Note that rules found have a variety of lengths and cardinalities."
            },
            {
              "iri": "Section-15-Paragraph-3-Sentence-3",
              "text": "To better present the quality performance of rules, we illustrate the distribution of rules with respect to the features, IOPSC, IOPHC, cardinality and length, and also IOPSC vs length."
            },
            {
              "iri": "Section-15-Paragraph-3-Sentence-4",
              "text": "In the following, the proportion of mined rules having the various feature values is presented, to more evenly demonstrate the quality of performance over the three very different KGs."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-4-Sentence-1",
              "text": "The distribution of mined rules with respect to their IOPSC and IOPHC is shown in the figures."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-2",
              "text": "In the left-hand chart we observe a consistent decrease in the proportion of quality rules as the IOPSC increases."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-3",
              "text": "In the right hand chart we see a similar pattern for increasing IOPHC, but the decrease is not as consistent, showing there must be many relevant rules with many covered head instances."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-4",
              "text": "Over all benchmarks, the majority of learned rules have lower IOPSC and IOPHC."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-5",
              "text": "This is expected because the statistical likelihood of poor quality rules is much higher."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-6",
              "text": "Indeed, we show experimentally that our pruning techniques, that are necessary for scalability, prune away predominantly lower quality rules."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-5-Sentence-1",
              "text": "With respect to IOPSC, proportionally more quality rules are learnt from DBpedia than from the other KGs, with Wikidata coming second, ahead of YAGO2s."
            },
            {
              "iri": "Section-15-Paragraph-5-Sentence-2",
              "text": "This phenomenon might be a result of our deliberate selection of type-like unary predicates as targets for DBPedia and Wikidata, whereas for YAGO2s we use every one of the 37 binary predicates as a target."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-6-Sentence-1",
              "text": "The distribution of mined rules with respect to their cardinalities shows that the largest proportion of rules has a cardinality of 1, as expected, as they have the least stringent requirements to be met in the KG."
            },
            {
              "iri": "Section-15-Paragraph-6-Sentence-2",
              "text": "We observe an expected decrease with greater cardinalities as they demand tighter restrictions to be satisfied."
            },
            {
              "iri": "Section-15-Paragraph-6-Sentence-3",
              "text": "YAGO2 demonstrates a tendency towards higher cardinalities than the other KGs, possibly a result of its more curated development."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-7-Sentence-1",
              "text": "The distribution of mined rules with respect to their lengths shows that as the length increases, the number of rules would increase since the space of possible rules grows, and this is what we see."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-8-Sentence-1",
              "text": "For a concrete example of SHACL learning, we show the following three IOP rules mined from DBpedia in the experiments."
            },
            {
              "iri": "Section-15-Paragraph-8-Sentence-2",
              "text": "The IOPSC, IOPHC, and Cardinality annotations respectively prefix each rule."
            },
            {
              "iri": "Section-15-Paragraph-8-Sentence-3",
              "text": "The first rule indicates x should belong to an album that has y as record label."
            },
            {
              "iri": "Section-15-Paragraph-8-Sentence-4",
              "text": "The second rule requires a song (x) to have at least one producer while the third rule requires a song to have at least two producers, and these two rules are distinguished by the cardinality annotation."
            },
            {
              "iri": "Section-15-Paragraph-8-Sentence-5",
              "text": "As we discussed, the third rule is more constraining than the second, so the confidence of the third rule is lower than the confidence of the second, based on the KG data."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-9-Sentence-1",
              "text": "Using rules found in the experiments, we further illustrate the practical meaning of the IOPSC and IOPHC qualities."
            },
            {
              "iri": "Section-15-Paragraph-9-Sentence-2",
              "text": "While IOPSC determines the confidence of a rule based on counting the proportion of target predicate instances for which the rule holds true in the KG, IOPHC indicates the proportion of rule consequent instances that are justified by target predicate instances in the KG, thereby indicating the relevance of the rule to the target."
            },
            {
              "iri": "Section-15-Paragraph-9-Sentence-3",
              "text": "In Wikidata+UP, all unary predicates are occupations such as singer or entrepreneur, so all the entities which have these types turn out to be persons even though there is no explicit person type in our KG."
            },
            {
              "iri": "Section-15-Paragraph-9-Sentence-4",
              "text": "Thus, the occupations all have very similar IOP rules about each of them with high IOPSC and low IOPHC."
            },
            {
              "iri": "Section-15-Paragraph-9-Sentence-5",
              "text": "On the other hand, for these unary occupation predicates there are also some IOP rules with high IOPHC that apply only to one specific unary predicate."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-16",
      "subtitle": "Experiments: Completeness analysis of IOP rule learning",
      "paragraphs": [
        {
          "iri": "Section-16-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-1-Sentence-1",
              "text": "SHACLEARNER uses two tricks to significantly reduce the search space for IOP rules in PathFinding of Algorithm 1, namely the prior Sampling and the heuristic pruning used inside PathFinding that uses the embedding-based scoring function."
            },
            {
              "iri": "Section-16-Paragraph-1-Sentence-2",
              "text": "We conduct experiments to explore how these two pruning methods affect SHACLEARNER with regard to the quality and quantity of learnt rules."
            },
            {
              "iri": "Section-16-Paragraph-1-Sentence-3",
              "text": "To do so, we create three variants of SHACLEARNER as follows."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-2-Sentence-1",
              "text": "(-S+H): SHACLEARNER that does not sample and so uses the complete input KG in all components, including embedding learning, heuristic pruning, and ultimate evaluation."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-2",
              "text": "(+S-H): SHACLEARNER that samples but does not use heuristic pruning and so generates rules based on the sampled KG and evaluates rules on the complete KG."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-3",
              "text": "(-S-H): SHACLEARNER that does not use sampling nor heuristic pruning."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-4",
              "text": "This system is an ideal IOP rule learner that generates and evaluates all possible rules up to the maximum length parameter."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-5",
              "text": "Since this method is a brute-force search, it cannot handle any real-world KG such as those we used in the performance evaluation."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-6",
              "text": "(+S+H): SHACLEARNER with its full functionality."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-3-Sentence-1",
              "text": "Since we use only the small Poker KG for this experiment, we can handle the task without sampling or heuristic mechanisms."
            },
            {
              "iri": "Section-16-Paragraph-3-Sentence-2",
              "text": "We use all 28 unary predicates as the target predicates."
            },
            {
              "iri": "Section-16-Paragraph-3-Sentence-3",
              "text": "The first row shows the number of IOP rules that are learnt by ideal, modified SHACLEARNER (-S-H) with no pruning, for all target predicates, separated into various IOPSC intervals."
            },
            {
              "iri": "Section-16-Paragraph-3-Sentence-4",
              "text": "The latter rows show, for each variant, the percentage difference in the number of rules found, relative to the first row."
            },
            {
              "iri": "Section-16-Paragraph-3-Sentence-5",
              "text": "The last row corresponds to unmodified SHACLEARNER of Algorithm 1."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-4-Sentence-1",
              "text": "For example, consider the first column (the number of learnt rules with IOPSC in range of [0.1, 0.3))."
            },
            {
              "iri": "Section-16-Paragraph-4-Sentence-2",
              "text": "In the first row, we have 163 rules learnt by ideal rule learner (SHACLEARNER (-S-H)) that is inefficient yet complete."
            },
            {
              "iri": "Section-16-Paragraph-4-Sentence-3",
              "text": "In the second row, we have the performance of the SHACLEARNER (-S+H), the system without sampling, but with the heuristic rule learning module, in comparison with the ideal rule learner (SHACLEARNER (-S-H)), given as -10%."
            },
            {
              "iri": "Section-16-Paragraph-4-Sentence-4",
              "text": "That means SHACLEARNER (-S+H) learns 146 rules with IOPSC in range of [0.1, 0.3): 17 or 10% fewer rules than the ideal learner."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-5-Sentence-1",
              "text": "We observe that SHACLEARNER does not miss any rules of the highest quality, i.e., with IOPSC greater than or equal to 0.9."
            },
            {
              "iri": "Section-16-Paragraph-5-Sentence-2",
              "text": "SHACLEARNER\u2019s pruning methods cause it to fail to discover more rules of lower quality, with the number of missing rules increasing as quality decreases."
            },
            {
              "iri": "Section-16-Paragraph-5-Sentence-3",
              "text": "This is a reassuring property, since the goal of pruning is to improve the computational performance without missing high-quality rules."
            },
            {
              "iri": "Section-16-Paragraph-5-Sentence-4",
              "text": "In real applications, we will typically retain and action only the highest quality rules."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-6-Sentence-1",
              "text": "We observe that, unlike the other pruning variants, using heuristic pruning alone in (-S+H) does not uniformly increase in effectiveness with decreasing rule quality."
            },
            {
              "iri": "Section-16-Paragraph-6-Sentence-2",
              "text": "This may be because using the complete KG for learning rules about all target predicates could harm the quality of the learnt embeddings used in the scoring function of SHACLEARNER."
            },
            {
              "iri": "Section-16-Paragraph-6-Sentence-3",
              "text": "The better quality of embeddings extracted from the sampled KG arises from our sampling method that creates a KG that is customised for the target predicate."
            },
            {
              "iri": "Section-16-Paragraph-6-Sentence-4",
              "text": "All entities in the sampled KG are either directly related to the target predicate or close neighbours of directly related entities."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-17",
      "subtitle": "Experiments: Learning trees from IOP rules",
      "paragraphs": [
        {
          "iri": "Section-17-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-1-Sentence-1",
              "text": "Now we turn to presenting results for the trees that are built based on the IOP rules discovered in the experiments."
            },
            {
              "iri": "Section-17-Paragraph-1-Sentence-2",
              "text": "We report the characteristics of discovered trees and use a value of 0.1 for the TreeSCMIN parameter, showing average TreeSC for each KG, along with the average number of branches in the trees and the average tree-building runtime."
            },
            {
              "iri": "Section-17-Paragraph-1-Sentence-3",
              "text": "The number of trees for each KG is defined by the number of target predicates for which we have at least one IOP rule."
            }
          ]
        },
        {
          "iri": "Section-17-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-2-Sentence-1",
              "text": "The results show the running time for aggregating IOP rules into trees is lower than the initial IOP mining time by a factor greater than 10."
            },
            {
              "iri": "Section-17-Paragraph-2-Sentence-2",
              "text": "If, on the other hand, we wanted to discover such complex shapes from scratch, it would be exhaustively time-consuming due to the sensitivity of rule learners to the maximum length of rules."
            },
            {
              "iri": "Section-17-Paragraph-2-Sentence-3",
              "text": "The number of potential rules in the search space grows exponentially with the maximum number of predicates of the rules."
            }
          ]
        },
        {
          "iri": "Section-17-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-3-Sentence-1",
              "text": "The average number of branches in the mined trees are 50%, 31%, and 56% of the corresponding number of mined rules."
            },
            {
              "iri": "Section-17-Paragraph-3-Sentence-2",
              "text": "Hence, by imposing the additional tree-shaped constraint over the basic IOP-shaped constraint, at least 44% of IOP rules are pruned."
            }
          ]
        },
        {
          "iri": "Section-17-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-4-Sentence-1",
              "text": "For an example of tree shape learning, we show a fragment of a 39-branched tree mined from DBpedia by aggregating IOP rules in the experiments."
            },
            {
              "iri": "Section-17-Paragraph-4-Sentence-2",
              "text": "Here, the first annotation value (0.13) presents the SC of the tree and the subsequent values at the beginning of each branch indicate the branch cardinality."
            },
            {
              "iri": "Section-17-Paragraph-4-Sentence-3",
              "text": "This tree can be read as saying that a song has an album with a record label, an album with two producers, an album with a genre, and an artist who is a musical artist."
            }
          ]
        },
        {
          "iri": "Section-17-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-5-Sentence-1",
              "text": "As can be seen here, there remains an opportunity for improving tree shapes for simplicity and easier interpretation by unifying some variables that occur in predicates that occur in multiple branches."
            },
            {
              "iri": "Section-17-Paragraph-5-Sentence-2",
              "text": "We plan to investigate this potential post-processing step in future work."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-18",
      "subtitle": "Conclusion",
      "paragraphs": [
        {
          "iri": "Section-18-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-1-Sentence-1",
              "text": "In this paper we propose a method to learn SHACL shapes from KGs as a way to describe KG patterns, to validate KGs, and also to support new data entry."
            },
            {
              "iri": "Section-18-Paragraph-1-Sentence-2",
              "text": "For entities that satisfy target predicates, our shapes describe conjunctive paths of constraints over properties, enhanced with minimum cardinality constraints."
            },
            {
              "iri": "Section-18-Paragraph-1-Sentence-3",
              "text": "We reduce the SHACL learning problem to learning a novel kind of rules, Inverse Open Path rules (IOP)."
            },
            {
              "iri": "Section-18-Paragraph-1-Sentence-4",
              "text": "We introduce rule quality measures IOP Standard Confidence, IOP Head Coverage, and Cardinality which augment the rules."
            }
          ]
        },
        {
          "iri": "Section-18-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-2-Sentence-1",
              "text": "IOPSC effectively extends SHACL with shapes, representing the quantified uncertainty of a candidate shape to be selected for interestingness or for KG verification."
            },
            {
              "iri": "Section-18-Paragraph-2-Sentence-2",
              "text": "We also propose a method to aggregate learnt IOP rules in order to discover more complex shapes, that is, trees."
            },
            {
              "iri": "Section-18-Paragraph-2-Sentence-3",
              "text": "The shapes support efficient and interpretable human validation in a depth-first manner and are employed, for example, in an editor called Schimatos for manual knowledge graph completion."
            },
            {
              "iri": "Section-18-Paragraph-2-Sentence-4",
              "text": "The shapes can also be used to complete information triggered by entities with only a type or class declaration by automatically generating dynamic data entry forms."
            }
          ]
        },
        {
          "iri": "Section-18-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-3-Sentence-1",
              "text": "In this manual mode, they can also be used more traditionally to complete missing facts for a target predicate, as well as other predicates related to the target, while enabling the acquisition of facts about entities that are entirely missing from the KG."
            },
            {
              "iri": "Section-18-Paragraph-3-Sentence-2",
              "text": "To learn such shapes we adapt an embedding-based Open Path Rule Learner (OPRL) by introducing the following novel components: (1) we propose an IOP rule language that allows us to mine rules with open variables, with one predicate forming the body and a chain of predicates as the head; (2) we introduce cardinality constraints and tree shapes for more expressive patterns; and (3) we propose an efficient method to evaluate IOP rules and trees by exactly computing the quality measures of each rule using fast matrix and vector operations."
            }
          ]
        },
        {
          "iri": "Section-18-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-4-Sentence-1",
              "text": "Our experiments show that SHACLearner can mine IOP rules of various lengths, cardinalities, and qualities from three massive real-world benchmark KGs including Yago, Wikidata, and DBpedia."
            },
            {
              "iri": "Section-18-Paragraph-4-Sentence-2",
              "text": "Learning shape constraints from schema-free knowledge bases, such as most modern KGs, is a challenging task, beginning with the formalism of constraints that determine the scope of knowledge that can be acquired."
            },
            {
              "iri": "Section-18-Paragraph-4-Sentence-3",
              "text": "The next challenge is designing an efficient learning method, where dealing with uncertainty in the constraints and the learning process adds an extra dimension of challenge but also adds utility."
            },
            {
              "iri": "Section-18-Paragraph-4-Sentence-4",
              "text": "A good learning algorithm should scale gracefully so that discovered constraints are relatively more certain than those that are missed, and SHACLearner establishes a benchmark for this problem."
            }
          ]
        },
        {
          "iri": "Section-18-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-5-Sentence-1",
              "text": "In future work, we will validate the shapes we learn with SHACLearner via formal human-expert evaluation and further extend the expressivity of the shapes we can discover."
            },
            {
              "iri": "Section-18-Paragraph-5-Sentence-2",
              "text": "We also propose to redesign the SHACLearner algorithm for a MapReduce implementation to handle extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata."
            }
          ]
        }
      ]
    }
  ],
  "summary": "Knowledge Graphs (KGs) have gained popularity since Google's knowledge panels in 2012. KGs are large databases with weak inference rules, and SHACL is a W3C standard for graph data constraints. Many KGs lack shape constraints, hindering their maintenance. We propose Inverse Open Path (IOP) rules to define shapes as paths over connected entities, enhanced with cardinality constraints. We introduce SHACLEARNER, a method for learning high-quality IOP rules from KGs, demonstrating its effectiveness on large KGs like YAGO2s, DBpedia, and Wikidata, showing it can learn diverse and high-quality shapes.\n\nInterest in enterprise knowledge graphs (KGs) increased after Google Search's knowledge panels were launched in 2012. KGs, while diverse, often lack completeness due to the dynamic nature of knowledge and resource limitations, as seen with Wikidata. They adopt a data-first approach, allowing contributions without strict schemas. SHACL, recommended by W3C in 2017, defines constraints on KGs as shapes. This paper presents SHACLEARNER, a system that extracts shapes from KG data using Inverse Open Path (IOP) rules, enhancing KGs with cardinality constraints and quality measures. It details the SHACL learning method, related work, and experimental findings.\n\nThis section covers closed path (CP) and open path rules in knowledge graphs (KGs), which consist of entities and RDF triples. CP rules, utilized in systems like RLvLR and SCALEKB, enable the inference of new facts from existing ones. Their effectiveness is evaluated using support, standard confidence (SC), and head coverage (HC), where support counts instances satisfying both the body and head of a rule, while SC and HC measure rule quality and explanatory power.\n\nOPRL for active knowledge graph completion uses open path (OP) rules structured as P1(z0, z1) \u2227 P2(z1, z2) \u2227 ... \u2227 Pn(zn\u22121, y) \u2192 \u2203x Pt(x, z0). Variables are classified as closed if they appear in multiple predicates, while open variables do not. OP rules, featuring two open variables y and x, indicate facts like spouse(x, y) leading to child(x, z). These rules can be converted to closed path (CP) rules via variable unification. Evaluation of OP rules involves open path standard confidence (OPSC) and open path head coverage (OPHC), calculated from the relationships in the knowledge graph.\n\nA Knowledge Graph (KG) is a schema-free database enhanced with type information for validation and inference. The Shapes Constraint Language (SHACL), introduced in 2017, defines schema information for KGs as RDF graphs through constraints called shapes, which validate KG quality and identify patterns. SHACL focuses on node shapes that constrain predicates, especially property shapes. Various formalisms like Closed rules (CR) and Functional Graph Dependency (FGD) express KG patterns. This text highlights path shapes as templates for complex shapes and proposes methods for defining Inverse Open Path rules and mining them from KGs, aiding in KG completion.\n\nInverse open path rules (IOP) relate to SHACL shapes and derive from specific IOP rules, which involve predicates in a knowledge graph (KG) and are not Horn. IOP rule quality is evaluated using measures like support, standard confidence, and head coverage, with support being equivalent to that of open path (OP) rules. IOP rules can include cardinality annotations to indicate the minimum number of head paths in the KG. A lemma suggests that IOP standard confidence decreases with rule length, which aids in rule learning. The SHACLearner algorithm is introduced to generate IOP rules from a KG through sampling, embeddings, and path finding.\n\nSHACLEARNER is an adaptation of the OPRL algorithm for mining annotated IOP rules, utilizing embedding-based learning. It prunes less relevant entities and predicates to create a sampled knowledge graph for the RESCAL learner. The embeddings are used in heuristic functions to generate and filter IOP rules, which are then aggregated into a tree for each argument of the target predicate. SHACLEARNER uniquely handles unary predicates and minimum cardinality constraints, featuring novel evaluation and aggregation methods.\n\nThe Sampling() method in Algorithm 1 creates a fragment of the knowledge graph (KG) K', which includes a limited number of entities related to the target predicate Pt, addressing the challenges faced by embedding learners with large KGs like YAGO2. Algorithm 2 details the process of finding IOP rules with up to l atoms using the sampled entity set Esample and fact set K', while excluding less relevant predicates to reduce problem size. Although the worst-case complexity is O(|K|), real-world KGs are usually sparse, resulting in a smaller sampled KG. Algorithm 2 specifies the steps for sampling the KG based on the target predicate and maximum rule length.\n\nIn Embeddings(), we compute embeddings for predicates, subjects, and objects using RESCAL. Each entity e_i is represented as a vector E_i in R^d, and each predicate P_k as a matrix P_k in R^(d x d). The scoring function f(e1, P0, e2) = E1^T . P0 . E2 evaluates the relationship between e1 and e2. We also aggregate entity embeddings to create two vectors, P1_k and P2_k, for the subject and object arguments of each predicate P_k.\n\nAlgorithm 1, PathFinding(), generates candidate IOP rules from predicate embeddings, which are pruned using a scoring heuristic for OP rules. High-scoring OP rules indicate strong IOP rules due to their relationship. IOP rules connect entities via predicates with properties in the embedding space, such as similar argument embeddings and a composite predicate from the chain. The plausibility of this composite predicate is assessed using scoring functions, which help reduce the candidate set for final evaluations.\n\nThe computation of quality measures for SHACLearner involves evaluating candidate rules on a sampled knowledge graph (KG) using IOPsupp, IOPSC, and IOPHC. The KG is represented as square adjacency matrices, where A(Pk)[i, j] shows predicate presence. For the rule Pt(x, z0) -> P1(z0, x) ^ P2(z1, y), IOPSC and IOPHC are computed by counting entities that satisfy the rule's body and head through matrix operations. This process is demonstrated with matrices for predicates P1, P2, and Pt, leading to counts of distinct entities for different cardinality (Car) values, resulting in three rule versions with specific IOP measures.\n\nIn Algorithm 1, SHACL trees are created from annotated IOP rules using a greedy search in SHACLearner, which defines a tree structure with a body (Pt) and head (paths). Tree quality is evaluated using support and confidence metrics. Trees are built by sorting rules by IOPSC and adding them until TreeSC is below a threshold. Uncertain shapes can be simplified to standard SHACL shapes by removing low-quality annotations. While SHACLearner supports SHACL Core features, it has limitations, such as treating all properties as plain predicates and only managing min cardinality. Tree shapes improve KG documentation and validation, aiding KG-completion with a depth-first questioning strategy that lessens cognitive load. Pruning trees can result in simpler, more confident structures.\n\nCurrent methods for learning SHACL shapes from KGs are procedural and not scalable for real-world use. Some semi-automatic methods involve a graph structure learner with human input, while others let users define shapes but lack quality measures. Existing studies focus on RDF validation rather than shape discovery. A proposal links inference rules with SHACL shapes, and some efforts aim to establish SHACL semantics, but our approach uses established logical formalisms to derive SHACL-expressible shapes.\n\nWe implemented SHACLEARNER based on Algorithm 1 to evaluate its effectiveness in capturing shapes from large knowledge graphs (KGs). As the first method to automatically learn shapes from massive KGs, it performs well despite the absence of benchmarks. SHACLEARNER is scalable, handling KGs like DBpedia with over 11 million facts, and efficiently discovers high-quality rules and complex shapes. Our experiments used four benchmark KGs, including YAGO2s, Wikidata, DBpedia, and a synthetic Poker KG, created to analyze our algorithm's completeness. We transformed KGs with type predicates for a common representation, generating new unary predicates from DBpedia and Wikidata for effective learning.\n\nThe evaluation of KG rule-learning methods assesses the quantity and quality of rules using IOPSC and IOPHC metrics. We analyzed 74 target predicates from Wikidata, DBPedia, and YAGO2s, with a 10-hour limit for each. SHACLEARNER excelled in runtime and quality, producing a variety of rule lengths. The quality of mined rules decreased with higher IOPSC and IOPHC, with DBpedia generating the most quality rules. Most rules had a cardinality of 1, and longer rules were more common. Mined rules from DBpedia demonstrate the significance of IOPSC and IOPHC in relation to target predicates.\n\nSHACLEARNER uses prior sampling and heuristic pruning to optimize IOP rule search in PathFinding. Three variants were tested: (-S+H) with complete KG, (+S-H) with sampling only, and (-S-H) as a brute-force learner. Experiments on the small Poker KG with 28 unary predicates showed that (-S-H) found 163 rules, while (-S+H) found 146, a 10% reduction. SHACLEARNER retains high-quality rules (IOPSC >= 0.9) but misses lower-quality ones due to pruning. Heuristic pruning does not always enhance rule quality, and using the complete KG can degrade embedding quality, whereas sampling improves it.\n\nTrees built from IOP rules show aggregation time is over 10 times faster than initial IOP mining. Discovering complex shapes is time-consuming due to exponential rule growth. The average number of branches in mined trees is much lower than the number of mined rules, resulting in at least 44% pruning of IOP rules. A 39-branched tree from DBpedia exemplifies this structure, showing relationships like a song having an album. Future work will explore improving tree shapes for better simplicity and interpretation.\n\nThis paper introduces a method for learning SHACL shapes from knowledge graphs (KGs) to define patterns, validate KGs, and support data entry. The shapes impose constraints on properties for entities with target predicates, utilizing Inverse Open Path rules (IOP) and quality measures like IOP Standard Confidence and Cardinality. IOPSC improves SHACL by quantifying uncertainty in shape selection for KG verification. The method aggregates IOP rules to identify complex shapes, aiding human validation and knowledge graph completion via dynamic data entry forms. An embedding-based Open Path Rule Learner (OPRL) is used to mine rules with open variables, including cardinality constraints. Experiments show SHACLearner's effectiveness in mining IOP rules from large benchmark KGs such as Yago, Wikidata, and DBpedia. The paper addresses challenges in learning shape constraints from schema-free KGs and managing uncertainty, positioning SHACLearner as a benchmark. Future work will focus on validating learned shapes through expert evaluation and redesigning SHACLearner for MapReduce to accommodate larger KGs.",
  "kg2text": [
    "The method to learn SHACL shapes from KGs is a comprehensive approach that learns from KG K and utilizes a KG K as well as open paths in a KG to derive structural constraints. This method is implemented by our proposed system, which is known as Algorithm 1: SHACLearner. It enables the process of learning SHACL shapes from KGs and is supported by KG rule-learning methods. The method describes and defines KG patterns, which are essential for understanding the relationships within the knowledge graphs. Furthermore, the experiments conducted evaluate the effectiveness of this method, which also employs the Open Path rule learning method to generate IOP rules R. Notably, this method is recognized as the first to automatically learn shapes from massive KGs, learning from each KG and utilizing input KGs as foundational data. Section 3 of the relevant documentation elaborates on this method, highlighting its significance in the context of knowledge graph validation.",
    "The method to learn SHACL shapes from KGs addresses the SHACL learning problem by utilizing the mined IOP rules and extracting learned rules. Specifically, KG K serves as the input data structure for our proposed system, which is designed to learn from KG K and is also the input for various KG rule-learning methods. Additionally, KG K serves as the input for learning SHACL shapes from KGs and is generated from IOP rules R. The experiments evaluate KG K, which defines KG patterns and serves as input for the Open Path rule learning method. Furthermore, the IOP rule learner learns from KG K, while our proposed system utilizes open paths in a KG. Overall, the method has a broader term as 'method', encapsulating the various approaches to mining Inverse Open Path rules from knowledge graphs.",
    "A KG K serves as the input data source for learning SHACL shapes from KGs, which defines the open path in a KG. Our proposed system utilizes KG rule-learning methods, which enable the learning of SHACL shapes from KGs. Specifically, Algorithm 1: SHACLearner learns from a KG K, describing the learning process of inverse open path rules from this knowledge graph. Section 3 describes KG K, which also serves as the input data structure for input KGs and is essential for the SHACL learning problem. The experiments evaluate a KG K, which extracts the mined IOP rules and generates IOP rules R. Additionally, the IOP rule learner learns from both a KG K and the open path in a KG, while KG patterns define the open path in a KG. Overall, KG rule-learning methods are a method for learning rules from knowledge graphs and are implemented by our proposed system, which focuses on learning SHACL shapes from KGs.",
    "A KG K utilizes the first method to learn shapes from massive KGs automatically, which is implemented in our proposed system known as the IOP rule learner. This system serves as the input data source for learning from each KG, while the experiments evaluate the effectiveness of open paths in a KG. The IOP rule learner enhances KG rule-learning methods, which facilitate the extraction and evaluation of rules from KG patterns. Additionally, the Open Path rule learning method is used to discover and learn rules from open paths in a KG, and it is categorized as a type of KG rule-learning methods. The experiments also evaluate our proposed system, which generates IOP rules R that define open paths in a KG. Furthermore, Section 3 describes the learning process of inverse open path rules from a KG K, highlighting the relationship between input KGs and the overall learning framework.",
    "Algorithm 1: SHACLearner enables the process of learning SHACL shapes from knowledge graphs (KGs), which is further facilitated by KG patterns. This innovative system is recognized as the first method to learn shapes from massive KGs automatically, utilizing various KG rule-learning methods to analyze and evaluate each KG. In this context, a specific KG K serves as input for the SHACL learning problem, where it extracts the mined Inverse Open Path (IOP) rules. These rules are essential for learning high-quality learned rules, which are derived from the original input KGs. The IOP rule learner, an adaptation of Algorithm 1: SHACLearner, also enables the learning of SHACL shapes from KGs. Section 3 of the paper describes the concept of open paths in a KG, which is related to the SHACL learning problem and defines the mined IOP rules. The experiments conducted evaluate the effectiveness of learning SHACL shapes from KGs, demonstrating the capabilities of our proposed system in this domain.",
    "Section 3 describes KG rule-learning methods, which utilize input KGs to address the SHACL learning problem. These methods extract the mined IOP rules and define the open path in a KG, while also generating learned rules. The IOP rule learner, an adaptation of the Open Path rule learning method, enhances this process by learning KG patterns and evaluating the experiments. Algorithm 1: SHACLearner, which is implemented by learning SHACL shapes from KGs, generates IOP rules R and details our proposed system. This system enables each KG to be analyzed effectively, contributing to the overall goal of learning shapes from massive KGs automatically.",
    "Our proposed system extracts the mined IOP rules, which are essential for understanding the structure of knowledge graphs. Algorithm 1: SHACLearner is recognized as the first method to learn shapes from massive KGs automatically, defining KG patterns that help in the analysis of these graphs. The experiments evaluate the Open Path rule learning method, demonstrating its effectiveness in learning from each KG through the SHACLearner. Additionally, our proposed system extracts learned rules from massive KGs, which are evaluated during the experiments. The IOP rules R not only define KG patterns but also evaluate the experiments, showcasing the relationship between these elements. The first method to learn shapes from massive KGs automatically is identified as the IOP rule learner, which learns from each KG and utilizes the Open Path rule learning method. Section 3 of the paper describes the process of learning SHACL shapes from KGs, detailing how it utilizes input KGs to derive meaningful constraints. Furthermore, a KG K is noted to have a broader term, Knowledge Graphs (KGs), emphasizing the extensive nature of the data involved.",
    "Algorithm 1: SHACLearner is designed to learn from input KGs, effectively addressing the SHACL learning problem by solving it through the extraction of the mined IOP rules. This algorithm represents the first method to learn shapes from massive KGs automatically, utilizing IOP rules R, which are evaluated using each KG. The Open Path rule learning method is employed to discover rules from each KG, contributing to the process of learning SHACL shapes from KGs. This process derives the mined IOP rules, which are foundational for constructing shape constraints. Furthermore, the learned rules produced by Algorithm 1: SHACLearner are essential for defining KG patterns, which in turn describe the SHACL learning problem. Section 3 of the paper elaborates on the IOP rule learner, detailing its functionality and the experiments that utilize input KGs to validate the effectiveness of the learned shapes.",
    "KG patterns define the mined IOP rules, which are essential for understanding the structure of knowledge graphs. Section 3 describes the Open Path rule learning method, which utilizes input KGs to address the SHACL learning problem. This method generates the mined IOP rules, which are further evaluated through the experiments that assess their effectiveness. The IOP rule learner extracts learned rules from input KGs, which in turn generate IOP rules R. These rules are crucial as they solve the SHACL learning problem and are generated by the mined IOP rules. Additionally, Section 3 elaborates on the first method to learn shapes from massive KGs automatically, highlighting its reliance on input KGs. The experiments also evaluate learned rules, showcasing the broader context of KG rule-learning methods within Knowledge Graphs (KGs). Overall, the relationships among these entities illustrate the intricate process of learning and validating shapes in knowledge graphs.",
    "Section 3 describes each KG and details the SHACL learning problem along with the mined IOP rules. Input KGs are derived from each KG, and the first method to learn shapes from massive KGs automatically utilizes the mined IOP rules to address the SHACL learning problem. Each KG also addresses the SHACL learning problem, and the mined IOP rules are analyzed using each KG. Furthermore, the first method to learn shapes from massive KGs automatically utilizes learned rules, which are extracted from each KG. KG rule-learning methods encompass a broader term known as method, while our proposed system also falls under this broader category. The Open Path rule learning method extends IOP rules, which are integral to the experiments conducted. Additionally, a method to learn SHACL shapes from KGs validates KG, demonstrating the effectiveness of the proposed approach. This paper ultimately proposes a method to learn SHACL shapes from KGs, contributing to the understanding and validation of knowledge graphs.",
    "Section 3 describes the learned rules, which are generated from input KGs. The SHACL learning problem reduces to the mined IOP rules and addresses the learned rules. These mined IOP rules are extracted from the learned rules. KG patterns have a broader term, which is Knowledge Graphs (KGs). An open path in a KG includes IOP, and each KG also has a broader term of Knowledge Graphs (KGs). The Open Path rule learning method is a broader term for the method used in this context. Its constituent IOP rules fall under the broader category of IOP rules. The first method to learn shapes from massive KGs automatically is another broader term for the method discussed. Input KGs, along with these KGs, massive KGs, and the full KG, all have a broader term of Knowledge Graphs (KGs). The annotated IOP rules are of the form of IOP rules and also have a broader term of IOP rules. Finally, the inverse open path (IOP) rules are built based on the experiments and were discovered during these experiments.",
    "The experiments are designed to discover inverse open path (IOP) rules, which are a crucial component in the context of knowledge graphs. These IOP rules are utilized in this paper to address the SHACL learning problem, which reduces to the task of learning a novel kind of rules. This learning process is essential for defining and validating shapes within the broader framework of Knowledge Graphs (KGs). The four benchmark KGs, which include well-known entities like YAGO2s, Wikidata, and DBpedia, serve as the foundation for mining these IOP rules. Additionally, the small Poker KG is also categorized under Knowledge Graphs, providing a compact dataset for efficient learning. The IOP rule learner, known as SHACLEARNER, is specifically designed to extract these rules, enhancing the capabilities of existing methods. Furthermore, the relationship between open paths in KGs and their corresponding OP rules is significant, as it underlines the structural patterns that can be derived from massive KGs, ultimately contributing to the understanding and validation of KG structures.",
    "The process of learning SHACL shapes from KGs encompasses various broader terms, including a set of SHACL shapes, shape constraints, and recursive SHACL shapes. This methodology is closely related to Knowledge Graphs (KGs), which include three massive real-world benchmark KGs, and is essential for understanding the number of trees for each KG. Within this context, the SHACL learning method demonstrates the use of IOP rules, which are foundational elements that include Inverse Open Path (IOP) rules. The annotated IOP rules, which are a refined subset of these rules, enhance the learning process. The SHACLEARNER system, presented in this paper, utilizes the mined IOP rules to automatically learn shapes from massive KGs, addressing the SHACL learning problem by deriving high-quality shape constraints. Furthermore, the relationship between open path in a KG and IOP rules illustrates the interconnectedness of these concepts, highlighting the system's capability to evaluate and learn from large-scale knowledge graphs.",
    "The IOP rule learner is illustrated through Algorithm 1, which serves as a computational method for extracting relevant fragments from knowledge graphs. The full KG encompasses a broader category known as Knowledge Graphs (KGs), which are essential for various analyses. These measures, specifically IOPSC and IOPHC, are computed over massive KGs, providing insights into the quality of learnt IOP rules. The concept of IOP, or Inverse Open Path rules, is a broader term that includes entities, which are the individual nodes within the knowledge graph. The SHACLEARNER method aggregates learnt IOP rules and is capable of discovering, evaluating, and mining these rules, thereby enhancing the learning process. Furthermore, the converse of OP rules corresponds to SHACL shapes, which are crucial for defining constraints on graph data. The learning SHACL shapes from KGs is a broader term that encompasses the Shapes Constraint Language, which is vital for validating the structure of knowledge graphs. The SHACL learning problem is part of the broader learning process, and the SHACL learning method is a systematic approach that falls under the general category of methods for mining rules from knowledge graphs. Additionally, SHACL shapes provide valuable insights into the KG structure, while the learned rules are evaluated based on their IOPSC metrics, ensuring their effectiveness in the context of knowledge graph analysis.",
    "The process of learning SHACL shapes from KGs encompasses the broader concept of knowledge graphs (KGs), which serve as the foundational data structures for this methodology. Within this context, the act of mining such rules from a KG is integral to the understanding of Knowledge Graphs (KGs). Specifically, KG K is a particular instance of a knowledge graph that is utilized in the learning process. The SHACL learning problem is a challenge that relates to deriving a set of SHACL shapes, which are essential for defining constraints within knowledge graphs. IOP rules, which are a subset of SHACL shapes, play a crucial role in this learning process, as they are learnt by the modified SHACLEARNER (-S-H) algorithm. This algorithm is designed to generate and evaluate all possible rules, which are derived from the broader category of inverse open path (IOP) rules. The interaction between inference rules and SHACL shapes is another important aspect, as it involves the application of SHACL shapes to validate the structural integrity of knowledge graphs. Furthermore, the input KG serves as the primary data source for the SHACLEARNER system, which operates within the framework of methods aimed at aggregating learnt IOP rules. This aggregation process is vital for identifying at least one IOP rule, which signifies the presence of effective structural patterns within the graph. Overall, the exploration of good IOP rules contributes to the broader understanding of IOP rules and their application in knowledge graph validation.",
    "The average numbers of quality IOP rules found has a broader term of IOP rules, which express shape patterns and serve as a foundational building block for constructing complex shapes in knowledge graphs. The SHACLEARNER method mines three massive real-world benchmark KGs and validates the shapes we can discover, while the number of learnt rules with IOPSC in the range of [0.1, 0.3) is 163 rules. Quality measures for IOP rules also fall under the broader category of IOP rules, which include inverse open path (IOP) rules that introduce rule quality measures. Each KG is a broader term for Knowledge Graphs (KGs), and a KG K specifically refers to a knowledge graph used in the learning process. The interaction between inference rules and SHACL shapes is part of a set of SHACL shapes, which are derived from the original KG, a complete knowledge graph that informs the learning of IOP rules.",
    "Our proposed system is the first method to learn shapes, addressing the SHACL learning problem, which encompasses broader terms such as the Shapes Constraint Language and constraints on graph data. The interaction between inference rules and SHACL shapes is a significant aspect of this problem, as it relates to shape constraints and is further connected to recursive SHACL shapes. Additionally, SHACLEARNER's pruning methods fall under the broader category of methods designed to enhance the learning process. The schema information for KGs is essential, as it pertains to Knowledge Graphs (KGs), which are the foundation for our work that utilizes the KG itself. In this context, the small sampled KG serves as a subset for evaluating learned rules, which are assessed based on their Inverse Open Path Standard Confidence (IOPSC) and Inverse Open Path Head Coverage (IOPHC). Furthermore, the number of learnt rules with IOPSC in the range of [0.1, 0.3) is associated with the IOPSC metric, indicating the effectiveness of the learned rules. Overall, our learning method proposes a systematic approach to aggregate learnt IOP rules, contributing to the understanding and validation of SHACL shapes within massive KGs.",
    "KG rule-learning methods encompass techniques that are fundamentally linked to Knowledge Graphs, which serve as structured representations of information. Within this domain, OP, or open path rules, relates to entities, highlighting the logical relationships that can be expressed in knowledge graphs. The SHACLEARNER method is pivotal as it shows the effectiveness of quality rules and discovers high-quality rules that enhance the understanding of knowledge structures. This process is part of a broader learning framework, which includes learning a novel kind of rules that falls under the general concept of learning. KG K, a specific knowledge graph, is categorized under public knowledge graphs, emphasizing its role in the larger ecosystem of accessible data. The discovery of shapes is a significant aspect of knowledge graph analysis, leading to the identification of various shapes that can be derived from the mined IOP rules, which are instrumental in discovering more complex tree shapes. SHACL trees, which are derived from these rules, represent a broader set of SHACL shapes that define constraints on graph data. The Open Path Rule Learner (OPRL) and SHACL both represent methods that contribute to the understanding and validation of knowledge graphs. Furthermore, inverse open path (IOP) rules correspond to SHACL shapes, illustrating their foundational role in constructing complex relationships within knowledge graphs. The three very different KGs, including YAGO2s, DBpedia, and Wikidata, exemplify the diversity within Knowledge Graphs (KGs). The IOP rule r outputs IOP rules that facilitate the interaction between inference rules and SHACL shapes, which is essential for validating the compliance of shapes defined in the Shapes Constraint Language. Lastly, entities in the sampled KG and real-world massive knowledge graphs (KGs) are integral components of the broader category of Knowledge Graphs (KGs), showcasing the extensive and interconnected nature of this field.",
    "SHACL trees are derived from annotated IOP rules and serve as a broader term for both shape constraints and SHACL itself, which is the framework for defining and validating constraints on graph data. The numbers of quality rules mined, which refers to the count of high-quality rules extracted from knowledge graphs, is a broader term encompassing quality rules. Algorithm 1, a method that implements the Sampling() procedure, is categorized under the broader term method. Modern KGs, which are schema-free and flexible, fall under the broader category of Knowledge Graphs (KGs). The entities in the sampled KG are a subset of entities, representing specific nodes within a knowledge graph. This paper introduces Inverse Open Path rules, which are foundational for constructing shapes in knowledge graphs. KG patterns, which describe structural configurations, are a broader term for patterns. The OPRL for active knowledge graph completion also belongs to the broader category of Knowledge Graphs (KGs). The small Poker KG is utilized in this experiment, which can handle the small Poker KG effectively. The SHACL learning problem is a challenge that falls under the broader term of basic SHACL. IOPSC is a quality measure that relates to quality rules. The shapes derived from knowledge graphs are categorized under the broader term method. Human-KG-completion is another approach that is part of Knowledge Graphs (KGs). A method to aggregate learnt IOP rules is a broader term for inverse open path (IOP) rules. Massive KGs include large-scale knowledge graphs like YAGO2s. OPRL defines open path (OP) rules, while Algorithm 1 derives SHACL trees.",
    "The 'IOP version of the same rule' is a specific instance that falls under the broader category of 'IOP rules', which are essential for constructing complex shapes in knowledge graphs. Within this framework, 'at least one IOP rule' is recognized as a subset of 'inverse open path (IOP) rules', indicating the existence of at least one validated rule in the context of knowledge graph evaluation. The 'IOP rule learner', known as SHACLEARNER, plays a crucial role in evaluating 'rules' that define constraints and relationships within knowledge graphs. Furthermore, the 'smart KG editor' is a tool that operates within the realm of 'Knowledge Graphs (KGs)', enhancing user interaction with these data structures. 'KG K' contains 'facts F', which are the factual statements utilized in the learning process. The 'extended validation framework' is designed to facilitate the 'interaction between inference rules and SHACL shapes', ensuring compliance and validation of data structures. Additionally, the process of 'learning SHACL shapes from KGs' is a broader term that encompasses the derivation of structural constraints, represented as 'the shape'. 'KG patterns' also fall under the umbrella of 'Knowledge Graphs', highlighting the specific configurations that can be validated using SHACL shapes. 'IOP rules' are instrumental in building 'high-quality tree shapes', which are characterized by their informative nature. These rules also encompass 'constraints', which define the expected structure of data within knowledge graphs. The term 'KG' itself is a broader category that includes 'Knowledge Graphs (KGs)'. A 'good IOP rule' is a high-quality instance of 'inverse open path (IOP) rules', effectively connecting entities through predicates. The logical relationship represented by 'P1(x, z0) -> P2(z0, z1) ^ P3(z1, z2)' is categorized under 'IOP rules', illustrating the connections between entities. 'Embeddings(K')' refers to a method that generates vector representations of entities, contributing to the learning of inverse open path rules. The concept of 'many KGs' encompasses a collection of knowledge graphs, enhancing data understanding. The 'average numbers of quality IOP rules found' serve as a metric for evaluating the effectiveness of the SHACLEARNER method, while 'IOPHC' quantifies the coverage of instances satisfying the head of an inverse open path rule. Finally, 'SHACLEARNER' demonstrates the 'numbers of quality rules mined', reflecting the success of the learning process, and the 'conjunction of IOP rules' combines multiple rules to form a tree structure, which is essential for assessing the quality of shapes in knowledge graphs. Quality measures for IOP rules are critical for evaluating the reliability of these rules in constructing SHACL trees.",
    "K' has a broader term known as Knowledge Graphs (KGs), which are extensive databases that organize knowledge in a structured format. A specific knowledge graph, referred to as a KG K, is categorized under public knowledge graphs. Inverse open path (IOP) rules play a crucial role as they express shape patterns, which are essential for understanding the structure of knowledge graphs. A system is designed to mine these shapes, contributing to the development of various structural patterns. Exploratory attempts have been made to address the process of learning SHACL shapes from KGs, indicating ongoing research in this area. Annotated IOP rules are a broader category that includes IOP, while IOP rules R falls under the general term of rules. The method known as OPRL for active knowledge graph completion is another broader term that encompasses various methods used in this field. Benchmark KGs serve as standardized knowledge graphs for evaluating algorithms, and Sampling is a method that aids in the selection of data subsets for analysis. Additionally, the method to aggregate IOP rules and the Open Path Rule Learner are both categorized as methods that enhance the understanding of knowledge graph shapes. Each rule is prefixed by IOPSC, which is a quality measure for evaluating these rules. Massive KGs compute measures over the KG, while a synthetic KG represents a smaller, artificial knowledge graph. SHACL trees, which are derived from annotated IOP rules, are broader constructs within the Shapes Constraint Language, which defines constraints on graph data. The overarching method proposed aims to complete the KG, showcasing the interconnectedness of these concepts.",
    "The method is designed to traverse knowledge graphs (KGs), which are structured representations of knowledge. In this context, the inverse open path head coverage (IOPHC) has a broader term that encompasses the method itself. Each KG is part of the larger category of Knowledge Graphs, and the number of trees for each KG reflects the structural complexity of these graphs. Open paths in a KG are related to public knowledge graphs, while the path of entities that satisfy a chain of predicates in the rule pertains to the entities within the graph. Open path (OP) rules also fall under the broader category of methods. Additionally, KG documentation is a part of Knowledge Graphs (KGs), and Algorithm 2 serves as a method within this framework. The YAGO2s knowledge graph demonstrates a tendency towards and is compared with other KGs, such as DBpedia and Wikidata. Inverse Open Path (IOP) rules introduce the concept of Inverse Open Path, which is foundational for understanding the validation framework. The SHACLEARNER system focuses on the efficient matrix-computation of quality measures, while the inverse open path support (IOPsupp) is calculated over the full KG. The established approach is aimed at evaluating KG rule-learning methods, which in turn are assessed through this methodology. Lastly, a system is employed to mine shapes from KG data.",
    "The system mines knowledge graphs (KGs), which are extensive data structures that represent information in a graph format. Large KGs, such as YAGO2s, are a broader term for knowledge graphs and serve as foundational data for various applications. The validity of IOP rules, which assess the quality of these rules, is crucial for ensuring their effectiveness. In the evaluation of the SHACLEARNER algorithm, the first column contains the number of learnt rules with Inverse Open Path Shape Constraints (IOPSC) in the range of [0.1, 0.3). Input KGs, which are the original knowledge graphs used in experiments, also fall under the broader category of knowledge graphs. Furthermore, IOP rules are pruned by 44% when additional tree-shaped constraints are applied, highlighting the importance of quality measures. The IOP Standard Confidence, a broader term under IOP rules, quantifies the uncertainty associated with candidate shapes. The SHACL learning method includes a method to aggregate IOP rules, which is essential for constructing complex shapes from the mined IOP rules. These rules, which are a broader term for learned rules, are derived from entities within KG K, which contains entities E. Overall, these KGs represent a significant category of knowledge graphs that have gained popularity in various contexts.",
    "The interaction between inference rules and SHACL shapes encompasses standard SHACL shapes, which serve as a foundational aspect of the framework. Algorithm 1 utilizes SHACLEARNER, a method that is implemented based on this algorithm, to enhance the learning process. Within this context, rule quality measures introduce IOP Standard Confidence, which is a broader term that evaluates the effectiveness of Inverse Open Path (IOP) rules. These IOP rules are defined by the logical expression Pt'(x, z0) -> exists(z1, ..., z(n-1), y) P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y), illustrating their role in predicate logic formalism. The IOP rule r is a specific instance of these rules, which fall under the broader category of IOP. Connected entities, which are part of the larger set of entities, are crucial for understanding the relationships within knowledge graphs. The process of learning SHACL shapes from KGs is a subset of the application of SHACL shapes, emphasizing the importance of these shapes in defining constraints. Potential IOP rules also belong to the broader category of IOP, while SHACL shapes are integral to shape constraints and the SHACL framework itself. KG K', a sampled subgraph, is part of the larger Knowledge Graphs (KGs) and is essential for efficient learning. The IOP-shaped constraint is a foundational rule structure that defines specific patterns within constraints. Lastly, the full KG is a comprehensive representation of Knowledge Graphs, and IOPSC calculates values for the specific rule r1, highlighting the interconnectedness of these concepts.",
    "The converse of OP rules has a broader term known as rules, which encompass various formal constructs within the SHACL framework. In the realm of knowledge graphs, IOP rules serve as a foundational element, building tree shapes that represent hierarchical relationships. These IOP rules are recognized as an inverse version of open path rules, further illustrating their significance in defining paths over connected entities, which in turn relate to the broader category of entities. Additionally, the SHACL shapes present recursive SHACL shapes, indicating a structured approach to validation within knowledge graphs. The SHACLEARNER model captures and handles data from real-world massive knowledge graphs, demonstrating its scalability and effectiveness in learning from such extensive datasets. Furthermore, the discovery of shapes is a process that leads to the identification of various shapes, which are essential for validating the structure of knowledge graphs. The IOPSC, a measure of quality, extends the capabilities of SHACL, ensuring that the rules derived from knowledge graphs meet specific thresholds for quality and effectiveness.",
    "IOP rules are foundational elements in knowledge graphs that satisfy the cardinality annotation Car(r), indicating the minimum number of distinct head paths that must be satisfied. These rules express the number of different chains that can exist within a knowledge graph, and they also have a broader term, encompassing general rules. Additionally, IOP rules are annotated with cardinality Car, which is crucial for defining constraints on the relationships between entities. The SHACL shapes, which are derived from these rules, have a broader term known as The shapes, representing various structural patterns in knowledge graphs. Furthermore, the quality and quantity of learnt rules generated by the SHACLEARNER algorithm, which utilizes sampling techniques, also fall under the broader category of rules. In the context of knowledge graphs, these KGs are often incomplete, highlighting the need for KG completion, which is a process aimed at enhancing the completeness of Knowledge Graphs (KGs). Lastly, the IOP version of the same rule refers to an inverse open path rule that allows for the prediction of relationships based on the existence of certain paths between entities.",
    "The concept of pruning variants is closely related to the method used for mining Inverse Open Path rules, which are essential for understanding the SHACL learning problem that falls under the broader category of SHACL Core. Within the realm of Knowledge Graphs, patterns from massive KGs serve as a foundational element, while a set of SHACL shapes represents specific shape constraints that are crucial for validating graph data. Rule quality measures, which include IOP Head Coverage, are introduced to evaluate the effectiveness of these rules. The four benchmark KGs, which encompass well-known knowledge graphs, also belong to the broader category of Knowledge Graphs. Our novel tree shapes are another method that contributes to the understanding of these concepts. Real-world KG models further illustrate the diversity within Knowledge Graphs (KGs). The IOP Head Coverage is a significant measure that falls under rule quality measures, while SCALEKB utilizes closed path rules to express relationships in knowledge graphs. The Inverse Open Path rule P1(x, z0) -> P2(z0, z1) ^ P3(z1, z2) is a specific instance of IOP rules. The other KGs, including DBpedia and Wikidata, are also categorized under Knowledge Graphs. The evaluation method of SHACLEARNER is a novel approach that assesses the quality of mined rules. Additionally, embedding-based OP rule learning focuses on learning annotated IOP rules, which are refined for better performance. Pruning is associated with the generation of high-quality rules, ensuring that the search space is optimized. The KG itself represents the knowledge graph being analyzed, while OPRL is designed for active knowledge graph completion. Lastly, IOPHC quantifies the effectiveness of each rule, providing a measure of their applicability.",
    "The OPRL, which stands for open path rule learner, has a broader term known as active knowledge graph completion, a method that enhances knowledge graphs by defining open path rules. Within this context, the conjunction of IOP rules is recognized as a broader term for inverse open path (IOP) rules, which are essential for constructing shapes in knowledge graphs. The shape can be derived from IOP rules, and notably, 44% of IOP rules are pruned during the application of these rules. To ensure the effectiveness of IOP rules, formal quality measures are defined for them. Furthermore, SHACL shapes, which are broader than constraints on graph data, play a crucial role in validating knowledge graphs. The sampled KG, a subset of Knowledge Graphs (KGs), facilitates the learning of rules by focusing on specific predicates. Additionally, SHACL shapes are encompassed within the broader framework of the Shapes Constraint Language. An IOP rule, which is a broader term for IOP, is instrumental in defining specific paths in knowledge graphs. Recursive SHACL shapes also fall under the category of a set of SHACL shapes, contributing to the expressiveness of the validation process. The small Poker KG serves as a practical example of Knowledge Graphs, while our proposed system, SHACLEARNER, is a method designed to automatically learn shapes from massive knowledge graphs. Real-world KGs represent another category of Knowledge Graphs, emphasizing the diversity of knowledge representation. KG completion is another method aimed at enhancing the completeness of knowledge graphs. Lastly, This procedure is used in SHACLEARNER to derive SHACL trees from annotated IOP rules, showcasing the interconnectedness of these concepts.",
    "Each KG has a broader term known as public knowledge graphs, which are structured representations of information. Within this context, shapes extend the expressivity of the shapes we can discover, allowing for a richer understanding of the data. Candidate IOP rules, which are a subset of IOP rules, play a crucial role in this framework. The highest quality rules, characterized by their effectiveness, fall under the broader category of rules that govern the structure of knowledge graphs. Active knowledge graph completion is a method that relates to Knowledge Graphs (KGs), enhancing their completeness. The IOP rules are learned and adapted by an embedding-based open path rule learner, which is essential for deriving insights from the data. Furthermore, the method employed detects which shapes could be violated by applying a rule, ensuring data integrity. KG K, a specific knowledge graph, serves as a foundational element within the broader category of graphs. The interaction between inference rules and SHACL shapes is crucial for validating the shapes defined in the Shapes Constraint Language. The facts in the head of the IOP rule are integral to the broader concept of IOP rules, which are essential for validating knowledge graphs. SHACL shapes serve to validate KG, ensuring that the data adheres to specified constraints. Candidate rules are evaluated on a small sampled KG, which is a reduced subset of a knowledge graph. The KG generates SHACL shapes, which are formal specifications for data validation. The procedure for deriving these shapes falls under the broader term of method. IOP rules and trees, which express complex relationships, are also categorized under rules. Recursive SHACL shapes represent a more complex type of shape constraints. IOPSC denotes the qualities of the rule, providing a measure of its effectiveness. Each tree employs a greedy search to optimize the selection of rules. Finally, potential rules in the search space represent the vast array of possibilities within the broader search space of IOP rules.",
    "The process of learning SHACL shapes from KGs is closely related to the semantics of the SHACL language, which provides a formal interpretation of the constraints defined within knowledge graphs. Within this context, various methods, including CRs and One approach, serve as broader terms that encompass techniques for deriving structural constraints. The original predicates and facts in the KG are foundational elements that contribute to the overall structure of Knowledge Graphs (KGs). Furthermore, recursive SHACL shapes are integral to the SHACL framework, enhancing its expressiveness. However, it is noted that the embedding learner cannot handle massive KGs, which poses challenges for effective learning. KG rule-learning methods focus on measuring the quantity and quality of distinct rules learnt, ensuring that the rules generated are both relevant and reliable. The ideal rule learner, known as SHACLEARNER (-S-H), represents a complete approach to rule generation, while the SHACLEARNER method itself is capable of learning informative and intuitive shapes that aid in manual KG editing tasks. IOP rules, which are represented by Pt'(x, z0), serve as building blocks for defining complex shapes. Additionally, higher confidence in the KG and the power of KGs highlight the importance of reliable data structures. The shapes derived from paths within the knowledge graph further illustrate the diverse structural patterns that can be validated through the Inverse Open Path formalism. Lastly, the third rule, based on KG data, imposes specific constraints that influence the overall confidence in the learned rules.",
    "The concept of closed path forms has a broader term known as method, which refers to a proposed approach for mining Inverse Open Path rules from knowledge graphs. In this context, learnt rules are categorized under the broader term rules, which are formal constructs within the SHACL framework. Input KGs, which are the original knowledge graphs, fall under the broader category of public knowledge graphs. The SHACL learning problem is related to the application of SHACL shapes, as it involves learning shape constraints for knowledge graphs. Additionally, IOPSC illustrates the computation of IOPHC, highlighting the relationship between these two quality measures. The SHACLEARNER method significantly affects the quality and quantity of learnt rules, which are evaluated based on their structural features. Property shapes are defined under the broader term SHACL, emphasizing their role in governing relationships within knowledge graphs. IOP rules satisfy the condition head_r(e, e'), indicating a connection between entities in the graph. During the evaluation process, redundant and low quality rules are downselected based on the full KG, ensuring that only high-quality rules are retained. The number of trees for each KG is a broader term under Knowledge Graphs, reflecting the structural complexity of the data. The Shapes Constraint Language defines schema information for KGs, providing a framework for data validation. Furthermore, two tricks are employed to reduce the search space for IOP rules, enhancing the efficiency of the SHACLEARNER algorithm. A set of SHACL shapes is categorized under the broader term Shapes Constraint Language, indicating its foundational role in defining constraints. The entities involved in these rules have a broader term known as entities, which encompasses all distinct elements within a knowledge graph. The method of no pruning is another broader term that refers to the exhaustive generation of rules without filtering. Our work aims to discover shapes directly from knowledge graphs, contributing to the field of knowledge representation. The modified SHACLEARNER (-S-H) variant operates without pruning, allowing for a comprehensive search for IOP rules. Lastly, the population of a KG is a broader term under Knowledge Graphs (KGs), emphasizing the organization of data within these structures. Learning SHACL shapes from KGs is a broader term that includes shapes that can be trivially expressed in a fragment of SHACL, showcasing the versatility of the Shapes Constraint Language.",
    "The three massive real-world benchmark KGs, which include Yago, Wikidata, and DBpedia, are a subset of Knowledge Graphs, highlighting their significance in the field. Within this context, the validity of IOP rules is a critical aspect that assesses the quality of inverse open path (IOP) rules, which serve as foundational elements in knowledge graph modeling. The RLvLR method is another important framework that encompasses various approaches, including the ideal rule learner, which has successfully learnt 163 rules without any sampling or pruning. Furthermore, entities, referred to as e's, are integral components of these KGs, which are categorized as public knowledge graphs that have proliferated on the Web. The recursive SHACL shapes are derived from the broader category of shapes, which are essential for defining complex validation rules. The SHACLEARNER method plays a pivotal role in creating and evaluating variants of SHACLEARNER, particularly in its application to YAGO2s, a massive KG. Additionally, the set of rules and shapes, along with rule patterns, contribute to the understanding of patterns within knowledge graphs. Overall, these KGs are characterized as massive and diverse, reflecting the evolving nature of knowledge representation on the Web, while SHACL provides a formal language for expressing constraints on graph data.",
    "The Shapes Constraint Language, commonly known as SHACL, defines constraints on graph data, providing a framework for validating the structure and integrity of knowledge graphs. Within this framework, Inverse Open Path rules are induced from paths, serving as a formalism in predicate logic that helps represent specific shapes as paths over connected entities. The OP rule has a broader term known as method, which encompasses various approaches for mining these rules. Additionally, the process of learning a novel kind of rules falls under the broader category of rules, highlighting the importance of deriving specific logical constructs for knowledge graph validation. Sequences of entities, which are ordered collections of nodes, also relate to the broader concept of entities within the graph. The inverse open path head coverage (IOPHC) is calculated for a specific Inverse Open Path rule, r1, demonstrating the application of these rules in evaluating knowledge graphs. The Open Path Rule Learner adapts the Open Path Rule Learner (OPRL), an embedding-based algorithm designed to mine open path rules from knowledge graphs. The full knowledge graph (KG) encompasses all entities and facts, which are part of public knowledge graphs. Inverse open path (IOP) rules are a specific type of predicate logic formalism, and embedding-based OP rule learning is a method that enhances the extraction of structured patterns from knowledge graphs. The path P1, P2, ..., Pm represents a broader category of paths, while property shapes are specific constraints that fall under the broader term of shapes. Furthermore, KG facts, knowledge graph completion, and the facts in the KG all relate to the overarching concept of Knowledge Graphs (KGs). Rule patterns, which are constructed using IOP rules, also belong to the broader category of rules. Lastly, IOP rules can have different cardinalities, indicating the varying constraints that can be applied, while recursive SHACL shapes represent a more complex type of constraint within the broader context of constraints on graph data.",
    "In the context of knowledge graphs, IOPHC has a broader term known as thresholds, which refers to the minimum quality criteria that rules must meet. Additionally, two pruning methods, which include prior sampling and heuristic techniques, fall under the broader category of methods used for optimizing the learning process. The embedding-based open path rule learner is another method that aims to extract high-quality rules from knowledge graphs. Furthermore, recursive SHACL shapes are categorized under the Shapes Constraint Language, which provides a framework for defining constraints on graph data. A specific knowledge graph, referred to as a KG K, is a type of graph that serves as the input for learning these rules. The number of learnt rules with IOPSC in the range of [0.1, 0.3) is a data point that reflects the effectiveness of the learning process. SHACL expresses constraints on knowledge graphs, ensuring that the data adheres to specified formats. SHACL shapes, which are a broader term for basic SHACL, define validation rules for graph data. The structure of a knowledge graph is essential for understanding public knowledge graphs, which are openly accessible. Rules are evaluated on a complete KG, which represents the entire knowledge graph used for learning. Mined shapes, derived from knowledge graph data, are a broader category that includes various structural patterns. The process of learning SHACL shapes from KGs is supported by SHACL-SPARQL, which combines SHACL with SPARQL for querying constraints. A high-scoring candidate OP rule suggests a good IOP rule, indicating its quality in representing relationships. The complete KG is a broader term for Knowledge Graphs, while a fragment of the KG K' also falls under the category of Knowledge Graphs. IOP rules are equivalent to OPSC, serving as a foundational building block for constructing complex shapes. Annotated IOP rules are illustrated in Fig. 3, showcasing their role in deriving SHACL shapes. Lastly, Table 2 shows the average numbers of quality IOP rules found, providing statistical insights into the learning outcomes.",
    "The concept of IOP encompasses a broader term known as rules, which includes various formal constructs used in knowledge graphs. A novel method has been developed that falls under the broader category of method, aimed at extracting high-quality rules from these graphs. Specifically, IOP rules can be derived by aggregating mined data into a structured representation known as a tree, while also adhering to the condition that they must involve at least two predicates, denoted as n >= 2. These IOP rules are essentially an inverse version of open path rules, and they serve as foundational elements for constructing complex shapes in knowledge graphs. Furthermore, the interaction between inference rules and SHACL shapes is a critical aspect of the validation framework, which is designed to ensure that the shapes effectively validate the quality of a knowledge graph. The IOP standard confidence (IOPSC) learns from large-scale knowledge graphs like YAGO2s, while patterns extracted from massive KGs contribute to the broader category of public knowledge graphs. Additionally, two scoring functions have been defined to assist in the mining of IOP rules, enhancing the overall process of knowledge graph completion, which is further supported by strategies that reduce cognitive load for users.",
    "The four benchmark KGs, which include well-known knowledge graphs such as YAGO2s, Wikidata, and DBpedia, are a subset of public knowledge graphs. Within the realm of graph theory, an open path in a KG is a specific type of graph that facilitates the expression of relationships between entities. The SHACLEARNER algorithm plays a crucial role in supporting SHACL Core features by capturing and learning shapes from knowledge graphs. This algorithm not only discovers shapes but also contributes to the discovery of shapes through the application of SHACL shapes. In its ideal variant, SHACLEARNER (-S-H) is capable of learning 146 rules, which are essential for defining structural patterns. The shapes learned by SHACLEARNER are further utilized in the context of massive KGs, which are efficiently handled through a MapReduce implementation. Additionally, the other KGs, such as DBpedia and Wikidata, also fall under the category of public knowledge graphs. Quality rules, which are a subset of rules, are evaluated based on their reliability and relevance. The methods employed by SHACLEARNER include two tricks that enhance its efficiency in learning. Furthermore, automatic and semi-automatic methods are utilized to populate knowledge graphs, while SHACL trees serve as a broader term under SHACL Core, providing structured representations of constraints. This strategy for human-KG-completion is applied in the smart KG editor, which leverages these tree structures to facilitate user interaction. Lastly, these uncertain shapes represent a broader category of shapes that may not meet the minimum quality thresholds for standard SHACL shapes, which are defined representations of graph data constraints.",
    "The concept of extending a KG is closely related to Knowledge Graphs (KGs), which serve as a broader term encompassing various types of knowledge representations. Within this framework, high-quality rules are a subset of rules that are essential for validating and structuring knowledge graphs. The Poker KG, a specific instance of a knowledge graph, also falls under the broader category of KGs. Furthermore, the path of entities that satisfy a chain of predicates in the rule is categorized under paths, which are crucial for understanding the relationships within the graph. This strategy for human-KG-completion is a method that utilizes tree structures to enhance the efficiency of knowledge graph completion, and it is classified under the broader term strategy. The proportion of quality rules is an important metric that relates to quality rules, indicating the effectiveness of the rules mined from the graph. Additionally, 44% of IOP rules signifies a specific subset of IOP, which are foundational elements in knowledge graph reasoning. The aggregation module is a novel component within the SHACLEARNER algorithm, which is designed to extract high-quality shape constraints from knowledge graphs. IOP rules are specifically searched for in relation to l atoms, which define the complexity of the rules being evaluated. The SHACL learning problem is a challenge that falls under the semantics of the SHACL language, focusing on the formal interpretation of shape constraints. MinIOPSC is a parameter that relates to thresholds, setting the minimum quality criteria for evaluating rules. KG rule-learning methods are techniques that operate within the broader context of graph, emphasizing the extraction and evaluation of rules from knowledge graphs. The three very different KGs, including YAGO2s, DBpedia, and Wikidata, represent distinct instances of KGs. The small Poker KG is a compact representation that is part of public knowledge graphs, which are openly accessible knowledge structures. Real-world massive knowledge graphs (KGs) also belong to the broader category of KGs, integrating extensive information from various domains. The Sampling() method is a technique used to fragment knowledge graphs, falling under the broader term method. The same entities refer to specific nodes within the graph, categorized under entities. Lastly, OP rules have a close relationship with inverse open path (IOP) rules, highlighting their interconnectedness in knowledge graph reasoning. The process to mine such rules from a KG is essential for enhancing the structure and validation of knowledge graphs.",
    "In the realm of knowledge representation, SHACL shapes have a broader term known as shapes, which are essential for defining constraints within knowledge graphs. Enterprise knowledge graphs, which are structured representations of knowledge, fall under the broader category of Knowledge Graphs (KGs). Within this context, a set of shapes is encompassed by the broader term The shapes, while the KG data is a subset of the more general concept of data. Interestingly, large KGs do not have available shape constraints, indicating a gap in their structural validation. The paper critiques existing methods, noting that it does not provide a system that discovers patterns from massive KGs. Furthermore, the body in the KG is categorized under Knowledge Graphs (KGs), emphasizing its foundational role. Procedural methods are classified under the broader term method, highlighting their significance in the learning process. IOPHC denotes the qualities of the rule, which are crucial for evaluating the effectiveness of shape constraints. Algorithm 1 has parameters such as MinIOPSC, which are vital for its operation. The Cardinality of an IOP rule is a broader term for IOP rules, which serve as the building blocks for defining complex shapes. SHACLEARNER plays a pivotal role as it generates and evaluates rules, contributing to the overall structure of knowledge graphs. Each rule is a broader term for rules, while candidate IOP rules fall under the category of inverse open path (IOP) rules. The distribution of rules is analyzed with respect to IOPSC, providing insights into their effectiveness. This problem is a broader term for the challenges faced in managing knowledge graphs, while the facts in the head of the IOP rule are also categorized under inverse open path (IOP) rules. Property shapes, which govern the relationships within knowledge graphs, are a broader term for constraints. Lastly, a small complete KG is recognized as a specific instance of Knowledge Graphs (KGs), designed for evaluation purposes.",
    "The smart KG editor has a broader term known as KG, which encompasses various types of knowledge graphs. One specific example is Poker, which itself is a smaller knowledge graph that falls under the broader category of Knowledge Graphs (KGs). Within the realm of SHACL, a set of SHACL shapes is categorized under standard SHACL shapes, indicating a structured approach to defining constraints. The concept of IOPSC is also related to Parameters, highlighting its role in the broader context of knowledge graph evaluation. The input KG, which is utilized in our work, is a specific instance of Knowledge Graphs that serves as the foundation for various tasks. Additionally, MinIOPHC is classified under thresholds, emphasizing its importance in setting quality standards. The IOP rule language is significant as it allows for the mining of rules with open variables, facilitating the discovery of flexible patterns in knowledge graphs. A good learning algorithm is expected to scale effectively to identify constraints, ensuring the integrity of the data. SHACL serves as a broader term for the validation framework, which enhances the interaction between rules and shapes in knowledge graphs. The number of trees for each KG is indicative of the complexity found in public knowledge graphs, while recursive SHACL shapes extend the capabilities of basic SHACL by incorporating recursive patterns. Measures are computed over massive KGs, providing insights into the effectiveness of learning methods. Discovered constraints are a subset of constraints that emerge from the learning process, and SHACL trees represent the application of SHACL shapes in validating RDF databases. The novel method proposed aims to learn high-quality rules, which are essential for maintaining the reliability of knowledge graphs. Finally, three massive real-world benchmark KGs are recognized as public knowledge graphs, serving as critical resources for evaluating knowledge graph methodologies, including the assessment of Inverse open path head coverage, which is also categorized under Parameters.",
    "The high-scoring candidate OP rule suggests the existence of a good OP rule, indicating its effectiveness in the context of Open Path rules. This simple approach has a broader term known as method, which encompasses various strategies for mining rules from knowledge graphs. Constraints on graph data are a subset of the broader category of constraints, while standard SHACL shapes fall under the umbrella of shape constraints. Node shapes are also categorized as part of the broader concept of The shapes. Additionally, this method and a method both refer to systematic approaches within the broader term method. SHACLEARNER adapts embedding-based OP rule learning to enhance its functionality. Knowledge graphs (KG) can be validated against a set of shapes, ensuring their structural integrity. The relationship between OP and IOP rules is characterized by a close interdependence, referred to as This close relationship. Algorithm 1 has parameters, including MinIOPHC, which specifies the minimum inverse open path head coverage required for effective learning. Ontology constraint patterns are classified under the broader term constraints, while paths over connected entities are a more specific category within paths. Other rule patterns are included in the broader category of patterns. IOPsupp calculates for a specific version of an Inverse Open Path rule, denoted as r1. The performance measure TreeSC is bounded above by its constituent IOP rules, which are essential for defining tree structures. Property shapes express constraints over facts, ensuring that the relationships and attributes of entities adhere to specific rules. Notably, the 146 rules learned by the SHACLEARNER system are fewer than those generated by the ideal learner, which employs a brute-force search method.",
    "The interaction between inference rules and SHACL shapes has a broader term known as the semantics of the SHACL language, which provides a formal interpretation of the Shapes Constraint Language. Within this framework, the SHACL learning problem is encompassed by SHACL-SPARQL, highlighting the integration of learning shape constraints with querying capabilities. A specific version of an Inverse Open Path rule, referred to as r1, is categorized under Parameters, which control various aspects of the learning process. IOP rules are defined by the sequence of predicates P1 ^ P2 ^ ... ^ Pn and act to connect entities satisfying the subject argument of the body predicate, Pt, as well as those forming the object argument of the last predicate, P2. The effectiveness of the SHACLEARNER algorithm is influenced by two pruning methods that optimize the learning of these rules. Furthermore, KG patterns are broader constructs that fall under the category of graphs, while the third rule is a specific instance of rules that impose constraints on the relationships within knowledge graphs. The quality of these rules is measured by IOPSC, which indicates a low confidence level in some cases. Facts in the KG are part of the larger structure known as Knowledge Graphs (KGs), and closed path rules are utilized by KG rule learning systems to infer new relationships. Notably, the sampled KG is derived from the original KG but is significantly smaller, emphasizing the challenges of working with large knowledge graphs. Lastly, paths, which represent sequences of connections between entities, are a broader term for shapes defined within this context.",
    "SHACL, or Shapes Constraint Language, plays a crucial role in defining and expressing shapes, which are structural representations that impose constraints on graph data. The effectiveness of these shapes is enhanced by the Inverse Open Path Standard Confidence (IOPSC), which increases the proportion of quality rules within knowledge graphs. The OPRL, or open path rule learner, is a broader term that encompasses systems designed for discovering patterns in knowledge graphs. In this context, a KG, or knowledge graph, is a specific instance of the broader category of Knowledge Graphs. Furthermore, at least one IOP rule is a subset of rules that are essential for validating the constraints defined by SHACL. The thresholds set for evaluating these rules are part of the broader category of Parameters, which also includes various settings that govern the learning process. The SHACLearner algorithm is specifically proposed to be redesigned for a MapReduce implementation, allowing for efficient processing of large knowledge graphs. However, it has limitations when compared to the SHACL Core, which defines a standard framework for validating RDF graphs. Additionally, shape patterns, which are derived from Inverse Open Path rules, fall under the broader category of patterns that characterize the relationships within knowledge graphs. Lastly, the sampled knowledge graph represents a reduced version of the original KG, retaining only the most relevant entities and predicates for analysis.",
    "Closed path (CP) rules are a subset of active knowledge graph completion, which encompasses methods for completing knowledge graphs through open path rules. The good IOP rule, a high-quality Inverse Open Path rule, falls under the broader category of rules that define relationships within knowledge graphs. The number of trees for each KG is defined by the number of target predicates, indicating the structural complexity of the graph. The complete KG, which refers to the entire knowledge graph, is a type of public knowledge graph that is utilized for learning rules. The interaction between inference rules and SHACL shapes is a broader concept that includes shapes that can be trivially expressed in a fragment of SHACL. Rules and constraints are formal constructs that encompass constraints, guiding the validation of data in knowledge graphs. The shapes characterize the KG, providing a structural representation of the data. RLvLR employs closed path (CP) rules to express implications between predicates. Notably, SHACLEARNER does not mine SPARQL-like constraints, focusing instead on other types of rules. Rules with open variables are another category of rules that extend the definition of rules. Recursive SHACL shapes represent a broader category of shapes that enhance the expressiveness of validation rules. The SHACLEARNER framework differs from the OPRL evaluation module, which assesses potential rules generated during the learning process. IOPSC determines and indicates the confidence of a rule, quantifying its reliability. Schema information for KGs is a broader term that encompasses Knowledge Graphs, which are structured representations of information. The full KG is another type of public knowledge graph that includes all entities and relationships. The sequence of paths or branches is a broader term for paths, representing connections between entities. A set of rules and shapes provides the necessary shapes for validating the properties of entities within a knowledge graph. Lastly, SHACLEARNER utilizes two tricks to reduce the search space for Inverse Open Path rules.",
    "In the realm of knowledge graphs, the concept of a 'pair of entities' is a subset of the broader category known as 'entities'. Similarly, 'all rules that bind the subject argument' and '163 rules' both fall under the umbrella of 'rules'. The 'set of rules and shapes' is categorized as 'shapes', while 'candidate rules' are specifically selected based on the measure known as 'IOPsupp'. The large-scale knowledge graph 'YAGO2s' is classified as a type of 'KG', and the metrics 'open path: OPsupp, OPSC, OPHC' are encompassed within the broader category of 'paths'. Additionally, the 'small sampled KG' is a specific instance of 'Knowledge Graphs', and 'each KG' is a particular example of a 'graph'. The process of 'embedding-based OP rule learning' is a method that is part of the broader field of 'learning'. 'SHACL shapes' are defined within the framework of 'SHACL Core', while 'entities satisfying the subject argument of the body predicate, Pt' are also classified as 'entities'. Furthermore, 'a tree' is constructed based on 'inverse open path (IOP) rules', and the learning method 'SHACLEARNER' is designed to address 'this problem'. The term 'shapes' is a broader category that includes 'The shapes', and 'IOPSC' is a quality measure that falls under 'quality measurements'. The 'IOP rules' are related to 'annotation', and '146 rules' are another subset of 'rules'. Lastly, 'property shapes' are a specific type of 'shapes', and 'shape constraints' are defined as a subset of 'rules'.",
    "In the realm of knowledge graphs, property shapes are defined as having a broader term of SHACL Core features, which encompass fundamental components for defining constraints. Similarly, closed path forms are categorized under paths, indicating their role in shaping the structure of knowledge graphs. The generation of SHACL shapes is facilitated by two different kinds of knowledge, which play a crucial role in the automatic creation of these shapes. The minimum IOPSC, a quality measure, is recognized as a broader term of IOPSC, while Algorithm 1 is classified under the procedure that aids in extracting knowledge graph fragments. This strategy for human-KG-completion is a broader concept that encompasses KG completion, enhancing the interaction between humans and knowledge graphs. Annotated IOP rules serve as a broader category for rules, which are essential for defining constraints within the SHACL framework. Furthermore, three entities (e3, e4, e5) and entities forming the object argument of the last predicate, P2, are both recognized as broader terms for entities, highlighting their interconnectedness. Our learning method, SHACLEARNER, is adapted from an embedding-based open path rule learner, showcasing its innovative approach to learning. Existing ontologies for KGs utilize and generate SHACL shapes, reinforcing their importance in the knowledge graph ecosystem. SHACLEARNER possesses full functionality, enabling it to discover more complex shapes, while the method proposed is instrumental in uncovering intricate structures. Additionally, e1 is classified under entities, and standard SHACL shapes are recognized as broader terms for both the Shapes Constraint Language and constraints on graph data. SHACLEARNER also discovers complex shapes, contributing to the advancement of knowledge graph structures. Lastly, r' is identified as the same rule as IOP rules, emphasizing the foundational role of these rules in the context of knowledge graphs.",
    "The concept of 'which shapes could be violated by applying a rule' encompasses a broader category known as 'The shapes', which are essential in understanding the structural patterns within knowledge graphs. Similarly, 'OP' is a specific type of logical rule that falls under the broader term 'rules'. In the context of evaluating the quality of rules, 'Inverse open path standard confidence' is categorized under 'Parameters', which control various aspects of the learning process. The 'IOP rules', which are foundational for rule mining, also relate to the broader domain of 'rule mining'. An 'interactive framework' is designed to define 'SHACL shapes', facilitating the creation of constraints in knowledge graphs. It is important to note that 'a KG' is often 'incomplete', highlighting the challenges in knowledge representation. The 'proposed system' introduces a novel 'method' for learning shapes, while 'mined shapes' are derived from the broader category of 'shapes'. Furthermore, 'SHACL trees' are linked to the 'semantics of the SHACL language', providing a structured representation of constraints. The term 'a method' is synonymous with 'method', indicating its significance in the context. The 'rule' is a formal guideline that is part of the broader category of 'rules'. The 'interaction between inference rules and SHACL shapes' is encompassed within 'SHACL-SPARQL', which combines these elements for effective data validation. The 'extended validation framework' is a more comprehensive 'validation framework' that enhances the detection of shape violations. 'Tree shapes' are another representation that falls under 'The shapes', while a 'fragment of SHACL' is a subset of 'SHACL shapes'. The 'IOP rules' specifically 'have' 'the head of the IOP rule', which defines cardinality constraints. 'These uncertain shapes' can be transformed into 'standard SHACL shapes', ensuring compliance with quality standards. 'Input KGs' are foundational to the broader category of 'graph', while 'node shapes' represent specific constraints within the broader context of 'constraints'. Finally, the 'set of rules and shapes' is categorized under 'rules', emphasizing its role in defining the properties of entities within knowledge graphs.",
    "The process to mine such rules from a KG encompasses a broader term known as public knowledge graphs, which serve as structured representations of information. Within this context, closed path (CP) rules are defined as being of the form (1), providing a foundational structure for knowledge graph learning. Algorithm 2 plays a crucial role by sampling a subgraph referred to as KG K', which aids in refining the learning process. Furthermore, candidate rules are a subset of rules that are generated and refined to ensure high quality, with high-quality rules specifically tailored for a small complete KG. The ideal rule learner, known as SHACLEARNER (-S-H), is characterized as inefficient yet complete, generating all possible rules without sampling. The shapes derived from these rules support efficient and interpretable human validation, ensuring that constraints over facts are maintained. Additionally, entities E represent a broader category of entities within the knowledge graph, which are essential for the learning process. Inverse Open Path rules, which have a broader term of shapes, provide a straightforward interpretation as shapes that can be validated through the Shapes Constraint Language (SHACL). The Open Path Rule Learner (OPRL) adapts embedding-based OP rule learning to enhance the discovery of these rules. Lastly, the distribution of rules is analyzed with respect to IOPHC, ensuring that the learned rules meet the necessary quality measures.",
    "In the realm of knowledge graphs, various entities and concepts are interconnected through specific relationships. For instance, all these shapes have a broader term known as The shapes, which encapsulates diverse structural patterns derived from knowledge graphs. Similarly, closed path (CP) rules are categorized under knowledge graph completion, indicating their role in enhancing the completeness of knowledge graphs. These KGs, which refer to large and diverse knowledge graphs, are also encompassed by the broader term graph. Furthermore, the relationship between an OP rule and its converse IOP version illustrates the mutual support between these two types of rules. IOP rules are represented by the binary predicate P2(z1, z2), which plays a crucial role in defining relationships within the graph. The term sh:path, a path expression in SHACL, is a broader concept under SHACL shapes, which define constraints for data structures in knowledge graphs. Massive KGs, which contain extensive data, also fall under the broader category of graph. Additionally, these kinds of shapes are included in The shapes, while shape constraints are defined as a sequence of predicates that establish rules for validating graph data. Yago, a prominent knowledge graph, is classified under Knowledge Graphs (KGs). A system designed for mining shapes from knowledge graph data is part of a broader system framework. The three very different KGs, including YAGO2s, DBpedia, and Wikidata, are collectively referred to as Knowledge Graphs. Entities that satisfy the first argument of the head are categorized under entities, highlighting their role in knowledge graph structures. These uncertain shapes, which may not meet quality thresholds, are also classified as shapes. The Cardinality of an IOP rule, which specifies minimum requirements for rule satisfaction, is a broader concept under inverse open path (IOP) rules. The target predicates in knowledge graphs are encompassed by the broader term targets. Rules within the SHACL framework have associated feature values that characterize their attributes. IOPHC, a quality measure, is classified under Parameters, which control the learning process in knowledge graph systems. Lastly, K, representing a knowledge graph, is also categorized under Knowledge Graphs (KGs).",
    "In the realm of knowledge graphs, 'node and property shapes' are a subset of 'the shapes', which encompass various structural patterns. The entity 'x', representing a song, is categorized under 'entities', indicating its broader classification. A 'method to aggregate IOP rules' is instrumental in producing 'tree shapes', which are essential for understanding hierarchical relationships within the graph. The 'Inverse open path standard confidence' plays a crucial role in increasing 'the proportion of quality rules', thereby enhancing the reliability of the rules derived from the knowledge graph. The 'input KG' is a specific instance of 'public knowledge graphs', highlighting its broader context. Similarly, 'ontology constraint patterns' fall under the umbrella of 'patterns', which guide the generation of SHACL shapes. 'Real-world massive knowledge graphs (KGs)' are a type of 'Knowledge Graphs', and 'entities in the sampled KG' also belong to this broader category. 'Class or type constraints' are a specific form of 'constraints' that help define the types of entities within the graph. The collection of 'all rules that bind the subject argument' is categorized as an 'argument', while 'Fig. 3' serves as a visual representation within the broader category of 'figures'. The 'full KG' is a comprehensive representation of a 'graph', and the 'ideal rule learner (SHACLEARNER (-S-H))' is a variant of a 'system' designed for exhaustive rule learning. 'SHACL shapes' exhibit 'different complexities', reflecting the varied structural intricacies present in knowledge graphs. The entity 'K'' is a broader term for 'Parameters', which control the learning process. The 'complete KG' is a specific instance of 'complete', emphasizing its exhaustive nature. 'Modern KGs' are classified under 'Knowledge Graphs', showcasing their contemporary relevance. Lastly, 'redundant and low quality rules' are filtered based on 'IOPSC', ensuring that only high-quality rules are retained, while 'learning SHACL shapes from KGs' is a broader 'process' that encompasses the methodology of deriving structural constraints.",
    "In the realm of knowledge graphs (KG), entity pairs are a broader term that encompasses individual entities, which are the fundamental components of these graphs. Patterns are exhibited in KGs, showcasing the diverse structural configurations that can be analyzed. The good OP rule, which falls under the broader category of rules, plays a significant role in the validation and structuring of data. Similarly, the OPRL for active knowledge graph completion is a method that also belongs to the broader domain of Knowledge Graphs. The number of entities that can instantiate z0 to satisfy the head part is another concept that relates back to entities, emphasizing the connections within the graph. The qualities of the rule, which include metrics for evaluating rules, are also categorized under rules. Real-world KG models represent practical implementations of KGs, further illustrating the broader term of KG. Shapes, which include rules and constraints, are essential for defining the structural integrity of the graph. The quality of performance is assessed over the three very different KGs, highlighting the comparative analysis of these models. Inverse Open Path rules, another subset of rules, contribute to the understanding of relationships within the graph. A fragment of SHACL is a specific subset that can express a set of SHACL shapes, which are crucial for validating graph data. The set of shapes is a broader term that encompasses various shapes used in KGs. The relationship between OP and IOP rules is vital for understanding the interconnectedness of these rules within the broader category of rules. Human-KG-completion strategies also fall under the umbrella of Knowledge Graphs, aiming to enhance user interaction with the data. The KG structure, which is a broader term for the graph, provides the framework for these relationships. This procedure, which refers to the method of deriving SHACL trees, is categorized under procedures that facilitate the learning process. MinTreeSC is a parameter that indicates the minimum quality thresholds necessary for effective rule learning. Path shapes, which are sequences of predicates, are included in the broader category of shapes. The sampled KG, a reduced subgraph, is another representation within the broader term of KG. Finally, the number of learnt rules with IOPSC in the specified range is a measure that falls under rule learning experiments, showcasing the effectiveness of the learning process.",
    "In the realm of knowledge graphs, the concept of entity-instantiation is closely related to entities, as it represents a specific realization within a broader category. The shapes play a crucial role in guiding the population of a KG, ensuring that the data adheres to defined structures. Within this framework, shapes are categorized under constraints, which define the expected integrity of the data. A sampling method Sampling is a technique that falls under the broader term of method, utilized to refine the selection of entities and predicates. The IOP rule r, which is a specific instance of rules, is part of a larger set of potential IOP rules that also belong to the category of rules. Recursive SHACL shapes, which enhance the expressiveness of SHACL Core, are another important aspect of this structure. Real-world KGs, which represent actual data, are encompassed within the broader definition of KG. The smart KG editor serves as a tool within the domain of Knowledge Graphs, facilitating user interaction. The effectiveness of rules is measured by IOPHC, which itself is a subset of rules. All possible rules represent the complete set of rules that can be generated, while versions of the rule extended with additional head atoms are evaluated against IOPSC. Fact set K' contains the essential information needed for learning such rules, and candidate rules are refined through a scoring function heuristic for OP rules. Additionally, shapes offer valuable KG documentation, while three massive real-world benchmark KGs include Yago, contributing to the evaluation of knowledge graph methodologies. SHACL trees, which are structured representations of rules, fall under the broader category of SHACL-SPARQL, and fragments of SHACL are subsets that express specific shape constraints.",
    "Many KGs has a broader term of Knowledge Graphs, which are structured representations of knowledge. Cardinality annotations prefixes each rule, indicating the constraints on relationships within the graph. Open path (OP) rules, which are a type of knowledge graph completion method, has a broader term of rules that define constraints and relationships in knowledge graphs. The term sh:path has a broader term of a set of SHACL shapes, which are used to validate graph data. Additionally, a fragment of SHACL has a broader term of SHACL, the framework for defining and validating constraints on graph data. MinIOPSC, a parameter for evaluating quality, has a broader term of Parameters that control the learning process in SHACLEARNER. The IOPHC calculates for r2, providing a measure of the quality of inverse open path rules. Patterns from massive KGs has a broader term of graph, representing the structural patterns extracted from large-scale knowledge graphs. The initial IOP mining time has a broader term of IOP mining, which refers to the process of discovering Inverse Open Path rules. Standard SHACL shapes has a broader term of basic SHACL, which serves as the foundational version of the Shapes Constraint Language. A KG, or knowledge graph, has a broader term of public knowledge graphs, which are openly accessible structured representations of information. The good OP rule has a broader term of OP rule, indicating its role in knowledge graph reasoning. The original KG also has a broader term of public knowledge graphs, highlighting its complete nature. The entity e2 has a broader term of entities, which are the individual items within a knowledge graph. K' has a broader term of Knowledge Graphs, focusing on a sampled subset for learning inverse open path rules. Algorithm 1 has parameters, including MinTreeSC, which specifies the minimum threshold for tree structure quality. SHACLEARNER fails to discover rules of lower quality, which are less likely to be identified due to pruning methods. Open path (OP) rules has a broader term of active knowledge graph completion, which implies the existence of facts based on relationships. Finally, P1_1 has a broader term of Parameters, and the four benchmark KGs has a broader term of graph, representing the well-known knowledge graphs used for evaluation.",
    "The knowledge graph (KG) retains the original predicates and facts in the KG, ensuring that foundational data remains intact. Table 2 shows the number of rules learned from various massive KGs, which contain tens of billions of facts, highlighting the scale of data involved. A set of SHACL shapes has a broader term known as the application of SHACL shapes, which is crucial for validating RDF databases. Within this context, a rule is a broader term encompassing various types of rules, including closed path rules, which are defined as a type of rules that express implications through closed loops of links. The other KGs, which include benchmark KGs, are categorized under the broader term of Knowledge Graphs. The experiments conducted to assess the SHACLEARNER method demonstrate its effectiveness in learning high-quality tree shapes, which are a more complex representation of tree shapes derived from simpler path-based rules. Additionally, the open path in a KG relates to the concept of entity relationships, while the IOP version of the same rule serves as a variant of rules that allows for the prediction of relationships based on existing paths.",
    "In the realm of knowledge graphs, complex shapes have a broader term known as The shapes, which encapsulate various structural patterns. Inverse open path (IOP) rules present specific shapes that serve as foundational elements for constructing more complex structures. The semantic web term sh:path, which is integral to the Shapes Constraint Language (SHACL), has broader terms including shape constraints and paths, indicating its role in defining navigational paths through RDF graphs. Notably, the rule 'human(x, x) -> nativeLanguage(x, z3) ^ language(z3, z3)' is derived from IOP rules, showcasing how these rules can articulate relationships between entities. Conversely, IOP rules themselves are derived from this specific rule, highlighting a reciprocal relationship. Tree shapes offer KG documentation, providing insights into the structure of knowledge graphs. The SHACLEARNER system discovers characteristics such as length and cardinality, which are essential for understanding the complexity of shapes. However, the complete KG could harm the quality of the learnt embeddings, emphasizing the importance of data quality in knowledge graph learning. Information triggered by entities has a broader term, entities, which refers to the individual nodes within the graph. Node shapes, another construct within SHACL, also have a broader term, shapes, indicating their role in defining constraints. Furthermore, every path from the target predicate has a broader term, paths, which are crucial for validating graph data. Schema information for KGs is encompassed within public knowledge graphs, illustrating the structured nature of this data. The left-hand tree, derived from annotated IOP rules, has a broader term, figures, which visually represent the distribution of mined rules. Paths over connected entities are defined over connected entities, emphasizing the relationships within the graph. This potential post-processing step has a broader term, method, indicating future enhancements in shape interpretation. Lastly, the entity e7 has a broader term, entities, and the small Poker KG serves as a compact representation within the broader category of graphs.",
    "The synthetic KG is a specific instance of Knowledge Graphs, which are structured representations of knowledge. In this paper, the authors discuss the results of an experimental evaluation that highlights the effectiveness of the SHACLEARNER system. Within this context, rules are defined as formal constructs that have a broader term known as constraints, which also includes tree-shaped constraints. Additionally, the high-scoring candidate OP rule is categorized under rules, while rule quality measures fall under the broader category of measures. The subject, representing entities in the knowledge graph, is another important concept. Massive KGs, such as Wikidata, are included in the evaluation of the SHACLEARNER method. The IOP rules, which are of the form defined as 'form (3)', play a crucial role in this framework. The SHACLEARNER algorithm utilizes a sampled knowledge graph to enhance its learning capabilities. Furthermore, the application of SHACL shapes is a broader term that encompasses shape constraints and is essential for validating RDF data models. Knowledge Graphs (KGs) are a subset of graphs, and the small sampled KG is classified under public knowledge graphs. Algorithm 1 takes input from the target predicate Pt, while minimum quality thresholds are a broader term for thresholds that ensure the quality of derived shapes. The application of SHACL shapes is also related to the SHACL framework. IOPHC, which measures the head coverage of inverse open path rules, is part of the broader category of quality measurements. The relationship between OP and IOP rules is significant as it aids in the process of mining both OP and IOP rules. Lastly, OP rules have a direct relationship with their converse IOP version, establishing a connection between these two types of rules.",
    "The running time for aggregating IOP rules into trees is a concept that falls under the broader category of IOP rules. Similarly, rules of the highest quality are encompassed within the general term 'rules'. In the context of Knowledge Graphs, KG documentation serves as a broader term that includes various aspects of these graphs. The IOPSC illustrates the practical meaning of the IOPSC and IOPHC qualities, which are essential for understanding the effectiveness of rules. Trees, which represent hierarchical structures, are a subset of entities, while the quality and quantity of learnt rules also relate back to the broader category of rules. Complex shapes are included within the diverse structural patterns known as The shapes. The SHACLEARNER system is a specific instance of a broader system designed for knowledge graph analysis. Parameters include MinIOPHC, which is a broader term for various settings that guide the learning process. Each KG is associated with an average TreeSC, indicating its structural complexity. The completion strategy is a method that enhances knowledge graph completion. This topic, which focuses on the learning of SHACL shapes, is part of a larger topic concerning knowledge representation. Two different kinds of knowledge contribute to the overall understanding of knowledge in this context. The complete KG is utilized for learning rules about a specific target predicate. Open path rules are a broader category that includes paths, while Wikidata+UP represents a specific subset of Knowledge Graphs (KGs). Recursive SHACL shapes are a broader term that encompasses the application of SHACL shapes in validating RDF databases. The novel method is designed to learn from KG data, while the relationship between OP and IOP rules is mined in a single process that leverages their interconnectedness. Lastly, IOP rules are represented by the predicate P1(x, z0), which defines specific relationships within the graph.",
    "The generation of ontology constraint patterns is facilitated by two different kinds of knowledge. In the context of knowledge graphs, occupations are associated with IOP rules, which serve as foundational constructs for defining relationships. The additional tree-shaped constraint imposes limitations on the IOP-shaped constraint, enhancing the structure of knowledge graphs. The shapes we can discover will undergo validation through formal human-expert evaluation, ensuring their effectiveness. SHACL shapes are defined within the broader semantics of the SHACL language, which provides a framework for validating graph data. Furthermore, IOP rules and trees are encompassed within the broader category of trees, while an example of a shape from Wikidata falls under the general term of The shapes. Each IOP rule is categorized under the broader term of rules, and the language associated with these rules pertains to entities within the graph. The number of target predicates indicates the presence of at least one IOP rule, highlighting the interconnectedness of these constructs. Additionally, high-scoring candidate OP rules are classified under OP rules, and standard SHACL shapes are included within the broader category of shapes. Large KGs represent extensive Knowledge Graphs, which are structured representations of data. The shapes derived from these graphs contribute to the overall understanding of data, with the path of head predicates being a specific instance of paths. KG applications are part of the broader applications that utilize knowledge graphs, while a system that discovers patterns from massive KGs is a method for extracting structural patterns. Finally, the quality and quantity of learnt rules reflect the overall quality of the knowledge graph.",
    "In the context of knowledge graphs, shapes characterize the KG by defining structural representations that facilitate data validation and integrity. Our novel tree shapes can be used for KG completion, enhancing the graph's completeness by identifying missing relationships. SHACL shapes include nested patterns, which allow for the definition of hierarchical relationships within the graph. A fragment of SHACL has a broader term, encompassing constraints on graph data and the Shapes Constraint Language, which provides a framework for these constraints. YAGO2s, a prominent knowledge graph, also falls under the broader category of Knowledge Graphs. The SHACLEARNER method demonstrates satisfactory performance in extracting high-quality shape constraints from knowledge graphs. Entities such as e8 and e6 are part of a broader classification of entities within the graph. Existing ontologies for KGs contribute to the overall structure of the KG. Variants of SHACLEARNER represent different configurations of the algorithm, while IOP rule r is a specific instance of rules that define logical relationships in the graph. The quality and quantity of learnt rules are essential metrics for evaluating the effectiveness of the learning process, which is reflected in the number of trees for each KG, indicating the graph's structural complexity. An extensive representation of predicates and entities further enriches the knowledge graph, while standard SHACL shapes are refined by deleting quality annotations to meet specific quality thresholds. The tree structure may be interpreted as a set of SHACL shapes, providing a comprehensive view of the relationships and constraints within the knowledge graph.",
    "In the realm of knowledge graphs, 'Rules with the same head and the same body' has a broader term known as 'rules', which are formal constructs defining constraints and relationships. The entity 'r' is classified as a type of 'closed path (CP) rules', which are essential for inferring relationships. 'Algorithm 1' is associated with parameters such as 'max rule length', indicating the maximum predicates allowed in rule bodies. The 'number of trees for each KG' is a broader term encompassing 'trees', which represent hierarchical structures in knowledge graphs. Additionally, 'three massive real-world benchmark KGs' falls under the broader category of 'graph', highlighting the significance of large-scale data in evaluation. 'Open path (OP) rules' are linked to 'knowledge graph completion', emphasizing their role in inferring missing information. The process of 'learning SHACL shapes from KGs' is categorized under the broader concept of 'concept', which pertains to class memberships in knowledge graphs. Furthermore, 'Inverse open path head coverage' is defined by 'r', showcasing its relevance in evaluating rule quality. 'Conjunctive paths' are a broader term for 'paths', which represent sequences of connections in knowledge graphs. 'A KG' is a broader term for 'KG', indicating its foundational role in knowledge representation. 'Shapes that can be trivially expressed in a fragment of SHACL' are encompassed by 'SHACL shapes', which define validation rules. 'Connected entities' are a broader term for 'Knowledge Graphs', illustrating the interconnected nature of data. 'Manual KG editing tasks' relate to the broader 'task' of maintaining knowledge graphs. The 'number of learnt rules with IOPSC in range of [0.1, 0.3)' is a broader term for 'rule learning', reflecting the process of discovering patterns. 'IOPsupp' is categorized under 'Parameters', which control the learning process. The 'three very different KGs' are classified as 'public knowledge graphs', emphasizing their accessibility. The 'quality performance of rules' is a broader term for 'rules', indicating the metrics used to assess their effectiveness. 'Target predicate instances in the KG' fall under the broader category of 'KG', highlighting their role in evaluating rule relevance. 'sh:path' is a broader term for 'constraints on graph data', which validate the structure of knowledge graphs. Lastly, 'conjunctive paths of constraints' are encompassed by 'constraints', which define the expected integrity of data.",
    "The term 'sh:path' is a broader concept within the framework of the Shapes Constraint Language, which serves as a foundation for defining and validating constraints on graph data. Within this context, more complex shapes encompass other rule patterns, illustrating the advanced structural configurations that can be derived from simpler patterns. However, this topic has been characterized by scant previous research, highlighting the need for further exploration into the learning of SHACL shapes from knowledge graphs. Notably, IOP rules are designed to omit the quantifiers, simplifying the representation of logical expressions. Additionally, SHACL trees, which are structured representations of constraints, fall under the broader category of trees, while the path itself is a more general term that includes various paths in knowledge graphs. Each rule is a specific instance within the broader category of rules, and the Inverse Open Path Standard Confidence (IOPSC) is a critical measure that evaluates the effectiveness of these rules. KG K' represents a sampled subgraph of knowledge graphs, providing a focused context for learning shape patterns. The open path rule learner (OPRL) is limited to learning all rules, emphasizing its foundational role in the development of more complex rule systems. The distribution of mined rules is visually represented in figures, showcasing the quality measurements that assess the reliability of these rules. Furthermore, the identification of which shapes could be violated by applying a rule is essential for maintaining the integrity of the shapes defined within knowledge graphs. Ultimately, the highest quality rules are those that demonstrate a strong correlation with quality, while occupations serve as a specific type of entity within the broader landscape of knowledge graphs, which include real-world massive knowledge graphs that are publicly accessible.",
    "The entities in the sampled KG are a subset of public knowledge graphs, which also encompass modern KGs. Within the realm of massive KGs, DBpedia 3.8 is included as a significant example. The application of SHACL shapes, which falls under the broader category of constraints on graph data, is defined by the Shapes Constraint Language. The IOP rule learner, a type of rule learner, is designed to enhance the learning process by filtering out redundant and low quality rules based on the IOPHC metric. Additionally, the cardinality constraint Car=1 is a specific instance related to entities. This paper presents the foundations of the SHACLEARNER method, which is organized around these principles. The predicate P2' is part of the binary predicate P2(z1, z2), which is crucial for understanding relationships in knowledge graphs. The evaluation method Ev produces annotated IOP rules, while the Sampling() method is illustrated in Algorithm 2, which is essential for extracting relevant data. A set of SHACL shapes is grounded in the semantics of the SHACL language, and the relationship between open path rules and their inverse counterparts is categorized under rules. Furthermore, SPARQL-like constraints are a broader type of constraints that guide the validation of knowledge graphs. Algorithm 1 incorporates parameters such as max rule cardinality MCar, and tree shapes derived from IOP rules can be utilized for KG completion, representing a broader category of shapes. Lastly, OPRL for active knowledge graph completion is also classified under public knowledge graphs.",
    "The KG has a broader term known as Knowledge Graphs, which encompasses various structured representations of knowledge. Within this context, SHACLEARNER utilizes a sampling method Sampling to enhance its learning process. The Inverse Open Path Shape Constraint metric, IOPSC(r1), is noted to equal 2/2, indicating a balance in cardinality. Furthermore, the corresponding number of mined rules is categorized under the broader term rules, which also includes R' and the ultimate evaluation of an IOP rule. IOP mining, a process that falls under the broader category of rule mining, plays a crucial role in discovering these rules. The distribution of rules illustrates the characteristics of these rules, which are further linked to the broader term of rules. Wikidata serves as a broader term for Knowledge Graphs (KGs), while Poker KG is recognized as a specific instance of a KG. The KG itself is a broader term for data, which is organized through various constraints that are deployed to make A KG functional. Shape patterns are used as building blocks for more complex shapes, while inverse open path support is categorized under Parameters. Additionally, satisfying entities e2 and e3 are part of the broader category of entities, and the concept of human-KG-completion is linked to public knowledge graphs. Lastly, entities e1, ..., e(n-1) also fall under the broader term entities, and the representation formalism is noted to be difficult to compare with IOP rules.",
    "The third rule is more constraining than the second, indicating a hierarchy of rules within the context of knowledge graph shape learning. Shapes play a crucial role as they support efficient and interpretable human validation, allowing users to verify data entries effectively. Massive KGs contain millions of entities, providing a rich dataset for analysis. Rules are associated with IOPsupp, a measure of inverse open path support, but they could also violate shapes, highlighting the need for careful validation. Head coverage (HC) has a broader term known as method, which encompasses various approaches to rule learning. Similarly, IOPSC, a measure of inverse open path standard confidence, falls under the broader category of measures. A rule may have a certain cardinality c1, which specifies the minimum number of instances required for compliance. The complete KG is a broader term for graph, representing the entire knowledge graph used in learning. The smart KG editor is a tool that relates to public knowledge graphs, enhancing user interaction. Nested sh:path declarations are a more specific form of paths, which are essential in defining constraints. KG completion is a broader term for Knowledge Graphs, emphasizing the process of enhancing these graphs. The logical expression Pt'(x, z0) -> exists(z1, ..., z(n-1), y) P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y) is a broader term for rules, illustrating the formalism used in knowledge graph constraints. The semantics of the SHACL language provides a foundation for shape constraints, while A, a target predicate, is encompassed by the broader term Parameters. SHACL itself provides logical foundations for the semantics of the SHACL language, ensuring structured validation. High quality rules must meet established thresholds, ensuring their reliability. KG completion also relates to broader applications, showcasing the diverse use cases of knowledge graphs. Finally, SHACL shapes are a broader term for SHACL-SPARQL, which integrates these concepts into a querying framework, while all these shapes are encompassed by the general term shapes.",
    "In the realm of knowledge graphs, 'shapes in the form of a path' has a broader term known as 'paths', which are essential for defining complex structures. Similarly, 'tree shapes' are categorized under the broader term 'patterns', indicating their role in representing hierarchical relationships. The 'semantics of the SHACL language' is encompassed within the broader framework of 'SHACL', which provides a formal language for graph validation. Furthermore, 'two different kinds of knowledge' are instrumental in generating 'input ontologies', which serve as foundational elements for knowledge representation. The 'number of rules' is expected to increase as the 'space of possible rules' expands, highlighting the dynamic nature of rule generation in knowledge graphs. The 'full KG' is a comprehensive representation that falls under the broader category of 'graph', while 'cover' is a method that quantifies rule satisfaction. Additionally, 'these kinds of shapes' are classified under the general term 'shapes', emphasizing their significance in structural definitions. The term 'KG' is also a broader category that includes 'public knowledge graphs', which are accessible representations of knowledge. In the context of rule evaluation, 'IOPsupp' is calculated for 'r2', a specific rule version, and the 'SHACLEARNER' method captures the 'length' of rules, contributing to the learning process. A 'set of SHACL shapes' is a broader term that includes 'shapes that can be trivially expressed in a fragment of SHACL', showcasing the versatility of SHACL in defining constraints. The concept of 'many KGs' also falls under the umbrella of 'public knowledge graphs', indicating the extensive use of structured data. Observations reveal a 'consistent decrease in the proportion of quality rules', which is a broader trend within the category of 'quality rules'. The 'relationship between an OP rule and its converse IOP version' illustrates the interconnectedness of these logical constructs. The 'target predicate Pt' is defined as a specific predicate within the framework of inverse open path rules. Moreover, 'the number of trees for each KG' is a broader term that relates to the overall 'quantity' of distinct rules learned. Lastly, the identification of 'which shapes could be violated by applying a rule' is crucial for understanding the constraints defined by 'rules', while 'r2' is a broader term that encompasses 'Parameters', which control the learning process.",
    "In the realm of knowledge graphs, building blocks serve as foundational elements for constructing more complex shapes. Large KGs are populated by automatic and semi-automatic methods, which facilitate the integration of vast amounts of data. Closed path rules are characterized as loops, enabling the inference of new facts through established relationships. The SHACL Core features include essential constructs such as node and property shapes, which are broader terms encompassing the concept of shapes. Similarly, Closed rules (CR) and the distribution of mined rules both fall under the broader category of rules. The modified SHACLEARNER (-S-H) specifically applies to target predicates, enhancing the learning process of inverse open path rules. IOPSC, a measure of rule effectiveness, is also categorized under features. K', a sampled subset of knowledge graphs, relates to public knowledge graphs, emphasizing the interconnectedness of data. The procedural aspects of rules are crucial for deriving insights from sequences of entities that exist within a KG. Furthermore, recursive SHACL shapes present the semantics of the SHACL language, which is vital for validating graph data. IOP rules are mined from DBpedia 3.8, showcasing the practical application of these concepts. The space of possible rules, along with real-world KG models, contributes to the broader understanding of Knowledge Graphs. CRs and candidate OP rules further illustrate the diverse range of rules that govern the relationships within these complex data structures, while head paths are satisfied in the KG, indicating the fulfillment of specific predicate relationships.",
    "In the context of knowledge graphs, relevant rules are a subset of rules that demonstrate significant coverage and quality, indicating their importance in learning shapes and constraints. These rules are evaluated against benchmark KGs, which are a type of public knowledge graphs used for performance comparison. The number of rules is a broader term that encompasses all rules, including both quality rules and poor quality rules, which are distinguished by their adherence to established quality thresholds. Entities, such as entity e and e3, represent individual nodes within the graph, and they are essential for defining relationships and constraints. The concept of IOPSC, or inverse open path standard confidence, is derived from the logical expressions represented by closed path rules, which help assess the effectiveness of these rules. Furthermore, the shapes that can be trivially expressed in a fragment of SHACL are foundational to understanding the broader category of shape constraints, which are critical for validating the structure of knowledge graphs. Lastly, the three massive real-world benchmark KGs, including Wikidata, serve as vital resources for evaluating methods and heuristic mechanisms in the learning of Inverse Open Path rules.",
    "The sampled KG has a broader term, which is Knowledge Graphs, indicating its role as a subset within this larger framework. Similarly, the small complete KG is categorized under KG, emphasizing its significance as a complete and correct representation within the knowledge graph domain. In the context of knowledge representation, rules express the number of different chains, highlighting the relationships defined within the graph. Notably, DBpedia 3.8 has more quality rules than the other KGs, showcasing its superior quality in rule generation. The evaluation method Ev encompasses a broader term, entities, reflecting its application across various data points. SCALEKB, a rule language, also has a broader term, system, indicating its foundational role in knowledge graph rule learning. The discovery of shapes is a process that identifies structural patterns within knowledge graphs, further classified under the broader term process. Real-world KGs, which represent actual data, fall under the umbrella of Knowledge Graphs, while the synthetic KG is categorized as a public knowledge graph, specifically designed for analyzing the completeness of our algorithm. Additionally, rules with cardinality Car are a specific type of rules that fall under the broader category of rules. Shapes in the form of a path and more complex shapes are both encompassed by the term The shapes, indicating their interrelated nature in defining graph structures. Standard SHACL shapes are a subset of SHACL Core, which provides a framework for validating graph data. The sampled KG, like other knowledge graphs, contributes to the broader understanding of Knowledge Graphs. Inference processes are applied on A KG, enhancing the knowledge extraction capabilities. The predicate sh:nodeShape is a broader term for SHACL shapes, which define constraints within the graph. Contributors, as entities, play a vital role in enriching knowledge graphs, while path shapes serve as foundational elements for the broader category of shapes. Finally, designing an efficient learning method is a method that aims to optimize the learning of shape constraints from knowledge graphs.",
    "In the context of knowledge graphs, shapes are used to guide the population of a KG, ensuring that the data adheres to defined constraints. These constraints are defined by Functional Graph Dependencies (FGDs), which play a crucial role in establishing the rules that govern the relationships between entities. A set of rules and shapes proposes a method that can be utilized to enhance the validation process within knowledge graphs. Additionally, shapes serve to characterize the frequent patterns in a KG, providing insights into the underlying structure of the data. One proposal suggests the development of an extended validation framework that integrates inference rules with SHACL shapes, further improving the quality of knowledge graphs. The concept of active knowledge graph completion is also encompassed within the broader term of Knowledge Graphs, highlighting its significance in data organization. Moreover, shapes include graph functional dependencies, which are essential for modeling and validating the structure of knowledge graphs. The inverse open path head coverage (IOPHC) illustrates the practical meaning of the IOPSC and IOPHC qualities, offering metrics for evaluating the effectiveness of learned rules. The embedding-based method is instrumental in discovering Inverse Open Path rules, which serve as foundational elements for constructing complex shapes. Furthermore, closed path rules are presented in this section, showcasing their relevance in knowledge graph rule learning systems. The SHACLEARNER method includes ultimate evaluation, a comprehensive assessment process that leverages the complete input knowledge graph. Lastly, the number of entities is a broader term that encompasses the various entities within a knowledge graph, emphasizing the importance of understanding their relationships.",
    "In the realm of Knowledge Graphs, P'i is recognized as having a broader term that encompasses the entire field. A set of SHACL shapes is also categorized under the broader term of SHACL-SPARQL, indicating its foundational role in defining constraints. The concept of max rule length is classified under constraints, highlighting its importance in rule formulation. Furthermore, shapes are instrumental in describing conjunctive paths of constraints, which are essential for understanding the relationships within the graph. DBpedia 3.8, a significant entity in this domain, is classified under the broader term of Knowledge Graphs (KGs). The term sh:path is a fundamental aspect of basic SHACL, serving as a pathway for navigating RDF graphs. The quality of OP rules is a critical component of the broader category of rules, which govern the structure and integrity of knowledge graphs. Additionally, open path head coverage is categorized under Parameters, reflecting its role in evaluating rule effectiveness. The sequence of predicates represented as P1(e, e1), P2(e1, e2), ..., Pt(e(q-1)', eq) are recognized as facts within the KG, contributing to the overall knowledge structure. The relationship between IOPSC and length indicates a comparative analysis of rule effectiveness. The size of the problem is a broader term that encompasses the complexities faced in managing knowledge graphs. The original predicates and facts in the KG are foundational elements that fall under the broader category of Knowledge Graphs. The evaluation method of SHACLEARNER is noted to differ from the OPRL evaluation module, showcasing advancements in rule evaluation techniques. YAGO2s is notable for having 74 target predicates, which are utilized in the evaluation of knowledge graph learning methods. TreeSC is classified under thresholds, emphasizing its role in measuring tree structure support. The running time for aggregating IOP rules into trees is a broader term that relates to the efficiency of managing inverse open path rules. Path shapes are categorized under patterns, indicating their role in defining structural configurations. Notably, 44% of IOP rules are classified under rules, reflecting the proportion of rules that are filtered during analysis. Shapes that can be trivially expressed in a fragment of SHACL are included in the broader category of The shapes, which encapsulate various structural patterns. Lastly, the synthetic KG is identified as Poker, a small knowledge graph designed for specific evaluations.",
    "Table 2 shows the proportion of target predicates for which at least one Inverse Open Path (IOP) rule was found, providing insights into the effectiveness of the rule-learning method. The semantics of the SHACL language encompasses broader terms such as constraints on graph data, which are essential for validating the structure of knowledge graphs. Additionally, the application of SHACL shapes is a subset of basic SHACL, indicating its foundational role in defining constraints. The evaluation method Ev is categorized under the broader term method, which refers to the approaches used for mining IOP rules. Furthermore, the semantics of the SHACL language is part of the broader Shapes Constraint Language framework. OP rules, which are logical constructs in knowledge graph reasoning, fall under the category of rules. IOP rules specifically have a body that defines their structure, and rules with the same head and body may exhibit different cardinalities, indicating variability in their requirements. The SHACLEARNER method produces trees, which can be generated to represent relationships and constraints in knowledge graphs. The Open Path rule learning method is a type of learning algorithm that aids in discovering rules from knowledge graphs. IOPSC, or inverse open path standard confidence, is related to the broader concept of extension, which refers to the enhancement of graph structures. Higher confidence in the KG signifies improved reliability within Knowledge Graphs, while KG completion is a task aimed at enriching knowledge graphs. The argument in the SHACLEARNER algorithm is governed by Parameters, which dictate the learning process. Large KGs are a broader category that includes public knowledge graphs, showcasing the extensive nature of these data structures. The power of KGs highlights their ability to evolve and extend, while the constituent IOP rules contribute to the broader concept of knowledge representation. Lastly, IOP rules are characterized by being non-increasing with length, indicating that as the length of the rule increases, the support value does not rise.",
    "The sampled subgraph KG K' has a relationship with the target predicate Pt, indicating its relevance in the context of knowledge graph learning. The SHACLEARNER method is designed to discover shapes of varying complexity and diversity, which include complex shapes that are essential for defining constraints within knowledge graphs. At the core of SHACL, there exists a broader category known as SHACL shapes, which encompasses various structural representations. In this framework, a person is classified under the broader term entities, which also includes specific entities like entity e_i. Furthermore, complex shapes are recognized as a broader term for shapes, highlighting their significance in knowledge representation. The concept of entity-instantiation is linked to closed path (CP) rules, illustrating how specific instances are realized within these rules. The inverse open path support, denoted as IOPsupp, is quantified by the condition head_r(e, e'), emphasizing the relationships between entities. YAGO2s, a prominent knowledge graph, falls under the category of public knowledge graphs, showcasing its extensive integration of information. The triple format serves as a broader term for Knowledge Graphs (KGs), facilitating the organization of data. Additionally, the sequence of paths represented as Path1 ^ Path2 ^ ... ^ Pathq is classified under paths, indicating their role in expressing relationships. The proportion of target predicates is associated with at least one IOP rule, reflecting the effectiveness of rule learning. Rule quality measures are a broader term for quality, which assesses the validity of the learned rules. The potential rules in the search space are categorized under rules, highlighting the complexity of rule discovery. The logical foundations for the semantics of the SHACL language are encompassed within SHACL shapes, providing a theoretical basis for validation. The input KG is a broader term for graph, representing the complete knowledge graph utilized in the learning process. Lastly, Table 1 reports the specifications of two benchmarks, detailing their characteristics and contributions to the evaluation of the SHACLEARNER algorithm, while MinTreeSC is recognized as a broader term for Parameters, indicating its role in setting thresholds during the learning process.",
    "In the realm of knowledge graphs, OPHC has a broader term known as rules, which encompasses various constructs that define relationships and constraints within the graph. Quality rules, which are a subset of quality, are evaluated based on specific metrics to ensure their reliability. Additionally, candidate IOP rules also fall under the category of rules, representing potential logical constructs generated for knowledge graph analysis. The approach taken in this context is a method that simplifies the complexity of sampling knowledge graphs. Algorithm 1: SHACLearner, a specific algorithm, is designed to learn inverse open path rules, contributing to the overall understanding of graph data. The head of these rules relates to entities, which are the fundamental components of knowledge graphs. Furthermore, entities and predicates collectively represent the nodes and relationships within the graph. Each tree, which is a hierarchical structure, is part of the broader category of trees used to represent relationships among entities. High-quality rules, another aspect of quality, are derived from the analysis of these graphs. The concept of millions of entities highlights the vastness of data present in knowledge graphs. OP rules are utilized to assess the quality of OP rules, which are measured by metrics such as open path standard confidence, derived from closed path forms. The population of a KG refers to the organization of data within Knowledge Graphs, while Pt represents a target predicate related to entities. The 74 target predicates selected from the YAGO2 knowledge graph serve as objectives for evaluating the SHACLEARNER method. Open path standard confidence is specifically derived from closed path forms, ensuring the quality of the rules. Functional Graph Dependency (FGD) plays a crucial role in defining constraints within the graph, ensuring consistency. R', an initially empty set of inverse open path rules, is updated by the operation Add PathFinding(K', Pt, P, A, k) to R', which incorporates pathfinding algorithms into the learning process. Lastly, max rule cardinality is a parameter that falls under the broader category of Parameters, guiding the learning process in knowledge graph analysis.",
    "In the realm of knowledge graphs, 'y' is recognized as having a broader term, which is 'entities', indicating its role as a specific attribute related to music albums. The concept of 'open path head coverage' is derived from 'closed path forms', highlighting the relationship between these two constructs in evaluating the quality of open path rules. Furthermore, 'path shapes' focuses on the 'shape learning system', which is essential for constructing and validating graph data. The large-scale knowledge graph 'YAGO2s' utilizes every one of the '37 binary predicates', showcasing its comprehensive structure. Additionally, 'recursive SHACL shapes' has a broader term of 'SHACL-SPARQL', emphasizing its connection to this specification for querying RDF data. The entity 'e5' also falls under the broader category of 'entities', while 'sh:nodeShape' is a broader term for 'a set of SHACL shapes', which defines constraints on RDF data. Knowledge Graphs have proliferated on the Web, reflecting their growing importance in organizing information. The hierarchical structure of 'trees' is classified as 'SHACL shapes', serving as a foundational element in graph theory. 'Cardinality annotations' and 'dealing with uncertainty in the constraints and the learning process' both have broader terms of 'constraints', indicating their role in defining the expected structure of data. Moreover, 'shapes that can be trivially expressed in a fragment of SHACL' is encompassed by both 'Shapes Constraint Language' and 'constraints on graph data', illustrating its relevance in validation processes. The process to 'mine both OP and IOP rules' is categorized under 'rules', while the 'IOP rule learner' is a broader term for 'algorithm', showcasing its systematic approach to learning. The 'three massive real-world benchmark KGs' include 'DBpedia 3.8', which is a significant dataset for semantic web applications. 'Standard SHACL shapes' are defined under the broader term of 'application of SHACL shapes', which refers to the validation of RDF databases. Lastly, 'complex shapes' are recognized as a broader term for 'shapes', and 'IOPHC' is categorized under 'quality measurements', indicating its role in assessing the effectiveness of inverse open path rules.",
    "The head is defined as a sequence of paths or branches, which plays a crucial role in knowledge graph structures. Transforming KGs with type predicates for experiments is necessary since it facilitates the adaptation of real-world KG models. KG K' is a specific instance that falls under the broader category of public knowledge graphs. Stricter quality thresholds are a refinement of the general thresholds used in evaluating knowledge graph rules. Similarly, IOP Standard Confidence is a specific measure that is part of the broader category of measures used to assess rule quality. Many relevant rules are encompassed within the broader term of rules, indicating their significance in knowledge graph learning. The condition head_r(e, e') is at least equivalent to the cardinality annotation Car(r), which sets a minimum requirement for the number of distinct paths. The SHACLEARNER (-S-H) model is characterized as inefficient yet complete, highlighting its exhaustive approach to rule learning. The predicate sh:nodeShape is a specific instance of shape constraints, which are essential for defining the structure of graph data. An example of a shape from Wikidata serves as a representation of the broader category of shapes. The concept of a bounded number of entities refers to a limited subset of entities that are relevant to specific predicates, fitting within the broader category of entities. The Open Path rule learning method is categorized under algorithms, showcasing its systematic approach to rule discovery. Quality measures are utilized to express the effectiveness of IOP rules, which themselves are part of the broader category of quality measures. Rule quality is specifically measured by the Inverse open path head coverage, ensuring that the rules meet established standards. Such constraints are a subset of the broader constraints that guide the integrity of knowledge graphs. Knowledge graph completion is a process that enhances the broader category of Knowledge Graphs by inferring missing information. The IOP rules are also categorized under entities, emphasizing their role in defining relationships within knowledge graphs. Lastly, a KG fact is a specific instance that falls under the broader category of Knowledge Graphs, illustrating the interconnectedness of data points within this framework. The predicate sh:nodeShape is also a part of the broader SHACL framework, which provides a formal structure for defining constraints.",
    "The number of learnt rules with IOPSC in the range of [0.1, 0.3) has a broader term known as rule learners, which are algorithms that identify patterns in data. IOP rules, which are a type of rule, also have a broader term referred to as concepts. In practical scenarios, real applications retain the highest quality rules, which are the most effective rules identified through the SHACLEARNER method. Additionally, additional head predicates are a broader term for head predicates, while these two rules and lower-cardinality versions of that rule both fall under the broader category of rules. The KG, representing a knowledge graph, is a broader term for public knowledge graphs. The next step involves the completion of IOP rules. In the context of predicates, P2_t has similarities with P1_1, indicating a relationship between these two predicates. The object argument binds to the target predicate, which is essential in the structure of knowledge graphs. KG rule learning systems are a broader term for systems that utilize various rule languages. A KG is a broader term for graphs, and the facts in the KG are a broader term for Knowledge Graphs. An entire path of shape predicates is a broader term for paths, while 28 unary predicates are used as the target predicates in the learning process. The original KG is also a broader term for graph structures. The core of SHACL encompasses a set of SHACL shapes, and property shapes act to constrain the target predicate, ensuring that the relationships within the knowledge graph adhere to defined rules.",
    "The embedding-based method has a broader term known as method, which refers to a proposed approach for mining Inverse Open Path rules from knowledge graphs. In this context, the cardinality of a path is a concept that has a broader term of paths, representing specific shapes in knowledge graphs. An interactive framework defines SHACL shapes, which are formal specifications used to validate data structures in knowledge graphs. The rule 'human(x, x) -> father(x, z2) ^ human(z2, z2)' is categorized under rules, which have broader terms that include various logical constructs. The logical foundations for the semantics of the SHACL language are encompassed within a set of SHACL shapes. A KG, or knowledge graph, is a broader term that includes various structured representations of knowledge. The initial IOP mining time is a specific instance of IOP mining time, which refers to the duration required for discovering Inverse Open Path rules. The OP rule P1(x, z0) <- P2(z0, z1) ^ P3(z1, z2) is another example of rules. IOPHC, which quantifies the proportion of instances satisfying the head of an inverse open path rule, is a measure that has broader terms. Each entity e_i is a specific instance within the broader category of entities. The search space, which refers to the set of all possible Inverse Open Path rules, is a concept that is broader than individual rules. The scoring function heuristic for OP rules is a method that has a broader term of OP rule. OPRL, the open path rule learner, is a type of rule learner. IOPSC illustrates the computation of an example, demonstrating the effectiveness of inverse open path rules. One work utilizes ontology constraint patterns to generate SHACL shapes. KG completion is a broader term that includes public knowledge graphs, which are structured representations of information. OPSC, a metric for assessing open path rules, has broader terms known as Parameters. A fragment of the KG K' refers to a subgraph of knowledge graphs. Finally, learning each target predicate is a broader term for the overall process of learning.",
    "In the context of knowledge graphs, shapes include closed rules, which are essential for defining constraints and relationships. The SHACLEARNER (-S-H) model operates within a broader system designed to discover patterns in these graphs. Entities in the sampled KG are related to a target predicate, which is crucial for understanding the structure of the graph. Schema information for KGs has a broader term, graph, indicating its foundational role in organizing data. The path, a sequence of dependent predicates, has a broader term known as paths, which encapsulates various structural connections. This paper focuses on learning paths, which guide the extraction of meaningful patterns. The core of SHACL, which imposes constraints on target predicates, has a broader term of shape constraints, emphasizing its importance in validating graph data. The SHACLEARNER evaluates its performance on Wikidata, a prominent knowledge base. Rules within this framework may include redundant and low quality rules, which are identified as needing further refinement. Procedural methods, while useful, are not shown to be scalable to handle real-world KGs, highlighting the challenges in practical applications. The core of SHACL is also a broader term for SHACL itself, reinforcing its foundational role. Discovered constraints are more certain than those that are missed, ensuring a higher quality of learned patterns. IOPHC, a measure of rule effectiveness, has a broader term known as feature, which underscores its significance in the learning process. The max rule length, a critical parameter, has a broader term of Parameters, which governs the learning settings. Logical foundations for the semantics of the SHACL language are encompassed within shape constraints, providing a theoretical basis for their application. A tree, representing complex hierarchical structures, has a broader term of entities, illustrating the interconnectedness of knowledge within the graph. The small sampled KG serves as a reduced subset of the graph, facilitating the evaluation of candidate rules. Lastly, sh:nodeShape is a predicate that has a broader term of The shapes, which collectively define the structural patterns within knowledge graphs.",
    "SHACL provides the logical foundations for the semantics of the SHACL language, which is essential for defining and validating constraints on graph data. The set of sampled entities for a target predicate is a subset of entities, while the logical foundations for the semantics of the SHACL language are encompassed within SHACL itself. The full knowledge graph (KG) is represented by an adjacency matrix, which illustrates the relationships between entities. Real-world KG models are a broader category that includes public knowledge graphs, showcasing diverse data representations. IOP mining, a process under the umbrella of rule learning, is crucial for discovering Inverse Open Path rules that enhance knowledge graph validation. IOP Head Coverage is a measure that evaluates the effectiveness of these rules, contributing to the overall quality performance of rules in knowledge graphs. The body of the shape, which defines the conditions for entity relationships, is part of the broader category of shapes. Additionally, the task of learning shapes from knowledge graphs is a significant endeavor within the field, highlighting the importance of structured knowledge representation.",
    "In the realm of knowledge graphs, trees are also recognized as paths, highlighting their structural significance. The concept of l atoms has a broader term known as Parameters, which encompasses various settings that govern the learning process. SHACL, in conjunction with SHACL advanced features, provides an extensive framework for defining and validating constraints on graph data. Furthermore, trees are ready for translation to SHACL, indicating their adaptability within this formal language. The evaluation of quality measures is a critical aspect of IOP rules and trees, ensuring the reliability of learned patterns. The entity e4, which has a broader term of entities, plays a role in the context of inverse open path rules. Additionally, the sampled KG is a subset of public knowledge graphs, facilitating the learning of rules from larger datasets. The application of SHACL shapes falls under the broader category of applications, demonstrating its versatility in various use cases. Our work approaches the semantics of the SHACL language, aiming to enhance the understanding and application of these concepts. Real-world KGs are also classified under public knowledge graphs, emphasizing their relevance in practical scenarios. OPSC serves as a broader term for rules, indicating its foundational role in assessing the quality of open path rules. Similarly, IOPSC encompasses Parameters and quality, reflecting its importance in evaluating the effectiveness of inverse open path rules. Atoms, fundamental components of IOP rules, have a broader term known as elements, which introduces novel features in the learning process. DBpedia 3.8 learns from quality rules, showcasing its capability to derive insights from structured data. Occupations are associated with IOPSC, categorizing entities based on job roles. The KG is customized for a specific target predicate, ensuring that the data aligns with defined constraints. Lastly, the metrics open path: OPsupp, OPSC, OPHC serve as broader terms for open path, while IOPSC in the range of [0.1, 0.3) is classified under rule learning experiments, indicating a moderate level of confidence in the learned rules.",
    "The sampled KG has a broader term of public knowledge graphs, which are structured representations of information that facilitate knowledge organization and retrieval. Within this context, versions of the rule extended with additional head atoms are categorized under rules, which define constraints and relationships in knowledge graphs. YAGO2s demonstrates a tendency towards greater cardinalities, indicating more stringent conditions in its relationships. Public knowledge graphs also fall under the broader category of Knowledge Graphs. Additionally, closed rules are another type of rules that express specific patterns in knowledge representation. The sh:property is a broader term for SHACL shapes, while sh:nodeShape pertains to constraints on graph data, both of which are essential in the SHACL framework. The input graph, which serves as the original knowledge graph, is a specific instance of a graph. Parameters include max rule cardinality MCar, which specifies the maximum allowable cardinality for rules, and Car=3, another parameter related to rule evaluation. Active knowledge graph completion is a broader term for public knowledge graphs, emphasizing the completion of knowledge through defined relationships. The SHACL learning method incorporates an embedding-based method, which utilizes vector representations for learning. Furthermore, max rule length is a parameter that specifies the maximum number of predicates in a rule, while association rule mining is a broader term for methods that discover relationships in data. Knowledge graph completion is a task aimed at enhancing knowledge graphs by inferring missing information, and Embeddings() is a method that computes embeddings for predicates in a sampled knowledge graph.",
    "Inverse open path head coverage is a metric that has a broader term known as Parameters, which defines the maximum length of rules in knowledge graph learning. Enterprise knowledge graphs, which are a type of Knowledge Graphs, serve as structured representations of knowledge within organizations. However, this method cannot handle real-world KGs, indicating a limitation in its application. Additionally, Google's internal knowledge graph is a broader term for graph structures that enhance search results. More complex tree shapes are categorized under shape trees, which represent intricate data relationships. The body in the KG, which refers to entity pairs satisfying rule conditions, is also a broader term for Knowledge Graphs. Shapes that can be trivially expressed in a fragment of SHACL fall under basic SHACL, while learned rules are associated with algorithms that extract high-quality rules from knowledge graphs. The maximum number of predicates of the rules is another aspect of Parameters, influencing the complexity of rule learning. The application of SHACL shapes is a broader term for the shape used in validating RDF data models. Constraints, including maximum length, define the expected structure of knowledge graphs. The paper critiques existing methods, stating it cannot deploy their method due to scalability issues. Rule quality is measured by the Inverse open path standard confidence, which evaluates the effectiveness of learned rules. The sequence of paths or branches is a broader term for branches in SHACL shapes, while a fragment of SHACL is encompassed by SHACL Core. The original predicates and facts in the KG are categorized under public knowledge graphs, which are openly accessible. Standard SHACL shapes relate to the semantics of the SHACL language, providing a framework for validating graph data. Open path rules are presented in this section, illustrating their role in knowledge graph rule learning. Lastly, the body of r is recognized as a fact in KG, emphasizing the foundational elements of knowledge representation.",
    "The IOP rules are aggregated in GreedySearch, which utilizes these rules to enhance its algorithmic efficiency. IOPSC learns from Wikidata, indicating a relationship where knowledge is derived from this collaborative knowledge base. Additionally, IOPSC is in the range of certain parameters that define its operational limits. The SHACL-SPARQL specification has a broader term known as constraints, which encompass the rules governing data integrity in knowledge graphs. Similarly, P2_t has a broader term of Parameters, which control various aspects of the learning process. The number of trees for each KG is related to the count of distinct predicates, illustrating the structural complexity of knowledge graphs. The shapes we can discover are categorized under the broader concept of entity types, while the object argument is specifically designed for each target predicate, linking entities through defined relationships. The least constrained shape serves as a foundational structure within the broader category of shapes, which represent various patterns in knowledge graphs. Functional Graph Dependency (FGD) is another concept that falls under the broader term patterns, defining constraints on entity relationships. Trees, as a specific type of structure, are included in the broader category of The shapes, which encapsulate diverse structural representations. The three very different KGs, including YAGO2s, DBpedia, and Wikidata, are encompassed within the broader term graph, highlighting their unique characteristics. Property shapes are a subset of SHACL advanced features, which enhance the validation capabilities of RDF data. The power of KGs is reflected in their relationship with public knowledge graphs, emphasizing their role in data organization and retrieval. Shapes of varying complexity and diversity are also categorized under The shapes, showcasing the different structural patterns that can be derived. A small complete KG is a specific instance of Knowledge Graphs, designed for evaluation purposes. Higher confidence in the KG is associated with public knowledge graphs, indicating the reliability of the data represented. Lastly, the closed path rule r has a broader term of Parameters, which govern its application in knowledge graph rule learning systems, while SHACL trees are categorized under the broader concept of entity types.",
    "Rule learning is a specialized approach within the broader field of learning, focusing on discovering patterns in data. In the context of knowledge representation, Poker serves as a specific example of a knowledge graph, illustrating how entities can be modeled with attributes. One work exemplifies the application of input ontologies to automatically generate SHACL shapes, which are fundamental to the core of SHACL, a framework that defines constraints on graph data. The left-hand chart visually represents the relationship between the quality of rules and their Inverse Open Path Standard Confidence, while P1_t is a predicate that connects entities through a composite structure. The concept of IOP Standard Confidence is crucial for assessing rule quality, which is measured against various thresholds. The learning process also involves understanding the shapes derived from knowledge graphs, including partially instantiated shapes. The SHACLEARNER method evaluates its performance on datasets like DBpedia 3.8, aiming to identify constraints that may be missed during the learning process. Overall, these elements contribute to the understanding and validation of real-world massive knowledge graphs.",
    "The KG is represented by the adjacency matrix representation of the KG, which encodes the relationships between entities. In this context, rules illustrate the practical meaning of the IOPSC and IOPHC qualities, providing insights into the effectiveness of learned rules. More complex shapes and shapes in the form of a path both fall under the broader term shapes, which define structural representations in knowledge graphs. Modern KGs, characterized by their schema-free nature, are a broader term for graph, emphasizing the challenges in learning shape constraints. The object entity is a broader term for entities, highlighting its role within the knowledge graph. The predicate Pi is a key component in the KG, facilitating relationships between entities. The latter rows of data show the percentage difference in the number of rules found, reflecting the performance of various algorithms. Multiple branches represent a broader term for branch, indicating the various paths in a tree structure formed by aggregating rules. The population of a KG is a broader term for public knowledge graphs, emphasizing the organization of data. Standard confidence (SC) is also a broader term for entities, quantifying the reliability of rules. Rules are added to the tree, which serves as a structured representation of relationships. Car(r) is a broader term for Cardinality annotations, specifying constraints on relationships. The 146 rules learned represent a broader term for quantity, indicating the volume of distinct rules derived. The Cardinality of an IOP rule is a broader term for rules, defining the minimum requirements for rule satisfaction. OPRL for active knowledge graph completion is a broader term for graph, facilitating the inference of facts. IOPSC serves as a broader term for entities, measuring the quality of rules. The completion strategy is a broader term for strategy, employing a depth-first approach for knowledge graph completion. Our proposed tree shapes provide an opportunity to work sequentially along a path of dependent questions, enhancing the querying process. Lastly, constraints on graph data are a broader term for graph, ensuring the integrity of knowledge graphs.",
    "The maximum number of predicates of the rules has a broader term known as rules, which are formal constructs within the SHACL framework. The application of SHACL shapes is encompassed by the broader term SHACL Core, providing a standard for validating RDF graphs. The process of PathFinding(K', Pt, P, A, k) is a specific method that falls under the broader category of processes, aimed at generating candidate IOP rules. In this context, sh:property is a broader term that relates to a set of SHACL shapes, which define constraints on RDF data. The investigation into the process of constructing one kind of more complex shape involves paths, which are sequences of connections in knowledge graphs. Two scoring functions are defined to help produce candidate IOP rules, assisting in the mining of these potential logical constructs. Diverse shapes, which represent various structural representations of data, fall under the broader term shapes. Mined rules, extracted patterns from knowledge graphs, also belong to the broader category of rules. The body and the head of a rule are satisfied in a knowledge graph (KG), while inverse open path support is quantified by the closed path rule r. The Sampling() method computes a fragment of the KG K', facilitating the learning of shape constraints. The Inverse Open Path Head Coverage (IOPHC) indicates the relevance of the rule, reflecting how well the rule captures relationships in the graph. Human-KG-completion is a broader term that relates to the graph, emphasizing the strategy for completing knowledge graphs. Entities that satisfy the second argument of the body are part of the broader category of entities within the graph. Specific shapes, represented as paths over connected entities, serve as foundational elements for constructing more complex structures. The shapes derived from knowledge graphs are utilized in Schimatos, an editor designed for manual knowledge graph completion. Rules of lower quality are also categorized under rules, indicating their lesser confidence in the context of the SHACLEARNER system. IOP rules, which serve as a foundational building block for constructing complex shapes, are classified under the broader term algorithm. Finally, Car(r) is identified as the cardinality annotation for the closed path rule r, indicating the lower bound on the number of distinct head paths satisfied in the knowledge graph.",
    "In the context of knowledge graphs, the closed path rule 'r' satisfies the cardinality annotation 'Car(r)', indicating a specific relationship between them. The 'input graph' is identified as 'the input graph', which serves as the foundational data structure for processing. The year '2017' has a broader term 'date', highlighting its significance in the context of temporal data. Additionally, 'open path support' is related to 'Parameters', which encompass various settings for knowledge graph rule learning. The 'additional tree-shaped constraint' is a specific type of 'constraints' that further refines the rules applied in knowledge graphs. Within the logical expression 'P1(x, z0) -> P2(z0, z1) ^ P3(z1, z2)', the predicate 'P2(z1, z2)' is a crucial component. The 'smart KG editor' is a tool that falls under the broader category of 'graph', facilitating user interaction with knowledge graphs. Furthermore, 'IOPSC' is categorized under 'variables', which are essential in defining the parameters of rules. The rule 'r' also belongs to the broader category of 'rules' used in knowledge graph systems. The 'interaction between inference rules and SHACL shapes' involves 'inference rules' and represents a framework for validating the compliance of shapes in knowledge graphs. Knowledge graphs (KG) are recognized as 'large data-first graph databases', emphasizing their capacity to manage extensive data. The fact 'Pt(e, e')' indicates a relationship between two entities within the KG. 'Node shapes' are defined to constrain the 'target predicate', ensuring that entities adhere to specific structural patterns. The 'Sampling()' method is essential for the 'embedding learner', which computes representations of entities in the context of learning rules. The 'distribution of mined rules' illustrates the 'number of rules' extracted from knowledge graphs, showcasing their diversity. Additionally, 'shapes that can be trivially expressed in a fragment of SHACL' fall under the broader category of 'shapes', which define constraints on graph data. The parameter 'Car=2' is another aspect of 'Parameters', indicating minimum cardinality constraints. Lastly, 'facts in the KG' are a subset of 'Knowledge Graphs', representing individual pieces of information, while the 'Shapes Constraint Language' serves as a framework for defining 'language' constraints within knowledge graphs.",
    "In the realm of knowledge graphs, the term 'sh:property' has a broader term known as 'shape constraints', which are essential for defining rules and conditions for validating graph data. Similarly, 'nested patterns' fall under the broader category of 'patterns', which encompass various structural configurations within knowledge graphs. The concept of a 'KG' is also a broader term for 'graph', highlighting the interconnected nature of these data structures. Contributors play a vital role as they extend a KG by adding new data. The 'IOP rule r' is significant as it outputs 'trees', which are hierarchical structures used in knowledge representation. Furthermore, 'candidate IOP rules' are generated based on the 'embedding representation of the predicates', showcasing the relationship between predicates in the graph. A proposed method aims to detect which shapes could be violated by applying a rule, thereby ensuring data integrity. The 'IOPHC' metric shows a similar pattern for the right hand chart, illustrating the distribution of mined rules. Future work is focused on validating 'shapes' to enhance the knowledge graph's expressivity. Additionally, 'KG facts' are broader terms that encompass 'public knowledge graphs', which are structured representations of information. The 'sh:property' is also related to 'SHACL', a framework for defining constraints on graph data. The sampled KG is noted to be far smaller than the original KG, which is a common scenario in knowledge graph analysis. Many KGs are categorized under the broader term 'graph', emphasizing their collective nature. The process of 'knowledge graph completion' is crucial for enhancing public knowledge graphs by inferring missing information. The 'IOP' rules are broader than both 'rule learners' and 'concepts', indicating their foundational role in knowledge representation. The term 'object' is a broader term for 'entities', which are the individual items within a knowledge graph. Constraints over facts are directly related to the 'target predicate', ensuring that entities meet specific conditions. Lastly, the relationship between 'r' and 'r2' illustrates the representation of closed path rules, while 'OPRL' serves as a broader term for algorithms used in rule learning.",
    "Large KGs cannot obtain ongoing maintenance and extension, which is essential for their effective management. Mined rules demonstrate the quality of performance, indicating their reliability in knowledge representation. The scope of knowledge has a broader term, knowledge, which encompasses the information that can be derived from knowledge graphs. Similarly, constraints, which define the expected structure of data, have a broader term, restrictions, that impose cardinality requirements. A fragment of SHACL is related to the broader term, the application of SHACL shapes, which is crucial for validating RDF data models. SCALEKB, a rule language, has a broader term, rule languages, that facilitate the expression of logical implications in knowledge graphs. The process of learning is also a broader term that encompasses the methods used to acquire knowledge from these graphs. The facts in the KG are part of public knowledge graphs, which serve as structured representations of information. The entity concept has a broader term, entities, which refers to the individual items within a knowledge graph. KG rule learning systems are part of the broader category of rule learning experiments, which systematically investigate rules from data. K' is assigned and obtained by Sampling(K, Pt), focusing on a specific target predicate. F is defined as a set of RDF triples that represent relationships among entities, illustrating the computation of quality measures. K' also has a broader term, graph, representing the mathematical structure of relationships. A set of pairs of entities (e, e1), ..., (e, eq) has a broader term, entities, indicating the relationships defined by predicates. IOPsupp, a measure of inverse open path support, has a broader term, measures, which evaluate the effectiveness of rules. The count of e' refers to the number of entities satisfying specific rule conditions, and it has a broader term, entities. The distribution of mined rules illustrates the variety of rules extracted from knowledge graphs and has a broader term, rules. High quality rules, which meet established thresholds for confidence, also fall under the broader category of rules. Finally, a sampled knowledge graph is a reduced version of Knowledge Graphs, retaining only the most relevant entities for efficient analysis.",
    "The quality of performance encompasses the broader concept of performance, which refers to the effectiveness of the SHACLEARNER system in learning from knowledge graphs. Within this framework, the property sh:minCount is a specific aspect of SHACL shapes, which are used to define constraints in knowledge graphs. The IOP rule Pt(x, y) -> P1(y, z) ^ P2(z, t) is a type of rule that illustrates the relationships between entities, and it falls under the broader category of rules. Additionally, closed path rules are formed by the rule, demonstrating how entities can be connected in a loop. The IOP rule r is illustrated through an example, showcasing its application in knowledge graphs. IOPSC, a measure of inverse open path standard confidence, learns from the DBpedia 3.8 dataset, highlighting the importance of real-world data in evaluating rule effectiveness. The object argument, which is a broader term for argument, plays a crucial role in the construction of knowledge graphs. Similarly, head atoms are a subset of atoms, representing the predicates that predict instances based on relationships defined in the rules. The open path support metric, or Opsupp, is another parameter that contributes to the understanding of knowledge graphs. A KG, or knowledge graph, is a broader term that includes public knowledge graphs, which are essential for data organization and retrieval. Inverse open path standard confidence is also categorized under parameters, emphasizing its role in evaluating rule quality. Benchmark KGs serve as a foundational aspect of graph structures, while inverse open path (IOP) rules represent specific concepts within knowledge graphs. Building blocks are fundamental for expressing shape constraints, and K' contains all predicates in the sampled K', which are vital for learning rules. IOPHC illustrates the computation of an example, further demonstrating the practical application of these concepts. The results of these evaluations are presented in the form of a tree, which visually represents the relationships among entities. All binary predicates of YAGO2s are part of the broader YAGO2s knowledge graph, and standard SHACL shapes are defined within the SHACL-SPARQL framework. Finally, IOP Head Coverage is a measure that falls under the broader category of rule quality, indicating the effectiveness of the rules in knowledge graph validation.",
    "The learning algorithm is a broader term that encompasses the method used for mining Inverse Open Path (IOP) rules. Within this context, the process of constructing one kind of more complex shape is a subset of the shapes derived from knowledge graphs. Greedy search plays a crucial role as it both uses and aggregates IOP rules, facilitating the discovery of patterns. The distribution of rules is analyzed with respect to features that characterize the learned rules. Additionally, the number of potential rules in the search space grows exponentially with the maximum number of predicates of the rules, highlighting the complexity of the rule discovery process. The target predicate is a specific instance that falls under the broader category of targets, while a fragment of the KG K' represents a subgraph of public knowledge graphs. Entity x serves as an example of entities within the graph, and the latter rows in data present statistical insights. The support measure, suppr, is a broader term under Parameters that govern the learning process. GreedySearch is another method that operates within this framework. Entity instances and directly related entities are both classified under the broader term entities. Facts about those predicates remain in K', providing context for the rule learning process. The PathFinding() function produces candidate IOP rules, which are essential for the overall learning strategy. The sh:nodeShape predicate is a broader term for basic SHACL, while the IOPSC in the range of [0.1, 0.3) indicates a moderate confidence level in the learned rules. Lastly, r1 is a specific version of an IOP rule that is categorized under variables.",
    "In the realm of knowledge graphs, various entities and concepts are interconnected through specific relationships. For instance, the performance of the SHACLEARNER (-S+H) is compared with that of the ideal rule learner (SHACLEARNER (-S-H)), highlighting the differences in their operational efficiencies. Additionally, knowledge that can be acquired is a broader term encompassing the general concept of knowledge. The IOP rule Pt(x, y) -> P1(y, z) ^ P2(z, t) establishes a relationship with certain properties in the embedding space, indicating how these properties influence the rule's application. Furthermore, different complexities are categorized under the broader term complexity, while PathFinding is recognized as a method that encompasses various approaches to problem-solving. The synthetic KG serves as a specific instance of a graph, illustrating the application of shapes, which are broader features within the knowledge graph framework. The sh:path expression is integral to the application of SHACL shapes, which are essential for validating RDF data structures. SHACL Core features also fall under the broader category of features, emphasizing their foundational role in defining constraints. Additional constraints are classified as a subset of constraints, enhancing the expressiveness of knowledge graphs. The concept of OP is a broader term that includes entities, while open path (OP) rules are defined as closed, indicating their complete nature. The shape learning system is a broader term for the system designed to extract patterns from knowledge graphs. The qualities of the rule, which include metrics like IOPSC and IOPHC, are part of the broader quality assessment framework. Notably, only a very small proportion of entities associated with any predicate within distance l is categorized under entities, reflecting the sparsity often found in knowledge graphs. Pn' is identified as a component of the predicate Pn'(z(n-1), y), which is crucial for defining relationships in the graph. Lastly, e1 is a broader term that encompasses elements, while maximum length is a parameter that governs the rule generation process, and RLvLR is recognized as a broader system for rule learning.",
    "In the context of knowledge graphs, a larger required cardinality places constraints on the number of instances of the head in the knowledge base (KB). This phenomenon might be a result of the intentional use of type-like unary predicates, which are relevant in the learning process. KG documentation has a broader term known as graph, which encompasses the mathematical structures representing relationships between entities. The set of entities, denoted as e1, ..., en, also has a broader term, simply referred to as entities. The time of learning is a crucial aspect that has a broader term of learning, indicating the period during which rules are acquired. The SHACLearner algorithm, a specific method for learning shapes, falls under the broader category of algorithms. Open path standard confidence is defined in relation to closed path rules, represented by r, which are essential for evaluating the quality of rules. Shape constraints learn from schema-free knowledge bases, while the Poker KG serves as a specific example of public knowledge graphs. The practice of applying these concepts has a broader term known as applications, which includes extending a KG, also categorized under public knowledge graphs. Closed path rules are characterized by links between the variables, forming a foundational aspect of knowledge graph rule learning. Open path head coverage is similarly defined by r, emphasizing its role in evaluating open path rules. The adjacency matrices are specifically designed for predicates P1, P2, and Pt, while the conjunction of IOP rules forms trees that represent hierarchical relationships. The second IOP rule has a broader term of rules, and quality annotations provide metadata that has a broader term of annotation. The IOP version of the same rule instantiates z0, a variable crucial for open path rules. Finally, OPsupp, which quantifies the support for open path rules, also has a broader term of rules, while One proposal suggests an extended validation framework that falls under the broader category of proposals.",
    "In the context of knowledge graph rule learning, the closed path rule 'r' is both assigned to and obtained by the evaluation function Ev(R', K, MCar, MinIOPSC, MinIOPHC), which assesses inverse open path rules against a knowledge graph K while applying constraints on cardinality and confidence measures. The shapes defined by the Shapes Constraint Language (SHACL) are specifically tailored for the target predicate, which is a key component in enforcing constraints within the graph. Furthermore, the inverse open path head coverage (IOPHC) is a broader term that relates to the overall quality of the graph, which is also reflected in the parameters that govern the knowledge graph K. The open path standard confidence is quantified by the measure OPSC(r), while the rule 'human(x, x) -> citizenOf(x, z1) ^ country(z1, z1)' is derived from the foundational IOP rules, illustrating the relationships between humans and their citizenship. Additionally, the class or datatype P is obtained through the process of generating embeddings from the knowledge graph K', which aids in the learning of these rules. The concept of occupations is linked to IOPHC, and the structural representation of a tree is a broader term under the category of shapes. The open path head coverage is similarly defined by OPHC(r). The SHACLEARNER method is novel in its approach to quality measures, and the large-scale knowledge graph YAGO2s has been utilized in various rule learning experiments, demonstrating its significance in the field. Lastly, two specific rules are distinguished by cardinality annotations, which specify the minimum and maximum instances required for certain relationships.",
    "The logical foundations for the semantics of the SHACL language encompass the basic SHACL, which serves as a foundational version of the Shapes Constraint Language. SHACLEARNER, a novel learning method, is categorized under rule learners and is designed to extract high-quality shape constraints from knowledge graphs. The distribution of rules is analyzed with respect to the length of the rules, while large KGs are broader representations of graphs. The property sh:minCount is part of a set of SHACL shapes, which define constraints on graph data. Furthermore, the quantity and quality of distinct rules learnt are evaluated as part of the broader category of rules. In knowledge graphs, Pn represents facts, and Closed rules (CR) are utilized for inferring new facts. The sequence of paths or branches includes the conjunction of paths represented as Path1 ^ Path2 ^ ... ^ Pathq. Our proposed system currently has no benchmark for evaluation. The ultimate evaluation of an IOP rule falls under the broader term of evaluation. Additionally, a sampled KG is a more specific term under the broader category of sample. Figures, such as Fig. 2, illustrate various aspects of the data, while sh:property is a broader term within the Shapes Constraint Language. K' is a subset of Parameters, and sh:property also relates to constraints on graph data. Facts about entities are a broader category that includes entities themselves. IOPSC is characterized as being non-increasing with length, and the composite predicate P* is based on its components. Lastly, One approach provides a sample of data to assist in the learning process.",
    "YAGO2s has a broader term known as graph, which serves as a mathematical structure for representing relationships between entities. Within the realm of massive KGs, the most recent version of Wikidata is included, showcasing the extensive data these graphs encompass. Closed path rules are characterized as a single unbroken loop of links, which are essential for inferring new facts through CRs. These closed rules facilitate the derivation of knowledge from existing relationships. Additionally, shapes within these graphs can vary in length, which is a broader term related to Parameters that define the characteristics of these shapes. The semantics of the SHACL language, which has a broader term of SHACL Core, provides a framework for validating RDF graphs. Enterprise knowledge graphs, which are a broader category of public knowledge graphs, integrate structured data for enhanced organizational insights. SHACL can be utilized to express attributes of a person, while entities in the sampled KG represent a broader term for entities that meet specific criteria. The body in the KG also falls under the broader category of public knowledge graphs. Furthermore, the left-hand tree and right-hand tree are both broader terms classified under trees, which are used to represent relationships in knowledge graphs. Evaluating KG rule-learning methods is a broader process that culminates in evaluation, assessing the effectiveness of learned rules. Wikidata, as a broader term, is categorized under KG, representing a central repository for structured data. Formal quality measures, which are broader measures, are employed to evaluate the quality of rules derived from knowledge graphs. The predicate sh:nodeShape is a broader term for shapes that define constraints on RDF data. Ultimately, the performance of our system demonstrates its capability to handle the task of learning shapes from massive knowledge graphs, a process that is significantly influenced by the curated development of YAGO2s.",
    "The property 'sh:minCount' has a broader term known as 'shape constraints', which are essential for defining rules in the Shapes Constraint Language (SHACL). Within this framework, the 'max rule length' is a specific parameter that dictates the maximum number of predicates allowed in an inverse open path rule. Additionally, 'more complex shapes' are categorized under 'complex shapes', indicating a hierarchy of structural patterns in knowledge graphs. The 'right-hand tree', which aggregates IOP rules, is a broader term for 'trees', showcasing the hierarchical relationships among entities. The 'third rule' is another example of a broader category, as it falls under 'rules', which are formal constructs used to validate knowledge graphs. Furthermore, 'sh:minCount' is also classified under 'SHACL', emphasizing its role in the language's structure. 'SHACL shapes' are linked to the concept of 'concept', representing the class or type membership in knowledge graphs. An 'OP rule' is defined by its association with 'two open variables', which are crucial for knowledge graph reasoning. The '39-branched tree' serves as a specific instance that aggregates 'IOP rules', illustrating the connections between various entities. The broader term 'rules' encompasses 'rule mining', a technique for discovering patterns in knowledge graphs. Moreover, the 'specific variable binding pattern' is a broader term for 'patterns', which characterize the structural configurations in knowledge graphs. The term 'r'' is also classified under 'rules', indicating its relevance in the context of IOP rules. 'KG rule learning systems' employ 'rule languages' to express logical implications within knowledge graphs. The 'small complete KG' is a subset of 'public knowledge graphs', designed for evaluation experiments. The term 'l atoms' refers to a broader category of 'atoms', which are fundamental components in IOP rules. 'Yago', a significant knowledge graph, is classified under 'Knowledge Graphs', highlighting its importance in the field. 'Basic SHACL' serves as a foundational version of 'language', which constrains relationships in knowledge graphs. The 'pairs (e', e)' are connected by 'the path P1, P2, ..., Pm', illustrating the relationships defined by predicates. Lastly, 'shapes' have a body defined by 'the body of the shape', and the 'proportion of mined rules' is presented through 'the various feature values', indicating the effectiveness of rule extraction methods.",
    "Poker is a specific instance that falls under the broader category of public knowledge graphs, while K is a type of knowledge graph that is encompassed by the larger concept of Knowledge Graphs. In the context of shapes, the body of the shape is a specific type of shape that is part of the broader category of shapes. The length of rules in knowledge graphs is directly related to the number of rules, as an increase in length leads to an increase in the number of rules. KG K' is a subgraph that is classified under the general term graph. Furthermore, all rules that bind the subject argument are organized according to the subject argument itself. A fragment of SHACL is a subset that is included within the broader semantics of the SHACL language. MinIOPSC is a parameter that is categorized under the broader term Parameters. IOP, which refers to Inverse Open Path rules, is a specific type of entity. The rules of the highest quality are a subset that falls under the general concept of quality. Additionally, shapes that can be trivially expressed in a fragment of SHACL are part of the SHACL Core. Entities that satisfy the subject argument of the body predicate, Pt, are classified under the broader term argument. The ideal rule learner, known as SHACLEARNER (-S-H), is a specific type of algorithm. The number of entities that can instantiate z0 to satisfy the head part is quantified as 5 ({e1, e2, e3, e4, e5}). IOPSC represents a measure of quantified uncertainty. Shapes are validated through a formal human-expert evaluation process. The head of the IOP rule is a broader term that encompasses rules. Embeddings(K') is a method that falls under the general process of knowledge graph analysis. The process of learning SHACL shapes from KGs is a specific instance of the broader learning process. Lastly, entity pairs are categorized under the general concept of Knowledge Graphs.",
    "The shapes are diverse in structural features, which encompass various characteristics that contribute to the overall structure of knowledge graphs. In this context, the set of entities {e2, e3} satisfies the head of specific rules, indicating their connection through defined predicates. KG rule learning systems operate under the broader term of rule learning, which focuses on discovering patterns and relationships within knowledge graphs. The quality and quantity of learnt rules are also related to the broader concept of quality, emphasizing the effectiveness of the derived shapes. Furthermore, the population of a KG is guided by the broader term population, which refers to the process of enriching the knowledge graph with data. Inductive logic programming and embeddings are both categorized under the broader term method, highlighting their roles in learning and representation. Additionally, Pt(e, e') serves as a fact in the KG, establishing relationships between entities. The IOPHC, which quantifies the satisfaction of inverse open path rules, falls under the broader category of entities. Parameters such as P1_1 and the TreeSCMIN parameter are crucial for defining the settings in the learning process. Information generated through these processes contributes to the broader understanding of knowledge. The KG itself is a type of graph database, allowing for the organization and retrieval of interconnected data. The entities forming the object argument of the last predicate, P2, are classified under the broader term argument, which is essential for constructing logical relationships. IOP rules, as formal constructs, are foundational for expressing complex shapes in knowledge graphs. Lastly, shapes provide readable patterns that facilitate the documentation and validation of graph data, while rules are characterized by their length, influencing their effectiveness. The 28 unary predicates serve as target predicates, guiding the constraints within the knowledge graph, and IOPSC is a measure that falls under the broader category of quality measures, assessing the effectiveness of the rules.",
    "The first rule has a broader term known as rules, which are formal constructs within the SHACL framework that define constraints and relationships in knowledge graphs. In this context, the KG, which represents a knowledge graph, also has a broader term referred to as graph. Within this framework, alternative shapes are categorized under the broader term The shapes, which encapsulate various structural patterns derived from knowledge graphs. The SHACLEARNER method treats property as a key element in extracting shape constraints. Additionally, IOPSC, which evaluates the effectiveness of inverse open path rules, is classified under the broader term concept. The head of an inverse open path rule is defined as the sequence of predicates P1 ^ P2 ^ ... ^ Pn, which represents the conclusion that must be satisfied by entity pairs. Real-world massive knowledge graphs, such as DBpedia 3.8, are included within this domain. Rules can be pruned by applying stricter quality thresholds to enhance their effectiveness. Furthermore, shapes can be utilized to complete information triggered by entities, ensuring that the knowledge graph remains comprehensive. The same variable in the rule also falls under the broader term rules, indicating its significance in rule formulation. The quality and quantity of learnt rules, which refers to the effectiveness and number of shape patterns derived, is encompassed by the broader term quantity. More complex shapes, which are advanced structural patterns, are classified under complex shapes. The predicate P1 represents facts in the KG, while IOPsupp is equal to the specific entity {e2} that satisfies the head of an inverse open path rule. TreeSC, a performance measure, is bounded above by the minimum IOPSC, ensuring that the derived tree structures meet quality standards. The method of predicting missing facts aims to enhance the completeness of knowledge graphs, which can acquire knowledge from schema-free knowledge bases. Lastly, facts in the KG are categorized under the broader term data, while Sampling is recognized as a broader term for the process of selecting subsets of data for analysis. Head instances, which indicate successful rule applications, are classified under the broader term Knowledge Graphs.",
    "The depth-first strategy has a broader term known as method, which encompasses various approaches for mining Inverse Open Path rules from knowledge graphs. IOP, which refers to Inverse Open Path rules, is categorized under entities, indicating its foundational role in knowledge graph structures. During the evaluation process, potential IOP rules are subjected to various operations in Ev, where they are evaluated, annotated, and filtered to ensure quality. The parameter 'l' is a specific aspect of the broader category of Parameters that governs the learning process. Additionally, the rule instances are a subset of rules, highlighting their importance in defining relationships within knowledge graphs. The sh:path expression is part of the broader semantics of the SHACL language, which is essential for navigating RDF graphs. Human-KG-completion is a process that aids in enhancing knowledge graphs, while closed path (CP) rules fall under the concept of structured relationships. IOPHC, or inverse open path head coverage, is another variable that measures the effectiveness of rules. The embedding-based OP rule learning method is a type of rule mining that utilizes advanced techniques to extract patterns from knowledge graphs. The SHACLEARNER method captures confidence, reflecting the reliability of the learned shapes. Furthermore, shapes that can be trivially expressed in a fragment of SHACL are defined within that specific subset of the language. KG completion is a broader term that encompasses the entire graph structure, while the right hand chart serves as a visual representation within the broader category of charts. Notably, the number of entities that can instantiate z0 to satisfy the head part is quantified as 7 ({e2, e4, e5, e6, e7, e8, e9}), indicating the specific instances fulfilling the conditions of the rule. Table 2 shows the running times in hours, providing insights into the efficiency of the SHACLEARNER method. Lastly, a low threshold is a choice made during the learning process, allowing for the inclusion of lower quality rules that can be refined later.",
    "The IOP rule language has a broader term known as language, which encompasses various forms of expression in knowledge graphs. Readable patterns, which facilitate the documentation of knowledge graphs, fall under the broader category of patterns. The number of entities is a concept that is included within the broader term entities, highlighting the distinct items represented in knowledge graphs. Shapes, which include trees, represent structural configurations in these graphs. Partially instantiated shapes are a subset of the broader category known as The shapes, which define various structural representations. The application of SHACL shapes is related to the semantics of the SHACL language, providing a formal interpretation for validating graph structures. The entity e2 is categorized under elements, which are novel components in knowledge graph systems. Facts in the KG are a part of public knowledge graphs, representing the individual assertions within these structured representations. Trees, as a specific type of shape, also fall under the broader term shapes. The strategy for knowledge graph completion is a more specific approach that utilizes tree structures to enhance querying efficiency. The entity E is another representation of entities, emphasizing the diverse identifiers used in knowledge graphs. Shapes of varying complexity and diversity are encompassed within the broader term shapes, illustrating the different structural patterns that can be learned. The sampled KG is far smaller than the original KG, indicating a reduced subset of public knowledge graphs for analysis. K' is categorized under variables, representing placeholders in knowledge graph rules. A non-recursive rule is identified as being redundant with respect to the KG, indicating its limited contribution to new information. One work utilizes two different kinds of knowledge to automatically generate SHACL shapes, demonstrating the integration of ontology constraint patterns. Head branches, which connect subjects and objects in SHACL shapes, are a broader term for branches, representing specific paths in knowledge graphs. Heuristic pruning is a method that enhances algorithm efficiency by eliminating less promising candidates. Facts are a broader term for knowledge, representing the information that can be acquired and structured in knowledge graphs. Finally, such trees discuss the application of KG completion, emphasizing their role in enhancing the completeness of knowledge graphs.",
    "Such trees apply to KG completion, enhancing the process of filling in missing information within knowledge graphs. Learning partially instantiated shapes has a broader term of shapes, which represent the structural constraints defined in knowledge graphs. Quality measures for IOP rules, which evaluate the effectiveness of these rules, fall under the broader category of quality measures. The aggregation module produces trees that serve as hierarchical structures in knowledge graphs. MinIOPHC, a parameter related to the learning algorithm, has a broader term of Parameters, which define the maximum rule length. The predicate Pi is also encompassed within the broader term of Knowledge Graphs. Candidate IOP rules are pruned in the scoring function heuristic, which optimizes the selection of rules based on their quality. The matrix-computation of the quality measures focuses on quality measures, ensuring that the metrics used are effective. KG shows the average TreeSC, indicating the structural complexity of the trees derived. Real-world KG models have a broader term of graph, representing the mathematical structures of knowledge graphs. The matrix-computation of the quality measures also has a broader term of quality measures, emphasizing its role in assessing the quality of shapes. Embeddings(K') is categorized under the broader term of embedding-based method, which utilizes vector representations for learning. DBpedia 3.8 is a specific instance of KG, showcasing structured information extracted from Wikipedia. A sampled knowledge graph is a subset of public knowledge graphs, retaining only the most relevant entities and predicates. The path of entities that satisfy a chain of predicates in the rule has a broader term of entities, which are the nodes within the graph. The entity-free rule is a broader term for rules, allowing for the evaluation of relationships without specific entities. Shapes are expressed by alternative formalisms, providing various methods for representing constraints. More complex shapes include closed rules, which define specific patterns within knowledge graphs. Sampling prunes entities and predicates to facilitate efficient learning. Lastly, YAGO2s has a total of 74 target predicates selected for evaluating the SHACLEARNER method.",
    "Wikidata comes second ahead of YAGO2s in the realm of knowledge graphs. The learnt embeddings are utilized in the scoring function of SHACLEARNER, which plays a crucial role in evaluating the quality of inferred rules. Additionally, the additional tree-shaped constraint effectively prunes 44% of IOP rules, streamlining the rule set. The property sh:minCount has a broader term known as constraints on graph data, which is part of the Shapes Constraint Language. Information needed for learning such rules is encompassed within the broader term information. Shapes can be employed for subsequent data cleaning, enhancing the integrity of knowledge graphs. The conjunction of IOP rules forms a tree, which is essential for representing hierarchical relationships. Rule quality is a broader term that includes rules, while entities that satisfy the first argument of the head fall under the broader category of argument. The entity {e2} is classified under elements, indicating its significance in the context. The W3C recommended the Shapes Constraint Language in 2017, marking a pivotal moment for graph data validation. The quality of a tree is assessed by quality measures for IOP rules, ensuring that the structures derived from these rules are effective. The first rule in the list is a specific instance of the broader category of rules. A fact in the KG is a fundamental component of Knowledge Graphs, representing relationships between entities. Paths are categorized under the broader term concept, illustrating their role in knowledge representation. Open path (OP) rules are defined by the logical structure P1(z0, z1) \u2227 P2(z1, z2) \u2227 ... \u2227 Pn(zn\u22121, y) \u2192 \u2203x Pt(x, z0), which facilitates knowledge graph completion. Advanced features are recognized as a broader term for feature, highlighting their importance in the SHACLEARNER system. The predicate P0 is part of the broader category of Parameters, which govern the learning process. Lastly, tree shapes are classified under the broader term trees, emphasizing their structural significance in knowledge graphs.",
    "In the context of knowledge graphs, various entities and concepts are interconnected through broader terms and relationships. For instance, 'z0' has a broader term known as 'Parameters', which encompasses specific settings that control learning processes. Similarly, 'sh:property' is categorized under 'basic SHACL', while the 'Open Path Rule Learner (OPRL)' falls under the umbrella of 'rule learners'. The concept of 'the number of entities that satisfy the head of the rule' is also a broader term for 'rules', which define constraints and relationships in knowledge graphs. The 'application of SHACL shapes' relates to 'shapes that can be trivially expressed in a fragment of SHACL', indicating the versatility of SHACL in validating RDF data. Furthermore, 'fully abstracted (entity-free) shapes' are a subset of 'The shapes', which represent diverse structural patterns in knowledge graphs. The 'sampled KG' is a specific instance of a 'graph', facilitating the learning of rules from large datasets. Additionally, 'large scale shape mining' is a broader term for 'rule mining', emphasizing the discovery of patterns in extensive knowledge graphs. In Section 5 of the relevant paper, the authors discuss the 'results of an experimental evaluation', shedding light on the effectiveness of their methods. The predicate 'P*(x, t)' is computed from 'P2(z, t)', illustrating the logical connections within the graph. The 'GreedySearch' algorithm is utilized in 'line 8 of Algorithm 1', demonstrating a systematic approach to rule aggregation. The 'path of head predicates' is represented as 'nested sh:path declarations', which are crucial for defining relationships in SHACL. The 'learning method' is a broader term for 'method', indicating various approaches to knowledge acquisition. Notably, 'the first method to learn shapes from massive KGs automatically' is part of the broader 'learning process', showcasing advancements in knowledge graph development. Real-world KGs are categorized under 'graph', reflecting their practical applications. Lastly, SHACL, recommended by W3C, serves as a framework for defining constraints on graph data, while KG originates from a 'data-first approach', emphasizing the importance of raw data in knowledge graph construction.",
    "In the context of knowledge graphs, shapes are used in Schimatos, an editor designed for manual knowledge graph completion. The sampled KG, which is a reduced subgraph, has a broader term of graph, indicating its relationship to the larger structure of knowledge graphs. Universal variables, which are essential in expressing constraints, have a broader term of variables, highlighting their role as placeholders in knowledge graph rules. Poor quality rules, which are less reliable, fall under the broader category of rules that define constraints and relationships in knowledge graphs. The concept of OP, or open path rules, also has a broader term of concept, as does the building block, which refers to foundational elements in knowledge graph construction. The matrix product A(P1)*A(P2)*...*A(Pm) is obtained from the path P1, P2, ..., Pm, illustrating how specific paths connect entities within the graph. MinIOPSC, a parameter for evaluating rule quality, has a broader term of variables, linking it to the broader framework of knowledge graph analysis. Knowledge Graphs themselves are encompassed by the broader term graph, emphasizing their structural nature. Pruning, a method to optimize the learning process, has a broader term of process, indicating its role in refining knowledge graph data. The low threshold for rule quality is categorized under thresholds, which set the minimum quality standards for learned rules. A fragment of SHACL, which expresses specific shapes, has a broader term of SHACL-SPARQL, combining the Shapes Constraint Language with SPARQL for querying RDF data. IOP rules can be augmented with minimum cardinality constraints, which specify the least number of instances required, and they are annotated with these constraints to enhance their expressiveness. Active knowledge graph completion, a method for enriching knowledge graphs, also falls under the broader term of graph. IOPSC, a measure of rule effectiveness, has a broader term of confidence, reflecting the reliability of learned shapes. The building block concept is reiterated as a foundational element in knowledge graph construction, while recursive SHACL shapes represent another broader concept in this domain. Finally, the sample, a subset of the knowledge graph, is fed to the embedding learner, which computes representations of entities and predicates.",
    "In the realm of knowledge graphs, various entities and concepts are interconnected through broader terms and relationships. For instance, 'P1_1' is a specific predicate that has a broader term known as 'variables', which represent placeholders in closed path rules. Similarly, the metric 'IOPSC in range of [0.1, 0.3)' is categorized under 'rule learners', indicating its role in evaluating learned rules. The concept of 'the rule' is a broader term for 'concept', highlighting its foundational nature in knowledge representation. Furthermore, the set of entities represented by '{e2, e3}' is encompassed within the broader category of 'entities'. The topic of study in this context is related to 'subject', emphasizing the focus on knowledge graph methodologies. The learning method 'SHACLEARNER' is classified under 'algorithm', showcasing its systematic approach to extracting shape constraints. Additionally, 'entity-instantiation of the related OP rule' is recognized as an instance of 'OP rule', linking specific entities to broader logical constructs. The predicate 'sh:nodeShape' falls under the broader term 'SHACL Core', which defines constraints for RDF data. The 'IOP rules' are categorized as 'logical formalisms', serving as a basis for constructing complex relationships. Moreover, 'IOPsupp' is a measure that relates to 'Parameters', indicating its role in defining thresholds for rule learning. The 'smart KG editor' is a tool that belongs to the broader category of 'editor', facilitating human interaction with knowledge graphs. The 'IOP rule language' is a formalism that is part of 'rule languages', allowing for the expression of constraints in knowledge graph reasoning. The 'depth-first questioning strategy' is a method that falls under the broader term 'strategy', aimed at enhancing user experience in knowledge graph completion. Lastly, 'the experiments' conducted to evaluate the SHACLEARNER method are classified under 'experiments', while the original predicates and facts in the knowledge graph are encompassed within the broader structure of 'graph'. The subset 'Wikidata+UP' is recognized as part of 'Knowledge Graphs', illustrating its specific focus on unary predicates.",
    "The concept of a 'depth-first manner' is a specific type of 'method' that emphasizes a systematic approach in problem-solving. In the realm of knowledge representation, 'KG' is a broader term encompassing 'graph data', which refers to the structured format of information. Within this context, 'The shapes' are recognized for their diversity in 'quality measures', indicating the various metrics used to assess their effectiveness. Additionally, a 'sample' serves as a subset of 'data', allowing for focused analysis. 'Learning paths' are also categorized under 'The shapes', highlighting their role in educational frameworks. The challenges associated with 'dealing with uncertainty in the constraints and the learning process' fall under the broader category of 'challenge', emphasizing the complexities faced in designing effective learning algorithms. Furthermore, 'The shapes' and 'Inverse Open Path' both relate to the broader notion of 'concept', which encompasses various structural representations. The variable 'z0' can be instantiated by a specific count of distinct entities, represented as '5 ({e1, e2, e3, e4, e5})'. However, utilizing a 'complete KG' could potentially harm the quality of 'learnt embeddings', which are crucial for capturing semantic relationships. The rule 'human(x, x) -> nativeLanguage(x, z3) ^ language(z3, z3)' is a specific instance of 'rules', which are formal constructs within the SHACL framework. The term 'sh:path' is a broader concept that includes 'SHACL-SPARQL', which combines SHACL with SPARQL for querying RDF data. Moreover, 'Car values 1, 2, and 3' are parameters that fall under the broader category of 'Parameters', influencing the evaluation of IOP rules. 'Property shapes' are another instance of 'concept', defining constraints within knowledge graphs. 'Pruning techniques' are methodologies that also belong to the broader category of 'method', aimed at enhancing data processing efficiency. The 'power of KGs' signifies their foundational role in the broader context of 'graph', allowing for flexible contributions to knowledge representation. 'Quality annotations' serve as metadata that falls under the broader term 'quality', indicating the reliability of the data. 'Connected entities' are a subset of 'entities', representing the nodes linked by relationships in a knowledge graph. Lastly, 'the process of constructing one kind of more complex shape' is an integral part of 'shapes', which are essential for validating and structuring knowledge graph data, while 'higher confidence in the KG' reflects the enhanced reliability of the graph's representation.",
    "Nested sh:path declarations are utilized within sh:property declarations to define structured paths in knowledge graphs. The concept of IOP mining time is associated with the broader process of extracting Inverse Open Path rules, which are essential for knowledge graph validation. Inverse open path standard confidence serves as a metric within the broader concept of evaluating the quality of rules derived from knowledge graphs. Line 8 of Algorithm 1 is a specific step in the algorithm that employs a greedy search method for aggregating IOP rules. Knowledge graphs (KG) can be extended with our new ones, which are newly generated unary predicates that enhance the graph's structure. KG K' represents a sampled subgraph that encompasses entities relevant to a specific target predicate. The application of SHACL shapes is a broader term that encompasses SHACL-SPARQL, which is used for defining and validating RDF data models. A sample of data is a subset of the broader category of data extracted from knowledge graphs. Each variant of the SHACLEARNER system falls under the broader category of variants, which are configurations that affect the learning of IOP rules. The formalism of constraints provides a theoretical framework that defines the rules governing knowledge representation, which is a broader term for constraints. Patterns, such as k-cliques, are subsets of vertices in a graph that form complete subgraphs, representing a broader category of structural configurations. PathFinding(K', Pt, P, A, k) and modified SHACLEARNER (-S-H) are both algorithms that contribute to the learning of IOP rules. IOPSC, or inverse open path standard confidence, is a broader term that refers to the evaluation of the effectiveness of these rules. Esample is a set of sampled entities that is part of the broader category of samples used in knowledge graph learning. The Google Search engine is driven by its internal knowledge graph, which enhances search results. The composite predicate P*(x, t) is computed based on its components, which include predicates Pt, P1, and P2. Wikidata targets and possesses type-like unary predicates, which are relevant for categorizing entities within knowledge graphs.",
    "In the context of knowledge graphs, a candidate shape is selected for its interestingness, which measures the quantified uncertainty associated with it. The subject entity, representing identifiers for objects, has a broader term encompassing entities, which are the individual nodes within the graph. The SHACL learning problem, a challenge in learning shape constraints, is part of the broader learning process. Notably, the parameters Car=3 and Car=2 have the same values, indicating a relationship in cardinality constraints. The characteristics of discovered trees are reported as results, showcasing the performance metrics derived from the application of Inverse Open Path rules. Additionally, MinIOPHC, a parameter for evaluating inverse open path rules, falls under the broader category of variables. The population of a KG, which involves organizing data, is related to the broader concept of a graph. KG verification, essential for validating knowledge graphs, is also categorized under process. The core of SHACL, which imposes constraints on predicates, is a fundamental aspect of the SHACL Core. Furthermore, inverse open path support is classified under Parameters, highlighting its role in assessing the effectiveness of rules. Large data-first graph databases utilize weakly-constraining data schemes, allowing for flexible data representation. The predicate P1_t is similar to the composite predicate P*(x, t), both of which are used in the context of Inverse Open Path rules. SHACLEARNER\u2019s pruning methods, which enhance the learning algorithm's efficiency, are part of the broader category of algorithms. The logical foundations for the semantics of the SHACL language are encompassed within the SHACL Core. IOP Standard Confidence, a measure of uncertainty for candidate shapes, is classified under quality measures. Inference processes, which derive insights from knowledge graphs, are categorized under process. Paths over connected entities, representing relationships in the graph, also fall under the broader term entities. Lastly, inverse open path (IOP) rules include cardinality as a fundamental aspect, while the variable z0 can be instantiated by the count of seven distinct entities.",
    "The concept of 'r3' has a broader term known as 'Parameters', which also encompasses 'A', another parameter used in the SHACLearner algorithm. The 'SHACL learning method', a systematic approach for discovering SHACL shapes, is categorized under the broader term 'learning method'. Additionally, 'HOLE', an embedding learner algorithm, falls under the broader category of 'embedding learner'. In the realm of rule evaluation, 'rule quality measures' introduce 'Cardinality', which itself is a broader term for these measures. Public knowledge graphs gained popularity with the emergence of 'Yago', which is a significant example of such graphs. The relevance of rules is captured under the broader term 'relevance', while 'SHACLEARNER' utilizes 'Embeddings' to enhance its learning capabilities. The 'greedy search' algorithm employs 'each tree' to optimize its search process. Furthermore, 'IOPSC', which refers to inverse open path standard confidence, is a broader term for 'entities' within knowledge graphs. The 'Inverse Open Path rules' are categorized under the broader concept of 'concept'. The knowledge graph 'K' is a broader term for 'public knowledge graphs', and the performance of the system is encapsulated under the broader term 'performance'. The measure of 'open path support' is defined by the closed path rule 'r'. Shapes in the form of a path serve as a more general template for constructing 'more complex shapes'. The 'sampling method' is a broader term for the various methods employed in knowledge graph analysis. 'IOPSC' also serves as a broader term for 'algorithm'. Lastly, the challenges of 'dealing with uncertainty in the constraints and the learning process' contribute to the added 'utility' in the learning framework.",
    "In the context of knowledge graphs, the entity r2 has a broader term known as Parameters, which encompasses various settings that control the learning process. Similarly, ontology constraint patterns are categorized under the broader term ontologies, indicating their foundational role in guiding the generation of SHACL shapes. The concept of a tree is also classified under shapes, highlighting its significance in representing hierarchical relationships. Additionally, the maximum number of predicates and the maximum length parameter are both broader terms under Parameters, emphasizing their importance in defining the limits of rule complexity. Shapes, in turn, are broader than entities, illustrating their role in structuring relationships within the graph. The KG is defined as a pair represented by K = (E, F), where E denotes the set of entities and F the set of facts. The predicate of the head is considered redundant with respect to the KG, indicating its inherent relationship with the graph structure. The composite predicate P*(x, t) is checked for pairs of entities, which are essential in evaluating relationships within the graph. The experiments conducted are designed to prove the effectiveness of our SHACLEARNER, which aims to learn shapes from over 11 million facts, a term that falls under the broader category of data. Inverse open path (IOP) rules are classified as a broader learning method, while the system without sampling, but with the heuristic rule learning module, is a variant of the broader system for discovering patterns. IOPHC, which measures head coverage, is categorized under quality measures, and R' represents an initially empty set of variables. The body of rules is a broader term that encompasses the conditions necessary for inferring conclusions. Knowledge graph completion is also classified under the broader term graph, while sh:minCount is a property that falls under basic SHACL. Finally, KG facts are specific data points that are also categorized under the broader term graph, and IOPHC is recognized as a broader concept.",
    "In the realm of knowledge graphs (KG), the concept serves as a broader term that encompasses various elements, including the common underlying form, which is fundamental to all these shapes. These shapes are characterized by their common underlying form, indicating a close relationship between them. The distribution of rules reveals that the largest proportion of rules is represented by a specific subset, while the corresponding number of mined rules is quantified by average proportions of 50%, 31%, and 56%. Section 3 of the document elaborates on these concepts, fitting within the broader context of sections. Additionally, MCar, a parameter in the SHACLEARNER algorithm, is related to variables, which are essential in defining the constraints of knowledge graphs. The predicate sh:nodeShape falls under the broader application of SHACL shapes, which are crucial for validating RDF data structures. The satisfactory performance of the SHACLEARNER method is indicative of its overall performance in processing knowledge graphs. Property shapes, which govern the relationships within these graphs, are a subset of properties. The body in the KG satisfies the conditions set by entity pairs, while the facts in the KG are represented within the broader structure of the graph. The quality of performance is a measure of the overall quality of the rules learned from these graphs. P1, as a predicate, is categorized under Parameters, which define the settings for learning processes. Real-world KGs are often sparse, highlighting the challenges in capturing comprehensive relationships. All rules, which encompass a broader category of rules, are essential for understanding the framework of knowledge graphs. Wikidata serves as a prominent example of Knowledge Graphs, while weakly-constraining data schemes represent a flexible approach within the broader category of data schemes. Lastly, an entity is classified under entities, emphasizing the individual instances that populate knowledge graphs, and open path (OP) rules are recognized as a broader concept within this domain.",
    "The function Ev() evaluates candidate rules, which are essential for refining knowledge graph validation processes. There remains an opportunity for improving tree shapes, which are structured representations of relationships within knowledge graphs. Additionally, shapes that can be trivially expressed in a fragment of SHACL have a broader term known as the semantics of the SHACL language, which provides a formal interpretation of these shapes. IOPsupp, a measure of inverse open path support, also has a broader term encompassing variables, which are placeholders used in closed path rules. The SHACLEARNER method includes embedding learning, enhancing the extraction of high-quality shape constraints from knowledge graphs. The tree structure computes TreeSC, a performance measure that quantifies the support of tree shapes derived from IOP rules. Furthermore, variables and Car=2, which indicates a cardinality constraint, are both broader terms under Parameters, which control the learning process. A KG, or knowledge graph, is a broader term for graph, representing interconnected data. Rules, fundamental constructs in SHACL, have a broader term known as rule learning, while RLvLR represents a broader category of rule languages. The sequence of paths represented as Path1 ^ Path2 ^ ... ^ Pathq has a broader term called branch, illustrating the hierarchical relationships in the graph. The proposed system, designed to learn shapes from knowledge graphs, falls under the broader category of system. Inverse open path (IOP) rules are formal constructs that belong to the broader category of formalisms. Nested patterns, which resemble tree-like structures, are similar to the trees used in SHACL shapes. The SHACLEARNER method also includes heuristic pruning to optimize the learning process. The percentage difference in the number of rules found is relative to the first row, which serves as a baseline for comparison. The max rule length is a broader term for length, indicating the number of predicates in IOP rules. The system without sampling is another variant of the broader system category. Finally, KG rule learning systems encompass rule learners, which are algorithms that identify patterns in knowledge graphs.",
    "One approach provides the output, which is the result of a semi-automatic method for learning SHACL shapes from knowledge graphs. This method utilizes a fragment of the KG K', which has a broader term of graph, to efficiently sample data. In this context, a rule has a broader term of rules, indicating the formal constructs that define relationships within the graph. However, entities and predicates are less relevant to the target predicate, which is crucial for filtering relevant data. Cardinality annotations, which have a broader term of annotation, specify the constraints on relationships, while the performance of our system relates to the broader term system, reflecting its effectiveness. The results of an experimental evaluation, which has a broader term of results, provide insights into the system's capabilities. KG completion, categorized under the broader term process, enhances the knowledge graph by adding missing information. OP, a broader term for entity, plays a role in defining relationships, while SHACLEARNER captures Cardinality, which prefixes each rule. Closed path rules, having a broader term of concept, express implications within the graph. PathFinding is part of Algorithm 1, which facilitates the learning of inverse open path rules. The system without sampling, but with the heuristic rule learning module, includes this module to enhance efficiency. OPHC, a broader term for Parameters, measures the effectiveness of open path rules. The variant (-S+H) operates without sampling but employs heuristic pruning. Embeddings(K') has a broader term of embedding, generating vector representations for learning. Genre, classified under entities, categorizes music styles, while Inverse open path standard confidence, a broader term for confidence, evaluates the quality of learned rules. Finally, schema-based constraints, which have a broader term of constraints, enforce specific conditions on the data.",
    "The left-hand tree is identified as the subject argument, establishing a foundational relationship in the context of SHACL shape learning. P2_2 is associated with Parameters, indicating a broader conceptual framework. Patterns, which encompass various structural configurations, also relate to information, highlighting their role in knowledge graphs. The head of the rule is a critical component that falls under the broader category of rules, which define constraints and relationships. IOPHC serves as an indicator of the proportion of rule consequent instances, reflecting the effectiveness of the rules in practice. The system can be applied in real-world scenarios, demonstrating its practical utility. Rules of low quality are included under specific thresholds that ensure only reliable rules are considered. Open path standard confidence is another measure that relates back to Parameters, emphasizing its importance in evaluating rule quality. IOP Head Coverage is categorized under quality measures, which assess the overall effectiveness of the rules. The core of SHACL is integral to the application of SHACL shapes, which validate RDF data models. SHACLEARNER (-S-H) is a variant of rule learners that employs a comprehensive approach to learning from knowledge graphs. The target is connected to the broader concept of types, illustrating the classification of entities. Furthermore, entities satisfying the subject argument of the body predicate, Pt, connect to entities forming the object argument of the last predicate, P2, establishing a relational framework. DBpedia 3.8 specifically targets type-like unary predicates, which it also possesses, indicating its focus on structured data. Quantified uncertainty is associated with candidate shapes, providing a measure of the reliability of potential configurations. The target predicate is related to other predicates, enhancing the understanding of relationships within the graph. Lastly, e3 is categorized under elements, while OPHC pertains to the type of entities, and the concept of incompleteness is linked to the broader notion of quality in knowledge graphs.",
    "Open path head coverage (OPHC) has a broader term known as Parameters, which defines the maximum length of rules to be learned from knowledge graphs. Knowledge Graphs themselves are a type of graph databases that organize and interlink information. The Open Path Rule Learner (OPRL), categorized under algorithms, is designed to mine open path rules from these knowledge graphs. Constraints, which are essential for maintaining the integrity of data, fall under the broader concept of defining expected structures. These kinds of shapes serve as a building block for constructing more complex structures within knowledge graphs. The performance of our system can be applied in practice, particularly in knowledge graph completion, where tools like Schimatos are utilized. The logical foundations for the semantics of the SHACL language relate to the application of SHACL shapes, which are crucial for validating RDF data. Mined rules, derived from rule mining, provide essential patterns for knowledge extraction. Our four benchmark KGs, which include well-known graphs like YAGO2s, Wikidata, and DBpedia, serve as benchmarks for evaluating the performance of various algorithms. Open path rules (OP) are a broader term encompassing entities that denote relationships in knowledge graphs. Informative and intuitive shapes represent high-quality structural patterns that enhance understanding. The process of constructing these shapes is guided by a procedure that employs SHACLEARNER, a learning method designed to extract shape constraints. Shapes of varying complexity and diversity reflect the different structural features that can be learned from knowledge graphs. A set of SHACL shapes, which are defined using the Shapes Constraint Language, forms a mathematical set that validates the graph's data. The number of distinct instantiations of head_r(e, e') is required to be at least as much as the cardinality annotation Car(r). Finally, the Poker KG, a synthetic knowledge graph, and the concept of extending a KG both fall under the broader category of graphs.",
    "The knowledge graph (KG) suggests the existence of associated facts that provide additional information related to entities within the graph. A candidate shape and a conjunction of Inverse Open Path (IOP) rules both have broader terms classified as concepts, indicating their foundational role in structuring knowledge. Furthermore, a fact in the KG is encompassed by public knowledge graphs, highlighting its relevance in a wider context. Alternative shapes are categorized under shapes, illustrating the various configurations that can be derived from knowledge graphs. The set of entities sampled, referred to as Ei, is associated with elements, which represent novel features in the learning process. The learning algorithm is designed to scale with discovered constraints, ensuring effective validation of knowledge structures. The largest proportion of rules falls under the broader category of rules, emphasizing their significance in knowledge representation. Arguments are linked to Parameters, while the target predicate A is associated with variables, showcasing the relationships within the rule framework. Definition 4 outlines key concepts related to IOP rules, further classified under concepts. The predicate of the head is integral to the rules, establishing the relationships being inferred. The results of experiments demonstrate the efficiency of aggregating IOP rules, which is a broader term for the findings obtained. External modelling artefacts are categorized under modelling artefacts, indicating their role in shaping knowledge graphs. Each human is classified as an entity, reinforcing the connection between individuals and the broader knowledge structure. The semantics of the SHACL language is related to SHACL-SPARQL, which defines constraints on RDF data. The proportion of mined rules also falls under the broader category of rules, reflecting the frequency of distinct rules extracted. Lastly, SHACLEARNER is similar to an embedding-based scoring function, illustrating its methodological approach, while Algorithm 1 is a specific instance of a broader algorithm used in knowledge graph processing.",
    "In the context of knowledge graphs, shapes are represented by the predicate Pt, which is a target predicate used in the Sampling() method of the algorithm. The post-processing step has a broader term known as method, which refers to the proposed approach for mining Inverse Open Path rules. Additionally, the variant of the system has a broader term called types, indicating different configurations within the SHACLEARNER system. Efficient and interpretable human validation is encompassed by the broader term process, which involves the construction of complex shapes from simpler structures. An entire path of shape predicates falls under the broader category of shape predicates, which define constraints on relationships in the graph. The inverse open path standard confidence (IOPSC) is classified as a variable, while rules of low quality are a subset of rules that do not meet quality thresholds. Public knowledge graphs are structured representations that belong to the broader category of graphs. The predicate Pt is also associated with the broader term Parameters, which control the learning process. The rule r2 is categorized under variables, and the predicate arguments are linked to the broader term argument. Furthermore, MinTreeSC is another parameter that falls under Parameters. This paper presents related work, highlighting the contributions of CRs, which are used for facts within knowledge graphs. Rules are defined to have the least stringent requirements, while entities in the sampled KG are classified as entities. The first row of data serves as a baseline for comparison, and non-recursive rules are a specific type of rules. The annotation of the branch at the terminating node is categorized under branches, and input ontologies are a broader term for ontologies that provide structured knowledge.",
    "In the context of knowledge representation, 'a tree' has a broader term known as 'trees', which refers to hierarchical structures used in knowledge graphs. The composite predicate 'P*(x, t)' is computed from the predicate 'P1(y, z)', illustrating the relationships between entities. Additionally, the set 'F = {P1(e1, e2), P1(e2, e1), P1(e2, e3), P1(e3, e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3), Pt(e3, e2), Pt(e3, e3)}' has a broader term called 'set', which encompasses various predicate-entity pairs. The term 'performance' is related to 'evaluation', indicating a broader assessment of the system's capabilities. Furthermore, 'enterprise knowledge graphs' are a specific type of 'graph', representing structured knowledge within organizations. The concept of 'those vectors' is encompassed by 'vectors', which are mathematical representations of entities in the graph. The numerical range '[0.1, 0.3)' is categorized under 'range', defining constraints on IOPSC values. The 'max rule cardinality' is a parameter that falls under 'Parameters', specifying limits on rule instantiations. 'Partially instantiated shapes' are a subset of 'shapes', representing incomplete structural definitions. 'Node shapes' are specific constructs within the broader category of 'concept', defining constraints on entities. The body in the knowledge graph, referred to as 'the body in the KG', is a broader term for 'graph', encompassing the relationships defined by rules. The term 'the entities' is a broader category for 'entities', which are the distinct elements in the graph. Similarly, 'the rule' is a broader term for 'rules', which define relationships through logical expressions. 'Atoms' are fundamental components that fall under 'elements', representing the basic units of IOP rules. 'YAGO2s', a large-scale knowledge graph, is categorized under 'ontologies', representing structured knowledge. Procedural methods are noted to work with a 'small amount of data', indicating limitations in scalability. 'Real-world KG models' treat 'entities and predicates', accommodating diverse data representations. The '50 target predicates' are selected from 'Wikidata', serving as specific targets for evaluating methods. Lastly, the open path rule 'P1(z0, z1) \u2227 P2(z1, z2) \u2227 ... \u2227 Pn(zn\u22121, y) \u2192 \u2203x Pt(x, z0)' is a broader term for 'rules', illustrating logical relationships in knowledge graph completion. The 'scoring function' is a broader term for 'method', used to evaluate the quality of inputs in knowledge graph learning.",
    "DBpedia 3.8 has a broader term known as Knowledge Graphs, which encompasses various structured representations of knowledge. Within this context, the SHACL Core serves as a broader term for sh:property, a semantic web term that defines properties in RDF data. The concept of a building block is identified as a sequence of predicates, while the head of a logical rule is represented by a sequence of paths or branches. In the realm of entities, e's is a broader term for entities, which include those in the sampled KG that are neighbours and close neighbours of directly related entities. KG verification is a broader term for the concept that ensures the quality of knowledge graphs. Rules play a crucial role as they explain facts and are deemed more useful when they generalize well. However, OPRL, the open path rule learner, cannot handle unary predicates. The support count of the IOP rule r1, denoted as IOPsupp(r1), is equal to the specific entity {e2}. Furthermore, the proportion of mined rules demonstrates the quality of performance in knowledge graph validation. Length and cardinality, which are broader terms for length, indicate the complexity of shapes in knowledge graphs. Wikidata+UP is a broader term for public knowledge graphs, highlighting the categorization of entities based on their roles. A method is employed to build trees, which are hierarchical structures representing relationships among entities. Lastly, greater cardinalities demand tighter restrictions, ensuring that the relationships within knowledge graphs meet stringent conditions, while each argument is a broader term for argument, emphasizing the individual entities involved.",
    "In the realm of knowledge graphs, various entities and concepts are interconnected through broader terms. For instance, 'shapes that can be trivially expressed in a fragment of SHACL' has a broader term of 'SHACL-SPARQL', which integrates the Shapes Constraint Language with SPARQL for querying RDF data. The entity '157' is categorized under the broader term 'quantity', indicating its role in measuring distinct rules learned. Similarly, a 'small amount of data' falls under the broader category of 'data', highlighting its limited scope in procedural methods for SHACL shape learning. The 'same entities' instantiate the variable 'z0', demonstrating their role in knowledge graph rules. Furthermore, the 'set of rules and shapes' is a subset of 'set', while a 'small complete KG' is classified as a type of 'graph', emphasizing its completeness in representing poker hands. 'Prior Sampling' is recognized as a method, and 'r1' is a specific instance of a variable. The concept of 'A good learning algorithm' is encompassed within the broader category of 'algorithm', showcasing its effectiveness in learning from knowledge graphs. Additionally, 'Poker' is a specific graph, and 'missing facts' are categorized under 'facts', indicating the absence of certain data points. The 'SHACL' language is a W3C recommendation, providing a framework for validating graph data. The entities represented by 'e's' are broader variables, while 'sh:nodeShape' relates to the semantics of the SHACL language. The 'head' of a rule is a broader term for 'rules', and the 'triple format' is a representation method within 'Knowledge Graphs'. Lastly, the sequences of entities are classified under 'entities', and the number of entities connecting the head to the body of a rule is also a broader term for 'rules'. The quality measure 'OPHC' is categorized under 'variables', and 'targets' are defined as a broader concept.",
    "In the context of knowledge graphs, entities exist within a KG, and the concept of IOPHC has a broader term known as entity. Similarly, a single unbroken loop of links is categorized under the broader term loop, while fully abstracted (entity-free) shapes fall under the category of shapes. An entity e is a specific instance of the broader category of entities. The first rule in the list is added to the tree, which represents structured relationships in the knowledge graph. Wikidata contains the specific unary predicate 157, and the original predicates and facts in the KG encompass a broader term referred to as facts. The variable P2_2 is classified under the broader term variables, and the process of Sampling is recognized as a type of algorithm. Quality measurements are part of the broader evaluation process, and the loop construct for 2 <= k <= l is also categorized as a loop. The Open Path Rule Learner and the method to aggregate IOP rules are both types of algorithms. Quality measures express the validity of IOP rules, while the condition body_r(e, e') is identified as a fact in the KG. The validity of IOP rules is a broader concept that includes quality measures. Furthermore, three massive real-world benchmark KGs serve as a broader category of benchmarks. The ideal rule learner is another type of algorithm. Lastly, every path from the target predicate terminates at a node in the tree, illustrating the interconnectedness of these concepts.",
    "In the realm of knowledge graphs, various concepts and parameters are interconnected. For instance, minimum quality thresholds have a broader term known as quality, which encompasses the overall validity and reliability of the graph's data. Similarly, the variable x is categorized under the broader term variables, indicating its role as a placeholder in predicate relationships. The maximum length of rules is also classified under Parameters, which control the learning process in algorithms. The last row of performance metrics corresponds to the unmodified SHACLEARNER of Algorithm 1, highlighting the relationship between these two entities. This paper, which presents the SHACLEARNER system, falls under the broader category of papers. Additionally, OP rules are utilized as they imply the existence of facts, while knowledge panels are a broader term for features that enhance user experience. The beginning of each branch is a broader term for branches in tree structures, which are essential for representing relationships in knowledge graphs. The KG, or knowledge graph, is associated with the broader concept of concepts, illustrating the hierarchical nature of these terms. Within the context of OP rule P1, the predicate P3 is identified as a part of it. OPSC and IOPHC are broader terms under Parameters and entities, respectively, indicating their roles in assessing rule quality. TreeSCMIN serves as a threshold that determines the inclusion of rules in tree structures, while the tree itself is a broader term for trees that represent relationships in knowledge graphs. Knowledge Graphs, as a whole, are categorized under graph data, emphasizing their structured representation of information. Major approaches to rule learning encompass rule learning experiments, showcasing the methodologies employed in this field. The head predicate is another concept that plays a significant role in defining relationships within knowledge graphs. Furthermore, Wikidata illustrates an example of a shape from Wikidata, demonstrating practical applications of these concepts. Lastly, satisfying entities include e2, which fulfills the conditions specified by certain rules.",
    "An example of a shape from Wikidata has a broader term of Wikidata, which serves as a central storage for structured data. The process of mining both OP and IOP rules is a broader term that encompasses the systematic extraction of rules from knowledge graphs. IOPHC, which refers to inverse open path head coverage, is categorized under algorithms, highlighting its computational nature. The power of KGs is derived from a data-first approach, allowing for flexible contributions to the knowledge graph. The left-hand chart observes and shows a consistent decrease in the proportion of quality rules, indicating a trend in the evaluation of rule quality. The evaluation function Ev(R', K, MCar, MinIOPSC, MinIOPHC) is part of the broader process of assessing knowledge graph rules. A novel method is classified under the broader approach to learning high-quality rules. The ultimate evaluation of an IOP rule will be conducted in the next step of the learning process. This sampling is essential since it enables the embedding learner to process large-scale knowledge graphs effectively. OPSC, which assesses the quality of open path rules, falls under the type of entities. The core of SHACL is a fundamental aspect of the semantics of the SHACL language, which defines constraints on graph data. Learning a novel kind of rules is part of the broader learning process aimed at deriving IOP rules. Entities (e, e') exist within the KG, representing relationships defined by predicates. The predicate Pt'(x, z0) leads to the logical expression exists(z1, ..., z(n-1), y), establishing connections between entities. The composite predicate P*(x, t) is computed from the closed path rule Pt(x, y), linking entities through a sequence of predicates. The max rule length is a parameter that defines the maximum number of predicates in an IOP rule. The facts in the head of the IOP rule are broader than the general category of facts, indicating specific relationships that must be satisfied. Additional head predicates are included in the broader category of body and head predicates, influencing the rule's support and confidence. Finally, learning paths are categorized under shapes, representing structured sequences in the context of knowledge graph learning.",
    "The output encompasses results, which are the findings related to the characteristics and performance of trees constructed from Inverse Open Path (IOP) rules. SHACLEARNER is a learning method that handles min cardinality constraints, while shapes, which are structural representations in knowledge graphs, have a broader term known as concept. The defined threshold (TreeSCMIN) is a specific type of thresholds that must be met for rules to be included in tree shapes. Real applications refer to practical scenarios that fall under the broader category of applications. The logical foundations for the semantics of the SHACL language provide the theoretical basis for the broader semantics of the SHACL language itself. Facts in the KG are individual pieces of information that relate to the broader concept of graph. Embeddings(K') are a specific type of Embeddings used in the learning process, and Algorithm 2 is a sampling method that falls under the broader category of algorithms. Mined shapes are enhanced by a numerical confidence measure, indicating their validity. Trees are returned with the closed path rule r, while the subject argument binds and is specifically for each target predicate in the context of SHACLEARNER. Notably, SHACLEARNER does not perform data type validation. The variable z is a broader term for variables used in the representation of IOP rules. Tree shape learning is a broader learning method that focuses on constructing tree-like structures, while r is a broader term for trees. Large scale shape mining refers to the broader process of discovering shape patterns from knowledge graphs. Lastly, a system is a broader term for the method of discovering patterns from massive knowledge graphs, and the sampled KG is far smaller than the original KG, which also relates to the broader concept of graph.",
    "The process of generating embeddings for a knowledge graph K', denoted as (P, A) := Embeddings(K'), is defined as the mathematical representation known as Embeddings. In the context of knowledge graphs, IOP rules are annotated with entities such as Car, indicating their relevance in the graph structure. The semantic web term sh:property has a broader term known as the application of SHACL shapes, which is crucial for defining constraints on RDF data. Furthermore, the classification of entities is represented through types or classes, which has a broader term of types. The path of entities that satisfy a chain of predicates in the rule is a concept that falls under the broader category of entity. Additionally, the simultaneous mining of both Open Path and Inverse Open Path rules is encapsulated in one process, which is a specific type of process. The method of generating vector representations of entities and relationships, referred to as Embeddings(K'), has a broader term known as the embedding representation. Knowledge graph completion is another process that aims to enhance the graph by inferring missing information. The complexity of the sampling algorithm, which is quantified as O(|K|), has a broader term of complexity. The Open Path Rule Learner (OPRL), an embedding-based algorithm, is categorized under learning methods. The significant increase in the variety of shapes that can be generated is described as an explosion in the space of possible shapes, which is a broader term for the shapes derived from knowledge graphs. A set of 50 target predicates is selected from DBpedia 3.8, which serves as a dataset for evaluating learning methods. Wikidata, a collaboratively edited knowledge base, is classified under public knowledge graphs. The challenges of dealing with uncertainty in the constraints and the learning process are encompassed by the broader term uncertainty. The chain of facts, which establishes logical relationships in a knowledge graph, is a broader term for the concept of relationships among entities. A sampled knowledge graph retains relevant entities and predicates, falling under the broader category of graph. The term l atoms refers to the maximum number of atomic components in IOP rules and is categorized under Parameters. The maximum length of rules, which determines the upper limit on the number of predicates in rules, is a broader term for rules. Closed rules (CR) are a formalism that includes closed path rules and are classified under the broader concept of relationships. Finally, support, which measures the instances satisfying closed path rules, is categorized under measures used to evaluate the effectiveness of these rules.",
    "In the context of knowledge graphs, the body in the KG has a broader term known as body, which refers to the conditions that must be satisfied to infer conclusions. Length, which is a measure of the number of predicates in an inverse open path rule, is categorized under the broader term feature. The process of transforming KGs with type predicates for experiments is also recognized as a broader process. Patterns, which represent various structural configurations, fall under the broader concept of concepts. More complex shapes, which include trees, are essential for representing intricate relationships. A tree is specifically discovered for each argument, illustrating the hierarchical connections among entities. This system, which serves as an ideal IOP rule learner, is a subset of the broader system category. The annotation of the branch at the terminating node is classified under the broader term node, while new ones refer to newly created data that enhance the knowledge graph's structure. Closed Rules (CRs) and the space of possible rules are both broader concepts that help express constraints and potential rule configurations. The SHACL learning method is part of the broader learning process aimed at discovering and constructing shapes from knowledge graphs. Tree shapes are also categorized under the concept umbrella. The path of entities that satisfy a chain of predicates in the rule is a broader term that encompasses entities linked through predicates. Shape constraints, which define rules for validating graph data, belong to the broader category of formalisms. The unmodified SHACLEARNER of Algorithm 1 and SHACLEARNER (-S-H) are both classified as algorithms. The year 2012 marks a significant date in the evolution of knowledge graphs, while KG facts represent specific facts within this framework.",
    "SHACL has a broader term known as formalisms, which encompasses various structured frameworks for representing complex systems. The Shapes Constraint Language, also referred to as SHACL, is recognized as a W3C recommendation, indicating its formal status in defining constraints on graph data. Within this framework, logical foundations serve as a broader term for the concept of defining and understanding SHACL shapes. A simple approach is employed to reduce the size of the problem when learning inverse open path rules. In the context of knowledge graphs, trees are integral structures that have an associated tree-building runtime, which is defined and obtained through the GreedySearch(R, MinTreeSC) process. Notably, the running time for aggregating IOP rules into trees is significantly lower than the initial IOP mining time, highlighting the efficiency of this method. The property sh:minCount is a broader term under SHACL Core, while SHACL shapes relate to data type validation. Additionally, K' represents a broader term for a set of sampled knowledge graph entities. The max rule cardinality MCar and Car=3 are parameters that define constraints within the learning process. Inverse open path support is another concept that quantifies relationships in knowledge graphs. Furthermore, Embeddings(K') is a broader term for embedding learning, which aids in generating vector representations of entities. The semantics of the SHACL language is a broader term for the language that constrains relationships in knowledge graphs. The practical meaning of the IOPSC and IOPHC qualities relates to the broader concept of quality, which assesses the validity of graph data. Elements with a value greater than or equal to Car are categorized under elements, while the number of rules learned from knowledge graphs is a broader term for count, representing the distinct rules derived.",
    "The head of the rule has a broader term known as rules, which are formal constructs within the SHACL framework that define constraints and relationships in knowledge graphs. These rules are further categorized under association rule mining, a data mining technique that uncovers interesting relationships in large datasets. An off-the-shelf graph structure learner, which falls under the broader category of algorithms, aids in generating these rules. Within the realm of entities, an entity of type song represents a specific instance that is part of the broader category of entities. Additionally, Embeddings(K') are a method for generating learnt embeddings, which are vector representations of data points. The concept of uncertainty is recognized as a challenge in designing efficient learning methods for SHACL shapes. Open path rules and rules with cardinality Car are both classified under the concept category, with the latter taking elements with a value greater than or equal to Car into account. The breadth-first manner is a strategy that can be employed in various algorithms, including those that utilize sh:nodeShape, which is a broader term for SHACL-SPARQL. The same entities can be used to instantiate variables in both the body and head of inverse open path rules, indicating their interconnectedness. Closed path forms and the number of different chains also belong to the concept category, as does the cardinality, which specifies the minimum number of distinct head paths that must be satisfied. Rules are further categorized under rule learners, which are algorithms that identify patterns in data. The performance of SHACLEARNER (-S-H) is noted to decrease by -10% when heuristic pruning is applied. Lastly, not-null and other schema-based constraints are part of the broader category of constraints, while the maximum number of predicates of the rules is defined under Parameters.",
    "In the realm of knowledge representation, various entities and concepts are interconnected through broader terms and specific relationships. For instance, the set of entities {e2, e3} has a broader term known as 'entity', while 'data' is encompassed by the broader term 'information'. Similarly, 'the trees' are a more specific term under the broader category of 'trees'. Knowledge Graphs, which are structured representations of knowledge, fall under the broader concept of 'concept'. Our work contributes to the field of 'research', and procedural methods are a subset of the broader 'approach'. The 'set of shapes' is categorized under the broader term 'set', and many KGs are augmented with 'type information' to enhance their utility. The number of entities that satisfy the body of a rule is classified under 'rules', and the integer parameter of RESCAL is a specific instance of 'Parameters'. The 'depth-first' strategy is a broader term for a specific questioning approach in knowledge graph completion. Furthermore, the 'atomic body' of an inverse open path rule instantiates 'an instance of the head', while 'Embeddings' are a function of the sampled subset K'. The count of distinct entities, represented as 5 ({e1, e2, e3, e4, e5}), is a broader term for 'count'. All binary predicates of YAGO2s are categorized as 'target predicates', which are also utilized as target predicates in various contexts. The number of target predicates is a broader term for 'quantity', and 'Car' is a specific instance under the broader category of 'entities'. Lastly, 'P2_t' is a broader term for 'Parameters', and 'the head' is a broader term for 'head'.",
    "In the context of knowledge graphs, 'rules of lower quality' has a broader term known as 'quality', which refers to the measure of validity and reliability of the graph's data. The parameter 'd', which defines the dimensionality of the vector space in the RESCAL embedding method, is also categorized under 'Parameters'. Furthermore, 'the annotation of the branch at the terminating node' is a specific type of 'annotation' that specifies cardinality constraints in SHACL shapes. The 'thresholds' established in 'comparative work' are crucial for evaluating the quality of rules. Additionally, an 'instance of the rule head' is a broader term for 'rules', while 'frequent patterns' fall under the category of 'patterns'. The 'common underlying form' is identified as 'the path', which serves as a fundamental structure in knowledge graphs. In open path rules, 'two open variables' include 'y and x', which represent any entities in the graph. The 'TreeSCMIN parameter' is used for defining 'TreeSC', a performance measure for tree structures derived from IOP rules. The term 'types or classes' encompasses 'classes', which represent categories of entities. Moreover, 'additional head predicates' are a broader term for 'the predicate of the head'. The closed path rule 'r' is also classified under 'Parameters'. The 'OPSC' metric has a broader term of 'variables', which are placeholders in closed path rules. 'Node and property shapes' are categorized under the broader concept of 'concept', which represents class memberships in knowledge graphs. The entity set 'Esample' is the union of 'Ei', which consists of sampled entities related to a target predicate. 'Tree shapes' enhance 'simplicity and easier interpretation' by unifying variables across branches. The entity 'e1' is a broader term for 'elements', which are individual entries in adjacency matrices. 'Connected entities' refer to a broader category of 'entity', while 'variants of SHACLEARNER' are classified under the broader term 'algorithm'. Lastly, the set '{e2, e3}' is a broader term for 'entities', indicating the entities that satisfy the head of a specific IOP rule.",
    "Subject and object bindings are swapped, allowing for the interchange of roles in knowledge graphs. The completion strategy works through a shape tree, which is essential for navigating through dependent questions in knowledge graph completion. P1_t has a broader term known as Parameters, while the number 50 is related to the broader concept of quantity, indicating the number of target predicates selected for evaluation. Formalisms correspond to the shapes derived from knowledge graphs, and the Inverse Open Path is a specific type of formalism. IOPHC, which quantifies the head coverage in inverse open path rules, is classified under a variable. Similarly, IOP has a broader term that refers to an entity e, representing specific identifiers in the graph. The numerator in this context can only decrease when additional head predicates are introduced, affecting the overall confidence of shapes, which varies with different quality measures. Large data-first graph databases incorporate weak inference rules, while the subject argument is a broader term for argument, which aggregates mined rules. Tighter restrictions relate to broader restrictions imposed by cardinality requirements. KG K' represents a sampled subgraph of an entity, and ej is a broader term for elements within the adjacency matrix. The confidence of a rule and the shape both have broader terms classified as concepts. Quality measures are similar to those used for OP rules, and existing ontologies encompass broader ontologies. Finally, the core of SHACL is a fundamental aspect of SHACL-SPARQL, which combines the Shapes Constraint Language with SPARQL.",
    "Formal quality measures have a broader term known as quality measures, which encompass metrics used to evaluate the effectiveness of Inverse Open Path (IOP) rules. An OP rule, which is a logical construct in knowledge graph reasoning, also falls under the broader concept category. The power of KGs, another concept, highlights their flexible data-first approach. In the context of rules, facts satisfying the head of the rule are considered a broader term, indicating their role in validating relationships within knowledge graphs. Additionally, three entities (e3, e4, e5) can instantiate the variable z0, demonstrating the dynamic nature of these constructs. The support count of the IOP rule r1, denoted as IOPsupp(r1), is equal to the cardinality of the set containing entities e2 and e3, represented as |{e2, e3}|. Head branches in knowledge graphs join in with one shared variable, facilitating the connection of various paths. The Poker KG, a synthetic knowledge graph, is adapted from the classic version of poker hands, ensuring its relevance for evaluation. High quality rules, which meet established thresholds, are a broader term under quality measures. Facts, as specific pieces of information, have a broader term known as data, while ongoing maintenance and extension refer to the continuous enhancement of knowledge graphs, categorized under extension. K', a variable, represents a subset of the knowledge graph, and z1 is related to the binary predicate P2(z1, z2). Open path support is quantified by the expression OPSupp(r), which measures the effectiveness of open path rules. The logical foundations for the semantics of the SHACL language are encompassed within SHACL-SPARQL. The count of distinct entities satisfying a specific condition is represented by the term 7 ({e2, e4, e5, e6, e7, e8, e9}), which is a broader term for count. Connected entities, which are linked by relationships, fall under the broader category of entities. Rules that generalize well are considered more useful, as they can explain many facts. Finally, PathFinding is a computational process that is added to the initially empty set of inverse open path rules, represented as R'.",
    "In the context of knowledge graphs, trees are represented by the predicate P't(x, z0), which defines the relationships within the structure. The modified SHACLEARNER, a variant of the algorithm, enhances the learning process by capturing all possible inverse open path rules. Shape patterns can be augmented with minimum cardinality constraints, allowing for more precise definitions of relationships. Paths over connected entities fall under the broader category of entities, emphasizing their role in the graph's structure. Ongoing maintenance and extension are essential aspects of maintenance, ensuring the integrity of the knowledge graph. SHACL advanced features are categorized under features, providing additional capabilities for data validation. The ultimate evaluation process is a critical component of the evaluation framework, assessing the effectiveness of rules. DBpedia 3.8 exemplifies public knowledge graphs, showcasing structured information extraction from Wikipedia. Head paths and potential rules in the search space are both related to the concept of entity relationships. Furthermore, Lemma 1 is related to the length of inverse open path rules, indicating that the confidence of a rule decreases as its length increases. An extensive representation of predicates and entities is demonstrated in previous heuristic rule learners, while the embedding learner is a broader term for embedding-based methods used in knowledge graph analysis. This simple approach simplifies the complexity of sampling knowledge graphs, facilitating ongoing data entry as part of the overall process. KG K' represents a subset of entities within the knowledge graph, while the number of missing rules highlights the limitations of the rules discovered. Inferred head instances are satisfied by entity pairs, establishing new facts based on existing relationships. Lastly, OP rule P1 instantiates the variable z0, and shape quality measures are essential for large scale shape mining, ensuring the reliability of derived shapes.",
    "The sampled K' encompasses all predicates, which are integral to the broader concept of sampling within knowledge graphs. Within this framework, e1 is a specific entity that relates to vectors, which serve as mathematical representations of entities and predicates. The structure of a shape tree is a more specific instance of trees, highlighting the hierarchical relationships in knowledge graphs. Furthermore, major approaches to rule learning fall under the overarching category of rule learning, emphasizing the methodologies used in this field. The minimum IOPSC is a concept that signifies the lowest quality measure for Inverse Open Path rules, while a fragment of the KG K' consists of a bounded number of entities, indicating a limited subset of relevant entities. Additionally, dealing with uncertainty in the constraints and the learning process introduces an extra dimension of challenge, complicating the design of effective learning algorithms. Open path support is a broader term that relates to Parameters, which define the maximum rule length in the learning process. The SHACLEARNER method is associated with benchmarks, providing a standard for evaluating the quality of shape constraints derived from knowledge graphs. The closed path rule r is represented by r3, which corresponds to a specific cardinality constraint. The object argument is a broader term that encompasses the concept of argument, linking entities within binary predicates. The property sh:minCount is part of the application of SHACL shapes, which validates RDF data structures. Consistency in knowledge graphs is a broader term for quality, ensuring that the data adheres to defined constraints. The set {e2, e3} represents a broader collection of entities satisfying specific conditions. Open path standard confidence is another concept that evaluates the effectiveness of open path rules. Shapes, as structural representations, are broader than the individual objects they describe. This paper concludes with insights presented in Section 6, summarizing the findings of the research. Yago, a significant knowledge graph, serves as a broader term for graph, illustrating the interconnectedness of entities. This feature of learning fully abstracted shapes is crucial to avoid the combinatorial explosion of partially instantiated shapes, highlighting the importance of features in the SHACLEARNER system. Lastly, Car=2 represents a parameter that defines the minimum cardinality constraint in evaluating the support of an IOP rule.",
    "The formal human-expert evaluation has a broader term known as evaluation, which encompasses the systematic assessment processes in various contexts. Within knowledge graphs (KG), there exists a relationship where KG contains evidence, indicating the presence of numerical confidence measures that support mined shapes. The concept of open path head coverage is a broader term that relates to the evaluation of quality in knowledge graphs. Inverse Open Path rules, which are formal elements in predicate logic, fall under the broader category of formalisms. Additionally, the size 2l|F||E|, which refers to the worst-case size of sampled entities, is related to the broader concept of complexity. The knowledge graph K is a broader term for graph, representing the structure of interconnected entities. Shapes, which express constraints on graph data, are categorized under the broader term entity. Furthermore, paths over connected entities are also related to the broader category of entities. The bounded number of entities is specifically related to the target predicate Pt, which defines relationships in the graph. Shape constraints, which are essential for validating graph data, have a broader term in data type validation. The triple format, a method for structuring information, is encompassed within public knowledge graphs. The sh:property is a broader term that relates to the semantics of the SHACL language, which defines constraints on RDF data. The rule in knowledge graph rule learning has a general form that outlines how predicates are linked. A specific set of three entities (e3, e4, e5) satisfies the predicate P1(x, z0), illustrating the relationships defined by the rules. SHACL, which provides a framework for validating graph data, is also a broader term for data type validation. The cardinality parameter Car=3 is categorized under variables, indicating its role in evaluating distinct entities. The head of a logical rule has a broader term known as atoms, which are fundamental components of the rules. Predicates that occur in multiple branches are related to the broader concept of branch, indicating the structure of relationships in the graph. Heuristic pruning serves as a broader term for pruning, an optimization technique used to enhance algorithm efficiency. Lastly, universal variables are a broader term for a variable, representing symbolic representations in predicate logic.",
    "In the realm of knowledge graphs, graph data has a broader term known as data, which encompasses the information structured in a graph format. Within this context, MinIOPSC is a parameter that has a broader term of a variable, indicating its role in specifying minimum requirements for learning algorithms. Furthermore, certain properties in the embedding space, which relate to the characteristics of predicate embeddings, also have a broader term of property. The concept of entity-instantiation is closely linked to the entity-instantiation of the related OP rule, highlighting the relationship between these two constructs. The function Ev() plays a crucial role as it selects rules that are essential for knowledge graph reasoning. Additionally, the cardinality of a path is read from the annotation of the branch at the terminating node, establishing a connection between these elements. Subject and object bindings have a broader term of subject, emphasizing their foundational role in knowledge graph structures. The ultimate evaluation process is a comprehensive assessment that has a broader term of evaluation, ensuring the quality of learned rules. The closed path rule r has a broader term of entities, indicating its application across various instances. Head coverage (HC) serves as a measure that has a broader term of measures, quantifying the effectiveness of rules. The challenge of designing efficient learning methods introduces an extra dimension of challenge, which is a broader term for the complexities faced in this domain. More complex trees, which are advanced structures in knowledge graphs, have a broader term of trees, showcasing their hierarchical nature. The denominator of IOPSC(r) is not affected by the head of the rule, indicating a specific relationship in the evaluation process. Cardinality, a mathematical concept, has a broader term of constraints, defining the expected structure of data. The closed path rule Pt(x, y) is derived from the binary predicate P2(z1, z2), illustrating the logical connections within the graph. The open path support metric, known as Opsupp, has a broader term of Parameters, which defines the variables used in the learning process. Complex shapes, discovered by rule learners, represent advanced structures that have a broader term of concept, indicating their classification within knowledge graphs. Lastly, certain properties in the embedding space have a broader term of embedding, which relates to the mathematical representations used in knowledge graph reasoning, while shapes themselves have a broader term of entities, emphasizing their role in defining relationships.",
    "SPARQL-like constraints have a broader term known as concept, which encompasses various types of knowledge representations. Within this framework, P1_1 is a specific predicate that also falls under the broader category of a variable. The set of entity variables, represented as {x, zi, y}, is crucial in knowledge graph contexts, indicating their role in open path rules. The head of r, denoted by head_r(e, e'), signifies the conclusion derived from the body of a closed path rule. Additionally, existing ontologies for KGs are classified under ontologies, while the term album is categorized as entities within the graph. Mined rules are essential as they present the proportion of mined rules, reflecting the effectiveness of knowledge extraction methods. Recursive SHACL shapes, which relate to data type validation, further enhance the expressiveness of knowledge graphs. The predicate P2_t is another variable that connects entities, and a node in the tree is a specific point within the hierarchical structure of SHACL shapes. The support measure, suppr, is defined under Parameters, which includes the maximum rule length. Shapes in knowledge graphs have a head, referred to as its head, which represents the output derived from the body of the shape. Subject and object argument embeddings are broader terms for argument, indicating their role in representing entities in predicates. The quality measure IOPHC(r1) is calculated as 2/2, indicating a perfect ratio of entities satisfying the head and body of the rule. The head itself is a broader term for concept, while the evolving nature of human knowledge is a reason for the incomplete state of knowledge graphs. The entity e9 is classified under entities, and the results of an experimental evaluation contribute to the broader category of evaluation.",
    "In the context of knowledge graphs, the [i, j]-th element A(Pk)[i, j] has a broader term known as elements, which represent novel components within the SHACLEARNER algorithm. The closed path rule, denoted as r, also falls under the broader category of variables. Furthermore, the open path support metric, OPSupp, is classified under the type of entities, while type information plays a crucial role in enhancing inference processes. The classification of entities is further defined by types or classes, which are broader terms for the concept of entity membership. SHACLEARNER is capable of admitting unary predicates, which are essential for its functionality. Additionally, support is a broader term that encompasses rule learning experiments, highlighting its significance in evaluating rules. The variable P1_t is categorized under variables, and the confidence of a rule is a broader term for confidence, reflecting its reliability. Trees in knowledge graphs possess specific characteristics, which are essential for understanding the discovered trees. SHACL advanced features are part of the broader extension category, indicating ongoing enhancements in the graph's structure. The characteristics of discovered trees are also classified under trees, and the additional tree-shaped constraint is another broader term related to trees. Major approaches to rule learning are encompassed within the broader approach category, while higher confidence in the KG signifies a broader term for confidence, enhancing the reliability of the knowledge graph. Satisfying entities include e3, which satisfies specific predicates. The body predicate is declared as sh:nodeShape, establishing its role in defining constraints within the graph. SHACLEARNER has conducted experiments to assess various aspects of knowledge graphs, and the Inverse Open Path rules (IOP) are classified under the broader term predicate.",
    "The SC of the tree has a broader term known as trees, which represent hierarchical structures in knowledge graphs. Within this context, entity pairs are categorized under pairs, indicating their relationship as ordered sets of entities. Furthermore, a pair of entities is a specific instance of entities, highlighting the connections between them. The concept of maximum length is encompassed by Parameters, which define constraints in the learning process. Satisfying entities are counted as distinct e's, emphasizing their unique contributions to the graph. The predicate P3(z1, z2) is a broader term for predicates, illustrating the relationships between entities. The algorithm is a systematic procedure that falls under the broader category of procedures. Variables, including t, represent placeholders in the context of rules. Sampling, as a broader term for sampling methods, refers to the selection process in knowledge graphs. The vector [0,3,1] is classified under vectors, representing counts of distinct entities. The pattern of existential variables in the head and universal variables in the body is also categorized as variables, reflecting its structural significance. The sequence of predicates P1(e, e1), P2(e1, e2), ..., Pt(e(q-1)', eq) is a broader term for facts, which are essential in knowledge representation. This lemma is particularly useful for rule learning, aiding in the discovery of patterns. Trees possess the body of the shape, which defines the conditions for entity relationships. Entities satisfying the subject argument of the body predicate, Pt, are a broader term for entities, indicating their relevance in the graph. Rules, which encompass inference rules, define constraints and relationships in knowledge graphs. The distance l is another aspect of Parameters, indicating the maximum path length in the graph. The embedding learner is a broader term for concepts, representing the learning of entity and predicate embeddings. Lastly, z0 is related to z1, illustrating the connections between different entities in the graph, while facts F are a broader term for facts, encompassing the data entries associated with entities.",
    "Real-world KGs are often modeled as entity instances, and they may also be represented in this way. Within the realm of knowledge graphs, constraints have a broader term known as formalisms, which encompass various structured frameworks. The number of instances of the head in the KB is related to the broader concept of the head itself, while inverse open path (IOP) rules fall under the broader category of predicates. Additionally, MinIOPHC is a parameter that relates to a variable, and Ev is associated with a system designed for evaluation. The knowledge graph K is linked to the broader term Parameters, which define the maximum rule length. Furthermore, three entities (e3, e4, e5) and entities forming the object argument of the last predicate, P2, are both classified under the broader term entities. The entity e2 is categorized under elements, while z1 is related to z2, indicating a connection between these variables. The predicate P2' also has a broader term as a predicate. Open path standard confidence is a measure that falls under the broader term confidence, and facts in the KG are encompassed by the broader term facts. Each fact in the KG can be represented as a graph, illustrating the relationships between entities. A sampling method creates a KG, and K' is recognized as a subgraph of the input graph. Lastly, GreedySearch(R, MinTreeSC) is a process that constructs a tree structure from inverse open path rules.",
    "In the context of knowledge graphs, the concept of 'Car=2' has a broader term known as 'variables', which are essential placeholders in closed path rules. The 'proportion of rule consequent instances' is justified by the 'target predicate instances in the KG', indicating a relationship between predicted outcomes and actual instances. Additionally, 'fact set K'', which encompasses a collection of facts from a sampled subgraph, has a broader term referred to as 'set'. The 'atomic body' of an inverse open path (IOP) rule is a specific part of the 'body', which defines the conditions necessary for rule satisfaction. IOP rules themselves are grounded in 'predicate logic', establishing a formal framework for their application. Furthermore, 'pairs of entities' relate to the broader concept of 'concept', while 'IOPSC' is a quality measure that pertains to 'An entity e'. The entity 'e1' also falls under the broader category of 'variables', and the 'length' of rules is defined by 'Parameters'. In the realm of semantic web, 'sh:property' is a broader term for 'SHACL-SPARQL', which is used to define constraints on RDF data. The entity '{e2}' is categorized under 'elements', and 'RLvLR' represents a broader algorithmic framework. The predicate 'P1' is part of the 'OP rule P1', while 'e2' satisfies 'the head' of the rule. Notably, 'pruning variants' differ from 'heuristic pruning', showcasing various optimization techniques. The variables 'x and z_i' also belong to the broader category of 'variables'. Stricter quality thresholds are applied to ensure high 'quality' in learned rules, and 'the entities' involved in these rules are encompassed within the broader term 'entity'. Lastly, 'unary facts' represent a broader category of 'data' within knowledge graphs.",
    "In the realm of knowledge graph rule learning, measures support are used in major approaches to rule learning, which encompass various methodologies for evaluating rules. A simpler tree is characterized by having higher confidence in the KG, indicating its reliability. The concept of a record label has a broader term, entities, which refers to the individual items within a knowledge graph. Similarly, trees, which represent hierarchical structures, have a broader term, graph, highlighting their foundational role. R' and MCar are both variables that have broader terms, emphasizing their significance in the context of knowledge graph algorithms. Additionally, e2, which can instantiate the variable z0, has a broader term, vectors, representing mathematical embeddings of entities. The term e's refers to distinct entities that satisfy specific conditions, broadening the understanding of what constitutes an entity. The property sh:minCount is linked to the semantics of the SHACL language, illustrating the formal interpretation of constraints in RDF graphs. Furthermore, the open path concept has a broader term, indicating its classification within the larger framework of knowledge representation. The relationship P1(x, z0) leads to P2(z1, z2), showcasing the connections between predicates in rule learning. The predicate arguments share the same variable in the rule, which is crucial for understanding their relationships. IOPsupp is defined as being greater than or equal to 1, establishing a threshold for evaluating rule quality. Lastly, two open variables and suppr both have broader terms, reinforcing their roles as essential components in the structure of knowledge graphs.",
    "In the realm of knowledge graphs, the term 'human' has a broader term known as 'entities', which encompasses various individual items within the graph. Similarly, 'an explosion in the space of possible shapes' is a concept that falls under the broader category of 'shapes', indicating the complexity of structural representations. The concept of 'IOPsupp' is related to 'a variable', highlighting its role in quantifying entity pairs in inverse open path rules. Furthermore, 'Wikidata+UP' is a subset that pertains to the broader structure of 'graph', while 'such trees' are categorized under 'trees', emphasizing their hierarchical nature. The term 'the entities' also aligns with 'entities', reinforcing the idea of distinct elements within the graph. The 'semi-automatic manner' is a process that relates to both 'process' and 'approach', showcasing a workflow that combines human interaction with automated systems. Additionally, 'the distribution of rules' is analyzed with respect to 'Cardinality', which quantifies the number of elements in a set. The optimization technique known as 'pruning' aims to improve 'computational performance', ensuring efficient learning from knowledge graphs. The cardinality of the set containing entities e2 and e3 is represented as '|{e2, e3}|' and equals '2', indicating the support of the rule. The 'body of r' is a broader term for 'body', which specifies conditions in rule learning. Moreover, 'entities that satisfy the first argument of the head' is a broader term for 'entities', emphasizing their role in logical rules. The sequences of entities involved in relationships are captured under the term 'sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)', which is a broader term for 'entity'. 'Embeddings' are extracted from the 'sampled KG', representing the mathematical relationships within the graph. The 'general form' of rules is a broader term for 'concept', outlining how predicates are linked. The mention of 'e's' refers to distinct 'entities' that satisfy specific conditions. The process of 'population' is categorized under 'process', indicating the enrichment of knowledge graphs. Lastly, 'e'' is a broader term for 'Parameters', which control the learning process in knowledge graph algorithms.",
    "In knowledge graph rule learning, each rule consists of a head at the front of the implication arrow and a body that specifies the conditions necessary for the conclusion. The matrix product A(P1)*A(P2)*...*A(Pm) is used to find satisfying entities that fulfill the conditions defined by the body of the rules. A dataset of five hundred poker hands builds a small complete KG, which serves as a rich resource for evaluating the SHACLEARNER algorithm. In this context, the entity 'x' has a broader term, which is 'entities', indicating its role within the knowledge graph. Additionally, a key feature in their syntax has a broader term, 'feature', highlighting its significance in expressing shape constraints. The shapes defined within the knowledge graph can exhibit varying cardinalities, which are crucial for understanding the relationships among entities. The scoring function of SHACLEARNER, which evaluates the quality of learned rules, has a broader term known as 'The scoring function'. Furthermore, the head of the rule has a broader term, 'rules', indicating its foundational role in rule learning. The TreeSCMIN threshold is another important parameter that has a broader term, 'Parameters', which governs the learning process. The embedding learner, a component of the SHACLEARNER, has a broader term, 'embedding', reflecting its function in deriving representations of entities and predicates. This feature is important since it aids in learning partially instantiated shapes, which can otherwise lead to a combinatorial explosion of possible shapes. In the context of binary target predicates, they serve as two target predicates, allowing for both direct and reverse applications in rule learning. Mined rules correspond to the average number of branches in the mined trees, providing insights into the structure of learned rules. The TreeSCMIN parameter is also categorized under 'Parameters', emphasizing its role in tree shape learning. The embedding-based open path rule learner is a sophisticated algorithm designed to extract high-quality rules from knowledge graphs. Entities within the graph satisfy specific target predicates, which are essential for defining the conditions that must be met. The term '17 or 10% fewer rules' refers to a comparative measure indicating the quantity of rules learned by the SHACLEARNER variant, which is fewer than those learned by the ideal IOP rule learner. SHACLEARNER is limited to learning rules with a minimum cardinality of 1, ensuring that at least one instance of an entity is present. Definition 3 encompasses broader concepts related to open path support and confidence, which are fundamental in the context of knowledge graphs. Lastly, lower quality rules are categorized under 'rules', indicating their lesser reliability in the learning process.",
    "Head coverage (HC) compares with rule quality, indicating that HC is a statistical measure used to evaluate the effectiveness of rules in knowledge graph rule learning. The statistical likelihood of poor quality rules is higher than that of poor quality rules themselves, suggesting a significant concern in the generation of rules that do not meet quality thresholds. The explanatory power of the rule encompasses a broader term, rules, which are formal constructs that define relationships within knowledge graphs. Similarly, rule quality is a broader term for quality, reflecting the overall validity and reliability of the graph's data. The lengths of these rules, referred to as their lengths, also have a broader term, length, which pertains to the number of predicates in a rule. In the context of knowledge graphs, a pair of entities (e, e') has a broader term, pair of entities, which refers to any two distinct entities evaluated for their relationships. Minimum cardinality constraints, which specify the least number of instances required, fall under the broader category of constraints. The body of the shape, which defines the conditions for satisfying a shape's constraints, is a broader term for body. Entity pairs, which satisfy the conditions of a rule, are included in the broader term, entities. Sequences of entities, which involve ordered collections of entities, also relate to the broader term, entities. The one from Wikidata utilizes unary predicates which have at least one hundred facts, ensuring meaningful learning. The number of entities that can instantiate z0 to satisfy the head part is a broader term for entities, indicating how many instances fulfill specific rule conditions. The maximum rule length parameter, denoted as l, is a broader term for Parameters, which control the learning process. The defined threshold (TreeSCMIN) is another broader term for Parameters, setting minimum values for rule inclusion. Min cardinality is a broader term for constraints, specifying minimum requirements in data structures. The variable z_i, used in shape definitions, is a broader term for variables. The practical meaning of the IOPSC and IOPHC qualities reflects a broader concept, quantifying the confidence and relevance of learned rules. This work, which develops a framework for learning shapes from knowledge graphs, is a broader term for work. Lastly, certain properties in the embedding space relate to the broader term, Embeddings, which capture semantic relationships in a lower-dimensional space. The set {A(Pk) | k in 1..m} represents K, a knowledge graph consisting of entities and facts.",
    "In the context of knowledge graphs, the pairs (e', e) are related to pairs, which are ordered sets of entities linked by specific paths. Facts related to the target predicate encompass the broader category of facts, which are essential pieces of information associated with entities. The concept of interestingness is a measure that falls under the broader term measures, indicating the quantified uncertainty in selecting candidate shapes for validation. Additionally, the average TreeSC, which represents the mean structural complexity of tree shapes, is a specific instance of TreeSC. The knowledge graph K is associated with variables, which serve as placeholders in closed path rules. The rules bind to the object argument of the target predicate, establishing relationships within the graph. Furthermore, the Functional Graph Dependency (FGD) and the path are both broader concepts that relate to the structure of knowledge graphs. The IOP rule Pt(x, y) -> P1(y, z) ^ P2(z, t) satisfies a chain of predicates, demonstrating the connections between entities. Support is a broader term under rule learning, while cover relates to rule learning experiments. The open path rules (OP) are linked to entities, represented by An entity e. The logical statement of the rule is a broader term for rules, which define constraints in knowledge graphs. The Cardinality of an IOP rule is another concept that specifies the minimum number of distinct head path instantiations required. The entity E is part of the Parameters that control the learning process. An approach provides a sample of data for analysis, while quality measures are computed using fast matrix and vector operations, enhancing the efficiency of evaluating learned shapes. Lastly, the country is a broader term that encompasses entities, illustrating the relationships within the knowledge graph.",
    "The maximum number of predicates of the rules has a broader term known as concept, which encompasses various types of entities. In this context, A, a target predicate used in the SHACLearner algorithm, is related to a variable, indicating its role in the learning process. The rule body, which is essential for defining rules, is a broader term under the category of rules. Furthermore, entity-instantiation is a broader term that relates to entities, highlighting the specific realization of entities within closed path rules. Structural features, which describe the characteristics of shapes in knowledge graphs, fall under the broader term feature. The sh:path expression is a broader term within the RDF framework, facilitating navigation through graphs. Inferring new facts is part of a broader process that derives additional knowledge from existing data. The input graph serves as a foundational structure within the broader category of graphs. The body and the head of a rule are components of the broader term body, which specifies the conditions for inference. Additionally, e' is categorized under elements, indicating its role as an object entity in RDF triples. The support measure, suppr, is defined as Pt, a target predicate used in the algorithm. This phenomenon, which refers to the observed differences in rule quality, is classified under the broader term phenomenon. Performance, which assesses the effectiveness of the SHACLEARNER system, is a broader term related to quality measures. Measures support, a metric for counting instances in rule learning, is categorized under measures. The embedding representation of the predicates captures semantic relationships and is a broader term under representation. The number of target predicates, which indicates the count of distinct predicates in a knowledge graph, is a broader term under count. Schema-based constraints are often unavailable, highlighting the challenges posed by such constraints in knowledge graphs. The average number of branches in the trees is shown along with the tree-building runtime, providing insights into the complexity of the structures derived from Inverse Open Path rules. Unary predicates which have at least one hundred facts are categorized under facts, ensuring meaningful learning. Lastly, automatic and semi-automatic methods utilize non-structured sources to populate knowledge graphs, reflecting the integration of diverse data inputs.",
    "In the realm of knowledge graph rule learning, major approaches to rule learning encompass various methodologies, which are categorized under the broader term of rule learners. These rule learners utilize algorithms, such as MinTreeSC, which is a specific parameter that defines the minimum threshold for tree structure quality. Within this context, the concept of cardinality is crucial, as illustrated by the relationship between Car(r) and Cardinality, where Car(r) serves as a cardinality annotation indicating the lower bound of distinct head paths in knowledge graphs. Furthermore, the predicate logic formalism, which is a structured framework for representing relationships, falls under the broader category of formalisms. In this framework, Definition 1 plays a significant role by defining how pairs of entities satisfy the body and head of rules, quantifying support as the count of instances where both are satisfied. The scope of knowledge delineates the constraints that define the knowledge that can be acquired from schema-free knowledge bases. Evaluation methods, such as Ev, are essential for assessing the effectiveness of rules, which are formal constructs that define relationships in knowledge graphs. Additionally, figures like Fig. 1 visually represent concepts related to unary predicates, while the logical statement of the rule is intricately linked to certain properties in the embedding space. The least constrained shape serves as a fundamental path structure, and the scoring function of SHACLEARNER evaluates the quality of learned rules. Notably, predicates like P1 are integral to the relationships defined in closed path rules, and Wikidata has been extensively utilized in rule learning experiments, showcasing its significance in the field.",
    "In the context of knowledge graphs, 'their second argument' has a broader term known as 'argument', which refers to the specific entities involved in the construction of tree structures. Similarly, 'rules with cardinality Car' is a term that falls under the broader category of 'Cardinality', indicating constraints on the number of distinct entities satisfying certain rules. The 'process of constructing one kind of more complex shape' investigates the use of 'trees', which are hierarchical structures that represent relationships among entities. 'Sampling' is another term that has a broader term, 'sampling process', which describes the methodology for selecting subsets of data. The 'results' of experiments show a significant reduction in 'the running time for aggregating IOP rules into trees', highlighting the efficiency of this approach. Additionally, 'e2' is categorized under 'entities', while 'inferring new facts' relates to 'facts', emphasizing the derivation of new information from existing data. The property 'sh:minCount' is associated with 'annotation', which specifies cardinality constraints in SHACL. The term 'cardinality Car' also belongs to the broader category of 'Cardinality'. Furthermore, 'the learnt embeddings' are part of the 'embedding-based method', which utilizes vector representations for learning tasks. 'Wikidata' serves as a broader term for 'graph', representing a structured knowledge base. The concept of 'ongoing maintenance and extension' is classified under 'process', while 'object and datatype properties' are types of 'property' in knowledge graphs. The variable 'z0' is related to 'Parameters', and it also connects to the predicate 'P1(x, z0)'. Lastly, 'e1' has a relation to 'relation P0', which establishes a specific relationship between entities.",
    "In the realm of knowledge graphs, the head of a logical rule is represented by a sequence of paths, denoted as Path1 ^ Path2 ^ ... ^ Pathq. This structure is crucial for understanding the relationships and constraints within the graph. Both kinds of errors, which encompass inaccuracies from omissions and commissions, fall under the broader category of errors. Similarly, the concept of entity-instantiation is a specific realization within the broader process of constructing knowledge graphs. Shapes play a significant role in data cleaning, as they can be utilized to identify and rectify inaccuracies in the data. Formalisms have been proposed to express various patterns, which are essential for characterizing the relationships among entities. The pattern of existential variables in the head and universal variables in the body is a formal structure that relates to the broader concept of knowledge representation. The Sampling() method, which is a type of algorithm, is employed to create fragments of knowledge graphs by selectively pruning entities and predicates. The entity 'E' is categorized under elements, indicating its role within the graph. More complex shapes, cardinality expressions, and the cardinality itself are all broader concepts that enhance the understanding of knowledge graph structures. Another work has provided an interactive framework that allows users to define SHACL shapes of varying complexities. Facts related to them are encompassed within the broader term of data, which serves as the foundation for knowledge graphs. The sh:minCount property is declared by the property declaration, establishing constraints on the minimum number of instances required in the graph. Conjunctive atoms, which are fundamental components of logical rules, are categorized under the broader term of atoms. The extension of knowledge graphs is part of the broader process of maintaining and enhancing the graph's structure. The embedding learner, a type of algorithm, is utilized to compute representations of entities and predicates. Trees are discovered for each argument, serving as a hierarchical structure that represents relationships in the graph. Lastly, rule languages are formal languages that fall under the broader category of language, enabling the expression of logical implications within knowledge graphs.",
    "In the context of knowledge graphs, various entities and their relationships are defined through a series of broader terms and specific outcomes. For instance, 'information triggered by entities' and 'entity-instantiation of the related OP rule' both fall under the broader category of 'entities'. Similarly, 'e2' is categorized as a type of 'variables', while 'the statistical likelihood of poor quality rules' relates to the overarching concept of 'quality'. The 'entities in the sampled KG' are specifically linked to 'An entity e', highlighting their role in the graph. Additionally, the cardinality constraint 'Car=2' results in 'the count', which quantifies the entities involved. The term 'the same entities' is also classified under 'entity', emphasizing their shared characteristics. Other entities like 'e7' and 'pop stars' are recognized as types of 'entities', further illustrating the diversity within this classification. The knowledge graph DBpedia 3.8 is notable for containing 'over 11 million facts', showcasing its extensive dataset. Furthermore, 'maintenance' is categorized under 'process', indicating the ongoing efforts required to manage knowledge graphs. Quality assessments are facilitated by 'shape quality measures', which are a subset of 'measures'. The rule 'r' has 'three versions of r', reflecting its adaptability in different contexts. The relationship between the logical statement of the rule and properties in the embedding space is encapsulated under 'property', while 'OPHC' also falls under the category of 'a variable'. Lastly, 'elements with value >= Car of V^1(A(P1)*A(P2)*...*A(Pm))' indicates 'entities that satisfy the first argument of the head', linking specific conditions to broader entity classifications. The method 'Embeddings(K')' is associated with 'embedding space', illustrating the mathematical framework used in knowledge graph analysis. Lastly, the predicates P1, P2, and Pt are recognized as types of 'predicate', underscoring their foundational role in defining relationships within the graph.",
    "In the realm of knowledge graphs, the subject argument has a broader term known as argument, which plays a crucial role in connecting various entities. The embedding learner, specifically represented by RESCAL, is a model that computes embedding representations of these entities. RESCAL itself is categorized under the broader term of embedding learner. Concepts such as well-defined semantics and open path support also fall under the broader category of concept, highlighting their foundational importance in knowledge representation. Furthermore, head coverage is a critical measure used in major approaches to rule learning, which evaluates the effectiveness of rules derived from data. Large data-first graph databases, which prioritize the management of extensive interconnected data, are a subset of graph databases. Within this framework, rules are formal constructs that define relationships and constraints, categorized under the broader term of formalisms. The variable P2_2 is another example, which is classified under a variable. The dataset contains over 11 million facts, which are essential pieces of information in knowledge graphs. The predicate P2(z0, z1) represents relationships between entities and is classified under the broader term of predicate. The number of potential rules in the search space indicates the complexity of rule discovery, with new predicates being generated from existing facts. The performance of the SHACLEARNER (-S+H) is evaluated in terms of its effectiveness in learning shapes from knowledge graphs. Information triggered by entities refers to the data generated based on entity classifications, which is a subset of information. Closed rules, which define specific patterns in knowledge representation, are categorized under inference rules. Additionally, shapes that can be trivially expressed in a fragment of SHACL are classified as concepts, while sh:property declaration specifies properties within the knowledge graph framework. Lastly, the logical relationship father(x, z2) requires the condition that human(z2, z2) holds true, illustrating the interconnectedness of entities within the graph.",
    "Unary predicates which have at least one hundred facts are defined by the presence of one hundred facts. The parameter 'l' has a broader term known as variables, which also includes 'y and x' and 'subject', both of which are types of variables. In the context of knowledge graphs, 'a tree' is a specific instance that falls under the broader category of trees, which in turn relate to entities. The concept of 'concept or class membership' is a broader term for the concept itself. Additionally, the completion strategy is a broader term for the approach used in knowledge graph processing. Quantified uncertainty is categorized under measures, indicating its role in assessing uncertainty in knowledge graphs. The shapes generated by these structures can lead to dynamic data entry forms, while a path is a broader term that encompasses the concept of relationships in knowledge graphs. Each entity can be related by a specific predicate, and the parameters such as Car values 1, 2, and 3 fall under the broader term of Parameters. The chain of conjunctive atoms is a broader term for atoms, which are fundamental components in knowledge graph rules. All benchmarks serve as a broader term for benchmark evaluations, while a pair of entities (e, e') is a broader term for entity pairs that satisfy specific conditions. Specific shapes are also categorized under the broader term of concept, and a rule is defined as closed, indicating that all variables within it are fully specified.",
    "The vector V^1(P1, P2) equals the vector [0,3,1], indicating a specific count of distinct entities satisfying the defined predicates. In the context of knowledge graphs, related facts have a broader term known as data, which encompasses the information contained within these graphs. Each logical rule consists of a head at the front of the implication arrow, where the head represents the conclusion of the rule. A path is defined as a sequence of predicates that connect entities through intermediate variables. Quality measures, which assess the effectiveness of learned shapes, have a broader term referred to as measures. The entity e3 is categorized under elements, indicating its role in satisfying certain predicates. Furthermore, an instance of the head has a broader term that is simply head, while embedding-based OP rule learning falls under the broader category of learning methods. The term inefficient yet complete is classified as a property, and the completeness of our algorithm is recognized as an algorithm. Language, which pertains to the properties of entities, is also categorized under entities. Class and type information is a broader term for information that aids in understanding the structure of knowledge graphs. The quality measure IOPHC is associated with the entity e, highlighting its significance in the context of inverse open path rules. The goal of pruning, aimed at enhancing computational efficiency, is a broader term for the process of pruning itself. Knowledge panels, which provide concise information about entities, are introduced to and featured on Google Search. Universal variables are integral to existential rules, emphasizing their role in logical constructs. This experiment is part of a broader category of experiments aimed at evaluating the SHACLEARNER system. Lastly, HOLE is recognized as an embedding-based method designed to learn from large knowledge graphs, while this paper contributes to the broader field of research.",
    "The IOPSC values have a broader term known as value, which quantifies the quality of inverse open path rules in knowledge graphs. Shapes are enhanced with minimum cardinality constraints to define structural representations that express constraints on graph data. The adjacency matrix representation of the KG is a specific type of representation that encodes relationships between entities. The cardinality of a path is declared by the sh:minCount property, which specifies the minimum number of instances required. These predicates are associated with a class, indicating type-like relationships in knowledge graphs. The process of Sampling(K, Pt) is a broader term that encompasses the method of extracting relevant subsets from knowledge graphs. Pairs (e', e) have a broader term known as pairs, which refers to ordered sets of entities linked by specific paths. The set Ei has a broader term called elements, representing individual entries in adjacency matrices. The embedding-based open path rule learner is categorized under the broader term learning method, which encompasses systematic approaches for knowledge acquisition. The embedding learner operates within the context of Embeddings, which are mathematical representations capturing semantic relationships. A person is classified under the broader term entities, while a larger required cardinality refers to an increased minimum number of instances that must satisfy the head of an inverse open path rule. The embedding learner also has a broader term, Embeddings, indicating its role in learning representations. Pairs (e', e) are satisfying the head of the rule, while the body of the shape is defined by the target predicate Pt. DBpedia 3.8 has been utilized in rule learning experiments, highlighting its significance as a common knowledge graph. The entity e8 is categorized under entities, and the variable z has a broader term known as a variable. Finally, the support of r counts the rule instances, which are specific pairs of entities satisfying both the body and head of a closed path rule.",
    "In the context of knowledge graphs, the entity 'head_r(e, e')' relates to 'e'', indicating a connection between these two entities. Furthermore, the cardinality constraint 'Car=1' has satisfying entities 'e2' and 'e3', which fulfill the specified conditions. A fact in the knowledge graph is a specific instance of information that has a broader term known as 'facts'. Similarly, an extensive representation of predicates and entities encompasses a broader category referred to as 'entities'. The embedding learner, which is crucial for understanding relationships within the graph, is associated with the broader concept of 'the embedding representation'. The entity 'e6' also falls under the broader category of 'entities', while the number '74' signifies a broader quantity measure. The term 'language' is classified under 'types', and the set '{e2, e3}' is recognized as part of 'entities'. However, their method cannot deploy for comparison purposes, highlighting a limitation in evaluating different approaches. The performance measure 'TreeSC' is categorized under the broader term 'concept'. The entity 'e3' satisfies the head of a specific rule, while 'r3' and 'P' are both associated with the broader term 'Parameters'. The knowledge graph version 'DBpedia 3.8' is part of the broader category of 'graph'. The entity 'e1' is classified under 'representation', and the measure 'cover' is utilized in the context of rule learning. Additionally, the 'sampled KG' arises from a sampling method, and the support of 'r' is a broader measure of 'support'. Lastly, the process of learning partially instantiated shapes is recognized as part of a broader 'process'.",
    "In the realm of knowledge graphs, the concept of 'cover' has a broader term known as 'rule learning', which focuses on discovering patterns through rules. Within this framework, 'inferred head instances' are related to the broader term 'head', indicating the logical structure of rules. The entity set 'Esample' is categorized under the broader term 'set', which encompasses entities that meet specific conditions. Furthermore, the sequence of predicates represented as 'P1(e, e1), P2(e1, e2), ..., Pn(e(n-1), e')' is associated with 'facts', highlighting the foundational data points in knowledge graphs. Knowledge panels, which provide concise information, are introduced to enhance user experience on platforms like 'Google'. Additionally, 'lower-cardinality versions of that rule' fall under the broader category of 'Cardinality', reflecting the quantitative aspects of data relationships. The body of a rule is instantiated to predict 'an instance of the head', demonstrating the predictive capabilities of knowledge graph rules. A 'composite predicate' is represented by 'P*(x, t)', illustrating the connections between entities. The 'links between the variables' and 'z0' are broader terms under 'variables', which serve as placeholders in rules. The 'sampling process' is a method that falls under the broader term 'process', facilitating efficient learning from knowledge graphs. Each 'KG fact' is an instance of 'the predicate of the head', and it is also considered redundant with respect to this predicate. The set 'Ek' is derived from 'E(k-1)', indicating the iterative nature of sampling in knowledge graphs. Unary occupation predicates are associated with 'high IOPHC', reflecting their relevance in classification tasks. The components 'the body and the head' are linked to the broader term 'head', emphasizing their role in rule learning. Type information can be utilized to understand and validate 'data', ensuring logical coherence. The term 'consistent' is a broader property that ensures adherence to defined constraints. Lastly, 'additional constraints' induce 'alternative shapes', enhancing the expressiveness of knowledge graph data.",
    "Minimum cardinality constraints introduce tree shapes, which are essential for understanding the structure of knowledge graphs. The predicate P_k is represented as a matrix, allowing for a clearer interpretation of relationships within the graph. Additionally, the maximum number of predicates has a broader term known as Parameters, which also encompasses the maximum length parameter that defines the upper limit on rule lengths. In this context, z2 is another variable that falls under the broader category of variables. Furthermore, association rule mining is a technique that is encompassed by the broader term rule mining, highlighting its role in discovering patterns. Our new ones, which refer to newly generated predicates, are categorized under the broader term new predicates. The atomic body, a crucial component in predicate logic, is classified under the broader concept. This paper, which presents significant findings, is part of the broader category of papers. Unary occupation predicates, which classify job roles, are included under the broader term occupations, which in turn falls under entities. The generality of learned shapes is a quality measure that indicates their applicability across various contexts. Head coverage, a measure of rule effectiveness, is also categorized under measures. The support measure, suppr, is defined as body_r, which represents the conditions that must be satisfied by entity pairs. The embedding learner, a key component in embedding learning, is part of a broader framework. Resource constraints are defined under the broader term constraints, while YAGO2s serves as a benchmark in knowledge graph research. The closed path rule r is categorized under the broader term entity, and the triple format is a specific representation within the broader context of graphs. Lastly, the path of entities that satisfy a chain of predicates in the rule is defined under the broader term An entity e.",
    "The embedding learner encompasses learnt embeddings, which are essential for representing data points in machine learning. In the context of knowledge graphs, facts about those predicates are a subset of facts that provide specific information about predicates, while vector V^1 is a broader term that includes vectors used to represent entities and predicates. The adjacency matrix representation of the KG utilizes an adjacency matrix to encode relationships between entities. Additionally, the target predicate is a broader concept that relates to the classification of entities, and standardised measures are metrics that fall under the broader category of measures used to evaluate rule quality. The cardinality constraint Car=1 is a specific instance within the broader category of entities, and P1 serves as a broader term for Parameters that define the maximum rule length in learning processes. Minimum cardinality constraints are part of the broader rules framework. In the process of rule learning, greedy search aggregates the object argument to optimize the search for valid rules. The closed path rule Pt(x, y) is inferred from the predicate Pn(zn-1, y), while the support of r counts the occurrences of rule instances that satisfy both the body and head of a rule. The predicate P1 is integral to the relationship P1(x, z0), which connects entities through specific paths. Two vectors represent the subject and object arguments of predicates, and PathFinding() is a broader algorithm that generates candidate rules. Knowledge panels provide concise information on the Google Search engine, while the process of constructing one kind of more complex shape leads to the formation of a tree structure. Standard confidence is a key metric used in major approaches to rule learning, and the entity e2 is linked to relation P0, which establishes a relationship between entities. Finally, YAGO2s employs binary predicates to structure its knowledge representation.",
    "YAGO2s has a relationship with binary predicates, indicating its role in representing knowledge. The entities e1, e2, and e3 are categorized under a broader term known as entities, which encompasses various individual items within the knowledge graph. Parameters, which define the maximum rule length, are also linked to variables, showing their interdependence. Additionally, the cardinality constraint Car=2 is a specific instance of Parameters, highlighting the hierarchical structure of these concepts. A certain cardinality c1 is related to Cardinality, emphasizing the importance of quantifying relationships in the graph. The entity e9 is classified under the broader term entity, further illustrating the categorization of nodes in the graph. Occupations, which denote specific job roles, fall under the broader category of types, showcasing the classification of entities based on their attributes. Every KG fact is a specific instance of facts, representing the relationships between entities. The closed path rule r is associated with entities and is defined by the tree support metric Treesupp, which quantifies the number of entity pairs satisfying the head of a tree structure. Class and type information facilitates the creation of partially instantiated shapes, allowing for the exploration of various configurations within the knowledge graph. The variable zn\u22121 is categorized under variables, indicating its role in open path rules. Satisfying entities e2 and e3 are also classified as entities, fulfilling the conditions of specific rules. Large data-first graph databases represent a broader category of graph data, emphasizing the management of extensive interconnected data. The sequence of entities e1, ..., e(n-1) is another instance of entities, involved in satisfying the body of closed path rules. The number of distinct instantiations of head_r(e, e') is related to quantity, reflecting the count of unique pairs satisfying specific rules. Similarly, the number of entities that can instantiate z0 to satisfy the head part is linked to count, indicating how many instances fulfill the conditions defined by the rules. The concept of length is associated with the broader term concept, representing the number of predicates in a rule. The cardinality constraint Car=1 is categorized under variables, while different cardinalities refer to various integer values assigned to IOP rules, indicating the minimum number of distinct instantiations required.",
    "In the context of knowledge graphs, the various feature values encompass a broader term known as feature values, which refer to the specific attributes assigned to data points. Standard confidence (SC) is another measure that falls under the broader category of measures, which also includes confidence, indicating the reliability of learned shapes. OPSC, a metric for assessing open path rules, is classified under the broader term of a variable. Additionally, rules of low quality are recognized as a subset of quality, highlighting their lesser reliability. The label of a link in the graph is a specific type of unary predicate that belongs to the broader category of graphs. Entity variables, which serve as placeholders in knowledge graphs, are also a type of variable. The concept of entity-instantiation is categorized under the broader term of concept, reflecting its role in knowledge representation. The formalism of constraints plays a crucial role in determining the scope of knowledge that can be derived from schema-free knowledge bases. V^2, a vector representation, is classified under the broader term of vectors, while Section 2 of the document is a part of a larger section. The term pair of entities refers to a broader category of entities, with the set of such entities specifically containing the entities {e2, e3}, which can be represented as such. New predicates lead to the production of new unary facts, which are based on these predicates. Furthermore, entity e_i is a specific instance that falls under the broader category of vectors. Lastly, the mention of -10% indicates a decrease in performance, which is a measure of the effectiveness of the SHACLEARNER system.",
    "In the realm of knowledge graphs, the concept of 'not-null' is a specific type of constraint that ensures certain attributes must always contain values, thus falling under the broader category of 'constraints'. Similarly, the entity 'e9' is classified as an instance of 'entities', indicating its role within the graph. The system designed without sampling, but incorporating a heuristic rule learning module, is categorized as an 'algorithm', showcasing its methodological approach. The set of entities represented as '{e2, e3}' is a subset of 'An entity e', highlighting its specific identification within the graph. Furthermore, 'the learnt embeddings' are a refined form of 'embedding', which are essential for representing entities in vector space. The term 'the head' is a broader classification of 'head', emphasizing its significance in logical rules. Additionally, 'its more curated development' refers to the structured enhancement of 'development', which is crucial for the integrity of the knowledge graph. The 'number of entities' is a quantifiable aspect of 'quantity', reflecting the distinct entities associated with specific predicates. The variable 'y' is a broader term for 'entity variables', indicating its role in logical expressions. The 'predicate P_k' serves as a representation of 'variables', capturing relationships in the graph. The process of constructing complex shapes is encapsulated in the broader term 'process', which is essential for data representation. Our research contributes to the field, as indicated by 'our work', which is a subset of 'research'. The ultimate evaluation of rules will be conducted in 'the next step', ensuring a systematic approach to rule assessment. The concept of 'support' encompasses both 'concept' and 'rule learners', indicating its foundational role in rule learning. The predicate 'Pt(e', e)' is recognized as 'a fact in the KG', representing a relationship between entities. Lastly, 'facts F' is a broader term for 'set', which includes various factual statements within the knowledge graph, while 'Cardinality of a path' and 'the body of the shape' are both classified under 'concept', emphasizing their importance in defining relationships and constraints.",
    "In the context of knowledge graphs, 'evidence' has a broader term known as 'data', which refers to the information contained within these graphs. Similarly, 'Ek', a set of entities related to a target predicate, is encompassed by the broader term 'variables'. The concept of 'recursive SHACL shapes' is also linked to 'semantics', indicating a deeper relationship in the study of meaning. Furthermore, the term 'three entities (e3, e4, e5)' is categorized under 'entity', as are the 'entities forming the object argument of the last predicate, P2'. The 'unmodified SHACLEARNER', which is an algorithm, is another example of a term that falls under the broader category of 'algorithm'. Additionally, a 'pair of entities' is classified as 'entities', highlighting the interconnectedness of these concepts. The 'class and type information' allows for the creation of 'fully abstracted (entity-free) shapes', showcasing the flexibility in representing knowledge. 'Google Search', a well-known search engine, is categorized under the broader term 'product'. The entity 'e1' is also classified as an 'entity', while the vector representation '[0 1 2]^T' is a broader term for 'vectors'. The phrase 'the one from Wikidata' refers to a broader category of 'Wikidata', which serves as a central storage for structured data. The 'property declaration' is a specific type of 'property' that defines constraints within knowledge graphs. Moreover, 'shapes' include 'existential rules', which are logical constructs in formal systems. The variables 'x and z_i' are instantiated by 'entity', while 'predicate P_k' is associated with 'two vectors', capturing the relationships between entities. The entity 'e' is a broader term for 'entities', and 'r3' and 'P' are both classified under 'variables'. Lastly, 'connected entities' can be seen as a broader term for 'An entity e', emphasizing the relationships that exist within the knowledge graph.",
    "In the context of knowledge graphs, 'its body' has a broader term known as 'body', which specifies the conditions that must be satisfied for rules to hold true. Similarly, 'the average number of branches in the trees' is a metric that falls under the broader category of 'trees', indicating the complexity of relationships in these structures. The relationship 'locatedIn(z, y)' is encompassed within the broader term 'rules', which define constraints in knowledge graphs. Furthermore, 'entities satisfying the subject argument of the body predicate, Pt' are categorized under 'entities', representing the individual items within the graph. The formal expression known as 'the rule' is directly associated with the 'body', indicating the logical structure of the rule. Additionally, 'step' is a phase in the 'process' of evaluating Inverse Open Path rules. The variable 'zi' is classified under 'entity variables', which serve as placeholders in the rules. The term 'this product' refers to a broader 'product', which is the result of matrix computations in the graph. The entity 'e3' is also categorized under 'entities', highlighting its role in satisfying specific predicates. The average number of branches in the mined trees is another metric that relates back to 'trees'. The term 'the count' is a broader concept that refers to the numerical tally of distinct entities, while 'entity-free rule' is a logical construct that falls under the broader 'concept'. The variable 'z2' is related to the predicate 'Pn(zn-1, y)', illustrating the connections between entities in the graph. The cardinality constraint 'Car=1' results in 'the set of such entities', which is a collection of distinct entities satisfying specific conditions. 'Rule learning' is a broader term that encompasses both 'approach' and 'process', indicating its significance in discovering patterns in data. The mention of '355' refers to a specific unary predicate that is part of the broader 'quantity' of rules learned. The concept of 'one shared variable' is categorized under 'variables', which are essential in defining relationships in the graph. Lastly, 'distinct e's' represent unique entities that satisfy certain conditions, and 'P1_k' is a vector representation that falls under the broader category of 'vectors', illustrating the mathematical representation of entities and predicates.",
    "In the realm of knowledge graphs, the term 'entities (e, e')' has a broader term known as 'pair of entities', which refers to two distinct entities evaluated for their relationships. These relationships are often modeled through 'concept or class membership', which is represented as 'entity instances'. A specific method employed in this context is 'this method', which is characterized as a 'brute-force search' approach. Furthermore, 'the core of SHACL' encompasses a broader concept, linking it to 'concept', while 'KG K'' is a sampled subgraph that relates to 'An entity e'. The predicate 'Pt' is associated with 'Parameters', indicating its role in defining the maximum rule length. Additionally, 'rule quality' is a broader term that falls under 'quality measures', and it is closely related to 'confidence', which itself is a broader term for 'rule mining'. The concept of 'rule quality' also connects to 'concept', highlighting its significance in knowledge graph analysis. Moreover, 'three entities (e3, e4, e5)' and 'entities forming the object argument of the last predicate, P2' both fall under the broader category of 'entities'. The 'relevance of the rule' is another concept that is encompassed within the broader term 'concept'. In terms of mathematical representation, 'V^1(P1, P2)' is categorized under 'vectors', which are essential in knowledge graph embeddings. The evaluation method 'Ev' is also classified as 'entities', emphasizing its role in assessing graph data. The structure of knowledge graphs can be represented through 'deeper, more complex trees', which are a broader category of 'trees'. New information is generated through 'new ones', which are added to enhance the knowledge graph. The editor 'Schimatos' is designed for manual knowledge graph completion and is classified under the broader term 'editor'. Lastly, 'e1' is defined as the predicate 'Pt(e, e') or Pt(e', e)', and it is also categorized under 'entities', illustrating its role in the knowledge graph.",
    "The satisfaction of a less-constrained shape is a necessary condition for the satisfaction of a more complex shape, indicating that simpler structural requirements must be fulfilled before more intricate patterns can be validated. In this context, satisfying entities e2 and e3 has a count of 2, meaning that two specific entities meet the criteria defined by the relevant rules. The output generated by the graph structure learner is provided in an interactive interface, allowing users to engage with the data effectively. Our novel tree shapes, which are derived from research, serve as a foundational structure for knowledge graph completion. Additionally, millions of entities contribute to the overall quantity of data processed within these graphs. Unary predicates act as class or type constraints, guiding the validation of relationships. Wikidata plays a crucial role in generating facts that enrich the knowledge base, while contributors enhance the graph by adding new entities. The cardinality constraint Car=3 is a variable that helps evaluate the number of distinct entities satisfying specific rules. Length, as a property, refers to the number of predicates in an inverse open path rule, which is essential for assessing the quality of the derived shapes. Furthermore, e3 is categorized under variables, and standard confidence is a measure that reflects the reliability of the learned rules. A target predicate Pt serves as a specific predicate in the knowledge graph, while paths over connected entities represent the relationships between various entities. The relationship between OP and IOP rules highlights the interconnectedness of these rule types in knowledge graph learning. Varying confidence levels indicate the reliability of the discovered patterns, and poor quality rules are those that do not meet the minimum quality thresholds. Finally, entities E encompass the individual items within the knowledge graph, and P1 is a predicate that represents a binary relation, contributing to the overall structure of the graph. Valid trees maintain their integrity and quality measures, ensuring they satisfy the constraints defined within the knowledge graph.",
    "In the context of knowledge graphs, the entity e2 has a broader term known as representation, which serves as an abstract model for categorizing entities and predicates. The set of facts, denoted as F, is composed of specific pieces of information referred to as facts, establishing relationships between various entities. The body of a rule is linked to its head, indicating the logical structure of inference. Furthermore, F also encompasses a broader term of facts, highlighting its comprehensive nature. The process of pruning is related to the broader term process, which simplifies the structure of mined trees. The vector V^1(A(P1)*A(P2)*...*A(Pm)) indicates the distinct entities that satisfy the first argument of the head, while the ideal model represents a broader concept within knowledge graph systems. The number of entities that satisfy the head of the rule is categorized under the broader term count, which quantifies the distinct entities fulfilling specific conditions. Weak inference rules fall under the broader category of inference rules, and closed rules are classified as a type of formalism. Mary, as an individual, is categorized under the broader term entities. Additionally, a non-recursive rule is characterized by achieving 100% standard confidence and head coverage. The body of a rule is identified as Pt, which serves as a target predicate. The approach taken in knowledge graph processing provides the output, which assists in deriving shapes and relationships among entities. The number of entities is also a broader term that encompasses entities within the graph. Trees, representing hierarchical structures, are classified under the broader term concept. The max rule cardinality MCar is related to the broader term Cardinality, indicating constraints on rule cardinality. The atomic body serves as a foundational component of the body, while Ei represents a broader term of variables, which includes cardinality constraints like Car=2.",
    "In the context of knowledge graphs, various entities and their relationships can be defined through broader terms. For instance, 'elements with a value >= Car' has a broader term of 'elements', while 'cardinality Car' is encompassed by 'attributes'. The embedding learner algorithm known as 'HOLE' falls under the broader category of 'embedding'. Similarly, 'the head' is a more specific term related to 'head', and the 'complexity of the sampling algorithm' is a subset of 'complexity'. The 'body predicate' is categorized under 'concept', and 'minimum cardinality 1' is a specific type of 'constraints'. The predicate 'P2_t' is a variable that is part of a larger category, while 'Pn' is specifically part of the predicate 'Pn(zn-1, y)'. The relationship defined by 'fact Pk(ei, ej)' is included in the set of facts 'F'. Additionally, 'P1_1' is a broader term for 'predicate', and 'entities that satisfy the first argument of the head' refer to a more general 'entity'. The variable 'x' is classified under 'variables', and 'existential rules' are a type of 'rules'. The process of 'learning partially instantiated shapes' is related to 'concept', while 'readable patterns' fall under 'representation'. The term 'shapes' is a broader term for 'An entity e'. In terms of mathematical representation, 'each column' is summed to obtain 'vector V^2(Pt)', indicating the relationships between these entities. Lastly, 'Ev' is a broader term that encompasses the 'process' of evaluation.",
    "In the realm of knowledge graphs, the closed path rule 'r' has a broader term known as 'a variable', which serves as a symbolic representation in predicate logic. The collection of individual items referred to as 'entities E' is a subset of the broader category 'entities'. Within this framework, 'facts' are crucial as they instantiate the 'head of the rule', providing essential data points. The set 'Ek' is defined through the predicate logic expression 'Pi(e, e') or Pi(e', e)', illustrating the relationships between entities. Real-world knowledge graphs (KGs) are instrumental in performance evaluation, assessing the effectiveness of various systems. The quality of a tree, which is a hierarchical structure in knowledge graphs, is a broader term encompassing 'trees'. Similarly, the predicate 'P' is categorized under 'classes', indicating its role in representing unary predicates. The complexity of knowledge graphs is reflected in 'the size of the problem', which is a broader term for 'size', denoting the number of sampled entities. Additionally, 'links between the variables' are broader than 'link', highlighting the connections in the graph. The entity 'x' is a broader term for 'entity', representing specific objects within the graph. The sampled knowledge graph is part of the broader 'sampling process', which aids in managing complexity. The concept of 'language' is a broader term for 'concept', linking entity types to their properties. The intermediary entities 'entities e1, ..., e(n-1)' are integral to the 'pair of entities (e, e')', forming the connections necessary for rule satisfaction. The largest proportion of rules mined from knowledge graphs possesses 'the least stringent requirements', indicating minimal constraints for validation. The variable 'y' is a broader term for 'variables', representing relationships in open path rules. The formal definition of tree structures, 'Tree: Treesupp, TreeSC', falls under the broader category of 'trees'. The entity 'e1' is categorized as a broader term for 'set', indicating its role in satisfying conditions. The predicate 'P1_t' is a broader term for 'a variable', while 'TreeSC' is a broader term for 'algorithm', reflecting its computational nature. Finally, the 'SC of the tree' is a broader term for 'Standard confidence (SC)', quantifying the reliability of the mined rules.",
    "Both kinds of errors can be highlighted for correction by schema-based constraints, which enforce specific conditions on the data within knowledge graphs. In this context, predicate P_k represents P1_k, indicating a relationship between these two representations in knowledge graph embeddings. Furthermore, entity e_i has a broader term of entities, which encompasses various individual items within the graph. Similarly, a person is classified under the broader term entities, illustrating the hierarchical structure of classifications. The RDF graph also falls under the broader category of graph, showcasing its role in representing information through subject-predicate-object relationships. Comparative work is another term that has a broader term of work, emphasizing its research nature. Uncertainty is related to the broader concept of concept, reflecting the inherent variability in knowledge extraction processes. Additionally, head coverage is categorized under rule learning experiments, highlighting its statistical significance in evaluating rules. The predicate sh:nodeShape has a broader term of RDF, indicating its function in defining constraints on RDF data. The body of the rule is a broader term for body, which specifies the conditions necessary for inference in knowledge graphs. Schema information, which defines the constraints and types of data, also has a broader term of information. The vector V^2(Pt) is classified under vectors, representing mathematical constructs in knowledge graph embeddings. Entity pairs, which refer to pairs of entities satisfying certain conditions, have a broader term of entity. Producers, responsible for overseeing music production, are categorized under entities as well. Entities that satisfy the first argument of the head also fall under the broader term entities, indicating their role in rule satisfaction. The rule itself is about the predicate of the head, which defines the relationship being inferred. The number of entities that can instantiate z0 to satisfy the head part has a broader term of entity, emphasizing its role in linking entities to predicates. The head of the rule is classified under head, representing the conclusion drawn from the body of the rule. Lastly, a set of pairs of entities (e, e1), ..., (e, eq) has a broader term of entity pairs, illustrating the relationships defined by predicates in the graph.",
    "In the realm of knowledge graphs, the concept of 'all variables of a rule' has a broader term known as 'rules', which are essential for defining constraints and relationships. The 'maximum length of rules' is categorized under 'Parameters', indicating the upper limit on the number of predicates in rule generation. Within these rules, 'the head' represents a crucial component that falls under the broader term 'concept'. Additionally, the variable 't' is a specific instance of 'a variable', which is fundamental in the representation of Inverse Open Path rules. Visual aids such as 'Fig. 2' are classified under 'figures', providing insights into the data discussed. The 'pattern of existential variables in the head and universal variables in the body' also belongs to the category of 'a variable', highlighting its significance in logical structures. Notably, 'the largest proportion of rules' is characterized by a 'cardinality of 1', indicating the least stringent validation requirements. The 'learning method' is specifically designed for 'dealing with uncertainty in the constraints and the learning process', showcasing its role in enhancing algorithmic efficiency. Furthermore, 'entities and predicates' encompass a broader category of 'entities', which includes 'millions of entities' and specific examples like 'Australia'. The term 'head' also refers to 'entities', emphasizing its role in logical constructs. The vector representation 'V^2(Pt) = [0 1 2]^T' is classified under 'vectors', illustrating the mathematical aspects of knowledge graphs. The 'sample' used in the learning process is fed to 'RESCAL', a model for embedding learning. During the 'sampling process', 'predicates less relevant to the target predicate' are pruned to streamline the data. The concept of 'subject and object bindings' is categorized under 'object', while 'x' is identified as an 'entity'. Additionally, 'facts' are a subset of 'information', providing the necessary data points within the graph. The target predicate 'Pt' also falls under 'entities', illustrating its relevance in the context. Lastly, 'shapes' can be utilized for 'data entry', facilitating the management of information within knowledge graphs.",
    "In the realm of knowledge graphs, 'manual mode' has a broader term known as 'method', which refers to a proposed approach for mining Inverse Open Path rules. The concept of 'length and cardinality' is encompassed by the broader term 'Cardinality', highlighting the quantitative aspects of data relationships. A 'small complete KG' is often compared with the 'ideal learner', serving as a benchmark for optimal performance in learning tasks. The 'first annotation value (0.13)' presents the 'SC of the tree', indicating the structural complexity of mined tree shapes. The entity 'y' is categorized under the broader term 'entities', while 'entity e_i' falls under 'variables', illustrating the hierarchical nature of these concepts. The term 'low quality' is a subset of 'quality', indicating rules that do not meet established thresholds. Similarly, 'ej' is a broader term for 'elements', and 'x' represents a broader category of 'entity variables'. The 'numerical confidence measure' is classified under 'measures', which are formal quality metrics. The entity 'e5' is also categorized under 'entities', while 'comparison purposes' is a broader term for 'evaluation', emphasizing the need for assessing different methods. The entity 'entity' satisfies 'the body of r', where 'Pt' leads to 'P1', establishing a relationship between predicates. The concept of 'entity-instantiation' is a broader term for 'entity', and 'entity pairs' are included under 'entities'. 'Functional Graph Dependency (FGD)' is a broader term for 'formalisms', which define constraints in knowledge graphs. The collection of 'entities E' is categorized under 'set', indicating a mathematical grouping. Furthermore, 'Standard confidence (SC)' is used to compare 'rule quality', while 'r' is defined by 'TreeSC(r)', which quantifies the reliability of tree structures derived from knowledge graphs.",
    "This close relationship has a broader term known as relationship, which encompasses various connections within knowledge graphs. The number of entities that can instantiate z0 to satisfy the head part is categorized under entities, highlighting the distinct items linked to specific predicates. Classes, which represent categories of entities, have a broader term of types. In the context of knowledge graphs, shapes generate dynamic data entry forms, providing a structured way to input data. The predicate livesIn(x, z) falls under the broader category of rules, which define relationships and constraints. Fast matrix and vector operations are a subset of matrix and vector operations, optimizing performance in mathematical computations. The body of a rule joins in with one shared variable, z0, facilitating the instantiation of rules. Embedding-based OP rule learning is a method that is part of the broader learning process, enhancing the extraction of patterns from knowledge graphs. The target predicate is a specific type of predicate, while the predicate of the head is a broader term for head. Pt, a target predicate, is classified under variables, which are placeholders in logical rules. The parameter Car=2 is a broader term for a variable, indicating a minimum cardinality constraint. Three different Car values 1, 2, and 3 represent distinct thresholds under the broader term value. Parameters, which define the maximum rule length, are categorized as concepts. Self-loop links are identified as convenient syntactic sugar, simplifying the representation of unary predicates. Section 5 of the paper discusses results and is a part of the broader section. Occupations and k-cliques are both classified under the concept category. The ratio 2/2 represents a broader term value, indicating equal cardinality in evaluating rules. Lastly, the body and head predicates are noted to be swapped, altering the logical relationships expressed in the rules.",
    "DBpedia 3.8 generates facts, which are essential pieces of information extracted from Wikipedia. The data-first approach has a broader term known as approach, emphasizing the importance of raw data in knowledge graph development. Within this context, entities (e, e') are recognized as a broader term for entity pairs, highlighting the relationships between different entities. The concept of cover, which is a measure in rule learning, also has broader terms such as rule learners and concept, indicating its relevance in various contexts. Furthermore, the bounded number of entities is a broader term for entities, focusing on a limited subset related to specific predicates. The body of r, which defines the conditions for rules, is a broader term for body, while e1 is categorized under a variable, showcasing its role in knowledge graph reasoning. An extensive representation of predicates and entities falls under the broader term representation, and the learnt embeddings are a broader term for embeddings, representing the vector forms of entities. Greater cardinalities refer to the broader term cardinality, indicating the constraints within relationships. The entity-instantiation concept is also a broader term for entities, emphasizing its application in knowledge graphs. DBpedia 3.8 specifically has the unary predicate 355, which is used for evaluating knowledge graph rule-learning methods. The object argument connects to the head, which is crucial in the evaluation of predicates. Additionally, e2 is a broader term for entity, while the pairs (e, e') satisfying the head are recognized as pairs, linking entities through specified paths. The variables x and z_i are broader terms for a variable, used to express constraints in knowledge graphs. The domain and range of predicates are broader terms for concept, establishing the types of entities involved in relationships. The count of non-zero elements in that vector is a broader term for vectors, which represent the mathematical relationships in the graph. Lastly, the subsequent values indicate branch cardinality, reflecting the number of connections from a specific node in tree structures derived from knowledge graphs.",
    "This manual mode enables the acquisition of facts about entities, allowing for a more comprehensive understanding of the knowledge graph. The learnt embeddings, which are essential for representing entities, have a broader term known as the embedding representation. Similarly, the HOLE algorithm is categorized under the broader term algorithm, highlighting its role in processing knowledge graphs. A common representation distinguishes between entities and predicates, facilitating the organization of data. In this context, an artist is recognized as a broader term under entities, while K represents a broader term for a set. The common underlying form is classified as a concept, and the count of entities is related to the broader term quantity. The rule in knowledge graph learning has a head that defines its structure, and the set of such entities is associated with a count of 2, indicating specific conditions met within the graph. Additionally, depth is a broader term for structural features, while body atom is a broader term for atoms, emphasizing their foundational role in rule structures. The body of a rule also falls under the broader term concept. The aggregation module is categorized under components, showcasing its function in the SHACLEARNER algorithm. The open path support metric, or OPsupp, is a broader term for a variable, which is crucial in evaluating relationships in the graph. The head predicate is a broader term for predicate, illustrating its significance in logical expressions. Certain properties in the embedding space are encompassed by the broader term embedding space, which aids in analyzing relationships. Greater cardinalities observe an expected decrease in the quality of rules, indicating stricter conditions for satisfaction. The fact Pk(ei, ej) is a broader term for facts, representing specific relationships within the graph, while each entity e_i is classified under the broader term entities, reinforcing the interconnectedness of these concepts.",
    "In the realm of knowledge graphs, 'new facts' encompasses a broader category known as 'facts', which represent specific pieces of information associated with entities. The predicates in these graphs, referred to as 'These predicates', are linked to 'their second argument', indicating the class or type they relate to. Additionally, the concept of 'two open variables' is a subset of 'a variable', highlighting the distinction between open and closed variables in path rules. The foundational principles of knowledge graphs are categorized under 'foundations', which in turn relate to the broader notion of 'concept'. The support measure 'suppr' also falls under the category of 'a variable'. Furthermore, 'information triggered by entities' is directly influenced by the 'entity', and it is classified under the broader term 'entity' as well. The 'development' of knowledge graphs is a process that enhances their structure and quality. The 'entity-instantiation of the related OP rule' is another instance of 'entity', while 'A formalisation of the approach' is a structured representation of a broader 'approach'. The 'scoring function of SHACLEARNER' is a specific type of 'scoring function' that evaluates learned rules. In terms of relationships, the closed path rule 'Pt(x, y)' is derived from the binary predicate 'P1(x, z1)'. The learning method 'SHACLEARNER' is associated with a specific 'runtime'. The dataset containing '11 million facts' is categorized under 'data'. Entities such as 'e2' and 'e7' are classified under 'entities' and 'entity', respectively. The 'satisfying entities e2 and e3' are quantified by a 'count', while 'Cardinality' is a broader term that encompasses 'measures'. Lastly, 'entity e' is defined by the predicate 'Pt(e', e)'.",
    "The predicate arguments have similar argument embeddings, which are crucial for establishing logical connections in knowledge graphs. In this context, the subject has a broader term known as entity, indicating its role as a representative variable within the rules. The next step in the evaluation process is categorized under the broader term step, while exploratory attempts fall under the umbrella of research, highlighting their initial nature in developing methods for knowledge graph analysis. Type-like unary predicates are a specific subset of predicates, emphasizing their relevance in defining categories within the graph. Additionally, quality decreases is a phenomenon that relates to the broader concept of quality, reflecting the diminishing effectiveness of learned rules. New predicates are intrinsically linked to related facts, as they are generated based on existing information in the graph. The learnt embeddings, which are derived from embedding learning, play a significant role in evaluating the quality of inferred rules. The entities involved in these processes can be represented by An entity e, showcasing their distinct roles. The complexity of the sampling algorithm is quantified as O(|K|), indicating the computational demands of the process. Furthermore, the number of entities that satisfy the head of the rule corresponds to the count of e', illustrating the relationships defined by the rules. Type or class declarations are essential for categorizing entities, while rule mining for KG completion is a broader research area aimed at enhancing knowledge graph information. An interactive interface facilitates user engagement, allowing a human user to create SHACL shapes based on the outputs from the graph structure learner. Lastly, the integer parameter of RESCAL, which determines the dimensionality of the vector space, is categorized under Parameters, emphasizing its significance in the learning process.",
    "In the realm of knowledge graphs, the concept of 'similarity' will hold for an 'entity-free rule', indicating a relationship between embeddings of predicate arguments. A 'tree' is a broader term that encompasses 'entities', illustrating hierarchical relationships among them. Similarly, the [i, j]-th element A(Pk)[i, j] has a broader term known as 'elements', which represent the relationships between entities. The integer 'n' also has a broader term, 'variables', which are placeholders in the rules. The 'entity-instantiation of the related OP rule' is another broader term for 'entities', emphasizing the connection between specific instances and the rules governing them. Furthermore, 'elements' can be categorized under 'components', highlighting their role in the structure of predicates. Information triggered by entities is also classified under 'entities', showcasing the data generated based on entity types. The phrase 'the count is 1' refers to a broader term 'count', which quantifies the number of distinct entities satisfying a rule. Additionally, 'variable unification' transforms an 'OP rule to a CP rule', indicating a logical operation that alters the structure of rules. The 'set of sampled entities for a target predicate' is another broader term for 'entities', used in learning shape patterns. The variable 'x' is classified under 'variables', while 'P1'' is a broader term for 'predicate', representing relationships in the graph. 'Trees' are a broader term for 'entity', emphasizing their foundational role in knowledge representation. The integer 'd' is categorized under 'Parameters', defining the dimensionality in embeddings. The matrix product A(P1)*A(P2) equals the specific adjacency matrix [[0,0,0],[0,2,1],[1,0,0]], illustrating the connections between entities. A 'tree' remains a 'valid tree', ensuring its structural integrity. The entity 'e7' is classified under 'entities', while 'easier interpretation' is a broader term for 'concept', enhancing the understanding of tree shapes. 'Contextual connections' exist between 'successive questions', aiding in cognitive load reduction during interactions. Lastly, 'standard confidence' is a broader term for 'rule learning experiments', quantifying the frequency of rule satisfaction.",
    "In the context of knowledge graphs, the predicate 'nativeLanguage(x, z3)' requires the existence of a language denoted by 'language(z3, z3)'. The term 'building block' is associated with the broader concept of 'concept', which also encompasses 'Definition 1'. Furthermore, the term 'subject' is a broader category that includes 'entities'. The concept of 'Cardinality' is related to the broader feature of 'feature'. Quality measures are used to indicate the generality of learned shapes, while rules are interpreted with universal quantification, highlighting their logical structure. The predicate 'Pn'' is a broader term under 'predicate', and the entity itself is a broader term that includes 'elements'. Generality is also a broader term under quality measures, emphasizing its significance in evaluating learned shapes. Pairs of entities satisfy the body of a rule, demonstrating the relationships defined within the graph. The notion of 'convenient syntactic sugar' falls under the broader category of 'concept', which is further linked to 'entities'. The 'number of missing rules' is a broader term that relates to the quantity of rules learned, while 'scant previous research' is categorized under 'research'. The open variable is a broader term that includes 'variables', and a variable can be classified as open. Additionally, 'computational performance' is a broader term that relates to the overall performance of systems handling knowledge graphs, while 'z_i' is a broader term under 'a variable'.",
    "In the realm of knowledge graphs, various concepts and structures are interconnected through broader terms. For instance, 'Cardinality' has a broader term known as 'annotation', while 'class assertions' relate to 'classes'. The 'common variable' is a subset of 'variables', and 'a simpler tree' falls under the category of 'trees'. Additionally, the 'sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' are encompassed by the broader term 'An entity e'. The knowledge graph 'K' is also classified under 'a variable'. Furthermore, 'shapes' are validated via 'human-expert evaluation', and the 'first annotation value (0.13)' is a specific instance of 'annotation value'. The term 'language' is a broader classification of 'entity', while 'one hundred facts' pertains to 'facts'. The performance measure 'TreeSC' is noted to drop below 'the defined threshold (TreeSCMIN)'. In terms of classification, 'a class' is a broader term for 'classes', and 'HOLE' represents a broader concept of 'the embedding representation'. New unary predicates and associated facts are referred to as 'our new ones', which also belong to the broader category of 'facts'. The entity 'e4' is classified under 'entities', and 'applications' are a broader term for 'use cases'. Moreover, 'trees' can be categorized as 'entities', and 'the whole path' is a broader term for 'concept'. The quality measure 'confidence' is a subset of 'quality', and the matrix 'A(Pt)' contains the pairs (e', e), indicating relationships between entities.",
    "The relationship between an OP rule and its converse IOP version has a broader term known as relationship, which refers to the connection between logical formulations and the characteristics of the embedding space. In this context, count 1, which signifies the number of distinct entities satisfying a specific condition, also has a broader term, count. The entity z0 can instantiate various entities, while the logical expression human(x, x) leads to another expression, human(z2, z2), indicating a self-referential relationship. Furthermore, the vector V^1(A(P1)*A(P2)*...*A(Pm)), representing counts of distinct entities, falls under the broader category of vectors. Types and Definition 2 are both broader terms under the concept classification. The body of the rule is defined as Pt, and head coverage is a broader term related to rule learning. The size of the sampled entities is expressed as size 2l|F||E|, which is a broader term for size. The entity e8 is categorized under the broader term entity, just as each entity e_i is represented as a vector. A 10 hour limit is set for the process of learning each target predicate, while our new ones, which refer to newly generated facts, also fall under the broader term new facts. An extensive representation of predicates and entities is classified as an entity, and e6 is similarly categorized. The shape of the data is expressed in ShEx, and the logical expression human(x, x) leads to the relationship father(x, z2). There remains an opportunity for improving tree shapes, which is linked to the concepts of simplicity and easier interpretation. Lastly, the set {e2, e3} is recognized as a broader term under entity.",
    "In the realm of knowledge graphs, the concept of 'language' is understood to have a broader term, which is 'entities'. The 'body of the rule' is found within the structure of a knowledge graph (KG), while 'each target predicate' is categorized under the broader term 'predicate'. Similarly, the predicate 'Pt(e', e)' is associated with the broader term 'facts', and 'sh:property' falls under the category of 'property'. The term 'the same variable in the rule' is a broader concept that encompasses 'a variable', just as 'z1' is also classified as a type of 'variable'. The characteristic of being 'sparse' is related to the broader term 'property', while 'type or class declaration' is linked to 'classes'. Furthermore, 'the specifications of two benchmarks' are encompassed within the broader category of 'benchmark'. The notion of 'unary facts' is a subset of 'information', and 'P'i' is classified under 'predicate'. The vector representation 'vector E_i' is a broader term for 'vectors', and the algorithm 'HOLE' is a part of the broader field of 'embedding learning'. The '28 unary predicates' are also categorized under 'predicate'. The matrix 'A(Pk)' is defined as a matrix of binary values, while 'e8' is another entity that falls under the broader term 'entities'. The 'common representation' is a broader concept that relates to 'concept', and 'types or classes' are modeled using 'unary predicates'. Lastly, 'the two type-like predicates from DBpedia 3.8' utilize 'unary predicates which have at least one hundred facts'.",
    "In the context of knowledge graphs, the original predicates and facts in the KG encompass a broader term known as predicates, which are fundamental components expressing relationships between entities. Facts themselves are linked to a broader term called links, representing specific pieces of information associated with entities. The concept of satisfaction is also significant, as it relates to broader concepts within the graph. An extensive representation of predicates and entities is crucial for understanding the various entities involved, including specific instances like e6, Canberra, and Trump, all of which fall under the broader category of entities. Additionally, the set E = {e1, e2, e3} illustrates a collection of entities that can be evaluated under certain conditions. Cardinality expressions play a vital role in defining constraints, particularly in relation to min cardinality. The process of transforming KGs with type predicates for experiments is essential for generating new unary facts, which enhance the existing facts in the graph. Occupations are categorized as entities, further enriching the graph's structure. Moreover, the logical expression citizenOf(x, z1) requires the condition defined by country(z1, z1) to be satisfied. The completion strategy employed in this context is a depth-first approach, facilitating the exploration of relationships within the graph. Variables such as ej, body_r, and the three versions of r are integral to the logical constructs that govern the relationships and rules within the knowledge graph, including OP rules that imply the existence of facts based on defined predicates.",
    "In the context of knowledge graphs, the entity e2 has a broader term known as a variable, which serves as a symbolic representation in predicate logic. Additionally, a sequence of predicates is categorized under the broader term syntax, indicating its role in structuring logical expressions. The count of distinct entities is defined as 1, highlighting a specific numerical tally within the graph. Furthermore, the concept of a song falls under the broader category of entities, while depth is associated with quality measures, emphasizing its significance in evaluating the structure of the graph. The cardinality constraint Car=1 is classified as an entity, and the count of distinct e's is recognized as a type of count. A formalisation of the approach is given shape quality measures, which are essential for assessing the effectiveness of derived shapes. One specific unary predicate is a broader term for predicate, illustrating its foundational role in logic. The term sh:property is linked to RDF, indicating its function in defining constraints on data. The RESCAL model can provide and does provide an extensive representation of predicates and entities, facilitating the learning of relationships within the graph. The count is equivalent to count 2, indicating that two distinct entities meet the specified criteria. The head of the rule is a broader term for head, which is crucial in expressing relationships in logical rules. Pairwise multiplication is performed on those vectors derived from the graph's adjacency matrices. The embedding learner, represented by RESCAL, is categorized under embedding space, which is a mathematical construct for analyzing relationships. The knowledge graph K is represented by square n x n adjacency matrices, illustrating the connections between entities. Lastly, interestingness is a broader term for concept, reflecting its role in the validation process of candidate shapes, while the entities e1, e2, and e3 are collectively recognized as entities within the graph.",
    "In the context of knowledge graphs, the 'head of r' has a broader term known as 'head', which is a fundamental component of logical rules. Similarly, the 'object entity' is encompassed by the broader category of 'entities'. The term 'related work' is a subset of 'work', indicating its relevance to specific research efforts. Within the framework of Description Logic, 'classes' are categorized under the broader concept of 'concept', which also includes 'head'. Furthermore, a 'sample of data' is a specific instance of 'data', highlighting its role in analysis. The predicate 'Pt' denotes the 'head of r', establishing a direct relationship. Notably, 'entity x' satisfies the relationship defined by 'father(x, z2)', illustrating a familial connection. The term 'occupations' falls under the broader category of 'entities', categorizing individuals by their job roles. The concept of '100% SC and HC' is a specific instance of 'confidence', indicating perfect reliability in rule application. 'Standard confidence (SC)' is also categorized under 'entities', reflecting its statistical significance. 'Shape predicates' are a subset of 'attributes', defining constraints within the graph. Logical formalisms are grounded in 'well-defined semantics', ensuring clarity in interpretation. The 'satisfying entities e2 and e3' are broader instances of 'entity', fulfilling specific rule conditions. A 'sequence of predicates' is a more specific form of 'predicate', essential for defining relationships. The intermediary 'entities e1, ..., e(n-1)' are also classified under 'entity', connecting various elements in the graph. The 'common representation' serves as a broader model for 'representation', aiding in the structured learning of shapes. Lastly, 'the atomic body' is categorized under 'concept', while 'The second rule' is a specific instance of 'rules', outlining constraints in knowledge graph validation.",
    "In the context of knowledge graphs, an entity can occur as both the subject and the object of a predicate P_k, illustrating its dual role in relationships. The elements with a value greater than or equal to Car are obtained from the matrix product A(P1)*A(P2)*...*A(Pm), which combines multiple predicates to identify significant entities. Furthermore, the logical expression human(x, x) leads to another expression language(z3, z3), indicating a relationship between a human entity and a language. The 39-branched tree presents the Shape Constraint (SC) of the tree, providing insights into its structure. Additionally, pairs of entities have a broader term known as a set, which encompasses the ordered sets linked by specific paths. Procedural methods in this context are noted to be without logical foundations, highlighting a gap in their theoretical underpinnings. The maximum rule length parameter, denoted as l, has a broader term of a variable, while the number of entities that join the head of the rule to its body is related to the broader concept of count. The cardinality constraint Car=1 is associated with entities, emphasizing the necessity for at least one entity to satisfy a specific rule. In the realm of open path rules, the variables y and x also have a broader term of a variable. Head coverage, quantified as HC(r), measures the effectiveness of rules in inferring facts. The total number of binary predicates, represented by 37, is a broader term for quantity, reflecting the richness of the knowledge graph. The count of distinct entities is equivalent to the count of non-zero elements in a vector derived from matrix computations. The subject of a rule has a broader term of a variable, while an instance of the rule head relates to the broader concept of head. Logical formalisms are essential as they derive shapes that can be trivially expressed in a fragment of SHACL, which in turn are derived from these logical formalisms. Lastly, heuristic pruning does not uniformly increase in effectiveness with rule quality, indicating a complex relationship between optimization techniques and the quality of learned rules.",
    "In the realm of knowledge graphs, facts have a broader term known as the RDF graph, which serves as a foundational structure for representing information. Links, which are essential components of these graphs, can be categorized into self-loop links and the label of a link in the graph, both of which also fall under the broader term of link. Entities that satisfy the second argument of the body are encompassed within the broader category of entities. Furthermore, an entity is integral to the set of facts, denoted as F, that populate the graph. A pair of entities (e, e') satisfies the head of r, and conversely, the head of r satisfies this pair, illustrating a reciprocal relationship. The set of sampled entities for a target predicate is expected to be of size 2l|F||E|, indicating a relationship between the number of facts and entities involved. This work, which is a subset of research, contributes to the understanding of how the body of the shape is instantiated to predict an instance of the head. The common representation framework necessitates this work to effectively categorize entities and predicates. Additionally, the head is a broader term that includes components, while the entities e1, e2, and e3 are classified under the broader term of entities. Class assertions, which indicate the type of an entity, also have a broader term known as concept. The same entities can be identified as instances of An entity e, further emphasizing their interconnectedness. Facts satisfying the head of the rule are a subset of the broader category of facts. Standard confidence is quantified as SC(r), providing a statistical measure of rule validity. The entity set Esample is defined as the union of multiple sets, illustrating the collective nature of sampled entities. The whole path in a knowledge graph forms a composite predicate, representing a series of relationships. Lastly, a low threshold is considered a safe choice during the time of learning, allowing for the inclusion of rules that can be refined later.",
    "In the realm of knowledge graphs, Poker has a broader term known as benchmark, which serves as a reference point for evaluation. An example of a shape from Wikidata illustrates the concept presented in Fig. 2, showcasing how shapes can define relationships within the graph. Convenient syntactic sugar simplifies the representation of data by keeping the presentation in the triple format intact. The entity e_i, which is embedded into a vector representation, has a broader term called representation, highlighting its role in knowledge graph modeling. Cardinality, a concept that denotes the number of elements in a set, has a broader term of rule quality, which encompasses measures like standard confidence and head coverage. The predicate Pt'(x, z0) also has a broader term, indicating its foundational role in the structure of predicates. Additionally, the capability to support new data entry is encompassed within the broader term of data entry, facilitating the input of new information into knowledge graphs. Subject and object argument embeddings, which represent entities in relation to predicates, fall under the broader category of embedding-based methods. Satisfying entities e2 and e3, as well as entities e1, ..., e(n-1), are both categorized under the broader term entities, emphasizing their interconnectedness. The Car entity is associated with three different Car values 1, 2, and 3, which in turn has a broader term of Car. Many facts, which represent numerous instances within a knowledge graph, are categorized under the broader term facts. Furthermore, a relationship exists between certain properties in the embedding space, illustrating the connections that can be drawn in knowledge graph analysis. The target predicates, which are crucial for learning IOP rules, have a broader term of predicate, while a randomly selected set of 50 target predicates also falls under this category. The distance l, which defines the maximum number of steps in a path, is categorized under the broader term Parameters. Candidate rules, which are potential IOP rules derived from embeddings, are classified under logical statements, indicating their role in formalizing knowledge. Lastly, associated facts, which provide additional context to entities, are also categorized under the broader term facts, while standard confidence serves as a measure within the broader domain of rule learning.",
    "The concept of similar argument embeddings is a specific instance of the broader embedding-based method, which utilizes vector representations for various computational tasks. In the realm of knowledge graphs, a paper may investigate the application of SHACL shapes, which are essential for validating RDF data structures. However, the process of learning partially instantiated shapes can lead to an explosion in the space of possible shapes, complicating the learning process. Close neighbours in this context are a broader term for the concept, indicating their interconnectedness within the graph. The adjacency matrices, represented as A(P1), serve as a broader term for the structural features of the relationships between entities. Furthermore, embeddings, which are mathematical representations, encompass vectors that capture semantic relationships. Tree shapes play a crucial role in assisting human experts by providing structured patterns derived from the graph. Additionally, entity e is a broader term for the general concept of an entity, while entities themselves represent the individual items within the graph. The head_r(e, e') notation signifies a predicate that connects pairs of entities, and plain predicates are treated as indistinguishable entities within the framework. Structural features, which include properties of shapes, are essential for understanding the graph's structure. Heuristic mechanisms are broader terms for algorithms that enhance the efficiency of learning processes. The relationship between an OP rule and its converse IOP version is illustrated in examples, showcasing their mutual support. The count of e' refers to the broader category of entities, while dealing with uncertainty in the constraints and the learning process is a significant aspect of the overall learning process. Lastly, e' is a broader term for elements that represent object entities, and a set of pairs of entities (e, e1), ..., (e, eq) falls under the broader category of entities. The matrix A(Pt) contains pairs (e', e), which are crucial for evaluating relationships in the knowledge graph, while the term |{ (e, e') : body_r(e, e') }| quantifies the support of closed path rules, ultimately relating back to the broader concept of count.",
    "Rule learning is a data mining approach that has a broader term known as algorithm. Within this context, head coverage is calculated using the target predicate Pt, which plays a crucial role in evaluating the effectiveness of rules. The entity e3, which has a broader term of entity, is involved in this process. Standard confidence (SC) describes the rule, providing a statistical measure of its reliability. A knowledge graph (A KG) is classified as a schema-free database, allowing for flexible data management. Additionally, relation P0 has a broader term of concept, while object argument is encompassed within the broader term Parameters. The predicates in this framework are categorized as types or classes, and distinct e's are also recognized as entities. The entity E has a broader term of subject, and entity x satisfies the condition of being classified as human(x). The GreedySearch algorithm is a broader term for the process of optimizing choices in this context. Furthermore, shape quality measures fall under the broader category of quality measures, and E(k-1) is recognized as a set of entities related to previous iterations. Opera singers are classified as entities within this knowledge framework. In terms of variable classification, a variable is defined as closed, and pairs of entities (e, e') satisfy the conditions of body_r. Lastly, links between the variables and z0 are both broader terms for a variable, indicating their role in the structure of knowledge graphs.",
    "In the context of knowledge graphs, various entities and concepts are interconnected through broader terms. For instance, P1_k has a broader term known as representation, while the term object is encompassed by the broader category of variables. Similarly, the predicate P0 is classified under a variable, and entity x is a specific instance that falls under the broader category of entities. Predicate arguments are also categorized under the broader term argument, and performance evaluation is linked to the broader concept of performance. The evaluation method Ev is a broader term for the entity it represents. Additionally, the next question is aligned with the path in the querying process. Rule learners exhibit sensitivity to the maximum length of rules, which influences their performance. Definition 6 is a broader term for the concept it defines, while sh:minCount is categorized under the broader property. Directly related entities and entity instances are both classified under the broader term entities. The structural feature width is a broader term for the characteristics of shapes in knowledge graphs. Target predicate instances in the KG are associated with the broader predicate category, and the entity is a broader term for the information it represents. Lastly, entity e is classified under entities, and the body of r is denoted by the condition body_r(e, e').",
    "Head coverage (HC) measures the explanatory power of the rule, which quantifies how well the body of a rule can infer facts that satisfy its head. Cover is related to inductive logic programming, a field focused on learning logical rules from examples. The vector V^2(Pt) is defined as itself, indicating a mathematical representation of entity counts in a knowledge graph. PathFinding has a broader term known as process, which encompasses the methods used to construct complex shapes from simpler structures. The 39-branched tree, a specific mined structure, falls under the broader category of trees. Contributors, who enhance knowledge graphs, are classified as entities. The entity E is defined as the set E = {e1, e2, e3}, representing a collection of entities within the graph. The variable z2 is a broader term for a variable, while lower quality rules pertain to the broader concept of quality in rule learning. The complexity of the sampling algorithm is a subset of algorithms used in knowledge graph analysis. The logical expression human(x, x) leads to the relationship country(z1, z1), illustrating connections in knowledge graphs. This section of the document is part of a broader section discussing knowledge graph rule learning. The entity e3 is categorized under entities, and ongoing data entry is a broader term for data entry processes. A musical artist is also classified as an entity. Scoring functions are utilized for evaluating pairs of entities, and the relationship between pairs of entities is checked using scoring functions. The vector V^2(Pt) equals V^2(Pt) = [0 1 2]^T, representing distinct entity counts. The property of a tree structure has a broader term known as property, while distinct e's refer to unique entities within the knowledge graph.",
    "The target predicate Pt has a broader term known as predicate, which encompasses various logical constructs. Within this framework, Ek is categorized under the broader term set, indicating its role in defining relationships among entities. Notably, only a very small proportion of entities associated with any predicate within distance l is classified under entities, highlighting the sparsity often found in knowledge graphs. The entity E, which represents objects in the graph, is also a broader term for elements, emphasizing its foundational role. Additionally, quantified uncertainty is recognized as a broader term for concept, reflecting its significance in assessing knowledge graph validity. A sequence of predicates is defined as terminating with an open variable, illustrating the structure of logical relationships. The number of entities is a broader term for entity, indicating the diversity of items represented in the graph. The set F, which contains facts, is another broader term for set, reinforcing the interconnectedness of these concepts. The evaluation method Ev is categorized under entities, while atoms serve as components within the broader context of knowledge graph rules. The term e1, ..., en is also a broader term for entities, representing the entirety of entities in the knowledge graph. Furthermore, sh:path is recognized as a broader term for predicate, facilitating navigation through RDF graphs. The differences between the formalisms exist within the broader category of formalisms, showcasing the variations in syntactic structures. Contributors, as a broader term for entities, play a crucial role in enhancing knowledge graphs. Learning paths are similarly classified under concept, guiding educational experiences. The head of r is another broader term for concept, representing the conclusions drawn from logical rules. Every path from the target predicate is classified under predicate, illustrating the connections within the graph. Lastly, Parameters is a broader term for a variable, defining the constraints within the learning process.",
    "In the realm of knowledge graphs, the term 'predicate' has a broader term known as 'data', which encompasses the information contained within these graphs. Section 4 of the paper presents an overview of 'related work', highlighting the contributions of previous research. The 'rules' within this context bind to 'object arguments', establishing relationships that define how entities interact. Furthermore, 'close neighbours' are recognized as having a broader term of 'neighbours', indicating their proximity within the graph structure. The concept of 'The number of entities that satisfy the body of the rule' is also categorized under the broader term 'concept', emphasizing its significance in understanding entity relationships. Additionally, 'closed intermediate variables' fall under the broader category of 'variables', which serve as placeholders in logical constructs. The 'Google Search' is a specific instance that has a broader term, 'Google Search engine', illustrating its function as a web-based search tool. The '74 target predicates' are classified under 'predicate', indicating their role in the evaluation of knowledge graph methodologies. The function 'Embeddings()' computes 'subject and object argument embeddings', which are essential for representing entities within the graph. The variable 'zn\u22121' is categorized under 'a variable', showcasing its role in path rules. The property 'non-increasing with length' is a broader term for 'property', reflecting its characteristics in rule evaluation. The entity 'e'' is associated with 'Parameters', which define the constraints of the rules. The term 'count' is also classified under 'concept', representing the numerical values associated with entities. The cardinality constraint 'Car=1' is a broader term for 'a variable', indicating the necessity of entity satisfaction in rules. The binary fact 'P(e, e)' is categorized under 'facts', representing self-referential relationships. The 'number of entities' is a broader term for 'entities', emphasizing the quantity of distinct items within the graph. The matrix 'A(Pt)' is recognized as a broader term for 'The adjacency matrices', which represent relationships between entities. The entity type 'a person' is classified under 'entity', indicating its attributes and characteristics. Similarly, 'entity e_i' is a broader term for 'entity', representing specific instances within the graph. Lastly, 'the quality of a tree' is categorized under 'quality measures', which assess the effectiveness of tree structures derived from knowledge graphs.",
    "In the context of knowledge graphs, 'r' has a broader term known as 'An entity e', which serves as a specific identifier for objects within the graph. Similarly, 'TreeSCMIN' is a threshold that falls under the broader category of 'Parameters', which define the maximum rule length in the learning process. The concept of 'entity variables' is encompassed by the broader term 'a variable', indicating their role as placeholders for entities in open path rules. Furthermore, 'The number of entities that satisfy the body of the rule' is a specific instance of the broader concept of 'count', which quantifies distinct entities meeting certain conditions. Additional head predicates are classified under the broader term 'predicate', while 'Tree: Treesupp, TreeSC' relates to the broader concept of 'concept', representing classes or types within the graph. The term 'a satisfying e' is associated with 'satisfaction', indicating the fulfillment of rule conditions. Additionally, 'facts related to them' are a subset of 'facts', which are essential data points in knowledge graphs. The notion of 'alternative formalisms' is a broader category that includes various structured frameworks known as 'formalisms'. The 'classes with few instances' refer to 'classes', highlighting categories with limited data entries. 'Related facts' contribute to the broader understanding of 'information' within the graph. The support measure 'suppr' is a specific instance of the broader term 'value', which quantifies the numerical aspects of rules. The 'last head predicate' is another example of a 'predicate', while 'facts about entities' fall under the broader category of 'entities'. The term 'distinct e's' represents unique entities, which can be grouped under the broader concept of 'set'. In the context of SHACL shape learning, the 'right-hand tree' binds to 'the object argument of the target predicate', establishing relationships within the graph. The entity 'e'' exists within the set 'E(k-1)', indicating its connection to previous iterations. Lastly, 'non-zero element' is a broader term for 'elements', which are crucial in various calculations, while 'entities and predicates' collectively refer to the fundamental components of the graph, all of which can be categorized under the term 'entity'. Notably, 'millions of entities' also fall under the broader classification of 'entity', emphasizing the vastness of knowledge graphs.",
    "In the context of knowledge graphs, the term 'head' has a broader term known as 'entity', which signifies its role in logical rules. The condition 'body_r' is denoted as 'body_r(e, e')', indicating the criteria that must be satisfied by pairs of entities. Additionally, 'Car=1' is a specific cardinality constraint that falls under the broader category of 'Cardinality', which itself is related to the concept of 'quantity'. The number of entities that join the head of the rule to its body is equivalent to 'the count of e'', highlighting the relationship between these counts. The predicate 'Pt' also belongs to the broader category of 'entity'. Furthermore, 'P(e)' is classified as a 'binary fact', representing a specific type of relationship in the graph. The defined threshold known as 'TreeSCMIN' is categorized under 'Parameters', while 'predicate P_k' is a broader term for 'a variable'. In the realm of technology, 'Google' encompasses the 'Google Search engine'. The record label 'y' is another instance of an 'entity'. The predicate 'P1'(z0, z1)' is a broader term for 'predicate', and 'the experiments' are classified under 'experiments'. The set 'Ei' is a broader term for 'set', as is 'set {A(Pk) | k in 1..m}'. Moreover, 'self-loop links' maintain 'the presentation in the triple format', which is crucial for representing knowledge graph data. The evolving nature of human knowledge is categorized under 'concept', while 'a person' is a broader term for 'entities'. Lastly, 'e9' is a specific instance of 'An entity e', and 'entity e_i' is also classified under 'entities'.",
    "In the context of knowledge graphs, various entities and their relationships can be described through a series of broader terms. For instance, 'e5' is categorized under the broader term 'entity', while 'frequent patterns' falls under 'concept'. The collection of binary adjacency matrices, represented as '{A(Pk) | k in 1..m}', is also classified as a 'set'. Additionally, 'representation' and 'the proportion of rule consequent instances' are both broader terms under 'concept'. The 'binary target predicate' is a specific type of 'predicate', and 'Ek' is a broader term for 'a variable'. The term 'branch' relates to 'components', and 'facts' are represented by the specific relationship 'fact P0(e1, e2)'. Furthermore, the 'subgraph of the input graph' is a subset of the broader 'graph', while 'head branches' also fall under 'components'. The entity 'E' is classified under 'Parameters', and 'feature' is a broader term for 'attributes'. The relationship 'fact P0(e1, e2)' is a specific instance of 'facts', and '37 binary predicates' is a broader term for 'predicate'. The count of non-zero elements in a vector is categorized under 'count', while 'r3' and 'P' are both broader terms for 'a variable'. 'Head coverage' is associated with 'rule learners', and the term '2 producers' is classified under 'quantity'.",
    "Section 4 has a broader term known as section, which organizes content into manageable segments. In the realm of knowledge graphs, P2(z, t) is a predicate that also has a broader term, predicate, which expresses relationships between entities. Similarly, the path of head predicates and specific predicate are both broader terms under the category of predicate. Tree shapes, which represent hierarchical relationships, are particularly useful for human interaction. The concept of a pair of entities is a broader term for An entity e, while head is a broader term for entities, indicating the relationships within the graph. Entities and predicates, which are fundamental components of knowledge graphs, also fall under the broader term of entities. Subsequent data cleaning is a process that has a broader term of data cleaning, aimed at improving data quality. The term millions of entities refers to a large number of entities that are part of the broader category of entities. The number of entities is quantified under the broader term quantity. Subject and object argument embeddings, which represent entities in a knowledge graph, are categorized under the broader term representation. The target predicate Pt exists in the context of entities. Additionally, type song is classified under types, while neighbours are a broader term for concept, indicating their relational nature. Its head refers to the broader term head, and one shared variable is a broader term for a variable, facilitating connections in logical expressions. The entity y, which represents a record label, is categorized under entities, and e5 is another entity that falls under the broader term entities.",
    "In the context of knowledge graphs, various entities and their relationships can be categorized under broader terms. For instance, 'entities satisfying the subject argument of the body predicate, Pt' is a broader term for 'An entity e', while 'related facts' encompasses 'facts'. Similarly, the 'embedding representation of the predicates' relates to 'predicate', and 'bounded number of entities' is a broader term for 'entity'. The term 'property' is associated with 'concept', and the entity 'E' contains the entities 'e1, e2, e3'. Furthermore, 'type information' has broader implications for both 'types' and 'information', while 'binary fact' is a subset of 'facts'. The notation 'Pt'' is also categorized under 'predicate'. Looking ahead, 'future work' is a broader term for 'research', and 'k-cliques' fall under 'formalisms'. The adjacency matrix 'A(P1)' is defined as being less than or equal to '[0 1 0; 1 0 1; 0 0 0]', which is also identified as 'A(P1)'. Additionally, 'entities forming the object argument of the last predicate, P2' and 'three entities (e3, e4, e5)' are both broader terms for 'An entity e'. The 'body of the rule' is categorized under 'rules', and 'confidence' is closely related to 'association rule mining'. Lastly, 'e3' is a broader term for 'a variable', while 'Horn' is associated with the concept of 'concept'.",
    "In the realm of knowledge graphs, 'confidence' has a broader term known as 'association rule mining', which is a technique used to uncover interesting relationships within large datasets. Additionally, 'e1', representing an entity in a knowledge graph, is categorized under the broader term 'An entity e'. The confidence of the third rule is notably lower than that of the second rule, indicating a difference in reliability. Furthermore, 'e'', which refers to an object entity, falls under the broader category of 'entities'. The variable 'z0' is also classified as an identifier for an object. Quality measures play a crucial role as they indicate the level of confidence in the shapes derived from knowledge graphs. The components of these shapes are encompassed under the broader term 'components', while 'confidence' itself is a broader term for 'quality measures'. The predicate 'P1' is categorized as a variable, and 'width', another quality measure, also falls under this category. In terms of benchmarks, they have added unary predicates that possess at least one hundred facts, enhancing the reliability of the data. Standard confidence (SC) is a broader term for the concept of measuring rule validity. The set of such entities is classified under the broader term 'set', while 'confidence' is also related to the broader concept. The vector V^2(Pt) indicates the entities that satisfy the second argument of the body of a rule. Other predicates related to the target are classified under the broader term 'predicate', and each entity e_i is recognized as a broader term for 'entity'. The predicate P'n_1 is also categorized under 'predicate', while facts about entities are classified under the broader term 'facts'. Lastly, a bounded number of entities is recognized as a broader term for 'entities', emphasizing the structured nature of knowledge graphs.",
    "The RESCAL model is a specific instance of an embedding-based method, which is a broader category of computational techniques that utilize vector representations for learning tasks. Within this framework, subject and object argument embeddings are derived from the embedding, which serves as a mathematical representation of entities and predicates in a knowledge graph. The logical expression human(x, x) leads to the relationship citizenOf(x, z1), indicating a connection between the concepts of being human and citizenship. Furthermore, plausibility is a measure that falls under the broader concept category, while the cardinality constraint Car=2 and the set of entities Ei are both classified as variables. Each entity e_i is embedded into a corresponding vector E_i, capturing its semantic properties. The confidence of the second rule is a specific instance of the broader concept of confidence, which reflects the reliability of learned shapes. Additionally, the maximum number of predicates of the rules and the number of target predicates are both categorized under predicates, highlighting their role in defining relationships in knowledge graphs. The product obtained from summing the matrix product A(P1)*A(P2)*...*A(Pm) results in the vector V^1(A(P1)*A(P2)*...*A(Pm)), which identifies distinct entities satisfying a specific rule. In this context, an entity is defined such that it relates to the predicate Pt(e', e), and it is also associated with any predicate, indicating a sparse relationship within the graph. Yago, a large-scale knowledge graph, serves as a benchmark in this domain. The variable x is another instance that fits within the broader category of variables, while length, which refers to the number of predicates in a rule, is classified under attributes. Lastly, One work represents a research effort that utilizes ontology constraint patterns to generate SHACL shapes.",
    "In the context of knowledge graphs, the entity e' has a broader term known as variables, which are essential placeholders in closed path rules. The number of missing rules tends to increase as the quality decreases, indicating a relationship between the effectiveness of learned rules and the quantity of undiscovered rules. Additionally, similar argument embeddings, which are representations of predicate arguments sharing the same variable, fall under the broader category of embedding. The predicate P2_t is classified as a broader term under predicates, just like the body target predicate and the specific body target predicate, Pt. Furthermore, the set of all predicates, denoted as P, is also a broader term under the concept of a set. The adjacency matrix A(P1) serves as a representation of the relationships between entities, while the number of entities is a broader term encompassing all entities within the graph. Embedding learning, a process that transforms data into vector representations, is another broader term that relates to the construction of complex shapes from simpler structures. Each entity e_i is categorized under entities, and the variable y is classified as a broader term under a variable. A set of pairs of entities, such as (e, e1), satisfies the head of a closed path rule r, which itself is a broader term under predicates. Missing facts, which refer to unrecorded information, are categorized under facts. Lastly, each row of the product of adjacency matrices is summed to obtain the vector V^1(A(P1)*A(P2)*...*A(Pm)), representing the count of distinct entities satisfying a specific path.",
    "In the context of knowledge graphs, the entity 'E' has a broader term known as 'entities', which encompasses various individual items or nodes. Within this framework, 'entities E' is a broader term for 'An entity e', highlighting the relationship between specific identifiers and the larger collection of entities. The process of 'human validation' is a broader term under 'evaluation', emphasizing the importance of human assessment in confirming data accuracy. Similarly, 'heuristic pruning' falls under the broader category of 'process', indicating its role in optimizing search efficiency. The term 'embedding' is a broader representation of 'representation', showcasing how entities and predicates are mathematically modeled. Furthermore, 'the set of sampled entities for a target predicate' is a broader term for 'entity', illustrating its significance in knowledge graph sampling. The 'head of the rule' is categorized under 'head', which defines the logical structure of rules in knowledge graphs. Additionally, 'the learnt embeddings' are a broader term for 'embedding space', reflecting the dimensional representation of entities. The concept of 'concept' is also a broader term for 'entity', reinforcing the classification of entities within the graph. Performance evaluation is another broader term under 'evaluation', indicating systematic assessment processes. The composite predicate 'P*(x, t)' is a broader term for 'predicate', representing logical relationships. 'TreeSCnew' is a broader term for 'confidence', indicating the reliability of learned shapes. The RESCAL model embeds 'each entity e_i', transforming them into vector representations. The dataset of 'five hundred poker hands' generates 'facts related to them', contributing to the knowledge graph's completeness. Moreover, 'entities that satisfy the first argument of the head' is a broader term for 'An entity e', linking specific entities to logical rules. 'Embeddings' serve as a broader term for 'embedding-based method', showcasing their utility in learning tasks. The size of 'the set of sampled entities for a target predicate' is defined as '2l|F||E|', representing the worst-case scenario in sampling. The 'non-zero elements of V^2(Pt)' indicate 'entities that satisfy the second argument of the body', linking them to specific logical conditions. 'Treesupp' is quantified by 'the head of r', which predicts instances of target predicates. Lastly, 'unary predicates' consider 'unary predicates which have at least one hundred facts', ensuring meaningful analysis in knowledge graph processing.",
    "In the context of knowledge graphs, the term |{ (e, e') : body_r(e, e') }| has a broader term known as 'set', which refers to a mathematical collection of entities. The number of entities that satisfy the body of the rule is equivalent to the count of e', indicating the distinct entities that fulfill specific conditions. Additionally, entity e_i is categorized under a broader term, 'a variable', while the entity E is classified as part of 'variables'. A tree structure is also recognized as a broader term for 'entities', illustrating hierarchical relationships. The discipline of Computing is encompassed within the broader concept of 'concept'. The IOP rule Pt(x, y) -> P1(y, z) ^ P2(z, t) is categorized under the broader term 'predicate'. The entity e4 is classified as an 'entity', and the matrix A(Pt) is represented by the adjacency matrix [0 1 0; 1 0 1; 0 0 0]. Furthermore, elements with a value >= Car indicate a satisfying e, while the set contains the entity e2. The greedy search algorithm aggregates the subject argument, and the set of sampled entities for a target predicate falls under the broader category of 'entities'. The entity x is a specific instance of 'An entity e', and the count of e' is a broader term for 'count'. Standard confidence (SC) provides standardised measures for evaluating rules, while entity x satisfies the predicates citizenOf(x, z1) and nativeLanguage(x, z3). The learning method is specifically designed for schema-free knowledge bases, and the cardinality of 1 is a broader term for Cardinality.",
    "Standard confidence has a broader term known as rule learners, which are algorithms that identify patterns in data. In the context of knowledge graphs, entities (e, e') satisfy the body of r, indicating a relationship between pairs of entities. The concept encompasses a broader term, entities, which refers to individual items within the graph. A binary target predicate serves in a straight form, allowing for structured relationships to be established. Treesupp, a metric quantifying entity pairs, also has a broader term of concept. All binary predicates of YAGO2s utilize binary predicates to connect entities. The confidence of the third rule is a specific measure that falls under the broader term of confidence, reflecting the reliability of rules. The general form of a tree is another concept that represents structured relationships. Entity pairs have a broader term, An entity e, which signifies specific identifiers in the graph. Similarity, indicating comparable embeddings, is also categorized under concept. The relationship between the logical statement of the rule and certain properties in the embedding space is a broader relationship that connects logical formulations with embedding characteristics. Representation formalism, which refers to methodologies for data representation, is a broader term for formalisms. Pt, a target predicate, has a broader term of a variable, representing symbolic entities. A(P1), representing binary relationships, is categorized under adjacency matrix. Rule learners, as a broader term, fall under the category of algorithms. The heuristic rule learning module, which enhances rule learning efficiency, is a broader term for components involved in the process. The number of entities that can instantiate z0 to satisfy the head part also falls under An entity e. The 39-branched tree, mined from DBpedia 3.8, illustrates complex relationships, while entities satisfying the subject argument of the body predicate, Pt, are categorized under predicate. Finally, the sequence of predicates P1 ^ P2 ^ ... ^ Pn is another representation of predicate relationships.",
    "Formalisms share a key feature in their syntax, which is essential for expressing shape constraints in knowledge graphs. In this context, the entity e4 has a broader term, encompassing all entities. Future work is also related to the broader term of work, indicating ongoing research efforts. The process of unifying some variables is crucial as it pertains to the broader category of variables, which are integral to the structure of knowledge graphs. Furthermore, the entities (e, e') satisfy the head of r, while the predicate Pt relates to the object entity e'. The set of entities is defined as {e2}, which satisfies specific conditions. Standard confidence (SC) is a statistical measure that falls under the broader term of confidence, reflecting the reliability of derived shapes. Embedding learning, which is a technique for transforming data, is categorized under the broader embedding-based method. Additionally, the condition Further (e, e') satisfies the head of r, reinforcing the relationships defined in the graph. A sequence of predicates is connected by closed intermediate variables, which play a role in the logical structure of the graph. The entities forming the object argument of the last predicate, P2, belong to the broader category of predicates. The process of unifying some variables occurs in predicates that appear in multiple branches, indicating potential simplifications. An example of a shape from Wikidata serves as a specific instance within the broader category of examples. Pruning a tree is a process aimed at simplifying the representation of knowledge graphs. Learnt embeddings, which capture semantic relationships, are also classified under embedding-based methods. The matrix A(Pt) serves as a representation of the predicate Pt, indicating relationships between entities. Entity-instantiation refers to the realization of An entity e within closed path rules. Neighbours, which are closely associated entities, fall under the broader term of objects. Lastly, the set of sampled entities for a target predicate is categorized under the broader term of set.",
    "The two type-like predicates from DBpedia 3.8 has a broader term, which is DBpedia 3.8. In the realm of evaluation, experimental evaluation is recognized as having a broader term of evaluation itself. Additionally, the depth-first manner is categorized under the broader approach. Standard confidence is calculated using body_r, while predicate P_k is embedded to matrix P_k. The reassuring property of the SHACLEARNER algorithm is classified under the broader term property. Furthermore, an instance of the head has a broader term known as head. The matrix A(Pt) has a specific element A(Pt)[1, 3] that indicates a relationship between entities. Experiments are also classified under the broader term evaluation. The plausibility of the fact is associated with the broader concept. The predicate Pn'(z(n-1), y) is categorized under the broader term predicate. The atomic body instantiates and predicts an instance of the head, demonstrating its foundational role in knowledge graphs. Data cleaning is recognized as a broader process. In terms of entity attributes, a person needs to have a name. The entity e2 is a broader term for An entity e, while the object entity is a broader term for entity. The embedding-based method falls under the broader learning method. Lastly, P't(x, z0) is classified under the broader term predicate, and the annotation value is recognized as a broader term for value.",
    "In the realm of knowledge graphs, various entities and concepts are interconnected through specific relationships. For instance, 'Standard confidence (SC)' has a broader term of 'entity', indicating its foundational role in statistical measures. Similarly, 'n', which represents the number of predicates in an inverse open path rule, is categorized under the broader term 'a variable'. The 'binary target predicate' is essential as it serves in its reverse form, showcasing the dual nature of predicates in knowledge representation. Furthermore, 'subject entity' is a more specific term under the broader category of 'entities', emphasizing its role as an identifier within the graph. The 'formalism of constraints' is another critical concept, which falls under the broader term 'formalisms', highlighting its theoretical framework. The performance of the SHACLEARNER (-S+H) is evaluated as an algorithm, while the process of learning each target predicate is part of the broader learning process. Additionally, 'Description Logic ontologies' are encompassed within the broader category of 'ontologies', representing structured knowledge. The predicate 'P'1^q(z0, z1^q)' and unary predicates with at least one hundred facts are both classified under the broader term 'predicate'. The adjacency matrix 'A(Pt)' serves as a broader representation of relationships, while the 'entity-instantiation of the related OP rule' refers to specific instances of entities. Entities that satisfy the second argument of the body also fall under the broader term 'entity', and information triggered by entities is linked to 'An entity e'. The explanatory power of the rule is categorized under the concept, while 'Car' is associated with the broader term 'annotation'. Lastly, 'P'1' and 'e7' are both broader terms under the predicate and 'An entity e', respectively, while 'open variable' is classified under 'a variable'.",
    "In the context of knowledge graphs, the updated confidence score, TreeSCnew, is guaranteed to be greater than or equal to the original confidence score, TreeSCorig. The semantics of the SHACL language encompasses a broader term known as semantics, which refers to the study of meaning. Similarly, the object entity is a broader term for entities, which represent individual items within the graph. Subject and object argument embeddings fall under the broader category of embeddings, which are mathematical representations capturing semantic relationships. The common variable is a specific type of variable, while the object argument of the target predicate is a broader term for arguments that define relationships in the graph. The subject is a broader term for an entity e, which identifies specific objects. Standard confidence (SC) also relates to entities, indicating its broader application. Unary predicates that have at least one hundred facts are considered in relation to classes with few instances, highlighting their significance in knowledge graph analysis. Rules, which are formal constructs, are classified under logical statements, indicating their foundational role in knowledge representation. Similar argument embeddings are another form of embeddings, emphasizing their importance in capturing relationships. The target predicate and predicates like P3 and P1(y, z) are all broader terms for the concept of predicates in knowledge graphs. Quality, which measures the validity of data, is a broader term for attributes that define properties within the graph. The body of r, which denotes relationships, is a broader term for the body of rules. An entity serves as a broader term for objects, while Ev(), a function in Algorithm 1, is categorized under algorithms. Finally, embeddings are obtained from the RESCAL model, which is used for learning representations in relational data.",
    "In the realm of knowledge graphs, various entities and their relationships are defined through a series of broader terms and classifications. For instance, 'similar argument embeddings' is categorized under 'the embedding representation', which captures the essence of how predicates relate to one another. Similarly, the 'unary predicate human' falls under the broader category of 'predicate', indicating its role in logical expressions. The concept of 'entities that satisfy the second argument of the body' is encompassed within the broader term 'entities', highlighting the distinct items that fulfill specific logical conditions. Furthermore, 'P't^q(z(q-1)^q, y^q)' is also classified as a type of 'predicate', illustrating its function in connecting entities within the graph. The RESCAL model, known for its tensor factorization capabilities, is categorized under 'embedding', emphasizing its role in learning representations of relational data. Additionally, 'matrix-computation' is associated with 'quality measures', which are essential for assessing the effectiveness of learned shapes. The hierarchical structure of 'trees' is recognized as a broader term for 'An entity e', showcasing the relationships among entities. Other classifications include 'Car values 1, 2, and 3' under 'value', and the concept of 'all variables of a rule' being defined as 'closed', indicating the completeness of logical expressions. The 'rule learning experiments' are part of the broader category of 'experiments', while the 'percentage difference in the number of rules found' is a specific instance of 'percentage difference'. In terms of relationships, 'e'' satisfies the 'head of r', linking entities through defined predicates. The 'sampling algorithm' is noted to be of complexity 'O(|K|)', reflecting its computational efficiency. Moreover, 'a set of pairs of entities (e, e1), ..., (e, eq)' and 'the count of e'' are both classified under 'entity', emphasizing their role in representing relationships. 'Embeddings' are recognized as a broader term for 'representation', while 'well-defined semantics' is categorized under 'semantics', ensuring clarity in logical interpretations. Lastly, 'branch cardinality' is a specific instance of 'Cardinality', and 'learning algorithm' is a broader term for 'algorithm', highlighting the systematic procedures used in data analysis.",
    "The search space has a broader term known as concept, which encompasses various mathematical and computational ideas. Within this framework, GreedySearch is categorized under the broader term algorithm, representing a systematic approach to problem-solving. Similarly, the embedding representation is a specific type of representation that captures relationships in knowledge graphs. In the context of music, a song (x) must have at least one producer, establishing a necessary relationship. The post-processing step is a more specific phase within the broader category of steps involved in data processing. The count of e' is determined by the matrix A(Pt), which plays a crucial role in understanding entity relationships. Additionally, the subsequent values are categorized under the broader term value, indicating their significance in data analysis. Cardinality, which refers to the number of elements in a set, is a quality measure that also falls under the broader concept category. The logical expression human(x, x) leads to the predicate nativeLanguage(x, z3), illustrating a relationship between entities. Subject and object argument embeddings are part of the broader field of embedding learning, which focuses on vector representations of entities. The denominator of IOPSC(r) is a specific instance of a denominator, serving as a normalization factor in rule evaluation. TreeSCorig, representing the original confidence score of a tree structure, is a type of confidence measure. These predicates, which model type-like relationships, are classified under the broader term predicate. An entity, which can be a song, is a specific instance within the broader category of entities. Language, as a specific entity type, is associated with the broader term An entity e. The target predicate is a specific instance of predicate logic, which governs the relationships within knowledge graphs. Lastly, entity x is a specific instance that also falls under the broader category of entity. Data type validation is a process that ensures data integrity, categorized under the broader term process.",
    "In the realm of knowledge graphs, various entities and their relationships are defined through a series of broader terms. For instance, the term 'object' has a broader term known as 'entities', which encompasses various individual items within the graph. Similarly, 'intermediate variables' fall under the broader category of 'variables', while 'subject and object argument embeddings' are classified as 'learnt embeddings'. The concept of 'directly related entities' is also a subset of 'entity', just as 'entity instances' are categorized under 'entity'. Furthermore, 'PathFinding' is a specific type of 'algorithm', and 'all binary predicates of YAGO2s' are included within the broader term 'predicate'. The predicate 'P'2_2(z1, z2)' also belongs to this category. In the context of types, 'computer scientists' are classified as a type of 'entities'. The '39-branched tree' indicates the 'branch cardinality', which reflects the number of connections in a tree structure. Additionally, 'sh:nodeShape' is another predicate that falls under the broader term 'predicate'. Other entities such as 'a set of pairs of entities (e, e1), ..., (e, eq)' and 'the count of e'' are also classified as 'entities'. The concept of 'similar argument embeddings' is part of 'embedding learning', while 'scalability' is recognized as a broader 'concept'. New predicates and the proportion of target predicates are both categorized under 'predicate', and the predicate 'P2(z1, z2)' is similarly classified. Lastly, the entity 'e8' is identified as a specific instance of 'An entity e'.",
    "In the context of knowledge graphs, various entities and their relationships can be understood through broader terms. For instance, 'similar argument embeddings' is a concept that falls under the broader category of 'learnt embeddings'. Similarly, the entity 'e6' is classified as a type of 'An entity e', which is a general identifier for objects within the graph. The representation of predicates and entities is also encompassed within 'An entity e'. Furthermore, 'ej' and 'body_r' are both broader terms associated with 'a variable', indicating their role in logical expressions. The concept of 'facts' is categorized under 'RDF triple', highlighting its foundational role in representing information. Additionally, 'three versions of r' and 'only a very small proportion of entities associated with any predicate within distance l' are both linked to the broader term 'a variable' and 'entity', respectively. The term 'genre' is associated with 'entities', illustrating how music classifications relate to the broader entity framework. 'Embeddings' serve as a broader term for 'embedding', showcasing their significance in capturing semantic relationships. The entity 'entity x' is also categorized under 'entities', emphasizing its role in the graph. Moreover, 'entity instances' and 'directly related entities' are both broader terms that fall under 'entities', reinforcing the interconnectedness of these concepts. The 'body' of a rule is defined in terms of 'components', while 'heuristic rule learners' are a type of 'algorithm', and 'Another work' is classified under 'research', demonstrating the hierarchical structure of knowledge representation. Lastly, the set 'e1, ..., en' is recognized as a broader term for 'entity', encapsulating the collection of all entities within the knowledge graph.",
    "The scoring function indicates the plausibility of the fact, which is essential for evaluating relationships in knowledge graphs. In this context, embeddings are of composite predicate, providing a mathematical representation that captures the relationships between entities. Wikidata serves as a knowledge base that has a broader term benchmark, which is used for comparison and evaluation. Additionally, Pi has a broader term predicate, representing logical relationships between entities. The binary fact P(e, e) is classified as a binary fact, illustrating self-referential relationships. The proportion of quality rules has a broader term proportion, indicating the ratio of high-quality rules in the learning process. Furthermore, confidence TreeSCorig has a broader term confidence, reflecting the reliability of predictions derived from knowledge graphs. Rule learning, which focuses on discovering patterns, has a broader term learning process, emphasizing the systematic approach to acquiring knowledge. Notably, only a very small proportion of entities associated with any predicate within distance l has a broader term entities, highlighting the sparsity in knowledge graphs. Formalisms, which represent complex systems, have a broader term concept, while the entity itself has a broader term set, indicating its classification within the knowledge graph. Occupations, representing job roles, have a broader term An entity e, linking individuals to their professions. The matrix product A(P1)*A(P2) has a broader term matrix and vector operations, essential for computing relationships. A set of pairs of entities (e, e1), ..., (e, eq) has a broader term set, representing relationships defined by predicates. The closed path rule Pt(x, y) and the predicate P'm_2(z(m-1), y2) both have a broader term predicate, indicating their role in defining relationships. The collection of entities e1, ..., en has a broader term entities, representing the entirety of the knowledge graph. Elements within adjacency matrices have a broader term components, which are the individual predicates that form the structure of the relationships. Lastly, designing an efficient learning method has a broader term learning process, focusing on the development of algorithms for effective knowledge acquisition, while the cardinality constraint Car=1 has a broader term An entity e, ensuring that specific rules are satisfied.",
    "Each human is a broader term that encompasses all entities, which are the individual items within a knowledge graph. Unary predicates, which are logical expressions, are categorized as occupations, defining specific job roles associated with individuals. The concept of embedding learning, a technique for transforming data into vector representations, has a broader term known as embedding, which is derived from models like RESCAL. RESCAL itself is a type of algorithm used for learning embeddings in relational data. Facts about entities, which describe specific pieces of information related to entities, fall under the broader category of entity. Additionally, a post-processing step is part of a process that constructs complex shapes from simpler structures. The set defined in this context has a count of 1, indicating a specific condition being satisfied. The knowledge graph contains 11 million facts, which are individual data entries that provide information about entities. The sequence of predicates, represented as P1(e, e1), P2(e1, e2), ..., Pn(e(n-1), e'), is a broader term for predicates that define relationships between entities. Cardinality, a mathematical concept, is related to properties that describe the quantitative aspects of data relationships. RDF databases, which store data in a graph-based model, are built on the RDF standard. Learnt embeddings are vector representations generated through a learning process, and Pt(e, e') indicates a relationship between two entities in a knowledge graph. ShEx is a schema language that defines the structure of RDF data, while the entities e1, e2, and e3 represent distinct nodes involved in various predicate relationships. The headr(e) denotes the predicate indicating the head of a tree structure in SHACL shapes. The entity satisfies and joins the head of the rule, while the cardinality constraint Car=2 results in the defined set. Finally, the satisfying entities e2 and e3 are broader terms for An entity e, indicating that they fulfill the conditions of a given rule.",
    "In the realm of knowledge graphs, various entities and concepts are interconnected through a series of relationships. For instance, entities e1 to e(n-1) are recognized as having a broader term, An entity e, which signifies their role within the graph. Scalability, a crucial property, is categorized under the broader term property, indicating its significance in handling growth. Similarly, the predicate P'1(z0, z1) is also classified under the broader term predicate, highlighting its relational function. The mathematical structure of square n x n adjacency matrices is defined by function A, which serves to represent the connections within the knowledge graph. Furthermore, all predicates in the sampled K' fall under the broader term predicate, emphasizing their relational nature. Shared variables are encompassed within the broader category of variables, while facts about entities are classified under entities, showcasing the hierarchical nature of these concepts. The body predicate, another type of predicate, plays a vital role in defining relationships. Algorithms such as greedy search are categorized under the broader term algorithm, illustrating their systematic approach to problem-solving. Wikidata is a significant source that generates and possesses unary predicates, which are essential for defining properties of entities. Additionally, facts about those predicates are also classified under predicate, reinforcing their relevance. The [i, j]-th element A(Pk)[i, j] is identified as 1, indicating the presence of a fact within the adjacency matrix. The process of learning each target predicate is categorized under predicate, emphasizing its importance in knowledge representation. Human validation, a critical process, ensures the accuracy of data within the graph. The object is recognized as having a broader term, a variable, which signifies its role in logical expressions. Sub-trees, which are portions of trees, are classified under the broader term trees, reflecting their hierarchical structure. Heuristic pruning is utilized within PathFinding, enhancing the efficiency of search algorithms. The target predicate Pt is classified as a logical statement, indicating its role in expressing relationships. Lastly, the pattern of existential variables in the head and universal variables in the body has been thoroughly investigated in the literature, showcasing the depth of research in this area.",
    "In the realm of knowledge graphs, various concepts are interconnected through broader terms. For instance, the predicate P0 is a broader term for the general concept of predicates, while the breadth-first manner is categorized under algorithms. The learning process is a specific type of process, and class membership is modeled as entity instances. Additionally, the sampling process also falls under the broader category of processes. The term name is a broader property, and all variables of a rule are encompassed within the broader category of variables. This lemma is a specific instance of a lemma, and the entity e' is classified as an entity. Furthermore, binary predicates are a type of broader classification known as types. An extensive representation of predicates and entities is another broader term for predicates, while entities are a broader term for An entity e. The entity e itself is also a broader term for An entity e, and depth-first is categorized under algorithms. The RESCAL model is a broader term for embeddings, and the example serves as a broader term for examples. The adjacency matrix A(P1) is classified as a square n x n adjacency matrix, and e3 is a broader term for An entity e. Lastly, RESCAL is also a broader term for the embedding representation, and DBpedia 3.8 is classified under benchmarks.",
    "In the realm of knowledge graphs, distinct e's are recognized as having a broader term of An entity e, which serves as a specific identifier for objects. Similarly, the sequence of predicates P1(e, e1), P2(e1, e2), ..., Pn(e(n-1), e') is categorized under the broader term relationship, highlighting the connections between entities. The evaluation method Ev also falls under the umbrella of An entity e, emphasizing its role in assessing entities. Furthermore, the concept of min cardinality is linked to the broader term concept, indicating its foundational role in defining properties within the graph. The entity e' is classified under entities, showcasing its connection to the individual items represented in the graph. The body of a rule is associated with components, which are the individual predicates that make up the rule's structure. The logical expression human(z2, z2) is categorized as a predicate, illustrating its function in the graph. Additionally, logical formalisms are encompassed within the broader term concept, while contributors are also identified as An entity e, reflecting their role in enhancing the knowledge graph. Closed intermediate variables are recognized as a type of variable, and the variable x is classified under variables, indicating its use in representing names within the graph. The depth-first questioning strategy is noted for its ability to reduce cognitive load, facilitating easier interaction with the graph. The binary predicate is a broader term for type predicates, which represent classes in the graph. MapReduce is categorized under Computing, showcasing its application in processing large datasets. The number of entities is recognized as a broader term for entity, emphasizing the count of distinct items in the graph. Heuristic pruning is identified as a type of algorithm, enhancing the efficiency of searches within the graph. The predicate P1(x, z0) is also classified under predicates, while unary predicates are recognized as types, defining properties of objects. Lastly, the embedding-based scoring function is a broader term for The scoring function, which evaluates relationships between entities, and E is identified as a set of entities.",
    "In the context of knowledge graphs, the entity is known to occur in E, which itself has a broader term of entity. The logical relationship father(x, z2) is categorized under predicates, which also includes the broader term Pn. Additionally, the unary predicates allow for the expression P(e), which can be equivalently written as P(e). The concept of explanatory power is related to the broader term concept, while the logical foundations for the semantics of the SHACL language fall under the broader category of semantics. Furthermore, the RESCAL model is a part of embedding learning, and the time of learning is encompassed within the broader learning process. The embedding-based scoring function is utilized within PathFinding, and the number of entities is a broader term for An entity e. The brute-force search and sampling algorithm are both classified under algorithms. Lastly, the predicate citizenOf(x, y) is included in the broader category of rules, and Section 6 concludes with the results of an experimental evaluation.",
    "The Car has values defined by Car values 1, 2, and 3, which are essential for evaluating specific rules. In the context of knowledge graphs, a tree is about an entity, illustrating the hierarchical relationships among them. Additionally, a sequence of predicates is terminating with intermediate variables, which serve as transitional points in logical statements. The body and head predicates have a broader term known as predicate, indicating their foundational role in expressing relationships. Furthermore, Embeddings, which capture semantic relationships, have a broader term referred to as the embedding representation. The number of entities, which counts distinct entities satisfying certain conditions, has a broader term called entities. In the realm of classification, the unary predicate human has a broader term of human, while E, representing an object in the graph, also has a broader term of entities. The TreeSC(r) metric is given by Treesupp, quantifying the reliability of tree structures. DBpedia 3.8 generates and possesses unary predicates, which are further classified under type predicates. The predicate P_k has a broader term of predicate, and the building block, which consists of components, serves as a fundamental element in knowledge representation. Learning methods are categorized under algorithms, while head instances are examples of inferred facts in the graph. Lastly, the abstract model has a broader term of concept, and a person is classified under An entity e, with entity e_i also being a specific instance of An entity e. The sh:property term has a broader term of predicate, linking it to the broader logical framework.",
    "The matrix A(Pt) has a broader term known as square n x n adjacency matrices, which are essential in representing relationships in knowledge graphs. Data entry, a crucial process, also falls under the broader category of process. In the context of knowledge graphs, pruning a tree is a method that obtains a simpler tree, enhancing the clarity of the data structure. Target predicate instances and the set of facts F both relate to the broader term predicate, indicating their role in defining relationships. The head of a logical rule is associated with an entity e, as are entities and predicates, which encompass millions of entities within the graph. Embedding learning is a technique that leads to the creation of embeddings, which are mathematical representations capturing semantic relationships. The target predicate Pt is also categorized under an entity e. The cardinality value 3 is related to the broader term value, indicating its significance in rule evaluation. A numerical confidence measure expresses the strength of evidence supporting the validity of mined shapes in the graph. An entity of type song is classified under entities, demonstrating its role within the broader structure. The subject entity is related to the object entity, establishing a reciprocal relationship. The record label y is categorized under an entity e, linking it to the broader context of music albums. Embeddings are further classified as learnt embeddings, showcasing their evolution through embedding learning, which is represented by the embedding representation. Classes in knowledge graphs are named unary predicates, defining categories of entities. Lastly, errors of omission and commission are encompassed within the broader term errors, highlighting the challenges in data accuracy.",
    "In the context of knowledge graphs, the entity 'e5' has a broader term known as 'An entity e', which serves as a general identifier for objects. The concept of 'variables' is quantified by 'universal quantification', indicating a logical framework for representing entities. Additionally, 'learnt embeddings' are encompassed by the broader term 'the embedding representation', highlighting their role in capturing semantic relationships. The 'unary occupation predicates' and 'human(x)' both fall under the broader category of 'predicate', which is fundamental in expressing relationships. Similarly, 'language(z3, z3)' is also classified as a 'predicate'. The 'rules' in this framework bind to the 'subject argument', establishing a connection between logical constructs and their subjects. Furthermore, 'elements with a value >= Car' are defined by the broader term 'value', which quantifies relationships in the graph. The absence of a 'benchmark' is noted as 'no benchmark', indicating a lack of reference for evaluation. Concepts such as 'human interpretability' and 'cognitive load' are both classified under 'concept', emphasizing their significance in understanding and processing information. The term 'an identifier for an object' is a broader term for 'object', which represents various entities. The entity 'E' is categorized under 'set', representing a collection of entities. The 'formalisation' process is a broader term for 'approach', which simplifies the complexity of knowledge graph sampling. Lastly, 'Car' is a broader term for 'entities', while 'Lemma 1' serves as a broader term for 'lemma', illustrating the hierarchical structure of these concepts.",
    "In the realm of knowledge graphs, various entities and their relationships are defined through a series of predicates. For instance, 'other predicates' and 'P1' both have a broader term of 'predicate', indicating their role in expressing relationships between entities. Unary predicates are significant as they represent and may also represent class assertions, showcasing their dual functionality. Additionally, the concept of 'exists(z*s, y*s)' is categorized under quantifiers, which further illustrates the hierarchical structure of these terms. The 'bounded number of entities' is related to 'An entity e', emphasizing the limitations within the graph. Unary predicates also act as the label of a link in the graph, which is supported by self-loop links that are specifically designed for unary predicates. The RDF triple is another foundational element, having a broader term of RDF, which encapsulates the framework for data representation. Rule instances serve as examples within this structure, while 'e'' is a broader term for a variable, highlighting the interconnectedness of these concepts. The predicate of the head is also classified under predicates, reinforcing the importance of these relationships. Existential rules and syntactic sugar both fall under the broader concept category, indicating their foundational role in logical expressions. Furthermore, 'Car' is noted to have the same values as 'Car=2', illustrating a specific relationship in terms of cardinality. Lastly, embedding learning is linked to learnt embeddings, while variable unification is categorized under the process of constructing complex shapes from simpler structures.",
    "In the realm of knowledge graphs, various predicates play significant roles in defining relationships among entities. For instance, 'predicates that occur in multiple branches' and 'the one from Wikidata' both fall under the broader category of 'predicate'. The adjacency matrix representation highlights that 'the [i, j]-th element A(Pk)[i, j]' is equivalent to '0', indicating the absence of a relationship between certain entities. Furthermore, the 'subject entity' is a specific type of 'entity', showcasing the hierarchical nature of these classifications. Logical formalisms are foundational, starting with and encompassing 'motivating use cases', which illustrate their practical applications. The concept of 'exists' is a broader term for 'quantifiers', emphasizing its role in logical expressions. Each individual entity, represented as 'each entity e_i', is a subset of 'An entity e', reinforcing the structure of knowledge representation. The IOP rule, expressed as 'Pt(x, y) -> P1(y, z) ^ P2(z, t)', is categorized as a 'logical statement', demonstrating the connections between entities through predicates. Additionally, 'unary predicates' facilitate the creation of 'fully abstracted (entity-free) shapes', allowing for generalized representations in knowledge graphs. The closed path rule 'r' is associated with the 'set of real numbers', while the 'head' of logical rules is a broader term for 'components'. Notably, 'DBpedia 3.8' contains various predicates, and 'related work' is classified under the broader concept of 'concept'. Type predicates also belong to the category of 'predicate', while 'five hundred poker hands' encompasses 'a specific poker hand'. The adjacency matrices serve the purpose of representing relationships for predicates, and the notion of 'simplicity' is linked to the broader concept of 'concept'. Lastly, 'binary predicate' and 'non-zero element' are both broader terms for 'concept' and 'elements', respectively, highlighting the interconnectedness of these entities within the knowledge graph.",
    "In the context of knowledge graphs, various entities and their relationships can be described through a series of broader terms. For instance, the entity 'E' has a broader term of 'a variable', while the 'subject entity' is encompassed within the broader category of 'entities'. Similarly, 'embedding learning' falls under the umbrella of 'learning method', and 'an example' is a specific instance of the broader concept of 'example'. The logical expression 'country(z1, z1)' is categorized as a type of 'predicate', and the 'evolving nature of human knowledge' is a subset of 'human knowledge'. The 'tree-building runtime' is related to the general concept of 'runtime'. Additionally, 'E' is related to another entity 'e'', and 'a tree' is a broader term for 'An entity e'. The 'strength of evidence' is a more specific instance of 'evidence', while 'the set of sampled entities for a target predicate' also relates back to 'An entity e'. The 'validation of RDF databases' is a broader term for 'RDF', and 'pruning techniques' are employed to 'prune away lower quality rules'. The term 'nativeLanguage' is a broader concept that includes 'language', and 'A formalisation of the approach' is a structured representation of 'formalisation'. The relationship denoted by 'fact Pk(ei, ej)' is categorized as a 'predicate', and 'property' is a broader term for 'attributes'. Furthermore, 'entities and predicates' are encompassed within the broader category of 'predicate', and 'Pt' is also classified as a type of 'predicate'.",
    "The concept of unifying some variables is related to a variable, indicating that it encompasses a broader understanding of variable consolidation. Similarly, predicate embeddings fall under the category of embedding-based methods, which utilize vector representations for semantic understanding. The expression Pi(e, e') or Pi(e', e) is a specific instance of a predicate, showcasing its broader classification. In geographical contexts, a place is a more specific term under the broader category of location. The new fact, which represents inferred relationships, is a subset of facts, highlighting its role in knowledge graphs. Additionally, the subject argument is a more specific type of argument, emphasizing its function in linguistic structures. Contextual connections are linked to the broader concept of relationships, illustrating cognitive dependencies. Unary predicates are classified under the broader concept of concepts, while an entity is a specific instance within the broader category of entities. A place is also a specific type of place, reinforcing its classification. The object argument is categorized under Parameters, which define specific variables in algorithms. Classes with few instances are pruned from the broader category of classes, indicating their limited significance. The entity e4 is a specific instance of An entity e, showcasing its classification. Confidence, as a measure of reliability, falls under the broader category of attributes. An album is classified as an entity, indicating its role within the broader context of entities. The notion of simplicity and easier interpretation is a broader concept that encompasses simplicity itself. Logical foundations provide a theoretical basis for concepts, while real applications illustrate practical use cases derived from knowledge graphs.",
    "Subject and object argument embeddings are a type of embedding space that provides vector representations for entities in knowledge graphs. In the context of relational databases, these systems employ not-null and other schema-based constraints to ensure data integrity. A fact, which is also known as a link, represents a relationship between entities. The predicate Pn(zn-1, y) is a broader term for predicates, indicating its role in logical expressions. In this framework, entity x is associated with album y, illustrating the relationship between a song and its album. The matrix product A(P1)*A(P2)*...*A(Pm) is a broader term for matrix products, which combine multiple predicates to analyze relationships. Heuristic pruning is a technique that falls under the broader category of pruning techniques, aimed at optimizing search processes. Genre, as a classification, is a broader term for entities, while each human is defined by the requirement of having at least two parents. Similar argument embeddings also belong to the embedding space, emphasizing their role in maintaining relationships. Our pruning techniques are specifically designed to prune lower quality rules, enhancing the overall quality of the knowledge graph. A fact is further categorized under the broader concept, while binary predicates are synonymous with properties, establishing relationships between entities. Predicate P_k represents an object argument and is integral to the structure of knowledge graphs. The running time for aggregating IOP rules into trees is a broader term for running times, indicating the efficiency of this process. Lastly, our new ones refer to newly generated predicates that enhance the knowledge graph's structure.",
    "In the context of knowledge graphs, various entities and predicates interact in meaningful ways. For instance, the entity 'human' has a broader term known as 'type of entities', which encompasses a wider classification. Similarly, 'genre' is related to 'entities', indicating that genres are a specific type of entity within the graph. The 'set of sampled entities for a target predicate' is associated with the 'worst case', highlighting the potential challenges in evaluating these entities. Each human is classified under the broader category of 'entity', emphasizing their role within the graph. Additionally, 'any predicate' and 'Pt(e', e)' both fall under the broader term 'predicate', showcasing the hierarchical nature of these relationships. The 'target predicate' is linked to 'logical statement', further illustrating the logical structure of the graph. Concepts such as 'universal quantification' also have broader implications, relating to the classification of entities. The 'citizenOf' predicate establishes a relationship with 'entity x', indicating citizenship connections. Techniques like 'heuristic pruning' are categorized under 'our pruning techniques', which aim to optimize the learning process. Furthermore, 'RDF triple' is a foundational element that relates to 'RDF databases', while 'object entity' and 'Standard confidence (SC)' are both broader terms for 'An entity e'. The 'explanatory power of the rule' is a measure of the 'explanatory power' itself, reflecting the effectiveness of rules in the graph. Lastly, the 'scoring function' is crucial as it is computed for 'fact P0(e1, e2)', demonstrating its role in evaluating relationships within the knowledge graph.",
    "In the realm of knowledge graphs, various entities and predicates interact through defined relationships. For instance, the predicate 'P1, ..., Pm' has a broader term known as 'predicate', which encompasses various logical expressions. Similarly, 'record label' is categorized under the broader term 'entities', indicating its role within the larger framework. Within this structure, a 'sub-tree' is extracted from a 'deeper, more complex tree', illustrating the hierarchical nature of knowledge representation. To ensure 'scalability', our pruning techniques are deemed necessary, highlighting the importance of maintaining quality in rule learning. The predicates 'citizenOf(x, z1)' and 'nativeLanguage(x, z3)' also fall under the broader category of 'predicate'. Furthermore, 'entities that satisfy the second argument of the body' are recognized as a specific type of 'An entity e'. The concept of 'roles', which can also be referred to as 'property', has a broader term that encompasses various properties within the graph. Additionally, the 'abstract model' serves a crucial function in 'Description Logic ontologies', while 'Car' is classified under the broader term 'concept'. The 'body of the rule' is another important element, having a broader term known as 'body'. In terms of logical relationships, 'a sequence of predicates' is categorized as a 'predicate', and the statistical likelihood of certain rules being effective is often higher than that of 'poor quality rules'. The concept of 'min cardinality' is related to 'Cardinality', establishing constraints within the graph. Moreover, 'human' is classified under the broader term 'entities', emphasizing its significance. The predicate is computed as 'subject and object argument embeddings', which are essential for understanding relationships. 'Intermediate variables' serve as a broader term for 'a variable', while 'close neighbours' are recognized as a broader term for 'relationship'. Lastly, 'two vectors' are used to represent the 'object argument', further illustrating the intricate connections within knowledge graphs.",
    "In the realm of knowledge graphs, the concept of 'two target predicates' has a broader term known as 'predicate', which is fundamental in expressing relationships between entities. Similarly, 'Predicates less relevant to the target predicate' also falls under the broader category of 'predicate'. The 'validation of RDF databases' is encompassed within the broader term 'RDF databases', highlighting the importance of ensuring data integrity in these specialized databases. A 'scoring function' plays a crucial role as it indicates the 'plausibility of the fact', assessing the likelihood of relationships holding true. Furthermore, 'An entity e' serves as a broader term for various entities, while 'predicate embeddings' are categorized under 'representation', capturing the semantic meanings of predicates. The relationship defined by 'a set of pairs of entities (e, e1), ..., (e, eq)' is also a broader term for 'An entity e', indicating the connections between entities. The 'count of e'' is another broader term associated with 'An entity e', reflecting the number of distinct entities satisfying specific conditions. Additionally, 'the set' is a broader term for 'set', representing collections of entities. The classification of 'human' falls under the broader term 'types', while the expression '|{ e : there exists e' such that headr(e) and Pt(e', e) }|' is a broader term for 'count', emphasizing the numerical representation of entities. The 'quantifiers' are a broader term for 'the quantifiers', which are essential in formal rules. In the context of music, 'an entity of type song' is expected to have 'associated facts', enriching the metadata surrounding musical compositions. The term 'Car' is linked to 'three versions of r', indicating different instances of rules related to cardinality. 'Entity x' is a broader term for 'An entity e', representing specific instances within the graph. The academic field of 'literature' is classified under 'research', reflecting the systematic investigation of knowledge graphs. Lastly, 'directly related entities' and 'entity instances' are both broader terms for 'An entity e', showcasing the interconnectedness of entities within the graph.",
    "The predicate calculus formalism is a specific type of formalism, which is a broader category that encompasses various structured frameworks used for logical representation. Similarly, the link, which denotes a relationship between entities, falls under the broader term of relationship. In the realm of knowledge graphs, a country is classified as an entity, and it also belongs to the broader category of types. The predicate serves as a fundamental component of properties, indicating how entities relate to one another. Logical formalisms, which include predicate calculus, are also categorized under formalisms. Predicate embeddings, representing the semantic meaning of predicates, are a subset of embeddings. Notably, only a very small proportion of entities associated with any predicate within a specified distance l can be identified as an entity e, which is a broader term for all entities in the graph. Pop stars, as a specific type of entity, are included within the broader classification of types of entities. The value '1' signifies a binary presence in the context of relationships, and it is a broader term for the concept of value. The set of entities e1, ..., en is also categorized under the broader term of an entity e. Wikidata serves as a comprehensive source of information specifically for pop stars. The straight form of a predicate is defined by the object argument, which connects to the head of the predicate. A composite predicate, which combines multiple predicates, is a broader term for the predicate itself. The first rule illustrates a relationship by indicating that an entity should belong to an album associated with a specific record label. The entity, which can represent various objects, is broader than its components. A shared variable is a more general term for a variable that can be accessed by multiple processes. Motivating use cases provide practical examples that fall under the broader category of use cases. The expression \u2203x Pt(x, z0) represents an existential quantification and is categorized under the broader term of predicate. Lastly, semantics, which deals with meaning, is a broader concept that encompasses various interpretations within language.",
    "In the realm of knowledge representation, the concept of Cardinality has a broader term known as attributes, which are essential for defining data fields in relational databases. Similarly, the logical expression exists(z1, ..., z(n-1), y) is encompassed by the broader category of quantifiers, which express the quantity of subjects or objects. Occupations, which categorize individuals, turn out to be a specific type of person, while facts about entities are a broader term for An entity e, which serves as a specific identifier within knowledge graphs. The entity e_i is embedded in a d-dimensional vector space, denoted as R^d, highlighting the mathematical representation of entities. The rdf:type property is a broader term for property, indicating the class of a resource in RDF triples. An entity of type song is classified under the broader term entity, and the classification of person falls under the type of entities. Pop stars, known for their popularity, are also categorized as entities. Furthermore, all variables of a rule are a broader term for a variable, which is a symbolic representation in predicate logic. Non-structured sources, such as Wikipedia, provide informal data that can be utilized in knowledge graphs. The binary predicate P1(x, z1) is a broader term for predicate, while Embeddings represent a broader term for embedding space, capturing semantic relationships in lower-dimensional spaces. The Car, a wheeled motor vehicle, is classified under both object and entity. The running time for aggregating IOP rules into trees is a broader term for runtime, indicating the computational duration required for processing. Lastly, An entity e can represent a place, further illustrating the diverse relationships within knowledge graphs.",
    "The embedding-based scoring function is a specialized form of the broader scoring function, which evaluates the relevance of items based on their vector representations. In the context of data structures, the name attribute is a specific instance of attributes, while min cardinality is a subset of minimum cardinality constraints that dictate the required instances of properties. The rdf:type property is categorized under RDF, which serves as a foundational framework for data interchange. Additionally, the concept of one producer is encompassed within the broader category of producers, indicating the necessity of at least one producer for a song entity. The relationship defined by Pt(e, e') or Pt(e', e) falls under the general classification of predicates. In knowledge graphs, the variable x represents an album name, which is a type of variable used to derive new predicates. The process of answering questions in knowledge graph completion is guided by an answer to the former, which allows us to confidently proceed to the next question. The term Car is a specific instance within the broader category of entities. The object entity e' is a more specific instance of An entity e, illustrating the hierarchical nature of entities. Furthermore, it is noted that only a very small proportion of entities associated with any predicate within distance l are relevant, highlighting the sparsity of knowledge graphs. Embedding learning is a technique that generates learnt embeddings, both of which are part of the embedding space that captures semantic relationships. Existential rules are a type of formalism, while free variables are quantified at the outside, indicating their flexibility within logical expressions. The capitalOf function is a specific type of property that identifies the capital city of a region. In the realm of mathematics, the numerator is a broader term that includes the specific concept of the numerator in fractions. Lastly, Treesupp is calculated as the set of entities that satisfy the conditions of a tree structure, demonstrating the interconnectedness of these concepts within knowledge graphs.",
    "In the realm of knowledge representation, the term 'human' has a broader term known as 'concept', which encompasses various classifications. Similarly, the 'ideal learner' is categorized under the broader term 'benchmark', representing optimal performance standards. The 'number of entities' is a specific instance of 'An entity e', highlighting the distinct entities within a given context. The concept of 'nativeLanguage' also falls under the broader category of 'concept'. Furthermore, 'person' is classified as a type under 'types', while 'lemma' is another example that belongs to the 'concept' category. The entity 'E' is identified as a broader term for 'An entity e', emphasizing its role in knowledge graphs. In terms of numerical representation, 'count' is defined as the count of 'non-zero element', indicating the significance of non-zero values in data analysis. The term 'contributors' is a broader classification that includes 'person', reflecting the individuals who enhance knowledge graphs. Additionally, 'entrepreneur' is categorized under 'occupations', representing various job roles. The 'validation of RDF databases' is a process that relates to 'RDF triple', ensuring data integrity. The term 'a human user' is a broader classification for 'human user', indicating individuals interacting with systems. 'Predicate embeddings' are a broader term for 'Embeddings', capturing semantic meanings in vector form. Each human is required to have 'two parents', establishing a fundamental relationship in knowledge representation. Moreover, 'directly related entities' are classified under 'relationship', indicating their close connections. The expression '|{ e : there exists e' such that headr(e) and Pt(e', e) }|' is a broader term for 'set', representing a collection of entities. Non-structured sources are often prone to 'errors of omission and commission', highlighting the challenges in data accuracy. Lastly, 'similarity' is a broader term for 'relationship', indicating the connections between different entities, while 'the count of non-zero elements in that vector' is classified under 'non-zero element', emphasizing the importance of distinct values in analysis.",
    "In the realm of knowledge graphs, the concept of an album is categorized under the broader term entity, indicating its role as a musical collection. Similarly, five hundred poker hands, which represent a dataset of poker hands, falls under the broader category of Each poker hand. The technique of prior Sampling is classified as a sampling method, which is essential for reducing search space in probabilistic models. Among the predicates identified in the poker knowledge graph, twenty-eight out of thirty-five predicates are recognized as unary predicates, highlighting their specific properties. The goal of pruning is to improve computational performance, ensuring that the learning process remains efficient. Comparative work is a subset of research, emphasizing the systematic evaluation of different methods. Additionally, five hundred poker hands are also categorized under the broader term hand, while the concept of a country is classified as a concept within knowledge graphs. Predicate embeddings, which capture the semantic meaning of predicates, are part of the broader category of embedding learning. The album y entity is associated with record label z, indicating its affiliation with a specific music label. In the context of relational databases, attributes are required, and they include ranks, which are classifications of poker hands. Ranks themselves are categorized under attributes, illustrating their importance in defining poker hand classifications. Lastly, both Car and existential variables are broader terms under a variable, showcasing their roles in logical representations.",
    "Each card has a broader term known as object, which encompasses various entities. In the realm of variables, free variables are a subset that falls under the broader category of variables. Similarly, the binary value 1 is classified under binary values, indicating its role in computational contexts. The concept of cardinality is exemplified by the relationship between Car and Cardinality, where Car is a specific instance of this broader term. Object arguments are also categorized under the general term object, highlighting their function in linguistic structures. An entity e can represent a person, illustrating the versatility of entities in knowledge graphs. The subject entity is a more specific term that falls under the broader category of An entity e. In terms of proportions, the largest proportion of rules is a subset of proportion, indicating its significance in statistical measures. Record labels, which are crucial in the music industry, are classified under the broader term entity. Subject arguments are related to the broader concept of subject, emphasizing their role in sentence structure. The proportion of mined rules also fits within the broader category of proportion, showcasing the frequency of rules extracted from knowledge graphs. The two type-like predicates from DBpedia 3.8 are categorized under predicates, which are fundamental in defining relationships. The relationship exists between the logical statement of the rule, linking the formal representation of rules to their characteristics. Mary, identified as a citizen of Australia, is classified under entities, while the term human is a broader classification under entity. Five hundred poker hands represent a dataset that falls under the broader category of poker hand. The matrix A(Pt) is associated with non-zero elements, indicating the presence of relationships in the graph. Datatype properties are linked to attributes, showcasing their role in semantic web technologies. Lastly, Twenty-eight out of thirty-five predicates are classified under predicates, highlighting their significance in the context of poker hands.",
    "In the realm of knowledge representation, a record label is categorized under the broader term entities, which encompasses various individual items. Similarly, the matrix product is classified as a type of matrix and vector operations, highlighting its mathematical significance. The concept of nativeLanguage is intrinsically linked to entity x, which represents a human instance within the graph. Furthermore, the term human also falls under the broader category of entities. A fact, which is represented as an RDF triple, signifies a relationship between entities, and this is reiterated by the fact that it is also classified as an RDF triple. Producers, like record labels, are included in the broader term entities. Additionally, an entity is a more specific classification under the broader term An entity e. Australia, as a geographical entity, is also categorized under entities. The operational concept of manual mode is a subset of the broader approach. In the context of knowledge graphs, the former question is associated with an answer to the former, indicating a dependency in the inquiry process. The term country is a broader classification under the entity category. Prior Sampling is recognized as a broader term within the sampling process. The genre of music is also classified under An entity e, indicating its relevance in categorizing songs. The capitalOf function is utilized in the query capitalOf(?, ?), which helps identify capital cities. The body of r is a broader term that encompasses logical statements, while an RDF triple is expressed in the notation P(e, e'). Non-zero elements are categorized under the broader term set, and trees, which are essential structures in knowledge graphs, are specifically associated with the type song.",
    "In the realm of knowledge representation, a logical statement has a broader term known as a concept, which encompasses various entities. Similarly, a country is categorized under the broader term entities, while an artist also falls under this classification. The term 'its reverse form' is defined in relation to the subject argument, indicating a structural relationship in logical expressions. The literature, which discusses existential rules, is a broader term for the concept of literature itself. In the context of predicates, matrix P_k represents a predicate and is associated with the subject argument, highlighting its role in knowledge graphs. Each human is classified under the broader term An entity e, emphasizing the individual representation of humans within this framework. Related work is a broader term for research, indicating the systematic investigation of topics. Pop stars, recognized for their popularity, are also categorized under entities. The binary value '0' signifies a broader term of binary values, which are essential in data representation. The requirement of two parents is classified under the broader term relationship, while the expression child(x, z) is a broader term for the predicate that defines parent-child relationships. Notably, binary predicates are similar to unary predicates, showcasing the diversity of logical constructs. The specific poker hand classification fullHouse(x) is defined as a specific poker hand, while the relationship locatedIn(z, y) is a broader term for predicates that describe spatial relationships. The predicate father is related to entity x, establishing a connection in the context of human relationships. Lastly, an RDF triple is expressed as (e, rdf:type, P), illustrating the foundational structure of knowledge representation.",
    "In the realm of knowledge representation, a person is categorized under the broader term entity, while experiments fall under the umbrella of research. Roles are defined as binary predicates, and papers are also considered a type of research. The predicate citizenOf is another example of a broader term within the category of predicates. In the context of knowledge graphs, two vectors represent the subject argument, and unary predicates can include specific examples such as fullHouse(x). The concept of the proportion of rule consequent instances is a subset of the broader term proportion, and the entity Car is associated with the broader term value. Furthermore, entities can be identified as persons, and a human expert is a specific type of person. Notably, Trump and Canberra are both classified as entities. In terms of data structure, a sub-tree is desired for enhancing human interpretability, while existential variables are integral to existential rules. Additionally, Fig. 2 illustrates a specific tree structure involving a logical expression that connects various human attributes and relationships. Songs are also categorized under entities, and the classification of poker hands includes broader terms such as nine different ranks and thirteen ranks, both of which fall under the category of ranks.",
    "The concept of High Card is classified under the broader term ranks, which encompasses various poker hand rankings. In the realm of data representation, the attribute name is associated with the data type string, indicating that it must possess a string-type value. Additionally, the term opera singers falls under the broader category of type of entities, while the binary predicate is a more general term for predicates in logic. The occupation of a singer is categorized within the broader term occupations. In the context of music, a song is classified under types, and album y is recognized as a specific instance of an album. Furthermore, dynamic data entry forms are a subset of data entry processes. The entity of type song is a specific instance within the broader category of An entity e. The numerical value 2 is a broader term that signifies a count of distinct entities. Wikidata is noted for having less complete information regarding opera singers. The predicate citizenOf is a broader term for relationships, while predicate embeddings are classified under the broader concept of embedding space. The predicate livesIn(x, z) is a specific instance of a broader predicate category. The binary predicate also falls under the broader term predicate logic. Evaluation experiments are a type of experiments, and the term Car is a broader classification for An entity e. Unary predicates are a broader category of predicates, and binary facts are classified under logical statements.",
    "In the realm of knowledge graphs, various entities and their relationships can be categorized under broader terms. For instance, 'birthPlace' is a specific type of 'property', while 'fullHouse(x)' falls under the category of 'predicate'. Similarly, 'opera singers' and 'musical artist' are both classified as 'entities'. The concept of 'unary predicates' is encompassed within 'predicate logic', and 'thirteen ranks' is a subset of 'attributes'. In poker hand rankings, 'One Pair' is categorized under 'ranks', and 'High Card' is recognized as a specific poker hand. Furthermore, the notion of 'at least two parents' relates to the broader category of 'parents', while 'Mary' is identified as an 'entity' within this framework. The 'record label z' is a specific instance of a 'record label', and predicates are composed of 'components', with 'predicate embeddings' serving as a computational representation of these predicates. Lastly, 'five playing cards' are classified under 'playing cards', and the logical structure of rules is articulated through 'the logical statement of the rule', which is a type of 'logical statement'.",
    "Previous research has a broader term known as research, which encompasses systematic investigations into various topics. Within the realm of data structures, a sub-tree is recognized as having a broader term of components, which are essential elements in the representation of predicates. In the context of music, producers are categorized under the broader term entity, indicating their role in overseeing song production. Similarly, an album is classified under the broader term An entity e, representing its identity within a knowledge graph. Australia, as a geographical entity, also falls under the broader term entity. In academic writing, Section 6 serves as a section that summarizes findings, and it too has a broader term of section. Attributes in relational databases include suits, which are categorized under the broader term attributes. The birth date is specifically defined as having a particular type of date and is also classified under the broader term date. Free variables are recognized as having a broader term of a variable, indicating their role in logical expressions. Producers and Australia are both classified under the broader term entities, while future work is a term that falls under the broader category of research. Each human is classified under the broader term human, emphasizing the collective nature of individuals. The second rule in music production requires a song (x), highlighting the necessity of having at least one producer. An artist is also categorized under the broader term entity, showcasing their creative contributions. In logical structures, a rule head has a broader term of components, indicating its role in defining conclusions. In poker, One Pair is recognized as having a broader term of a specific poker hand, illustrating its rank among other hands. Lastly, the term person is classified under the broader term a person, emphasizing the individual characteristics that define human beings.",
    "In the realm of knowledge representation, an artist is categorized under the broader term entities, which encompasses various roles and occupations. Similarly, a record label is a specific type of entity that falls under the broader category of An entity e. In the context of poker, each poker hand is composed of five playing cards, illustrating the relationship between these two concepts. The term human also belongs to the broader category of An entity e, highlighting its significance as a fundamental identifier. Furthermore, an entity can serve as a subject argument in linguistic structures, while a person is required to have both a place of birth and a birth date, emphasizing the attributes necessary for identification. Unary predicates are defined as human, indicating their association with human entities. The predicate capitalOf is another example of a broader term that encompasses various geographical relationships. Additionally, a specific poker hand is a subset of each poker hand, and both are classified under the general term hand. In the context of knowledge graphs, a human expert is capable of extracting a sub-tree, which represents a hierarchical relationship. The concept of country is also categorized under An entity e, just like Trump and Canberra, which are specific instances of entities. Moreover, the requirement of 2 producers for a song indicates a broader relationship with producers. The query birthPlace(Trump, ?) is logically followed by capitalOf(?, ?), demonstrating the interconnectedness of these queries. Lastly, the term entrepreneur is recognized as a broader category of a person, while use cases serve as examples of practical applications within this framework.",
    "In the realm of knowledge representation, a song is categorized as an entity, which is a broader term encompassing various types of objects. Similarly, Canberra, Trump, and pop stars are all classified under the broader category of entities. The specific instance known as entity x is identified as a song, illustrating the relationship between specific instances and their broader classifications. Additionally, the concept of a human is a broader term that relates to predicates, while nativeLanguage also falls under this category. In the context of poker, a specific poker hand is a type of poker hand, indicating the hierarchical relationship within the classification of poker hands. The body of the rule is associated with components, which are essential in logical statements. Furthermore, the nine different ranks of poker hands include High Card, showcasing the classification of poker hands. Geographically, Australia is recognized as a place, and Mary is identified as a person living there, establishing her citizenship within the broader context of logical statements. The concept of two parents is a broader term that relates to parents, emphasizing familial relationships. Lastly, existential variables have been investigated in the literature, contributing to the understanding of logical frameworks.",
    "In the context of knowledge representation, a person is a specific type of entity, which is a broader term encompassing various identifiers. Similarly, a musical artist is classified under the broader category of entities, indicating that they are part of a larger group involved in music creation and performance. Canberra, as the capital city of Australia, falls under the broader term of location, highlighting its significance as a geographical entity. The concept of nativeLanguage is related to the broader relationship category, emphasizing its role in communication. Opera singers, who are specialized vocal performers, also belong to the broader category of entities. An album, which is a collection of musical recordings, is associated with a genre, indicating the style of music it represents. In the realm of poker, nine different ranks include One Pair, showcasing the classification of poker hands. Each poker hand is assigned to one of these nine ranks, illustrating the structured nature of poker hand rankings. Additionally, the term card is a broader category that encompasses playing cards, which are used in various card games. Five playing cards are drawn from a deck, forming the basis of poker hands. The father predicate establishes a relationship between entities, while the place of birth and birth date are properties that provide specific information about individuals. Lastly, a record label is a broader term that encompasses the production and distribution of music, further linking to the concept of a record label.",
    "In the realm of logical statements, the predicate '\u2203z child(x, z)' has a broader term that encompasses the concept of a predicate itself. Similarly, the poker hand ranking 'High Card' is classified under the broader category of 'hand'. The term 'name of an album' refers to a specific title that falls under the broader concept of 'name'. Geographically, 'Canberra' is recognized as a place, which is a broader term for various locations. The role of an 'entrepreneur' is categorized under the broader term 'roles', while the term 'father' signifies a relationship that is part of a broader understanding of relationships. The predicate 'livesIn' is also a logical statement that indicates a broader relationship. The 'country of residence' is a specific type of location, further emphasizing the connection between individuals and their geographical identifiers. In this context, 'Mary' is identified as an entity that fits within the broader category of 'An entity e'. The relationship 'locatedIn' is part of the predicate 'citizenOf(x, y)', which connects individuals to their national identities. Notably, 'Trump' is classified as a person, which is a broader term for individual entities. In poker, 'One Pair' is a specific hand that falls under the broader category of 'Each poker hand', and it is also classified as a type of 'hand'. The concept of 'human interaction' is a broader term that encompasses the essence of being human. Furthermore, an album is produced by 'two producers', indicating a collaborative effort in music production. Lastly, both 'High Card' and 'One Pair' are types of poker hands, while 'producers' and 'Australia' are recognized as entities within their respective broader categories.",
    "Minimum cardinality constraints express the concept of a song, while the place of birth has a particular type known as location, which also serves as a broader term for it. In the realm of music production, two producers are encompassed within the broader category of producers, which in turn falls under the roles that define various responsibilities in music creation. A human expert is classified as a person, indicating their expertise within the broader human category. In the context of card games, each poker hand is a specific instance of a hand, and One Pair is recognized as a type of poker hand. Additionally, a deck of cards is characterized by its thirteen ranks, which are essential for gameplay. The relationship defined by spouse(x, y) is categorized under predicates, while the concept of birthPlace also fits within the broader predicate category. Lastly, the livesIn relationship is part of the citizenOf(x, y) predicate, illustrating the connection between individuals and their citizenship.",
    "The concept of a human user is encompassed within the broader category of a person. Similarly, Trump, Canberra, and song are all classified under the general identifier of an entity e. An album is associated with a record label, indicating that it is produced and distributed by a specific music organization. In the realm of logic, free variables are defined as universally quantified, which means they can take on any value within their domain. The country of residence is a broader term that falls under attributes, which also includes place of birth and birth date. Additionally, computer scientists rely on the concept of country of residence in their work. The four suits of playing cards, which include hearts, diamonds, clubs, and spades, are categorized under suits. Furthermore, opera singers and musical artists are both classified as entities under the broader term of an entity e, while a song (x) and an entity of type song are both recognized as specific instances of the broader category of song. Lastly, the role of a singer is defined within the context of roles.",
    "Australia is classified as a country, which is a broader term that encompasses various nations. Within the realm of individuals, an entrepreneur is a type of person who initiates and manages business ventures. The term 'name of an album' refers to the title of a collection of music tracks, which falls under the broader category of an album. In the context of card games, a deck, which is a standard set of playing cards, is associated with four suits, namely Hearts, Diamonds, Clubs, and Spades. The relationship defined by 'spouse(x, y)' implies that if two individuals are spouses, there exists at least one child of the couple. Mary, who is a person and a citizen of Australia, resides in Canberra. The term 'artist' is a broader category that includes an artist, who is recognized for their musical contributions. Songs are typically associated with an artist and are part of an album. Donald Trump, also a person, is linked to the concept of birthplace, which is relevant in queries about his origins. Additionally, pop stars are a subset of musical artists, and singers are also categorized as persons.",
    "The term 'name of an album' refers to a specific title within the broader category of 'an album', which is a collection of musical recordings. In the context of geography, Canberra, the capital city of Australia, is located within the country of Australia. Additionally, the term 'musical artist' encompasses a broader category known as 'artist', which includes individuals who create or perform art, particularly in music. Furthermore, 'opera singers' are a specialized group within the broader category of 'musical artist', focusing on the art of singing opera."
  ],
  "times": [
    1612.5734131336212
  ]
}