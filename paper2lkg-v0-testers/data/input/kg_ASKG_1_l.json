{
  "iri": "Paper-MEL_Metadata_Extractor__Loader",
  "title": "MEL: Metadata Extractor & Loader",
  "authors": [
    "Sergio J. Rodr\u00edguez M\u00e9ndez",
    "Pouya G. Omran",
    "Armin Haller",
    "KerryTaylor"
  ],
  "keywords": [
    "Metadata Extraction",
    "Information Extraction",
    "Data Preprocessing",
    "Knowledge Graph Construction",
    "Data Analysis Pipeline"
  ],
  "sections": [
    {
      "iri": "Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-1-Sentence-1",
              "text": "The metadata and content-based information extraction tasks from heterogeneous file sets are pre-processing steps of many Knowledge Graph Construction Pipelines (KGCP)."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-2",
              "text": "These tasks often take longer than necessary due to the lack of proper tools that integrate several complementary extraction methods and properties to get a rich output set."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-3",
              "text": "This paper presents MEL, a Python-based tool that implements a set of methods to extract metadata and content-based information from unstructured information encoded in different source document formats."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-4",
              "text": "The results are generated as JSON files, which can: (a) optionally be stored in a document store, and (b) easily be mapped to RDF using a variety of tools such as J2RM."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-5",
              "text": "MEL supports more than 20 different file types, making it a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-2",
      "subtitle": "Introduction",
      "paragraphs": [
        {
          "iri": "Section-2-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-1-Sentence-1",
              "text": "This paper introduces MEL, a tool that implements a set of methods to extract metadata and content-based information from various file formats as JSON objects."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-2",
              "text": "For each supported file type, MEL extracts the textual content from the source document and performs specific pre-processing and data cleaning tasks."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-3",
              "text": "Also, it performs basic text analysis tasks (pattern matching and keyword extraction) and generates the results in a machine-readable format (JSON), preparing the ground for content-based analysis."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-4",
              "text": "MEL is integrated with \u201cThe NLP -NER Toolkit\u201d (TNNT), which automates the extraction task of categorised named entities from the MEL results by using diverse state-of-the-art NLP tools and NER models [5]."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-5",
              "text": "MEL implements primitives for metadata and content extraction from unstructured data sets of heterogeneous formats, and along with the TNNT results, it provides the groundwork for content-based analysis."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-6",
              "text": "MEL and TNNT were developed in conjunction with J2RM [4], to easily map the JSON results to RDF as part of an automated KGCP."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-3",
      "subtitle": "Core Features",
      "paragraphs": [
        {
          "iri": "Section-3-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-1-Sentence-1",
              "text": "MEL has comprehensive metadata extraction support of various file types and formats."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-2",
              "text": "In a nutshell: (1) it takes as input a document (file) set; (2) then, for each document, it extracts its related metadata and content-based information, while performing basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task); and, (3) as output, it generates a JSON file with the extracted metadata and text content with a structure based on the supported formats' document object model."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-3",
              "text": "It can store the results in a document store."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-4",
              "text": "MEL's general output structure is presented in Table 1."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-5",
              "text": "MEL has a detailed configuration JSON file that defines how the processing will be performed through a set of parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task, among other settings."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-6",
              "text": "The supported file types are presented in Table 2."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-7",
              "text": "The third column shows the theoretical number of attributes that the tool is able to extract per document type, whilst the fourth column shows the average of the extracted attributes from four use case document sets."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-8",
              "text": "OLE 2 file types and .docm can only be processed on Windows operating systems."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-9",
              "text": "Specifically for OLE 2 file types, MEL uses the olemeta tool."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-4",
      "subtitle": "Architecture",
      "paragraphs": [
        {
          "iri": "Section-4-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-1-Sentence-1",
              "text": "MEL is fully integrated with TNNT as depicted in Figure 1."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-2",
              "text": "The set of Python-based methods implemented in MEL are generic and can be applied to extract the content and metadata of all supported file types."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-3",
              "text": "MEL uses various opensource packages and tools with complementary capabilities to form a \u201cSwiss army knife\u201d of metadata and content-based information extraction from heterogeneous document sets."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-4",
              "text": "As part of the \u201cGeneral-Metadata\u201d extraction task, MEL optionally uses the XML output from the NLNZ Metadata Extractor tool, a Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-5",
              "text": "The MEL general processing model is presented in Figure 2."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-6",
              "text": "It is important to note that each file type has its own specific processing model as well as the text analysis task, which is the last step that is performed for any output."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-5",
      "subtitle": "Related Work",
      "paragraphs": [
        {
          "iri": "Section-5-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-1-Sentence-1",
              "text": "The most comprehensive and current state-of-the-art tool for content extraction and analysis is Apache Tika, which is a complete and complex Java-based general-purpose system."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-2",
              "text": "While MEL's core goals resemble the ones of Apache Tika, the main difference and benefit of MEL as compared to Apache Tika is that it is a lightweight Python-based package for the metadata extraction of common file formats aimed to be used in a KGCP."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-3",
              "text": "Although there is a wide range of Python-based tools and libraries for metadata extraction, to the best of our knowledge, there is no package available that fully integrates in one system a comprehensive set of methods for metadata and content extraction of common file formats that generate the results in JSON structures based on the document object model of each format type."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-4",
              "text": "Last, MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3]."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-6",
      "subtitle": "Conclusions and Future Work",
      "paragraphs": [
        {
          "iri": "Section-6-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-1-Sentence-1",
              "text": "MEL provides a versatile mechanism to extract metadata and content-based information from unstructured data sets of heterogeneous file formats, agnostic of the data sets' domain (general purpose)."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-2",
              "text": "It has been tested over thousands of documents using different formats and datasets as part of the AGRIF project."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-3",
              "text": "Based on the structure of the MEL's JSON results, it is possible to easily add a vocabulary or light-weight ontology using JSON-LD annotations, in order to make the extracted metadata \u201cRDF ready\u201d."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-4",
              "text": "This will be explored in the near future leveraging on the integration with JSON-LD ontologies."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-5",
              "text": "More file formats will be added in a per use-case requirements basis, in order to support KGCP tasks."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-6",
              "text": "Additionally, a project to \u201ccontainerise\u201d the MEL+TNNT tools is planned in the near future."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-7",
              "text": "The major contributions of this tool are: (1) the ability to extract metadata sets and content-based information from different source document formats; (2) the comprehensive support of over 20 different file types/formats integrated into one easy-to-use Python-based system; (3) integration with TNNT which automates the extraction of categorised named entities from the results by using diverse state-of-the-art NLP tools and NER models; and (4) the JSON result files can be easily mapped to RDF using J2RM."
            }
          ]
        }
      ]
    }
  ],
  "times": [
    0.00035262107849121094,
    109.26606059074402,
    142.7800645828247,
    131.7152750492096,
    1.50520920753479,
    0.0004611015319824219,
    0.0007767677307128906,
    190.60147643089294,
    292.73998069763184,
    7.933031797409058,
    4.1664137840271,
    0.19651293754577637,
    0.0012967586517333984,
    171.83623886108398,
    39.06958079338074,
    0.161376953125,
    1.1357808113098145,
    9.220428705215454,
    731.8379194736481,
    400.8288993835449,
    119.34883260726929,
    11.054104089736938,
    203.77422404289246,
    9.02812671661377,
    0.006724357604980469,
    0.12777471542358398
  ],
  "nodes": {
    "Entity-mel__a_python-based_tool": {
      "node_id": "mel__a_python-based_tool",
      "disambiguation_index": 0,
      "label": "MEL, a Python-based tool",
      "aliases": [
        "MEL, a Python-based tool"
      ],
      "types": [
        "software",
        "tool"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL: a Python-based tool that extracts metadata and content-based information from various file types, generating results as JSON files.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "MEL, a Python-based tool",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-mel__a_python-based_tool-Mention-1"
        }
      ],
      "relevance": 0.81103515625
    },
    "Entity-this_paper": {
      "node_id": "this_paper",
      "disambiguation_index": 0,
      "label": "This paper",
      "aliases": [
        "This paper"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The research paper being referred to, which presents MEL, a Python-based tool that implements a set of methods for extracting metadata and content- based information from unstructured information encoded in different source document formats.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "This paper",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this_paper-Mention-1"
        }
      ],
      "relevance": 0.80908203125
    },
    "Entity-the_mel": {
      "node_id": "the_mel",
      "disambiguation_index": 0,
      "label": "The MEL",
      "aliases": [
        "The MEL"
      ],
      "types": [
        "model"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "MEL (Metadata Extractor & Loader) is a Python-based tool that extracts metadata and content- based information from unstructured files in various formats, generating output as JSON files.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-5",
          "local_name": "The MEL",
          "local_types": [
            "model"
          ],
          "iri": "Entity-the_mel-Mention-1"
        }
      ],
      "relevance": 0.80908203125
    },
    "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting": {
      "node_id": "a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "disambiguation_index": 0,
      "label": "a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings",
      "aliases": [
        "a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings"
      ],
      "types": [
        "tool",
        "pre-processing task",
        "KGCP setting"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "MEL, a Python-based metadata extractor and loader, which supports over 20 file types and aids pre-processing tasks as part of a Knowledge Graph Construction Pipeline (KGCP) with comprehensive configurable settings.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings",
          "local_types": [
            "tool",
            "pre-processing task",
            "KGCP setting"
          ],
          "iri": "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting-Mention-1"
        }
      ],
      "relevance": 0.80712890625
    },
    "Entity-it_(3)": {
      "node_id": "it_(3)",
      "disambiguation_index": 3,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "project"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The MEL (Metadata Extractor & Loader) tool, a Python-based system that extracts metadata sets and content- based information from different source document formats.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "It",
          "local_types": [
            "project"
          ],
          "iri": "Entity-it_(3)-Mention-1"
        }
      ],
      "relevance": 0.7998046875
    },
    "Entity-it_(1)": {
      "node_id": "it_(1)",
      "disambiguation_index": 1,
      "label": "it",
      "aliases": [
        "this tool",
        "it"
      ],
      "types": [
        "software",
        "tool"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL, a Python-based tool for metadata extraction and content-based information processing from unstructured file sets.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "it",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-it_(1)-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "this tool",
          "local_types": [
            "tool"
          ],
          "iri": "Entity-it_(1)-Mention-2"
        }
      ],
      "relevance": 0.79443359375
    },
    "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_": {
      "node_id": "mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "disambiguation_index": 0,
      "label": "MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3]",
      "aliases": [
        "MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3]"
      ],
      "types": [
        "method",
        "tool"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL: a Python-based tool that assists in the information extraction stage of several Knowledge Graph Construction Pipelines (KGCPs)",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3]",
          "local_types": [
            "method",
            "tool"
          ],
          "iri": "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_-Mention-1"
        }
      ],
      "relevance": 0.79052734375
    },
    "Entity-meltnnt": {
      "node_id": "meltnnt",
      "disambiguation_index": 0,
      "label": "MEL+TNNT",
      "aliases": [
        "MEL+TNNT",
        "MEL+TNNT tools"
      ],
      "types": [
        "software",
        "toolset",
        "project",
        "system",
        "tool"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A Python-based toolset and project that integrates metadata extraction, content-based information extraction, and named entity recognition (NER) capabilities from diverse file formats.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-6",
          "local_name": "MEL+TNNT",
          "local_types": [
            "toolset",
            "project",
            "software",
            "tool"
          ],
          "iri": "Entity-meltnnt-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-6",
          "local_name": "MEL+TNNT tools",
          "local_types": [
            "system",
            "toolset"
          ],
          "iri": "Entity-meltnnt-Mention-2"
        }
      ],
      "relevance": 0.78857421875
    },
    "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object": {
      "node_id": "a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object",
      "disambiguation_index": 0,
      "label": "a tool that implements a set of methods to extract metadata and content-based information from various file formats as JSON objects",
      "aliases": [
        "a tool that implements a set of methods to extract metadata and content-based information from various file formats as JSON objects"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "MEL (Metadata Extractor & Loader), a Python-based tool that extracts metadata and content-based information from unstructured data sets of heterogeneous formats, generating results as JSON objects.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "a tool that implements a set of methods to extract metadata and content-based information from various file formats as JSON objects",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object-Mention-1"
        }
      ],
      "relevance": 0.78515625
    },
    "Entity-the_metadata": {
      "node_id": "the_metadata",
      "disambiguation_index": 0,
      "label": "The metadata",
      "aliases": [
        "The metadata"
      ],
      "types": [
        "metadata"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Metadata extracted or generated by MEL, a Python-based tool that implements methods to extract metadata and content-based information from unstructured information encoded in different source document formats.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "The metadata",
          "local_types": [
            "metadata"
          ],
          "iri": "Entity-the_metadata-Mention-1"
        }
      ],
      "relevance": 0.783203125
    },
    "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format": {
      "node_id": "a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format",
      "disambiguation_index": 0,
      "label": "a lightweight Python-based package for the metadata extraction of common file formats",
      "aliases": [
        "a lightweight Python-based package for the metadata extraction of common file formats"
      ],
      "types": [
        "package"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "MEL, a lightweight Python-based package, extracts metadata from various file formats and generates JSON output for use in Knowledge Graph Construction Pipelines.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "a lightweight Python-based package for the metadata extraction of common file formats",
          "local_types": [
            "package"
          ],
          "iri": "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format-Mention-1"
        }
      ],
      "relevance": 0.77392578125
    },
    "Entity-mel_extract_the_textual_content_from_the_source_document": {
      "node_id": "mel_extract_the_textual_content_from_the_source_document",
      "disambiguation_index": 0,
      "label": "MEL extracts the textual content from the source document",
      "aliases": [
        "MEL extracts the textual content from the source document"
      ],
      "types": [
        "process",
        "data extraction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A tool that extracts metadata and textual content from various file formats, performing specific preprocessing and data cleaning tasks.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "MEL extracts the textual content from the source document",
          "local_types": [
            "process",
            "data extraction"
          ],
          "iri": "Entity-mel_extract_the_textual_content_from_the_source_document-Mention-1"
        }
      ],
      "relevance": 0.77001953125
    },
    "Entity-mel_s": {
      "node_id": "mel_s",
      "disambiguation_index": 0,
      "label": "MEL's",
      "aliases": [
        "MEL's"
      ],
      "types": [
        "organization",
        "acronym"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Metadata Extractor & Loader, a Python-based tool for extracting metadata and content- based information from unstructured data sets of heterogeneous file formats.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "MEL's",
          "local_types": [
            "organization",
            "acronym"
          ],
          "iri": "Entity-mel_s-Mention-1"
        }
      ],
      "relevance": 0.76513671875
    },
    "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type": {
      "node_id": "mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "disambiguation_index": 0,
      "label": "MEL are generic and can be applied to extract the content and metadata of all supported file types",
      "aliases": [
        "MEL are generic and can be applied to extract the content and metadata of all supported file types"
      ],
      "types": [
        "methodology",
        "file type"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of Python-based methods implemented in MEL, which are generic and applicable for extracting both content and metadata from various file formats.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "MEL are generic and can be applied to extract the content and metadata of all supported file types",
          "local_types": [
            "methodology",
            "file type"
          ],
          "iri": "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type-Mention-1"
        }
      ],
      "relevance": 0.76123046875
    },
    "Entity-json_file_with_the_extracted_metadata_and_text_content": {
      "node_id": "json_file_with_the_extracted_metadata_and_text_content",
      "disambiguation_index": 0,
      "label": "JSON file with the extracted metadata and text content",
      "aliases": [
        "JSON file with the extracted metadata and text content",
        "a JSON file with the extracted metadata and text content"
      ],
      "types": [
        "file format",
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The output of MEL, which generates a JSON file containing extracted metadata and text content from input documents.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "JSON file with the extracted metadata and text content",
          "local_types": [
            "output"
          ],
          "iri": "Entity-json_file_with_the_extracted_metadata_and_text_content-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "a JSON file with the extracted metadata and text content",
          "local_types": [
            "output",
            "file format"
          ],
          "iri": "Entity-json_file_with_the_extracted_metadata_and_text_content-Mention-2"
        }
      ],
      "relevance": 0.75732421875
    },
    "Entity-it_(2)": {
      "node_id": "it_(2)",
      "disambiguation_index": 2,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL's metadata extraction and processing component that takes input from a file set, extracts related metadata and content-based information, performs basic text analysis, and generates JSON files with extracted data.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "It",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-it_(2)-Mention-1"
        }
      ],
      "relevance": 0.73974609375
    },
    "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format": {
      "node_id": "primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "disambiguation_index": 0,
      "label": "primitives for metadata and content extraction from unstructured data sets of heterogeneous formats",
      "aliases": [
        "primitives for metadata and content extraction from unstructured data sets of heterogeneous formats"
      ],
      "types": [
        "concept",
        "technology"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of methods or techniques used by MEL to extract metadata and content-based information from unstructured data sets with heterogeneous formats.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "primitives for metadata and content extraction from unstructured data sets of heterogeneous formats",
          "local_types": [
            "concept",
            "technology"
          ],
          "iri": "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format-Mention-1"
        }
      ],
      "relevance": 0.73828125
    },
    "Entity-the_set_of_python-based_method": {
      "node_id": "the_set_of_python-based_method",
      "disambiguation_index": 0,
      "label": "The set of Python-based methods",
      "aliases": [
        "The set of Python-based methods"
      ],
      "types": [
        "methods"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of generic, Python-implemented extraction methods used in MEL to extract content and metadata from various file types.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "The set of Python-based methods",
          "local_types": [
            "methods"
          ],
          "iri": "Entity-the_set_of_python-based_method-Mention-1"
        }
      ],
      "relevance": 0.7353515625
    },
    "Entity-mel_s_json_result": {
      "node_id": "mel_s_json_result",
      "disambiguation_index": 0,
      "label": "MEL's JSON results",
      "aliases": [
        "MEL's JSON results"
      ],
      "types": [
        "results"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The output of MEL, in the form of JSON files, containing metadata and content-based information extracted from unstructured data sets of heterogeneous file formats.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "MEL's JSON results",
          "local_types": [
            "results"
          ],
          "iri": "Entity-mel_s_json_result-Mention-1"
        }
      ],
      "relevance": 0.7353515625
    },
    "Entity-extracted_metadata": {
      "node_id": "extracted_metadata",
      "disambiguation_index": 0,
      "label": "extracted metadata",
      "aliases": [
        "extracted metadata"
      ],
      "types": [
        "metadata"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The output of MEL, which is a set of extracted information and properties from unstructured data sets in various file formats.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "extracted metadata",
          "local_types": [
            "metadata"
          ],
          "iri": "Entity-extracted_metadata-Mention-1"
        }
      ],
      "relevance": 0.716796875
    },
    "Entity-mel": {
      "node_id": "mel",
      "disambiguation_index": 0,
      "label": "MEL",
      "aliases": [
        "MEL"
      ],
      "types": [
        "software",
        "model",
        "package",
        "metadata extraction tool",
        "ontology",
        "acronym",
        "project",
        "organization",
        "system",
        "tool",
        "research program",
        "framework",
        "method",
        "initiative",
        "software framework",
        "library"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A software framework or package for extracting metadata and content-based information from unstructured data sources.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "MEL",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "MEL",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "MEL",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "MEL",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "MEL",
          "local_types": [
            "model",
            "system",
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "MEL",
          "local_types": [
            "system",
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "MEL",
          "local_types": [
            "ontology",
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-7"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "MEL",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-8"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "MEL",
          "local_types": [
            "organization",
            "acronym"
          ],
          "iri": "Entity-mel-Mention-9"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "MEL",
          "local_types": [
            "system",
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-10"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-9",
          "local_name": "MEL",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-11"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "MEL",
          "local_types": [
            "model",
            "system",
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-12"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "MEL",
          "local_types": [
            "software framework",
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-13"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "MEL",
          "local_types": [
            "method",
            "initiative",
            "project",
            "tool"
          ],
          "iri": "Entity-mel-Mention-14"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "MEL",
          "local_types": [
            "project",
            "research program",
            "tool"
          ],
          "iri": "Entity-mel-Mention-15"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-5",
          "local_name": "MEL",
          "local_types": [
            "model"
          ],
          "iri": "Entity-mel-Mention-16"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "MEL",
          "local_types": [
            "software",
            "package",
            "metadata extraction tool",
            "project",
            "library"
          ],
          "iri": "Entity-mel-Mention-17"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "MEL",
          "local_types": [
            "system",
            "software",
            "tool"
          ],
          "iri": "Entity-mel-Mention-18"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "MEL",
          "local_types": [
            "method",
            "tool"
          ],
          "iri": "Entity-mel-Mention-19"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "MEL",
          "local_types": [
            "ontology",
            "framework"
          ],
          "iri": "Entity-mel-Mention-20"
        }
      ],
      "relevance": 0.712890625
    },
    "Entity-the_result_in_a_machine-readable_format__json_": {
      "node_id": "the_result_in_a_machine-readable_format__json_",
      "disambiguation_index": 0,
      "label": "the results in a machine-readable format (JSON)",
      "aliases": [
        "the results in a machine-readable format (JSON)"
      ],
      "types": [
        "output"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The output of MEL's metadata and content extraction processes, presented as JSON files.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "the results in a machine-readable format (JSON)",
          "local_types": [
            "output"
          ],
          "iri": "Entity-the_result_in_a_machine-readable_format__json_-Mention-1"
        }
      ],
      "relevance": 0.71044921875
    },
    "Entity-metadata_extraction_support_of_various_file_type_and_format": {
      "node_id": "metadata_extraction_support_of_various_file_type_and_format",
      "disambiguation_index": 0,
      "label": "metadata extraction support of various file types and formats",
      "aliases": [
        "metadata extraction support of various file types and formats"
      ],
      "types": [
        "feature"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A Python-based tool that implements a set of methods to extract metadata and content- based information from unstructured information encoded in different source document formats.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "metadata extraction support of various file types and formats",
          "local_types": [
            "feature"
          ],
          "iri": "Entity-metadata_extraction_support_of_various_file_type_and_format-Mention-1"
        }
      ],
      "relevance": 0.7099609375
    },
    "Entity-more_file_format": {
      "node_id": "more_file_format",
      "disambiguation_index": 0,
      "label": "More file formats",
      "aliases": [
        "More file formats"
      ],
      "types": [
        "file format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Additional file types that MEL supports for metadata extraction and content-based information processing.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "More file formats",
          "local_types": [
            "file format"
          ],
          "iri": "Entity-more_file_format-Mention-1"
        }
      ],
      "relevance": 0.708984375
    },
    "Entity-for_each_supported_file_type": {
      "node_id": "for_each_supported_file_type",
      "disambiguation_index": 0,
      "label": "For each supported file type",
      "aliases": [
        "For each supported file type"
      ],
      "types": [
        "description"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL's functionality to extract metadata and perform preprocessing and data cleaning for each file type it supports.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "For each supported file type",
          "local_types": [
            "description"
          ],
          "iri": "Entity-for_each_supported_file_type-Mention-1"
        }
      ],
      "relevance": 0.70458984375
    },
    "Entity-agrif": {
      "node_id": "agrif",
      "disambiguation_index": 0,
      "label": "AGRIF",
      "aliases": [
        "AGRIF"
      ],
      "types": [
        "project"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The AGRIF project, a research initiative that utilizes MEL (Metadata Extractor & Loader) to extract metadata and content-based information from unstructured data sets of heterogeneous file formats.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "AGRIF",
          "local_types": [
            "project"
          ],
          "iri": "Entity-agrif-Mention-1"
        }
      ],
      "relevance": 0.7021484375
    },
    "Entity-it": {
      "node_id": "it",
      "disambiguation_index": 0,
      "label": "it",
      "aliases": [
        "it"
      ],
      "types": [
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL's metadata extractor, which performs basic text analysis tasks such as pattern matching and keyword extraction.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "it",
          "local_types": [
            "system"
          ],
          "iri": "Entity-it-Mention-1"
        }
      ],
      "relevance": 0.69921875
    },
    "Entity-different_source_document_format": {
      "node_id": "different_source_document_format",
      "disambiguation_index": 0,
      "label": "different source document formats",
      "aliases": [
        "different source document formats"
      ],
      "types": [
        "format",
        "document format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Various formats of source documents, such as file types or structures, that MEL supports for extracting metadata and content-based information.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "different source document formats",
          "local_types": [
            "format",
            "document format"
          ],
          "iri": "Entity-different_source_document_format-Mention-1"
        }
      ],
      "relevance": 0.69580078125
    },
    "Entity-basic_text_analysis__such_a_applying_a_configurable_set_of_regular_expression_and_keyword_extraction_task_": {
      "node_id": "basic_text_analysis__such_a_applying_a_configurable_set_of_regular_expression_and_keyword_extraction_task_",
      "disambiguation_index": 0,
      "label": "basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task)",
      "aliases": [
        "basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task)"
      ],
      "types": [
        "analysis",
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A technique used in MEL for extracting metadata and content-based information from documents, involving tasks such as applying regular expressions and keyword extraction.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task)",
          "local_types": [
            "analysis",
            "methodology"
          ],
          "iri": "Entity-basic_text_analysis__such_a_applying_a_configurable_set_of_regular_expression_and_keyword_extraction_task_-Mention-1"
        }
      ],
      "relevance": 0.69384765625
    },
    "Entity-each_document": {
      "node_id": "each_document",
      "disambiguation_index": 0,
      "label": "each document",
      "aliases": [
        "each document"
      ],
      "types": [
        "document",
        "text"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A file in various formats, such as text files, which MEL extracts metadata and content-based information from while performing basic text analysis.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "each document",
          "local_types": [
            "document",
            "text"
          ],
          "iri": "Entity-each_document-Mention-1"
        }
      ],
      "relevance": 0.693359375
    },
    "Entity-a_document__file__set": {
      "node_id": "a_document__file__set",
      "disambiguation_index": 0,
      "label": "a document (file) set",
      "aliases": [
        "a document (file) set"
      ],
      "types": [
        "dataset",
        "data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of files, including various file types and formats, which serves as input for MEL's metadata extraction and processing.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "a document (file) set",
          "local_types": [
            "dataset",
            "data"
          ],
          "iri": "Entity-a_document__file__set-Mention-1"
        }
      ],
      "relevance": 0.6904296875
    },
    "Entity-a_comprehensive_set_of_method_for_metadata_and_content_extraction": {
      "node_id": "a_comprehensive_set_of_method_for_metadata_and_content_extraction",
      "disambiguation_index": 0,
      "label": "a comprehensive set of methods for metadata and content extraction",
      "aliases": [
        "a comprehensive set of methods for metadata and content extraction"
      ],
      "types": [
        "methods",
        "metadata",
        "content"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of integrated techniques for extracting both metadata and content from various file types, generating output in JSON formats.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "a comprehensive set of methods for metadata and content extraction",
          "local_types": [
            "methods",
            "metadata",
            "content"
          ],
          "iri": "Entity-a_comprehensive_set_of_method_for_metadata_and_content_extraction-Mention-1"
        }
      ],
      "relevance": 0.689453125
    },
    "Entity-the_supported_file_type": {
      "node_id": "the_supported_file_type",
      "disambiguation_index": 0,
      "label": "The supported file types",
      "aliases": [
        "The supported file types"
      ],
      "types": [
        "file type"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A list of file formats that can be processed by MEL, a metadata extractor and loader tool.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-6",
          "local_name": "The supported file types",
          "local_types": [
            "file type"
          ],
          "iri": "Entity-the_supported_file_type-Mention-1"
        }
      ],
      "relevance": 0.68603515625
    },
    "Entity-rdf_using_a_variety_of_tool_such_a_j2rm": {
      "node_id": "rdf_using_a_variety_of_tool_such_a_j2rm",
      "disambiguation_index": 0,
      "label": "RDF using a variety of tools such as J2RM",
      "aliases": [
        "RDF using J2RM",
        "RDF using a variety of tools such as J2RM"
      ],
      "types": [
        "technology",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A tool that maps JSON files generated by MEL to Resource Description Format (RDF)",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "RDF using a variety of tools such as J2RM",
          "local_types": [
            "format"
          ],
          "iri": "Entity-rdf_using_a_variety_of_tool_such_a_j2rm-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "RDF using J2RM",
          "local_types": [
            "technology",
            "format"
          ],
          "iri": "Entity-rdf_using_a_variety_of_tool_such_a_j2rm-Mention-2"
        }
      ],
      "relevance": 0.68505859375
    },
    "Entity-the_tnnt_result": {
      "node_id": "the_tnnt_result",
      "disambiguation_index": 0,
      "label": "the TNNT results",
      "aliases": [
        "the TNNT results"
      ],
      "types": [
        "result",
        "study"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The results generated by The NLP-NER Toolkit (TNNT) that automate the extraction task of categorized named entities from MEL's metadata and content-based information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "the TNNT results",
          "local_types": [
            "result",
            "study"
          ],
          "iri": "Entity-the_tnnt_result-Mention-1"
        }
      ],
      "relevance": 0.68359375
    },
    "Entity-mel_a_compared_to_apache_tika": {
      "node_id": "mel_a_compared_to_apache_tika",
      "disambiguation_index": 0,
      "label": "MEL as compared to Apache Tika",
      "aliases": [
        "MEL as compared to Apache Tika"
      ],
      "types": [
        "package"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A lightweight, open-source software package for extracting and processing metadata from various file formats.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "MEL as compared to Apache Tika",
          "local_types": [
            "package"
          ],
          "iri": "Entity-mel_a_compared_to_apache_tika-Mention-1"
        }
      ],
      "relevance": 0.6787109375
    },
    "Entity-four_use_case_document_set": {
      "node_id": "four_use_case_document_set",
      "disambiguation_index": 0,
      "label": "four use case document sets",
      "aliases": [
        "four use case document sets"
      ],
      "types": [
        "dataset",
        "data collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of documents used to demonstrate and evaluate MEL's metadata extraction capabilities, comprising four instances with varying attributes extracted by the tool.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "four use case document sets",
          "local_types": [
            "dataset",
            "data collection"
          ],
          "iri": "Entity-four_use_case_document_set-Mention-1"
        }
      ],
      "relevance": 0.67626953125
    },
    "Entity-more_than_20_different_file_type": {
      "node_id": "more_than_20_different_file_type",
      "disambiguation_index": 0,
      "label": "more than 20 different file types",
      "aliases": [
        "more than 20 different file types",
        "over 20 different file types/formats"
      ],
      "types": [
        "format",
        "file type"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of more than 20 different file types, including various source document formats that MEL supports and can extract metadata from.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "more than 20 different file types",
          "local_types": [
            "file type"
          ],
          "iri": "Entity-more_than_20_different_file_type-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "over 20 different file types/formats",
          "local_types": [
            "file type",
            "format"
          ],
          "iri": "Entity-more_than_20_different_file_type-Mention-2"
        }
      ],
      "relevance": 0.6748046875
    },
    "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type": {
      "node_id": "the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type",
      "disambiguation_index": 0,
      "label": "the theoretical number of attributes that the tool is able to extract per document type",
      "aliases": [
        "the theoretical number of attributes that the tool is able to extract per document type"
      ],
      "types": [
        "attribute",
        "tool",
        "document type"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The maximum amount of metadata and content-based information that MEL can extract per file type, considering its capabilities and configurations.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "the theoretical number of attributes that the tool is able to extract per document type",
          "local_types": [
            "attribute",
            "tool",
            "document type"
          ],
          "iri": "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type-Mention-1"
        }
      ],
      "relevance": 0.67431640625
    },
    "Entity-it_own_specific_processing_model": {
      "node_id": "it_own_specific_processing_model",
      "disambiguation_index": 0,
      "label": "its own specific processing model",
      "aliases": [
        "its own specific processing model"
      ],
      "types": [
        "processing_model"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A unique set of rules and procedures governing how MEL processes metadata extraction tasks specific to each supported file type.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "its own specific processing model",
          "local_types": [
            "processing_model"
          ],
          "iri": "Entity-it_own_specific_processing_model-Mention-1"
        }
      ],
      "relevance": 0.66796875
    },
    "Entity-parameter_and_flag_that_establish_the_initial_setting_related_to_the_document_store__input_document_set__tnnt_general_configuration__file_extension_mapping__the__associated-metadata__processing__table_1___and_regular_expression_to_apply_in_the_text_analysis_task": {
      "node_id": "parameter_and_flag_that_establish_the_initial_setting_related_to_the_document_store__input_document_set__tnnt_general_configuration__file_extension_mapping__the__associated-metadata__processing__table_1___and_regular_expression_to_apply_in_the_text_analysis_task",
      "disambiguation_index": 0,
      "label": "parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task",
      "aliases": [
        "parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task"
      ],
      "types": [
        "configuration",
        "settings"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Initial setup parameters for MEL's metadata extraction and content-based information processing",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task",
          "local_types": [
            "configuration",
            "settings"
          ],
          "iri": "Entity-parameter_and_flag_that_establish_the_initial_setting_related_to_the_document_store__input_document_set__tnnt_general_configuration__file_extension_mapping__the__associated-metadata__processing__table_1___and_regular_expression_to_apply_in_the_text_analysis_task-Mention-1"
        }
      ],
      "relevance": 0.6630859375
    },
    "Entity-property_to_get_a_rich_output_set": {
      "node_id": "property_to_get_a_rich_output_set",
      "disambiguation_index": 0,
      "label": "properties to get a rich output set",
      "aliases": [
        "properties to get a rich output set"
      ],
      "types": [
        "characteristic",
        "attribute",
        "feature"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The characteristics or attributes required by MEL (Metadata Extractor & Loader) to produce comprehensive and detailed metadata extraction results.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "properties to get a rich output set",
          "local_types": [
            "characteristic",
            "attribute",
            "feature"
          ],
          "iri": "Entity-property_to_get_a_rich_output_set-Mention-1"
        }
      ],
      "relevance": 0.662109375
    },
    "Entity-this": {
      "node_id": "this",
      "disambiguation_index": 0,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The integration of MEL's results with JSON-LD ontologies to make extracted metadata 'RDF ready'.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-4",
          "local_name": "This",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this-Mention-1"
        }
      ],
      "relevance": 0.65869140625
    },
    "Entity-last": {
      "node_id": "last",
      "disambiguation_index": 0,
      "label": "Last",
      "aliases": [
        "Last"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "MEL's ability to aid in the information extraction stage of multiple Knowledge Graph Construction Pipelines (KGCPs)",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "Last",
          "local_types": [
            "author"
          ],
          "iri": "Entity-last-Mention-1"
        }
      ],
      "relevance": 0.65673828125
    },
    "Entity-it_related_metadata_and_content-based_information": {
      "node_id": "it_related_metadata_and_content-based_information",
      "disambiguation_index": 0,
      "label": "its related metadata and content-based information",
      "aliases": [
        "its related metadata and content-based information"
      ],
      "types": [
        "metadata",
        "information"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The extracted data, including both metadata (e.g., file properties) and content-based information (e.g., text analysis results), from each input document in a set.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "its related metadata and content-based information",
          "local_types": [
            "metadata",
            "information"
          ],
          "iri": "Entity-it_related_metadata_and_content-based_information-Mention-1"
        }
      ],
      "relevance": 0.65625
    },
    "Entity-each_file_type": {
      "node_id": "each_file_type",
      "disambiguation_index": 0,
      "label": "each file type",
      "aliases": [
        "each file type"
      ],
      "types": [
        "file_type"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A distinct category or format of files within MEL's supported set, each with its own specific processing model and text analysis task.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "each file type",
          "local_types": [
            "file_type"
          ],
          "iri": "Entity-each_file_type-Mention-1"
        }
      ],
      "relevance": 0.65576171875
    },
    "Entity-in_order_to_support_kgcp_task": {
      "node_id": "in_order_to_support_kgcp_task",
      "disambiguation_index": 0,
      "label": "in order to support KGCP tasks",
      "aliases": [
        "in order to support KGCP tasks"
      ],
      "types": [
        "task",
        "KGCP task"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The addition of more file formats to MEL's system on a case-by-case basis for the purpose of supporting Knowledge Graph Construction Pipeline (KGCP) tasks.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "in order to support KGCP tasks",
          "local_types": [
            "task",
            "KGCP task"
          ],
          "iri": "Entity-in_order_to_support_kgcp_task-Mention-1"
        }
      ],
      "relevance": 0.65576171875
    },
    "Entity-tnnt_general_configuration": {
      "node_id": "tnnt_general_configuration",
      "disambiguation_index": 0,
      "label": "TNNT general configuration",
      "aliases": [
        "TNNT general configuration"
      ],
      "types": [
        "configuration settings",
        "metadata"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The general configuration for TNNT (metadata extraction) within MEL's metadata extractor & loader tool.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "TNNT general configuration",
          "local_types": [
            "configuration settings",
            "metadata"
          ],
          "iri": "Entity-tnnt_general_configuration-Mention-1"
        }
      ],
      "relevance": 0.654296875
    },
    "Entity-j2rm__4_": {
      "node_id": "j2rm__4_",
      "disambiguation_index": 0,
      "label": "J2RM [4]",
      "aliases": [
        "J2RM [4]"
      ],
      "types": [
        "tool"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "J2RM, a tool that maps MEL's JSON results to RDF format",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "J2RM [4]",
          "local_types": [
            "tool"
          ],
          "iri": "Entity-j2rm__4_-Mention-1"
        }
      ],
      "relevance": 0.65380859375
    },
    "Entity-_b__easily_be_mapped_to_rdf_using_a_variety_of_tool_such_a_j2rm": {
      "node_id": "_b__easily_be_mapped_to_rdf_using_a_variety_of_tool_such_a_j2rm",
      "disambiguation_index": 0,
      "label": "(b) easily be mapped to RDF using a variety of tools such as J2RM",
      "aliases": [
        "(b) easily be mapped to RDF using a variety of tools such as J2RM"
      ],
      "types": [
        "mapping tool"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "JSON files generated by MEL that can be optionally stored in a document store or easily converted into RDF format using various tools like J2RM.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "(b) easily be mapped to RDF using a variety of tools such as J2RM",
          "local_types": [
            "mapping tool"
          ],
          "iri": "Entity-_b__easily_be_mapped_to_rdf_using_a_variety_of_tool_such_a_j2rm-Mention-1"
        }
      ],
      "relevance": 0.650390625
    },
    "Entity-proper_tool_that_integrate_several_complementary_extraction_method_and_property_to_get_a_rich_output_set": {
      "node_id": "proper_tool_that_integrate_several_complementary_extraction_method_and_property_to_get_a_rich_output_set",
      "disambiguation_index": 0,
      "label": "proper tools that integrate several complementary extraction methods and properties to get a rich output set",
      "aliases": [
        "proper tools that integrate several complementary extraction methods and properties to get a rich output set"
      ],
      "types": [
        "tool",
        "extraction method",
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A tool that combines multiple metadata extraction techniques and features to efficiently process heterogeneous file sets.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "proper tools that integrate several complementary extraction methods and properties to get a rich output set",
          "local_types": [
            "tool",
            "extraction method",
            "property"
          ],
          "iri": "Entity-proper_tool_that_integrate_several_complementary_extraction_method_and_property_to_get_a_rich_output_set-Mention-1"
        }
      ],
      "relevance": 0.6484375
    },
    "Entity-python-based_method_implemented_in_mel": {
      "node_id": "python-based_method_implemented_in_mel",
      "disambiguation_index": 0,
      "label": "Python-based methods implemented in MEL",
      "aliases": [
        "Python-based methods implemented in MEL"
      ],
      "types": [
        "approach",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology that utilizes Python-based programming techniques, integrated with the Modeling Language (MEL), for implementing various approaches.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "Python-based methods implemented in MEL",
          "local_types": [
            "approach",
            "methodology"
          ],
          "iri": "Entity-python-based_method_implemented_in_mel-Mention-1"
        }
      ],
      "relevance": 0.64306640625
    },
    "Entity-heterogeneous_file_set": {
      "node_id": "heterogeneous_file_set",
      "disambiguation_index": 0,
      "label": "heterogeneous file sets",
      "aliases": [
        "heterogeneous file sets"
      ],
      "types": [
        "collection",
        "data source",
        "file set",
        "data set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A collection of files with different formats and contents that require metadata extraction and content-based information processing.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "heterogeneous file sets",
          "local_types": [
            "collection",
            "data source",
            "file set",
            "data set"
          ],
          "iri": "Entity-heterogeneous_file_set-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-to_the_best_of_our_knowledge__there_is_no_package_available_that_fully_integrates_in_one_system": {
      "node_id": "to_the_best_of_our_knowledge__there_is_no_package_available_that_fully_integrates_in_one_system",
      "disambiguation_index": 0,
      "label": "to the best of our knowledge, there is no package available that fully integrates in one system",
      "aliases": [
        "to the best of our knowledge, there is no package available that fully integrates in one system"
      ],
      "types": [
        "package",
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A package or system that integrates multiple methods for metadata and content extraction from common file formats, generating results in JSON structures based on the document object model of each format type.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "to the best of our knowledge, there is no package available that fully integrates in one system",
          "local_types": [
            "package",
            "system"
          ],
          "iri": "Entity-to_the_best_of_our_knowledge__there_is_no_package_available_that_fully_integrates_in_one_system-Mention-1"
        }
      ],
      "relevance": 0.6376953125
    },
    "Entity-of_common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type_.": {
      "node_id": "of_common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type_.",
      "disambiguation_index": 0,
      "label": "of common file formats that generate the results in JSON structures based on the document object model of each format type.",
      "aliases": [
        "of common file formats that generate the results in JSON structures based on the document object model of each format type."
      ],
      "types": [
        "file formats",
        "JSON structures",
        "document object model"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A collection of common file formats that can extract metadata and content information, generating results as JSON structures based on the Document Object Model (DOM) of each format type.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "of common file formats that generate the results in JSON structures based on the document object model of each format type.",
          "local_types": [
            "file formats",
            "JSON structures",
            "document object model"
          ],
          "iri": "Entity-of_common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type_.-Mention-1"
        }
      ],
      "relevance": 0.63330078125
    },
    "Entity-the_xml_output_from_the_nlnz_metadata_extractor_tool__a_java_standalone_tool_that_extract_a_comprehensive_attribute_and_property_list_from_dozen_of_file_format": {
      "node_id": "the_xml_output_from_the_nlnz_metadata_extractor_tool__a_java_standalone_tool_that_extract_a_comprehensive_attribute_and_property_list_from_dozen_of_file_format",
      "disambiguation_index": 0,
      "label": "the XML output from the NLNZ Metadata Extractor tool, a Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats",
      "aliases": [
        "the XML output from the NLNZ Metadata Extractor tool, a Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats"
      ],
      "types": [
        "output",
        "tool"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The XML output generated by the NLNZ Metadata Extractor tool, which provides a comprehensive attribute and property list extracted from various file formats.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "the XML output from the NLNZ Metadata Extractor tool, a Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats",
          "local_types": [
            "output",
            "tool"
          ],
          "iri": "Entity-the_xml_output_from_the_nlnz_metadata_extractor_tool__a_java_standalone_tool_that_extract_a_comprehensive_attribute_and_property_list_from_dozen_of_file_format-Mention-1"
        }
      ],
      "relevance": 0.63037109375
    },
    "Entity-these_task": {
      "node_id": "these_task",
      "disambiguation_index": 0,
      "label": "These tasks",
      "aliases": [
        "These tasks"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Metadata and content-based information extraction tasks from heterogeneous file sets",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "These tasks",
          "local_types": [
            "task"
          ],
          "iri": "Entity-these_task-Mention-1"
        }
      ],
      "relevance": 0.62890625
    },
    "Entity-general_purpose": {
      "node_id": "general_purpose",
      "disambiguation_index": 0,
      "label": "general purpose",
      "aliases": [
        "general purpose"
      ],
      "types": [
        "domain"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A general-purpose mechanism for extracting metadata and content-based information from unstructured data sets of heterogeneous file formats, agnostic to the data sets' domain.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "general purpose",
          "local_types": [
            "domain"
          ],
          "iri": "Entity-general_purpose-Mention-1"
        }
      ],
      "relevance": 0.62890625
    },
    "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set": {
      "node_id": "the_average_of_the_extracted_attribute_from_four_use_case_document_set",
      "disambiguation_index": 0,
      "label": "the average of the extracted attributes from four use case document sets",
      "aliases": [
        "the average of the extracted attributes from four use case document sets"
      ],
      "types": [
        "average",
        "attributes",
        "use cases",
        "documents"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The average number of metadata attributes extracted by MEL from four specific use cases, providing an indication of its performance and capabilities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "the average of the extracted attributes from four use case document sets",
          "local_types": [
            "average",
            "attributes",
            "use cases",
            "documents"
          ],
          "iri": "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set-Mention-1"
        }
      ],
      "relevance": 0.62646484375
    },
    "Entity-nlnz_metadata_extractor_tool": {
      "node_id": "nlnz_metadata_extractor_tool",
      "disambiguation_index": 0,
      "label": "NLNZ Metadata Extractor tool",
      "aliases": [
        "NLNZ Metadata Extractor tool",
        "NLNZ Metadata Extractor",
        "the NLNZ Metadata Extractor tool"
      ],
      "types": [
        "extractor",
        "software application",
        "software",
        "tool"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A Java-based standalone tool that extracts a comprehensive attribute and property list from dozens of file formats.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "NLNZ Metadata Extractor tool",
          "local_types": [
            "software application",
            "software",
            "tool"
          ],
          "iri": "Entity-nlnz_metadata_extractor_tool-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "NLNZ Metadata Extractor",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-nlnz_metadata_extractor_tool-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "the NLNZ Metadata Extractor tool",
          "local_types": [
            "extractor",
            "tool"
          ],
          "iri": "Entity-nlnz_metadata_extractor_tool-Mention-3"
        }
      ],
      "relevance": 0.62158203125
    },
    "Entity-metadata_and_content_extraction": {
      "node_id": "metadata_and_content_extraction",
      "disambiguation_index": 0,
      "label": "metadata and content extraction",
      "aliases": [
        "metadata extraction",
        "metadata and content extraction"
      ],
      "types": [
        "data processing",
        "information retrieval"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of extracting relevant information or metadata from various types of unstructured data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "metadata and content extraction",
          "local_types": [
            "data processing",
            "information retrieval"
          ],
          "iri": "Entity-metadata_and_content_extraction-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "metadata extraction",
          "local_types": [
            "data processing",
            "information retrieval"
          ],
          "iri": "Entity-metadata_and_content_extraction-Mention-2"
        }
      ],
      "relevance": 0.61767578125
    },
    "Entity-comprehensive_metadata_extraction_support_of_various_file_type_and_format": {
      "node_id": "comprehensive_metadata_extraction_support_of_various_file_type_and_format",
      "disambiguation_index": 0,
      "label": "comprehensive metadata extraction support of various file types and formats",
      "aliases": [
        "comprehensive metadata extraction support of various file types and formats"
      ],
      "types": [
        "feature"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A feature that provides extensive support for extracting metadata from a wide range of file types and formats.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "comprehensive metadata extraction support of various file types and formats",
          "local_types": [
            "feature"
          ],
          "iri": "Entity-comprehensive_metadata_extraction_support_of_various_file_type_and_format-Mention-1"
        }
      ],
      "relevance": 0.6171875
    },
    "Entity-metadata_extraction_of_common_file_format": {
      "node_id": "metadata_extraction_of_common_file_format",
      "disambiguation_index": 0,
      "label": "metadata extraction of common file formats",
      "aliases": [
        "metadata extraction of common file formats"
      ],
      "types": [
        "task",
        "functionality"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of extracting metadata from various common file formats, such as text files, images, and documents.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "metadata extraction of common file formats",
          "local_types": [
            "task",
            "functionality"
          ],
          "iri": "Entity-metadata_extraction_of_common_file_format-Mention-1"
        }
      ],
      "relevance": 0.6171875
    },
    "Entity-the_metadata_and_content-based_information_extraction_task": {
      "node_id": "the_metadata_and_content-based_information_extraction_task",
      "disambiguation_index": 0,
      "label": "The metadata and content-based information extraction tasks",
      "aliases": [
        "The metadata and content-based information extraction tasks"
      ],
      "types": [
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of processes for extracting relevant data and metadata from various sources",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "The metadata and content-based information extraction tasks",
          "local_types": [
            "task"
          ],
          "iri": "Entity-the_metadata_and_content-based_information_extraction_task-Mention-1"
        }
      ],
      "relevance": 0.615234375
    },
    "Entity-content-based_information": {
      "node_id": "content-based_information",
      "disambiguation_index": 0,
      "label": "content-based information",
      "aliases": [
        "content-based information"
      ],
      "types": [
        "text analysis",
        "insights"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Information derived from the content of documents, typically including extracted metadata and insights gained through text analysis.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "content-based information",
          "local_types": [
            "text analysis",
            "insights"
          ],
          "iri": "Entity-content-based_information-Mention-1"
        }
      ],
      "relevance": 0.61376953125
    },
    "Entity-nlp_tool_and_ner_model": {
      "node_id": "nlp_tool_and_ner_model",
      "disambiguation_index": 0,
      "label": "NLP tools and NER models",
      "aliases": [
        "NLP tools and NER models"
      ],
      "types": [
        "tools",
        "models"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of software applications and algorithms for natural language processing (NLP) and named entity recognition (NER), used to extract categorized information from text.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "NLP tools and NER models",
          "local_types": [
            "tools",
            "models"
          ],
          "iri": "Entity-nlp_tool_and_ner_model-Mention-1"
        }
      ],
      "relevance": 0.609375
    },
    "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set": {
      "node_id": "primitive_for_metadata_and_content_extraction_from_unstructured_data_set",
      "disambiguation_index": 0,
      "label": "primitives for metadata and content extraction from unstructured data sets",
      "aliases": [
        "primitives for metadata and content extraction from unstructured data sets"
      ],
      "types": [
        "extraction"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of fundamental methods or algorithms used to extract metadata and content from unstructured data sets.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "primitives for metadata and content extraction from unstructured data sets",
          "local_types": [
            "extraction"
          ],
          "iri": "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set-Mention-1"
        }
      ],
      "relevance": 0.60888671875
    },
    "Entity-although_there_is_a_wide_range_of_python-based_tool": {
      "node_id": "although_there_is_a_wide_range_of_python-based_tool",
      "disambiguation_index": 0,
      "label": "Although there is a wide range of Python-based tools",
      "aliases": [
        "Although there is a wide range of Python-based tools"
      ],
      "types": [
        "range",
        "tools"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Python libraries and tools for metadata extraction",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "Although there is a wide range of Python-based tools",
          "local_types": [
            "range",
            "tools"
          ],
          "iri": "Entity-although_there_is_a_wide_range_of_python-based_tool-Mention-1"
        }
      ],
      "relevance": 0.6083984375
    },
    "Entity-the_result_(1)": {
      "node_id": "the_result_(1)",
      "disambiguation_index": 1,
      "label": "the results",
      "aliases": [
        "the results"
      ],
      "types": [
        "result",
        "data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The extracted metadata and content-based information generated as JSON files, which can be stored in a document store.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "the results",
          "local_types": [
            "result",
            "data"
          ],
          "iri": "Entity-the_result_(1)-Mention-1"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-heterogeneous_format": {
      "node_id": "heterogeneous_format",
      "disambiguation_index": 0,
      "label": "heterogeneous formats",
      "aliases": [
        "heterogeneous formats"
      ],
      "types": [
        "format",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Unstructured data sets in various file types that require metadata and content extraction",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "heterogeneous formats",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-heterogeneous_format-Mention-1"
        }
      ],
      "relevance": 0.6025390625
    },
    "Entity-metadata_extraction_support": {
      "node_id": "metadata_extraction_support",
      "disambiguation_index": 0,
      "label": "metadata extraction support",
      "aliases": [
        "metadata extraction support"
      ],
      "types": [
        "functionality",
        "feature"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A functionality or feature that enables the automatic extraction of metadata from different sources.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "metadata extraction support",
          "local_types": [
            "functionality",
            "feature"
          ],
          "iri": "Entity-metadata_extraction_support-Mention-1"
        }
      ],
      "relevance": 0.60009765625
    },
    "Entity-_a__optionally_be_stored_in_a_document_store": {
      "node_id": "_a__optionally_be_stored_in_a_document_store",
      "disambiguation_index": 0,
      "label": "(a) optionally be stored in a document store",
      "aliases": [
        "(a) optionally be stored in a document store"
      ],
      "types": [
        "storage option"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The option to store JSON files generated by MEL.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "(a) optionally be stored in a document store",
          "local_types": [
            "storage option"
          ],
          "iri": "Entity-_a__optionally_be_stored_in_a_document_store-Mention-1"
        }
      ],
      "relevance": 0.599609375
    },
    "Entity-ole_2_file_type": {
      "node_id": "ole_2_file_type",
      "disambiguation_index": 0,
      "label": "OLE 2 file types",
      "aliases": [
        "OLE 2 file types"
      ],
      "types": [
        "file type"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of file that, along with .docm files, can only be processed by MEL (Metadata Extractor & Loader) on Windows operating systems.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-8",
          "local_name": "OLE 2 file types",
          "local_types": [
            "file type"
          ],
          "iri": "Entity-ole_2_file_type-Mention-1"
        }
      ],
      "relevance": 0.59912109375
    },
    "Entity-content_extraction_and_analysis": {
      "node_id": "content_extraction_and_analysis",
      "disambiguation_index": 0,
      "label": "content extraction and analysis",
      "aliases": [
        "content extraction and analysis"
      ],
      "types": [
        "process",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of automatically extracting relevant information from unstructured data sources and analyzing it to identify patterns or insights.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "content extraction and analysis",
          "local_types": [
            "process",
            "methodology"
          ],
          "iri": "Entity-content_extraction_and_analysis-Mention-1"
        }
      ],
      "relevance": 0.59814453125
    },
    "Entity-metadata_and_content-based_information": {
      "node_id": "metadata_and_content-based_information",
      "disambiguation_index": 0,
      "label": "metadata and content-based information",
      "aliases": [
        "content-based information",
        "metadata and content-based information"
      ],
      "types": [
        "information",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Information extracted or derived from various sources, including structured data and unorganized text.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "metadata and content-based information",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-metadata_and_content-based_information-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "content-based information",
          "local_types": [
            "data"
          ],
          "iri": "Entity-metadata_and_content-based_information-Mention-2"
        }
      ],
      "relevance": 0.591796875
    },
    "Entity-a_project": {
      "node_id": "a_project",
      "disambiguation_index": 0,
      "label": "a project",
      "aliases": [
        "a project"
      ],
      "types": [
        "project"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The effort or initiative aimed at containerizing and integrating the MEL+TNNT tools.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-6",
          "local_name": "a project",
          "local_types": [
            "project"
          ],
          "iri": "Entity-a_project-Mention-1"
        }
      ],
      "relevance": 0.59033203125
    },
    "Entity-the_result": {
      "node_id": "the_result",
      "disambiguation_index": 0,
      "label": "The results",
      "aliases": [
        "The results"
      ],
      "types": [
        "result"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The results refer to the metadata extraction outputs generated as JSON files that can optionally be stored in a document store or easily mapped to RDF.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "The results",
          "local_types": [
            "result"
          ],
          "iri": "Entity-the_result-Mention-1"
        }
      ],
      "relevance": 0.58740234375
    },
    "Entity-the_near_future_(1)": {
      "node_id": "the_near_future_(1)",
      "disambiguation_index": 1,
      "label": "the near future",
      "aliases": [
        "the near future"
      ],
      "types": [
        "timeframe"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The period of time when plans are made for integrating MEL+TNNT tools with JSON-LD ontologies and containerising them.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-6",
          "local_name": "the near future",
          "local_types": [
            "timeframe"
          ],
          "iri": "Entity-the_near_future_(1)-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-content-based_information_extraction_task": {
      "node_id": "content-based_information_extraction_task",
      "disambiguation_index": 0,
      "label": "content-based information extraction tasks",
      "aliases": [
        "content-based information extraction tasks"
      ],
      "types": [
        "process",
        "information extraction",
        "task",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A process or algorithm that extracts relevant information from content based on its characteristics, rather than relying solely on predefined rules.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "content-based information extraction tasks",
          "local_types": [
            "process",
            "information extraction",
            "task",
            "algorithm"
          ],
          "iri": "Entity-content-based_information_extraction_task-Mention-1"
        }
      ],
      "relevance": 0.58203125
    },
    "Entity-the_content_and_metadata_of_all_supported_file_type": {
      "node_id": "the_content_and_metadata_of_all_supported_file_type",
      "disambiguation_index": 0,
      "label": "the content and metadata of all supported file types",
      "aliases": [
        "the content and metadata of all supported file types"
      ],
      "types": [
        "information",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of data containing information about various file formats, including their contents and attributes.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "the content and metadata of all supported file types",
          "local_types": [
            "information",
            "data"
          ],
          "iri": "Entity-the_content_and_metadata_of_all_supported_file_type-Mention-1"
        }
      ],
      "relevance": 0.580078125
    },
    "Entity-tool": {
      "node_id": "tool",
      "disambiguation_index": 0,
      "label": "tool",
      "aliases": [
        "tool"
      ],
      "types": [
        "system",
        "software",
        "software tool",
        "information extraction system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software tool or system designed to extract and process information, potentially with capabilities to analyze specific types of documents.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "tool",
          "local_types": [
            "software tool",
            "information extraction system"
          ],
          "iri": "Entity-tool-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "tool",
          "local_types": [
            "software",
            "system"
          ],
          "iri": "Entity-tool-Mention-2"
        }
      ],
      "relevance": 0.57861328125
    },
    "Entity-text_analysis_task": {
      "node_id": "text_analysis_task",
      "disambiguation_index": 0,
      "label": "text analysis task",
      "aliases": [
        "text analysis task"
      ],
      "types": [
        "information processing",
        "knowledge extraction"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A process of analyzing and extracting information from written content.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "text analysis task",
          "local_types": [
            "information processing",
            "knowledge extraction"
          ],
          "iri": "Entity-text_analysis_task-Mention-1"
        }
      ],
      "relevance": 0.5771484375
    },
    "Entity-several_complementary_extraction_method": {
      "node_id": "several_complementary_extraction_method",
      "disambiguation_index": 0,
      "label": "several complementary extraction methods",
      "aliases": [
        "several complementary extraction methods"
      ],
      "types": [
        "algorithm",
        "technique",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of techniques used together to extract information from various sources.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "several complementary extraction methods",
          "local_types": [
            "algorithm",
            "technique",
            "methodology"
          ],
          "iri": "Entity-several_complementary_extraction_method-Mention-1"
        }
      ],
      "relevance": 0.576171875
    },
    "Entity-the_text_analysis_task": {
      "node_id": "the_text_analysis_task",
      "disambiguation_index": 0,
      "label": "the text analysis task",
      "aliases": [
        "the text analysis task"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of analyzing and extracting relevant information from unstructured text data.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "the text analysis task",
          "local_types": [
            "task"
          ],
          "iri": "Entity-the_text_analysis_task-Mention-1"
        }
      ],
      "relevance": 0.57568359375
    },
    "Entity-tnnt": {
      "node_id": "tnnt",
      "disambiguation_index": 0,
      "label": "TNNT",
      "aliases": [
        "TNNT"
      ],
      "types": [
        "technology",
        "software",
        "model",
        "ontology",
        "system",
        "tool"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A technology, software model or system that enables mapping between different data formats",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "TNNT",
          "local_types": [
            "ontology",
            "software",
            "tool"
          ],
          "iri": "Entity-tnnt-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "TNNT",
          "local_types": [
            "technology",
            "software",
            "model",
            "system",
            "tool"
          ],
          "iri": "Entity-tnnt-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "TNNT",
          "local_types": [
            "technology",
            "system",
            "tool"
          ],
          "iri": "Entity-tnnt-Mention-3"
        }
      ],
      "relevance": 0.57470703125
    },
    "Entity-ole_2_file_type_(1)": {
      "node_id": "ole_2_file_type_(1)",
      "disambiguation_index": 1,
      "label": "OLE 2 file types",
      "aliases": [
        "OLE 2 file types"
      ],
      "types": [
        "file type",
        "format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of file that requires specific processing using the 'olemata' tool within MEL.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-9",
          "local_name": "OLE 2 file types",
          "local_types": [
            "file type",
            "format"
          ],
          "iri": "Entity-ole_2_file_type_(1)-Mention-1"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-the_third_column": {
      "node_id": "the_third_column",
      "disambiguation_index": 0,
      "label": "The third column",
      "aliases": [
        "The third column"
      ],
      "types": [
        "column"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The third column refers to a table or data structure that displays theoretical number of attributes that MEL can extract per document type, along with the average extracted attributes from four use case document sets.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "The third column",
          "local_types": [
            "column"
          ],
          "iri": "Entity-the_third_column-Mention-1"
        }
      ],
      "relevance": 0.572265625
    },
    "Entity-pattern_matching_and_keyword_extraction": {
      "node_id": "pattern_matching_and_keyword_extraction",
      "disambiguation_index": 0,
      "label": "pattern matching and keyword extraction",
      "aliases": [
        "pattern matching and keyword extraction"
      ],
      "types": [
        "technique",
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of identifying specific patterns or structures within text data, as well as extracting relevant keywords and phrases.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "pattern matching and keyword extraction",
          "local_types": [
            "technique",
            "method"
          ],
          "iri": "Entity-pattern_matching_and_keyword_extraction-Mention-1"
        }
      ],
      "relevance": 0.56982421875
    },
    "Entity-agrif_project": {
      "node_id": "agrif_project",
      "disambiguation_index": 0,
      "label": "AGRIF project",
      "aliases": [
        "the AGRIF project",
        "AGRIF project"
      ],
      "types": [
        "research project",
        "AGRIF",
        "research initiative",
        "project",
        "initiative"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The AGRIF project, a research initiative that involves testing MEL's capabilities on thousands of documents using different formats and datasets.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "AGRIF project",
          "local_types": [
            "research project",
            "initiative",
            "project",
            "research initiative"
          ],
          "iri": "Entity-agrif_project-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "the AGRIF project",
          "local_types": [
            "project",
            "AGRIF"
          ],
          "iri": "Entity-agrif_project-Mention-2"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-input_document_set": {
      "node_id": "input_document_set",
      "disambiguation_index": 0,
      "label": "input document sets",
      "aliases": [
        "input document sets"
      ],
      "types": [
        "data set",
        "collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of documents or files used as input for a specific process or analysis.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "input document sets",
          "local_types": [
            "data set",
            "collection"
          ],
          "iri": "Entity-input_document_set-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-python-based_tool_and_library": {
      "node_id": "python-based_tool_and_library",
      "disambiguation_index": 0,
      "label": "Python-based tools and libraries",
      "aliases": [
        "Python-based tools and libraries"
      ],
      "types": [
        "software",
        "programming resources"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of software tools and programming resources developed using Python, designed to facilitate various tasks or operations.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "Python-based tools and libraries",
          "local_types": [
            "software",
            "programming resources"
          ],
          "iri": "Entity-python-based_tool_and_library-Mention-1"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-metadata_set": {
      "node_id": "metadata_set",
      "disambiguation_index": 0,
      "label": "metadata sets",
      "aliases": [
        "metadata sets"
      ],
      "types": [
        "information",
        "data set",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Collections of structured data or information",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "metadata sets",
          "local_types": [
            "information",
            "data set",
            "data"
          ],
          "iri": "Entity-metadata_set-Mention-1"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-rdf_ready": {
      "node_id": "rdf_ready",
      "disambiguation_index": 0,
      "label": "RDF ready",
      "aliases": [
        "RDF ready"
      ],
      "types": [
        "metadata standard",
        "data standard",
        "format",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of data or metadata formatted according to the Resource Description Framework (RDF) standard, making it compatible with RDF-based systems and applications.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "RDF ready",
          "local_types": [
            "metadata standard",
            "data standard",
            "format",
            "standard"
          ],
          "iri": "Entity-rdf_ready-Mention-1"
        }
      ],
      "relevance": 0.56591796875
    },
    "Entity-j2rm": {
      "node_id": "j2rm",
      "disambiguation_index": 0,
      "label": "J2RM",
      "aliases": [
        "J2RM"
      ],
      "types": [
        "software",
        "RDF mapping software",
        "tool",
        "framework",
        "resource"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "J2RM: A tool for mapping JSON files to RDF (Resource Description Framework)",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "J2RM",
          "local_types": [
            "RDF mapping software",
            "software",
            "tool"
          ],
          "iri": "Entity-j2rm-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "J2RM",
          "local_types": [
            "framework",
            "resource",
            "software",
            "tool"
          ],
          "iri": "Entity-j2rm-Mention-2"
        }
      ],
      "relevance": 0.564453125
    },
    "Entity-keyword_extraction": {
      "node_id": "keyword_extraction",
      "disambiguation_index": 0,
      "label": "keyword extraction",
      "aliases": [
        "keyword extraction task",
        "keyword extraction"
      ],
      "types": [
        "natural language processing",
        "method",
        "technique",
        "information retrieval"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of automatically identifying key words or phrases from text data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "keyword extraction",
          "local_types": [
            "technique",
            "method"
          ],
          "iri": "Entity-keyword_extraction-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "keyword extraction task",
          "local_types": [
            "natural language processing",
            "information retrieval"
          ],
          "iri": "Entity-keyword_extraction-Mention-2"
        }
      ],
      "relevance": 0.5634765625
    },
    "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_": {
      "node_id": "basic_text_analysis_task__pattern_matching_and_keyword_extraction_",
      "disambiguation_index": 0,
      "label": "basic text analysis tasks (pattern matching and keyword extraction)",
      "aliases": [
        "basic text analysis tasks",
        "basic text analysis tasks (pattern matching and keyword extraction)"
      ],
      "types": [
        "text analysis",
        "analysis",
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Basic text analysis techniques, including pattern matching and keyword extraction.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "basic text analysis tasks (pattern matching and keyword extraction)",
          "local_types": [
            "text analysis",
            "analysis"
          ],
          "iri": "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "basic text analysis tasks",
          "local_types": [
            "task",
            "text analysis"
          ],
          "iri": "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_-Mention-2"
        }
      ],
      "relevance": 0.56201171875
    },
    "Entity-heterogeneous_document_set": {
      "node_id": "heterogeneous_document_set",
      "disambiguation_index": 0,
      "label": "heterogeneous document sets",
      "aliases": [
        "heterogeneous document sets"
      ],
      "types": [
        "data set",
        "collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or set of documents that vary in terms of their type, structure, or content.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "heterogeneous document sets",
          "local_types": [
            "data set",
            "collection"
          ],
          "iri": "Entity-heterogeneous_document_set-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-document_set": {
      "node_id": "document_set",
      "disambiguation_index": 0,
      "label": "document set",
      "aliases": [
        "document set"
      ],
      "types": [
        "data collection",
        "dataset",
        "file type",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of documents or files that are organized for a specific purpose",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "document set",
          "local_types": [
            "data collection",
            "dataset",
            "file type",
            "data"
          ],
          "iri": "Entity-document_set-Mention-1"
        }
      ],
      "relevance": 0.560546875
    },
    "Entity-document": {
      "node_id": "document",
      "disambiguation_index": 0,
      "label": "document",
      "aliases": [
        "document",
        "documents"
      ],
      "types": [
        "file",
        "information",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A written or printed piece of information, typically in physical form, containing data, metadata, and/or content.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "document",
          "local_types": [
            "file",
            "data"
          ],
          "iri": "Entity-document-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "documents",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-document-Mention-2"
        }
      ],
      "relevance": 0.55908203125
    },
    "Entity-kgcp": {
      "node_id": "kgcp",
      "disambiguation_index": 0,
      "label": "KGCP",
      "aliases": [
        "KGCP",
        "Knowledge Graph Construction Pipelines (KGCP)"
      ],
      "types": [
        "process",
        "methodology",
        "pipeline",
        "knowledge graph construction process",
        "project",
        "concept",
        "task",
        "knowledge graph construction",
        "framework",
        "initiative"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Knowledge Graph Construction Pipelines",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "KGCP",
          "local_types": [
            "task",
            "project"
          ],
          "iri": "Entity-kgcp-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "KGCP",
          "local_types": [
            "knowledge graph construction process"
          ],
          "iri": "Entity-kgcp-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "KGCP",
          "local_types": [
            "concept",
            "framework"
          ],
          "iri": "Entity-kgcp-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "KGCP",
          "local_types": [
            "knowledge graph construction process",
            "initiative",
            "project"
          ],
          "iri": "Entity-kgcp-Mention-4"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graph Construction Pipelines (KGCP)",
          "local_types": [
            "process",
            "knowledge graph construction",
            "methodology",
            "pipeline"
          ],
          "iri": "Entity-kgcp-Mention-5"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-metadata": {
      "node_id": "metadata",
      "disambiguation_index": 0,
      "label": "metadata",
      "aliases": [
        "metadata"
      ],
      "types": [
        "description",
        "data",
        "information",
        "content-based information",
        "details"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Detailed data or information about a topic, often used to describe characteristics or attributes",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "metadata",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-metadata-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "metadata",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-metadata-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "metadata",
          "local_types": [
            "content-based information",
            "information"
          ],
          "iri": "Entity-metadata-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "metadata",
          "local_types": [
            "information",
            "details"
          ],
          "iri": "Entity-metadata-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "metadata",
          "local_types": [
            "information",
            "data"
          ],
          "iri": "Entity-metadata-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "metadata",
          "local_types": [
            "information",
            "description"
          ],
          "iri": "Entity-metadata-Mention-6"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-knowledge_graph_construction_pipeline": {
      "node_id": "knowledge_graph_construction_pipeline",
      "disambiguation_index": 0,
      "label": "Knowledge Graph Construction Pipelines",
      "aliases": [
        "Knowledge Graph Construction Pipelines"
      ],
      "types": [
        "framework",
        "concept",
        "pipeline"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of processes or procedures used to construct and build a knowledge graph from various data sources.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graph Construction Pipelines",
          "local_types": [
            "framework",
            "concept",
            "pipeline"
          ],
          "iri": "Entity-knowledge_graph_construction_pipeline-Mention-1"
        }
      ],
      "relevance": 0.5537109375
    },
    "Entity-regular_expression_and_keyword_extraction_task": {
      "node_id": "regular_expression_and_keyword_extraction_task",
      "disambiguation_index": 0,
      "label": "regular expressions and keyword extraction task",
      "aliases": [
        "regular expressions and keyword extraction task"
      ],
      "types": [
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique that uses regular expressions to extract specific information from text data, often in combination with keyword extraction methods.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "regular expressions and keyword extraction task",
          "local_types": [
            "technique"
          ],
          "iri": "Entity-regular_expression_and_keyword_extraction_task-Mention-1"
        }
      ],
      "relevance": 0.552734375
    },
    "Entity-ner_model": {
      "node_id": "ner_model",
      "disambiguation_index": 0,
      "label": "NER models",
      "aliases": [
        "NER models"
      ],
      "types": [
        "algorithm",
        "model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Computer algorithms or systems that identify named entities in unstructured text.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "NER models",
          "local_types": [
            "algorithm",
            "model"
          ],
          "iri": "Entity-ner_model-Mention-1"
        }
      ],
      "relevance": 0.55126953125
    },
    "Entity-json_file": {
      "node_id": "json_file",
      "disambiguation_index": 0,
      "label": "JSON files",
      "aliases": [
        "JSON files",
        "JSON file"
      ],
      "types": [
        "data storage format",
        "file format",
        "data format",
        "data storage",
        "file type",
        "data type",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of file format used for storing structured data",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "JSON files",
          "local_types": [
            "data storage format",
            "file format",
            "data format",
            "data storage",
            "file type",
            "data type",
            "format"
          ],
          "iri": "Entity-json_file-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "JSON file",
          "local_types": [
            "file format",
            "data storage"
          ],
          "iri": "Entity-json_file-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "JSON file",
          "local_types": [
            "file format",
            "data storage"
          ],
          "iri": "Entity-json_file-Mention-3"
        }
      ],
      "relevance": 0.54833984375
    },
    "Entity-regular_expression": {
      "node_id": "regular_expression",
      "disambiguation_index": 0,
      "label": "regular expressions",
      "aliases": [
        "regular expressions"
      ],
      "types": [
        "pattern matching",
        "pattern recognition",
        "text analysis technique",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A syntax-based pattern-matching technique used to search, validate, and extract specific patterns from text.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "regular expressions",
          "local_types": [
            "pattern matching",
            "pattern recognition",
            "text analysis technique",
            "algorithm"
          ],
          "iri": "Entity-regular_expression-Mention-1"
        }
      ],
      "relevance": 0.54736328125
    },
    "Entity-heterogeneous_file_format": {
      "node_id": "heterogeneous_file_format",
      "disambiguation_index": 0,
      "label": "heterogeneous file formats",
      "aliases": [
        "heterogeneous file formats"
      ],
      "types": [
        "format",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of different digital file types with varying structures and encoding methods.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "heterogeneous file formats",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-heterogeneous_file_format-Mention-1"
        }
      ],
      "relevance": 0.546875
    },
    "Entity-unstructured_data_set_of_heterogeneous_file_format": {
      "node_id": "unstructured_data_set_of_heterogeneous_file_format",
      "disambiguation_index": 0,
      "label": "unstructured data sets of heterogeneous file formats",
      "aliases": [
        "unstructured data sets of heterogeneous file formats"
      ],
      "types": [
        "dataset",
        "file format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of files with diverse formats that do not follow a specific structure or organization.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "unstructured data sets of heterogeneous file formats",
          "local_types": [
            "dataset",
            "file format"
          ],
          "iri": "Entity-unstructured_data_set_of_heterogeneous_file_format-Mention-1"
        }
      ],
      "relevance": 0.54638671875
    },
    "Entity-nlp_tool": {
      "node_id": "nlp_tool",
      "disambiguation_index": 0,
      "label": "NLP tools",
      "aliases": [
        "NLP tools"
      ],
      "types": [
        "technology",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of technologies or methodologies used for processing, analyzing, and understanding natural language.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "NLP tools",
          "local_types": [
            "technology",
            "methodology"
          ],
          "iri": "Entity-nlp_tool-Mention-1"
        }
      ],
      "relevance": 0.54541015625
    },
    "Entity-json_result_file": {
      "node_id": "json_result_file",
      "disambiguation_index": 0,
      "label": "JSON result files",
      "aliases": [
        "JSON result files"
      ],
      "types": [
        "data format",
        "file format",
        "structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of file that contains data in JavaScript Object Notation format, used for storing and exchanging structured data.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "JSON result files",
          "local_types": [
            "data format",
            "file format",
            "structure"
          ],
          "iri": "Entity-json_result_file-Mention-1"
        }
      ],
      "relevance": 0.54541015625
    },
    "Entity-json-ld_annotation": {
      "node_id": "json-ld_annotation",
      "disambiguation_index": 0,
      "label": "JSON-LD annotations",
      "aliases": [
        "JSON-LD annotations"
      ],
      "types": [
        "data format",
        "annotation",
        "ontology",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standardized format used to add semantic meaning and context to JSON data by providing machine-readable descriptions of the entities, properties, and relationships within.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "JSON-LD annotations",
          "local_types": [
            "data format",
            "annotation",
            "ontology",
            "standard"
          ],
          "iri": "Entity-json-ld_annotation-Mention-1"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-the_one_of_apache_tika": {
      "node_id": "the_one_of_apache_tika",
      "disambiguation_index": 0,
      "label": "the ones of Apache Tika",
      "aliases": [
        "the ones of Apache Tika"
      ],
      "types": [
        "goals"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Extractors or parsers developed by Apache Tika, responsible for extracting metadata from various file formats.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "the ones of Apache Tika",
          "local_types": [
            "goals"
          ],
          "iri": "Entity-the_one_of_apache_tika-Mention-1"
        }
      ],
      "relevance": 0.54345703125
    },
    "Entity-text_analysis": {
      "node_id": "text_analysis",
      "disambiguation_index": 0,
      "label": "text analysis",
      "aliases": [
        "text analysis"
      ],
      "types": [
        "task",
        "process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of analyzing written or printed text to extract information, identify patterns, and draw conclusions.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "text analysis",
          "local_types": [
            "task",
            "process"
          ],
          "iri": "Entity-text_analysis-Mention-1"
        }
      ],
      "relevance": 0.5419921875
    },
    "Entity-a_complete_and_complex_java-based_general-purpose_system": {
      "node_id": "a_complete_and_complex_java-based_general-purpose_system",
      "disambiguation_index": 0,
      "label": "a complete and complex Java-based general-purpose system",
      "aliases": [
        "a complete and complex Java-based general-purpose system"
      ],
      "types": [
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Apache Tika: a comprehensive and current state-of-the-art tool for content extraction and analysis",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "a complete and complex Java-based general-purpose system",
          "local_types": [
            "system"
          ],
          "iri": "Entity-a_complete_and_complex_java-based_general-purpose_system-Mention-1"
        }
      ],
      "relevance": 0.5400390625
    },
    "Entity-unstructured_information_encoded_in_different_source_document_format": {
      "node_id": "unstructured_information_encoded_in_different_source_document_format",
      "disambiguation_index": 0,
      "label": "unstructured information encoded in different source document formats",
      "aliases": [
        "unstructured information encoded in different source document formats"
      ],
      "types": [
        "data format",
        "information structure",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Unorganized data stored in various file types",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "unstructured information encoded in different source document formats",
          "local_types": [
            "data format",
            "information structure",
            "information"
          ],
          "iri": "Entity-unstructured_information_encoded_in_different_source_document_format-Mention-1"
        }
      ],
      "relevance": 0.5390625
    },
    "Entity-configuration_json_file": {
      "node_id": "configuration_json_file",
      "disambiguation_index": 0,
      "label": "configuration JSON file",
      "aliases": [
        "configuration JSON file"
      ],
      "types": [
        "file format",
        "settings file",
        "setting",
        "data",
        "parameter definition",
        "file type",
        "file",
        "settings document",
        "settings"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A structured document that defines a set of parameters or settings for configuring specific aspects of an application's behavior.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "configuration JSON file",
          "local_types": [
            "file format",
            "settings file",
            "setting",
            "data",
            "parameter definition",
            "file type",
            "file",
            "settings document",
            "settings"
          ],
          "iri": "Entity-configuration_json_file-Mention-1"
        }
      ],
      "relevance": 0.5390625
    },
    "Entity-file_format_a_json_object": {
      "node_id": "file_format_a_json_object",
      "disambiguation_index": 0,
      "label": "file formats as JSON objects",
      "aliases": [
        "file formats as JSON objects"
      ],
      "types": [
        "format",
        "JSON object"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A representation of digital files using JavaScript Object Notation (JSON) syntax, which defines a standardized way to encode and decode data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "file formats as JSON objects",
          "local_types": [
            "format",
            "JSON object"
          ],
          "iri": "Entity-file_format_a_json_object-Mention-1"
        }
      ],
      "relevance": 0.53857421875
    },
    "Entity-json_result": {
      "node_id": "json_result",
      "disambiguation_index": 0,
      "label": "JSON results",
      "aliases": [
        "JSON results"
      ],
      "types": [
        "data format",
        "output",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A format for representing structured data",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "JSON results",
          "local_types": [
            "data",
            "output"
          ],
          "iri": "Entity-json_result-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "JSON results",
          "local_types": [
            "data format",
            "output"
          ],
          "iri": "Entity-json_result-Mention-2"
        }
      ],
      "relevance": 0.53564453125
    },
    "Entity-json_object": {
      "node_id": "json_object",
      "disambiguation_index": 0,
      "label": "JSON objects",
      "aliases": [
        "JSON objects"
      ],
      "types": [
        "format",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of data structure used for exchanging structured data between applications, typically consisting of key-value pairs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "JSON objects",
          "local_types": [
            "format",
            "data structure"
          ],
          "iri": "Entity-json_object-Mention-1"
        }
      ],
      "relevance": 0.533203125
    },
    "Entity-apache_tika": {
      "node_id": "apache_tika",
      "disambiguation_index": 0,
      "label": "Apache Tika",
      "aliases": [
        "Apache Tika"
      ],
      "types": [
        "project",
        "software",
        "system",
        "tool"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Apache Tika: A comprehensive, open-source software project for content extraction and analysis.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "Apache Tika",
          "local_types": [
            "system",
            "software",
            "tool"
          ],
          "iri": "Entity-apache_tika-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "Apache Tika",
          "local_types": [
            "project",
            "software",
            "tool"
          ],
          "iri": "Entity-apache_tika-Mention-2"
        }
      ],
      "relevance": 0.53271484375
    },
    "Entity-a_document_store": {
      "node_id": "a_document_store",
      "disambiguation_index": 0,
      "label": "a document store",
      "aliases": [
        "a document store"
      ],
      "types": [
        "database",
        "store"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A repository that stores documents and their related metadata, allowing for efficient management and retrieval of extracted information.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "a document store",
          "local_types": [
            "database",
            "store"
          ],
          "iri": "Entity-a_document_store-Mention-1"
        }
      ],
      "relevance": 0.53271484375
    },
    "Entity-the_most_comprehensive_and_current_state-of-the-art_tool_for_content_extraction_and_analysis": {
      "node_id": "the_most_comprehensive_and_current_state-of-the-art_tool_for_content_extraction_and_analysis",
      "disambiguation_index": 0,
      "label": "the most comprehensive and current state-of-the-art tool for content extraction and analysis",
      "aliases": [
        "the most comprehensive and current state-of-the-art tool for content extraction and analysis"
      ],
      "types": [
        "state-of-the-art tool"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Apache Tika",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "the most comprehensive and current state-of-the-art tool for content extraction and analysis",
          "local_types": [
            "state-of-the-art tool"
          ],
          "iri": "Entity-the_most_comprehensive_and_current_state-of-the-art_tool_for_content_extraction_and_analysis-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-kgcp_task": {
      "node_id": "kgcp_task",
      "disambiguation_index": 0,
      "label": "KGCP tasks",
      "aliases": [
        "KGCP tasks"
      ],
      "types": [
        "research project",
        "knowledge management task",
        "project goal",
        "project",
        "task",
        "computational task",
        "research goal"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Knowledge Graph Construction Pipeline tasks",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "KGCP tasks",
          "local_types": [
            "research project",
            "knowledge management task",
            "project goal",
            "project",
            "task",
            "computational task",
            "research goal"
          ],
          "iri": "Entity-kgcp_task-Mention-1"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-specific_pre-processing_and_data_cleaning_task": {
      "node_id": "specific_pre-processing_and_data_cleaning_task",
      "disambiguation_index": 0,
      "label": "specific pre-processing and data cleaning tasks",
      "aliases": [
        "specific pre-processing and data cleaning tasks"
      ],
      "types": [
        "preprocessing",
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of preparing raw data for analysis by performing necessary transformations, filtering out errors or inconsistencies, and transforming the data into a suitable form for further processing.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "specific pre-processing and data cleaning tasks",
          "local_types": [
            "preprocessing",
            "task"
          ],
          "iri": "Entity-specific_pre-processing_and_data_cleaning_task-Mention-1"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-categorised_named_entity": {
      "node_id": "categorised_named_entity",
      "disambiguation_index": 0,
      "label": "categorised named entities",
      "aliases": [
        "categorised named entities"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Named entities that have been categorized, extracted from results by using diverse state-of-the-art NLP tools and NER models.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "categorised named entities",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-categorised_named_entity-Mention-1"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-source_document": {
      "node_id": "source_document",
      "disambiguation_index": 0,
      "label": "source document",
      "aliases": [
        "source document"
      ],
      "types": [
        "document",
        "textual content"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A written or printed work containing information or ideas",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "source document",
          "local_types": [
            "document",
            "textual content"
          ],
          "iri": "Entity-source_document-Mention-1"
        }
      ],
      "relevance": 0.5302734375
    },
    "Entity-source_document_format": {
      "node_id": "source_document_format",
      "disambiguation_index": 0,
      "label": "source document formats",
      "aliases": [
        "source document formats"
      ],
      "types": [
        "format",
        "file format",
        "data standard",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard or format used for encoding documents, typically defining their structure and organization.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "source document formats",
          "local_types": [
            "file format",
            "data standard"
          ],
          "iri": "Entity-source_document_format-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "source document formats",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-source_document_format-Mention-2"
        }
      ],
      "relevance": 0.52783203125
    },
    "Entity-json-ld": {
      "node_id": "json-ld",
      "disambiguation_index": 0,
      "label": "JSON-LD",
      "aliases": [
        "JSON-LD"
      ],
      "types": [
        "ontology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A semantic extension to JavaScript Object Notation (JSON) for expressing structured data and ontology-based metadata.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-4",
          "local_name": "JSON-LD",
          "local_types": [
            "ontology"
          ],
          "iri": "Entity-json-ld-Mention-1"
        }
      ],
      "relevance": 0.52734375
    },
    "Entity-whilst_the_fourth_column_show": {
      "node_id": "whilst_the_fourth_column_show",
      "disambiguation_index": 0,
      "label": "whilst the fourth column shows",
      "aliases": [
        "whilst the fourth column shows"
      ],
      "types": [
        "column"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The average number of extracted attributes per document type, based on data from four use case document sets.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "whilst the fourth column shows",
          "local_types": [
            "column"
          ],
          "iri": "Entity-whilst_the_fourth_column_show-Mention-1"
        }
      ],
      "relevance": 0.5263671875
    },
    "Entity-python-based_method": {
      "node_id": "python-based_method",
      "disambiguation_index": 0,
      "label": "Python-based methods",
      "aliases": [
        "Python-based methods"
      ],
      "types": [
        "programming language",
        "programming techniques",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Methods that utilize the programming language Python as a foundation or framework.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "Python-based methods",
          "local_types": [
            "programming language",
            "programming techniques",
            "algorithm"
          ],
          "iri": "Entity-python-based_method-Mention-1"
        }
      ],
      "relevance": 0.52587890625
    },
    "Entity-mel_s_core_goal": {
      "node_id": "mel_s_core_goal",
      "disambiguation_index": 0,
      "label": "MEL's core goals",
      "aliases": [
        "MEL's core goals"
      ],
      "types": [
        "goals"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The core objectives or purposes of MEL, which define its primary motivations and directions.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "MEL's core goals",
          "local_types": [
            "goals"
          ],
          "iri": "Entity-mel_s_core_goal-Mention-1"
        }
      ],
      "relevance": 0.52490234375
    },
    "Entity-file_type": {
      "node_id": "file_type",
      "disambiguation_index": 0,
      "label": "file types",
      "aliases": [
        "file type",
        "file types"
      ],
      "types": [
        "data format",
        "data structure",
        "data type",
        "digital content",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A classification or categorization of digital content",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "file types",
          "local_types": [
            "data type",
            "format"
          ],
          "iri": "Entity-file_type-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "file type",
          "local_types": [
            "format",
            "data structure"
          ],
          "iri": "Entity-file_type-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-6",
          "local_name": "file types",
          "local_types": [
            "data format",
            "format"
          ],
          "iri": "Entity-file_type-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "file types",
          "local_types": [
            "data format",
            "digital content"
          ],
          "iri": "Entity-file_type-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "file type",
          "local_types": [
            "data format"
          ],
          "iri": "Entity-file_type-Mention-5"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-pattern_matching": {
      "node_id": "pattern_matching",
      "disambiguation_index": 0,
      "label": "pattern matching",
      "aliases": [
        "pattern matching"
      ],
      "types": [
        "technique",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique or method of identifying and analyzing patterns, often used to extract meaningful information from data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "pattern matching",
          "local_types": [
            "technique",
            "method"
          ],
          "iri": "Entity-pattern_matching-Mention-1"
        }
      ],
      "relevance": 0.5224609375
    },
    "Entity-xml_output": {
      "node_id": "xml_output",
      "disambiguation_index": 0,
      "label": "XML output",
      "aliases": [
        "XML output"
      ],
      "types": [
        "data format",
        "file type"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formatted data representation in XML syntax.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-4",
          "local_name": "XML output",
          "local_types": [
            "data format",
            "file type"
          ],
          "iri": "Entity-xml_output-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-processing_model": {
      "node_id": "processing_model",
      "disambiguation_index": 0,
      "label": "processing model",
      "aliases": [
        "processing model"
      ],
      "types": [
        "algorithm",
        "computational process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual framework or methodology used to transform input data into desired outputs through computational operations.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-6",
          "local_name": "processing model",
          "local_types": [
            "algorithm",
            "computational process"
          ],
          "iri": "Entity-processing_model-Mention-1"
        }
      ],
      "relevance": 0.5205078125
    },
    "Entity-file_typesformats": {
      "node_id": "file_typesformats",
      "disambiguation_index": 0,
      "label": "file types/formats",
      "aliases": [
        "file types/formats"
      ],
      "types": [
        "data format",
        "structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of standardized ways in which data or content are organized, formatted, and structured for storage, transmission, or processing.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "file types/formats",
          "local_types": [
            "data format",
            "structure"
          ],
          "iri": "Entity-file_typesformats-Mention-1"
        }
      ],
      "relevance": 0.5205078125
    },
    "Entity-json_structure": {
      "node_id": "json_structure",
      "disambiguation_index": 0,
      "label": "JSON structures",
      "aliases": [
        "JSON structures"
      ],
      "types": [
        "data format",
        "programming language"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Standardized data representations used to store and exchange structured information.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "JSON structures",
          "local_types": [
            "data format",
            "programming language"
          ],
          "iri": "Entity-json_structure-Mention-1"
        }
      ],
      "relevance": 0.52001953125
    },
    "Entity-json": {
      "node_id": "json",
      "disambiguation_index": 0,
      "label": "JSON",
      "aliases": [
        "JSON"
      ],
      "types": [
        "format",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A lightweight, standardized data interchange format used to store and exchange structured data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "JSON",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-json-Mention-1"
        }
      ],
      "relevance": 0.51953125
    },
    "Entity-regular_expression_to_apply_in_the_text_analysis_task": {
      "node_id": "regular_expression_to_apply_in_the_text_analysis_task",
      "disambiguation_index": 0,
      "label": "regular expressions to apply in the text analysis task",
      "aliases": [
        "regular expressions to apply in the text analysis task"
      ],
      "types": [
        "pattern matching",
        "text processing"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of rules or patterns used for matching and manipulating text data",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "regular expressions to apply in the text analysis task",
          "local_types": [
            "pattern matching",
            "text processing"
          ],
          "iri": "Entity-regular_expression_to_apply_in_the_text_analysis_task-Mention-1"
        }
      ],
      "relevance": 0.5185546875
    },
    "Entity-python-based_tool": {
      "node_id": "python-based_tool",
      "disambiguation_index": 0,
      "label": "Python-based tool",
      "aliases": [
        "Python-based tool"
      ],
      "types": [
        "programming language",
        "software development platform",
        "software development framework"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software development framework or platform built using Python.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "Python-based tool",
          "local_types": [
            "programming language",
            "software development platform",
            "software development framework"
          ],
          "iri": "Entity-python-based_tool-Mention-1"
        }
      ],
      "relevance": 0.51123046875
    },
    "Entity-file_format": {
      "node_id": "file_format",
      "disambiguation_index": 0,
      "label": "file formats",
      "aliases": [
        "file formats"
      ],
      "types": [
        "data format",
        "format",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Standardized representations for organizing digital data",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "file formats",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-file_format-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-5",
          "local_name": "file formats",
          "local_types": [
            "data format"
          ],
          "iri": "Entity-file_format-Mention-2"
        }
      ],
      "relevance": 0.5107421875
    },
    "Entity-python-based_system": {
      "node_id": "python-based_system",
      "disambiguation_index": 0,
      "label": "Python-based system",
      "aliases": [
        "Python-based system"
      ],
      "types": [
        "software framework",
        "programming language"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software framework or programming language-based system that provides a set of tools, libraries, and utilities for developing applications.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "Python-based system",
          "local_types": [
            "software framework",
            "programming language"
          ],
          "iri": "Entity-python-based_system-Mention-1"
        }
      ],
      "relevance": 0.51025390625
    },
    "Entity-pre-processing_task": {
      "node_id": "pre-processing_task",
      "disambiguation_index": 0,
      "label": "pre-processing tasks",
      "aliases": [
        "pre-processing tasks"
      ],
      "types": [
        "task",
        "process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of operations performed to prepare data for further processing or analysis.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "pre-processing tasks",
          "local_types": [
            "task",
            "process"
          ],
          "iri": "Entity-pre-processing_task-Mention-1"
        }
      ],
      "relevance": 0.50927734375
    },
    "Entity-rdf": {
      "node_id": "rdf",
      "disambiguation_index": 0,
      "label": "RDF",
      "aliases": [
        "RDF"
      ],
      "types": [
        "technology",
        "format",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard format for representing data on the web",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "RDF",
          "local_types": [
            "standard",
            "technology"
          ],
          "iri": "Entity-rdf-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "RDF",
          "local_types": [
            "format",
            "standard"
          ],
          "iri": "Entity-rdf-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "RDF",
          "local_types": [
            "standard",
            "format"
          ],
          "iri": "Entity-rdf-Mention-3"
        }
      ],
      "relevance": 0.50537109375
    },
    "Entity-unstructured_information": {
      "node_id": "unstructured_information",
      "disambiguation_index": 0,
      "label": "unstructured information",
      "aliases": [
        "unstructured information"
      ],
      "types": [
        "text data",
        "content"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Information lacking organization or structure",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "unstructured information",
          "local_types": [
            "text data",
            "content"
          ],
          "iri": "Entity-unstructured_information-Mention-1"
        }
      ],
      "relevance": 0.50439453125
    },
    "Entity-proper_tool": {
      "node_id": "proper_tool",
      "disambiguation_index": 0,
      "label": "proper tools",
      "aliases": [
        "proper tools"
      ],
      "types": [
        "software",
        "technology",
        "resource"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Tools or resources specifically designed, developed, or optimized for their intended purpose.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "proper tools",
          "local_types": [
            "software",
            "technology",
            "resource"
          ],
          "iri": "Entity-proper_tool-Mention-1"
        }
      ],
      "relevance": 0.50390625
    },
    "Entity-table_2": {
      "node_id": "table_2",
      "disambiguation_index": 0,
      "label": "Table 2",
      "aliases": [
        "Table 2"
      ],
      "types": [
        "table",
        "reference table",
        "reference",
        "data structure",
        "table reference",
        "file types supported"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A table presenting a list of supported file types.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-6",
          "local_name": "Table 2",
          "local_types": [
            "table",
            "reference table",
            "reference",
            "data structure",
            "table reference",
            "file types supported"
          ],
          "iri": "Entity-table_2-Mention-1"
        }
      ],
      "relevance": 0.50244140625
    },
    "Entity-file_type_are_presented_in_table_2": {
      "node_id": "file_type_are_presented_in_table_2",
      "disambiguation_index": 0,
      "label": "file types are presented in Table 2",
      "aliases": [
        "file types are presented in Table 2"
      ],
      "types": [
        "reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A list of file formats or extensions that can be processed, stored, or used by a system or application.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-6",
          "local_name": "file types are presented in Table 2",
          "local_types": [
            "reference"
          ],
          "iri": "Entity-file_type_are_presented_in_table_2-Mention-1"
        }
      ],
      "relevance": 0.5
    },
    "Entity-unstructured_data_set": {
      "node_id": "unstructured_data_set",
      "disambiguation_index": 0,
      "label": "unstructured data sets",
      "aliases": [
        "unstructured data sets"
      ],
      "types": [
        "collection",
        "collection of data",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or dataset that does not have a predefined structure or organization.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "unstructured data sets",
          "local_types": [
            "dataset",
            "collection"
          ],
          "iri": "Entity-unstructured_data_set-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "unstructured data sets",
          "local_types": [
            "dataset",
            "collection of data"
          ],
          "iri": "Entity-unstructured_data_set-Mention-2"
        }
      ],
      "relevance": 0.498779296875
    },
    "Entity-third_column": {
      "node_id": "third_column",
      "disambiguation_index": 0,
      "label": "third column",
      "aliases": [
        "third column"
      ],
      "types": [
        "column",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A vertical division or section in a structured data arrangement, typically containing specific information or values.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "third column",
          "local_types": [
            "column",
            "data structure"
          ],
          "iri": "Entity-third_column-Mention-1"
        }
      ],
      "relevance": 0.49853515625
    },
    "Entity-common_file_format": {
      "node_id": "common_file_format",
      "disambiguation_index": 0,
      "label": "common file formats",
      "aliases": [
        "common file formats"
      ],
      "types": [
        "document structures",
        "file formats",
        "file types"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Standardized forms or structures used to represent and store data",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "common file formats",
          "local_types": [
            "file formats"
          ],
          "iri": "Entity-common_file_format-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "common file formats",
          "local_types": [
            "file types",
            "document structures"
          ],
          "iri": "Entity-common_file_format-Mention-2"
        }
      ],
      "relevance": 0.498291015625
    },
    "Entity-opensource_package_and_tool_with_complementary_capability": {
      "node_id": "opensource_package_and_tool_with_complementary_capability",
      "disambiguation_index": 0,
      "label": "opensource packages and tools with complementary capabilities",
      "aliases": [
        "opensource packages and tools with complementary capabilities"
      ],
      "types": [
        "technology",
        "software"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of open-source software packages and tools that offer complementary capabilities.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "opensource packages and tools with complementary capabilities",
          "local_types": [
            "technology",
            "software"
          ],
          "iri": "Entity-opensource_package_and_tool_with_complementary_capability-Mention-1"
        }
      ],
      "relevance": 0.497802734375
    },
    "Entity-file_extension_mapping": {
      "node_id": "file_extension_mapping",
      "disambiguation_index": 0,
      "label": "file extension mappings",
      "aliases": [
        "file extension mappings"
      ],
      "types": [
        "mapping table",
        "mapping",
        "format conversion",
        "conversion"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A table or structure that maps file extensions to specific formats or types.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "file extension mappings",
          "local_types": [
            "mapping table",
            "mapping",
            "format conversion",
            "conversion"
          ],
          "iri": "Entity-file_extension_mapping-Mention-1"
        }
      ],
      "relevance": 0.4951171875
    },
    "Entity-method": {
      "node_id": "method",
      "disambiguation_index": 0,
      "label": "methods",
      "aliases": [
        "methods"
      ],
      "types": [
        "algorithm",
        "process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of algorithms or processes used for achieving a specific goal",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "methods",
          "local_types": [
            "algorithm",
            "process"
          ],
          "iri": "Entity-method-Mention-1"
        }
      ],
      "relevance": 0.492919921875
    },
    "Entity-named_entity": {
      "node_id": "named_entity",
      "disambiguation_index": 0,
      "label": "named entities",
      "aliases": [
        "named entities"
      ],
      "types": [
        "data entity",
        "entities",
        "concept",
        "term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or set of distinct concepts, ideas, or objects that can be categorized or classified.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "named entities",
          "local_types": [
            "data entity",
            "entities"
          ],
          "iri": "Entity-named_entity-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-7",
          "local_name": "named entities",
          "local_types": [
            "concept",
            "term"
          ],
          "iri": "Entity-named_entity-Mention-2"
        }
      ],
      "relevance": 0.49267578125
    },
    "Entity-ole": {
      "node_id": "ole",
      "disambiguation_index": 0,
      "label": "OLE",
      "aliases": [
        "OLE"
      ],
      "types": [
        "file format",
        "format",
        "file type"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A proprietary file format or data structure",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-9",
          "local_name": "OLE",
          "local_types": [
            "file format",
            "format",
            "file type"
          ],
          "iri": "Entity-ole-Mention-1"
        }
      ],
      "relevance": 0.490966796875
    },
    "Entity-ontology": {
      "node_id": "ontology",
      "disambiguation_index": 0,
      "label": "ontologies",
      "aliases": [
        "ontologies"
      ],
      "types": [
        "data model",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formal system used to represent and structure knowledge, often expressed as a data model.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-4",
          "local_name": "ontologies",
          "local_types": [
            "data model",
            "knowledge representation"
          ],
          "iri": "Entity-ontology-Mention-1"
        }
      ],
      "relevance": 0.48876953125
    },
    "Entity-document_store": {
      "node_id": "document_store",
      "disambiguation_index": 0,
      "label": "document store",
      "aliases": [
        "document store"
      ],
      "types": [
        "storage system",
        "database",
        "data storage",
        "repository",
        "database system",
        "concept",
        "storage solution",
        "system",
        "store"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A system or repository for storing and managing documents.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "document store",
          "local_types": [
            "storage system",
            "database system",
            "concept",
            "storage solution",
            "system",
            "store"
          ],
          "iri": "Entity-document_store-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "document store",
          "local_types": [
            "storage system",
            "database",
            "data storage",
            "repository",
            "database system"
          ],
          "iri": "Entity-document_store-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "document store",
          "local_types": [
            "database",
            "repository"
          ],
          "iri": "Entity-document_store-Mention-3"
        }
      ],
      "relevance": 0.482177734375
    },
    "Entity-document_type": {
      "node_id": "document_type",
      "disambiguation_index": 0,
      "label": "document type",
      "aliases": [
        "document type"
      ],
      "types": [
        "category",
        "classification"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A classification or categorization system for documents",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "document type",
          "local_types": [
            "category",
            "classification"
          ],
          "iri": "Entity-document_type-Mention-1"
        }
      ],
      "relevance": 0.47900390625
    },
    "Entity-primitive": {
      "node_id": "primitive",
      "disambiguation_index": 0,
      "label": "primitives",
      "aliases": [
        "primitives"
      ],
      "types": [
        "algorithm",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Basic building blocks or fundamental operations used to perform a specific task",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "primitives",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-primitive-Mention-1"
        }
      ],
      "relevance": 0.467529296875
    },
    "Entity-table_1": {
      "node_id": "table_1",
      "disambiguation_index": 0,
      "label": "Table 1",
      "aliases": [
        "Table 1"
      ],
      "types": [
        "table",
        "output structure",
        "reference table",
        "reference",
        "data structure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A tabular data structure or reference table.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "Table 1",
          "local_types": [
            "table",
            "output structure",
            "reference table",
            "reference",
            "data structure"
          ],
          "iri": "Entity-table_1-Mention-1"
        }
      ],
      "relevance": 0.467041015625
    },
    "Entity-_6_": {
      "node_id": "_6_",
      "disambiguation_index": 0,
      "label": "[6]",
      "aliases": [
        "[6]"
      ],
      "types": [
        "citation",
        "reference"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A research paper or publication",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "[6]",
          "local_types": [
            "citation",
            "reference"
          ],
          "iri": "Entity-_6_-Mention-1"
        }
      ],
      "relevance": 0.46142578125
    },
    "Entity-theoretical_number_of_attribute": {
      "node_id": "theoretical_number_of_attribute",
      "disambiguation_index": 0,
      "label": "theoretical number of attributes",
      "aliases": [
        "theoretical number of attributes"
      ],
      "types": [
        "quantity",
        "statistic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value representing an estimated or predicted quantity of characteristics, features, or properties that can be extracted from a given dataset.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-7",
          "local_name": "theoretical number of attributes",
          "local_types": [
            "quantity",
            "statistic"
          ],
          "iri": "Entity-theoretical_number_of_attribute-Mention-1"
        }
      ],
      "relevance": 0.460693359375
    },
    "Entity-.docm_can_only_be_processed_on_window_operating_system": {
      "node_id": ".docm_can_only_be_processed_on_window_operating_system",
      "disambiguation_index": 0,
      "label": ".docm can only be processed on Windows operating systems",
      "aliases": [
        ".docm can only be processed on Windows operating systems"
      ],
      "types": [
        "software requirement",
        "operating system"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific type of Microsoft Office document that requires a Windows operating system to process.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-8",
          "local_name": ".docm can only be processed on Windows operating systems",
          "local_types": [
            "software requirement",
            "operating system"
          ],
          "iri": "Entity-.docm_can_only_be_processed_on_window_operating_system-Mention-1"
        }
      ],
      "relevance": 0.456787109375
    },
    "Entity-.docm": {
      "node_id": ".docm",
      "disambiguation_index": 0,
      "label": ".docm",
      "aliases": [
        ".docm"
      ],
      "types": [
        "file type"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A Microsoft Word document",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-8",
          "local_name": ".docm",
          "local_types": [
            "file type"
          ],
          "iri": "Entity-.docm-Mention-1"
        }
      ],
      "relevance": 0.455078125
    },
    "Entity-parameter_and_flag": {
      "node_id": "parameter_and_flag",
      "disambiguation_index": 0,
      "label": "parameters and flags",
      "aliases": [
        "parameters and flags"
      ],
      "types": [
        "processing settings",
        "setting",
        "metadata",
        "configuration settings",
        "options",
        "option",
        "initial settings",
        "control variables"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of adjustable values or options that control the behavior or configuration of a system or process.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-5",
          "local_name": "parameters and flags",
          "local_types": [
            "processing settings",
            "setting",
            "metadata",
            "configuration settings",
            "options",
            "option",
            "initial settings",
            "control variables"
          ],
          "iri": "Entity-parameter_and_flag-Mention-1"
        }
      ],
      "relevance": 0.451416015625
    },
    "Entity-opensource_package_and_tool": {
      "node_id": "opensource_package_and_tool",
      "disambiguation_index": 0,
      "label": "opensource packages and tools",
      "aliases": [
        "opensource packages and tools"
      ],
      "types": [
        "technology",
        "development framework",
        "software library",
        "software"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of software components that are freely available for use, modification, and distribution under an open-source license.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "opensource packages and tools",
          "local_types": [
            "technology",
            "development framework",
            "software library",
            "software"
          ],
          "iri": "Entity-opensource_package_and_tool-Mention-1"
        }
      ],
      "relevance": 0.4501953125
    },
    "Entity-tnnt_result": {
      "node_id": "tnnt_result",
      "disambiguation_index": 0,
      "label": "TNNT results",
      "aliases": [
        "TNNT results"
      ],
      "types": [
        "result",
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The outcome or product of a test or experiment using Terminal Nucleotidyl Transferase (TNNT)",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "TNNT results",
          "local_types": [
            "result",
            "output"
          ],
          "iri": "Entity-tnnt_result-Mention-1"
        }
      ],
      "relevance": 0.44677734375
    },
    "Entity-project": {
      "node_id": "project",
      "disambiguation_index": 0,
      "label": "project",
      "aliases": [
        "project"
      ],
      "types": [
        "research program",
        "initiative"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A planned or ongoing initiative or program aimed at achieving specific goals, often involving research and development.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-6",
          "local_name": "project",
          "local_types": [
            "research program",
            "initiative"
          ],
          "iri": "Entity-project-Mention-1"
        }
      ],
      "relevance": 0.435546875
    },
    "Entity-_2_": {
      "node_id": "_2_",
      "disambiguation_index": 0,
      "label": "[2]",
      "aliases": [
        "[2]",
        "[3]"
      ],
      "types": [
        "reference",
        "citation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A reference or citation",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "[2]",
          "local_types": [
            "citation",
            "reference"
          ],
          "iri": "Entity-_2_-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "[3]",
          "local_types": [
            "citation",
            "reference"
          ],
          "iri": "Entity-_2_-Mention-2"
        }
      ],
      "relevance": 0.425537109375
    },
    "Entity-this_paper_(1)": {
      "node_id": "this_paper_(1)",
      "disambiguation_index": 1,
      "label": "This paper",
      "aliases": [
        "This paper"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The current research paper being discussed",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "This paper",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this_paper_(1)-Mention-1"
        }
      ],
      "relevance": 0.4208984375
    },
    "Entity-task": {
      "node_id": "task",
      "disambiguation_index": 0,
      "label": "tasks",
      "aliases": [
        "tasks"
      ],
      "types": [
        "task",
        "activity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A series of activities or operations undertaken to achieve a specific goal or objective.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "tasks",
          "local_types": [
            "task",
            "activity"
          ],
          "iri": "Entity-task-Mention-1"
        }
      ],
      "relevance": 0.420654296875
    },
    "Entity-window": {
      "node_id": "window",
      "disambiguation_index": 0,
      "label": "Windows",
      "aliases": [
        "Windows"
      ],
      "types": [
        "operating system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A popular graphical user interface (GUI) and operating system developed by Microsoft.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-8",
          "local_name": "Windows",
          "local_types": [
            "operating system"
          ],
          "iri": "Entity-window-Mention-1"
        }
      ],
      "relevance": 0.41552734375
    },
    "Entity-figure_2": {
      "node_id": "figure_2",
      "disambiguation_index": 0,
      "label": "Figure 2",
      "aliases": [
        "Figure 2"
      ],
      "types": [
        "visual representation",
        "figure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A visual representation of a conceptual or empirical idea, typically an image, diagram, or chart.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-5",
          "local_name": "Figure 2",
          "local_types": [
            "visual representation",
            "figure"
          ],
          "iri": "Entity-figure_2-Mention-1"
        }
      ],
      "relevance": 0.407470703125
    },
    "Entity-result": {
      "node_id": "result",
      "disambiguation_index": 0,
      "label": "results",
      "aliases": [
        "results"
      ],
      "types": [
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The outcome or product of an operation, process, or experiment.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "results",
          "local_types": [
            "output"
          ],
          "iri": "Entity-result-Mention-1"
        }
      ],
      "relevance": 0.40576171875
    },
    "Entity-the_near_future": {
      "node_id": "the_near_future",
      "disambiguation_index": 0,
      "label": "the near future",
      "aliases": [
        "the near future"
      ],
      "types": [
        "timeframe",
        "future"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The time period immediately ahead, which has not yet arrived but is expected to happen soon.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-4",
          "local_name": "the near future",
          "local_types": [
            "timeframe",
            "future"
          ],
          "iri": "Entity-the_near_future-Mention-1"
        }
      ],
      "relevance": 0.38671875
    }
  },
  "summary": "The metadata and content-based information extraction tasks from heterogeneous file sets are pre-processing steps of many Knowledge Graph Construction Pipelines (KGCP). These tasks often take longer than necessary due to the lack of proper tools that integrate several complementary extraction methods and properties to get a rich output set. This paper presents MEL, a Python-based tool that implements a set of methods to extract metadata and content-based information from unstructured information encoded in different source document formats. The results are generated as JSON files, which can: (a) optionally be stored in a document store, and (b) easily be mapped to RDF using a variety of tools such as J2RM. MEL supports more than 20 different file types, making it a versatile tool that aids pre-processing tasks as part of a KGCP based on comprehensive configurable settings.\n\nThis paper introduces MEL, a tool that implements a set of methods to extract metadata and content-based information from various file formats as JSON objects. For each supported file type, MEL extracts the textual content from the source document and performs specific pre-processing and data cleaning tasks. Also, it performs basic text analysis tasks (pattern matching and keyword extraction) and generates the results in a machine-readable format (JSON), preparing the ground for content-based analysis. MEL is integrated with \u201cThe NLP -NER Toolkit\u201d (TNNT), which automates the extraction task of categorised named entities from the MEL results by using diverse state-of-the-art NLP tools and NER models [5]. MEL implements primitives for metadata and content extraction from unstructured data sets of heterogeneous formats, and along with the TNNT results, it provides the groundwork for content-based analysis. MEL and TNNT were developed in conjunction with J2RM [4], to easily map the JSON results to RDF as part of an automated KGCP.\n\nMEL has comprehensive metadata extraction support of various file types and formats. In a nutshell: (1) it takes as input a document (file) set; (2) then, for each document, it extracts its related metadata and content-based information, while performing basic text analysis (such as applying a configurable set of regular expressions and keyword extraction task); and, (3) as output, it generates a JSON file with the extracted metadata and text content with a structure based on the supported formats' document object model. It can store the results in a document store. MEL's general output structure is presented in Table 1. MEL has a detailed configuration JSON file that defines how the processing will be performed through a set of parameters and flags that establish the initial settings related to the document store, input document sets, TNNT general configuration, file extension mappings, the \u201cAssociated-Metadata\u201d processing (Table 1), and regular expressions to apply in the text analysis task, among other settings. The supported file types are presented in Table 2. The third column shows the theoretical number of attributes that the tool is able to extract per document type, whilst the fourth column shows the average of the extracted attributes from four use case document sets. OLE 2 file types and .docm can only be processed on Windows operating systems. Specifically for OLE 2 file types, MEL uses the olemeta tool.\n\nMEL is fully integrated with TNNT as depicted in Figure 1. The set of Python-based methods implemented in MEL are generic and can be applied to extract the content and metadata of all supported file types. MEL uses various opensource packages and tools with complementary capabilities to form a \u201cSwiss army knife\u201d of metadata and content-based information extraction from heterogeneous document sets. As part of the \u201cGeneral-Metadata\u201d extraction task, MEL optionally uses the XML output from the NLNZ Metadata Extractor tool, a Java standalone tool that extracts a comprehensive attribute and property list from dozens of file formats. The MEL general processing model is presented in Figure 2. It is important to note that each file type has its own specific processing model as well as the text analysis task, which is the last step that is performed for any output.\n\nThe most comprehensive and current state-of-the-art tool for content extraction and analysis is Apache Tika, which is a complete and complex Java-based general-purpose system. While MEL's core goals resemble the ones of Apache Tika, the main difference and benefit of MEL as compared to Apache Tika is that it is a lightweight Python-based package for the metadata extraction of common file formats aimed to be used in a KGCP. Although there is a wide range of Python-based tools and libraries for metadata extraction, to the best of our knowledge, there is no package available that fully integrates in one system a comprehensive set of methods for metadata and content extraction of common file formats that generate the results in JSON structures based on the document object model of each format type. Last, MEL can assist in the information extraction stage of several KGCPs, such as the ones described in [6], [2], and [3].\n\nMEL provides a versatile mechanism to extract metadata and content-based information from unstructured data sets of heterogeneous file formats, agnostic of the data sets' domain (general purpose). It has been tested over thousands of documents using different formats and datasets as part of the AGRIF project. Based on the structure of the MEL's JSON results, it is possible to easily add a vocabulary or light-weight ontology using JSON-LD annotations, in order to make the extracted metadata \u201cRDF ready\u201d. This will be explored in the near future leveraging on the integration with JSON-LD ontologies. More file formats will be added in a per use-case requirements basis, in order to support KGCP tasks. Additionally, a project to \u201ccontainerise\u201d the MEL+TNNT tools is planned in the near future. The major contributions of this tool are: (1) the ability to extract metadata sets and content-based information from different source document formats; (2) the comprehensive support of over 20 different file types/formats integrated into one easy-to-use Python-based system; (3) integration with TNNT which automates the extraction of categorised named entities from the results by using diverse state-of-the-art NLP tools and NER models; and (4) the JSON result files can be easily mapped to RDF using J2RM.",
  "triples": [
    [
      "Entity-the_metadata_and_content-based_information_extraction_task",
      "Predicate-from",
      "Entity-heterogeneous_file_set"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-mel"
    ],
    [
      "Entity-the_result",
      "Predicate-are_generated_as",
      "Entity-json_file"
    ],
    [
      "Entity-json_file",
      "Predicate-can_be_mapped_to",
      "Entity-rdf_using_a_variety_of_tool_such_a_j2rm"
    ],
    [
      "Entity-mel",
      "Predicate-supports",
      "Entity-more_than_20_different_file_type"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-introduces",
      "Entity-mel"
    ],
    [
      "Entity-for_each_supported_file_type",
      "Predicate-performs",
      "Entity-specific_pre-processing_and_data_cleaning_task"
    ],
    [
      "Entity-text_analysis",
      "Predicate-performs",
      "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_"
    ],
    [
      "Entity-it",
      "Predicate-generates",
      "Entity-the_result_in_a_machine-readable_format__json_"
    ],
    [
      "Entity-mel",
      "Predicate-implements",
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format"
    ],
    [
      "Entity-mel",
      "Predicate-developed_in_conjunction_with",
      "Entity-j2rm"
    ],
    [
      "Entity-tnnt",
      "Predicate-developed_in_conjunction_with",
      "Entity-j2rm"
    ],
    [
      "Entity-mel",
      "Predicate-performs",
      "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_"
    ],
    [
      "Entity-mel",
      "Predicate-generates",
      "Entity-the_result_in_a_machine-readable_format__json_"
    ],
    [
      "Entity-mel",
      "Predicate-has",
      "Entity-comprehensive_metadata_extraction_support_of_various_file_type_and_format"
    ],
    [
      "Entity-it_(1)",
      "Predicate-takes",
      "Entity-a_document__file__set"
    ],
    [
      "Entity-each_document",
      "Predicate-extracts",
      "Entity-it_related_metadata_and_content-based_information"
    ],
    [
      "Entity-it_(1)",
      "Predicate-performs",
      "Entity-basic_text_analysis__such_a_applying_a_configurable_set_of_regular_expression_and_keyword_extraction_task_"
    ],
    [
      "Entity-it_(1)",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-it_(1)",
      "Predicate-takes_as_input_a_document_file_set",
      "Entity-a_document__file__set"
    ],
    [
      "Entity-it_(2)",
      "Predicate-can_store",
      "Entity-the_result_(1)"
    ],
    [
      "Entity-it_(1)",
      "Predicate-stores_the_results_in_a_document_store",
      "Entity-a_document_store"
    ],
    [
      "Entity-mel",
      "Predicate-is_presented_in",
      "Entity-table_1"
    ],
    [
      "Entity-mel",
      "Predicate-defines",
      "Entity-configuration_json_file"
    ],
    [
      "Entity-the_supported_file_type",
      "Predicate-are_presented_in",
      "Entity-table_2"
    ],
    [
      "Entity-whilst_the_fourth_column_show",
      "Predicate-shows",
      "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set"
    ],
    [
      "Entity-.docm",
      "Predicate-can_only_be_processed_by",
      "Entity-window"
    ],
    [
      "Entity-mel",
      "Predicate-uses_for",
      "Entity-ole_2_file_type_(1)"
    ],
    [
      "Entity-mel",
      "Predicate-is_fully_integrated_with",
      "Entity-tnnt"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "Predicate-implemented_in",
      "Entity-mel"
    ],
    [
      "Entity-mel",
      "Predicate-uses",
      "Entity-opensource_package_and_tool"
    ],
    [
      "Entity-mel",
      "Predicate-uses",
      "Entity-opensource_package_and_tool_with_complementary_capability"
    ],
    [
      "Entity-mel",
      "Predicate-uses",
      "Entity-nlnz_metadata_extractor_tool"
    ],
    [
      "Entity-mel",
      "Predicate-optionally_uses",
      "Entity-the_xml_output_from_the_nlnz_metadata_extractor_tool__a_java_standalone_tool_that_extract_a_comprehensive_attribute_and_property_list_from_dozen_of_file_format"
    ],
    [
      "Entity-the_mel",
      "Predicate-is_presented_in",
      "Entity-figure_2"
    ],
    [
      "Entity-file_type",
      "Predicate-has",
      "Entity-it_own_specific_processing_model"
    ],
    [
      "Entity-each_file_type",
      "Predicate-has",
      "Entity-processing_model"
    ],
    [
      "Entity-apache_tika",
      "Predicate-is",
      "Entity-the_most_comprehensive_and_current_state-of-the-art_tool_for_content_extraction_and_analysis"
    ],
    [
      "Entity-apache_tika",
      "Predicate-be",
      "Entity-a_complete_and_complex_java-based_general-purpose_system"
    ],
    [
      "Entity-mel",
      "Predicate-be_compared_to",
      "Entity-apache_tika"
    ],
    [
      "Entity-metadata_and_content_extraction",
      "Predicate-integrates_in_one_system",
      "Entity-a_comprehensive_set_of_method_for_metadata_and_content_extraction"
    ],
    [
      "Entity-python-based_tool_and_library",
      "Predicate-generate_the_results_in_JSON_structures_based_on_the_document_object_model_of_each_format_type",
      "Entity-common_file_format"
    ],
    [
      "Entity-mel_s_json_result",
      "Predicate-can_be_easily_mapped_to_RDF_using_J2RM",
      "Entity-rdf_ready"
    ],
    [
      "Entity-this",
      "Predicate-will_be_explored_in",
      "Entity-the_near_future"
    ],
    [
      "Entity-kgcp_task",
      "Predicate-support",
      "Entity-file_format"
    ],
    [
      "Entity-a_project",
      "Predicate-planned_to_containerise",
      "Entity-meltnnt"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-the_mel",
      "Predicate-is_implemented_by",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-assists",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-meltnnt",
      "Predicate-is_integrated_with",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-is_implemented_by",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-mel_s",
      "Predicate-is_implemented_by",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-is_based_on",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-implements",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-the_mel"
    ],
    [
      "Entity-the_mel",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-is_implemented_by",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-the_mel",
      "Predicate-is_implemented_by",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-it_(3)",
      "Predicate-is",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "Predicate-is",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-assists",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-meltnnt",
      "Predicate-implements",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-the_metadata",
      "Predicate-generates",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "Predicate-uses",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-mel_s",
      "Predicate-is_implemented_by",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-aids",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-json_file_with_the_extracted_metadata_and_text_content",
      "Predicate-generates",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-it_(2)",
      "Predicate-is_implemented_by",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-implements",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-it_(3)"
    ],
    [
      "Entity-the_mel",
      "Predicate-is_implemented_by",
      "Entity-it_(3)"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-assists",
      "Entity-it_(3)"
    ],
    [
      "Entity-meltnnt",
      "Predicate-is_implemented_by",
      "Entity-it_(3)"
    ],
    [
      "Entity-it_(3)",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-is_implemented_by",
      "Entity-it_(3)"
    ],
    [
      "Entity-mel_s",
      "Predicate-is_implemented_by",
      "Entity-it_(3)"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-MEL_extracts_metadata_sets_and_content-based_information",
      "Entity-it_(3)"
    ],
    [
      "Entity-it_(3)",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-it_(3)",
      "Predicate-implements",
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-is_implemented_by",
      "Entity-it_(1)"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-it_(1)"
    ],
    [
      "Entity-the_mel",
      "Predicate-is_implemented_by",
      "Entity-it_(1)"
    ],
    [
      "Entity-it_(3)",
      "Predicate-is_implemented_by",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-assists",
      "Entity-it_(1)"
    ],
    [
      "Entity-it_(1)",
      "Predicate-is_implemented_by",
      "Entity-meltnnt"
    ],
    [
      "Entity-the_metadata",
      "Predicate-extracts",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-MEL_uses_it_to_extract_the_textual_content_from_the_source_document",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_s",
      "Predicate-is_implemented_by",
      "Entity-it_(1)"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-MEL_implements",
      "Entity-it_(1)"
    ],
    [
      "Entity-json_file_with_the_extracted_metadata_and_text_content",
      "Predicate-generates",
      "Entity-it_(1)"
    ],
    [
      "Entity-it_(2)",
      "Predicate-is_a_component_of",
      "Entity-it_(1)"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-implements",
      "Entity-it_(1)"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-the_mel",
      "Predicate-assists",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-meltnnt",
      "Predicate-assists",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-the_metadata",
      "Predicate-6",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-assists_in",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-assists",
      "Entity-mel_s"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-implements",
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-meltnnt"
    ],
    [
      "Entity-meltnnt",
      "Predicate-integrate",
      "Entity-the_mel"
    ],
    [
      "Entity-meltnnt",
      "Predicate-generates",
      "Entity-the_metadata"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-implements",
      "Entity-meltnnt"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-is_implemented_by",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-the_mel",
      "Predicate-is_implemented_by",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object",
      "Predicate-is",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-it_(3)",
      "Predicate-is_implemented_by",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-it_(1)",
      "Predicate-is",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-can_assist",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-meltnnt",
      "Predicate-implements",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object",
      "Predicate-provides",
      "Entity-the_metadata"
    ],
    [
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object",
      "Predicate-implements",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-mel_s",
      "Predicate-develops",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-implements",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-it_(2)",
      "Predicate-is_implemented_by",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-implements",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-the_metadata",
      "Predicate-presents",
      "Entity-this_paper"
    ],
    [
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format",
      "Predicate-is_implemented_by",
      "Entity-mel__a_python-based_tool"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format",
      "Predicate-is_implemented_by",
      "Entity-the_mel"
    ],
    [
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format",
      "Predicate-is",
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting"
    ],
    [
      "Entity-it_(3)",
      "Predicate-is_implemented_by",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-it_(1)",
      "Predicate-is",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-can_assist",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-meltnnt",
      "Predicate-is_integrated_with",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format",
      "Predicate-is",
      "Entity-a_tool_that_implement_a_set_of_method_to_extract_metadata_and_content-based_information_from_various_file_format_a_json_object"
    ],
    [
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-extracts",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-mel_s",
      "Predicate-is_implemented_by",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-is_implemented_by",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-it_(2)",
      "Predicate-uses",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-implements",
      "Entity-a_lightweight_python-based_package_for_the_metadata_extraction_of_common_file_format"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-the_mel",
      "Predicate-is_implemented_by",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-meltnnt",
      "Predicate-integrates",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-is_implemented_by",
      "Entity-mel_s"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-uses",
      "Entity-mel_extract_the_textual_content_from_the_source_document"
    ],
    [
      "Entity-mel_s",
      "Predicate-presents",
      "Entity-this_paper"
    ],
    [
      "Entity-mel_s",
      "Predicate-is_implemented_by",
      "Entity-the_mel"
    ],
    [
      "Entity-meltnnt",
      "Predicate-integrate",
      "Entity-mel_s"
    ],
    [
      "Entity-mel_s",
      "Predicate-extracts",
      "Entity-the_metadata"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-uses",
      "Entity-mel_s"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type"
    ],
    [
      "Entity-the_mel",
      "Predicate-is_implemented_by",
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-can_assist",
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type"
    ],
    [
      "Entity-meltnnt",
      "Predicate-integrate",
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-can_be_applied_to",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-can_be_applied_to_extract",
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type"
    ],
    [
      "Entity-mel_s",
      "Predicate-implements",
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-implement",
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-the_mel",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-meltnnt",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-json_file_with_the_extracted_metadata_and_text_content",
      "Predicate-contains",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel_s",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-can_generate",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-generates",
      "Entity-json_file_with_the_extracted_metadata_and_text_content"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "Predicate-is_implemented_by",
      "Entity-it_(2)"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-it_(2)"
    ],
    [
      "Entity-the_mel",
      "Predicate-is_implemented_by",
      "Entity-it_(2)"
    ],
    [
      "Entity-it_(3)",
      "Predicate-is_part_of",
      "Entity-it_(2)"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "Predicate-can_assist",
      "Entity-it_(2)"
    ],
    [
      "Entity-meltnnt",
      "Predicate-is_implemented_by",
      "Entity-it_(2)"
    ],
    [
      "Entity-it_(2)",
      "Predicate-generates",
      "Entity-the_metadata"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "Predicate-performs",
      "Entity-it_(2)"
    ],
    [
      "Entity-mel_s",
      "Predicate-is_part_of",
      "Entity-it_(2)"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "Predicate-MELs_It_component_extracts_metadata_and_content-_based_information",
      "Entity-it_(2)"
    ],
    [
      "Entity-json_file_with_the_extracted_metadata_and_text_content",
      "Predicate-generates",
      "Entity-it_(2)"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-uses",
      "Entity-it_(2)"
    ],
    [
      "Entity-this_paper",
      "Predicate-presents",
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-uses",
      "Entity-the_mel"
    ],
    [
      "Entity-primitive_for_metadata_and_content_extraction_from_unstructured_data_set_of_heterogeneous_format",
      "Predicate-extract",
      "Entity-the_metadata"
    ]
  ],
  "triples_typing": [
    [
      "Entity-j2rm",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-agrif_project",
      "skos:broader",
      "Entity-agrif"
    ],
    [
      "Entity-of_common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type_.",
      "skos:broader",
      "Entity-json"
    ],
    [
      "Entity-extracted_metadata",
      "skos:broader",
      "Entity-metadata"
    ],
    [
      "Entity-source_document",
      "skos:broader",
      "Entity-document"
    ],
    [
      "Entity-ole",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-j2rm__4_",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-json_file",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-more_than_20_different_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-tnnt",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-apache_tika",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set",
      "skos:broader",
      "Entity-source_document"
    ],
    [
      "Entity-ole_2_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-in_order_to_support_kgcp_task",
      "skos:broader",
      "Entity-kgcp_task"
    ],
    [
      "Entity-mel__a_python-based_tool",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-pattern_matching_and_keyword_extraction",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-keyword_extraction",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-although_there_is_a_wide_range_of_python-based_tool",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-tool",
      "skos:broader",
      "Entity-content_extraction_and_analysis"
    ],
    [
      "Entity-regular_expression_to_apply_in_the_text_analysis_task",
      "skos:broader",
      "Entity-pattern_matching_and_keyword_extraction"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-more_than_20_different_file_type",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-configuration_json_file",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-tnnt",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-tnnt_general_configuration",
      "skos:broader",
      "Entity-metadata"
    ],
    [
      "Entity-the_metadata",
      "skos:broader",
      "Entity-metadata"
    ],
    [
      "Entity-these_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-it_own_specific_processing_model",
      "skos:broader",
      "Entity-processing_model"
    ],
    [
      "Entity-rdf_ready",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-more_file_format",
      "skos:broader",
      "Entity-common_file_format"
    ],
    [
      "Entity-of_common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type_.",
      "skos:broader",
      "Entity-json_structure"
    ],
    [
      "Entity-configuration_json_file",
      "skos:broader",
      "Entity-common_file_format"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "skos:broader",
      "Entity-pre-processing_task"
    ],
    [
      "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_",
      "skos:broader",
      "Entity-text_analysis"
    ],
    [
      "Entity-source_document_format",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-apache_tika",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-file_format",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-common_file_format",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-configuration_json_file",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-the_text_analysis_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-regular_expression",
      "skos:broader",
      "Entity-pattern_matching_and_keyword_extraction"
    ],
    [
      "Entity-unstructured_data_set_of_heterogeneous_file_format",
      "skos:broader",
      "Entity-common_file_format"
    ],
    [
      "Entity-metadata_extraction_of_common_file_format",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-of_common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type_.",
      "skos:broader",
      "Entity-json_object"
    ],
    [
      "Entity-mel_s_json_result",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-source_document_format",
      "skos:broader",
      "Entity-common_file_format"
    ],
    [
      "Entity-json_file_with_the_extracted_metadata_and_text_content",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-the_xml_output_from_the_nlnz_metadata_extractor_tool__a_java_standalone_tool_that_extract_a_comprehensive_attribute_and_property_list_from_dozen_of_file_format",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-ole",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-json_file",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-regular_expression",
      "skos:broader",
      "Entity-text_analysis"
    ],
    [
      "Entity-unstructured_data_set_of_heterogeneous_file_format",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-json-ld",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-source_document_format",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-common_file_format",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-json_object",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-json_file_with_the_extracted_metadata_and_text_content",
      "skos:broader",
      "Entity-common_file_format"
    ],
    [
      "Entity-the_metadata_and_content-based_information_extraction_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-ole",
      "skos:broader",
      "Entity-common_file_format"
    ],
    [
      "Entity-json_file",
      "skos:broader",
      "Entity-common_file_format"
    ],
    [
      "Entity-content-based_information_extraction_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-different_source_document_format",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-json_file_with_the_extracted_metadata_and_text_content",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-ole",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-json_file",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-more_file_format",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-json-ld_annotation",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-each_document",
      "skos:broader",
      "Entity-source_document"
    ],
    [
      "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type",
      "skos:broader",
      "Entity-document"
    ],
    [
      "Entity-document_set",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-unstructured_information_encoded_in_different_source_document_format",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-tnnt_result",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-the_average_of_the_extracted_attribute_from_four_use_case_document_set",
      "skos:broader",
      "Entity-document"
    ],
    [
      "Entity-mel_are_generic_and_can_be_applied_to_extract_the_content_and_metadata_of_all_supported_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-agrif",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-kgcp_task",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-xml_output",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-metadata_and_content_extraction"
    ],
    [
      "Entity-unstructured_data_set_of_heterogeneous_file_format",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-json_result",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-json-ld_annotation",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-more_file_format",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-a_comprehensive_set_of_method_for_metadata_and_content_extraction",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-.docm",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-it_(1)",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-content-based_information_extraction_task",
      "skos:broader",
      "Entity-metadata_and_content_extraction"
    ],
    [
      "Entity-json_structure",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "skos:broader",
      "Entity-content_extraction_and_analysis"
    ],
    [
      "Entity-primitive",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-heterogeneous_format",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-basic_text_analysis_task__pattern_matching_and_keyword_extraction_",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-mel_extract_the_textual_content_from_the_source_document",
      "skos:broader",
      "Entity-keyword_extraction"
    ],
    [
      "Entity-a_project",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-rdf_using_a_variety_of_tool_such_a_j2rm",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-proper_tool_that_integrate_several_complementary_extraction_method_and_property_to_get_a_rich_output_set",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-pattern_matching",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-meltnnt",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-the_result_(1)",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-regular_expression_to_apply_in_the_text_analysis_task",
      "skos:broader",
      "Entity-pattern_matching"
    ],
    [
      "Entity-heterogeneous_file_format",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-kgcp",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-specific_pre-processing_and_data_cleaning_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-text_analysis_task",
      "skos:broader",
      "Entity-content_extraction_and_analysis"
    ],
    [
      "Entity-the_set_of_python-based_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-kgcp_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-json",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-agrif_project",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-nlnz_metadata_extractor_tool",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-file_format_a_json_object",
      "skos:broader",
      "Entity-json"
    ],
    [
      "Entity-text_analysis_task",
      "skos:broader",
      "Entity-keyword_extraction"
    ],
    [
      "Entity-content-based_information_extraction_task",
      "skos:broader",
      "Entity-content_extraction_and_analysis"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-file_type",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-text_analysis",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-file_format_a_json_object",
      "skos:broader",
      "Entity-json_object"
    ],
    [
      "Entity-rdf",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-each_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-content-based_information_extraction_task",
      "skos:broader",
      "Entity-keyword_extraction"
    ],
    [
      "Entity-a_versatile_tool_that_aid_pre-processing_task_a_part_of_a_kgcp_based_on_comprehensive_configurable_setting",
      "skos:broader",
      "Entity-specific_pre-processing_and_data_cleaning_task"
    ],
    [
      "Entity-ole_2_file_type_(1)",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-meltnnt",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-it_related_metadata_and_content-based_information",
      "skos:broader",
      "Entity-metadata"
    ],
    [
      "Entity-json_result_file",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-nlp_tool_and_ner_model",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-the_result",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-of_common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type_.",
      "skos:broader",
      "Entity-file_format"
    ],
    [
      "Entity-heterogeneous_file_set",
      "skos:broader",
      "Entity-document_set"
    ],
    [
      "Entity-regular_expression",
      "skos:broader",
      "Entity-pattern_matching"
    ],
    [
      "Entity-metadata",
      "skos:broader",
      "Entity-content-based_information"
    ],
    [
      "Entity-each_document",
      "skos:broader",
      "Entity-document"
    ],
    [
      "Entity-json_result_file",
      "skos:broader",
      "Entity-common_file_format"
    ],
    [
      "Entity-configuration_json_file",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-metadata",
      "skos:broader",
      "Entity-metadata_and_content-based_information"
    ],
    [
      "Entity-content-based_information",
      "skos:broader",
      "Entity-text_analysis"
    ],
    [
      "Entity-a_comprehensive_set_of_method_for_metadata_and_content_extraction",
      "skos:broader",
      "Entity-metadata"
    ],
    [
      "Entity-in_order_to_support_kgcp_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-mel_can_assist_in_the_information_extraction_stage_of_several_kgcps__such_a_the_one_described_in__6____2___and__3_",
      "skos:broader",
      "Entity-tool"
    ],
    [
      "Entity-kgcp",
      "skos:broader",
      "Entity-knowledge_graph_construction_pipeline"
    ],
    [
      "Entity-file_format_a_json_object",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-pre-processing_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-of_common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type_.",
      "skos:broader",
      "Entity-common_file_format"
    ],
    [
      "Entity-ole",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-xml_output",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-json_file",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-kgcp",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-the_theoretical_number_of_attribute_that_the_tool_is_able_to_extract_per_document_type",
      "skos:broader",
      "Entity-document_type"
    ],
    [
      "Entity-json_result_file",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-of_common_file_format_that_generate_the_result_in_json_structure_based_on_the_document_object_model_of_each_format_type_.",
      "skos:broader",
      "Entity-file_typesformats"
    ],
    [
      "Entity-parameter_and_flag",
      "skos:broader",
      "Entity-metadata"
    ],
    [
      "Entity-it_(3)",
      "skos:broader",
      "Entity-project"
    ],
    [
      "Entity-the_tnnt_result",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-common_file_format",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-ole_2_file_type_(1)",
      "skos:broader",
      "Entity-source_document_format"
    ],
    [
      "Entity-the_supported_file_type",
      "skos:broader",
      "Entity-file_type"
    ],
    [
      "Entity-mel",
      "skos:broader",
      "Entity-metadata_extraction_support_of_various_file_type_and_format"
    ]
  ],
  "predicates": {
    "Predicate-from": {
      "label": "from",
      "description": "Indicates a source or origin of something. The predicate 'from' connects the subject to an object that represents the starting point, origin, or foundation from which something originates, emerges, or comes into being.",
      "disambiguation_index": 0
    },
    "Predicate-presents": {
      "label": "presents",
      "description": "The predicate 'presents' indicates the act of introducing or making available something (the object) through a medium or representation (typically represented by the subject).",
      "disambiguation_index": 0
    },
    "Predicate-are_generated_as": {
      "label": "are generated as",
      "description": "This predicate indicates a transformation or conversion process that produces an object from one or more subjects. The subject(s) undergo some kind of processing, analysis, or manipulation to yield the resulting object.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_mapped_to": {
      "label": "can be mapped to",
      "description": "Indicates that there exists a relationship or transformation between two entities (subject and object), allowing for the conversion, translation, or representation of one into another. This predicate suggests an equivalence or correspondence between the subject's inherent structure and the object's characteristics.",
      "disambiguation_index": 0
    },
    "Predicate-supports": {
      "label": "supports",
      "description": "The predicate 'supports' indicates that the subject has a capacity to accommodate or facilitate the object. In general, it suggests an enabling or facilitating relationship between the subject and the object.",
      "disambiguation_index": 0
    },
    "Predicate-introduces": {
      "label": "introduces",
      "description": "Introduces refers to the act of presenting or bringing forth information, concepts, ideas, or entities for consideration, discussion, or understanding. It connects a subject (typically an author, creator, or source) with an object that represents new knowledge, perspectives, or insights.",
      "disambiguation_index": 0
    },
    "Predicate-performs": {
      "label": "performs",
      "description": "The predicate 'performs' indicates that an action or set of actions are carried out by the subject on the object. It implies a causal relationship between the subject and the object, suggesting that the subject takes some kind of initiative to bring about the state or outcome described in the object.",
      "disambiguation_index": 0
    },
    "Predicate-generates": {
      "label": "generates",
      "description": "The predicate 'generates' indicates that the subject produces or creates something new, often in a systematic or automated manner. It implies a causal relationship between the subject and object, suggesting that the subject's actions or processes lead to the creation of the object.",
      "disambiguation_index": 0
    },
    "Predicate-implements": {
      "label": "implements",
      "description": "The predicate 'implements' indicates that a subject (e.g., an organization, system, or framework) provides or offers a specific capability, functionality, or set of tools to achieve a particular goal. In general, it represents a relationship where the subject is responsible for providing the object's capabilities or features.",
      "disambiguation_index": 0
    },
    "Predicate-developed_in_conjunction_with": {
      "label": "developed in conjunction with",
      "description": "Indicates a collaborative effort or partnership between two entities (subject and object), where the subject has contributed to or been involved in the development of something related to the object, often implying mutual influence or coordination.",
      "disambiguation_index": 0
    },
    "Predicate-has": {
      "label": "has",
      "description": "The predicate 'has' indicates possession or ownership between a subject (entity) and an object. It suggests that the subject has control, responsibility, or association with the described property, characteristic, or capability.",
      "disambiguation_index": 0
    },
    "Predicate-takes": {
      "label": "takes",
      "description": "The predicate 'takes' indicates that the subject has possession or control of the object. It can imply a range of relationships between the subject and object, including ownership, responsibility, custody, or even temporary holding.",
      "disambiguation_index": 0
    },
    "Predicate-extracts": {
      "label": "extracts",
      "description": "The predicate 'extracts' indicates a process of obtaining or deriving relevant information from a source (the subject), resulting in a collection of data, metadata, or insights that are related to and based on the original material.",
      "disambiguation_index": 0
    },
    "Predicate-takes_as_input_a_document_file_set": {
      "label": "takes as input a document (file) set",
      "description": "The predicate 'takes as input a document (file) set' indicates that the subject entity processes or utilizes a collection of documents, which can be files or digital representations thereof. This connection implies an action where the subject receives and handles the provided document set for some purpose.",
      "disambiguation_index": 0
    },
    "Predicate-can_store": {
      "label": "can store",
      "description": "The predicate 'can store' indicates that the subject has the ability or capacity to retain and hold onto something (the object), often in a physical sense. This can imply a range of possibilities, from literal storage containers like boxes or shelves to more abstract concepts like memory or knowledge.",
      "disambiguation_index": 0
    },
    "Predicate-stores_the_results_in_a_document_store": {
      "label": "stores the results in a document store",
      "description": "This predicate indicates that the subject takes some action or holds onto something (the 'results') and places it into a designated storage location called a 'document store', effectively connecting the subject to the object by describing their relationship in terms of information management.",
      "disambiguation_index": 0
    },
    "Predicate-is_presented_in": {
      "label": "is presented in",
      "description": "The predicate 'is presented in' indicates a relationship where the subject (a concept or entity) has its contents, information, or details displayed within the object (typically an organized structure such as a table, figure, or section).",
      "disambiguation_index": 0
    },
    "Predicate-defines": {
      "label": "defines",
      "description": "The predicate 'defines' indicates a relationship where the subject provides a clear and explicit explanation or specification of the object. This connection implies that the subject has authority, expertise, or control over the definition of the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_presented_in": {
      "label": "are presented in",
      "description": "This predicate indicates a relationship where information or data about something (the subject) is displayed or shown within a specific context or medium (the object). The connection between the subject and object suggests that the subject's details are being made accessible, organized, or visualized in some way through the object.",
      "disambiguation_index": 0
    },
    "Predicate-shows": {
      "label": "shows",
      "description": "The predicate 'shows' indicates a relationship where the subject represents or demonstrates something about the object. This can be interpreted as revealing, displaying, or exhibiting information, characteristics, or patterns that are inherent to the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_only_be_processed_by": {
      "label": "can only be processed by",
      "description": "This predicate indicates that a specific entity (subject) requires or is compatible with a particular processing system or tool (object), implying exclusivity and inability to be processed by any other means.",
      "disambiguation_index": 0
    },
    "Predicate-uses_for": {
      "label": "uses for",
      "description": "The predicate 'uses for' indicates a relationship between a subject and an object where the subject has a specific purpose or function related to the object. In general, this predicate suggests that the subject utilizes or employs the object for a particular reason.",
      "disambiguation_index": 0
    },
    "Predicate-is_fully_integrated_with": {
      "label": "is fully integrated with",
      "description": "Indicates a state of unity or cohesion between two entities (subject and object), suggesting that they share resources, capabilities, or responsibilities to achieve a common goal. This predicate implies a high level of coordination, cooperation, and mutual understanding.",
      "disambiguation_index": 0
    },
    "Predicate-implemented_in": {
      "label": "implemented in",
      "description": "Indicates that a specific implementation or realization exists for something (the subject), which is achieved through the use of a particular technology, framework, language, etc. (the object).",
      "disambiguation_index": 0
    },
    "Predicate-uses": {
      "label": "uses",
      "description": "The predicate 'uses' indicates a relationship of reliance or dependence between the subject (an entity or organization) and the object (a resource, tool, method, etc.), suggesting that the subject employs, exploits, or leverages the object to achieve its goals, complete tasks, or operate effectively.",
      "disambiguation_index": 0
    },
    "Predicate-optionally_uses": {
      "label": "optionally uses",
      "description": "The predicate 'optionally uses' indicates that the subject has the possibility to utilize or leverage the object, but it does not necessarily imply a requirement for its use. The relationship suggests flexibility and adaptability in how the subject interacts with the object.",
      "disambiguation_index": 0
    },
    "Predicate-is": {
      "label": "is",
      "description": "The predicate 'is' indicates a statement of identity or equivalence between the subject and object, suggesting that they share a common characteristic, property, or attribute. It implies a sense of sameness or similarity between the two entities.",
      "disambiguation_index": 0
    },
    "Predicate-be": {
      "label": "be",
      "description": "The predicate 'be' connects the subject to an attribute or characteristic that defines its nature, essence, or identity. It establishes a state of being between the subject and object, indicating that the subject possesses or embodies the quality described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-be_compared_to": {
      "label": "be compared to",
      "description": "The predicate 'be compared to' indicates a relationship where the subject (a system or entity) has similarities or characteristics that are analogous to those of another system, entity, or concept represented by the object. This comparison can be based on various aspects such as functionality, features, performance, or overall nature.",
      "disambiguation_index": 0
    },
    "Predicate-integrates_in_one_system": {
      "label": "integrates in one system",
      "description": "The predicate 'integrates in one system' indicates that two or more entities (in this case, subject and object) are unified into a single cohesive unit, allowing for efficient interaction, processing, or management. This integration enables seamless access to information, methods, or resources within the same framework.",
      "disambiguation_index": 0
    },
    "Predicate-generate_the_results_in_JSON_structures_based_on_the_document_object_model_of_each_format_type": {
      "label": "generate the results in JSON structures based on the document object model of each format type",
      "description": "This predicate describes a process that transforms data from various formats into standardized JSON representations. It achieves this by mapping the structure and content of each input format to equivalent JSON structures, leveraging the Document Object Model (DOM) as a reference framework.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_easily_mapped_to_RDF_using_J2RM": {
      "label": "can be easily mapped to RDF using J2RM",
      "description": "This predicate indicates that a given subject has its semantic structure or representation readily convertible into Resource Description Framework (RDF), utilizing the Java 2 Relational Mapping (J2RM) tool. The connection between the subject and object suggests that J2RM can efficiently transform the subject's data model into an RDF format, enabling seamless integration with other systems and applications.",
      "disambiguation_index": 0
    },
    "Predicate-will_be_explored_in": {
      "label": "will be explored in",
      "description": "The predicate 'will be explored in' indicates a planned or intended investigation into something. It suggests that the subject (a person, entity, etc.) will engage with and examine the object (an idea, concept, place, etc.) at some point in the future.",
      "disambiguation_index": 0
    },
    "Predicate-support": {
      "label": "support",
      "description": "To provide assistance or backing to something, often enabling its existence, functionality, or effectiveness. The predicate 'support' indicates a relationship where the subject provides resources, validation, or sustenance that enables the object's purpose, operation, or relevance.",
      "disambiguation_index": 0
    },
    "Predicate-planned_to_containerise": {
      "label": "planned to containerise",
      "description": "The predicate 'planned to containerise' indicates that a subject (e.g. an entity or concept) has intended to package its contents into a standardized unit, such as a Docker container, for deployment and management purposes.",
      "disambiguation_index": 0
    },
    "Predicate-is_implemented_by": {
      "label": "is implemented by",
      "description": "Indicates that the subject is realized or executed through the object. The predicate 'is implemented by' establishes a relationship between an entity (the subject) and its underlying mechanism, process, or technology (the object), highlighting how the former is brought into being or operates due to the latter.",
      "disambiguation_index": 0
    },
    "Predicate-assists": {
      "label": "assists",
      "description": "The predicate 'assists' indicates that the subject provides support or aid to achieve a specific goal, task, or process. It implies a helping relationship between the subject and object, where the subject facilitates or enables the object's ability to accomplish something.",
      "disambiguation_index": 0
    },
    "Predicate-is_integrated_with": {
      "label": "is integrated with",
      "description": "The predicate 'is integrated with' indicates that two entities are connected or unified as a single entity. It suggests a relationship where one entity (the subject) is combined, merged, or brought together with another entity (the object), resulting in a new whole or system.",
      "disambiguation_index": 0
    },
    "Predicate-is_based_on": {
      "label": "is based on",
      "description": "Indicates that the subject's existence or functionality relies upon or originates from the object. This predicate suggests a foundational relationship between the two entities, implying that the subject's characteristics, properties, or capabilities are derived from or grounded in the object.",
      "disambiguation_index": 0
    },
    "Predicate-aids": {
      "label": "aids",
      "description": "The predicate 'aids' indicates the relationship between an entity (subject) and its purpose or function, which enables or facilitates some process or task. It suggests that the subject plays a supporting role in achieving a particular goal or outcome.",
      "disambiguation_index": 0
    },
    "Predicate-MEL_extracts_metadata_sets_and_content-based_information": {
      "label": "MEL extracts metadata sets and content-based information",
      "description": "This predicate describes a process where the subject (MEL or similar entity) retrieves and extracts specific data from an object (metadata sets and content-based information), likely involving file analysis, parsing, or other forms of digital processing.",
      "disambiguation_index": 0
    },
    "Predicate-MEL_uses_it_to_extract_the_textual_content_from_the_source_document": {
      "label": "MEL uses it to extract the textual content from the source document",
      "description": "This predicate indicates that the subject (in this case, MEL) employs a specific method or tool ('it') to accomplish a particular task, namely extracting textual content from a source document. The connection between the subject and object lies in the fact that 'MEL uses it' implies a causal relationship where the action of using the specified method/tool enables the extraction process.",
      "disambiguation_index": 0
    },
    "Predicate-MEL_implements": {
      "label": "MEL implements",
      "description": "The predicate 'MEL implements' indicates that a specific implementation or realization exists for something. It connects the subject (typically an abstract concept or framework) to the object (a concrete instance, system, or tool), suggesting that the subject has been instantiated or applied in some way.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_component_of": {
      "label": "<is_a_component_of>",
      "description": "<is_a_component_of> indicates a part-whole relationship between its subject and object. It suggests that the subject is an integral or essential component of the whole, which can be understood as a larger entity, system, structure, or concept.",
      "disambiguation_index": 0
    },
    "Predicate-6": {
      "label": "6",
      "description": "The predicate '6' represents a reference or citation to external sources of information. It indicates that the subject has some connection or relevance to the cited objects, which are typically publications, research papers, or other scholarly works.",
      "disambiguation_index": 0
    },
    "Predicate-assists_in": {
      "label": "<assists_in>",
      "description": "<assists_in> indicates that the subject (an entity or system) provides support or facilitation for a specific task, process, or activity described in the object. This predicate highlights the role of the subject as an enabler or helper in achieving a particular goal.",
      "disambiguation_index": 0
    },
    "Predicate-integrate": {
      "label": "integrate",
      "description": "To combine or unify disparate elements into a cohesive whole, often resulting in a more comprehensive and meaningful representation.",
      "disambiguation_index": 0
    },
    "Predicate-can_assist": {
      "label": "can assist",
      "description": "The predicate 'can assist' indicates the ability or potential for the subject (an entity, system, or process) to offer support, guidance, or facilitation in achieving a specific goal or task. The object represents the context, activity, or resource that can benefit from this assistance.",
      "disambiguation_index": 0
    },
    "Predicate-provides": {
      "label": "provides",
      "description": "The predicate 'provides' indicates that the subject offers or furnishes something to someone or for a purpose. It implies a relationship of supply or availability, where the subject makes available resources, information, services, or goods to meet some need or requirement.",
      "disambiguation_index": 0
    },
    "Predicate-develops": {
      "label": "develops",
      "description": "To develop means to create or improve something, such as an idea, a concept, or a product. It implies bringing forth new information, insights, or capabilities that did not previously exist. In this sense, developing connects the subject with the object by indicating the creation of a novel entity, process, or understanding.",
      "disambiguation_index": 0
    },
    "Predicate-integrates": {
      "label": "integrates",
      "description": "The predicate 'integrates' connects a subject (typically an entity or system) to its object by describing how it combines, unifies, or brings together disparate elements into a cohesive whole. This integration can occur at various levels, such as information, data, knowledge, or even processes.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_applied_to": {
      "label": "can be applied to",
      "description": "Indicates that a process or method (subject) has the capability to operate on or manipulate something else (object), often resulting in some kind of transformation, extraction, or utilization.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_applied_to_extract": {
      "label": "can be applied to extract",
      "description": "This predicate indicates that a subject has the capability or potential to apply an extraction process to obtain information from an object. It implies that the subject can operate on the object in some way, extracting relevant data or content.",
      "disambiguation_index": 0
    },
    "Predicate-implement": {
      "label": "implement",
      "description": "To implement means to put into effect or bring into practice a set of rules, methods, or principles that enable the processing, analysis, or manipulation of unstructured data sets in various formats. This predicate connects the subject with the object by indicating how the subject (e.g., MEL) enables the creation and application of primitives for metadata and content extraction from heterogeneous data sources.",
      "disambiguation_index": 0
    },
    "Predicate-contains": {
      "label": "<contains>",
      "description": "<contains> indicates a relationship where the subject has or includes the object as part of its contents. This predicate suggests that the subject encompasses or holds the object within itself, whether physically or conceptually.",
      "disambiguation_index": 0
    },
    "Predicate-can_generate": {
      "label": "can generate",
      "description": "The predicate 'can generate' indicates that a subject has the ability to produce or create an object. It implies a causal relationship between the subject's capabilities and the resulting output, suggesting that the subject can transform its internal state or information into the specified form.",
      "disambiguation_index": 0
    },
    "Predicate-is_part_of": {
      "label": "is part of",
      "description": "The predicate 'is part of' indicates a relationship where the subject is an integral or constituent component of the object. This connection suggests that the subject and object are closely related, with the subject being a smaller or more specific entity within the larger scope defined by the object.",
      "disambiguation_index": 0
    },
    "Predicate-MELs_It_component_extracts_metadata_and_content-_based_information": {
      "label": "MEL's 'It' component extracts metadata and content- based information",
      "description": "",
      "disambiguation_index": 0
    },
    "Predicate-extract": {
      "label": "extract",
      "description": "To extract means to obtain or pull out specific information or characteristics from a larger entity, such as data, text, or content. This predicate connects the subject (the source of extraction) with the object (the extracted information), indicating that the subject has been used to derive or uncover the specified details.",
      "disambiguation_index": 0
    },
    "skos:broader": {
      "label": "has a broader term",
      "description": "The predicate 'has a broader term' indicates that the subject is a specific instance or example of a more general category or concept represented by the object. The relationship between the subject and object is one of instantiation, where the subject exemplifies or represents the broader term.",
      "disambiguation_index": 0
    }
  }
}