{
  "iri": "Paper-Learning_SHACL_shapes_from_knowledge_graphs",
  "title": "Learning SHACL shapes from knowledge graphs",
  "authors": [
    "Pouya Ghiasnezhad Omran",
    "Kerry Taylor",
    "Sergio Rodr\u00edguez M\u00e9ndez",
    "Armin Haller"
  ],
  "keywords": [
    "HACL shape learning",
    "hapes constraint language",
    "knowledge graph",
    "inverse open path rule"
  ],
  "sections": [
    {
      "iri": "Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-1-Sentence-1",
              "text": "Knowledge Graphs (KGs) have proliferated on the Web since the introduction of knowledge panels to Google search in 2012."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-2",
              "text": "KGs are large data-first graph databases with weak inference rules and weakly-constraining data schemes."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-3",
              "text": "SHACL, the Shapes Constraint Language, is a W3C recommendation for expressing constraints on graph data as shapes."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-4",
              "text": "SHACL shapes serve to validate a KG, to underpin manual KG editing tasks, and to offer insight into KG structure."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-5",
              "text": "Often in practice, large KGs have no available shape constraints and so cannot obtain these benefits for ongoing maintenance and extension."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-2-Sentence-1",
              "text": "We introduce Inverse Open Path (IOP) rules, a predicate logic formalism which presents specific shapes in the form of paths over connected entities that are present in a KG."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-2",
              "text": "IOP rules express simple shape patterns that can be augmented with minimum cardinality constraints and also used as a building block for more complex shapes, such as trees and other rule patterns."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-3",
              "text": "We define formal quality measures for IOP rules and propose a novel method to learn high-quality rules from KGs."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-4",
              "text": "We show how to build high-quality tree shapes from the IOP rules."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-5",
              "text": "Our learning method, SHACLEARNER, is adapted from a state-of-the-art embedding-based open path rule learner."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-3-Sentence-1",
              "text": "We evaluate SHACLEARNER on some real-world massive KGs, including YAGO2s with 4 million facts, DBpedia 3.8 with 11 million facts, and Wikidata with 8 million facts."
            },
            {
              "iri": "Section-1-Paragraph-3-Sentence-2",
              "text": "The experiments show that our SHACLEARNER can effectively learn informative and intuitive shapes from massive KGs."
            },
            {
              "iri": "Section-1-Paragraph-3-Sentence-3",
              "text": "The shapes are diverse in structural features such as depth and width, and also in quality measures that indicate confidence and generality."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-2",
      "subtitle": "Introduction",
      "paragraphs": [
        {
          "iri": "Section-2-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-1-Sentence-1",
              "text": "While public knowledge graphs (KGs) became popular with the development of DBpedia and Yago more than a decade ago, interest in enterprise knowledge graphs has taken off since the inclusion of knowledge panels on the Google Search engine in 2012, driven by its internal knowledge graph."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-2",
              "text": "Although these KGs are massive and diverse, they are typically incomplete."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-3",
              "text": "Regardless of the method that is used to build a KG, whether collaboratively or individually, manually or automatically, it will be incomplete because of the evolving nature of human knowledge, cultural bias, and resource constraints."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-4",
              "text": "Consider Wikidata, for example, where there is more complete information for some types of entities, such as pop stars, while less for others, like opera singers."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-5",
              "text": "Even for the same type of entity, such as computer scientists, there are different depths of detail for similarly accomplished scientists, depending on their country of residence."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-2-Sentence-1",
              "text": "However, the power of KGs comes from their data-first approach, enabling contributors to extend a KG in a relatively arbitrary manner."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-2",
              "text": "By contrast, a relational database typically employs not-null and other schema-based constraints that require some attributes to be instantiated in a defined way at all times."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-3",
              "text": "Large KGs are typically populated by automatic and semi-automatic methods using non-structured sources such as Wikipedia that are prone to errors of omission and commission."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-4",
              "text": "Both kinds of errors can be highlighted for correction by a careful application of schema constraints."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-5",
              "text": "However, such constraints are commonly unavailable and, if available, uncertain and frequently violated in a KG for valid reasons, arising from the intended data-first approach of KG applications."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-3-Sentence-1",
              "text": "SHACL was formally recommended by the W3C in 2017 to express such constraints on a KG as shapes."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-2",
              "text": "For example, SHACL can be used to express that a person in a specific use case needs to have a name, birth date, and place of birth, and that these attributes have particular types: a string, a date, and a location."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-3",
              "text": "The shapes are used to guide the population of a KG, although they are not necessarily enforced."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-4",
              "text": "Typically, SHACL shapes are manually specified."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-5",
              "text": "However, as for multidimensional relational database schemes, shapes could, in principle, be inferred from KG data."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-6",
              "text": "As frequent patterns, the shapes characterize a KG and can be used for subsequent data cleaning or ongoing data entry."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-7",
              "text": "There is scant previous research on this topic."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-4-Sentence-1",
              "text": "While basic SHACL and its advanced features allow the modeling of diverse shapes including rules and constraints, most of these shapes are previously well known when expressed by alternative formalisms, including closed rules, trees, existential rules, and graph functional dependencies."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-2",
              "text": "We claim that the common underlying form of all these shapes is the path, over which additional constraints induce alternative shapes."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-3",
              "text": "For example, in DBpedia we see the following path: if an entity x is a song, then x is in an album y which has a record label z."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-5-Sentence-1",
              "text": "Since the satisfaction of a less-constrained shape is a necessary condition for satisfaction of a more complex shape but not a sufficient condition, in this paper we focus on learning paths, the least constrained shape for our purposes."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-2",
              "text": "In addition, we learn cardinality constraints that can express, for example, that a song has at least 2 producers."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-3",
              "text": "We also investigate the process of constructing one kind of more complex shape, that is a tree, out of paths."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-4",
              "text": "For example, we discover a tree about an entity which has song as its type."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-5",
              "text": "In a KG context, the tree suggests that if we have an entity of type song in the KG, then we would expect to have the associated facts too."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-6-Sentence-1",
              "text": "In this paper, we present a system, SHACLEARNER, that mines shapes from KG data."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-2",
              "text": "For this purpose, we propose a predicate calculus formalism in which rules have one body atom and a chain of conjunctive atoms in the head with a specific variable binding pattern."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-3",
              "text": "Since these rules are an inverse version of open path rules, we call them inverse open path (IOP) rules."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-4",
              "text": "To learn IOP rules, we adapt an embedding-based open path rule learner."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-5",
              "text": "We define quality measures to express the validity of IOP rules in a KG."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-6",
              "text": "SHACLEARNER uses the mined IOP rules to subsequently discover more complex tree shapes."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-7",
              "text": "Each IOP rule or tree is a SHACL shape, in the sense that it can be syntactically rewritten in SHACL."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-8",
              "text": "Our mined shapes are augmented with a novel numerical confidence measure to express the strength of evidence in the KG for each shape."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-7-Sentence-1",
              "text": "In summary, the main contributions of this paper are: we introduce a new formalism called Inverse Open Path rules, that serves as a building block for more complex shapes such as trees, together with cardinality constraints and quality measurements; we extend the Open Path rule learning method to learn IOP rules annotated with cardinality constraints, while introducing unary predicates that can act as class or type constraints; and we propose a method to aggregate IOP rules to produce tree shapes."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-8-Sentence-1",
              "text": "This paper is organized as follows: after presenting some foundations in Section 2, we describe our SHACL learning method in Section 3, including the formalism of IOP rules, the embedding-based method that discovers IOP rules from a KG, and the method for aggregating IOP rules into trees."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-2",
              "text": "In Section 4, we present related work."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-3",
              "text": "We discuss results of an experimental evaluation in Section 5 before we conclude in Section 6."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-3",
      "subtitle": "Preliminaries: Closed-path rules",
      "paragraphs": [
        {
          "iri": "Section-3-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-1-Sentence-1",
              "text": "The presentation of closed path rules and open path rules in this section is adapted and extended."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-2-Sentence-1",
              "text": "An entity e is an identifier for an object such as a place or a person."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-2",
              "text": "A fact (also known as a link) is an RDF triple (e, P, e'), written here as P(e, e'), meaning that the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-3",
              "text": "In addition, we allow unary predicates of the form P(e), also equivalently written here as the binary fact P(e, e)."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-4",
              "text": "We model unary predicates as self-loops to have a unary predicate act as the label of a link in the graph, as shown in Fig. 1, just as for binary predicates."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-5",
              "text": "Unary predicates may, but are not limited to, represent class assertions expressed in an RDF triple as (e, rdf:type, P) where P is a class or a datatype."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-6",
              "text": "A knowledge graph (KG) is a pair K = (E, F), where E is a set of entities and F is a set of facts and all the entities occurring in F also occur in E."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-3-Sentence-1",
              "text": "2.1. Closed-path rules"
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-2",
              "text": "KG rule learning systems employ various rule languages to express rules."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-3",
              "text": "RLvLR and SCALEKB use so-called closed path (CP) rules."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-4",
              "text": "Each consists of a head at the front of the implication arrow and a body at the tail."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-5",
              "text": "We say the rule is about the predicate of the head."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-6",
              "text": "The rule forms a closed path, or single unbroken loop of links between the variables."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-7",
              "text": "It has the following general form."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-4-Sentence-1",
              "text": "Pt(x, y) <- P1(x, z1) ^ P2(z1, z2) ^ ... ^ Pn(zn-1, y). (1)"
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-5-Sentence-1",
              "text": "We interpret these kinds of rules with universal quantification of all variables at the outside, and so we can infer a fact that instantiates the head of the rule by finding an instantiation of the body of the rule in the KG."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-2",
              "text": "For example, from the rule citizenOf(x, y) <- livesIn(x, z) ^ locatedIn(z, y) and the facts in the KG: livesIn(Mary, Canberra) and locatedIn(Canberra, Australia), we can infer and assert the new fact: citizenOf(Mary, Australia)."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-6-Sentence-1",
              "text": "Rules are considered more use if they generalise well, that is, they explain many facts."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-2",
              "text": "To quantify this idea we recall measures support, head coverage and standard confidence that are used in some major approaches to rule learning."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-7-Sentence-1",
              "text": "Definition 1 (satisfies, support)."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-2",
              "text": "Let r be a CP rule of the form (1)."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-3",
              "text": "A pair of entities (e, e') satisfies the body of r, denoted body_r(e, e'), if there exist entities e1, ..., e(n-1) in the KG such that all of {P1(e, e1), P2(e1, e2), ..., Pn(e(n-1), e')} are facts in the KG."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-4",
              "text": "Further (e, e') satisfies the head of r, denoted Pt(e, e'), if Pt(e, e') is a fact in the KG."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-5",
              "text": "Then the support of r counts the rule instances for which the body and the head are both satisfied in the KG."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-6",
              "text": "suppr = |{ (e, e') : body_r(e, e') and Pt(e, e') }|"
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-8-Sentence-1",
              "text": "Standard confidence (SC) and head coverage (HC) offer standardised measures for comparing rule quality."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-2",
              "text": "SC describes how frequently the rule is true, i.e., of the number of entity pairs that satisfy the body in the KG, what proportion of the inferred head instances are satisfied?"
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-3",
              "text": "It is closely related to confidence widely used in association rule mining."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-4",
              "text": "HC measures the explanatory power of the rule, i.e., what proportion of the facts satisfying the head of the rule could be inferred by satisfying the rule body?"
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-5",
              "text": "It is closely related to cover which is widely used for rule learning in inductive logic programming."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-6",
              "text": "A non-recursive rule that has both 100% SC and HC is redundant with respect to the KG, and every KG fact that is an instance of the rule head is redundant with respect to the rule."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-9-Sentence-1",
              "text": "Definition 2 (standard confidence, head coverage)."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-2",
              "text": "Let r, e, e', body_r be as given in Definition 1."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-3",
              "text": "Then standard confidence is SC(r) = suppr / |{ (e, e') : body_r(e, e') }|"
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-4",
              "text": "and head coverage is HC(r) = suppr / |{ (e, e') : Pt(e, e') }|"
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-4",
      "subtitle": "Preliminaries: Open-path rules: Rules with open variables",
      "paragraphs": [
        {
          "iri": "Section-4-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-1-Sentence-1",
              "text": "Unlike earlier work in rule mining for KG completion, OPRL for active knowledge graph completion defines open path (OP) rules of the form:"
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-2",
              "text": "P1(z0, z1) \u2227 P2(z1, z2) \u2227 ... \u2227 Pn(zn\u22121, y) \u2192 \u2203x Pt(x, z0)."
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-3",
              "text": "Here, Pi is a predicate in the KG, each of {x, zi, y} are entity variables, and all free variables are universally quantified at the outside."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-2-Sentence-1",
              "text": "We call a variable closed if it occurs in at least two distinct predicate terms, such as z0 here, and otherwise it is open."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-2",
              "text": "If all variables of a rule are closed then the rule is closed."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-3",
              "text": "An OP rule has two open variables, y and x."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-4",
              "text": "OP rules are used since they imply the existence of a fact, like spouse(x, y) \u2192 \u2203z child(x, z)."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-5",
              "text": "Unlike CP rules, OP rules do not necessarily form a loop, but a straightforward variable unification transforms an OP rule to a CP rule."
            },
            {
              "iri": "Section-4-Paragraph-2-Sentence-6",
              "text": "Every entity-instantiation of a CP rule is also an entity-instantiation of the related OP rule, but not vice versa."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-3-Sentence-1",
              "text": "To assess the quality of OP rules, we use open path standard confidence (OPSC) and open path head coverage (OPHC), which are derived from the closed path forms."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-4-Sentence-1",
              "text": "Definition 3 (open path: OPsupp, OPSC, OPHC)."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-2",
              "text": "Let r be an OP rule of the given form."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-3",
              "text": "A pair of entities (e, e') satisfies the body of r, denoted as body_r(e, e'), if there exist entities e1, ..., en\u22121 in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(en\u22121, e') are facts in the KG."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-4",
              "text": "Also, (e', e) satisfies the head of r, denoted Pt(e', e), if Pt(e', e) is a fact in the KG."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-5-Sentence-1",
              "text": "The open path support, open path standard confidence, and open path head coverage of r are given respectively by:"
            },
            {
              "iri": "Section-4-Paragraph-5-Sentence-2",
              "text": "OPsupp(r) = |{e : \u2203e', e'' such that body_r(e, e') and Pt(e'', e)}|."
            },
            {
              "iri": "Section-4-Paragraph-5-Sentence-3",
              "text": "OPSC(r) = OPsupp(r) / |{e : \u2203e' such that body_r(e, e')}|."
            },
            {
              "iri": "Section-4-Paragraph-5-Sentence-4",
              "text": "OPHC(r) = OPsupp(r) / |{e : \u2203e' such that Pt(e', e)}|."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-5",
      "subtitle": "Preliminaries: SHACL shapes",
      "paragraphs": [
        {
          "iri": "Section-5-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-1-Sentence-1",
              "text": "A KG is a schema-free database and does not need to be augmented with schema information natively."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-2",
              "text": "However, many KGs are augmented with type information that can be used to understand and validate data and can also be very helpful for inference processes on the KG."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-3",
              "text": "In 2017 the Shapes Constraint Language (SHACL) was introduced as a W3C recommendation to define schema information for KGs stored as an RDF graph."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-4",
              "text": "SHACL defines constraints for graphs as shapes."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-5",
              "text": "KGs can then be validated against a set of shapes."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-2-Sentence-1",
              "text": "Shapes can serve two main purposes: validating the quality of a KG and characterising the frequent patterns in a KG."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-2",
              "text": "In Fig. 2, we illustrate an example of a shape from Wikidata, where x and z_i are variables that are instantiated by entities."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-3",
              "text": "Although the shape is originally expressed in ShEx, we translate it to SHACL in the following."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-3-Sentence-1",
              "text": "SHACL, together with SHACL advanced features is extensive."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-2",
              "text": "Here we focus on the core of SHACL in which node shapes constrain a target predicate (e.g., the unary predicate human in Fig. 2), with property shapes expressing constraints over facts related to the target predicate."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-3",
              "text": "We particularly focus on property shapes which act to constrain an argument of the target predicate."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-4",
              "text": "In Fig. 2 the shape expresses that each entity x which satisfies human(x) should satisfy the following paths: (1) citizenOf(x, z1) ^ country(z1), (2) father(x, z2) ^ human(z2), and (3) nativeLanguage(x, z3) ^ language(z3)."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-4-Sentence-1",
              "text": "Various formalisms with corresponding shapes have been proposed to express diverse kinds of patterns exhibited in KGs, such as k-cliques, Closed rules (CR) (that include closed path rules), Functional Graph Dependency (FGD), and trees."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-2",
              "text": "CRs are used for inferring new facts."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-3",
              "text": "FGDs define constraints like the type of entities in the domain and range of predicates, or the number of entities to which an entity can be related by a specific predicate."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-4",
              "text": "These constraints are deployed to make the KG consistent."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-5",
              "text": "Regardless of differences between the formalisms, they share a key feature in their syntax."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-6",
              "text": "The building block for expressing all of these shape constraints is a sequence of predicates."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-5-Sentence-1",
              "text": "We focus on such path shapes for our shape learning system."
            },
            {
              "iri": "Section-5-Paragraph-5-Sentence-2",
              "text": "A path is a sequence of predicates connected by closed intermediate variables but terminating with open variables at both ends."
            },
            {
              "iri": "Section-5-Paragraph-5-Sentence-3",
              "text": "Although shapes in the form of a path are less constrained than some more complex shapes, they are a more general template for more complex shapes like closed rules or trees, which are also paths (with further restrictions)."
            },
            {
              "iri": "Section-5-Paragraph-5-Sentence-4",
              "text": "We will define Inverse Open Path rules induced from paths that have a straightforward interpretation as shapes, and also propose a method to mine such rules from a KG."
            },
            {
              "iri": "Section-5-Paragraph-5-Sentence-5",
              "text": "To demonstrate the potential for these kinds of shapes to serve as building blocks for more complex trees, we then propose a method that builds trees out of mined rules, and briefly discuss the application of such trees to KG completion."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-6",
      "subtitle": "SHACL learning: Rules with open variables or uncertain shapes",
      "paragraphs": [
        {
          "iri": "Section-6-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-1-Sentence-1",
              "text": "We observe that the converse of OP rules, which we call inverse open path rules (IOP), correspond to SHACL shapes."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-2",
              "text": "For example, a shape can be derived from the following three IOP rules: human(x, x) -> citizenOf(x, z1) ^ country(z1, z1), human(x, x) -> father(x, z2) ^ human(z2, z2), and human(x, x) -> nativeLanguage(x, z3) ^ language(z3, z3)."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-2-Sentence-1",
              "text": "The general form of an IOP rule is given by Pt'(x, z0) -> exists(z1, ..., z(n-1), y) P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y). (3)"
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-2",
              "text": "Here each P'i is either a predicate in the KG or its reverse with subject and object bindings swapped, and free variables are universally quantified at the outside."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-3",
              "text": "We often omit the quantifiers when writing IOP rules."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-4",
              "text": "In an IOP rule, the body of the rule is Pt, and its head is the sequence of predicates P1 ^ P2 ^ ... ^ Pn."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-5",
              "text": "Hence we instantiate the atomic body to predict an instance of the head."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-6",
              "text": "IOP rules are not Horn."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-7",
              "text": "The pattern of existential variables in the head and universal variables in the body has been investigated in the literature as existential rules."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-3-Sentence-1",
              "text": "To assess the quality of IOP rules, we follow a style of quality measures similar to those used for OP rules."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-4-Sentence-1",
              "text": "Definition 4 (inverse open path: IOPsupp, IOPSC, IOPHC)."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-2",
              "text": "Let r be an IOP rule of the form (3)."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-3",
              "text": "Then a pair of entities (e, e') satisfies the head of r, denoted head_r(e, e'), if there exist entities e1, ..., e(n-1) in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(e(n-1), e') are facts in the KG."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-4",
              "text": "A pair of entities (e'', e) satisfies the body of r, denoted Pt(e'', e), if Pt(e'', e) is a fact in the KG."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-5",
              "text": "The inverse open path support, inverse open path standard confidence, and inverse open path head coverage of r are given respectively by"
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-6",
              "text": "IOPsupp(r) = |{ (e', e'') : there exists e', e'' such that head_r(e, e') and Pt(e'', e) }|"
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-7",
              "text": "IOPSC(r) = IOPsupp(r) / |{ e' : Pt(e', e) }|"
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-8",
              "text": "IOPHC(r) = IOPsupp(r) / |{ e : there exists e' such that head_r(e, e') }|"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-5-Sentence-1",
              "text": "Notably, because any instantiated open path in a KG includes both an OP and IOP rule, the support for an IOP rule is the same as the corresponding OPSC."
            },
            {
              "iri": "Section-6-Paragraph-5-Sentence-2",
              "text": "This close relationship between OP and IOP rules helps us to mine both OP and IOP rules in one process."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-6-Sentence-1",
              "text": "We show the relationship between an OP rule and its converse IOP version in the following example."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-2",
              "text": "Consider the OP rule P1(x, z0) <- P2(z0, z1) ^ P3(z1, z2)."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-3",
              "text": "Assume we have three entities (e3, e4, e5) which can instantiate z0 and satisfy both P1(x, z0) and P2(z0, z1) ^ P3(z1, z2)."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-4",
              "text": "Assume the number of entities that can instantiate z0 to satisfy the head part is 5 ({e1, e2, e3, e4, e5}) and the number of entities that can instantiate z0 to satisfy the body part is 7 ({e2, e4, e5, e6, e7, e8, e9})."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-5",
              "text": "Hence, for this rule OPsupp = 3, OPSC = 3/7, and OPHC = 3/5."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-6",
              "text": "For the IOP version of the same rule, P1(x, z0) -> P2(z0, z1) ^ P3(z1, z2), the same entities instantiate z0, but now the body and head predicates are swapped."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-7",
              "text": "Hence, we have IOPsupp = 3, IOPSC = 3/5, and IOPHC = 3/7."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-7-Sentence-1",
              "text": "In many cases, we need rules to express not only the necessity of a chain of facts (the facts in the head of the IOP rule), but also the number of different chains which should exist."
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-2",
              "text": "For example, we may need a rule to express that each human has at least two parents."
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-3",
              "text": "Thus, we introduce IOP rules annotated with a cardinality Car, giving the following form."
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-4",
              "text": "IOPSC, IOPHC, Car : Pt'(x, z0) -> P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y). (4)"
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-5",
              "text": "Here IOPSC and IOPHC belong to [0, 1] and denote the qualities of the rule, while Car is an integer >= 1."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-8-Sentence-1",
              "text": "Definition 5 (Cardinality of an IOP rule, Car)."
            },
            {
              "iri": "Section-6-Paragraph-8-Sentence-2",
              "text": "Let r be an annotated IOP rule of the form (4), and let Car(r) be the cardinality annotation for r."
            },
            {
              "iri": "Section-6-Paragraph-8-Sentence-3",
              "text": "Then r satisfies Car(r) if and only if, for each entity e such that Pt(e', e) holds, the number of distinct instantiations of head_r(e, e') is at least Car(r)."
            },
            {
              "iri": "Section-6-Paragraph-8-Sentence-4",
              "text": "In other words, the cardinality expresses a lower bound on the number of head paths that are satisfied in the KG for every instantiation linking the body to the head."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-9-Sentence-1",
              "text": "Rules with the same head and the same body may have different cardinalities."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-2",
              "text": "While a rule might have a certain cardinality c1, lower-cardinality versions of that rule may have the same or higher IOPSC values, since a larger required cardinality places a stricter lower bound on the number of instances of the head in the KB."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-10-Sentence-1",
              "text": "Lemma 1 (IOPSC is non-increasing with length)."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-2",
              "text": "Let r be an IOP rule of the form (3) with n >= 2, and let r' be the same rule shortened by removing the last head predicate."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-3",
              "text": "Then IOPSC(r) <= IOPSC(r')."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-4",
              "text": "This result follows because the denominator of IOPSC(r) is not affected by the head of the rule, yet the numerator can only decrease when additional head predicates are included."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-11-Sentence-1",
              "text": "This lemma is useful for rule learning, because it shows that if we discard a rule due to its low IOPSC, we do not need to check versions of the rule extended with additional head atoms, since their IOPSC values would be at most as low."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-12",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-12-Sentence-1",
              "text": "Algorithm 1: SHACLearner"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-2",
              "text": "Input: a KG K, a target predicate Pt"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-3",
              "text": "Parameters: max rule length l, max rule cardinality MCar, MinIOPSC, MinIOPHC, and MinTreeSC"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-4",
              "text": "Output: a set of IOP rules R and Tree"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-5",
              "text": "1: K' := Sampling(K, Pt)"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-6",
              "text": "2: (P, A) := Embeddings(K')"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-7",
              "text": "3: R' := empty"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-8",
              "text": "4: for k from 2 to l do"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-9",
              "text": "   Add PathFinding(K', Pt, P, A, k) to R'"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-10",
              "text": "end for"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-11",
              "text": "7: R := Ev(R', K, MCar, MinIOPSC, MinIOPHC)"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-12",
              "text": "8: Tree := GreedySearch(R, MinTreeSC)"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-13",
              "text": "9: return Tree and R"
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-7",
      "subtitle": "SHACL learning: IOP learning through representation learning",
      "paragraphs": [
        {
          "iri": "Section-7-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-1-Sentence-1",
              "text": "To mine IOP rules, we start with the open path rule learner OPRL and adapt its embedding-based OP rule learning to learn annotated IOP rules."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-2",
              "text": "We call this new IOP rule learner SHACLEARNER, shown in Algorithm 1."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-3",
              "text": "SHACLEARNER uses a sampling method Sampling, shown in Algorithm 2, to prune the entities and predicates that are less relevant to the target predicate to obtain a sampled knowledge graph."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-4",
              "text": "The sample is fed to an embedding learner, RESCAL, in Embeddings."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-5",
              "text": "Then in PathFinding, SHACLEARNER uses the computed embedding representations of predicates and entities in heuristic functions that inform the generation of IOP rules bounded by a maximum length."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-6",
              "text": "Then, potential IOP rules are evaluated, annotated, and filtered in Ev to produce annotated IOP rules."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-7",
              "text": "Eventually, a tree is discovered for each argument of each target predicate by aggregating mined IOP rules in GreedySearch."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-2-Sentence-1",
              "text": "While the overall algorithm structure of SHACLEARNER is similar to OPRL, as is the embedding-based scoring function, the following elements are novel in SHACLEARNER:"
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-2",
              "text": "OPRL cannot handle unary predicates while SHACLEARNER admits unary predicates both in the head and the body of IOP rules."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-3",
              "text": "SHACLEARNER can discover and evaluate IOP rules with minimum cardinality constraints in the head of the IOP rule, while OPRL is effectively limited to learning the special case of minimum cardinality 1 for all rules."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-4",
              "text": "For this reason, the evaluation method of SHACLEARNER, Ev, differs from the OPRL evaluation module."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-5",
              "text": "The aggregation module that produces trees out of learnt IOP rules, ready for translation to SHACL, is novel in SHACLEARNER."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-8",
      "subtitle": "SHACL learning: Sampling",
      "paragraphs": [
        {
          "iri": "Section-8-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-1-Sentence-1",
              "text": "In more detail, the Sampling() method in line 1 of Algorithm 1 computes a fragment of the KG K', consisting of a bounded number of entities that are related to the target predicate Pt."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-2",
              "text": "This sampling is essential since embedding learners (e.g., HOLE and RESCAL) cannot handle massive KGs with millions of entities (e.g., YAGO2)."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-3",
              "text": "The sampling method, first introduced, is shown in Algorithm 2."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-4",
              "text": "Since we search for IOP rules with up to l atoms (including the specific body target predicate, Pt), the entity set Esample and corresponding fact set K' contains the information needed for learning such rules."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-5",
              "text": "Predicates less relevant to the target predicate are pruned in the sampling process and no facts about those predicates remain in K'."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-2-Sentence-1",
              "text": "This simple approach reduces the size of the problem significantly, as discussed."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-2",
              "text": "For a KG K with entities E and facts F, the set of sampled entities for a target predicate will be of size 2l|F||E| in the worst case."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-3",
              "text": "Hence, the complexity of the sampling algorithm is O(|K|) where |K| = |E||F|."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-4",
              "text": "In the worst case, the sampled KG is the same as the original KG, but real-world KGs are sparse with only a very small proportion of entities associated with any predicate within distance l."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-5",
              "text": "In practice, the sampled KG is far smaller than the original KG."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-3-Sentence-1",
              "text": "Algorithm 2: Sampling"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-2",
              "text": "Input: a KG K, a target predicate Pt"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-3",
              "text": "Parameters: max rule length l"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-4",
              "text": "Output: K' a subgraph of the input graph"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-5",
              "text": "1: E1 = { e | there exists e': Pt(e, e') or Pt(e', e) }"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-6",
              "text": "2: for 2 <= k <= l do"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-7",
              "text": "3:   Ek = { e | there exists e': e' in E(k-1) and (Pi(e, e') or Pi(e', e)) }"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-8",
              "text": "4: end for"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-9",
              "text": "5: Esample = union (from i=1 to l) of Ei"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-10",
              "text": "6: K' = { Pi(e, e') | (e in Esample) and (e' in Esample) }"
            },
            {
              "iri": "Section-8-Paragraph-3-Sentence-11",
              "text": "7: return K'"
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-9",
      "subtitle": "SHACL learning: Embeddings",
      "paragraphs": [
        {
          "iri": "Section-9-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-1-Sentence-1",
              "text": "After sampling, in line 2 Embeddings(), we compute predicate embeddings as well as subject and object argument embeddings for all predicates in the sampled K'."
            },
            {
              "iri": "Section-9-Paragraph-1-Sentence-2",
              "text": "The embedding is obtained from RESCAL as it can provide an extensive representation of predicates and entities as shown in previous heuristic rule learners."
            },
            {
              "iri": "Section-9-Paragraph-1-Sentence-3",
              "text": "Briefly, we use RESCAL to embed each entity e_i to a vector E_i in R^d and each predicate P_k to a matrix P_k in R^(d x d), where R is the set of real numbers and d is an integer parameter of RESCAL."
            },
            {
              "iri": "Section-9-Paragraph-1-Sentence-4",
              "text": "For each given fact P0(e1, e2), the following scoring function is computed: f(e1, P0, e2) = E1^T . P0 . E2."
            },
            {
              "iri": "Section-9-Paragraph-1-Sentence-5",
              "text": "The scoring function indicates the plausibility of the fact that e1 has relation P0 with e2."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-2-Sentence-1",
              "text": "In Embeddings() we additionally compute argument embeddings."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-2",
              "text": "To compute the subject (respectively object) argument embeddings of a predicate P_k, we aggregate the embeddings of entities that occur as the subject (respectively object) of P_k in the KG."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-3",
              "text": "Hence, for each predicate P_k we have two vectors, P1_k and P2_k, that represent the subject argument and object argument of P_k respectively."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-10",
      "subtitle": "SHACL learning: Generating and pruning rules",
      "paragraphs": [
        {
          "iri": "Section-10-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-1-Sentence-1",
              "text": "After that, in line 3 to line 7 of Algorithm 1, PathFinding() produces candidate IOP rules based on the embedding representation of the predicates involved in each rule."
            },
            {
              "iri": "Section-10-Paragraph-1-Sentence-2",
              "text": "The candidate rules are pruned by the scoring function heuristic for OP rules."
            },
            {
              "iri": "Section-10-Paragraph-1-Sentence-3",
              "text": "Due to the close relationship between OP and IOP rules, a high-scoring candidate OP rule suggests both a good OP rule and a good IOP rule."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-2-Sentence-1",
              "text": "An IOP rule Pt(x, y) -> P1(y, z) ^ P2(z, t) acts to connect entities satisfying the subject argument of the body predicate, Pt, to entities forming the object argument of the last predicate, P2, along a path of entities that satisfy a chain of predicates in the rule."
            },
            {
              "iri": "Section-10-Paragraph-2-Sentence-2",
              "text": "There is a relationship between the logical statement of the rule and certain properties in the embedding space."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-3-Sentence-1",
              "text": "1. The predicate arguments that have the same variable in the rule should have similar argument embeddings."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-2",
              "text": "For example, we should have the following similarities: P2_t ~ P1_1 and P2_1 ~ P2_1."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-4-Sentence-1",
              "text": "2. The whole path forms a composite predicate, like P*(x, t) = Pt(x, y) ^ P1(y, z) ^ P2(z, t)."
            },
            {
              "iri": "Section-10-Paragraph-4-Sentence-2",
              "text": "We compute the embedding representation of the composite predicate based on its components: P*(x, t) = Pt(x, y) . P1(y, z) . P2(z, t)."
            },
            {
              "iri": "Section-10-Paragraph-4-Sentence-3",
              "text": "Now we could check the plausibility of P*(x, t) for any pair of entities using the scoring function introduced earlier."
            },
            {
              "iri": "Section-10-Paragraph-4-Sentence-4",
              "text": "However, since we are interested in the existence of an entity-free rule, the following similarity will hold: 1 approx P1_t . Pt . P1 . P2 . P2_2."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-5-Sentence-1",
              "text": "Based on the above two properties, two scoring functions are defined to help heuristically mine the space of all possible IOP rules, producing a reduced set of candidate IOP rules."
            },
            {
              "iri": "Section-10-Paragraph-5-Sentence-2",
              "text": "The ultimate evaluation of an IOP rule will be done in the next step as described below."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-11",
      "subtitle": "SHACL learning: Efficient computation of quality measures",
      "paragraphs": [
        {
          "iri": "Section-11-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-1-Sentence-1",
              "text": "Now we focus our attention on the efficient matrix-computation of the quality measures that are novel for SHACLearner."
            },
            {
              "iri": "Section-11-Paragraph-1-Sentence-2",
              "text": "Ev() in Algorithm 1 first evaluates candidate rules on the small sampled KG, and selects only the rules with IOPsupp(r) >= 1."
            },
            {
              "iri": "Section-11-Paragraph-1-Sentence-3",
              "text": "They may still include a large number of redundant and low quality rules and so are further downselected based on their IOPSC and IOPHC calculated over the full KG."
            },
            {
              "iri": "Section-11-Paragraph-1-Sentence-4",
              "text": "We show next how to efficiently compute these measures over massive KGs using an adjacency matrix representation of the KG."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-2-Sentence-1",
              "text": "Let K = (E, F) with E = {e1, ..., en} be the set of all entities and P = {P1, ..., Pm} be the set of all predicates in F."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-2",
              "text": "We represent K as a set of square n x n adjacency matrices by defining the function A."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-3",
              "text": "Specifically, the [i, j]-th element A(Pk)[i, j] is 1 if the fact Pk(ei, ej) is in F, and 0 otherwise."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-4",
              "text": "Thus, A(Pk) is a matrix of binary values, and the set {A(Pk) | k in 1..m} represents K."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-3-Sentence-1",
              "text": "We illustrate the computation of IOPSC and IOPHC through an example."
            },
            {
              "iri": "Section-11-Paragraph-3-Sentence-2",
              "text": "Consider the IOP rule r: Pt(x, z0) -> P1(z0, x) ^ P2(z1, y)."
            },
            {
              "iri": "Section-11-Paragraph-3-Sentence-3",
              "text": "Let E = {e1, e2, e3} and F = {P1(e1, e2), P1(e2, e1), P1(e2, e3), P1(e3, e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3), Pt(e3, e2), Pt(e3, e3)}."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-4-Sentence-1",
              "text": "The adjacency matrices for the predicates P1, P2, and Pt are:"
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-2",
              "text": "A(P1) = [0 1 0; 1 0 1; 0 0 0],"
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-3",
              "text": "A(P2) = [0 1 0; 0 0 0; 0 1 1],"
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-4",
              "text": "A(Pt) = [0 0 0; 0 0 0; 0 1 1]."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-5-Sentence-1",
              "text": "For IOPSC and IOPHC (Definition 4), we need to calculate:"
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-2",
              "text": "1) The number of entities that satisfy the body of the rule, i.e. the count of e' such that there exists e'' with Pt(e'', e')."
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-3",
              "text": "2) The number of entities that satisfy the head of the rule, i.e. the count of e' such that there exists e'' with head_r(e'', e')."
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-4",
              "text": "3) The number of entities that join the head of the rule to its body, i.e. the count of e' for which there exist e'', e''' such that head_r(e'', e') and Pt(e''', e')."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-6-Sentence-1",
              "text": "For (1), we can read the pairs (e', e) directly from the matrix A(Pt)."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-2",
              "text": "To find distinct e's we sum each column and transpose to obtain the vector V^2(Pt)."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-3",
              "text": "Each non-zero element indicates a satisfying e, and the number of distinct e's is the count of non-zero elements."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-4",
              "text": "In the example, the only non-zero element in A(Pt) is A(Pt)[1, 3], and after summing columns and transposing we have V^2(Pt) = [0 1 2]^T, so {e2, e3} satisfies the head with count 2."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-7-Sentence-1",
              "text": "For (2), the pairs (e, e') satisfying the head are connected by the path P1, P2, ..., Pm."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-2",
              "text": "They can be obtained from the matrix product A(P1)*A(P2)*...*A(Pm), taking elements with a value >= Car for rules with cardinality Car."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-3",
              "text": "We find distinct e's by summing each row of this product to obtain the vector V^1(A(P1)*A(P2)*...*A(Pm))."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-4",
              "text": "Each element with value >= Car indicates a satisfying e, and the count of distinct e's is the count of non-zero elements in that vector."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-5",
              "text": "In the example, A(P1)*A(P2) = [[0,0,0],[0,2,1],[1,0,0]], and V^1(P1, P2) = [0,3,1]."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-6",
              "text": "Thus, for Car=1 we have satisfying entities e2 and e3 with a count of 2."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-7",
              "text": "For Car=2, only e2 satisfies the rule, so the count is 1."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-8-Sentence-1",
              "text": "Computing (3) is then straightforward."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-2",
              "text": "The row index of non-zero elements of V^2(Pt) indicates entities that satisfy the second argument of the body, and the row index of elements with value >= Car of V^1(A(P1)*A(P2)*...*A(Pm)) indicates entities that satisfy the first argument of the head."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-3",
              "text": "We find the entities satisfying both conditions by pairwise multiplication of those vectors."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-4",
              "text": "For the example, when Car=1, the set of such entities is {e2, e3} with count 2."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-5",
              "text": "When Car=2, the set is {e2} with count 1."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-9-Sentence-1",
              "text": "Hence, we could have three versions of r, namely r1, r2, and r3, with three different Car values 1, 2, and 3 respectively."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-2",
              "text": "For Car=1, IOPsupp(r1) = |{e2, e3}| = 2."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-3",
              "text": "From Definition 4, IOPHC(r1) = 2/2 and IOPSC(r1) = 2/2."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-4",
              "text": "For Car=2, IOPsupp(r2) = |{e2}| = 1, IOPHC(r2) = 1/1, and IOPSC(r2) = 1/2."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-5",
              "text": "In this case, for Car=3 we get the same values as for Car=2."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-12",
      "subtitle": "SHACL learning: From IOP rules to tree shapes",
      "paragraphs": [
        {
          "iri": "Section-12-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-1-Sentence-1",
              "text": "Now in line 8 of Algorithm 1 we turn to deriving SHACL trees, as illustrated in Fig. 3, from annotated IOP rules."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-2",
              "text": "This procedure is used in SHACLearner."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-3",
              "text": "We use a greedy search to aggregate the IOP rules for the subject argument and the object argument of each target predicate."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-4",
              "text": "For example, the shape of Fig. 2 has the following tree: human(x, x) -> citizenOf(x, z1) ^ country(z1, z1) ^ father(x, z2) ^ human(z2, z2) ^ nativeLanguage(x, z3) ^ language(z3, z3)."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-2-Sentence-1",
              "text": "The general form of a tree is given by P't(x, z0) -> exists(z*s, y*s) P'1( z0, z1 ) ^ P'1_1(z1, z2 ) ^ ... ^ P'n_1(z(n-1), y1 ) ^ P'1_2( z0, z1 ) ^ P'2_2(z1, z2 ) ^ ... ^ P'm_2(z(m-1), y2 ) ... ^ P'1^q(z0, z1^q ) ^ P'2^q(z1^q, z2^q ) ^ ... ^ P't^q(z(q-1)^q, y^q)."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-2",
              "text": "Here each P'i is either a predicate in the KG or its reverse with the subject and object bindings swapped."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-3",
              "text": "Free variables are universally quantified at the outside."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-4",
              "text": "In a tree we say the body of the shape is Pt and its head is the sequence of paths or branches, Path1 ^ Path2 ^ ... ^ Pathq."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-5",
              "text": "Hence we instantiate the atomic body to predict an instance of the head."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-6",
              "text": "All head branches and the body join in one shared variable, z0."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-7",
              "text": "To assess the quality of a tree we follow the quality measures for IOP rules."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-3-Sentence-1",
              "text": "Definition 6 (Tree: Treesupp, TreeSC)."
            },
            {
              "iri": "Section-12-Paragraph-3-Sentence-2",
              "text": "Let r be a tree of the above form."
            },
            {
              "iri": "Section-12-Paragraph-3-Sentence-3",
              "text": "Then a set of pairs of entities (e, e1), ..., (e, eq) satisfies the head of r, denoted headr(e), if there exist sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' in the KG such that P1(e, e1), P2(e1, e2), ..., Pt(e(q-1)', eq) are facts in the KG."
            },
            {
              "iri": "Section-12-Paragraph-3-Sentence-4",
              "text": "A pair of entities (e'', e) satisfies the body of r, denoted Pt(e'', e), if Pt(e'', e) is a fact in the KG."
            },
            {
              "iri": "Section-12-Paragraph-3-Sentence-5",
              "text": "The tree support and tree standard confidence of r are given respectively by Treesupp(r) = |{ e : there exists e' such that headr(e) and Pt(e', e) }| and TreeSC(r) = Treesupp(r) / |{ e' : Pt(e'', e') }|."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-4-Sentence-1",
              "text": "To learn each tree we employ a greedy search, GreedySearch, in line 8 of Algorithm 1."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-2",
              "text": "To do so, we sort all rules that bind the subject argument (for the left-hand tree in Fig. 3) in a non-increasing order with respect to IOPSC."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-3",
              "text": "Then we iteratively try to add the first rule in the list to the tree and compute the TreeSC."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-4",
              "text": "If the TreeSC drops below the defined threshold (TreeSCMIN) we dismiss the rule; otherwise we add it to the tree."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-5",
              "text": "For the right-hand tree we do the same with the rules that bind the object argument of the target predicate."
            },
            {
              "iri": "Section-12-Paragraph-4-Sentence-6",
              "text": "Since a conjunction of IOP rules forms a tree, TreeSC is bounded above by the minimum IOPSC of its constituent IOP rules."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-5-Sentence-1",
              "text": "These uncertain shapes can be presented as standard SHACL shapes by ignoring those that fail to satisfy minimum quality thresholds and deleting the quality annotations."
            },
            {
              "iri": "Section-12-Paragraph-5-Sentence-2",
              "text": "Aside from the cardinality, the tree may be straightforwardly interpreted as a set of SHACL shapes by reading off every path from the target predicate terminating at a node in the tree."
            },
            {
              "iri": "Section-12-Paragraph-5-Sentence-3",
              "text": "The body predicate is declared as sh:nodeShape and the path of head predicates as nested sh:path declarations within a sh:property declaration."
            },
            {
              "iri": "Section-12-Paragraph-5-Sentence-4",
              "text": "Cardinality of a path is read from the annotation of the branch at the terminating node, and declared by sh:minCount within the property declaration."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-6-Sentence-1",
              "text": "SHACLearner supports all the SHACL Core features (node and property shapes)."
            },
            {
              "iri": "Section-12-Paragraph-6-Sentence-2",
              "text": "The limitations of SHACLearner with respect to SHACL Core are: (1) it treats all properties, both object and datatype properties, as plain predicates so there is no distinction; (2) it does not perform any kind of data type validation; and (3) of cardinality expressions, only min cardinality is handled."
            },
            {
              "iri": "Section-12-Paragraph-6-Sentence-3",
              "text": "SHACLearner does not mine SPARQL-like constraints (SHACL-SPARQL)."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-7-Sentence-1",
              "text": "3.7.1. Tree shapes are useful for human interaction"
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-8-Sentence-1",
              "text": "Shapes offer KG documentation as readable patterns and also provide a way to validate a KG."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-2",
              "text": "Our novel tree shapes can additionally be used for KG-completion."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-3",
              "text": "While there are several methods proposed to complete KGs automatically by predicting missing facts, these methods traverse the KG in a breadth-first manner."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-4",
              "text": "Our proposed tree shapes instead provide an opportunity to work sequentially along a path of dependent questions such as birthPlace(Trump, ?) followed by capitalOf(?, ?)."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-5",
              "text": "The latter question cannot even be asked until we have an answer for the former question, and the existence of an answer to the former gives us the confidence to proceed to the next question along the path."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-6",
              "text": "This completion strategy is depth-first as it works through a shape tree."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-7",
              "text": "Importantly, when we want to ask such completion questions of a human, this depth-first questioning strategy will reduce the cognitive load due to the contextual connections between successive questions."
            },
            {
              "iri": "Section-12-Paragraph-8-Sentence-8",
              "text": "This strategy for human-KG-completion is applied in a smart KG editor using trees that can be generated by SHACLearner."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-9-Sentence-1",
              "text": "Tree shapes can also help a human expert extract a more intuitive concise sub-tree out of a deeper, more complex tree when desired for human interpretability."
            },
            {
              "iri": "Section-12-Paragraph-9-Sentence-2",
              "text": "If a tree with confidence TreeSCorig is pruned either by removing a branch or by removing an entire path of shape predicates, it remains a valid tree with a new TreeSCnew, with the property that TreeSCnew >= TreeSCorig."
            },
            {
              "iri": "Section-12-Paragraph-9-Sentence-3",
              "text": "Hence, by pruning a tree we obtain a simpler tree with higher confidence in the KG."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-13",
      "subtitle": "Related work",
      "paragraphs": [
        {
          "iri": "Section-13-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-1-Sentence-1",
              "text": "There are some exploratory attempts to address learning SHACL shapes from KGs."
            },
            {
              "iri": "Section-13-Paragraph-1-Sentence-2",
              "text": "They are procedural methods without logical foundations and are not shown to be scalable to handle real-world KGs."
            },
            {
              "iri": "Section-13-Paragraph-1-Sentence-3",
              "text": "They work with a small amount of data and the representation formalism they use for their output is difficult to compare with the IOP rules which we use in this paper."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-2-Sentence-1",
              "text": "One approach carries out the task in a semi-automatic manner: it provides a sample of data to an off-the-shelf graph structure learner and provides the output in an interactive interface for a human user to create SHACL shapes."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-3-Sentence-1",
              "text": "Another work provides an interactive framework to define SHACL shapes with different complexities, including nested patterns that are similar to the trees that we use."
            },
            {
              "iri": "Section-13-Paragraph-3-Sentence-2",
              "text": "A formalisation of the approach is given, but there are no shape quality measures that are essential for large scale shape mining."
            },
            {
              "iri": "Section-13-Paragraph-3-Sentence-3",
              "text": "Because the paper does not provide a system that discovers patterns from massive KGs, we cannot deploy their method for comparison purposes."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-4-Sentence-1",
              "text": "There are some works that use existing ontologies for KGs to generate SHACL shapes."
            },
            {
              "iri": "Section-13-Paragraph-4-Sentence-2",
              "text": "One work uses two different kinds of knowledge to automatically generate SHACL shapes: ontology constraint patterns as well as input ontologies."
            },
            {
              "iri": "Section-13-Paragraph-4-Sentence-3",
              "text": "In our work, we use the KG itself to discover the shapes, without relying on external modelling artefacts."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-5-Sentence-1",
              "text": "From an application point of view, there are papers which investigate the application of SHACL shapes to the validation of RDF databases, but these do not contribute to the discovery of shapes."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-6-Sentence-1",
              "text": "One proposal suggests an extended validation framework for the interaction between inference rules and SHACL shapes in KGs."
            },
            {
              "iri": "Section-13-Paragraph-6-Sentence-2",
              "text": "When a set of rules and shapes are provided, a method is proposed to detect which shapes could be violated by applying a rule."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-7-Sentence-1",
              "text": "There are some attempts to provide logical foundations for the semantics of the SHACL language, including one that presents the semantics of recursive SHACL shapes."
            },
            {
              "iri": "Section-13-Paragraph-7-Sentence-2",
              "text": "By contrast, in our work we approach SHACL semantics in the reverse direction."
            },
            {
              "iri": "Section-13-Paragraph-7-Sentence-3",
              "text": "We start with logical formalisms with both well-defined semantics and motivating use cases to derive shapes that can be trivially expressed in a fragment of SHACL."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-14",
      "subtitle": "Experiments: Transforming KGs with type predicates for experiments",
      "paragraphs": [
        {
          "iri": "Section-14-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-1-Sentence-1",
              "text": "We have implemented our SHACLEARNER based on Algorithm 1 and conducted experiments to assess it."
            },
            {
              "iri": "Section-14-Paragraph-1-Sentence-2",
              "text": "Our experiments are designed to prove the effectiveness of our SHACLEARNER at capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs (KGs)."
            },
            {
              "iri": "Section-14-Paragraph-1-Sentence-3",
              "text": "Since our proposed system is the first method to learn shapes from massive KGs automatically, we have no benchmark with which to compare."
            },
            {
              "iri": "Section-14-Paragraph-1-Sentence-4",
              "text": "However, the performance of our system shows that it can handle the task satisfactorily and can be applied in practice."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-2-Sentence-1",
              "text": "We demonstrate that SHACLEARNER is scalable so it can handle real-world massive KGs including DBpedia with over 11 million facts."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-2",
              "text": "SHACLEARNER can learn several shapes each for various target predicates."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-3",
              "text": "SHACLEARNER can discover diverse shapes with respect to the quality measurements of IOPSC and IOPHC."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-4",
              "text": "SHACLEARNER discovers shapes of varying complexity and diversity with respect to length and cardinality."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-5",
              "text": "SHACLEARNER discovers every high-quality rule (with IOPSC greater than or equal to 0.9) for a small complete KG, by comparison with an ideal learner."
            },
            {
              "iri": "Section-14-Paragraph-2-Sentence-6",
              "text": "SHACLEARNER discovers more complex shapes (trees) by aggregating learned IOP rules efficiently."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-3-Sentence-1",
              "text": "Our four benchmark KGs are described in Table 1."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-2",
              "text": "Three benchmarks, namely YAGO2s, Wikidata, and DBpedia, are common KGs and have been used in rule learning experiments previously."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-3",
              "text": "The fourth is a small synthetic KG, Poker, for analyzing the completeness of our algorithm."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-4",
              "text": "The Poker KG was adapted from the classic version to be a rich and correct KG for evaluation experiments."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-5",
              "text": "Each poker hand comprises five playing cards drawn from a deck with thirteen ranks and four suits."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-6",
              "text": "Each card is described using two attributes: suit and rank."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-7",
              "text": "Each hand is assigned to any or all of nine different ranks, including High Card, One Pair, Two Pair, etc."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-8",
              "text": "We randomly generate five hundred poker hands and all facts related to them to build a small but complete and correct KG."
            },
            {
              "iri": "Section-14-Paragraph-3-Sentence-9",
              "text": "Twenty-eight out of thirty-five predicates are unary predicates, such as fullHouse(x) where x is a specific poker hand."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-4-Sentence-1",
              "text": "All experiments were conducted on an Intel Xeon CPU E5-2650 v4 at 2.20 GHz, with 66 GB RAM and running CentOS 8."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-5-Sentence-1",
              "text": "Transforming KGs with type predicates for experiments is necessary since real-world KG models treat predicates and entities in a variety of ways."
            },
            {
              "iri": "Section-14-Paragraph-5-Sentence-2",
              "text": "We require a common representation for this work that clearly distinguishes entities and predicates."
            },
            {
              "iri": "Section-14-Paragraph-5-Sentence-3",
              "text": "We employ an abstract model that is used in Description Logic ontologies, where classes and types are named unary predicates, and roles (also called properties) are named binary predicates."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-6-Sentence-1",
              "text": "Presenting the class and type information as unary predicates also allows us to learn fully abstracted (entity-free) shapes instead of partially instantiated shapes."
            },
            {
              "iri": "Section-14-Paragraph-6-Sentence-2",
              "text": "This feature is important since learning partially instantiated shapes can cause an explosion in the space of possible shapes."
            },
            {
              "iri": "Section-14-Paragraph-6-Sentence-3",
              "text": "Using self-loop links for unary predicates is convenient syntactic sugar to keep the presentation in the triple format, as for the original input KGs."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-7-Sentence-1",
              "text": "In real-world KGs, concept or class membership may be modeled as entity instances of a binary fact."
            },
            {
              "iri": "Section-14-Paragraph-7-Sentence-2",
              "text": "For example, DBpedia contains predicates where the second arguments of these predicates are types or classes."
            },
            {
              "iri": "Section-14-Paragraph-7-Sentence-3",
              "text": "Instead, we choose to model types and classes with unary predicates."
            },
            {
              "iri": "Section-14-Paragraph-7-Sentence-4",
              "text": "To do so, we make new predicates from facts in the form, where x is the name of an album."
            },
            {
              "iri": "Section-14-Paragraph-7-Sentence-5",
              "text": "Then we produce new unary facts based on the new predicate and related facts."
            }
          ]
        },
        {
          "iri": "Section-14-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-14-Paragraph-8-Sentence-1",
              "text": "We use the two type-like predicates from DBpedia 3.8 and the one from Wikidata to generate our unary predicates and facts."
            },
            {
              "iri": "Section-14-Paragraph-8-Sentence-2",
              "text": "These predicates each have a class as their second argument."
            },
            {
              "iri": "Section-14-Paragraph-8-Sentence-3",
              "text": "To prune the classes with few instances for which learning may be pointless, we consider only our unary predicates which have at least one hundred facts."
            },
            {
              "iri": "Section-14-Paragraph-8-Sentence-4",
              "text": "We retain the original predicates and facts in the KG as well as extending it with our new ones."
            },
            {
              "iri": "Section-14-Paragraph-8-Sentence-5",
              "text": "In Table 1, we report the specifications of two benchmarks where we have added the unary predicates and facts."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-15",
      "subtitle": "Experiments: Learning IOP rules",
      "paragraphs": [
        {
          "iri": "Section-15-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-1-Sentence-1",
              "text": "We follow the established approach for evaluating KG rule-learning methods, that is, measuring the quantity and quality of distinct rules learnt."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-2",
              "text": "Rule quality is measured by Inverse open path standard confidence (IOPSC) and Inverse open path head coverage (IOPHC)."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-3",
              "text": "We randomly select 50 target predicates from Wikidata and DBPedia unary predicates (157 and 355 respectively)."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-4",
              "text": "We use all binary predicates of YAGO2s (i.e., 37) as target predicates."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-5",
              "text": "Each binary target predicate serves as two target predicates, once in the straight form (where the object argument of the predicate is the common variable to connect the head) and secondly in its reverse form (where the subject argument serves to connect)."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-6",
              "text": "In this manner, we ensure that the results of SHACLEARNER on YAGO2s with its binary predicates as targets is comparable with the results for Wikidata and DBpedia that have unary predicates as targets."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-7",
              "text": "Hence for YAGO2s we have 74 target predicates."
            },
            {
              "iri": "Section-15-Paragraph-1-Sentence-8",
              "text": "A 10 hour limit is set for learning each target predicate."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-2-Sentence-1",
              "text": "Table 2 shows the number of rules, the average numbers of quality IOP rules found, the proportion of target predicates for which at least one IOP rule was found, and the running times in hours, averaged over the targets."
            },
            {
              "iri": "Section-15-Paragraph-2-Sentence-2",
              "text": "Only high quality rules meeting minimum quality thresholds are included in these figures, that is, with IOPSC greater than or equal to 0.1 and IOPHC greater than or equal to 0.01, thresholds established in comparative work."
            },
            {
              "iri": "Section-15-Paragraph-2-Sentence-3",
              "text": "These thresholds are quite low, so rules of low quality are also included."
            },
            {
              "iri": "Section-15-Paragraph-2-Sentence-4",
              "text": "Generally, selecting a low threshold at the time of learning is a safe choice since the rules can be further pruned by applying stricter quality thresholds later on."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-3-Sentence-1",
              "text": "SHACLEARNER shows satisfactory performance in terms of both the runtime and the numbers of quality rules mined."
            },
            {
              "iri": "Section-15-Paragraph-3-Sentence-2",
              "text": "Note that rules found have a variety of lengths and cardinalities."
            },
            {
              "iri": "Section-15-Paragraph-3-Sentence-3",
              "text": "To better present the quality performance of rules, we illustrate the distribution of rules with respect to the features, IOPSC, IOPHC, cardinality and length, and also IOPSC vs length."
            },
            {
              "iri": "Section-15-Paragraph-3-Sentence-4",
              "text": "In the following, the proportion of mined rules having the various feature values is presented, to more evenly demonstrate the quality of performance over the three very different KGs."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-4-Sentence-1",
              "text": "The distribution of mined rules with respect to their IOPSC and IOPHC is shown in the figures."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-2",
              "text": "In the left-hand chart we observe a consistent decrease in the proportion of quality rules as the IOPSC increases."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-3",
              "text": "In the right hand chart we see a similar pattern for increasing IOPHC, but the decrease is not as consistent, showing there must be many relevant rules with many covered head instances."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-4",
              "text": "Over all benchmarks, the majority of learned rules have lower IOPSC and IOPHC."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-5",
              "text": "This is expected because the statistical likelihood of poor quality rules is much higher."
            },
            {
              "iri": "Section-15-Paragraph-4-Sentence-6",
              "text": "Indeed, we show experimentally that our pruning techniques, that are necessary for scalability, prune away predominantly lower quality rules."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-5-Sentence-1",
              "text": "With respect to IOPSC, proportionally more quality rules are learnt from DBpedia than from the other KGs, with Wikidata coming second, ahead of YAGO2s."
            },
            {
              "iri": "Section-15-Paragraph-5-Sentence-2",
              "text": "This phenomenon might be a result of our deliberate selection of type-like unary predicates as targets for DBPedia and Wikidata, whereas for YAGO2s we use every one of the 37 binary predicates as a target."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-6-Sentence-1",
              "text": "The distribution of mined rules with respect to their cardinalities shows that the largest proportion of rules has a cardinality of 1, as expected, as they have the least stringent requirements to be met in the KG."
            },
            {
              "iri": "Section-15-Paragraph-6-Sentence-2",
              "text": "We observe an expected decrease with greater cardinalities as they demand tighter restrictions to be satisfied."
            },
            {
              "iri": "Section-15-Paragraph-6-Sentence-3",
              "text": "YAGO2 demonstrates a tendency towards higher cardinalities than the other KGs, possibly a result of its more curated development."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-7-Sentence-1",
              "text": "The distribution of mined rules with respect to their lengths shows that as the length increases, the number of rules would increase since the space of possible rules grows, and this is what we see."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-8-Sentence-1",
              "text": "For a concrete example of SHACL learning, we show the following three IOP rules mined from DBpedia in the experiments."
            },
            {
              "iri": "Section-15-Paragraph-8-Sentence-2",
              "text": "The IOPSC, IOPHC, and Cardinality annotations respectively prefix each rule."
            },
            {
              "iri": "Section-15-Paragraph-8-Sentence-3",
              "text": "The first rule indicates x should belong to an album that has y as record label."
            },
            {
              "iri": "Section-15-Paragraph-8-Sentence-4",
              "text": "The second rule requires a song (x) to have at least one producer while the third rule requires a song to have at least two producers, and these two rules are distinguished by the cardinality annotation."
            },
            {
              "iri": "Section-15-Paragraph-8-Sentence-5",
              "text": "As we discussed, the third rule is more constraining than the second, so the confidence of the third rule is lower than the confidence of the second, based on the KG data."
            }
          ]
        },
        {
          "iri": "Section-15-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-15-Paragraph-9-Sentence-1",
              "text": "Using rules found in the experiments, we further illustrate the practical meaning of the IOPSC and IOPHC qualities."
            },
            {
              "iri": "Section-15-Paragraph-9-Sentence-2",
              "text": "While IOPSC determines the confidence of a rule based on counting the proportion of target predicate instances for which the rule holds true in the KG, IOPHC indicates the proportion of rule consequent instances that are justified by target predicate instances in the KG, thereby indicating the relevance of the rule to the target."
            },
            {
              "iri": "Section-15-Paragraph-9-Sentence-3",
              "text": "In Wikidata+UP, all unary predicates are occupations such as singer or entrepreneur, so all the entities which have these types turn out to be persons even though there is no explicit person type in our KG."
            },
            {
              "iri": "Section-15-Paragraph-9-Sentence-4",
              "text": "Thus, the occupations all have very similar IOP rules about each of them with high IOPSC and low IOPHC."
            },
            {
              "iri": "Section-15-Paragraph-9-Sentence-5",
              "text": "On the other hand, for these unary occupation predicates there are also some IOP rules with high IOPHC that apply only to one specific unary predicate."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-16",
      "subtitle": "Experiments: Completeness analysis of IOP rule learning",
      "paragraphs": [
        {
          "iri": "Section-16-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-1-Sentence-1",
              "text": "SHACLEARNER uses two tricks to significantly reduce the search space for IOP rules in PathFinding of Algorithm 1, namely the prior Sampling and the heuristic pruning used inside PathFinding that uses the embedding-based scoring function."
            },
            {
              "iri": "Section-16-Paragraph-1-Sentence-2",
              "text": "We conduct experiments to explore how these two pruning methods affect SHACLEARNER with regard to the quality and quantity of learnt rules."
            },
            {
              "iri": "Section-16-Paragraph-1-Sentence-3",
              "text": "To do so, we create three variants of SHACLEARNER as follows."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-2-Sentence-1",
              "text": "(-S+H): SHACLEARNER that does not sample and so uses the complete input KG in all components, including embedding learning, heuristic pruning, and ultimate evaluation."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-2",
              "text": "(+S-H): SHACLEARNER that samples but does not use heuristic pruning and so generates rules based on the sampled KG and evaluates rules on the complete KG."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-3",
              "text": "(-S-H): SHACLEARNER that does not use sampling nor heuristic pruning."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-4",
              "text": "This system is an ideal IOP rule learner that generates and evaluates all possible rules up to the maximum length parameter."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-5",
              "text": "Since this method is a brute-force search, it cannot handle any real-world KG such as those we used in the performance evaluation."
            },
            {
              "iri": "Section-16-Paragraph-2-Sentence-6",
              "text": "(+S+H): SHACLEARNER with its full functionality."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-3-Sentence-1",
              "text": "Since we use only the small Poker KG for this experiment, we can handle the task without sampling or heuristic mechanisms."
            },
            {
              "iri": "Section-16-Paragraph-3-Sentence-2",
              "text": "We use all 28 unary predicates as the target predicates."
            },
            {
              "iri": "Section-16-Paragraph-3-Sentence-3",
              "text": "The first row shows the number of IOP rules that are learnt by ideal, modified SHACLEARNER (-S-H) with no pruning, for all target predicates, separated into various IOPSC intervals."
            },
            {
              "iri": "Section-16-Paragraph-3-Sentence-4",
              "text": "The latter rows show, for each variant, the percentage difference in the number of rules found, relative to the first row."
            },
            {
              "iri": "Section-16-Paragraph-3-Sentence-5",
              "text": "The last row corresponds to unmodified SHACLEARNER of Algorithm 1."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-4-Sentence-1",
              "text": "For example, consider the first column (the number of learnt rules with IOPSC in range of [0.1, 0.3))."
            },
            {
              "iri": "Section-16-Paragraph-4-Sentence-2",
              "text": "In the first row, we have 163 rules learnt by ideal rule learner (SHACLEARNER (-S-H)) that is inefficient yet complete."
            },
            {
              "iri": "Section-16-Paragraph-4-Sentence-3",
              "text": "In the second row, we have the performance of the SHACLEARNER (-S+H), the system without sampling, but with the heuristic rule learning module, in comparison with the ideal rule learner (SHACLEARNER (-S-H)), given as -10%."
            },
            {
              "iri": "Section-16-Paragraph-4-Sentence-4",
              "text": "That means SHACLEARNER (-S+H) learns 146 rules with IOPSC in range of [0.1, 0.3): 17 or 10% fewer rules than the ideal learner."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-5-Sentence-1",
              "text": "We observe that SHACLEARNER does not miss any rules of the highest quality, i.e., with IOPSC greater than or equal to 0.9."
            },
            {
              "iri": "Section-16-Paragraph-5-Sentence-2",
              "text": "SHACLEARNER\u2019s pruning methods cause it to fail to discover more rules of lower quality, with the number of missing rules increasing as quality decreases."
            },
            {
              "iri": "Section-16-Paragraph-5-Sentence-3",
              "text": "This is a reassuring property, since the goal of pruning is to improve the computational performance without missing high-quality rules."
            },
            {
              "iri": "Section-16-Paragraph-5-Sentence-4",
              "text": "In real applications, we will typically retain and action only the highest quality rules."
            }
          ]
        },
        {
          "iri": "Section-16-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-16-Paragraph-6-Sentence-1",
              "text": "We observe that, unlike the other pruning variants, using heuristic pruning alone in (-S+H) does not uniformly increase in effectiveness with decreasing rule quality."
            },
            {
              "iri": "Section-16-Paragraph-6-Sentence-2",
              "text": "This may be because using the complete KG for learning rules about all target predicates could harm the quality of the learnt embeddings used in the scoring function of SHACLEARNER."
            },
            {
              "iri": "Section-16-Paragraph-6-Sentence-3",
              "text": "The better quality of embeddings extracted from the sampled KG arises from our sampling method that creates a KG that is customised for the target predicate."
            },
            {
              "iri": "Section-16-Paragraph-6-Sentence-4",
              "text": "All entities in the sampled KG are either directly related to the target predicate or close neighbours of directly related entities."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-17",
      "subtitle": "Experiments: Learning trees from IOP rules",
      "paragraphs": [
        {
          "iri": "Section-17-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-1-Sentence-1",
              "text": "Now we turn to presenting results for the trees that are built based on the IOP rules discovered in the experiments."
            },
            {
              "iri": "Section-17-Paragraph-1-Sentence-2",
              "text": "We report the characteristics of discovered trees and use a value of 0.1 for the TreeSCMIN parameter, showing average TreeSC for each KG, along with the average number of branches in the trees and the average tree-building runtime."
            },
            {
              "iri": "Section-17-Paragraph-1-Sentence-3",
              "text": "The number of trees for each KG is defined by the number of target predicates for which we have at least one IOP rule."
            }
          ]
        },
        {
          "iri": "Section-17-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-2-Sentence-1",
              "text": "The results show the running time for aggregating IOP rules into trees is lower than the initial IOP mining time by a factor greater than 10."
            },
            {
              "iri": "Section-17-Paragraph-2-Sentence-2",
              "text": "If, on the other hand, we wanted to discover such complex shapes from scratch, it would be exhaustively time-consuming due to the sensitivity of rule learners to the maximum length of rules."
            },
            {
              "iri": "Section-17-Paragraph-2-Sentence-3",
              "text": "The number of potential rules in the search space grows exponentially with the maximum number of predicates of the rules."
            }
          ]
        },
        {
          "iri": "Section-17-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-3-Sentence-1",
              "text": "The average number of branches in the mined trees are 50%, 31%, and 56% of the corresponding number of mined rules."
            },
            {
              "iri": "Section-17-Paragraph-3-Sentence-2",
              "text": "Hence, by imposing the additional tree-shaped constraint over the basic IOP-shaped constraint, at least 44% of IOP rules are pruned."
            }
          ]
        },
        {
          "iri": "Section-17-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-4-Sentence-1",
              "text": "For an example of tree shape learning, we show a fragment of a 39-branched tree mined from DBpedia by aggregating IOP rules in the experiments."
            },
            {
              "iri": "Section-17-Paragraph-4-Sentence-2",
              "text": "Here, the first annotation value (0.13) presents the SC of the tree and the subsequent values at the beginning of each branch indicate the branch cardinality."
            },
            {
              "iri": "Section-17-Paragraph-4-Sentence-3",
              "text": "This tree can be read as saying that a song has an album with a record label, an album with two producers, an album with a genre, and an artist who is a musical artist."
            }
          ]
        },
        {
          "iri": "Section-17-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-17-Paragraph-5-Sentence-1",
              "text": "As can be seen here, there remains an opportunity for improving tree shapes for simplicity and easier interpretation by unifying some variables that occur in predicates that occur in multiple branches."
            },
            {
              "iri": "Section-17-Paragraph-5-Sentence-2",
              "text": "We plan to investigate this potential post-processing step in future work."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-18",
      "subtitle": "Conclusion",
      "paragraphs": [
        {
          "iri": "Section-18-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-1-Sentence-1",
              "text": "In this paper we propose a method to learn SHACL shapes from KGs as a way to describe KG patterns, to validate KGs, and also to support new data entry."
            },
            {
              "iri": "Section-18-Paragraph-1-Sentence-2",
              "text": "For entities that satisfy target predicates, our shapes describe conjunctive paths of constraints over properties, enhanced with minimum cardinality constraints."
            },
            {
              "iri": "Section-18-Paragraph-1-Sentence-3",
              "text": "We reduce the SHACL learning problem to learning a novel kind of rules, Inverse Open Path rules (IOP)."
            },
            {
              "iri": "Section-18-Paragraph-1-Sentence-4",
              "text": "We introduce rule quality measures IOP Standard Confidence, IOP Head Coverage, and Cardinality which augment the rules."
            }
          ]
        },
        {
          "iri": "Section-18-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-2-Sentence-1",
              "text": "IOPSC effectively extends SHACL with shapes, representing the quantified uncertainty of a candidate shape to be selected for interestingness or for KG verification."
            },
            {
              "iri": "Section-18-Paragraph-2-Sentence-2",
              "text": "We also propose a method to aggregate learnt IOP rules in order to discover more complex shapes, that is, trees."
            },
            {
              "iri": "Section-18-Paragraph-2-Sentence-3",
              "text": "The shapes support efficient and interpretable human validation in a depth-first manner and are employed, for example, in an editor called Schimatos for manual knowledge graph completion."
            },
            {
              "iri": "Section-18-Paragraph-2-Sentence-4",
              "text": "The shapes can also be used to complete information triggered by entities with only a type or class declaration by automatically generating dynamic data entry forms."
            }
          ]
        },
        {
          "iri": "Section-18-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-3-Sentence-1",
              "text": "In this manual mode, they can also be used more traditionally to complete missing facts for a target predicate, as well as other predicates related to the target, while enabling the acquisition of facts about entities that are entirely missing from the KG."
            },
            {
              "iri": "Section-18-Paragraph-3-Sentence-2",
              "text": "To learn such shapes we adapt an embedding-based Open Path Rule Learner (OPRL) by introducing the following novel components: (1) we propose an IOP rule language that allows us to mine rules with open variables, with one predicate forming the body and a chain of predicates as the head; (2) we introduce cardinality constraints and tree shapes for more expressive patterns; and (3) we propose an efficient method to evaluate IOP rules and trees by exactly computing the quality measures of each rule using fast matrix and vector operations."
            }
          ]
        },
        {
          "iri": "Section-18-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-4-Sentence-1",
              "text": "Our experiments show that SHACLearner can mine IOP rules of various lengths, cardinalities, and qualities from three massive real-world benchmark KGs including Yago, Wikidata, and DBpedia."
            },
            {
              "iri": "Section-18-Paragraph-4-Sentence-2",
              "text": "Learning shape constraints from schema-free knowledge bases, such as most modern KGs, is a challenging task, beginning with the formalism of constraints that determine the scope of knowledge that can be acquired."
            },
            {
              "iri": "Section-18-Paragraph-4-Sentence-3",
              "text": "The next challenge is designing an efficient learning method, where dealing with uncertainty in the constraints and the learning process adds an extra dimension of challenge but also adds utility."
            },
            {
              "iri": "Section-18-Paragraph-4-Sentence-4",
              "text": "A good learning algorithm should scale gracefully so that discovered constraints are relatively more certain than those that are missed, and SHACLearner establishes a benchmark for this problem."
            }
          ]
        },
        {
          "iri": "Section-18-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-18-Paragraph-5-Sentence-1",
              "text": "In future work, we will validate the shapes we learn with SHACLearner via formal human-expert evaluation and further extend the expressivity of the shapes we can discover."
            },
            {
              "iri": "Section-18-Paragraph-5-Sentence-2",
              "text": "We also propose to redesign the SHACLearner algorithm for a MapReduce implementation to handle extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata."
            }
          ]
        }
      ]
    }
  ],
  "times": [
    0.0011594295501708984,
    1128.3860816955566,
    1552.1878745555878,
    1494.5580751895905,
    3.3870785236358643,
    0.005419492721557617,
    0.010022401809692383,
    1994.0151762962341,
    6987.55393743515,
    63.37038207054138,
    285.3101909160614,
    0.8938777446746826,
    0.03442025184631348,
    2070.586936235428,
    244.31778740882874,
    1.332531213760376,
    54.55359387397766,
    47.16218686103821,
    1587.5891916751862,
    914.6396169662476,
    810.5305578708649,
    104.14258766174316,
    1004.9629526138306,
    91.59333968162537,
    0.08107566833496094,
    1.026986837387085
  ],
  "nodes": {
    "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.": {
      "node_id": "a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "disambiguation_index": 0,
      "label": "a method to learn SHACL shapes from KGs as a way to describe KG patterns, to validate KGs, and also to support new data entry.",
      "aliases": [
        "a method to learn SHACL shapes from KGs as a way to describe KG patterns, to validate KGs, and also to support new data entry."
      ],
      "types": [
        "method",
        "approach"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel approach for learning Shapes Constraint Language (SHACL) shapes from knowledge graphs (KGs), enabling description of KG patterns, validation of KGs, and support for new data entry.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "a method to learn SHACL shapes from KGs as a way to describe KG patterns, to validate KGs, and also to support new data entry.",
          "local_types": [
            "method",
            "approach"
          ],
          "iri": "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.-Mention-1"
        }
      ],
      "relevance": 0.74609375
    },
    "Entity-our_proposed_system": {
      "node_id": "our_proposed_system",
      "disambiguation_index": 0,
      "label": "our proposed system",
      "aliases": [
        "our proposed system"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel method for learning high-quality shapes from massive knowledge graphs (KGs) automatically, which uses Inverse Open Path rules and SHACLEARNER algorithm.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-3",
          "local_name": "our proposed system",
          "local_types": [
            "method"
          ],
          "iri": "Entity-our_proposed_system-Mention-1"
        }
      ],
      "relevance": 0.7451171875
    },
    "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg": {
      "node_id": "our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "disambiguation_index": 0,
      "label": "our SHACLEARNER can effectively learn informative and intuitive shapes from massive KGs",
      "aliases": [
        "our SHACLEARNER can effectively learn informative and intuitive shapes from massive KGs"
      ],
      "types": [
        "algorithmic capability"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A learning method adapted from a state-of-the-art embedding-based open path rule learner, capable of effectively generating high-quality SHACL shapes from large knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "our SHACLEARNER can effectively learn informative and intuitive shapes from massive KGs",
          "local_types": [
            "algorithmic capability"
          ],
          "iri": "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg-Mention-1"
        }
      ],
      "relevance": 0.7392578125
    },
    "Entity-instantiated_open_path": {
      "node_id": "instantiated_open_path",
      "disambiguation_index": 0,
      "label": "instantiated open path",
      "aliases": [
        "instantiated open path"
      ],
      "types": [
        "concept",
        "path"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An instantiated open path in a Knowledge Graph (KG) is an instance of a SHACL shape, derived from an Inverse Open Path rule, which corresponds to a sequence of predicates and entities that satisfy both the body and head of the IOP rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "instantiated open path",
          "local_types": [
            "concept",
            "path"
          ],
          "iri": "Entity-instantiated_open_path-Mention-1"
        }
      ],
      "relevance": 0.73876953125
    },
    "Entity-shacl_shape_from_kg": {
      "node_id": "shacl_shape_from_kg",
      "disambiguation_index": 0,
      "label": "SHACL shapes from KGs",
      "aliases": [
        "SHACL shapes from KGs"
      ],
      "types": [
        "method",
        "shapes"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of Semantic Web Architecture and Constraints Language (SHACL) shapes derived from knowledge graphs (KGs)",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "SHACL shapes from KGs",
          "local_types": [
            "method",
            "shapes"
          ],
          "iri": "Entity-shacl_shape_from_kg-Mention-1"
        }
      ],
      "relevance": 0.73681640625
    },
    "Entity-output": {
      "node_id": "output",
      "disambiguation_index": 0,
      "label": "Output",
      "aliases": [
        "Output"
      ],
      "types": [
        "rule",
        "set"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The output refers to a set of Inverse Open Path (IOP) rules, which are used to express constraints on graph data as shapes in SHACL, and can be learned from knowledge graphs using the proposed algorithm SHACLEARNER.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-4",
          "local_name": "Output",
          "local_types": [
            "rule",
            "set"
          ],
          "iri": "Entity-output-Mention-1"
        }
      ],
      "relevance": 0.73486328125
    },
    "Entity-open_path_rule_learner__oprl_": {
      "node_id": "open_path_rule_learner__oprl_",
      "disambiguation_index": 0,
      "label": "Open Path Rule Learner (OPRL)",
      "aliases": [
        "Open Path Rule Learner (OPRL)"
      ],
      "types": [
        "algorithm",
        "model"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An algorithm or model that learns Open Path Rules (IOP) from knowledge graphs, which are used to describe conjunctive paths of constraints over properties and enhance SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "Open Path Rule Learner (OPRL)",
          "local_types": [
            "algorithm",
            "model"
          ],
          "iri": "Entity-open_path_rule_learner__oprl_-Mention-1"
        }
      ],
      "relevance": 0.7333984375
    },
    "Entity-address_learning_shacl_shape_from_kg": {
      "node_id": "address_learning_shacl_shape_from_kg",
      "disambiguation_index": 0,
      "label": "address learning SHACL shapes from KGs",
      "aliases": [
        "address learning SHACL shapes from KGs"
      ],
      "types": [
        "KG",
        "SHACL shape",
        "goal",
        "SHACL shape mining",
        "learning"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process or method of automatically generating SHACL shape constraints from knowledge graphs (KGs)",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "address learning SHACL shapes from KGs",
          "local_types": [
            "KG",
            "SHACL shape",
            "goal",
            "SHACL shape mining",
            "learning"
          ],
          "iri": "Entity-address_learning_shacl_shape_from_kg-Mention-1"
        }
      ],
      "relevance": 0.732421875
    },
    "Entity-to_offer_insight_into_kg_structure": {
      "node_id": "to_offer_insight_into_kg_structure",
      "disambiguation_index": 0,
      "label": "to offer insight into KG structure",
      "aliases": [
        "to offer insight into KG structure"
      ],
      "types": [
        "insight"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept of offering insight into Knowledge Graph (KG) structure refers to the process or method by which SHACL shapes are used to validate a KG, facilitate manual editing tasks, and provide understanding of the graph's underlying structure.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "to offer insight into KG structure",
          "local_types": [
            "insight"
          ],
          "iri": "Entity-to_offer_insight_into_kg_structure-Mention-1"
        }
      ],
      "relevance": 0.73095703125
    },
    "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule": {
      "node_id": "the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "disambiguation_index": 0,
      "label": "the number of trees for each KG is defined by the number of target predicates for which we have at least one IOP rule",
      "aliases": [
        "the number of trees for each KG is defined by the number of target predicates for which we have at least one IOP rule"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure that defines the number of tree shapes in a knowledge graph (KG) based on the presence of Inverse Open Path (IOP) rules for specific target predicates.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-3",
          "local_name": "the number of trees for each KG is defined by the number of target predicates for which we have at least one IOP rule",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.73046875
    },
    "Entity-open_path_rule_learning_method": {
      "node_id": "open_path_rule_learning_method",
      "disambiguation_index": 0,
      "label": "Open Path rule learning method",
      "aliases": [
        "embedding-based open path rule learner",
        "Open Path rule learning method"
      ],
      "types": [
        "algorithm",
        "method",
        "machine learning technique",
        "learning technique",
        "approach",
        "machine learning model",
        "methodology"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A machine learning technique for learning high-quality SHACL (Shapes Constraint Language) shapes from knowledge graphs, specifically designed to learn inverse open path rules and cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "Open Path rule learning method",
          "local_types": [
            "algorithm",
            "learning technique",
            "method",
            "machine learning technique"
          ],
          "iri": "Entity-open_path_rule_learning_method-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-5",
          "local_name": "embedding-based open path rule learner",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-open_path_rule_learning_method-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-4",
          "local_name": "embedding-based open path rule learner",
          "local_types": [
            "algorithm",
            "machine learning model"
          ],
          "iri": "Entity-open_path_rule_learning_method-Mention-3"
        }
      ],
      "relevance": 0.72998046875
    },
    "Entity-right-hand_tree": {
      "node_id": "right-hand_tree",
      "disambiguation_index": 0,
      "label": "right-hand tree",
      "aliases": [
        "the right-hand tree",
        "right-hand tree"
      ],
      "types": [
        "tree",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of SHACL shape learned from knowledge graphs using Inverse Open Path rules, representing a sequence of paths or branches that can be used to validate and complete massive KGs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-5",
          "local_name": "right-hand tree",
          "local_types": [
            "data structure"
          ],
          "iri": "Entity-right-hand_tree-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-5",
          "local_name": "the right-hand tree",
          "local_types": [
            "tree"
          ],
          "iri": "Entity-right-hand_tree-Mention-2"
        }
      ],
      "relevance": 0.72998046875
    },
    "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.": {
      "node_id": "use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "disambiguation_index": 0,
      "label": "use existing ontologies for KGs to generate SHACL shapes.",
      "aliases": [
        "existing ontologies for KGs to generate SHACL shapes",
        "use existing ontologies for KGs to generate SHACL shapes."
      ],
      "types": [
        "approach",
        "ontology use",
        "ontology",
        "SHACL shape generation",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Approach or method that utilizes existing ontologies in knowledge graphs (KGs) to automatically generate Shapes Constraint Language (SHACL) shapes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "use existing ontologies for KGs to generate SHACL shapes.",
          "local_types": [
            "approach",
            "ontology use"
          ],
          "iri": "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "existing ontologies for KGs to generate SHACL shapes",
          "local_types": [
            "knowledge graph",
            "ontology",
            "SHACL shape generation"
          ],
          "iri": "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.-Mention-2"
        }
      ],
      "relevance": 0.7294921875
    },
    "Entity-annotated_iop_rule_(1)": {
      "node_id": "annotated_iop_rule_(1)",
      "disambiguation_index": 1,
      "label": "annotated IOP rules",
      "aliases": [
        "annotated IOP rules"
      ],
      "types": [
        "concept",
        "rule set"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of Inverse Open Path (IOP) rules, each annotated with quality measures and filtered for relevance, used in learning high-quality SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "annotated IOP rules",
          "local_types": [
            "concept",
            "rule set"
          ],
          "iri": "Entity-annotated_iop_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.72900390625
    },
    "Entity-inverse_open_path__iop__rule": {
      "node_id": "inverse_open_path__iop__rule",
      "disambiguation_index": 0,
      "label": "inverse open path (IOP) rules",
      "aliases": [
        "Inverse Open Path rules (IOP)",
        "inverse open path (IOP) rules"
      ],
      "types": [
        "rule system",
        "algorithm",
        "computational rule",
        "knowledge representation",
        "rule",
        "rule set",
        "IOP"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism that presents specific shapes in the form of paths over connected entities present in a Knowledge Graph (KG), used as building blocks for more complex shapes such as trees and rule patterns.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-3",
          "local_name": "inverse open path (IOP) rules",
          "local_types": [
            "rule set",
            "rule",
            "computational rule"
          ],
          "iri": "Entity-inverse_open_path__iop__rule-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-3",
          "local_name": "Inverse Open Path rules (IOP)",
          "local_types": [
            "rule system",
            "algorithm",
            "knowledge representation",
            "rule",
            "IOP"
          ],
          "iri": "Entity-inverse_open_path__iop__rule-Mention-2"
        }
      ],
      "relevance": 0.72509765625
    },
    "Entity-shacl_learning_method": {
      "node_id": "shacl_learning_method",
      "disambiguation_index": 0,
      "label": "SHACL learning method",
      "aliases": [
        "SHACL learning method"
      ],
      "types": [
        "algorithm",
        "method",
        "technique",
        "methodology",
        "learning"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique or methodology used to learn or discover knowledge graph (KG) insights using Shape Expression And Constraint Language (SHACL)",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "SHACL learning method",
          "local_types": [
            "algorithm",
            "method",
            "technique",
            "methodology",
            "learning"
          ],
          "iri": "Entity-shacl_learning_method-Mention-1"
        }
      ],
      "relevance": 0.72509765625
    },
    "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.": {
      "node_id": "one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "disambiguation_index": 0,
      "label": "One proposal suggests an extended validation framework for the interaction between inference rules and SHACL shapes in KGs.",
      "aliases": [
        "One proposal suggests an extended validation framework for the interaction between inference rules and SHACL shapes in KGs."
      ],
      "types": [
        "proposal",
        "framework design"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A proposal that outlines a method to detect which SHACL shapes could be violated by applying inference rules in knowledge graphs (KGs).",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "One proposal suggests an extended validation framework for the interaction between inference rules and SHACL shapes in KGs.",
          "local_types": [
            "proposal",
            "framework design"
          ],
          "iri": "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.-Mention-1"
        }
      ],
      "relevance": 0.72509765625
    },
    "Entity-this_product": {
      "node_id": "this_product",
      "disambiguation_index": 0,
      "label": "this product",
      "aliases": [
        "this product"
      ],
      "types": [
        "product"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The SHACL shape constraint learned from a knowledge graph using the Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "this product",
          "local_types": [
            "product"
          ],
          "iri": "Entity-this_product-Mention-1"
        }
      ],
      "relevance": 0.72509765625
    },
    "Entity-this_paper_(1)": {
      "node_id": "this_paper_(1)",
      "disambiguation_index": 1,
      "label": "this paper",
      "aliases": [
        "this paper"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "This paper proposes a method called SHACLEARNER that learns SHACL shapes from knowledge graphs (KGs) as a way to describe KG patterns, validate KGs, and support new data entry.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "this paper",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this_paper_(1)-Mention-1"
        }
      ],
      "relevance": 0.72265625
    },
    "Entity-the_sampled_kg_(1)": {
      "node_id": "the_sampled_kg_(1)",
      "disambiguation_index": 1,
      "label": "the sampled KG",
      "aliases": [
        "the sampled KG"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A subset of a knowledge graph, customized for learning SHACL shapes and used as input for generating IOP rules.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-4",
          "local_name": "the sampled KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-the_sampled_kg_(1)-Mention-1"
        }
      ],
      "relevance": 0.72216796875
    },
    "Entity-each_iop_rule_or_tree": {
      "node_id": "each_iop_rule_or_tree",
      "disambiguation_index": 0,
      "label": "Each IOP rule or tree",
      "aliases": [
        "Each IOP rule or tree"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A SHACL shape that represents either an Inverse Open Path (IOP) rule, which is a predicate logic formalism expressing specific shapes in the form of paths over connected entities present in a Knowledge Graph, or a tree-shaped structure constructed from these rules.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-7",
          "local_name": "Each IOP rule or tree",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-each_iop_rule_or_tree-Mention-1"
        }
      ],
      "relevance": 0.720703125
    },
    "Entity-kg_can_then_be_validated_against_a_set_of_shape": {
      "node_id": "kg_can_then_be_validated_against_a_set_of_shape",
      "disambiguation_index": 0,
      "label": "KGs can then be validated against a set of shapes",
      "aliases": [
        "KGs can then be validated against a set of shapes"
      ],
      "types": [
        "validation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACL (Shapes Constraint Language) shapes that define constraints for validating knowledge graphs",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-5",
          "local_name": "KGs can then be validated against a set of shapes",
          "local_types": [
            "validation"
          ],
          "iri": "Entity-kg_can_then_be_validated_against_a_set_of_shape-Mention-1"
        }
      ],
      "relevance": 0.72021484375
    },
    "Entity-more_complex_tree_shape": {
      "node_id": "more_complex_tree_shape",
      "disambiguation_index": 0,
      "label": "more complex tree shapes",
      "aliases": [
        "more complex tree shapes"
      ],
      "types": [
        "tree structure",
        "data structure"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "More complex tree shapes refer to a type of SHACL shape that can be constructed by aggregating Inverse Open Path (IOP) rules, which are used as building blocks for expressing simple shape patterns in the form of paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-6",
          "local_name": "more complex tree shapes",
          "local_types": [
            "tree structure",
            "data structure"
          ],
          "iri": "Entity-more_complex_tree_shape-Mention-1"
        }
      ],
      "relevance": 0.72021484375
    },
    "Entity-for_a_kg_k": {
      "node_id": "for_a_kg_k",
      "disambiguation_index": 0,
      "label": "For a KG K",
      "aliases": [
        "For a KG K"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A subgraph or fragment of a knowledge graph K, used as input to learn SHACL shapes from IOP rules.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "For a KG K",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-for_a_kg_k-Mention-1"
        }
      ],
      "relevance": 0.7197265625
    },
    "Entity-the_iop_rule": {
      "node_id": "the_iop_rule",
      "disambiguation_index": 0,
      "label": "the IOP rules",
      "aliases": [
        "the IOP rules"
      ],
      "types": [
        "rule",
        "IOP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of specific shapes in the form of paths over connected entities that are present in a Knowledge Graph, used to validate or predict instances of SHACL trees.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "the IOP rules",
          "local_types": [
            "rule",
            "IOP rule"
          ],
          "iri": "Entity-the_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.71875
    },
    "Entity-shape_constraint": {
      "node_id": "shape_constraint",
      "disambiguation_index": 0,
      "label": "shape constraints",
      "aliases": [
        "shape constraints"
      ],
      "types": [
        "constraint",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACL shapes that serve to validate a Knowledge Graph (KG), underpin manual KG editing tasks, and offer insight into KG structure.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "shape constraints",
          "local_types": [
            "constraint",
            "rule"
          ],
          "iri": "Entity-shape_constraint-Mention-1"
        }
      ],
      "relevance": 0.716796875
    },
    "Entity-op_and_iop_rule": {
      "node_id": "op_and_iop_rule",
      "disambiguation_index": 0,
      "label": "OP and IOP rules",
      "aliases": [
        "OP and IOP rules"
      ],
      "types": [
        "algorithm",
        "rules",
        "OP rules",
        "ruleset",
        "IOP rules"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of algorithmic rules, including Open Path (OP) rules and Inverse Open Path (IOP) rules, used for expressing constraints on graph data as shapes in Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "OP and IOP rules",
          "local_types": [
            "rules",
            "OP rules",
            "IOP rules"
          ],
          "iri": "Entity-op_and_iop_rule-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "OP and IOP rules",
          "local_types": [
            "ruleset",
            "algorithm"
          ],
          "iri": "Entity-op_and_iop_rule-Mention-2"
        }
      ],
      "relevance": 0.716796875
    },
    "Entity-there_are_some_work": {
      "node_id": "there_are_some_work",
      "disambiguation_index": 0,
      "label": "There are some works",
      "aliases": [
        "There are some works"
      ],
      "types": [
        "research",
        "study"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Research studies that utilize existing ontologies for knowledge graphs (KGs) to automatically generate Shapes Constraint Language (SHACL) shapes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "There are some works",
          "local_types": [
            "research",
            "study"
          ],
          "iri": "Entity-there_are_some_work-Mention-1"
        }
      ],
      "relevance": 0.71630859375
    },
    "Entity-a_way_to_validate_a_kg": {
      "node_id": "a_way_to_validate_a_kg",
      "disambiguation_index": 0,
      "label": "a way to validate a KG",
      "aliases": [
        "a way to validate a KG"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method for verifying the correctness and consistency of knowledge graphs (KGs) by using SHACL shapes, which serve as constraints on graph data.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-1",
          "local_name": "a way to validate a KG",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-a_way_to_validate_a_kg-Mention-1"
        }
      ],
      "relevance": 0.71484375
    },
    "Entity-inverse_open_path_rule": {
      "node_id": "inverse_open_path_rule",
      "disambiguation_index": 0,
      "label": "Inverse Open Path rules",
      "aliases": [
        "inverse open path rules",
        "Inverse Open Path rules"
      ],
      "types": [
        "algorithm",
        "rule type",
        "method",
        "concept",
        "mathematical concept",
        "formalism",
        "rule",
        "rule set"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism presenting specific SHACL shapes in the form of paths over connected entities that are present in a Knowledge Graph, used as building blocks for more complex shapes such as trees and rule patterns.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "Inverse Open Path rules",
          "local_types": [
            "rule set",
            "formalism",
            "mathematical concept",
            "concept"
          ],
          "iri": "Entity-inverse_open_path_rule-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-4",
          "local_name": "Inverse Open Path rules",
          "local_types": [
            "method",
            "concept",
            "rule"
          ],
          "iri": "Entity-inverse_open_path_rule-Mention-2"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-3",
          "local_name": "Inverse Open Path rules",
          "local_types": [
            "rule type",
            "algorithm"
          ],
          "iri": "Entity-inverse_open_path_rule-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "inverse open path rules",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-inverse_open_path_rule-Mention-4"
        }
      ],
      "relevance": 0.7138671875
    },
    "Entity-shacl_learning": {
      "node_id": "shacl_learning",
      "disambiguation_index": 0,
      "label": "SHACL learning",
      "aliases": [
        "SHACL learning"
      ],
      "types": [
        "technique",
        "approach",
        "learning process",
        "knowledge acquisition",
        "learning"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process or method for learning shapes using SHACL (Shapes Constraint Language) to validate and express constraints on graph data, particularly knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-1",
          "local_name": "SHACL learning",
          "local_types": [
            "technique",
            "approach",
            "learning process",
            "knowledge acquisition",
            "learning"
          ],
          "iri": "Entity-shacl_learning-Mention-1"
        }
      ],
      "relevance": 0.71337890625
    },
    "Entity-rule_found": {
      "node_id": "rule_found",
      "disambiguation_index": 0,
      "label": "rules found",
      "aliases": [
        "rules found"
      ],
      "types": [
        "finding",
        "conclusion",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of high-quality SHACL shapes learned from knowledge graphs, characterized by their IOPSC (Inverse Open Path Standard Confidence) and IOPHC (Inverse Open Path Head Coverage) values.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-2",
          "local_name": "rules found",
          "local_types": [
            "finding",
            "conclusion",
            "rule"
          ],
          "iri": "Entity-rule_found-Mention-1"
        }
      ],
      "relevance": 0.712890625
    },
    "Entity-we_will_typically_retain_and_action_only_the_highest_quality_rule": {
      "node_id": "we_will_typically_retain_and_action_only_the_highest_quality_rule",
      "disambiguation_index": 0,
      "label": "we will typically retain and action only the highest quality rules",
      "aliases": [
        "we will typically retain and action only the highest quality rules"
      ],
      "types": [
        "rule",
        "quality control"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of high-quality IOP (Inverse Open Path) rules that are learned from a knowledge graph using SHACLEARNER.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-4",
          "local_name": "we will typically retain and action only the highest quality rules",
          "local_types": [
            "rule",
            "quality control"
          ],
          "iri": "Entity-we_will_typically_retain_and_action_only_the_highest_quality_rule-Mention-1"
        }
      ],
      "relevance": 0.7119140625
    },
    "Entity-the_paper": {
      "node_id": "the_paper",
      "disambiguation_index": 0,
      "label": "the paper",
      "aliases": [
        "the paper"
      ],
      "types": [
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "This refers to the research paper titled 'Learning SHACL shapes from knowledge graphs' which introduces Inverse Open Path rules and a novel method, SHACLEARNER, for learning high-quality SHACL shapes from massive Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-3",
          "local_name": "the paper",
          "local_types": [
            "paper"
          ],
          "iri": "Entity-the_paper-Mention-1"
        }
      ],
      "relevance": 0.71142578125
    },
    "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg": {
      "node_id": "the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "disambiguation_index": 0,
      "label": "the interaction between inference rules and SHACL shapes in KGs",
      "aliases": [
        "the interaction between inference rules and SHACL shapes in KGs"
      ],
      "types": [
        "interaction",
        "inference rules",
        "SHACL",
        "KGs"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of combining inference rules with SHACL shapes to validate or detect potential violations within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "the interaction between inference rules and SHACL shapes in KGs",
          "local_types": [
            "interaction",
            "inference rules",
            "SHACL",
            "KGs"
          ],
          "iri": "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg-Mention-1"
        }
      ],
      "relevance": 0.71044921875
    },
    "Entity-our_algorithm": {
      "node_id": "our_algorithm",
      "disambiguation_index": 0,
      "label": "our algorithm",
      "aliases": [
        "our algorithm"
      ],
      "types": [
        "algorithm",
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel method to learn high-quality shapes from massive knowledge graphs (KGs) using Inverse Open Path rules and a state-of-the-art embedding-based open path rule learner.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-3",
          "local_name": "our algorithm",
          "local_types": [
            "algorithm",
            "research"
          ],
          "iri": "Entity-our_algorithm-Mention-1"
        }
      ],
      "relevance": 0.71044921875
    },
    "Entity-each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule": {
      "node_id": "each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "disambiguation_index": 0,
      "label": "each KG is defined by the number of target predicates for which we have at least one IOP rule",
      "aliases": [
        "each KG is defined by the number of target predicates for which we have at least one IOP rule"
      ],
      "types": [
        "definition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A characteristic that defines a knowledge graph (KG) in terms of the number of target predicates with at least one Inverse Open Path (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-3",
          "local_name": "each KG is defined by the number of target predicates for which we have at least one IOP rule",
          "local_types": [
            "definition"
          ],
          "iri": "Entity-each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.70849609375
    },
    "Entity-found": {
      "node_id": "found",
      "disambiguation_index": 0,
      "label": "found",
      "aliases": [
        "found"
      ],
      "types": [
        "verb",
        "action"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "IOP (Inverse Open Path) rules, specifically high-quality SHACL shapes learned from knowledge graphs using the SHACLEARNER method",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-2",
          "local_name": "found",
          "local_types": [
            "verb",
            "action"
          ],
          "iri": "Entity-found-Mention-1"
        }
      ],
      "relevance": 0.7080078125
    },
    "Entity-the_shape_constraint_language__shacl_": {
      "node_id": "the_shape_constraint_language__shacl_",
      "disambiguation_index": 0,
      "label": "the Shapes Constraint Language (SHACL)",
      "aliases": [
        "the Shapes Constraint Language (SHACL)"
      ],
      "types": [
        "standard",
        "language"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A standard language used to express constraints on graph data, particularly for validating and characterizing patterns in Knowledge Graphs (KGs).",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "the Shapes Constraint Language (SHACL)",
          "local_types": [
            "standard",
            "language"
          ],
          "iri": "Entity-the_shape_constraint_language__shacl_-Mention-1"
        }
      ],
      "relevance": 0.70556640625
    },
    "Entity-the_runtime": {
      "node_id": "the_runtime",
      "disambiguation_index": 0,
      "label": "the runtime",
      "aliases": [
        "the runtime"
      ],
      "types": [
        "metric",
        "performance"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The time taken to learn high-quality SHACL shapes from knowledge graphs using the Inverse Open Path (IOP) rule learner, SHACLEARNER.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-1",
          "local_name": "the runtime",
          "local_types": [
            "metric",
            "performance"
          ],
          "iri": "Entity-the_runtime-Mention-1"
        }
      ],
      "relevance": 0.70556640625
    },
    "Entity-the_number_of_quality_rule_mined": {
      "node_id": "the_number_of_quality_rule_mined",
      "disambiguation_index": 0,
      "label": "the numbers of quality rules mined",
      "aliases": [
        "the numbers of quality rules mined"
      ],
      "types": [
        "result"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of high-quality Inverse Open Path (IOP) rules learned by SHACLEARNER from massive knowledge graphs, such as YAGO2s, DBpedia 3.8, and Wikidata.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-1",
          "local_name": "the numbers of quality rules mined",
          "local_types": [
            "result"
          ],
          "iri": "Entity-the_number_of_quality_rule_mined-Mention-1"
        }
      ],
      "relevance": 0.705078125
    },
    "Entity-the_quality_of_iop_rule": {
      "node_id": "the_quality_of_iop_rule",
      "disambiguation_index": 0,
      "label": "the quality of IOP rules",
      "aliases": [
        "the quality of IOP rules",
        "the quality measures for IOP rules"
      ],
      "types": [
        "standard",
        "quality",
        "IOP rule",
        "quality measure"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of measures evaluating the effectiveness and confidence of Inverse Open Path (IOP) rules in predicting instances of SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "the quality of IOP rules",
          "local_types": [
            "quality",
            "IOP rule"
          ],
          "iri": "Entity-the_quality_of_iop_rule-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-7",
          "local_name": "the quality measures for IOP rules",
          "local_types": [
            "standard",
            "quality measure"
          ],
          "iri": "Entity-the_quality_of_iop_rule-Mention-2"
        }
      ],
      "relevance": 0.70458984375
    },
    "Entity-we_(4)": {
      "node_id": "we_(4)",
      "disambiguation_index": 4,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors, referring to themselves as 'we', are discussing their method for learning high-quality SHACL shapes from knowledge graphs (KGs) and evaluating its effectiveness on massive real-world KGs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(4)-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(4)-Mention-2"
        }
      ],
      "relevance": 0.70361328125
    },
    "Entity-three_very_different_kg": {
      "node_id": "three_very_different_kg",
      "disambiguation_index": 0,
      "label": "three very different KGs",
      "aliases": [
        "three very different KGs"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Three distinct knowledge graphs, namely YAGO2s, DBpedia 3.8, and Wikidata, used as benchmarks for evaluating SHACLEARNER's performance in learning high-quality shapes from massive KGs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-4",
          "local_name": "three very different KGs",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-three_very_different_kg-Mention-1"
        }
      ],
      "relevance": 0.70361328125
    },
    "Entity-shacl_shape_(1)": {
      "node_id": "shacl_shape_(1)",
      "disambiguation_index": 1,
      "label": "SHACL shapes",
      "aliases": [
        "shapes",
        "SHACL shapes"
      ],
      "types": [
        "shape constraint",
        "concept",
        "shape",
        "ontology",
        "shapes"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "In SHACL (Shapes Constraint Language), shapes are constraints on graph data that serve to validate a knowledge graph, facilitate manual editing tasks, and provide insights into its structure.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "SHACL shapes",
          "local_types": [
            "shape constraint",
            "shapes",
            "concept"
          ],
          "iri": "Entity-shacl_shape_(1)-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "SHACL shapes",
          "local_types": [
            "ontology"
          ],
          "iri": "Entity-shacl_shape_(1)-Mention-2"
        },
        {
          "reference": "Section-13-Paragraph-6-Sentence-2",
          "local_name": "shapes",
          "local_types": [
            "shape"
          ],
          "iri": "Entity-shacl_shape_(1)-Mention-3"
        }
      ],
      "relevance": 0.7021484375
    },
    "Entity-we_(2)": {
      "node_id": "we_(2)",
      "disambiguation_index": 2,
      "label": "We",
      "aliases": [
        "We",
        "we"
      ],
      "types": [
        "researcher",
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of this paper introducing Inverse Open Path rules and SHACLEARNER method to learn high-quality shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(2)-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-1",
          "local_name": "we",
          "local_types": [
            "researcher",
            "author"
          ],
          "iri": "Entity-we_(2)-Mention-2"
        }
      ],
      "relevance": 0.7021484375
    },
    "Entity-iop_rule": {
      "node_id": "iop_rule",
      "disambiguation_index": 0,
      "label": "IOP rules",
      "aliases": [
        "IOP rule",
        "IOP rules"
      ],
      "types": [
        "guideline",
        "rules",
        "ontology",
        "standard",
        "conceptual framework",
        "machine learning algorithm",
        "algorithmic process",
        "inference engine",
        "knowledge graph rule",
        "rule system",
        "machine learning concept",
        "constraints",
        "computational model",
        "notation system",
        "intelligent optimization process rule",
        "rule-based system",
        "pattern",
        "knowledge representation",
        "rule",
        "logical statement",
        "programming concept",
        "inverse open path rule",
        "algorithmic system",
        "concepts",
        "IOP",
        "conceptual-structure",
        "algorithmic framework",
        "logical statements",
        "logic",
        "knowledge graph concept",
        "constraint",
        "notation",
        "inverse open path rules",
        "computational method",
        "IOP rule",
        "rule set",
        "formal system",
        "algorithm",
        "rule type",
        "concept",
        "ruleset",
        "mathematical concept",
        "algorithmic rule",
        "theory",
        "formalism",
        "intelligent optimization procedure rule",
        "logical rule",
        "technical term"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Inverse Open Path rules: a predicate logic formalism that presents specific shape patterns in the form of paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "IOP rules",
          "local_types": [
            "formal system",
            "rule system",
            "concept",
            "pattern",
            "formalism",
            "rule",
            "rule set"
          ],
          "iri": "Entity-iop_rule-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "conceptual-structure",
            "concept",
            "constraint",
            "ontology",
            "ruleset",
            "rule-based system",
            "conceptual framework",
            "knowledge representation",
            "rule",
            "rule set"
          ],
          "iri": "Entity-iop_rule-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "rule type",
            "computational model",
            "concept",
            "ruleset",
            "theory",
            "knowledge representation"
          ],
          "iri": "Entity-iop_rule-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-8-Sentence-1",
          "local_name": "IOP rule",
          "local_types": [
            "algorithm",
            "rule type",
            "notation",
            "formalism",
            "rule"
          ],
          "iri": "Entity-iop_rule-Mention-4"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "IOP rules",
          "local_types": [
            "rule set",
            "formal system",
            "concept",
            "rules"
          ],
          "iri": "Entity-iop_rule-Mention-5"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-2",
          "local_name": "IOP rule",
          "local_types": [
            "mathematical concept",
            "rule"
          ],
          "iri": "Entity-iop_rule-Mention-6"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-2",
          "local_name": "IOP rules",
          "local_types": [
            "algorithm",
            "concept",
            "rule-based system",
            "knowledge representation",
            "rule",
            "rule set"
          ],
          "iri": "Entity-iop_rule-Mention-7"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "IOP rules",
          "local_types": [
            "rule set",
            "knowledge representation"
          ],
          "iri": "Entity-iop_rule-Mention-8"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-4",
          "local_name": "IOP rules",
          "local_types": [
            "rules",
            "inverse open path rules",
            "rule-based system",
            "IOP rule",
            "machine learning algorithm",
            "rule",
            "rule set"
          ],
          "iri": "Entity-iop_rule-Mention-9"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-5",
          "local_name": "IOP rules",
          "local_types": [
            "rules",
            "knowledge representation"
          ],
          "iri": "Entity-iop_rule-Mention-10"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-6",
          "local_name": "IOP rules",
          "local_types": [
            "rule-based system",
            "knowledge representation"
          ],
          "iri": "Entity-iop_rule-Mention-11"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "constraints",
            "rule-based system",
            "mathematical concept",
            "rules"
          ],
          "iri": "Entity-iop_rule-Mention-12"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "IOP rules",
          "local_types": [
            "rule type",
            "concept",
            "rule",
            "rule set",
            "algorithmic process",
            "inverse open path rule"
          ],
          "iri": "Entity-iop_rule-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-1",
          "local_name": "IOP rule",
          "local_types": [
            "formal system",
            "rule type",
            "formalism",
            "rule",
            "IOP"
          ],
          "iri": "Entity-iop_rule-Mention-14"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "IOP rules",
          "local_types": [
            "algorithm",
            "rule type",
            "rule"
          ],
          "iri": "Entity-iop_rule-Mention-15"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "knowledge graph concept",
            "rule type",
            "concept",
            "rule"
          ],
          "iri": "Entity-iop_rule-Mention-16"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "IOP rule",
          "local_types": [
            "algorithmic framework",
            "computational model",
            "rule",
            "rule type"
          ],
          "iri": "Entity-iop_rule-Mention-17"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "IOP rule",
          "local_types": [
            "rule type",
            "concept",
            "notation system"
          ],
          "iri": "Entity-iop_rule-Mention-18"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-4",
          "local_name": "IOP rules",
          "local_types": [
            "rule type"
          ],
          "iri": "Entity-iop_rule-Mention-19"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "IOP rules",
          "local_types": [
            "logical statements",
            "rules",
            "rule-based system",
            "conceptual framework",
            "knowledge representation",
            "logical rule"
          ],
          "iri": "Entity-iop_rule-Mention-20"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "IOP rules",
          "local_types": [
            "rule-based system"
          ],
          "iri": "Entity-iop_rule-Mention-21"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "IOP rules",
          "local_types": [
            "rule",
            "rules",
            "rule-based system",
            "logic"
          ],
          "iri": "Entity-iop_rule-Mention-22"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "rule type",
            "ontology",
            "pattern",
            "rule",
            "logical statement"
          ],
          "iri": "Entity-iop_rule-Mention-23"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "IOP rules",
          "local_types": [
            "ruleset",
            "algorithmic system",
            "rules"
          ],
          "iri": "Entity-iop_rule-Mention-24"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "rule type",
            "ontology",
            "pattern",
            "rule",
            "logical statement"
          ],
          "iri": "Entity-iop_rule-Mention-25"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "rule type",
            "ontology",
            "rule-based system",
            "computational method",
            "pattern",
            "rule",
            "logical statement"
          ],
          "iri": "Entity-iop_rule-Mention-26"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "IOP rule",
          "local_types": [
            "rule",
            "algorithm"
          ],
          "iri": "Entity-iop_rule-Mention-27"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "constraints",
            "rules",
            "ontology",
            "rule-based system",
            "rule",
            "technical term"
          ],
          "iri": "Entity-iop_rule-Mention-28"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "IOP rules",
          "local_types": [
            "rule set",
            "algorithm"
          ],
          "iri": "Entity-iop_rule-Mention-29"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-7",
          "local_name": "IOP rules",
          "local_types": [
            "rule",
            "constraints",
            "ontology",
            "rules"
          ],
          "iri": "Entity-iop_rule-Mention-30"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-6",
          "local_name": "IOP rules",
          "local_types": [
            "constraints",
            "rules",
            "ontology",
            "ruleset",
            "rule",
            "programming concept"
          ],
          "iri": "Entity-iop_rule-Mention-31"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "IOP rules",
          "local_types": [
            "rules",
            "rule-based system",
            "standard",
            "formalism",
            "rule",
            "inference engine"
          ],
          "iri": "Entity-iop_rule-Mention-32"
        },
        {
          "reference": "Section-15-Paragraph-2-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "algorithm",
            "concept",
            "intelligent optimization process rule",
            "algorithmic rule",
            "intelligent optimization procedure rule",
            "rule"
          ],
          "iri": "Entity-iop_rule-Mention-33"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "ontology",
            "ruleset",
            "knowledge representation",
            "rule",
            "rule set"
          ],
          "iri": "Entity-iop_rule-Mention-34"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-4",
          "local_name": "IOP rules",
          "local_types": [
            "guideline",
            "standard"
          ],
          "iri": "Entity-iop_rule-Mention-35"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-5",
          "local_name": "IOP rules",
          "local_types": [
            "algorithm",
            "rule"
          ],
          "iri": "Entity-iop_rule-Mention-36"
        },
        {
          "reference": "Section-16-Paragraph-1-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "constraints",
            "concepts",
            "rules"
          ],
          "iri": "Entity-iop_rule-Mention-37"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-4",
          "local_name": "IOP rules",
          "local_types": [
            "constraints",
            "concepts",
            "rules"
          ],
          "iri": "Entity-iop_rule-Mention-38"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "IOP rules",
          "local_types": [
            "algorithm",
            "machine learning concept",
            "constraints",
            "rules",
            "algorithmic rule",
            "rule",
            "concepts"
          ],
          "iri": "Entity-iop_rule-Mention-39"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "algorithm",
            "concept",
            "rules",
            "rule-based system",
            "rule set"
          ],
          "iri": "Entity-iop_rule-Mention-40"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-3",
          "local_name": "IOP rule",
          "local_types": [
            "rule-based system",
            "inference engine"
          ],
          "iri": "Entity-iop_rule-Mention-41"
        },
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "algorithm",
            "concept",
            "rules",
            "rule-based system",
            "knowledge representation",
            "rule"
          ],
          "iri": "Entity-iop_rule-Mention-42"
        },
        {
          "reference": "Section-17-Paragraph-3-Sentence-2",
          "local_name": "IOP rules",
          "local_types": [
            "algorithm",
            "rule",
            "IOP rule",
            "rules"
          ],
          "iri": "Entity-iop_rule-Mention-43"
        },
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "algorithm",
            "rule-based system",
            "rules"
          ],
          "iri": "Entity-iop_rule-Mention-44"
        },
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "knowledge representation",
            "rule-based system",
            "rule",
            "knowledge graph rule"
          ],
          "iri": "Entity-iop_rule-Mention-45"
        }
      ],
      "relevance": 0.69970703125
    },
    "Entity-property_shape": {
      "node_id": "property_shape",
      "disambiguation_index": 0,
      "label": "property shapes",
      "aliases": [
        "property shapes"
      ],
      "types": [
        "constraint definition",
        "concept",
        "shape",
        "constraint",
        "data structure",
        "conceptual structure",
        "rule",
        "data model component"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACL (Shapes Constraint Language) definitions that express constraints on graph data as paths of connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "property shapes",
          "local_types": [
            "constraint definition",
            "shape",
            "constraint",
            "data structure",
            "conceptual structure",
            "rule",
            "data model component"
          ],
          "iri": "Entity-property_shape-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "property shapes",
          "local_types": [
            "data structure",
            "concept"
          ],
          "iri": "Entity-property_shape-Mention-2"
        }
      ],
      "relevance": 0.69921875
    },
    "Entity-although_they_are_not_necessarily_enforced": {
      "node_id": "although_they_are_not_necessarily_enforced",
      "disambiguation_index": 0,
      "label": "although they are not necessarily enforced",
      "aliases": [
        "although they are not necessarily enforced"
      ],
      "types": [
        "constraint",
        "ontology concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACL shapes, which serve as constraints on graph data in Knowledge Graphs and guide population of KGs but may not be strictly adhered to.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "although they are not necessarily enforced",
          "local_types": [
            "constraint",
            "ontology concept"
          ],
          "iri": "Entity-although_they_are_not_necessarily_enforced-Mention-1"
        }
      ],
      "relevance": 0.69873046875
    },
    "Entity-shaclearner__shown_in_algorithm_1": {
      "node_id": "shaclearner__shown_in_algorithm_1",
      "disambiguation_index": 0,
      "label": "SHACLEARNER, shown in Algorithm 1",
      "aliases": [
        "this new IOP rule learner SHACLEARNER",
        "SHACLEARNER, shown in Algorithm 1"
      ],
      "types": [
        "algorithm",
        "IOP rule learner",
        "rule learner"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A state-of-the-art embedding-based open path rule learner adapted to learn annotated Inverse Open Path (IOP) rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "SHACLEARNER, shown in Algorithm 1",
          "local_types": [
            "algorithm",
            "IOP rule learner"
          ],
          "iri": "Entity-shaclearner__shown_in_algorithm_1-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "this new IOP rule learner SHACLEARNER",
          "local_types": [
            "algorithm",
            "rule learner"
          ],
          "iri": "Entity-shaclearner__shown_in_algorithm_1-Mention-2"
        }
      ],
      "relevance": 0.69775390625
    },
    "Entity-various_rule_language": {
      "node_id": "various_rule_language",
      "disambiguation_index": 0,
      "label": "various rule languages",
      "aliases": [
        "various rule languages"
      ],
      "types": [
        "language"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of formalisms used by KG rule learning systems to express constraints and patterns on graph data, including SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "various rule languages",
          "local_types": [
            "language"
          ],
          "iri": "Entity-various_rule_language-Mention-1"
        }
      ],
      "relevance": 0.69775390625
    },
    "Entity-and_briefly_discus_the_application_of_such_tree_to_kg_completion": {
      "node_id": "and_briefly_discus_the_application_of_such_tree_to_kg_completion",
      "disambiguation_index": 0,
      "label": "and briefly discuss the application of such trees to KG completion",
      "aliases": [
        "and briefly discuss the application of such trees to KG completion"
      ],
      "types": [
        "application",
        "knowledge graph completion"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Methods or techniques used to construct tree-shaped structures from Inverse Open Path (IOP) rules for completing knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "and briefly discuss the application of such trees to KG completion",
          "local_types": [
            "application",
            "knowledge graph completion"
          ],
          "iri": "Entity-and_briefly_discus_the_application_of_such_tree_to_kg_completion-Mention-1"
        }
      ],
      "relevance": 0.69677734375
    },
    "Entity-our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate": {
      "node_id": "our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate",
      "disambiguation_index": 0,
      "label": "our sampling method that creates a KG that is customised for the target predicate",
      "aliases": [
        "our sampling method that creates a KG that is customised for the target predicate"
      ],
      "types": [
        "method",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A methodology for creating knowledge graphs (KGs) tailored to specific predicates, which improves the quality of embeddings used in learning SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-3",
          "local_name": "our sampling method that creates a KG that is customised for the target predicate",
          "local_types": [
            "method",
            "predicate"
          ],
          "iri": "Entity-our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.69677734375
    },
    "Entity-inverse_open_path_rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape": {
      "node_id": "inverse_open_path_rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "disambiguation_index": 0,
      "label": "Inverse Open Path rules induced from paths that have a straightforward interpretation as shapes",
      "aliases": [
        "Inverse Open Path rules induced from paths that have a straightforward interpretation as shapes"
      ],
      "types": [
        "methodology",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Inverse Open Path rules are methodology or algorithmic definitions for inducing shape constraints from paths with straightforward interpretations as shapes, used for learning SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-4",
          "local_name": "Inverse Open Path rules induced from paths that have a straightforward interpretation as shapes",
          "local_types": [
            "methodology",
            "algorithm"
          ],
          "iri": "Entity-inverse_open_path_rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape-Mention-1"
        }
      ],
      "relevance": 0.69580078125
    },
    "Entity-in_our_work__we_use_the_kg_itself_to_discover_the_shape": {
      "node_id": "in_our_work__we_use_the_kg_itself_to_discover_the_shape",
      "disambiguation_index": 0,
      "label": "In our work, we use the KG itself to discover the shapes",
      "aliases": [
        "In our work, we use the KG itself to discover the shapes"
      ],
      "types": [
        "research",
        "study"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The approach that uses knowledge graphs (KGs) themselves to discover SHACL shapes",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-3",
          "local_name": "In our work, we use the KG itself to discover the shapes",
          "local_types": [
            "research",
            "study"
          ],
          "iri": "Entity-in_our_work__we_use_the_kg_itself_to_discover_the_shape-Mention-1"
        }
      ],
      "relevance": 0.6953125
    },
    "Entity-the_validity_of_iop_rule_in_a_kg": {
      "node_id": "the_validity_of_iop_rule_in_a_kg",
      "disambiguation_index": 0,
      "label": "the validity of IOP rules in a KG",
      "aliases": [
        "the validity of IOP rules in a KG"
      ],
      "types": [
        "concept",
        "validity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept refers to the evaluation or assessment of the correctness and effectiveness of Inverse Open Path (IOP) rules within a Knowledge Graph (KG), considering their validity in terms of the KG's structure, data quality, and constraints.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-5",
          "local_name": "the validity of IOP rules in a KG",
          "local_types": [
            "concept",
            "validity"
          ],
          "iri": "Entity-the_validity_of_iop_rule_in_a_kg-Mention-1"
        }
      ],
      "relevance": 0.6953125
    },
    "Entity-to_mine_both_op_and_iop_rule_in_one_process": {
      "node_id": "to_mine_both_op_and_iop_rule_in_one_process",
      "disambiguation_index": 0,
      "label": "to mine both OP and IOP rules in one process",
      "aliases": [
        "to mine both OP and IOP rules in one process"
      ],
      "types": [
        "process"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of learning SHACL shapes from knowledge graphs by mining both Open Path (OP) and Inverse Open Path (IOP) rules simultaneously.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "to mine both OP and IOP rules in one process",
          "local_types": [
            "process"
          ],
          "iri": "Entity-to_mine_both_op_and_iop_rule_in_one_process-Mention-1"
        }
      ],
      "relevance": 0.6953125
    },
    "Entity-smart_kg_editor_using_tree_that_can_be_generated_by_shaclearner": {
      "node_id": "smart_kg_editor_using_tree_that_can_be_generated_by_shaclearner",
      "disambiguation_index": 0,
      "label": "smart KG editor using trees that can be generated by SHACLearner",
      "aliases": [
        "smart KG editor using trees that can be generated by SHACLearner"
      ],
      "types": [
        "tool",
        "technology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A tool or technology for generating tree shapes from annotated IOP rules, which can be used in a smart KG editor to facilitate human-kg-completion and pruning.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-8",
          "local_name": "smart KG editor using trees that can be generated by SHACLearner",
          "local_types": [
            "tool",
            "technology"
          ],
          "iri": "Entity-smart_kg_editor_using_tree_that_can_be_generated_by_shaclearner-Mention-1"
        }
      ],
      "relevance": 0.69287109375
    },
    "Entity-the_distribution": {
      "node_id": "the_distribution",
      "disambiguation_index": 0,
      "label": "The distribution",
      "aliases": [
        "The distribution"
      ],
      "types": [
        "distribution"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A graphical representation of the quality and quantity of learned SHACL rules, categorized by their Inverse Open Path Standard Confidence (IOPSC) and Inverse Open Path Head Coverage (IOPHC), illustrating the performance of the SHACLEARNER method in learning high-quality shapes from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-1",
          "local_name": "The distribution",
          "local_types": [
            "distribution"
          ],
          "iri": "Entity-the_distribution-Mention-1"
        }
      ],
      "relevance": 0.69287109375
    },
    "Entity-to_handle_extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata": {
      "node_id": "to_handle_extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata",
      "disambiguation_index": 0,
      "label": "to handle extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata",
      "aliases": [
        "to handle extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata"
      ],
      "types": [
        "knowledge graph",
        "Wikidata"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Learning SHACL shapes from large-scale knowledge graphs",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "to handle extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata",
          "local_types": [
            "knowledge graph",
            "Wikidata"
          ],
          "iri": "Entity-to_handle_extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata-Mention-1"
        }
      ],
      "relevance": 0.6923828125
    },
    "Entity-have_a_variety_of_length_and_cardinality": {
      "node_id": "have_a_variety_of_length_and_cardinality",
      "disambiguation_index": 0,
      "label": "have a variety of lengths and cardinalities",
      "aliases": [
        "have a variety of lengths and cardinalities"
      ],
      "types": [
        "property",
        "characteristic"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The IOP rules learned by SHACLEARNER, which are used to express constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-2",
          "local_name": "have a variety of lengths and cardinalities",
          "local_types": [
            "property",
            "characteristic"
          ],
          "iri": "Entity-have_a_variety_of_length_and_cardinality-Mention-1"
        }
      ],
      "relevance": 0.69189453125
    },
    "Entity-massive_kg_(1)": {
      "node_id": "massive_kg_(1)",
      "disambiguation_index": 1,
      "label": "massive KGs",
      "aliases": [
        "massive KGs"
      ],
      "types": [
        "dataset",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Large-scale knowledge graphs with millions of facts, used to evaluate the effectiveness of a learning method in discovering high-quality shape constraints.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "massive KGs",
          "local_types": [
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-massive_kg_(1)-Mention-1"
        }
      ],
      "relevance": 0.69140625
    },
    "Entity-the_formalism_of_iop_rule": {
      "node_id": "the_formalism_of_iop_rule",
      "disambiguation_index": 0,
      "label": "the formalism of IOP rules",
      "aliases": [
        "the formalism of IOP rules"
      ],
      "types": [
        "formalism",
        "ontology",
        "description-of-IOP-rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism presenting specific shapes in the form of paths over connected entities that are present in a Knowledge Graph (KG), which can be used as building blocks for more complex shapes, such as trees and other rule patterns.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "the formalism of IOP rules",
          "local_types": [
            "formalism",
            "ontology",
            "description-of-IOP-rules"
          ],
          "iri": "Entity-the_formalism_of_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.69140625
    },
    "Entity-using_rule": {
      "node_id": "using_rule",
      "disambiguation_index": 0,
      "label": "Using rules",
      "aliases": [
        "Using rules"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method for learning SHACL shapes from knowledge graphs using inverse open path rules.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-1",
          "local_name": "Using rules",
          "local_types": [
            "method"
          ],
          "iri": "Entity-using_rule-Mention-1"
        }
      ],
      "relevance": 0.69091796875
    },
    "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper": {
      "node_id": "the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "disambiguation_index": 0,
      "label": "the representation formalism they use for their output is difficult to compare with the IOP rules which we use in this paper",
      "aliases": [
        "the representation formalism they use for their output is difficult to compare with the IOP rules which we use in this paper"
      ],
      "types": [
        "representation",
        "formalism",
        "IOP rule",
        "paper"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "procedural methods without logical foundations used by other approaches to learn SHACL shapes from knowledge graphs, distinct from the Inverse Open Path (IOP) rules employed in this paper.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "the representation formalism they use for their output is difficult to compare with the IOP rules which we use in this paper",
          "local_types": [
            "representation",
            "formalism",
            "IOP rule",
            "paper"
          ],
          "iri": "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper-Mention-1"
        }
      ],
      "relevance": 0.6904296875
    },
    "Entity-with_higher_confidence_in_the_kg": {
      "node_id": "with_higher_confidence_in_the_kg",
      "disambiguation_index": 0,
      "label": "with higher confidence in the KG",
      "aliases": [
        "with higher confidence in the KG"
      ],
      "types": [
        "evaluation",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method to learn SHACL shapes from knowledge graphs that involves pruning trees to achieve higher confidence in the learned shapes.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-3",
          "local_name": "with higher confidence in the KG",
          "local_types": [
            "evaluation",
            "knowledge graph"
          ],
          "iri": "Entity-with_higher_confidence_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.6904296875
    },
    "Entity-manual_kg_editing_task": {
      "node_id": "manual_kg_editing_task",
      "disambiguation_index": 0,
      "label": "manual KG editing tasks",
      "aliases": [
        "manual KG editing tasks"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of manually creating or modifying constraints on knowledge graph data using SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "manual KG editing tasks",
          "local_types": [
            "task"
          ],
          "iri": "Entity-manual_kg_editing_task-Mention-1"
        }
      ],
      "relevance": 0.68994140625
    },
    "Entity-to_learn": {
      "node_id": "to_learn",
      "disambiguation_index": 0,
      "label": "To learn",
      "aliases": [
        "To learn"
      ],
      "types": [
        "process"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of discovering and learning Inverse Open Path (IOP) rules from a Knowledge Graph (KG)",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-4",
          "local_name": "To learn",
          "local_types": [
            "process"
          ],
          "iri": "Entity-to_learn-Mention-1"
        }
      ],
      "relevance": 0.68994140625
    },
    "Entity-and_also_propose_a_method_to_mine_such_rule_from_a_kg_.": {
      "node_id": "and_also_propose_a_method_to_mine_such_rule_from_a_kg_.",
      "disambiguation_index": 0,
      "label": "and also propose a method to mine such rules from a KG.",
      "aliases": [
        "and also propose a method to mine such rules from a KG."
      ],
      "types": [
        "proposition",
        "technology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A method for mining inverse open path rules from a knowledge graph (KG) that have a straightforward interpretation as shapes.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-4",
          "local_name": "and also propose a method to mine such rules from a KG.",
          "local_types": [
            "proposition",
            "technology"
          ],
          "iri": "Entity-and_also_propose_a_method_to_mine_such_rule_from_a_kg_.-Mention-1"
        }
      ],
      "relevance": 0.68701171875
    },
    "Entity-the_mined_iop_rule": {
      "node_id": "the_mined_iop_rule",
      "disambiguation_index": 0,
      "label": "the mined IOP rules",
      "aliases": [
        "the mined IOP rules"
      ],
      "types": [
        "rule set",
        "IOP rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of Inverse Open Path (IOP) rules that have been learned from a knowledge graph, which are used as building blocks for discovering more complex tree shapes.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-6",
          "local_name": "the mined IOP rules",
          "local_types": [
            "rule set",
            "IOP rules"
          ],
          "iri": "Entity-the_mined_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.68701171875
    },
    "Entity-iop_rule_in_greedysearch": {
      "node_id": "iop_rule_in_greedysearch",
      "disambiguation_index": 0,
      "label": "IOP rules in GreedySearch",
      "aliases": [
        "IOP rules in GreedySearch"
      ],
      "types": [
        "rule",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of algorithms used to aggregate and generate trees from learned Inverse Open Path (IOP) rules, which are a type of predicate logic formalism for expressing shape patterns in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-7",
          "local_name": "IOP rules in GreedySearch",
          "local_types": [
            "rule",
            "algorithm"
          ],
          "iri": "Entity-iop_rule_in_greedysearch-Mention-1"
        }
      ],
      "relevance": 0.6865234375
    },
    "Entity-logical_formalism_with_both_well-defined_semantics_and_motivating_use_case": {
      "node_id": "logical_formalism_with_both_well-defined_semantics_and_motivating_use_case",
      "disambiguation_index": 0,
      "label": "logical formalisms with both well-defined semantics and motivating use cases",
      "aliases": [
        "logical formalisms with both well-defined semantics and motivating use cases"
      ],
      "types": [
        "concept",
        "theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Logical formalisms, such as Inverse Open Path rules, used for expressing constraints on graph data as shapes and deriving SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-3",
          "local_name": "logical formalisms with both well-defined semantics and motivating use cases",
          "local_types": [
            "concept",
            "theory"
          ],
          "iri": "Entity-logical_formalism_with_both_well-defined_semantics_and_motivating_use_case-Mention-1"
        }
      ],
      "relevance": 0.68505859375
    },
    "Entity-embedding-based_method_that_discovers_iop_rule_from_a_kg": {
      "node_id": "embedding-based_method_that_discovers_iop_rule_from_a_kg",
      "disambiguation_index": 0,
      "label": "embedding-based method that discovers IOP rules from a KG",
      "aliases": [
        "the embedding-based method that discovers IOP rules from a KG",
        "embedding-based method that discovers IOP rules from a KG"
      ],
      "types": [
        "method",
        "algorithm-for-discovering-IOP-rules",
        "discovery"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An embedding-based open path rule learner adapted to discover Inverse Open Path (IOP) rules from a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "embedding-based method that discovers IOP rules from a KG",
          "local_types": [
            "method",
            "discovery"
          ],
          "iri": "Entity-embedding-based_method_that_discovers_iop_rule_from_a_kg-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "the embedding-based method that discovers IOP rules from a KG",
          "local_types": [
            "method",
            "algorithm-for-discovering-IOP-rules"
          ],
          "iri": "Entity-embedding-based_method_that_discovers_iop_rule_from_a_kg-Mention-2"
        }
      ],
      "relevance": 0.6845703125
    },
    "Entity-the_shape_we_learn": {
      "node_id": "the_shape_we_learn",
      "disambiguation_index": 0,
      "label": "the shapes we learn",
      "aliases": [
        "the shapes we learn"
      ],
      "types": [
        "shapes",
        "concept",
        "shape"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "SHACL (Shapes Constraint Language) shapes that are learned through a novel method, SHACLEARNER, from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-1",
          "local_name": "the shapes we learn",
          "local_types": [
            "shapes",
            "concept",
            "shape"
          ],
          "iri": "Entity-the_shape_we_learn-Mention-1"
        }
      ],
      "relevance": 0.6845703125
    },
    "Entity-these_figure": {
      "node_id": "these_figure",
      "disambiguation_index": 0,
      "label": "these figures",
      "aliases": [
        "these figures"
      ],
      "types": [
        "figure"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of high-quality Inverse Open Path (IOP) rules learned by SHACLEARNER from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "these figures",
          "local_types": [
            "figure"
          ],
          "iri": "Entity-these_figure-Mention-1"
        }
      ],
      "relevance": 0.68408203125
    },
    "Entity-poker_kg": {
      "node_id": "poker_kg",
      "disambiguation_index": 0,
      "label": "Poker KG",
      "aliases": [
        "The Poker KG",
        "the Poker KG",
        "Poker KG"
      ],
      "types": [
        "card game",
        "tool",
        "dataset",
        "knowledge graph",
        "game",
        "product"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A small, synthetic knowledge graph (KG) used as an evaluation benchmark for learning SHACL shapes from massive KGs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-4",
          "local_name": "Poker KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-poker_kg-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-1",
          "local_name": "Poker KG",
          "local_types": [
            "card game",
            "tool",
            "dataset",
            "knowledge graph",
            "game",
            "product"
          ],
          "iri": "Entity-poker_kg-Mention-2"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-4",
          "local_name": "The Poker KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-poker_kg-Mention-3"
        }
      ],
      "relevance": 0.68310546875
    },
    "Entity-since_our_proposed_system_is_the_first_method_to_learn_shape_from_massive_kg_automatically": {
      "node_id": "since_our_proposed_system_is_the_first_method_to_learn_shape_from_massive_kg_automatically",
      "disambiguation_index": 0,
      "label": "Since our proposed system is the first method to learn shapes from massive KGs automatically",
      "aliases": [
        "Since our proposed system is the first method to learn shapes from massive KGs automatically"
      ],
      "types": [
        "innovation",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The SHACLEARNER algorithm, which learns high-quality shapes from massive knowledge graphs (KGs) automatically.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-3",
          "local_name": "Since our proposed system is the first method to learn shapes from massive KGs automatically",
          "local_types": [
            "innovation",
            "methodology"
          ],
          "iri": "Entity-since_our_proposed_system_is_the_first_method_to_learn_shape_from_massive_kg_automatically-Mention-1"
        }
      ],
      "relevance": 0.68310546875
    },
    "Entity-potential_iop_rule": {
      "node_id": "potential_iop_rule",
      "disambiguation_index": 0,
      "label": "potential IOP rules",
      "aliases": [
        "potential IOP rules"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Potential IOP rules refer to a set of candidate Inverse Open Path rules that can be learned from knowledge graphs using the SHACLEARNER algorithm.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-6",
          "local_name": "potential IOP rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-potential_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.68310546875
    },
    "Entity-the_shape_are_diverse_in_structural_feature_such_a_depth_and_width__and_also_in_quality_measure_that_indicate_confidence_and_generality": {
      "node_id": "the_shape_are_diverse_in_structural_feature_such_a_depth_and_width__and_also_in_quality_measure_that_indicate_confidence_and_generality",
      "disambiguation_index": 0,
      "label": "the shapes are diverse in structural features such as depth and width, and also in quality measures that indicate confidence and generality",
      "aliases": [
        "the shapes are diverse in structural features such as depth and width, and also in quality measures that indicate confidence and generality"
      ],
      "types": [
        "property"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACL shapes learned from knowledge graphs using Inverse Open Path rules",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-3",
          "local_name": "the shapes are diverse in structural features such as depth and width, and also in quality measures that indicate confidence and generality",
          "local_types": [
            "property"
          ],
          "iri": "Entity-the_shape_are_diverse_in_structural_feature_such_a_depth_and_width__and_also_in_quality_measure_that_indicate_confidence_and_generality-Mention-1"
        }
      ],
      "relevance": 0.6826171875
    },
    "Entity-to_mine_iop_rule": {
      "node_id": "to_mine_iop_rule",
      "disambiguation_index": 0,
      "label": "To mine IOP rules",
      "aliases": [
        "To mine IOP rules"
      ],
      "types": [
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of using an adapted open path rule learner (SHACLEARNER) to learn annotated Inverse Open Path (IOP) rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "To mine IOP rules",
          "local_types": [
            "task"
          ],
          "iri": "Entity-to_mine_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.6826171875
    },
    "Entity-we_further_illustrate": {
      "node_id": "we_further_illustrate",
      "disambiguation_index": 0,
      "label": "we further illustrate",
      "aliases": [
        "we further illustrate"
      ],
      "types": [
        "action",
        "illustration"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The illustration or explanation of the quality measures (IOPSC and IOPHC) for Inverse Open Path rules, specifically showing their practical meaning in the context of SHACL learning from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-1",
          "local_name": "we further illustrate",
          "local_types": [
            "action",
            "illustration"
          ],
          "iri": "Entity-we_further_illustrate-Mention-1"
        }
      ],
      "relevance": 0.68212890625
    },
    "Entity-characteristic_of_discovered_tree": {
      "node_id": "characteristic_of_discovered_tree",
      "disambiguation_index": 0,
      "label": "characteristics of discovered trees",
      "aliases": [
        "characteristics of discovered trees"
      ],
      "types": [
        "results"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The characteristics mentioned refer to those of discovered SHACL shapes, specifically tree-shaped constraints learned from knowledge graphs using Inverse Open Path rules.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "characteristics of discovered trees",
          "local_types": [
            "results"
          ],
          "iri": "Entity-characteristic_of_discovered_tree-Mention-1"
        }
      ],
      "relevance": 0.681640625
    },
    "Entity-method_to_aggregate_iop_rule_to_produce_tree_shape": {
      "node_id": "method_to_aggregate_iop_rule_to_produce_tree_shape",
      "disambiguation_index": 0,
      "label": "method to aggregate IOP rules to produce tree shapes",
      "aliases": [
        "method to aggregate IOP rules to produce tree shapes"
      ],
      "types": [
        "algorithm",
        "data processing technique"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method for combining Inverse Open Path (IOP) rules into more complex tree-shaped structures, used to learn and represent constraints on knowledge graph data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "method to aggregate IOP rules to produce tree shapes",
          "local_types": [
            "algorithm",
            "data processing technique"
          ],
          "iri": "Entity-method_to_aggregate_iop_rule_to_produce_tree_shape-Mention-1"
        }
      ],
      "relevance": 0.68115234375
    },
    "Entity-real-world_massive_kg": {
      "node_id": "real-world_massive_kg",
      "disambiguation_index": 0,
      "label": "real-world massive KGs",
      "aliases": [
        "real-world massive KGs"
      ],
      "types": [
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Large-scale, publicly available knowledge graphs that have been used in experiments to evaluate the effectiveness of SHACLEARNER in learning high-quality shapes.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-1",
          "local_name": "real-world massive KGs",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-real-world_massive_kg-Mention-1"
        }
      ],
      "relevance": 0.68115234375
    },
    "Entity-these_uncertain_shape": {
      "node_id": "these_uncertain_shape",
      "disambiguation_index": 0,
      "label": "These uncertain shapes",
      "aliases": [
        "These uncertain shapes"
      ],
      "types": [
        "shapes"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Uncertain tree structures generated from annotated IOP rules, which are used to learn high-quality SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-1",
          "local_name": "These uncertain shapes",
          "local_types": [
            "shapes"
          ],
          "iri": "Entity-these_uncertain_shape-Mention-1"
        }
      ],
      "relevance": 0.6796875
    },
    "Entity-such_constraint_on_a_kg_a_shape": {
      "node_id": "such_constraint_on_a_kg_a_shape",
      "disambiguation_index": 0,
      "label": "such constraints on a KG as shapes",
      "aliases": [
        "such constraints on a KG as shapes"
      ],
      "types": [
        "knowledge graph",
        "constraint",
        "knowledge representation",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Constraints expressed as shapes on a Knowledge Graph (KG) that define rules and patterns for validating or guiding the population of a KG.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "such constraints on a KG as shapes",
          "local_types": [
            "knowledge graph",
            "constraint",
            "knowledge representation",
            "concept"
          ],
          "iri": "Entity-such_constraint_on_a_kg_a_shape-Mention-1"
        }
      ],
      "relevance": 0.67919921875
    },
    "Entity-various_length__cardinality__and_quality": {
      "node_id": "various_length__cardinality__and_quality",
      "disambiguation_index": 0,
      "label": "various lengths, cardinalities, and qualities",
      "aliases": [
        "various lengths, cardinalities, and qualities"
      ],
      "types": [
        "characteristics",
        "characteristic"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "IOP rules with varying lengths, cardinalities, and quality measures mined from three massive real-world knowledge graphs (YAGO2s, Wikidata, and DBpedia) using SHACLearner.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "various lengths, cardinalities, and qualities",
          "local_types": [
            "characteristics",
            "characteristic"
          ],
          "iri": "Entity-various_length__cardinality__and_quality-Mention-1"
        }
      ],
      "relevance": 0.67919921875
    },
    "Entity-sh": {
      "node_id": "sh",
      "disambiguation_index": 0,
      "label": "sh",
      "aliases": [
        "sh"
      ],
      "types": [
        "standard",
        "ontology",
        "tool",
        "software"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "SHACL (Shapes Constraint Language), a W3C recommendation for expressing constraints on graph data as shapes, used in learning and generating SHACL trees from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "sh",
          "local_types": [
            "ontology",
            "standard"
          ],
          "iri": "Entity-sh-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-4",
          "local_name": "sh",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-sh-Mention-2"
        }
      ],
      "relevance": 0.6787109375
    },
    "Entity-open_path_rule_learner": {
      "node_id": "open_path_rule_learner",
      "disambiguation_index": 0,
      "label": "open path rule learner",
      "aliases": [
        "Open Path Rule Learner",
        "open path rule learner"
      ],
      "types": [
        "algorithm",
        "machine learning model",
        "learning framework",
        "learner",
        "tool",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity 'open path rule learner' refers to a state-of-the-art algorithm that learns high-quality Inverse Open Path (IOP) rules from knowledge graphs, which are used as building blocks for more complex shapes such as trees and can be augmented with minimum cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-4",
          "local_name": "open path rule learner",
          "local_types": [
            "algorithm",
            "learner",
            "learning framework"
          ],
          "iri": "Entity-open_path_rule_learner-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "open path rule learner",
          "local_types": [
            "algorithm",
            "methodology"
          ],
          "iri": "Entity-open_path_rule_learner-Mention-2"
        },
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "Open Path Rule Learner",
          "local_types": [
            "algorithm",
            "machine learning model",
            "tool"
          ],
          "iri": "Entity-open_path_rule_learner-Mention-3"
        }
      ],
      "relevance": 0.6787109375
    },
    "Entity-our_shape_learning_system": {
      "node_id": "our_shape_learning_system",
      "disambiguation_index": 0,
      "label": "our shape learning system",
      "aliases": [
        "our shape learning system"
      ],
      "types": [
        "system",
        "technology",
        "learning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method or technology used by the authors' team to learn and generate SHACL (Shapes Constraint Language) shapes from knowledge graphs, specifically focusing on path shapes.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-1",
          "local_name": "our shape learning system",
          "local_types": [
            "system",
            "technology",
            "learning"
          ],
          "iri": "Entity-our_shape_learning_system-Mention-1"
        }
      ],
      "relevance": 0.67822265625
    },
    "Entity-most_modern_kg": {
      "node_id": "most_modern_kg",
      "disambiguation_index": 0,
      "label": "most modern KGs",
      "aliases": [
        "most modern KGs"
      ],
      "types": [
        "KG",
        "Knowledge Graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Large data-first graph databases with weak inference rules and weakly- constraining data schemes, proliferated on the Web since 2012.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-2",
          "local_name": "most modern KGs",
          "local_types": [
            "KG",
            "Knowledge Graph",
            "dataset"
          ],
          "iri": "Entity-most_modern_kg-Mention-1"
        }
      ],
      "relevance": 0.67822265625
    },
    "Entity-the_formalism": {
      "node_id": "the_formalism",
      "disambiguation_index": 0,
      "label": "the formalisms",
      "aliases": [
        "the formalisms"
      ],
      "types": [
        "formalism"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Formalisms are various approaches or methods used to express patterns and constraints on knowledge graphs (KGs), including SHACL shapes, Closed rules (CR), Functional Graph Dependency (FGD), k-cliques, trees, etc.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "the formalisms",
          "local_types": [
            "formalism"
          ],
          "iri": "Entity-the_formalism-Mention-1"
        }
      ],
      "relevance": 0.677734375
    },
    "Entity-three_massive_real-world_benchmark_kg_including_yago__wikidata__and_dbpedia": {
      "node_id": "three_massive_real-world_benchmark_kg_including_yago__wikidata__and_dbpedia",
      "disambiguation_index": 0,
      "label": "three massive real-world benchmark KGs including Yago, Wikidata, and DBpedia",
      "aliases": [
        "three massive real-world benchmark KGs including Yago, Wikidata, and DBpedia"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Three large-scale knowledge graphs used as benchmarks to evaluate the performance of SHACLearner in learning shapes from massive real-world datasets.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "three massive real-world benchmark KGs including Yago, Wikidata, and DBpedia",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-three_massive_real-world_benchmark_kg_including_yago__wikidata__and_dbpedia-Mention-1"
        }
      ],
      "relevance": 0.67724609375
    },
    "Entity-extended_validation_framework": {
      "node_id": "extended_validation_framework",
      "disambiguation_index": 0,
      "label": "extended validation framework",
      "aliases": [
        "extended validation framework",
        "an extended validation framework"
      ],
      "types": [
        "approach",
        "methodology",
        "validation",
        "framework"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A proposed methodological approach that enables detection of which SHACL shapes could be violated by applying a set of inference rules in Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "extended validation framework",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-extended_validation_framework-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "an extended validation framework",
          "local_types": [
            "validation",
            "framework"
          ],
          "iri": "Entity-extended_validation_framework-Mention-2"
        }
      ],
      "relevance": 0.6767578125
    },
    "Entity-a_kg_(1)": {
      "node_id": "a_kg_(1)",
      "disambiguation_index": 1,
      "label": "a KG",
      "aliases": [
        "these KGs",
        "a KG"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A knowledge graph (KG) refers to large data-first graph databases with weak inference rules and weakly-constraining data schemes.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "a KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-a_kg_(1)-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "these KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-a_kg_(1)-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "a KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-a_kg_(1)-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-6",
          "local_name": "a KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-a_kg_(1)-Mention-4"
        }
      ],
      "relevance": 0.6767578125
    },
    "Entity-shacl_learning_problem": {
      "node_id": "shacl_learning_problem",
      "disambiguation_index": 0,
      "label": "SHACL learning problem",
      "aliases": [
        "SHACL learning problem",
        "the SHACL learning problem"
      ],
      "types": [
        "SHACL",
        "problem",
        "challenge"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The task of automatically generating constraints on graph data as shapes using the Shapes Constraint Language (SHACL) from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-3",
          "local_name": "SHACL learning problem",
          "local_types": [
            "problem",
            "challenge"
          ],
          "iri": "Entity-shacl_learning_problem-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-3",
          "local_name": "the SHACL learning problem",
          "local_types": [
            "problem",
            "SHACL"
          ],
          "iri": "Entity-shacl_learning_problem-Mention-2"
        }
      ],
      "relevance": 0.67626953125
    },
    "Entity-we_(3)": {
      "node_id": "we_(3)",
      "disambiguation_index": 3,
      "label": "We",
      "aliases": [
        "We",
        "we"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors, referring to themselves as 'we', are introducing Inverse Open Path (IOP) rules and proposing a novel method to learn high-quality rules from Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-5",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(3)-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(3)-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(3)-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(3)-Mention-4"
        }
      ],
      "relevance": 0.67578125
    },
    "Entity-scalekb": {
      "node_id": "scalekb",
      "disambiguation_index": 0,
      "label": "SCALEKB",
      "aliases": [
        "SCALEKB"
      ],
      "types": [
        "algorithm",
        "scaleable knowledge base",
        "database",
        "system",
        "knowledge base",
        "model"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "SCALEKB: a knowledge base that uses closed-path (CP) rules for expressing constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-3",
          "local_name": "SCALEKB",
          "local_types": [
            "algorithm",
            "scaleable knowledge base",
            "database",
            "system",
            "knowledge base",
            "model"
          ],
          "iri": "Entity-scalekb-Mention-1"
        }
      ],
      "relevance": 0.673828125
    },
    "Entity-the_computation_of_iopsc_and_iophc": {
      "node_id": "the_computation_of_iopsc_and_iophc",
      "disambiguation_index": 0,
      "label": "the computation of IOPSC and IOPHC",
      "aliases": [
        "the computation of IOPSC and IOPHC"
      ],
      "types": [
        "IOPHC",
        "methodology",
        "computation",
        "IOPSC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of calculating quality measures, specifically IOPSC (Inverse Open Path Support) and IOPHC (Inverse Open Path Hit Count), for evaluating SHACLearner's learned rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "the computation of IOPSC and IOPHC",
          "local_types": [
            "IOPHC",
            "methodology",
            "computation",
            "IOPSC"
          ],
          "iri": "Entity-the_computation_of_iopsc_and_iophc-Mention-1"
        }
      ],
      "relevance": 0.67333984375
    },
    "Entity-the_list": {
      "node_id": "the_list",
      "disambiguation_index": 0,
      "label": "the list",
      "aliases": [
        "the list"
      ],
      "types": [
        "list",
        "collection"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of SHACL shapes derived from annotated IOP rules, used for validating a knowledge graph or providing insight into its structure.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-3",
          "local_name": "the list",
          "local_types": [
            "list",
            "collection"
          ],
          "iri": "Entity-the_list-Mention-1"
        }
      ],
      "relevance": 0.67333984375
    },
    "Entity-w3c_recommendation_for_expressing_constraint_on_graph_data_a_shape": {
      "node_id": "w3c_recommendation_for_expressing_constraint_on_graph_data_a_shape",
      "disambiguation_index": 0,
      "label": "W3C recommendation for expressing constraints on graph data as shapes",
      "aliases": [
        "W3C recommendation for expressing constraints on graph data as shapes"
      ],
      "types": [
        "recommendation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The SHapes and Constraints Language (SHACL) recommendation from the World Wide Web Consortium (W3C), which provides a standard for expressing constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "W3C recommendation for expressing constraints on graph data as shapes",
          "local_types": [
            "recommendation"
          ],
          "iri": "Entity-w3c_recommendation_for_expressing_constraint_on_graph_data_a_shape-Mention-1"
        }
      ],
      "relevance": 0.6728515625
    },
    "Entity-capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_": {
      "node_id": "capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_",
      "disambiguation_index": 0,
      "label": "capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs (KGs)",
      "aliases": [
        "capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs (KGs)"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The task of learning SHACL shapes from knowledge graphs by capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs (KGs)",
          "local_types": [
            "task"
          ],
          "iri": "Entity-capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_-Mention-1"
        }
      ],
      "relevance": 0.6728515625
    },
    "Entity-iopsc_v_length": {
      "node_id": "iopsc_v_length",
      "disambiguation_index": 0,
      "label": "IOPSC vs length",
      "aliases": [
        "IOPSC vs length"
      ],
      "types": [
        "plot",
        "visualization"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A plot or visualization showing the distribution of rules with respect to their Inverse Open Path Standard Confidence (IOPSC) and lengths, used for evaluating the quality performance of learned SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-3",
          "local_name": "IOPSC vs length",
          "local_types": [
            "plot",
            "visualization"
          ],
          "iri": "Entity-iopsc_v_length-Mention-1"
        }
      ],
      "relevance": 0.67236328125
    },
    "Entity-learnt_iop_rule": {
      "node_id": "learnt_iop_rule",
      "disambiguation_index": 0,
      "label": "learnt IOP rules",
      "aliases": [
        "learnt IOP rules"
      ],
      "types": [
        "IOP rule",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "IOP (Inverse Open Path) rules learned by the algorithm SHACLEARNER from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "learnt IOP rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-learnt_iop_rule-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-2",
          "local_name": "learnt IOP rules",
          "local_types": [
            "rule",
            "IOP rule"
          ],
          "iri": "Entity-learnt_iop_rule-Mention-2"
        }
      ],
      "relevance": 0.67236328125
    },
    "Entity-kg_k": {
      "node_id": "kg_k",
      "disambiguation_index": 0,
      "label": "KG K",
      "aliases": [
        "KG K"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The SHACLearner algorithm's input dataset 'KG K' containing knowledge graph facts.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "KG K",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-kg_k-Mention-1"
        }
      ],
      "relevance": 0.671875
    },
    "Entity-the_small_sampled_kg": {
      "node_id": "the_small_sampled_kg",
      "disambiguation_index": 0,
      "label": "the small sampled KG",
      "aliases": [
        "the small sampled KG"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A subset of a knowledge graph (KG), used for evaluating candidate SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "the small sampled KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-the_small_sampled_kg-Mention-1"
        }
      ],
      "relevance": 0.671875
    },
    "Entity-tree_that_can_be_generated_by_shaclearner": {
      "node_id": "tree_that_can_be_generated_by_shaclearner",
      "disambiguation_index": 0,
      "label": "trees that can be generated by SHACLearner",
      "aliases": [
        "trees that can be generated by SHACLearner"
      ],
      "types": [
        "algorithm",
        "generator"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Trees that can be generated by SHACLearner refer to the shapes of knowledge graph patterns learned from annotated Inverse Open Path rules, which are used for validating and completing massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-8",
          "local_name": "trees that can be generated by SHACLearner",
          "local_types": [
            "algorithm",
            "generator"
          ],
          "iri": "Entity-tree_that_can_be_generated_by_shaclearner-Mention-1"
        }
      ],
      "relevance": 0.671875
    },
    "Entity-conjunctive_path_of_constraint_over_property": {
      "node_id": "conjunctive_path_of_constraint_over_property",
      "disambiguation_index": 0,
      "label": "conjunctive paths of constraints over properties",
      "aliases": [
        "conjunctive paths of constraints over properties"
      ],
      "types": [
        "constraint",
        "property"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A representation of SHACL shapes that describe patterns in knowledge graphs, comprising conjunctive paths of constraints applied to specific properties.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-2",
          "local_name": "conjunctive paths of constraints over properties",
          "local_types": [
            "constraint",
            "property"
          ],
          "iri": "Entity-conjunctive_path_of_constraint_over_property-Mention-1"
        }
      ],
      "relevance": 0.6708984375
    },
    "Entity-r_and_tree": {
      "node_id": "r_and_tree",
      "disambiguation_index": 0,
      "label": "R and Tree",
      "aliases": [
        "R and Tree"
      ],
      "types": [
        "publication",
        "journal"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The SHACLearner algorithm's input, which includes a knowledge graph K, a target predicate Pt, and parameters such as maximum rule length l, maximum cardinality MCar, minimum IOPSC MinIOPSC, minimum IOPHC MinIOPHC, and minimum tree shape confidence MinTreeSC.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-4",
          "local_name": "R and Tree",
          "local_types": [
            "publication",
            "journal"
          ],
          "iri": "Entity-r_and_tree-Mention-1"
        }
      ],
      "relevance": 0.669921875
    },
    "Entity-massive_kg_(2)": {
      "node_id": "massive_kg_(2)",
      "disambiguation_index": 2,
      "label": "massive KGs",
      "aliases": [
        "massive KGs"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Large-scale datasets that are graph databases with weak inference rules and weakly- constraining data schemes, often used to validate or edit knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-4",
          "local_name": "massive KGs",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-massive_kg_(2)-Mention-1"
        }
      ],
      "relevance": 0.669921875
    },
    "Entity-we_introduce_inverse_open_path__iop__rule": {
      "node_id": "we_introduce_inverse_open_path__iop__rule",
      "disambiguation_index": 0,
      "label": "We introduce Inverse Open Path (IOP) rules",
      "aliases": [
        "which we call inverse open path rules (IOP)",
        "the converse of OP rules, which we call inverse open path rules (IOP)",
        "learning a novel kind of rules, Inverse Open Path rules (IOP)",
        "We introduce Inverse Open Path (IOP) rules",
        "Inverse Open Path (IOP) rules",
        "IOP rules"
      ],
      "types": [
        "rule system",
        "concept",
        "rules",
        "inverse open path rules",
        "IOP rule",
        "rule",
        "predicate logic formalism",
        "IOP",
        "methodology",
        "introduction",
        "term"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Inverse Open Path (IOP) rules: a predicate logic formalism presenting specific shapes as paths over connected entities in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "We introduce Inverse Open Path (IOP) rules",
          "local_types": [
            "introduction",
            "methodology"
          ],
          "iri": "Entity-we_introduce_inverse_open_path__iop__rule-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "which we call inverse open path rules (IOP)",
          "local_types": [
            "term",
            "inverse open path rules"
          ],
          "iri": "Entity-we_introduce_inverse_open_path__iop__rule-Mention-2"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "Inverse Open Path (IOP) rules",
          "local_types": [
            "rule system",
            "predicate logic formalism"
          ],
          "iri": "Entity-we_introduce_inverse_open_path__iop__rule-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "the converse of OP rules, which we call inverse open path rules (IOP)",
          "local_types": [
            "concept",
            "rule",
            "IOP"
          ],
          "iri": "Entity-we_introduce_inverse_open_path__iop__rule-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "IOP rules",
          "local_types": [
            "rule",
            "IOP rule"
          ],
          "iri": "Entity-we_introduce_inverse_open_path__iop__rule-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-6",
          "local_name": "IOP rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-we_introduce_inverse_open_path__iop__rule-Mention-6"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-6",
          "local_name": "IOP rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-we_introduce_inverse_open_path__iop__rule-Mention-7"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-3",
          "local_name": "learning a novel kind of rules, Inverse Open Path rules (IOP)",
          "local_types": [
            "rules",
            "IOP"
          ],
          "iri": "Entity-we_introduce_inverse_open_path__iop__rule-Mention-8"
        }
      ],
      "relevance": 0.66943359375
    },
    "Entity-an_iop_rule": {
      "node_id": "an_iop_rule",
      "disambiguation_index": 0,
      "label": "an IOP rule",
      "aliases": [
        "an IOP rule",
        "IOP rules"
      ],
      "types": [
        "concept",
        "IOP rule",
        "rule",
        "rule set",
        "IOP"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An IOP rule is a predicate logic formalism that presents specific shapes in the form of paths over connected entities present in a Knowledge Graph, expressing simple shape patterns that can be augmented with minimum cardinality constraints and used as building blocks for more complex shapes.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-1",
          "local_name": "an IOP rule",
          "local_types": [
            "rule",
            "IOP"
          ],
          "iri": "Entity-an_iop_rule-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-3",
          "local_name": "IOP rules",
          "local_types": [
            "concept",
            "rule set"
          ],
          "iri": "Entity-an_iop_rule-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-5",
          "local_name": "IOP rules",
          "local_types": [
            "rule",
            "IOP rule"
          ],
          "iri": "Entity-an_iop_rule-Mention-3"
        }
      ],
      "relevance": 0.66943359375
    },
    "Entity-we_(6)": {
      "node_id": "we_(6)",
      "disambiguation_index": 6,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of the paper, referring to themselves as they introduce Inverse Open Path (IOP) rules, a predicate logic formalism for expressing specific shapes in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-8",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-2"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-3"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-4",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-4"
        }
      ],
      "relevance": 0.6689453125
    },
    "Entity-interestingness_or_for_kg_verification": {
      "node_id": "interestingness_or_for_kg_verification",
      "disambiguation_index": 0,
      "label": "interestingness or for KG verification",
      "aliases": [
        "interestingness or for KG verification"
      ],
      "types": [
        "evaluation criterion",
        "evaluation metric",
        "knowledge graph application"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure that evaluates the quality and relevance of learned SHACL shapes from knowledge graphs, used for selecting suitable shapes for further analysis or validation.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-1",
          "local_name": "interestingness or for KG verification",
          "local_types": [
            "evaluation criterion",
            "evaluation metric",
            "knowledge graph application"
          ],
          "iri": "Entity-interestingness_or_for_kg_verification-Mention-1"
        }
      ],
      "relevance": 0.6689453125
    },
    "Entity-a_fragment_of_a_39-branched_tree_mined_from_dbpedia_by_aggregating_iop_rule_in_the_experiment": {
      "node_id": "a_fragment_of_a_39-branched_tree_mined_from_dbpedia_by_aggregating_iop_rule_in_the_experiment",
      "disambiguation_index": 0,
      "label": "a fragment of a 39-branched tree mined from DBpedia by aggregating IOP rules in the experiments",
      "aliases": [
        "a fragment of a 39-branched tree mined from DBpedia by aggregating IOP rules in the experiments"
      ],
      "types": [
        "example"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A learned SHACL shape represented as a tree with 39 branches, obtained through aggregation of Inverse Open Path (IOP) rules from DBpedia data.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "a fragment of a 39-branched tree mined from DBpedia by aggregating IOP rules in the experiments",
          "local_types": [
            "example"
          ],
          "iri": "Entity-a_fragment_of_a_39-branched_tree_mined_from_dbpedia_by_aggregating_iop_rule_in_the_experiment-Mention-1"
        }
      ],
      "relevance": 0.66845703125
    },
    "Entity-any_instantiated_open_path_in_a_kg": {
      "node_id": "any_instantiated_open_path_in_a_kg",
      "disambiguation_index": 0,
      "label": "any instantiated open path in a KG",
      "aliases": [
        "any instantiated open path in a KG"
      ],
      "types": [
        "path"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific instance of an IOP rule, which is a predicate logic formalism expressing simple shape patterns as paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "any instantiated open path in a KG",
          "local_types": [
            "path"
          ],
          "iri": "Entity-any_instantiated_open_path_in_a_kg-Mention-1"
        }
      ],
      "relevance": 0.66796875
    },
    "Entity-our_four_benchmark_kg": {
      "node_id": "our_four_benchmark_kg",
      "disambiguation_index": 0,
      "label": "Our four benchmark KGs",
      "aliases": [
        "Our four benchmark KGs"
      ],
      "types": [
        "benchmarks"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The four knowledge graphs used as benchmarks for evaluating SHACLEARNER's ability to learn shapes from massive datasets.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-1",
          "local_name": "Our four benchmark KGs",
          "local_types": [
            "benchmarks"
          ],
          "iri": "Entity-our_four_benchmark_kg-Mention-1"
        }
      ],
      "relevance": 0.66748046875
    },
    "Entity-our_learning_method__shaclearner__is_adapted_from_a_state-of-the-art_embedding-based_open_path_rule_learner_.": {
      "node_id": "our_learning_method__shaclearner__is_adapted_from_a_state-of-the-art_embedding-based_open_path_rule_learner_.",
      "disambiguation_index": 0,
      "label": "Our learning method, SHACLEARNER, is adapted from a state-of-the-art embedding-based open path rule learner.",
      "aliases": [
        "Our learning method, SHACLEARNER, is adapted from a state-of-the-art embedding-based open path rule learner."
      ],
      "types": [
        "methodology",
        "learning algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel methodology for learning high-quality shapes from knowledge graphs using inverse open path rules, adapted from a state-of-the-art embedding-based open path rule learner.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-5",
          "local_name": "Our learning method, SHACLEARNER, is adapted from a state-of-the-art embedding-based open path rule learner.",
          "local_types": [
            "methodology",
            "learning algorithm"
          ],
          "iri": "Entity-our_learning_method__shaclearner__is_adapted_from_a_state-of-the-art_embedding-based_open_path_rule_learner_.-Mention-1"
        }
      ],
      "relevance": 0.666015625
    },
    "Entity-iop_rule_annotated_with_cardinality_constraint": {
      "node_id": "iop_rule_annotated_with_cardinality_constraint",
      "disambiguation_index": 0,
      "label": "IOP rules annotated with cardinality constraints",
      "aliases": [
        "IOP rules annotated with cardinality constraints"
      ],
      "types": [
        "rule set",
        "annotated data"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of rules with cardinality constraints used to express shape patterns over connected entities in a knowledge graph, serving as building blocks for more complex shapes such as trees.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "IOP rules annotated with cardinality constraints",
          "local_types": [
            "rule set",
            "annotated data"
          ],
          "iri": "Entity-iop_rule_annotated_with_cardinality_constraint-Mention-1"
        }
      ],
      "relevance": 0.66552734375
    },
    "Entity-a_method": {
      "node_id": "a_method",
      "disambiguation_index": 0,
      "label": "a method",
      "aliases": [
        "a method"
      ],
      "types": [
        "method",
        "approach"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel approach or technique used to learn SHACL shapes from knowledge graphs by aggregating Inverse Open Path rules and discovering more complex tree-shaped patterns.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-2",
          "local_name": "a method",
          "local_types": [
            "method",
            "approach"
          ],
          "iri": "Entity-a_method-Mention-1"
        }
      ],
      "relevance": 0.66552734375
    },
    "Entity-are_not_shown_to_be_scalable_to_handle_real-world_kg": {
      "node_id": "are_not_shown_to_be_scalable_to_handle_real-world_kg",
      "disambiguation_index": 0,
      "label": "are not shown to be scalable to handle real-world KGs",
      "aliases": [
        "are not shown to be scalable to handle real-world KGs"
      ],
      "types": [
        "scalability",
        "real-world data"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "procedural methods for learning SHACL shapes from knowledge graphs",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "are not shown to be scalable to handle real-world KGs",
          "local_types": [
            "scalability",
            "real-world data"
          ],
          "iri": "Entity-are_not_shown_to_be_scalable_to_handle_real-world_kg-Mention-1"
        }
      ],
      "relevance": 0.66455078125
    },
    "Entity-rule_learner_to_the_maximum_length_of_rule": {
      "node_id": "rule_learner_to_the_maximum_length_of_rule",
      "disambiguation_index": 0,
      "label": "rule learners to the maximum length of rules",
      "aliases": [
        "rule learners to the maximum length of rules"
      ],
      "types": [
        "algorithm",
        "constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A constraint-based algorithm that learns SHACL shapes from knowledge graphs",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-2",
          "local_name": "rule learners to the maximum length of rules",
          "local_types": [
            "algorithm",
            "constraint"
          ],
          "iri": "Entity-rule_learner_to_the_maximum_length_of_rule-Mention-1"
        }
      ],
      "relevance": 0.66357421875
    },
    "Entity-iop_rule_with_up_to_l_atom__including_the_specific_body_target_predicate__pt_": {
      "node_id": "iop_rule_with_up_to_l_atom__including_the_specific_body_target_predicate__pt_",
      "disambiguation_index": 0,
      "label": "IOP rules with up to l atoms (including the specific body target predicate, Pt)",
      "aliases": [
        "IOP rules with up to l atoms (including the specific body target predicate, Pt)"
      ],
      "types": [
        "rules",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "IOP rules with up to l atoms (including the specific body target predicate, Pt) are a type of SHACL shape that expresses simple path patterns over connected entities present in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "IOP rules with up to l atoms (including the specific body target predicate, Pt)",
          "local_types": [
            "rules",
            "predicate"
          ],
          "iri": "Entity-iop_rule_with_up_to_l_atom__including_the_specific_body_target_predicate__pt_-Mention-1"
        }
      ],
      "relevance": 0.6630859375
    },
    "Entity-formal_quality_measure_for_iop_rule": {
      "node_id": "formal_quality_measure_for_iop_rule",
      "disambiguation_index": 0,
      "label": "formal quality measures for IOP rules",
      "aliases": [
        "formal quality measures for IOP rules"
      ],
      "types": [
        "concept",
        "quality measure"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of metrics used to evaluate the quality of Inverse Open Path (IOP) rules, which are predicate logic formalisms that express specific shapes in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "formal quality measures for IOP rules",
          "local_types": [
            "concept",
            "quality measure"
          ],
          "iri": "Entity-formal_quality_measure_for_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.6630859375
    },
    "Entity-this_procedure": {
      "node_id": "this_procedure",
      "disambiguation_index": 0,
      "label": "This procedure",
      "aliases": [
        "This procedure"
      ],
      "types": [
        "procedure"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The algorithmic process of deriving SHACL trees from annotated IOP rules in order to learn high-quality tree shapes for knowledge graph validation and completion.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-2",
          "local_name": "This procedure",
          "local_types": [
            "procedure"
          ],
          "iri": "Entity-this_procedure-Mention-1"
        }
      ],
      "relevance": 0.6630859375
    },
    "Entity-shaclearner_of_algorithm_1": {
      "node_id": "shaclearner_of_algorithm_1",
      "disambiguation_index": 0,
      "label": "SHACLEARNER of Algorithm 1",
      "aliases": [
        "the SHACLearner algorithm",
        "SHACLEARNER of Algorithm 1"
      ],
      "types": [
        "algorithm",
        "SHACLearner",
        "name"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel method for learning high-quality shapes from knowledge graphs, adapted from a state-of-the-art embedding-based open path rule learner.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-5",
          "local_name": "SHACLEARNER of Algorithm 1",
          "local_types": [
            "algorithm",
            "name"
          ],
          "iri": "Entity-shaclearner_of_algorithm_1-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "the SHACLearner algorithm",
          "local_types": [
            "algorithm",
            "SHACLearner"
          ],
          "iri": "Entity-shaclearner_of_algorithm_1-Mention-2"
        }
      ],
      "relevance": 0.6630859375
    },
    "Entity-_inverse_open_path__iopsupp__iopsc__iophc_": {
      "node_id": "_inverse_open_path__iopsupp__iopsc__iophc_",
      "disambiguation_index": 0,
      "label": "(inverse open path: IOPsupp, IOPSC, IOPHC)",
      "aliases": [
        "(inverse open path: IOPsupp, IOPSC, IOPHC)"
      ],
      "types": [
        "notation",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The inverse open path (IOP) rules, which correspond to SHACL shapes and express specific shape patterns that can be augmented with minimum cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-1",
          "local_name": "(inverse open path: IOPsupp, IOPSC, IOPHC)",
          "local_types": [
            "notation",
            "concept"
          ],
          "iri": "Entity-_inverse_open_path__iopsupp__iopsc__iophc_-Mention-1"
        }
      ],
      "relevance": 0.66259765625
    },
    "Entity-in_line_8_of_algorithm_1": {
      "node_id": "in_line_8_of_algorithm_1",
      "disambiguation_index": 0,
      "label": "in line 8 of Algorithm 1",
      "aliases": [
        "in line 8 of Algorithm 1"
      ],
      "types": [
        "reference",
        "line reference"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The procedure used to derive SHACL trees from annotated IOP rules in the context of learning high-quality tree shapes for knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-1",
          "local_name": "in line 8 of Algorithm 1",
          "local_types": [
            "reference",
            "line reference"
          ],
          "iri": "Entity-in_line_8_of_algorithm_1-Mention-1"
        }
      ],
      "relevance": 0.66259765625
    },
    "Entity-the_intended_data-first_approach_of_kg_application": {
      "node_id": "the_intended_data-first_approach_of_kg_application",
      "disambiguation_index": 0,
      "label": "the intended data-first approach of KG applications",
      "aliases": [
        "the intended data-first approach of KG applications"
      ],
      "types": [
        "approach",
        "data-first",
        "KG application"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept refers to an approach where Knowledge Graph (KG) applications prioritize data over schema constraints, leading to incomplete and uncertain shape constraints in large KGs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-5",
          "local_name": "the intended data-first approach of KG applications",
          "local_types": [
            "approach",
            "data-first",
            "KG application"
          ],
          "iri": "Entity-the_intended_data-first_approach_of_kg_application-Mention-1"
        }
      ],
      "relevance": 0.662109375
    },
    "Entity-rescal__in_embeddings": {
      "node_id": "rescal__in_embeddings",
      "disambiguation_index": 0,
      "label": "RESCAL, in Embeddings",
      "aliases": [
        "RESCAL, in Embeddings"
      ],
      "types": [
        "algorithm",
        "technique",
        "embedding learner",
        "tool",
        "framework"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific type of embedding-based open path rule learner used by SHACLEARNER to learn annotated IOP rules from a sampled knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "RESCAL, in Embeddings",
          "local_types": [
            "algorithm",
            "technique",
            "embedding learner",
            "tool",
            "framework"
          ],
          "iri": "Entity-rescal__in_embeddings-Mention-1"
        }
      ],
      "relevance": 0.662109375
    },
    "Entity-shacl_semantics": {
      "node_id": "shacl_semantics",
      "disambiguation_index": 0,
      "label": "SHACL semantics",
      "aliases": [
        "SHACL semantics"
      ],
      "types": [
        "concept",
        "semantics"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The formalism and logical foundations for expressing constraints on graph data as shapes using the Shapes Constraint Language (SHACL) standard.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-2",
          "local_name": "SHACL semantics",
          "local_types": [
            "concept",
            "semantics"
          ],
          "iri": "Entity-shacl_semantics-Mention-1"
        }
      ],
      "relevance": 0.662109375
    },
    "Entity-such_a_k-cliques__closed_rule__cr___that_include_closed_path_rule___functional_graph_dependency__fgd___and_tree_.": {
      "node_id": "such_a_k-cliques__closed_rule__cr___that_include_closed_path_rule___functional_graph_dependency__fgd___and_tree_.",
      "disambiguation_index": 0,
      "label": "such as k-cliques, Closed rules (CR) (that include closed path rules), Functional Graph Dependency (FGD), and trees.",
      "aliases": [
        "such as k-cliques, Closed rules (CR) (that include closed path rules), Functional Graph Dependency (FGD), and trees."
      ],
      "types": [
        "k-clique",
        "Closed rule",
        "Functional Graph Dependency",
        "tree"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Various formalisms with corresponding shapes that have been proposed to express diverse kinds of patterns exhibited in Knowledge Graphs (KGs).",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "such as k-cliques, Closed rules (CR) (that include closed path rules), Functional Graph Dependency (FGD), and trees.",
          "local_types": [
            "k-clique",
            "Closed rule",
            "Functional Graph Dependency",
            "tree"
          ],
          "iri": "Entity-such_a_k-cliques__closed_rule__cr___that_include_closed_path_rule___functional_graph_dependency__fgd___and_tree_.-Mention-1"
        }
      ],
      "relevance": 0.66162109375
    },
    "Entity-a_rule": {
      "node_id": "a_rule",
      "disambiguation_index": 0,
      "label": "a rule",
      "aliases": [
        "a rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific form of SHACL shape constraint that corresponds to an inverse open path rule, used for expressing constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "a rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-a_rule-Mention-1"
        }
      ],
      "relevance": 0.66162109375
    },
    "Entity-that_sample_but_doe_not_use_heuristic_pruning_and_so_generates_rule_based_on_the_sampled_kg_and_evaluates_rule_on_the_complete_kg": {
      "node_id": "that_sample_but_doe_not_use_heuristic_pruning_and_so_generates_rule_based_on_the_sampled_kg_and_evaluates_rule_on_the_complete_kg",
      "disambiguation_index": 0,
      "label": "that samples but does not use heuristic pruning and so generates rules based on the sampled KG and evaluates rules on the complete KG",
      "aliases": [
        "that samples but does not use heuristic pruning and so generates rules based on the sampled KG and evaluates rules on the complete KG"
      ],
      "types": [
        "methodology",
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A methodology variant of SHACLEARNER that uses sampling to generate IOP rules, but does not employ heuristic pruning, instead evaluating these rules on the entire knowledge graph.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-2",
          "local_name": "that samples but does not use heuristic pruning and so generates rules based on the sampled KG and evaluates rules on the complete KG",
          "local_types": [
            "methodology",
            "evaluation"
          ],
          "iri": "Entity-that_sample_but_doe_not_use_heuristic_pruning_and_so_generates_rule_based_on_the_sampled_kg_and_evaluates_rule_on_the_complete_kg-Mention-1"
        }
      ],
      "relevance": 0.66162109375
    },
    "Entity-pruning_variant": {
      "node_id": "pruning_variant",
      "disambiguation_index": 0,
      "label": "pruning variants",
      "aliases": [
        "pruning variants"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of methods or algorithms used to reduce the search space for Inverse Open Path rules in SHACLEARNER, which learns high-quality shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-1",
          "local_name": "pruning variants",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-pruning_variant-Mention-1"
        }
      ],
      "relevance": 0.6611328125
    },
    "Entity-the_shape": {
      "node_id": "the_shape",
      "disambiguation_index": 0,
      "label": "The shapes",
      "aliases": [
        "The shapes",
        "the shapes"
      ],
      "types": [
        "shapes",
        "pattern"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "SHACL shapes learned from knowledge graphs using Inverse Open Path rules",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-3",
          "local_name": "The shapes",
          "local_types": [
            "shapes"
          ],
          "iri": "Entity-the_shape-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-6",
          "local_name": "the shapes",
          "local_types": [
            "pattern"
          ],
          "iri": "Entity-the_shape-Mention-2"
        }
      ],
      "relevance": 0.65966796875
    },
    "Entity-the_building_block_for_expressing_all_of_these_shape_constraint_is_a_sequence_of_predicate": {
      "node_id": "the_building_block_for_expressing_all_of_these_shape_constraint_is_a_sequence_of_predicate",
      "disambiguation_index": 0,
      "label": "the building block for expressing all of these shape constraints is a sequence of predicates",
      "aliases": [
        "the building block for expressing all of these shape constraints is a sequence of predicates"
      ],
      "types": [
        "concept",
        "structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A fundamental concept in SHACL, representing the basic unit used to define and express various shapes, including paths, closed rules, trees, and other patterns exhibited in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "the building block for expressing all of these shape constraints is a sequence of predicates",
          "local_types": [
            "concept",
            "structure"
          ],
          "iri": "Entity-the_building_block_for_expressing_all_of_these_shape_constraint_is_a_sequence_of_predicate-Mention-1"
        }
      ],
      "relevance": 0.65869140625
    },
    "Entity-the_main_contribution_of_this_paper": {
      "node_id": "the_main_contribution_of_this_paper",
      "disambiguation_index": 0,
      "label": "the main contributions of this paper",
      "aliases": [
        "the main contributions of this paper"
      ],
      "types": [
        "contribution"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The main contributions of this paper are the introduction of Inverse Open Path (IOP) rules as a building block for complex shapes like trees, along with cardinality constraints and quality measurements; an extension to learn IOP rules annotated with cardinality constraints using unary predicates; and a method to aggregate IOP rules into tree shapes.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "the main contributions of this paper",
          "local_types": [
            "contribution"
          ],
          "iri": "Entity-the_main_contribution_of_this_paper-Mention-1"
        }
      ],
      "relevance": 0.65869140625
    },
    "Entity-readable_pattern": {
      "node_id": "readable_pattern",
      "disambiguation_index": 0,
      "label": "readable patterns",
      "aliases": [
        "readable patterns"
      ],
      "types": [
        "format",
        "structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACL tree shapes, which are used for documenting knowledge graphs and providing a way to validate them by presenting constraints as readable patterns.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-1",
          "local_name": "readable patterns",
          "local_types": [
            "format",
            "structure"
          ],
          "iri": "Entity-readable_pattern-Mention-1"
        }
      ],
      "relevance": 0.658203125
    },
    "Entity-open_path__op__rule_of_the_form_": {
      "node_id": "open_path__op__rule_of_the_form_",
      "disambiguation_index": 0,
      "label": "open path (OP) rules of the form:",
      "aliases": [
        "open path (OP) rules of the form:"
      ],
      "types": [
        "rule",
        "format"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of rules that define paths over connected entities present in a Knowledge Graph (KG), used to express shape patterns and validate KG data.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "open path (OP) rules of the form:",
          "local_types": [
            "rule",
            "format"
          ],
          "iri": "Entity-open_path__op__rule_of_the_form_-Mention-1"
        }
      ],
      "relevance": 0.658203125
    },
    "Entity-using_the_complete_kg_for_learning_rule_about_all_target_predicate": {
      "node_id": "using_the_complete_kg_for_learning_rule_about_all_target_predicate",
      "disambiguation_index": 0,
      "label": "using the complete KG for learning rules about all target predicates",
      "aliases": [
        "using the complete KG for learning rules about all target predicates"
      ],
      "types": [
        "method",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Learning IOP rules from a knowledge graph without sampling or pruning, considering all target predicates",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-2",
          "local_name": "using the complete KG for learning rules about all target predicates",
          "local_types": [
            "method",
            "predicate"
          ],
          "iri": "Entity-using_the_complete_kg_for_learning_rule_about_all_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.658203125
    },
    "Entity-rule_of_low_quality": {
      "node_id": "rule_of_low_quality",
      "disambiguation_index": 0,
      "label": "rules of low quality",
      "aliases": [
        "rules of low quality"
      ],
      "types": [
        "rule set",
        "low-quality rule set",
        "quality",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of SHACL shapes that do not meet minimum quality thresholds (IOPSC >= 0.1 and IOPHC >= 0.01) for validation, manual editing tasks, or insight into knowledge graph structure.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-3",
          "local_name": "rules of low quality",
          "local_types": [
            "rule set",
            "low-quality rule set",
            "quality",
            "rule"
          ],
          "iri": "Entity-rule_of_low_quality-Mention-1"
        }
      ],
      "relevance": 0.65771484375
    },
    "Entity-to_demonstrate": {
      "node_id": "to_demonstrate",
      "disambiguation_index": 0,
      "label": "To demonstrate",
      "aliases": [
        "To demonstrate"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process or approach proposed for building complex tree shapes from Inverse Open Path (IOP) rules mined from a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "To demonstrate",
          "local_types": [
            "method"
          ],
          "iri": "Entity-to_demonstrate-Mention-1"
        }
      ],
      "relevance": 0.6572265625
    },
    "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg": {
      "node_id": "a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "disambiguation_index": 0,
      "label": "as expected, as they have the least stringent requirements to be met in the KG",
      "aliases": [
        "as expected, as they have the least stringent requirements to be met in the KG"
      ],
      "types": [
        "requirement",
        "expectation",
        "explanation",
        "knowledge graph (KG)",
        "rationale"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Rules with minimum quality thresholds (IOPSC >= 0.1 and IOPHC >= 0.01) that have a cardinality of 1, requiring the least stringent conditions to be met in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-6-Sentence-1",
          "local_name": "as expected, as they have the least stringent requirements to be met in the KG",
          "local_types": [
            "requirement",
            "expectation",
            "explanation",
            "knowledge graph (KG)",
            "rationale"
          ],
          "iri": "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.6572265625
    },
    "Entity-real-world_kg": {
      "node_id": "real-world_kg",
      "disambiguation_index": 0,
      "label": "real-world KGs",
      "aliases": [
        "real-world KGs"
      ],
      "types": [
        "knowledge graph",
        "knowledge graphs"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Large data-first graph databases with weak inference rules and weakly- constraining data schemes, which are sparse with only a very small proportion of entities associated with any predicate within distance l.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-4",
          "local_name": "real-world KGs",
          "local_types": [
            "knowledge graphs"
          ],
          "iri": "Entity-real-world_kg-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "real-world KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-real-world_kg-Mention-2"
        }
      ],
      "relevance": 0.65673828125
    },
    "Entity-r__pt__x__z0__-__p1__z0__x___p2__z1__y_": {
      "node_id": "r__pt__x__z0__-__p1__z0__x___p2__z1__y_",
      "disambiguation_index": 0,
      "label": "r: Pt(x, z0) -> P1(z0, x) ^ P2(z1, y)",
      "aliases": [
        "r: Pt(x, z0) -> P1(z0, x) ^ P2(z1, y)"
      ],
      "types": [
        "mathematical expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An Inverse Open Path (IOP) rule in predicate logic formalism, which presents a specific shape pattern as paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-2",
          "local_name": "r: Pt(x, z0) -> P1(z0, x) ^ P2(z1, y)",
          "local_types": [
            "mathematical expression"
          ],
          "iri": "Entity-r__pt__x__z0__-__p1__z0__x___p2__z1__y_-Mention-1"
        }
      ],
      "relevance": 0.65673828125
    },
    "Entity-for_the_example": {
      "node_id": "for_the_example",
      "disambiguation_index": 0,
      "label": "For the example",
      "aliases": [
        "For the example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The illustration of how to compute IOPSC and IOPHC quality measures for an inverse open path rule in the context of learning SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "For the example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_the_example-Mention-1"
        }
      ],
      "relevance": 0.65673828125
    },
    "Entity-our_shape_describe_conjunctive_path_of_constraint_over_property__enhanced_with_minimum_cardinality_constraint": {
      "node_id": "our_shape_describe_conjunctive_path_of_constraint_over_property__enhanced_with_minimum_cardinality_constraint",
      "disambiguation_index": 0,
      "label": "our shapes describe conjunctive paths of constraints over properties, enhanced with minimum cardinality constraints",
      "aliases": [
        "our shapes describe conjunctive paths of constraints over properties, enhanced with minimum cardinality constraints"
      ],
      "types": [
        "shapes",
        "constraints",
        "properties"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "SHACL (Shapes Constraint Language) shapes that represent the quantified uncertainty of a candidate shape to be selected for interestingness or for knowledge graph verification, enhanced with minimum cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-2",
          "local_name": "our shapes describe conjunctive paths of constraints over properties, enhanced with minimum cardinality constraints",
          "local_types": [
            "shapes",
            "constraints",
            "properties"
          ],
          "iri": "Entity-our_shape_describe_conjunctive_path_of_constraint_over_property__enhanced_with_minimum_cardinality_constraint-Mention-1"
        }
      ],
      "relevance": 0.65625
    },
    "Entity-basic_shacl": {
      "node_id": "basic_shacl",
      "disambiguation_index": 0,
      "label": "basic SHACL",
      "aliases": [
        "basic SHACL"
      ],
      "types": [
        "ontology",
        "SHACL",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Basic SHACL refers to the fundamental concept or ontology that allows for expressing constraints on graph data as shapes, serving as a foundation for modeling diverse shapes including rules and constraints.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "basic SHACL",
          "local_types": [
            "ontology",
            "SHACL",
            "concept"
          ],
          "iri": "Entity-basic_shacl-Mention-1"
        }
      ],
      "relevance": 0.6552734375
    },
    "Entity-all_possible_iop_rule": {
      "node_id": "all_possible_iop_rule",
      "disambiguation_index": 0,
      "label": "all possible IOP rules",
      "aliases": [
        "all possible IOP rules"
      ],
      "types": [
        "IOP rule",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of all feasible and potential Inverse Open Path (IOP) rules that can be mined from knowledge graphs, considering specific shape patterns, minimum cardinality constraints, and predicate logic formalism.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "all possible IOP rules",
          "local_types": [
            "IOP rule",
            "rule"
          ],
          "iri": "Entity-all_possible_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.6552734375
    },
    "Entity-iop_version": {
      "node_id": "iop_version",
      "disambiguation_index": 0,
      "label": "IOP version",
      "aliases": [
        "IOP version"
      ],
      "types": [
        "version",
        "modification",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Inverse Open Path (IOP) version, a predicate logic formalism that presents specific shapes in the form of paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "IOP version",
          "local_types": [
            "version",
            "modification",
            "concept"
          ],
          "iri": "Entity-iop_version-Mention-1"
        }
      ],
      "relevance": 0.65478515625
    },
    "Entity-iop_rule_(1)": {
      "node_id": "iop_rule_(1)",
      "disambiguation_index": 1,
      "label": "IOP rules",
      "aliases": [
        "IOP rules"
      ],
      "types": [
        "rule set",
        "concept",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of formal rules that express specific shape patterns as paths over connected entities present in a knowledge graph, used for validating and editing the graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "IOP rules",
          "local_types": [
            "rule set",
            "concept",
            "rule"
          ],
          "iri": "Entity-iop_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.65478515625
    },
    "Entity-shacl": {
      "node_id": "shacl",
      "disambiguation_index": 0,
      "label": "SHACL",
      "aliases": [
        "SHACL"
      ],
      "types": [
        "recommendation",
        "semantic web technology",
        "ontology",
        "semantic web language",
        "standard",
        "framework",
        "method",
        "notation system",
        "W3C recommendation",
        "research",
        "ontology language",
        "semantic query language",
        "acronym",
        "data model",
        "format",
        "language",
        "semantic technology",
        "concept",
        "formalism",
        "technology"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A semantic web language and standard used for expressing constraints on graph data.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "language"
          ],
          "iri": "Entity-shacl-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "data model",
            "concept",
            "ontology language"
          ],
          "iri": "Entity-shacl-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "ontology language",
            "language",
            "semantic technology",
            "ontology",
            "standard",
            "technology",
            "research"
          ],
          "iri": "Entity-shacl-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "ontology",
            "semantic technology",
            "ontology language"
          ],
          "iri": "Entity-shacl-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "concept",
            "ontology language"
          ],
          "iri": "Entity-shacl-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "language",
            "concept",
            "ontology",
            "standard",
            "formalism",
            "framework",
            "technology",
            "research"
          ],
          "iri": "Entity-shacl-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-7",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "language",
            "research",
            "technology"
          ],
          "iri": "Entity-shacl-Mention-7"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "language",
            "method",
            "standard",
            "framework",
            "technology",
            "research"
          ],
          "iri": "Entity-shacl-Mention-8"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "ontology",
            "ontology language"
          ],
          "iri": "Entity-shacl-Mention-9"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "SHACL",
          "local_types": [
            "recommendation",
            "language",
            "ontology",
            "semantic web language",
            "standard",
            "format"
          ],
          "iri": "Entity-shacl-Mention-10"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "ontology language",
            "recommendation",
            "language",
            "ontology",
            "standard"
          ],
          "iri": "Entity-shacl-Mention-11"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "ontology",
            "concept",
            "framework"
          ],
          "iri": "Entity-shacl-Mention-12"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "technology",
            "standard"
          ],
          "iri": "Entity-shacl-Mention-13"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "language",
            "format",
            "concept"
          ],
          "iri": "Entity-shacl-Mention-14"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "language",
            "concept"
          ],
          "iri": "Entity-shacl-Mention-15"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "ontology",
            "language",
            "technology"
          ],
          "iri": "Entity-shacl-Mention-16"
        },
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "language",
            "ontology",
            "technology"
          ],
          "iri": "Entity-shacl-Mention-17"
        },
        {
          "reference": "Section-13-Paragraph-7-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "language"
          ],
          "iri": "Entity-shacl-Mention-18"
        },
        {
          "reference": "Section-13-Paragraph-7-Sentence-2",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "ontology",
            "semantic technology"
          ],
          "iri": "Entity-shacl-Mention-19"
        },
        {
          "reference": "Section-13-Paragraph-7-Sentence-3",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "semantic web technology",
            "ontology language",
            "technology"
          ],
          "iri": "Entity-shacl-Mention-20"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "ontology",
            "concept"
          ],
          "iri": "Entity-shacl-Mention-21"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "format",
            "concept"
          ],
          "iri": "Entity-shacl-Mention-22"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-3",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "ontology",
            "concept"
          ],
          "iri": "Entity-shacl-Mention-23"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "language"
          ],
          "iri": "Entity-shacl-Mention-24"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "SHACL",
          "local_types": [
            "recommendation",
            "language",
            "notation system",
            "W3C recommendation",
            "acronym",
            "standard"
          ],
          "iri": "Entity-shacl-Mention-25"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "SHACL",
          "local_types": [
            "semantic query language"
          ],
          "iri": "Entity-shacl-Mention-26"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "ontology",
            "standard"
          ],
          "iri": "Entity-shacl-Mention-27"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "ontology"
          ],
          "iri": "Entity-shacl-Mention-28"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-2",
          "local_name": "SHACL",
          "local_types": [
            "ontology",
            "standard"
          ],
          "iri": "Entity-shacl-Mention-29"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "language",
            "standard"
          ],
          "iri": "Entity-shacl-Mention-30"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "SHACL",
          "local_types": [
            "standard",
            "language",
            "ontology"
          ],
          "iri": "Entity-shacl-Mention-31"
        }
      ],
      "relevance": 0.65380859375
    },
    "Entity-let_r_be_an_op_rule_of_the_given_form_.": {
      "node_id": "let_r_be_an_op_rule_of_the_given_form_.",
      "disambiguation_index": 0,
      "label": "Let r be an OP rule of the given form.",
      "aliases": [
        "Let r be an OP rule of the given form."
      ],
      "types": [
        "rule",
        "form"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An Inverse Open Path (IOP) rule, a predicate logic formalism that presents specific shapes in the form of paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "Let r be an OP rule of the given form.",
          "local_types": [
            "rule",
            "form"
          ],
          "iri": "Entity-let_r_be_an_op_rule_of_the_given_form_.-Mention-1"
        }
      ],
      "relevance": 0.65380859375
    },
    "Entity-shape_tree": {
      "node_id": "shape_tree",
      "disambiguation_index": 0,
      "label": "shape tree",
      "aliases": [
        "shape tree"
      ],
      "types": [
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A data structure representing a SHACL (Shapes Constraint Language) constraint on graph data, consisting of a sequence of paths or branches with minimum cardinality constraints and quality measures.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-6",
          "local_name": "shape tree",
          "local_types": [
            "data structure"
          ],
          "iri": "Entity-shape_tree-Mention-1"
        }
      ],
      "relevance": 0.65380859375
    },
    "Entity-the_process_of_constructing_one_kind_of_more_complex_shape__that_is_a_tree__out_of_path": {
      "node_id": "the_process_of_constructing_one_kind_of_more_complex_shape__that_is_a_tree__out_of_path",
      "disambiguation_index": 0,
      "label": "the process of constructing one kind of more complex shape, that is a tree, out of paths",
      "aliases": [
        "the process of constructing one kind of more complex shape, that is a tree, out of paths"
      ],
      "types": [
        "methodology",
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The method of aggregating Inverse Open Path rules into hierarchical structures to form trees, which can be used as SHACL shapes in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "the process of constructing one kind of more complex shape, that is a tree, out of paths",
          "local_types": [
            "methodology",
            "research"
          ],
          "iri": "Entity-the_process_of_constructing_one_kind_of_more_complex_shape__that_is_a_tree__out_of_path-Mention-1"
        }
      ],
      "relevance": 0.65380859375
    },
    "Entity-for_a_small_complete_kg": {
      "node_id": "for_a_small_complete_kg",
      "disambiguation_index": 0,
      "label": "for a small complete KG",
      "aliases": [
        "for a small complete KG"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A small and complete knowledge graph that serves as a benchmark for evaluating the performance of SHACLEARNER's ability to learn high-quality rules.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-5",
          "local_name": "for a small complete KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-for_a_small_complete_kg-Mention-1"
        }
      ],
      "relevance": 0.6533203125
    },
    "Entity-evaluating_kg_rule-learning_method": {
      "node_id": "evaluating_kg_rule-learning_method",
      "disambiguation_index": 0,
      "label": "evaluating KG rule-learning methods",
      "aliases": [
        "evaluating KG rule-learning methods"
      ],
      "types": [
        "evaluation",
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of assessing and comparing the effectiveness of various knowledge graph (KG) rule-learning techniques in terms of their ability to generate high-quality, informative shapes from massive KGs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-1",
          "local_name": "evaluating KG rule-learning methods",
          "local_types": [
            "evaluation",
            "task"
          ],
          "iri": "Entity-evaluating_kg_rule-learning_method-Mention-1"
        }
      ],
      "relevance": 0.6533203125
    },
    "Entity-and_briefly_discus_the_application_of_such_tree_to_kg_completion_.": {
      "node_id": "and_briefly_discus_the_application_of_such_tree_to_kg_completion_.",
      "disambiguation_index": 0,
      "label": "and briefly discuss the application of such trees to KG completion.",
      "aliases": [
        "and briefly discuss the application of such trees to KG completion."
      ],
      "types": [
        "proposition",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Inverse Open Path (IOP) rules",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "and briefly discuss the application of such trees to KG completion.",
          "local_types": [
            "proposition",
            "evaluation"
          ],
          "iri": "Entity-and_briefly_discus_the_application_of_such_tree_to_kg_completion_.-Mention-1"
        }
      ],
      "relevance": 0.65234375
    },
    "Entity-consider_the_iop_rule_r__pt__x__z0__-__p1__z0__x___p2__z1__y_": {
      "node_id": "consider_the_iop_rule_r__pt__x__z0__-__p1__z0__x___p2__z1__y_",
      "disambiguation_index": 0,
      "label": "Consider the IOP rule r: Pt(x, z0) -> P1(z0, x) ^ P2(z1, y)",
      "aliases": [
        "Consider the IOP rule r: Pt(x, z0) -> P1(z0, x) ^ P2(z1, y)"
      ],
      "types": [
        "rule",
        "IOP"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An Inverse Open Path (IOP) rule that specifies a shape pattern in a knowledge graph, where entities satisfying the body of the rule are connected by predicate paths to those satisfying the head.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-2",
          "local_name": "Consider the IOP rule r: Pt(x, z0) -> P1(z0, x) ^ P2(z1, y)",
          "local_types": [
            "rule",
            "IOP"
          ],
          "iri": "Entity-consider_the_iop_rule_r__pt__x__z0__-__p1__z0__x___p2__z1__y_-Mention-1"
        }
      ],
      "relevance": 0.65234375
    },
    "Entity-our_learning_method": {
      "node_id": "our_learning_method",
      "disambiguation_index": 0,
      "label": "Our learning method",
      "aliases": [
        "Our learning method"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel method to learn high-quality rules from knowledge graphs (KGs) that is adapted from a state-of-the-art embedding-based open path rule learner.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-5",
          "local_name": "Our learning method",
          "local_types": [
            "method"
          ],
          "iri": "Entity-our_learning_method-Mention-1"
        }
      ],
      "relevance": 0.65234375
    },
    "Entity-our_experiment": {
      "node_id": "our_experiment",
      "disambiguation_index": 0,
      "label": "Our experiments",
      "aliases": [
        "Our experiments"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Experiments conducted to evaluate the effectiveness of SHACLEARNER in learning high-quality IOP rules from massive real-world benchmark knowledge graphs including YAGO2s, DBpedia 3.8, and Wikidata.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "Our experiments",
          "local_types": [
            "research"
          ],
          "iri": "Entity-our_experiment-Mention-1"
        }
      ],
      "relevance": 0.65234375
    },
    "Entity-this_case": {
      "node_id": "this_case",
      "disambiguation_index": 0,
      "label": "this case",
      "aliases": [
        "this case"
      ],
      "types": [
        "case"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The specific IOP rule mentioned in the example where SHACLEARNER learns high-quality shapes from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-5",
          "local_name": "this case",
          "local_types": [
            "case"
          ],
          "iri": "Entity-this_case-Mention-1"
        }
      ],
      "relevance": 0.65185546875
    },
    "Entity-it_converse_iop_version": {
      "node_id": "it_converse_iop_version",
      "disambiguation_index": 0,
      "label": "its converse IOP version",
      "aliases": [
        "its converse IOP version"
      ],
      "types": [
        "version",
        "IOP"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The converse of an OP rule, which corresponds to a SHACL shape and expresses specific patterns in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "its converse IOP version",
          "local_types": [
            "version",
            "IOP"
          ],
          "iri": "Entity-it_converse_iop_version-Mention-1"
        }
      ],
      "relevance": 0.6513671875
    },
    "Entity-each_target_predicate": {
      "node_id": "each_target_predicate",
      "disambiguation_index": 0,
      "label": "each target predicate",
      "aliases": [
        "each target predicate"
      ],
      "types": [
        "predicate",
        "target"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The SHACLEARNER method used to learn high-quality rules from knowledge graphs, specifically designed to handle massive KGs like YAGO2s with 4 million facts, DBpedia 3.8 with 11 million facts, and Wikidata with 8 million facts.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-8",
          "local_name": "each target predicate",
          "local_types": [
            "predicate",
            "target"
          ],
          "iri": "Entity-each_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.6513671875
    },
    "Entity-a_novel_method_to_learn_high-quality_rule_from_kg": {
      "node_id": "a_novel_method_to_learn_high-quality_rule_from_kg",
      "disambiguation_index": 0,
      "label": "a novel method to learn high-quality rules from KGs",
      "aliases": [
        "a novel method to learn high-quality rules from KGs"
      ],
      "types": [
        "method",
        "approach"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A proposed approach or technique used to derive accurate and reliable shape constraints (rules) from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "a novel method to learn high-quality rules from KGs",
          "local_types": [
            "method",
            "approach"
          ],
          "iri": "Entity-a_novel_method_to_learn_high-quality_rule_from_kg-Mention-1"
        }
      ],
      "relevance": 0.6513671875
    },
    "Entity-our_proposed_tree_shape": {
      "node_id": "our_proposed_tree_shape",
      "disambiguation_index": 0,
      "label": "Our proposed tree shapes",
      "aliases": [
        "Our proposed tree shapes"
      ],
      "types": [
        "research",
        "proposed solution"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel type of SHACL shape that represents a tree-like structure composed of paths over connected entities present in a knowledge graph, used for validating and documenting the graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-4",
          "local_name": "Our proposed tree shapes",
          "local_types": [
            "research",
            "proposed solution"
          ],
          "iri": "Entity-our_proposed_tree_shape-Mention-1"
        }
      ],
      "relevance": 0.6513671875
    },
    "Entity-our_shaclearner_based_on_algorithm_1": {
      "node_id": "our_shaclearner_based_on_algorithm_1",
      "disambiguation_index": 0,
      "label": "our SHACLEARNER based on Algorithm 1",
      "aliases": [
        "our SHACLEARNER based on Algorithm 1"
      ],
      "types": [
        "algorithm",
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method for learning high-quality shapes from massive knowledge graphs, adapted from a state-of-the-art embedding-based open path rule learner.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-1",
          "local_name": "our SHACLEARNER based on Algorithm 1",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-our_shaclearner_based_on_algorithm_1-Mention-1"
        }
      ],
      "relevance": 0.650390625
    },
    "Entity-it_(3)": {
      "node_id": "it_(3)",
      "disambiguation_index": 3,
      "label": "it",
      "aliases": [
        "it"
      ],
      "types": [
        "tree"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A tree shape learned from annotated IOP rules using SHACLEARNER, representing a set of paths or branches that can be used to validate and complete knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "it",
          "local_types": [
            "tree"
          ],
          "iri": "Entity-it_(3)-Mention-1"
        }
      ],
      "relevance": 0.6494140625
    },
    "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq__are_fact_in_the_kg": {
      "node_id": "p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq__are_fact_in_the_kg",
      "disambiguation_index": 0,
      "label": "P1(e, e1), P2(e1, e2), ..., Pt(e( q-1)', eq) are facts in the KG",
      "aliases": [
        "P1(e, e1), P2(e1, e2), ..., Pt(e( q-1)', eq) are facts in the KG"
      ],
      "types": [
        "predicate",
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of predicate logic rules that express specific shape patterns as paths over connected entities present in a knowledge graph, used to validate and learn high-quality shapes from massive KGs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "P1(e, e1), P2(e1, e2), ..., Pt(e( q-1)', eq) are facts in the KG",
          "local_types": [
            "predicate",
            "statement"
          ],
          "iri": "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq__are_fact_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.6484375
    },
    "Entity-sh__property": {
      "node_id": "sh__property",
      "disambiguation_index": 0,
      "label": "sh:property",
      "aliases": [
        "sh:property"
      ],
      "types": [
        "notation",
        "semantic web concept",
        "syntax",
        "ontology term"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A SHACL shape property that represents a set of paths or branches in a knowledge graph, used to validate and document the structure of the graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "sh:property",
          "local_types": [
            "notation",
            "semantic web concept",
            "syntax",
            "ontology term"
          ],
          "iri": "Entity-sh__property-Mention-1"
        }
      ],
      "relevance": 0.6484375
    },
    "Entity-our_work": {
      "node_id": "our_work",
      "disambiguation_index": 0,
      "label": "our work",
      "aliases": [
        "our work"
      ],
      "types": [
        "research",
        "project"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of learning SHACL shapes from knowledge graphs using the KG itself as a source for discovering shapes, without relying on external modeling artifacts.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-3",
          "local_name": "our work",
          "local_types": [
            "research"
          ],
          "iri": "Entity-our_work-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-7-Sentence-2",
          "local_name": "our work",
          "local_types": [
            "research",
            "project"
          ],
          "iri": "Entity-our_work-Mention-2"
        }
      ],
      "relevance": 0.6484375
    },
    "Entity-this_method": {
      "node_id": "this_method",
      "disambiguation_index": 0,
      "label": "this method",
      "aliases": [
        "this method"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A brute-force search approach for learning IOP rules from knowledge graphs, which cannot handle real-world KGs due to its inefficiency and inability to scale.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-5",
          "local_name": "this method",
          "local_types": [
            "method"
          ],
          "iri": "Entity-this_method-Mention-1"
        }
      ],
      "relevance": 0.6484375
    },
    "Entity-kg_documentation_a_readable_pattern": {
      "node_id": "kg_documentation_a_readable_pattern",
      "disambiguation_index": 0,
      "label": "KG documentation as readable patterns",
      "aliases": [
        "KG documentation as readable patterns"
      ],
      "types": [
        "documentation",
        "pattern"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A representation of knowledge graph constraints and relationships in a human-readable format, facilitating understanding and validation of large-scale knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-1",
          "local_name": "KG documentation as readable patterns",
          "local_types": [
            "documentation",
            "pattern"
          ],
          "iri": "Entity-kg_documentation_a_readable_pattern-Mention-1"
        }
      ],
      "relevance": 0.64794921875
    },
    "Entity-shacl_defines_constraint_for_graph_a_shape": {
      "node_id": "shacl_defines_constraint_for_graph_a_shape",
      "disambiguation_index": 0,
      "label": "SHACL defines constraints for graphs as shapes",
      "aliases": [
        "constraints for graphs as shapes",
        "SHACL defines constraints for graphs as shapes"
      ],
      "types": [
        "constraint",
        "constraint definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A constraint definition framework that enables shape-based validation of graph data",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "SHACL defines constraints for graphs as shapes",
          "local_types": [
            "constraint definition"
          ],
          "iri": "Entity-shacl_defines_constraint_for_graph_a_shape-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "constraints for graphs as shapes",
          "local_types": [
            "constraint"
          ],
          "iri": "Entity-shacl_defines_constraint_for_graph_a_shape-Mention-2"
        }
      ],
      "relevance": 0.6474609375
    },
    "Entity-a_cp_rule": {
      "node_id": "a_cp_rule",
      "disambiguation_index": 0,
      "label": "a CP rule",
      "aliases": [
        "a CP rule"
      ],
      "types": [
        "rule",
        "CP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A CP rule is a type of shape constraint in SHACL (Shapes Constraint Language) that expresses simple patterns or loops over connected entities present in a knowledge graph, used for validating and editing the graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-6",
          "local_name": "a CP rule",
          "local_types": [
            "rule",
            "CP rule"
          ],
          "iri": "Entity-a_cp_rule-Mention-1"
        }
      ],
      "relevance": 0.6474609375
    },
    "Entity-the_left-hand_chart": {
      "node_id": "the_left-hand_chart",
      "disambiguation_index": 0,
      "label": "the left-hand chart",
      "aliases": [
        "the left-hand chart"
      ],
      "types": [
        "chart"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A graph showing the distribution of learned SHACL shapes with respect to their Inverse Open Path Standard Confidence (IOPSC) values, demonstrating a consistent decrease in the proportion of quality rules as IOPSC increases.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-2",
          "local_name": "the left-hand chart",
          "local_types": [
            "chart"
          ],
          "iri": "Entity-the_left-hand_chart-Mention-1"
        }
      ],
      "relevance": 0.6474609375
    },
    "Entity-path_of_head_predicate": {
      "node_id": "path_of_head_predicate",
      "disambiguation_index": 0,
      "label": "path of head predicates",
      "aliases": [
        "the path of head predicates",
        "path of head predicates"
      ],
      "types": [
        "data structure",
        "path",
        "computational concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sequence of SHACL shape predicate paths or branches in a tree structure, used to represent and validate knowledge graph data.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "path of head predicates",
          "local_types": [
            "data structure",
            "computational concept"
          ],
          "iri": "Entity-path_of_head_predicate-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "the path of head predicates",
          "local_types": [
            "path"
          ],
          "iri": "Entity-path_of_head_predicate-Mention-2"
        }
      ],
      "relevance": 0.64697265625
    },
    "Entity-shaclearner_with_regard_to_the_quality_and_quantity_of_learnt_rule": {
      "node_id": "shaclearner_with_regard_to_the_quality_and_quantity_of_learnt_rule",
      "disambiguation_index": 0,
      "label": "SHACLEARNER with regard to the quality and quantity of learnt rules",
      "aliases": [
        "SHACLEARNER with regard to the quality and quantity of learnt rules"
      ],
      "types": [
        "system",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A system that learns high-quality shapes from knowledge graphs, adapted from a state-of-the-art embedding-based open path rule learner.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-1-Sentence-2",
          "local_name": "SHACLEARNER with regard to the quality and quantity of learnt rules",
          "local_types": [
            "system",
            "algorithm"
          ],
          "iri": "Entity-shaclearner_with_regard_to_the_quality_and_quantity_of_learnt_rule-Mention-1"
        }
      ],
      "relevance": 0.64697265625
    },
    "Entity-dealing_with_uncertainty_in_the_constraint_and_the_learning_process_add_an_extra_dimension_of_challenge_but_also_add_utility": {
      "node_id": "dealing_with_uncertainty_in_the_constraint_and_the_learning_process_add_an_extra_dimension_of_challenge_but_also_add_utility",
      "disambiguation_index": 0,
      "label": "dealing with uncertainty in the constraints and the learning process adds an extra dimension of challenge but also adds utility",
      "aliases": [
        "dealing with uncertainty in the constraints and the learning process adds an extra dimension of challenge but also adds utility"
      ],
      "types": [
        "challenge"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The problem of designing an efficient learning method for discovering SHACL shapes from knowledge graphs, which involves dealing with uncertainty in both the constraints and the learning process.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-3",
          "local_name": "dealing with uncertainty in the constraints and the learning process adds an extra dimension of challenge but also adds utility",
          "local_types": [
            "challenge"
          ],
          "iri": "Entity-dealing_with_uncertainty_in_the_constraint_and_the_learning_process_add_an_extra_dimension_of_challenge_but_also_add_utility-Mention-1"
        }
      ],
      "relevance": 0.646484375
    },
    "Entity-we_(9)": {
      "node_id": "we_(9)",
      "disambiguation_index": 9,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors, who are introducing Inverse Open Path rules and a novel method for learning high-quality shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-5-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(9)-Mention-1"
        }
      ],
      "relevance": 0.646484375
    },
    "Entity-our_work__we_use_the_kg_itself_to_discover_the_shape__without_relying_on_external_modelling_artefact_.": {
      "node_id": "our_work__we_use_the_kg_itself_to_discover_the_shape__without_relying_on_external_modelling_artefact_.",
      "disambiguation_index": 0,
      "label": "our work, we use the KG itself to discover the shapes, without relying on external modelling artefacts.",
      "aliases": [
        "our work, we use the KG itself to discover the shapes, without relying on external modelling artefacts."
      ],
      "types": [
        "approach",
        "research methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The research methodology used in this paper to learn SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-3",
          "local_name": "our work, we use the KG itself to discover the shapes, without relying on external modelling artefacts.",
          "local_types": [
            "approach",
            "research methodology"
          ],
          "iri": "Entity-our_work__we_use_the_kg_itself_to_discover_the_shape__without_relying_on_external_modelling_artefact_.-Mention-1"
        }
      ],
      "relevance": 0.64599609375
    },
    "Entity-the_original_kg": {
      "node_id": "the_original_kg",
      "disambiguation_index": 0,
      "label": "the original KG",
      "aliases": [
        "the original KG"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The original knowledge graph, which is a large data-first graph database with weak inference rules and weakly-constraining data schemes.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-4",
          "local_name": "the original KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-the_original_kg-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-5",
          "local_name": "the original KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-the_original_kg-Mention-2"
        }
      ],
      "relevance": 0.64599609375
    },
    "Entity-shacl_shape_(2)": {
      "node_id": "shacl_shape_(2)",
      "disambiguation_index": 2,
      "label": "SHACL shapes",
      "aliases": [
        "SHACL shapes"
      ],
      "types": [
        "conceptual framework"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "SHACL shapes that are conceptual representations of paths over connected entities present in a knowledge graph, used to validate and document the graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-2",
          "local_name": "SHACL shapes",
          "local_types": [
            "conceptual framework"
          ],
          "iri": "Entity-shacl_shape_(2)-Mention-1"
        }
      ],
      "relevance": 0.64599609375
    },
    "Entity-three_benchmark": {
      "node_id": "three_benchmark",
      "disambiguation_index": 0,
      "label": "Three benchmarks",
      "aliases": [
        "Three benchmarks"
      ],
      "types": [
        "benchmarks"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Four benchmark knowledge graphs (YAGO2s, Wikidata, DBpedia, and Poker) used to evaluate the effectiveness of SHACLEARNER at capturing shapes with varying confidence, length, and cardinality from massive KGs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-2",
          "local_name": "Three benchmarks",
          "local_types": [
            "benchmarks"
          ],
          "iri": "Entity-three_benchmark-Mention-1"
        }
      ],
      "relevance": 0.64599609375
    },
    "Entity-the_shape_(1)": {
      "node_id": "the_shape_(1)",
      "disambiguation_index": 1,
      "label": "The shapes",
      "aliases": [
        "all these shapes",
        "a set of shapes",
        "The shapes"
      ],
      "types": [
        "shapes",
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "SHACL shapes that serve as constraints on graph data and validate a knowledge graph",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "The shapes",
          "local_types": [
            "shapes"
          ],
          "iri": "Entity-the_shape_(1)-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "all these shapes",
          "local_types": [
            "shapes",
            "entities"
          ],
          "iri": "Entity-the_shape_(1)-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-5",
          "local_name": "a set of shapes",
          "local_types": [
            "shapes"
          ],
          "iri": "Entity-the_shape_(1)-Mention-3"
        }
      ],
      "relevance": 0.6455078125
    },
    "Entity-the_distribution_of_rule_with_respect_to_the_feature__iopsc__iophc__cardinality_and_length": {
      "node_id": "the_distribution_of_rule_with_respect_to_the_feature__iopsc__iophc__cardinality_and_length",
      "disambiguation_index": 0,
      "label": "the distribution of rules with respect to the features, IOPSC, IOPHC, cardinality and length",
      "aliases": [
        "the distribution of rules with respect to the features, IOPSC, IOPHC, cardinality and length"
      ],
      "types": [
        "analysis",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The distribution of quality metrics for learned rules from knowledge graphs, including Inverse Open Path Standard Confidence (IOPSC), Inverse Open Path Head Coverage (IOPHC), cardinality, and length.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-3",
          "local_name": "the distribution of rules with respect to the features, IOPSC, IOPHC, cardinality and length",
          "local_types": [
            "analysis",
            "evaluation"
          ],
          "iri": "Entity-the_distribution_of_rule_with_respect_to_the_feature__iopsc__iophc__cardinality_and_length-Mention-1"
        }
      ],
      "relevance": 0.64501953125
    },
    "Entity-mined_tree": {
      "node_id": "mined_tree",
      "disambiguation_index": 0,
      "label": "mined trees",
      "aliases": [
        "the mined trees",
        "mined trees"
      ],
      "types": [
        "data collection",
        "trees",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A collection of tree-shaped structures learned from Inverse Open Path (IOP) rules in a knowledge graph, representing complex relationships between entities.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "mined trees",
          "local_types": [
            "dataset",
            "data collection"
          ],
          "iri": "Entity-mined_tree-Mention-1"
        },
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "the mined trees",
          "local_types": [
            "dataset",
            "trees"
          ],
          "iri": "Entity-mined_tree-Mention-2"
        }
      ],
      "relevance": 0.64501953125
    },
    "Entity-deriving_shacl_tree": {
      "node_id": "deriving_shacl_tree",
      "disambiguation_index": 0,
      "label": "deriving SHACL trees",
      "aliases": [
        "deriving SHACL trees"
      ],
      "types": [
        "process",
        "SHACL tree generation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of generating SHACL shapes by aggregating Inverse Open Path (IOP) rules into a tree structure.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "deriving SHACL trees",
          "local_types": [
            "process",
            "SHACL tree generation"
          ],
          "iri": "Entity-deriving_shacl_tree-Mention-1"
        }
      ],
      "relevance": 0.64501953125
    },
    "Entity-real-world_kg_such_a_those_we_used_in_the_performance_evaluation": {
      "node_id": "real-world_kg_such_a_those_we_used_in_the_performance_evaluation",
      "disambiguation_index": 0,
      "label": "real-world KG such as those we used in the performance evaluation",
      "aliases": [
        "real-world KG such as those we used in the performance evaluation"
      ],
      "types": [
        "knowledge graph",
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Large-scale knowledge graphs that were used for evaluating the SHACLEARNER algorithm's performance",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-5",
          "local_name": "real-world KG such as those we used in the performance evaluation",
          "local_types": [
            "knowledge graph",
            "evaluation"
          ],
          "iri": "Entity-real-world_kg_such_a_those_we_used_in_the_performance_evaluation-Mention-1"
        }
      ],
      "relevance": 0.64501953125
    },
    "Entity-our_shaclearner": {
      "node_id": "our_shaclearner",
      "disambiguation_index": 0,
      "label": "our SHACLEARNER",
      "aliases": [
        "our SHACLEARNER"
      ],
      "types": [
        "algorithm",
        "model"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A state-of-the-art embedding-based open path rule learner adapted to learn high-quality tree shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "our SHACLEARNER",
          "local_types": [
            "algorithm",
            "model"
          ],
          "iri": "Entity-our_shaclearner-Mention-1"
        }
      ],
      "relevance": 0.64453125
    },
    "Entity-oprl_for_active_knowledge_graph_completion": {
      "node_id": "oprl_for_active_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "OPRL for active knowledge graph completion",
      "aliases": [
        "OPRL for active knowledge graph completion"
      ],
      "types": [
        "research",
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A methodology or research approach that uses Open Path Rules (OPRLs) to actively complete knowledge graphs by learning high-quality shapes and patterns from large datasets.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "OPRL for active knowledge graph completion",
          "local_types": [
            "research",
            "methodology"
          ],
          "iri": "Entity-oprl_for_active_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.64453125
    },
    "Entity-dealing_with_uncertainty_in_the_constraint_and_the_learning_process": {
      "node_id": "dealing_with_uncertainty_in_the_constraint_and_the_learning_process",
      "disambiguation_index": 0,
      "label": "dealing with uncertainty in the constraints and the learning process",
      "aliases": [
        "dealing with uncertainty in the constraints and the learning process"
      ],
      "types": [
        "uncertainty",
        "constraint",
        "process"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The challenge of designing an efficient learning method for discovering SHACL shapes from knowledge graphs, which involves handling uncertainty in both constraint definitions and the learning process.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-3",
          "local_name": "dealing with uncertainty in the constraints and the learning process",
          "local_types": [
            "uncertainty",
            "constraint",
            "process"
          ],
          "iri": "Entity-dealing_with_uncertainty_in_the_constraint_and_the_learning_process-Mention-1"
        }
      ],
      "relevance": 0.64453125
    },
    "Entity-designing_an_efficient_learning_method": {
      "node_id": "designing_an_efficient_learning_method",
      "disambiguation_index": 0,
      "label": "designing an efficient learning method",
      "aliases": [
        "designing an efficient learning method"
      ],
      "types": [
        "method",
        "learning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of developing and implementing a algorithmic approach for effectively discovering SHACL shapes from knowledge graphs, taking into account uncertainty in constraints and the learning process.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-3",
          "local_name": "designing an efficient learning method",
          "local_types": [
            "method",
            "learning"
          ],
          "iri": "Entity-designing_an_efficient_learning_method-Mention-1"
        }
      ],
      "relevance": 0.64404296875
    },
    "Entity-the_practical_meaning_of_the_iopsc_and_iophc_quality": {
      "node_id": "the_practical_meaning_of_the_iopsc_and_iophc_quality",
      "disambiguation_index": 0,
      "label": "the practical meaning of the IOPSC and IOPHC qualities",
      "aliases": [
        "the practical meaning of the IOPSC and IOPHC qualities"
      ],
      "types": [
        "quality",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The practical meaning of the IOPSC and IOPHC qualities, as illustrated through experiments on learning SHACL shapes from knowledge graphs, represents a measure of rule confidence based on target predicate instance proportion (IOPSC) and relevance to the target instances justified by these predicates in the graph data (IOPHC).",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-1",
          "local_name": "the practical meaning of the IOPSC and IOPHC qualities",
          "local_types": [
            "quality",
            "concept"
          ],
          "iri": "Entity-the_practical_meaning_of_the_iopsc_and_iophc_quality-Mention-1"
        }
      ],
      "relevance": 0.6435546875
    },
    "Entity-the_proportion_of_rule_consequent_instance_that_are_justified_by_target_predicate_instance_in_the_kg": {
      "node_id": "the_proportion_of_rule_consequent_instance_that_are_justified_by_target_predicate_instance_in_the_kg",
      "disambiguation_index": 0,
      "label": "the proportion of rule consequent instances that are justified by target predicate instances in the KG",
      "aliases": [
        "the proportion of rule consequent instances that are justified by target predicate instances in the KG"
      ],
      "types": [
        "proportion",
        "rule consequence",
        "predicate instance"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The measure of how well a learned SHACL shape conforms to actual data in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "the proportion of rule consequent instances that are justified by target predicate instances in the KG",
          "local_types": [
            "proportion",
            "rule consequence",
            "predicate instance"
          ],
          "iri": "Entity-the_proportion_of_rule_consequent_instance_that_are_justified_by_target_predicate_instance_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.6435546875
    },
    "Entity-second_argument": {
      "node_id": "second_argument",
      "disambiguation_index": 0,
      "label": "second arguments",
      "aliases": [
        "second arguments"
      ],
      "types": [
        "entities",
        "classes"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The SHACL shapes that serve as constraints on graph data and validate a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-2",
          "local_name": "second arguments",
          "local_types": [
            "entities",
            "classes"
          ],
          "iri": "Entity-second_argument-Mention-1"
        }
      ],
      "relevance": 0.64306640625
    },
    "Entity-kg_automatically_by_predicting_missing_fact": {
      "node_id": "kg_automatically_by_predicting_missing_fact",
      "disambiguation_index": 0,
      "label": "KGs automatically by predicting missing facts",
      "aliases": [
        "KGs automatically by predicting missing facts"
      ],
      "types": [
        "approach",
        "knowledge graph completion"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An approach for completing knowledge graphs (KGs) by predicting missing facts using tree shapes and greedy search.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-3",
          "local_name": "KGs automatically by predicting missing facts",
          "local_types": [
            "approach",
            "knowledge graph completion"
          ],
          "iri": "Entity-kg_automatically_by_predicting_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.64306640625
    },
    "Entity-large_kg_are_typically_populated_by_automatic_and_semi-automatic_method_using_non-structured_source_such_a_wikipedia_that_are_prone_to_error_of_omission_and_commission": {
      "node_id": "large_kg_are_typically_populated_by_automatic_and_semi-automatic_method_using_non-structured_source_such_a_wikipedia_that_are_prone_to_error_of_omission_and_commission",
      "disambiguation_index": 0,
      "label": "Large KGs are typically populated by automatic and semi-automatic methods using non-structured sources such as Wikipedia that are prone to errors of omission and commission",
      "aliases": [
        "Large KGs are typically populated by automatic and semi-automatic methods using non-structured sources such as Wikipedia that are prone to errors of omission and commission"
      ],
      "types": [
        "fact",
        "source"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Methods for populating large knowledge graphs (KGs) using non-structured sources like Wikipedia, which can be error-prone due to omissions or commissions.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "Large KGs are typically populated by automatic and semi-automatic methods using non-structured sources such as Wikipedia that are prone to errors of omission and commission",
          "local_types": [
            "fact",
            "source"
          ],
          "iri": "Entity-large_kg_are_typically_populated_by_automatic_and_semi-automatic_method_using_non-structured_source_such_a_wikipedia_that_are_prone_to_error_of_omission_and_commission-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-yago__wikidata__and_dbpedia": {
      "node_id": "yago__wikidata__and_dbpedia",
      "disambiguation_index": 0,
      "label": "Yago, Wikidata, and DBpedia",
      "aliases": [
        "Yago, Wikidata, and DBpedia"
      ],
      "types": [
        "benchmark KGs"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of large-scale knowledge graphs used as benchmarks for evaluating various natural language processing and artificial intelligence tasks.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "Yago, Wikidata, and DBpedia",
          "local_types": [
            "benchmark KGs"
          ],
          "iri": "Entity-yago__wikidata__and_dbpedia-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-one_work": {
      "node_id": "one_work",
      "disambiguation_index": 0,
      "label": "One work",
      "aliases": [
        "One work"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A proposal that suggests an extended validation framework for the interaction between inference rules and SHACL shapes in Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-2",
          "local_name": "One work",
          "local_types": [
            "research"
          ],
          "iri": "Entity-one_work-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-this_may_be_because_using_the_complete_kg_for_learning_rule_about_all_target_predicate_could_harm_the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner_.": {
      "node_id": "this_may_be_because_using_the_complete_kg_for_learning_rule_about_all_target_predicate_could_harm_the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner_.",
      "disambiguation_index": 0,
      "label": "This may be because using the complete KG for learning rules about all target predicates could harm the quality of the learnt embeddings used in the scoring function of SHACLEARNER.",
      "aliases": [
        "This may be because using the complete KG for learning rules about all target predicates could harm the quality of the learnt embeddings used in the scoring function of SHACLEARNER."
      ],
      "types": [
        "hypothesis",
        "explanation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The hypothesis or explanation that using a full knowledge graph (KG) for learning rules about all target predicates might negatively impact the quality of learned embeddings employed by SHACLEARNER's scoring function.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-2",
          "local_name": "This may be because using the complete KG for learning rules about all target predicates could harm the quality of the learnt embeddings used in the scoring function of SHACLEARNER.",
          "local_types": [
            "hypothesis",
            "explanation"
          ],
          "iri": "Entity-this_may_be_because_using_the_complete_kg_for_learning_rule_about_all_target_predicate_could_harm_the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner_.-Mention-1"
        }
      ],
      "relevance": 0.64208984375
    },
    "Entity-treesupp": {
      "node_id": "treesupp",
      "disambiguation_index": 0,
      "label": "Treesupp",
      "aliases": [
        "Treesupp"
      ],
      "types": [
        "function",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A function that generates tree shapes from annotated IOP rules, used to learn high-quality SHACL trees from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-5",
          "local_name": "Treesupp",
          "local_types": [
            "function",
            "algorithm"
          ],
          "iri": "Entity-treesupp-Mention-1"
        }
      ],
      "relevance": 0.6416015625
    },
    "Entity-they_are_a_more_general_template_for_more_complex_shape_like_closed_rule_or_tree__which_are_also_path__with_further_restriction__.": {
      "node_id": "they_are_a_more_general_template_for_more_complex_shape_like_closed_rule_or_tree__which_are_also_path__with_further_restriction__.",
      "disambiguation_index": 0,
      "label": "they are a more general template for more complex shapes like closed rules or trees, which are also paths (with further restrictions).",
      "aliases": [
        "they are a more general template for more complex shapes like closed rules or trees, which are also paths (with further restrictions)."
      ],
      "types": [
        "explanation",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A path shape in the Shapes Constraint Language (SHACL) that serves as a general template for more complex shapes like closed rules or trees, with further restrictions.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-3",
          "local_name": "they are a more general template for more complex shapes like closed rules or trees, which are also paths (with further restrictions).",
          "local_types": [
            "explanation",
            "concept"
          ],
          "iri": "Entity-they_are_a_more_general_template_for_more_complex_shape_like_closed_rule_or_tree__which_are_also_path__with_further_restriction__.-Mention-1"
        }
      ],
      "relevance": 0.6416015625
    },
    "Entity-our_experiment_are_designed_to_prove_the_effectiveness_of_our_shaclearner_at_capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_": {
      "node_id": "our_experiment_are_designed_to_prove_the_effectiveness_of_our_shaclearner_at_capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_",
      "disambiguation_index": 0,
      "label": "Our experiments are designed to prove the effectiveness of our SHACLEARNER at capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs (KGs)",
      "aliases": [
        "Our experiments are designed to prove the effectiveness of our SHACLEARNER at capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs (KGs)"
      ],
      "types": [
        "research",
        "experiments"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The SHACLEARNER algorithm",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "Our experiments are designed to prove the effectiveness of our SHACLEARNER at capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs (KGs)",
          "local_types": [
            "research",
            "experiments"
          ],
          "iri": "Entity-our_experiment_are_designed_to_prove_the_effectiveness_of_our_shaclearner_at_capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_-Mention-1"
        }
      ],
      "relevance": 0.6416015625
    },
    "Entity-informative_and_intuitive_shape": {
      "node_id": "informative_and_intuitive_shape",
      "disambiguation_index": 0,
      "label": "informative and intuitive shapes",
      "aliases": [
        "informative and intuitive shapes"
      ],
      "types": [
        "shapes"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Informative and intuitive shapes refer to specific patterns or structures learned by the SHACLEARNER method from large knowledge graphs, which are diverse in structural features such as depth and width, and also in quality measures that indicate confidence and generality.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "informative and intuitive shapes",
          "local_types": [
            "shapes"
          ],
          "iri": "Entity-informative_and_intuitive_shape-Mention-1"
        }
      ],
      "relevance": 0.6416015625
    },
    "Entity-146_rule_with_iopsc_in_range_of__0.1__0.3___17_or_10__fewer_rule_than_the_ideal_learner": {
      "node_id": "146_rule_with_iopsc_in_range_of__0.1__0.3___17_or_10__fewer_rule_than_the_ideal_learner",
      "disambiguation_index": 0,
      "label": "146 rules with IOPSC in range of [0.1, 0.3): 17 or 10% fewer rules than the ideal learner",
      "aliases": [
        "146 rules with IOPSC in range of [0.1, 0.3): 17 or 10% fewer rules than the ideal learner"
      ],
      "types": [
        "rules",
        "IOPSC",
        "range"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The number of Inverse Open Path Shape Constraints (IOPSC) in a specific range [0.1, 0.3), learned by SHACLEARNER without sampling but with heuristic pruning.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-4",
          "local_name": "146 rules with IOPSC in range of [0.1, 0.3): 17 or 10% fewer rules than the ideal learner",
          "local_types": [
            "rules",
            "IOPSC",
            "range"
          ],
          "iri": "Entity-146_rule_with_iopsc_in_range_of__0.1__0.3___17_or_10__fewer_rule_than_the_ideal_learner-Mention-1"
        }
      ],
      "relevance": 0.640625
    },
    "Entity-the_aggregation_module": {
      "node_id": "the_aggregation_module",
      "disambiguation_index": 0,
      "label": "The aggregation module",
      "aliases": [
        "The aggregation module"
      ],
      "types": [
        "module"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A component within the SHACLEARNER algorithm responsible for aggregating learned Inverse Open Path (IOP) rules into trees that can be translated to SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "The aggregation module",
          "local_types": [
            "module"
          ],
          "iri": "Entity-the_aggregation_module-Mention-1"
        }
      ],
      "relevance": 0.6396484375
    },
    "Entity-we_(10)": {
      "node_id": "we_(10)",
      "disambiguation_index": 10,
      "label": "We",
      "aliases": [
        "We",
        "we"
      ],
      "types": [
        "researcher",
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of this paper proposing a method to learn SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(10)-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-5-Sentence-1",
          "local_name": "we",
          "local_types": [
            "researcher"
          ],
          "iri": "Entity-we_(10)-Mention-2"
        }
      ],
      "relevance": 0.6396484375
    },
    "Entity-the_representation_formalism_they_use_for_their_output": {
      "node_id": "the_representation_formalism_they_use_for_their_output",
      "disambiguation_index": 0,
      "label": "the representation formalism they use for their output",
      "aliases": [
        "the representation formalism they use for their output"
      ],
      "types": [
        "representation",
        "formalism"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A procedural method used by other approaches to learn SHACL shapes from knowledge graphs, which is difficult to compare with the IOP rules presented in this paper.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "the representation formalism they use for their output",
          "local_types": [
            "representation",
            "formalism"
          ],
          "iri": "Entity-the_representation_formalism_they_use_for_their_output-Mention-1"
        }
      ],
      "relevance": 0.63916015625
    },
    "Entity-and_propose_a_novel_method_to_learn_high-quality_rule_from_kg_.": {
      "node_id": "and_propose_a_novel_method_to_learn_high-quality_rule_from_kg_.",
      "disambiguation_index": 0,
      "label": "and propose a novel method to learn high-quality rules from KGs.",
      "aliases": [
        "and propose a novel method to learn high-quality rules from KGs."
      ],
      "types": [
        "methodology",
        "learning"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A proposed methodology or learning approach that aims to generate high-quality rules from knowledge graphs (KGs).",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "and propose a novel method to learn high-quality rules from KGs.",
          "local_types": [
            "methodology",
            "learning"
          ],
          "iri": "Entity-and_propose_a_novel_method_to_learn_high-quality_rule_from_kg_.-Mention-1"
        }
      ],
      "relevance": 0.638671875
    },
    "Entity-to_demonstrate_the_potential_for_these_kind_of_shape_to_serve_a_building_block_for_more_complex_tree__we_then_propose_a_method_that_build_tree_out_of_mined_rule": {
      "node_id": "to_demonstrate_the_potential_for_these_kind_of_shape_to_serve_a_building_block_for_more_complex_tree__we_then_propose_a_method_that_build_tree_out_of_mined_rule",
      "disambiguation_index": 0,
      "label": "To demonstrate the potential for these kinds of shapes to serve as building blocks for more complex trees, we then propose a method that builds trees out of mined rules",
      "aliases": [
        "To demonstrate the potential for these kinds of shapes to serve as building blocks for more complex trees, we then propose a method that builds trees out of mined rules"
      ],
      "types": [
        "methodology",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A methodology or algorithm proposed by the authors for building complex tree shapes from mined Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "To demonstrate the potential for these kinds of shapes to serve as building blocks for more complex trees, we then propose a method that builds trees out of mined rules",
          "local_types": [
            "methodology",
            "algorithm"
          ],
          "iri": "Entity-to_demonstrate_the_potential_for_these_kind_of_shape_to_serve_a_building_block_for_more_complex_tree__we_then_propose_a_method_that_build_tree_out_of_mined_rule-Mention-1"
        }
      ],
      "relevance": 0.638671875
    },
    "Entity-_s-h_": {
      "node_id": "_s-h_",
      "disambiguation_index": 0,
      "label": "(+S-H)",
      "aliases": [
        "(+S-H)"
      ],
      "types": [
        "SHACLEARNER",
        "rule learner"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACLEARNER, a system that samples from the input knowledge graph but does not use heuristic pruning to generate IOP rules based on the sampled graph and evaluates them on the complete graph.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-2",
          "local_name": "(+S-H)",
          "local_types": [
            "SHACLEARNER",
            "rule learner"
          ],
          "iri": "Entity-_s-h_-Mention-1"
        }
      ],
      "relevance": 0.638671875
    },
    "Entity-to_aggregate_learnt_iop_rule": {
      "node_id": "to_aggregate_learnt_iop_rule",
      "disambiguation_index": 0,
      "label": "to aggregate learnt IOP rules",
      "aliases": [
        "to aggregate learnt IOP rules"
      ],
      "types": [
        "process",
        "aggregation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A process of combining learned Inverse Open Path (IOP) rules to discover more complex shapes, specifically trees.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-2",
          "local_name": "to aggregate learnt IOP rules",
          "local_types": [
            "process",
            "aggregation"
          ],
          "iri": "Entity-to_aggregate_learnt_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.638671875
    },
    "Entity-the_scope_of_knowledge_that_can_be_acquired": {
      "node_id": "the_scope_of_knowledge_that_can_be_acquired",
      "disambiguation_index": 0,
      "label": "the scope of knowledge that can be acquired",
      "aliases": [
        "the scope of knowledge that can be acquired"
      ],
      "types": [
        "knowledge",
        "scope",
        "knowledge scope"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The extent to which SHACL shapes can capture and describe patterns in schema-free knowledge bases, such as most modern KGs.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-2",
          "local_name": "the scope of knowledge that can be acquired",
          "local_types": [
            "knowledge",
            "scope",
            "knowledge scope"
          ],
          "iri": "Entity-the_scope_of_knowledge_that_can_be_acquired-Mention-1"
        }
      ],
      "relevance": 0.638671875
    },
    "Entity-the_body_of_the_rule_is_pt__and_it_head_is_the_sequence_of_predicate_p1__p2__...__pn": {
      "node_id": "the_body_of_the_rule_is_pt__and_it_head_is_the_sequence_of_predicate_p1__p2__...__pn",
      "disambiguation_index": 0,
      "label": "the body of the rule is Pt, and its head is the sequence of predicates P1 ^ P2 ^ ... ^ Pn",
      "aliases": [
        "the body of the rule is Pt, and its head is the sequence of predicates P1 ^ P2 ^ ... ^ Pn"
      ],
      "types": [
        "body",
        "head",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An Inverse Open Path (IOP) rule in SHACL shape learning, which consists of a predicate Pt as its body and a sequence of predicates P1 ^ P2 ^ ... ^ Pn as its head.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "the body of the rule is Pt, and its head is the sequence of predicates P1 ^ P2 ^ ... ^ Pn",
          "local_types": [
            "body",
            "head",
            "predicate"
          ],
          "iri": "Entity-the_body_of_the_rule_is_pt__and_it_head_is_the_sequence_of_predicate_p1__p2__...__pn-Mention-1"
        }
      ],
      "relevance": 0.63818359375
    },
    "Entity-iop_rule_learner": {
      "node_id": "iop_rule_learner",
      "disambiguation_index": 0,
      "label": "IOP rule learner",
      "aliases": [
        "IOP rule learner"
      ],
      "types": [
        "machine learning model",
        "rule-based system"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An ideal machine learning model that learns high-quality Inverse Open Path (IOP) rules from knowledge graphs by generating and evaluating all possible IOP rule combinations up to a maximum length parameter.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-4",
          "local_name": "IOP rule learner",
          "local_types": [
            "machine learning model",
            "rule-based system"
          ],
          "iri": "Entity-iop_rule_learner-Mention-1"
        }
      ],
      "relevance": 0.63818359375
    },
    "Entity-scalable_to_handle_real-world_kg": {
      "node_id": "scalable_to_handle_real-world_kg",
      "disambiguation_index": 0,
      "label": "scalable to handle real-world KGs",
      "aliases": [
        "scalable to handle real-world KGs"
      ],
      "types": [
        "evaluation criterion",
        "challenge"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or approach that can efficiently process large-scale knowledge graphs, accommodating their complexity and size.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "scalable to handle real-world KGs",
          "local_types": [
            "evaluation criterion",
            "challenge"
          ],
          "iri": "Entity-scalable_to_handle_real-world_kg-Mention-1"
        }
      ],
      "relevance": 0.6376953125
    },
    "Entity-the_number_of_rule__the_average_number_of_quality_iop_rule_found__the_proportion_of_target_predicate_for_which_at_least_one_iop_rule_wa_found__and_the_running_time_in_hour": {
      "node_id": "the_number_of_rule__the_average_number_of_quality_iop_rule_found__the_proportion_of_target_predicate_for_which_at_least_one_iop_rule_wa_found__and_the_running_time_in_hour",
      "disambiguation_index": 0,
      "label": "the number of rules, the average numbers of quality IOP rules found, the proportion of target predicates for which at least one IOP rule was found, and the running times in hours",
      "aliases": [
        "the number of rules, the average numbers of quality IOP rules found, the proportion of target predicates for which at least one IOP rule was found, and the running times in hours"
      ],
      "types": [
        "metrics",
        "statistics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Metrics summarizing the performance of SHACLEARNER on learning high-quality rules from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-1",
          "local_name": "the number of rules, the average numbers of quality IOP rules found, the proportion of target predicates for which at least one IOP rule was found, and the running times in hours",
          "local_types": [
            "metrics",
            "statistics"
          ],
          "iri": "Entity-the_number_of_rule__the_average_number_of_quality_iop_rule_found__the_proportion_of_target_predicate_for_which_at_least_one_iop_rule_wa_found__and_the_running_time_in_hour-Mention-1"
        }
      ],
      "relevance": 0.6376953125
    },
    "Entity-pt_(1)": {
      "node_id": "pt_(1)",
      "disambiguation_index": 1,
      "label": "P't",
      "aliases": [
        "P't"
      ],
      "types": [
        "tree",
        "form",
        "predicate",
        "tree structure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A tree structure representing a shape constraint in SHACL (Shapes Constraint Language) for validating and querying knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "P't",
          "local_types": [
            "tree",
            "form",
            "predicate",
            "tree structure"
          ],
          "iri": "Entity-pt_(1)-Mention-1"
        }
      ],
      "relevance": 0.63720703125
    },
    "Entity-an_annotated_iop_rule_of_the_form__4_": {
      "node_id": "an_annotated_iop_rule_of_the_form__4_",
      "disambiguation_index": 0,
      "label": "an annotated IOP rule of the form (4)",
      "aliases": [
        "an annotated IOP rule of the form (4)"
      ],
      "types": [
        "rule",
        "IOP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific instance of a SHACL shape constraint, defined as an inverse open path rule with a specified cardinality requirement.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-2",
          "local_name": "an annotated IOP rule of the form (4)",
          "local_types": [
            "rule",
            "IOP rule"
          ],
          "iri": "Entity-an_annotated_iop_rule_of_the_form__4_-Mention-1"
        }
      ],
      "relevance": 0.63720703125
    },
    "Entity-op_rule_(1)": {
      "node_id": "op_rule_(1)",
      "disambiguation_index": 1,
      "label": "OP rules",
      "aliases": [
        "OP rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Rules that define paths over connected entities present in a Knowledge Graph, used to express simple shape patterns that can be augmented with minimum cardinality constraints and serve as building blocks for more complex shapes.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "OP rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-op_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.63720703125
    },
    "Entity-kg_rule-learning_method": {
      "node_id": "kg_rule-learning_method",
      "disambiguation_index": 0,
      "label": "KG rule-learning methods",
      "aliases": [
        "KG rule-learning methods"
      ],
      "types": [
        "research area",
        "method",
        "technique",
        "field of study"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of techniques or approaches used to learn rules from knowledge graphs (KGs), which involve discovering patterns or relationships within KGs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-1",
          "local_name": "KG rule-learning methods",
          "local_types": [
            "research area",
            "method",
            "technique",
            "field of study"
          ],
          "iri": "Entity-kg_rule-learning_method-Mention-1"
        }
      ],
      "relevance": 0.63671875
    },
    "Entity-shacl-sparql": {
      "node_id": "shacl-sparql",
      "disambiguation_index": 0,
      "label": "SHACL-SPARQL",
      "aliases": [
        "SHACL-SPARQL"
      ],
      "types": [
        "standard"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A formalism that presents specific shapes in the form of paths over connected entities that are present in a Knowledge Graph, and can be used as a building block for more complex shapes such as trees.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-3",
          "local_name": "SHACL-SPARQL",
          "local_types": [
            "standard"
          ],
          "iri": "Entity-shacl-sparql-Mention-1"
        }
      ],
      "relevance": 0.63671875
    },
    "Entity-which_shape_could_be_violated_by_applying_a_rule": {
      "node_id": "which_shape_could_be_violated_by_applying_a_rule",
      "disambiguation_index": 0,
      "label": "which shapes could be violated by applying a rule",
      "aliases": [
        "which shapes could be violated by applying a rule"
      ],
      "types": [
        "violation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method for detecting potential violations of SHACL shapes when applying inference rules in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-2",
          "local_name": "which shapes could be violated by applying a rule",
          "local_types": [
            "violation"
          ],
          "iri": "Entity-which_shape_could_be_violated_by_applying_a_rule-Mention-1"
        }
      ],
      "relevance": 0.63671875
    },
    "Entity-embedding_learner": {
      "node_id": "embedding_learner",
      "disambiguation_index": 0,
      "label": "embedding learners",
      "aliases": [
        "embedding learners"
      ],
      "types": [
        "algorithm",
        "machine learning algorithm",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Machine learning algorithms that learn high-quality SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "embedding learners",
          "local_types": [
            "algorithm",
            "machine learning algorithm",
            "technique"
          ],
          "iri": "Entity-embedding_learner-Mention-1"
        }
      ],
      "relevance": 0.6357421875
    },
    "Entity-path1": {
      "node_id": "path1",
      "disambiguation_index": 0,
      "label": "Path1",
      "aliases": [
        "Path1"
      ],
      "types": [
        "path",
        "branch"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sequence of paths or branches in a tree shape, representing a set of SHACL shapes that can be used for validating and documenting a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "Path1",
          "local_types": [
            "path",
            "branch"
          ],
          "iri": "Entity-path1-Mention-1"
        }
      ],
      "relevance": 0.6357421875
    },
    "Entity-rule_of_the_highest_quality": {
      "node_id": "rule_of_the_highest_quality",
      "disambiguation_index": 0,
      "label": "rules of the highest quality",
      "aliases": [
        "rules of the highest quality"
      ],
      "types": [
        "expert system",
        "knowledge base",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "High-quality SHACL shapes learned by SHACLEARNER from knowledge graphs",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-1",
          "local_name": "rules of the highest quality",
          "local_types": [
            "expert system",
            "knowledge base",
            "concept"
          ],
          "iri": "Entity-rule_of_the_highest_quality-Mention-1"
        }
      ],
      "relevance": 0.6357421875
    },
    "Entity-a_greedy_search": {
      "node_id": "a_greedy_search",
      "disambiguation_index": 0,
      "label": "a greedy search",
      "aliases": [
        "a greedy search"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method used in SHACLEARNER to iteratively add IOP rules to a tree, prioritizing those with higher quality measures (IOPSC), until the TreeSC drops below a defined threshold or all possible rules are exhausted.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "a greedy search",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-a_greedy_search-Mention-1"
        }
      ],
      "relevance": 0.6357421875
    },
    "Entity-inverse_open_path": {
      "node_id": "inverse_open_path",
      "disambiguation_index": 0,
      "label": "Inverse Open Path",
      "aliases": [
        "Inverse Open Path"
      ],
      "types": [
        "method",
        "concept",
        "formalism",
        "logic formalism",
        "predicate logic formalism",
        "predicate"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism presenting specific shapes as paths over connected entities within a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "Inverse Open Path",
          "local_types": [
            "logic formalism",
            "concept",
            "predicate",
            "predicate logic formalism"
          ],
          "iri": "Entity-inverse_open_path-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "Inverse Open Path",
          "local_types": [
            "formalism",
            "concept"
          ],
          "iri": "Entity-inverse_open_path-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-4",
          "local_name": "Inverse Open Path",
          "local_types": [
            "method",
            "concept"
          ],
          "iri": "Entity-inverse_open_path-Mention-3"
        }
      ],
      "relevance": 0.63525390625
    },
    "Entity-large_kg": {
      "node_id": "large_kg",
      "disambiguation_index": 0,
      "label": "large KGs",
      "aliases": [
        "Large KGs",
        "large KGs"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Large collections of interconnected data entities that represent knowledge",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "large KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-large_kg-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "Large KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-large_kg-Mention-2"
        }
      ],
      "relevance": 0.63525390625
    },
    "Entity-open_path_rule": {
      "node_id": "open_path_rule",
      "disambiguation_index": 0,
      "label": "open path rules",
      "aliases": [
        "open path rules"
      ],
      "types": [
        "concept",
        "path rule",
        "algorithmic rule",
        "rule language",
        "knowledge representation",
        "rule",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of formalisms that present specific shapes in the form of paths over connected entities that are present in a Knowledge Graph, used to express simple shape patterns that can be augmented with minimum cardinality constraints and also used as a building block for more complex shapes.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "open path rules",
          "local_types": [
            "concept",
            "path rule",
            "algorithmic rule",
            "rule language",
            "knowledge representation",
            "rule",
            "rule set"
          ],
          "iri": "Entity-open_path_rule-Mention-1"
        }
      ],
      "relevance": 0.63525390625
    },
    "Entity-more_complex_shape__tree_": {
      "node_id": "more_complex_shape__tree_",
      "disambiguation_index": 0,
      "label": "more complex shapes (trees)",
      "aliases": [
        "more complex shapes (trees)"
      ],
      "types": [
        "shapes",
        "tree"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Complex tree-shaped patterns that can be formed by combining and aggregating simple shape patterns (IOP rules) from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-6",
          "local_name": "more complex shapes (trees)",
          "local_types": [
            "shapes",
            "tree"
          ],
          "iri": "Entity-more_complex_shape__tree_-Mention-1"
        }
      ],
      "relevance": 0.63525390625
    },
    "Entity-transforming_kg": {
      "node_id": "transforming_kg",
      "disambiguation_index": 0,
      "label": "Transforming KGs",
      "aliases": [
        "Transforming KGs"
      ],
      "types": [
        "process",
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of converting knowledge graphs (KGs) into a common representation using type predicates for experimentation, allowing for learning fully abstracted shapes and handling real-world KG models' diverse treatment of predicates and entities.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-1",
          "local_name": "Transforming KGs",
          "local_types": [
            "process",
            "method"
          ],
          "iri": "Entity-transforming_kg-Mention-1"
        }
      ],
      "relevance": 0.63525390625
    },
    "Entity-the_shape_are_used_to_guide_the_population_of_a_kg": {
      "node_id": "the_shape_are_used_to_guide_the_population_of_a_kg",
      "disambiguation_index": 0,
      "label": "the shapes are used to guide the population of a KG",
      "aliases": [
        "the shapes are used to guide the population of a KG"
      ],
      "types": [
        "guideline",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or rules for populating and organizing knowledge in a Knowledge Graph (KG)",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "the shapes are used to guide the population of a KG",
          "local_types": [
            "guideline",
            "knowledge representation"
          ],
          "iri": "Entity-the_shape_are_used_to_guide_the_population_of_a_kg-Mention-1"
        }
      ],
      "relevance": 0.634765625
    },
    "Entity-our_proposed_tree_shape_instead_provide_an_opportunity_to_work_sequentially_along_a_path_of_dependent_question_such_a_birthplace__trump____followed_by_capitalof______.": {
      "node_id": "our_proposed_tree_shape_instead_provide_an_opportunity_to_work_sequentially_along_a_path_of_dependent_question_such_a_birthplace__trump____followed_by_capitalof______.",
      "disambiguation_index": 0,
      "label": "Our proposed tree shapes instead provide an opportunity to work sequentially along a path of dependent questions such as birthPlace(Trump, ?) followed by capitalOf(? ,?).",
      "aliases": [
        "Our proposed tree shapes instead provide an opportunity to work sequentially along a path of dependent questions such as birthPlace(Trump, ?) followed by capitalOf(? ,?)."
      ],
      "types": [
        "research approach",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel methodology for generating SHACL trees from annotated IOP rules",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-4",
          "local_name": "Our proposed tree shapes instead provide an opportunity to work sequentially along a path of dependent questions such as birthPlace(Trump, ?) followed by capitalOf(? ,?).",
          "local_types": [
            "research approach",
            "methodology"
          ],
          "iri": "Entity-our_proposed_tree_shape_instead_provide_an_opportunity_to_work_sequentially_along_a_path_of_dependent_question_such_a_birthplace__trump____followed_by_capitalof______.-Mention-1"
        }
      ],
      "relevance": 0.634765625
    },
    "Entity-ontology_constraint_pattern": {
      "node_id": "ontology_constraint_pattern",
      "disambiguation_index": 0,
      "label": "ontology constraint patterns",
      "aliases": [
        "ontology constraint patterns",
        "ontology constraint patterns as well as input ontologies"
      ],
      "types": [
        "data pattern",
        "input ontology",
        "approach",
        "ontology",
        "machine learning",
        "pattern recognition",
        "pattern",
        "knowledge representation",
        "semantic web concept",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Ontology-based constraints used for generating SHACL shapes",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-2",
          "local_name": "ontology constraint patterns",
          "local_types": [
            "data pattern",
            "approach",
            "machine learning",
            "ontology",
            "pattern",
            "methodology",
            "knowledge representation",
            "semantic web concept",
            "pattern recognition"
          ],
          "iri": "Entity-ontology_constraint_pattern-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-2",
          "local_name": "ontology constraint patterns as well as input ontologies",
          "local_types": [
            "ontology",
            "input ontology"
          ],
          "iri": "Entity-ontology_constraint_pattern-Mention-2"
        }
      ],
      "relevance": 0.634765625
    },
    "Entity-tree_shape_for_simplicity_and_easier_interpretation": {
      "node_id": "tree_shape_for_simplicity_and_easier_interpretation",
      "disambiguation_index": 0,
      "label": "tree shapes for simplicity and easier interpretation",
      "aliases": [
        "tree shapes for simplicity and easier interpretation"
      ],
      "types": [
        "interpretation",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of SHACL shape pattern used to represent complex relationships between entities in a knowledge graph, requiring simplification for better understanding and interpretation.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-5-Sentence-1",
          "local_name": "tree shapes for simplicity and easier interpretation",
          "local_types": [
            "interpretation",
            "concept"
          ],
          "iri": "Entity-tree_shape_for_simplicity_and_easier_interpretation-Mention-1"
        }
      ],
      "relevance": 0.634765625
    },
    "Entity-our_pruning_technique": {
      "node_id": "our_pruning_technique",
      "disambiguation_index": 0,
      "label": "our pruning techniques",
      "aliases": [
        "our pruning techniques"
      ],
      "types": [
        "algorithm",
        "technique"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of algorithms and methods used to filter out low-quality SHACL shapes learned from knowledge graphs, ensuring scalability while maintaining high-quality rule discovery.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-6",
          "local_name": "our pruning techniques",
          "local_types": [
            "algorithm",
            "technique"
          ],
          "iri": "Entity-our_pruning_technique-Mention-1"
        }
      ],
      "relevance": 0.63427734375
    },
    "Entity-large_scale_shape_mining": {
      "node_id": "large_scale_shape_mining",
      "disambiguation_index": 0,
      "label": "large scale shape mining",
      "aliases": [
        "large scale shape mining"
      ],
      "types": [
        "research area",
        "information retrieval process",
        "mining",
        "data analysis task",
        "field",
        "field of study",
        "domain"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of discovering and learning SHACL shapes from massive knowledge graphs, which involves developing methods for extracting informative and intuitive patterns from large datasets.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "large scale shape mining",
          "local_types": [
            "research area",
            "information retrieval process",
            "mining",
            "data analysis task",
            "field",
            "field of study",
            "domain"
          ],
          "iri": "Entity-large_scale_shape_mining-Mention-1"
        }
      ],
      "relevance": 0.6337890625
    },
    "Entity-the_tree_that_are_built_based_on_the_iop_rule_discovered_in_the_experiment": {
      "node_id": "the_tree_that_are_built_based_on_the_iop_rule_discovered_in_the_experiment",
      "disambiguation_index": 0,
      "label": "the trees that are built based on the IOP rules discovered in the experiments",
      "aliases": [
        "the trees",
        "the trees that are built based on the IOP rules discovered in the experiments"
      ],
      "types": [
        "trees"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The tree shapes learned from Inverse Open Path (IOP) rules, which represent complex patterns of connected entities present in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-1",
          "local_name": "the trees that are built based on the IOP rules discovered in the experiments",
          "local_types": [
            "trees"
          ],
          "iri": "Entity-the_tree_that_are_built_based_on_the_iop_rule_discovered_in_the_experiment-Mention-1"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-1",
          "local_name": "the trees",
          "local_types": [
            "trees"
          ],
          "iri": "Entity-the_tree_that_are_built_based_on_the_iop_rule_discovered_in_the_experiment-Mention-2"
        }
      ],
      "relevance": 0.6337890625
    },
    "Entity-the_path": {
      "node_id": "the_path",
      "disambiguation_index": 0,
      "label": "the path",
      "aliases": [
        "the path"
      ],
      "types": [
        "structure",
        "data model",
        "concept",
        "path"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A fundamental concept in SHACL shape learning that represents simple patterns or structures within a knowledge graph, serving as a building block for more complex shapes such as trees.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "the path",
          "local_types": [
            "structure",
            "data model",
            "concept",
            "path"
          ],
          "iri": "Entity-the_path-Mention-1"
        }
      ],
      "relevance": 0.6337890625
    },
    "Entity-let_r_(1)": {
      "node_id": "let_r_(1)",
      "disambiguation_index": 1,
      "label": "Let r",
      "aliases": [
        "Let r"
      ],
      "types": [
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Annotated Inverse Open Path (IOP) rule with a specified cardinality, used to express constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-2",
          "local_name": "Let r",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-let_r_(1)-Mention-1"
        }
      ],
      "relevance": 0.6337890625
    },
    "Entity-to_learn_(1)": {
      "node_id": "to_learn_(1)",
      "disambiguation_index": 1,
      "label": "To learn",
      "aliases": [
        "To learn"
      ],
      "types": [
        "learning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of deriving SHACL trees from annotated IOP rules using a greedy search algorithm in Algorithm 1.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-1",
          "local_name": "To learn",
          "local_types": [
            "learning"
          ],
          "iri": "Entity-to_learn_(1)-Mention-1"
        }
      ],
      "relevance": 0.6337890625
    },
    "Entity-the_shape_(3)": {
      "node_id": "the_shape_(3)",
      "disambiguation_index": 3,
      "label": "The shapes",
      "aliases": [
        "The shapes"
      ],
      "types": [
        "shapes"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "SHACL (Shapes Constraint Language) shapes that describe conjunctive paths of constraints over properties, enhanced with minimum cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-3",
          "local_name": "The shapes",
          "local_types": [
            "shapes"
          ],
          "iri": "Entity-the_shape_(3)-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-4",
          "local_name": "The shapes",
          "local_types": [
            "shapes"
          ],
          "iri": "Entity-the_shape_(3)-Mention-2"
        }
      ],
      "relevance": 0.6337890625
    },
    "Entity-these_constraint_are_deployed_to_make_the_kg_consistent_.": {
      "node_id": "these_constraint_are_deployed_to_make_the_kg_consistent_.",
      "disambiguation_index": 0,
      "label": "These constraints are deployed to make the KG consistent.",
      "aliases": [
        "These constraints are deployed to make the KG consistent."
      ],
      "types": [
        "usage",
        "application"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of rules or limitations used to ensure consistency in a knowledge graph (KG).",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-4",
          "local_name": "These constraints are deployed to make the KG consistent.",
          "local_types": [
            "usage",
            "application"
          ],
          "iri": "Entity-these_constraint_are_deployed_to_make_the_kg_consistent_.-Mention-1"
        }
      ],
      "relevance": 0.63330078125
    },
    "Entity-the_power_of_kg": {
      "node_id": "the_power_of_kg",
      "disambiguation_index": 0,
      "label": "the power of KGs",
      "aliases": [
        "the power of KGs"
      ],
      "types": [
        "KG",
        "concept",
        "power"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The ability or potential that knowledge graphs (KGs) possess due to their data-first approach, allowing users to extend and modify them freely.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "the power of KGs",
          "local_types": [
            "KG",
            "concept",
            "power"
          ],
          "iri": "Entity-the_power_of_kg-Mention-1"
        }
      ],
      "relevance": 0.63330078125
    },
    "Entity-in_a_kg_context": {
      "node_id": "in_a_kg_context",
      "disambiguation_index": 0,
      "label": "In a KG context",
      "aliases": [
        "In a KG context"
      ],
      "types": [
        "context"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A formalism for expressing specific shapes as paths over connected entities present in a Knowledge Graph (KG), used as building blocks for more complex shapes such as trees and rule patterns.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "In a KG context",
          "local_types": [
            "context"
          ],
          "iri": "Entity-in_a_kg_context-Mention-1"
        }
      ],
      "relevance": 0.63330078125
    },
    "Entity-corresponding_fact_set_k_": {
      "node_id": "corresponding_fact_set_k_",
      "disambiguation_index": 0,
      "label": "corresponding fact set K'",
      "aliases": [
        "corresponding fact set K'"
      ],
      "types": [
        "fact_set"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A subset of a knowledge graph (KG) containing entities related to a target predicate, used as input for learning inverse open path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "corresponding fact set K'",
          "local_types": [
            "fact_set"
          ],
          "iri": "Entity-corresponding_fact_set_k_-Mention-1"
        }
      ],
      "relevance": 0.63330078125
    },
    "Entity-they_(3)": {
      "node_id": "they_(3)",
      "disambiguation_index": 3,
      "label": "They",
      "aliases": [
        "They"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Procedural methods for learning SHACL shapes from knowledge graphs that lack logical foundations and have limited scalability.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "They",
          "local_types": [
            "method"
          ],
          "iri": "Entity-they_(3)-Mention-1"
        }
      ],
      "relevance": 0.63330078125
    },
    "Entity-cardinality_constraint_and_tree_shape": {
      "node_id": "cardinality_constraint_and_tree_shape",
      "disambiguation_index": 0,
      "label": "cardinality constraints and tree shapes",
      "aliases": [
        "cardinality constraints and tree shapes"
      ],
      "types": [
        "constraint",
        "pattern"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Cardinality constraints and tree shapes refer to novel components introduced in SHACLearner, an embedding-based Open Path Rule Learner that allows for more expressive patterns by incorporating minimum cardinality constraints and complex shape representations as trees.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "cardinality constraints and tree shapes",
          "local_types": [
            "constraint",
            "pattern"
          ],
          "iri": "Entity-cardinality_constraint_and_tree_shape-Mention-1"
        }
      ],
      "relevance": 0.63330078125
    },
    "Entity-a_common_representation_for_this_work": {
      "node_id": "a_common_representation_for_this_work",
      "disambiguation_index": 0,
      "label": "a common representation for this work",
      "aliases": [
        "a common representation for this work"
      ],
      "types": [
        "representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A formalism, specifically Inverse Open Path (IOP) rules, which presents shapes as paths over connected entities present in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-2",
          "local_name": "a common representation for this work",
          "local_types": [
            "representation"
          ],
          "iri": "Entity-a_common_representation_for_this_work-Mention-1"
        }
      ],
      "relevance": 0.6328125
    },
    "Entity-treesc": {
      "node_id": "treesc",
      "disambiguation_index": 0,
      "label": "TreeSC",
      "aliases": [
        "TreeSC"
      ],
      "types": [
        "algorithm",
        "metric",
        "software",
        "system",
        "data structure",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A novel method to learn high-quality tree shapes from knowledge graphs, used for validating and completing massive KGs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-5",
          "local_name": "TreeSC",
          "local_types": [
            "function",
            "metric"
          ],
          "iri": "Entity-treesc-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-4",
          "local_name": "TreeSC",
          "local_types": [
            "algorithm",
            "data structure"
          ],
          "iri": "Entity-treesc-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-6",
          "local_name": "TreeSC",
          "local_types": [
            "algorithm",
            "software",
            "system"
          ],
          "iri": "Entity-treesc-Mention-3"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "TreeSC",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-treesc-Mention-4"
        }
      ],
      "relevance": 0.63232421875
    },
    "Entity-large_kg_have_no_available_shape_constraint": {
      "node_id": "large_kg_have_no_available_shape_constraint",
      "disambiguation_index": 0,
      "label": "large KGs have no available shape constraints",
      "aliases": [
        "large KGs have no available shape constraints"
      ],
      "types": [
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Large knowledge graphs that lack available shape constraints.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "large KGs have no available shape constraints",
          "local_types": [
            "fact"
          ],
          "iri": "Entity-large_kg_have_no_available_shape_constraint-Mention-1"
        }
      ],
      "relevance": 0.63232421875
    },
    "Entity-we_evaluate_shaclearner": {
      "node_id": "we_evaluate_shaclearner",
      "disambiguation_index": 0,
      "label": "We evaluate SHACLEARNER",
      "aliases": [
        "We evaluate SHACLEARNER"
      ],
      "types": [
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A learning method adapted from a state-of-the-art embedding-based open path rule learner that learns high-quality shapes from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "We evaluate SHACLEARNER",
          "local_types": [
            "evaluation"
          ],
          "iri": "Entity-we_evaluate_shaclearner-Mention-1"
        }
      ],
      "relevance": 0.63232421875
    },
    "Entity-that_build_tree_out_of_mined_rule": {
      "node_id": "that_build_tree_out_of_mined_rule",
      "disambiguation_index": 0,
      "label": "that builds trees out of mined rules",
      "aliases": [
        "that builds trees out of mined rules"
      ],
      "types": [
        "algorithm",
        "rule-based approach"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method that constructs tree shapes from Inverse Open Path (IOP) rules mined from a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "that builds trees out of mined rules",
          "local_types": [
            "algorithm",
            "rule-based approach"
          ],
          "iri": "Entity-that_build_tree_out_of_mined_rule-Mention-1"
        }
      ],
      "relevance": 0.63232421875
    },
    "Entity-a_frequent_pattern__the_shape_characterize_a_kg_and_can_be_used_for_subsequent_data_cleaning_or_ongoing_data_entry": {
      "node_id": "a_frequent_pattern__the_shape_characterize_a_kg_and_can_be_used_for_subsequent_data_cleaning_or_ongoing_data_entry",
      "disambiguation_index": 0,
      "label": "As frequent patterns, the shapes characterize a KG and can be used for subsequent data cleaning or ongoing data entry",
      "aliases": [
        "As frequent patterns, the shapes characterize a KG and can be used for subsequent data cleaning or ongoing data entry"
      ],
      "types": [
        "characterization",
        "data processing"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACL shape",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-6",
          "local_name": "As frequent patterns, the shapes characterize a KG and can be used for subsequent data cleaning or ongoing data entry",
          "local_types": [
            "characterization",
            "data processing"
          ],
          "iri": "Entity-a_frequent_pattern__the_shape_characterize_a_kg_and_can_be_used_for_subsequent_data_cleaning_or_ongoing_data_entry-Mention-1"
        }
      ],
      "relevance": 0.6318359375
    },
    "Entity-massive_kg": {
      "node_id": "massive_kg",
      "disambiguation_index": 0,
      "label": "massive KGs",
      "aliases": [
        "massive KGs",
        "massive knowledge graphs (KGs)"
      ],
      "types": [
        "data repository",
        "information system",
        "large dataset",
        "dataset",
        "knowledge graph",
        "information repository",
        "data set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A large-scale knowledge graph containing numerous entities and relationships.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "massive KGs",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-massive_kg-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-3",
          "local_name": "massive KGs",
          "local_types": [
            "knowledge graph",
            "large dataset"
          ],
          "iri": "Entity-massive_kg-Mention-2"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "massive knowledge graphs (KGs)",
          "local_types": [
            "data repository",
            "information system",
            "dataset",
            "information repository",
            "data set"
          ],
          "iri": "Entity-massive_kg-Mention-3"
        }
      ],
      "relevance": 0.6318359375
    },
    "Entity-manual_knowledge_graph_completion": {
      "node_id": "manual_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "manual knowledge graph completion",
      "aliases": [
        "manual knowledge graph completion"
      ],
      "types": [
        "process",
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A process or task of manually completing information gaps in a knowledge graph using learned SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-3",
          "local_name": "manual knowledge graph completion",
          "local_types": [
            "process",
            "task"
          ],
          "iri": "Entity-manual_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.6318359375
    },
    "Entity-the_majority_of_learned_rule": {
      "node_id": "the_majority_of_learned_rule",
      "disambiguation_index": 0,
      "label": "the majority of learned rules",
      "aliases": [
        "the majority of learned rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of rules that were generated by SHACLEARNER from knowledge graphs during the experiments, which are characterized by having low quality measures (IOPSC and IOPHC) indicating their confidence and relevance.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-4",
          "local_name": "the majority of learned rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-the_majority_of_learned_rule-Mention-1"
        }
      ],
      "relevance": 0.6318359375
    },
    "Entity-definition_6": {
      "node_id": "definition_6",
      "disambiguation_index": 0,
      "label": "Definition 6",
      "aliases": [
        "Definition 6"
      ],
      "types": [
        "definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A definition of tree shapes in SHACL (Shapes Constraint Language) that defines the support and standard confidence measures for trees, used in learning high-quality rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-1",
          "local_name": "Definition 6",
          "local_types": [
            "definition"
          ],
          "iri": "Entity-definition_6-Mention-1"
        }
      ],
      "relevance": 0.63134765625
    },
    "Entity-the_next_challenge": {
      "node_id": "the_next_challenge",
      "disambiguation_index": 0,
      "label": "The next challenge",
      "aliases": [
        "The next challenge"
      ],
      "types": [
        "challenge"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Designing an efficient learning method for discovering SHACL shapes from knowledge graphs, considering uncertainty in constraints and the learning process.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-3",
          "local_name": "The next challenge",
          "local_types": [
            "challenge"
          ],
          "iri": "Entity-the_next_challenge-Mention-1"
        }
      ],
      "relevance": 0.630859375
    },
    "Entity-iop_rule_language": {
      "node_id": "iop_rule_language",
      "disambiguation_index": 0,
      "label": "IOP rule language",
      "aliases": [
        "IOP rule language"
      ],
      "types": [
        "language",
        "rule-based system",
        "programming language",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A formalism that presents specific shapes in the form of paths over connected entities present in a knowledge graph, allowing for simple shape patterns to be augmented with minimum cardinality constraints and used as building blocks for more complex shapes.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "IOP rule language",
          "local_types": [
            "language",
            "rule-based system",
            "programming language",
            "format"
          ],
          "iri": "Entity-iop_rule_language-Mention-1"
        }
      ],
      "relevance": 0.63037109375
    },
    "Entity-mined_rule_with_respect_to_their_length": {
      "node_id": "mined_rule_with_respect_to_their_length",
      "disambiguation_index": 0,
      "label": "mined rules with respect to their lengths",
      "aliases": [
        "mined rules with respect to their lengths"
      ],
      "types": [
        "lengths",
        "rules",
        "concept",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The distribution of learned SHACL shapes from knowledge graphs, showing the number and proportion of mined rules according to their length.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-7-Sentence-1",
          "local_name": "mined rules with respect to their lengths",
          "local_types": [
            "lengths",
            "rules",
            "concept",
            "rule"
          ],
          "iri": "Entity-mined_rule_with_respect_to_their_length-Mention-1"
        }
      ],
      "relevance": 0.6298828125
    },
    "Entity-_tree__treesupp__treesc_": {
      "node_id": "_tree__treesupp__treesc_",
      "disambiguation_index": 0,
      "label": "(Tree: Treesupp, TreeSC)",
      "aliases": [
        "(Tree: Treesupp, TreeSC)"
      ],
      "types": [
        "tree notation",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A tree shape in SHACL (Shapes Constraint Language) that represents a set of paths over connected entities present in a knowledge graph, with its support and standard confidence measures.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-1",
          "local_name": "(Tree: Treesupp, TreeSC)",
          "local_types": [
            "tree notation",
            "notation"
          ],
          "iri": "Entity-_tree__treesupp__treesc_-Mention-1"
        }
      ],
      "relevance": 0.62939453125
    },
    "Entity-we_also_propose": {
      "node_id": "we_also_propose",
      "disambiguation_index": 0,
      "label": "We also propose",
      "aliases": [
        "We also propose"
      ],
      "types": [
        "proposition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Redesigning the SHACLearner algorithm for a MapReduce implementation to handle extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "We also propose",
          "local_types": [
            "proposition"
          ],
          "iri": "Entity-we_also_propose-Mention-1"
        }
      ],
      "relevance": 0.62939453125
    },
    "Entity-these_unary_occupation_predicate": {
      "node_id": "these_unary_occupation_predicate",
      "disambiguation_index": 0,
      "label": "these unary occupation predicates",
      "aliases": [
        "these unary occupation predicates"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Unary occupation predicates refer to a set of SHACL shapes or constraints learned from knowledge graphs (KGs) that specifically describe occupations such as singer, entrepreneur, etc., and are characterized by high IOPSC and low IOPHC.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-5",
          "local_name": "these unary occupation predicates",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-these_unary_occupation_predicate-Mention-1"
        }
      ],
      "relevance": 0.62890625
    },
    "Entity-efficient_and_interpretable_human_validation_in_a_depth-first_manner": {
      "node_id": "efficient_and_interpretable_human_validation_in_a_depth-first_manner",
      "disambiguation_index": 0,
      "label": "efficient and interpretable human validation in a depth-first manner",
      "aliases": [
        "efficient and interpretable human validation in a depth-first manner"
      ],
      "types": [
        "validation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method to validate knowledge graphs using SHACL shapes that can be efficiently and interpretable validated by humans in a depth-first manner.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-3",
          "local_name": "efficient and interpretable human validation in a depth-first manner",
          "local_types": [
            "validation"
          ],
          "iri": "Entity-efficient_and_interpretable_human_validation_in_a_depth-first_manner-Mention-1"
        }
      ],
      "relevance": 0.62890625
    },
    "Entity-shaclearner__-s-h_": {
      "node_id": "shaclearner__-s-h_",
      "disambiguation_index": 0,
      "label": "SHACLEARNER (-S-H)",
      "aliases": [
        "ideal rule learner (SHACLEARNER (-S-H))",
        "SHACLEARNER (-S-H)"
      ],
      "types": [
        "notation",
        "abbreviation",
        "ideal rule learner",
        "rule",
        "learner",
        "algorithm variant"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "An ideal rule learner, an algorithm variant of SHACL shape learning that generates and evaluates all possible IOP rules up to the maximum length parameter without sampling or heuristic pruning.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-2",
          "local_name": "SHACLEARNER (-S-H)",
          "local_types": [
            "ideal rule learner",
            "notation",
            "abbreviation",
            "algorithm variant"
          ],
          "iri": "Entity-shaclearner__-s-h_-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "SHACLEARNER (-S-H)",
          "local_types": [
            "algorithm variant",
            "ideal rule learner"
          ],
          "iri": "Entity-shaclearner__-s-h_-Mention-2"
        },
        {
          "reference": "Section-16-Paragraph-4-Sentence-2",
          "local_name": "ideal rule learner (SHACLEARNER (-S-H))",
          "local_types": [
            "rule",
            "learner"
          ],
          "iri": "Entity-shaclearner__-s-h_-Mention-3"
        }
      ],
      "relevance": 0.62841796875
    },
    "Entity-learning_shacl_shape": {
      "node_id": "learning_shacl_shape",
      "disambiguation_index": 0,
      "label": "learning SHACL shapes",
      "aliases": [
        "learning SHACL shapes"
      ],
      "types": [
        "knowledge acquisition process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of acquiring knowledge about Semantic Web Architecture and Constraints Language (SHACL) shapes",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "learning SHACL shapes",
          "local_types": [
            "knowledge acquisition process"
          ],
          "iri": "Entity-learning_shacl_shape-Mention-1"
        }
      ],
      "relevance": 0.6279296875
    },
    "Entity-iopsc_and_iophc_(1)": {
      "node_id": "iopsc_and_iophc_(1)",
      "disambiguation_index": 1,
      "label": "IOPSC and IOPHC",
      "aliases": [
        "IOPSC and IOPHC"
      ],
      "types": [
        "metrics"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Inverse Open Path Standard Confidence (IOPSC) and Inverse Open Path Head Coverage (IOPHC), metrics used to measure the quality of learned rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-4",
          "local_name": "IOPSC and IOPHC",
          "local_types": [
            "metrics"
          ],
          "iri": "Entity-iopsc_and_iophc_(1)-Mention-1"
        }
      ],
      "relevance": 0.6279296875
    },
    "Entity-closed_rule__cr_": {
      "node_id": "closed_rule__cr_",
      "disambiguation_index": 0,
      "label": "Closed rules (CR)",
      "aliases": [
        "Closed rules (CR)"
      ],
      "types": [
        "algorithm",
        "rule system",
        "constraint",
        "rule-based system",
        "formalism",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of rule used for inferring new facts in a Knowledge Graph, which includes closed path rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "Closed rules (CR)",
          "local_types": [
            "algorithm",
            "rule system",
            "constraint",
            "rule-based system",
            "formalism",
            "rule"
          ],
          "iri": "Entity-closed_rule__cr_-Mention-1"
        }
      ],
      "relevance": 0.626953125
    },
    "Entity-correspond_to_shacl_shape": {
      "node_id": "correspond_to_shacl_shape",
      "disambiguation_index": 0,
      "label": "correspond to SHACL shapes",
      "aliases": [
        "correspond to SHACL shapes"
      ],
      "types": [
        "relationship",
        "SHACL shapes"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of constraints or patterns used in Semantic Web Architecture and Constraints for Linked Data (SHACL) that define the structure and relationships between data entities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "correspond to SHACL shapes",
          "local_types": [
            "relationship",
            "SHACL shapes"
          ],
          "iri": "Entity-correspond_to_shacl_shape-Mention-1"
        }
      ],
      "relevance": 0.626953125
    },
    "Entity-high_quality_rule_meeting_minimum_quality_threshold_are_included_in_these_figure": {
      "node_id": "high_quality_rule_meeting_minimum_quality_threshold_are_included_in_these_figure",
      "disambiguation_index": 0,
      "label": "high quality rules meeting minimum quality thresholds are included in these figures",
      "aliases": [
        "high quality rules meeting minimum quality thresholds are included in these figures"
      ],
      "types": [
        "rules",
        "thresholds"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "High-quality rules meeting minimum quality thresholds (IOPSC \u2265 0.1 and IOPHC \u2265 0.01) learned by SHACLEARNER from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "high quality rules meeting minimum quality thresholds are included in these figures",
          "local_types": [
            "rules",
            "thresholds"
          ],
          "iri": "Entity-high_quality_rule_meeting_minimum_quality_threshold_are_included_in_these_figure-Mention-1"
        }
      ],
      "relevance": 0.626953125
    },
    "Entity-p2__z1__y_": {
      "node_id": "p2__z1__y_",
      "disambiguation_index": 0,
      "label": "P2(z1, y)",
      "aliases": [
        "P2(z1, y)"
      ],
      "types": [
        "predicate logic expression",
        "notation",
        "mathematical expression",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The predicate logic expression representing an inverse open path rule in SHACL shape learning from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-2",
          "local_name": "P2(z1, y)",
          "local_types": [
            "predicate logic expression",
            "notation",
            "mathematical expression",
            "function"
          ],
          "iri": "Entity-p2__z1__y_-Mention-1"
        }
      ],
      "relevance": 0.62646484375
    },
    "Entity-wikidataup": {
      "node_id": "wikidataup",
      "disambiguation_index": 0,
      "label": "Wikidata+UP",
      "aliases": [
        "Wikidata+UP"
      ],
      "types": [
        "knowledge graph",
        "system",
        "resource",
        "dataset"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A knowledge graph dataset containing 8 million facts, used as one of the benchmarks for evaluating SHACLEARNER, an open path rule learner.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "Wikidata+UP",
          "local_types": [
            "knowledge graph",
            "system",
            "resource",
            "dataset"
          ],
          "iri": "Entity-wikidataup-Mention-1"
        }
      ],
      "relevance": 0.62646484375
    },
    "Entity-shacl_shape": {
      "node_id": "shacl_shape",
      "disambiguation_index": 0,
      "label": "SHACL shapes",
      "aliases": [
        "SHACL shape",
        "SHACL shapes"
      ],
      "types": [
        "schema",
        "ontology",
        "standard",
        "semantic web concept",
        "semantic web",
        "knowledge representation",
        "ontology concept",
        "shape",
        "semantic data modeling",
        "data model",
        "patterns",
        "format",
        "technology",
        "concept",
        "shapes",
        "data structure",
        "semantic framework",
        "SHACL",
        "conceptual model"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of semantic data modeling patterns or formats used in the Semantic Web and SHACL (Shape Expression Language for RDF) framework, defining constraints on RDF data.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "concept",
            "schema",
            "ontology",
            "standard",
            "data structure",
            "knowledge representation",
            "format"
          ],
          "iri": "Entity-shacl_shape-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "concept",
            "schema",
            "ontology",
            "semantic data modeling",
            "data structure",
            "data model",
            "knowledge representation"
          ],
          "iri": "Entity-shacl_shape-Mention-2"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-2",
          "local_name": "SHACL shapes",
          "local_types": [
            "ontology",
            "data model",
            "format",
            "concept"
          ],
          "iri": "Entity-shacl_shape-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-7",
          "local_name": "SHACL shape",
          "local_types": [
            "ontology concept",
            "shape",
            "semantic web",
            "data structure",
            "knowledge representation",
            "semantic framework"
          ],
          "iri": "Entity-shacl_shape-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "ontology concept",
            "concept",
            "shape",
            "ontology",
            "standard",
            "data model",
            "technology",
            "semantic web concept",
            "SHACL",
            "format",
            "conceptual model"
          ],
          "iri": "Entity-shacl_shape-Mention-5"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "standard",
            "SHACL",
            "data model"
          ],
          "iri": "Entity-shacl_shape-Mention-6"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "ontology concept",
            "concept",
            "ontology",
            "data structure",
            "knowledge representation",
            "data model"
          ],
          "iri": "Entity-shacl_shape-Mention-7"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "ontology concept",
            "ontology",
            "data structure",
            "knowledge representation",
            "data model"
          ],
          "iri": "Entity-shacl_shape-Mention-8"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "ontology concept",
            "concept",
            "standard",
            "data structure",
            "knowledge representation",
            "technology"
          ],
          "iri": "Entity-shacl_shape-Mention-9"
        },
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "data structure",
            "ontology",
            "data model",
            "knowledge representation"
          ],
          "iri": "Entity-shacl_shape-Mention-10"
        },
        {
          "reference": "Section-13-Paragraph-7-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "data structure",
            "knowledge representation"
          ],
          "iri": "Entity-shacl_shape-Mention-11"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "SHACL shapes",
          "local_types": [
            "ontology concept",
            "shapes",
            "patterns",
            "data model",
            "conceptual model"
          ],
          "iri": "Entity-shacl_shape-Mention-12"
        }
      ],
      "relevance": 0.6259765625
    },
    "Entity-let_r": {
      "node_id": "let_r",
      "disambiguation_index": 0,
      "label": "Let r",
      "aliases": [
        "Let r"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A closed-path rule in SHACL shape learning, used to express constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "Let r",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-let_r-Mention-1"
        }
      ],
      "relevance": 0.6259765625
    },
    "Entity-line_8_of_algorithm_1": {
      "node_id": "line_8_of_algorithm_1",
      "disambiguation_index": 0,
      "label": "line 8 of Algorithm 1",
      "aliases": [
        "line 8 of Algorithm 1"
      ],
      "types": [
        "algorithm",
        "reference"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The procedure used in SHACLEARNER to derive SHACL trees from annotated Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "line 8 of Algorithm 1",
          "local_types": [
            "algorithm",
            "reference"
          ],
          "iri": "Entity-line_8_of_algorithm_1-Mention-1"
        }
      ],
      "relevance": 0.62548828125
    },
    "Entity-shaclearner": {
      "node_id": "shaclearner",
      "disambiguation_index": 0,
      "label": "SHACLEARNER",
      "aliases": [
        "SHACLEARNER",
        "SHACLearner"
      ],
      "types": [
        "benchmark",
        "evaluation method",
        "machine learning algorithm",
        "framework",
        "model",
        "software",
        "method",
        "rule learner",
        "software framework",
        "machine learning framework",
        "machine learning model",
        "rule-based system",
        "research",
        "learning method",
        "software tool",
        "learning algorithm",
        "learning framework",
        "methodology",
        "logic system",
        "name",
        "algorithm",
        "algorithms",
        "system",
        "logic framework",
        "tool"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A novel machine learning algorithm for learning high-quality shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-5",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "learning method",
            "method",
            "machine learning model",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "learning method",
            "machine learning model",
            "tool",
            "model"
          ],
          "iri": "Entity-shaclearner-Mention-2"
        },
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning model",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-1",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software",
            "system",
            "tool",
            "research"
          ],
          "iri": "Entity-shaclearner-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-6",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-1",
          "local_name": "SHACLearner",
          "local_types": [
            "algorithm",
            "learning algorithm",
            "software",
            "tool",
            "machine learning algorithm",
            "name"
          ],
          "iri": "Entity-shaclearner-Mention-6"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "tool",
            "rule learner",
            "system"
          ],
          "iri": "Entity-shaclearner-Mention-7"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software",
            "system"
          ],
          "iri": "Entity-shaclearner-Mention-8"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-5",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "tool",
            "software",
            "system"
          ],
          "iri": "Entity-shaclearner-Mention-9"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "logic framework",
            "rule-based system",
            "system",
            "logic system"
          ],
          "iri": "Entity-shaclearner-Mention-10"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "tool",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-11"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-4",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "method",
            "evaluation method"
          ],
          "iri": "Entity-shaclearner-Mention-12"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "SHACLEARNER",
          "local_types": [
            "tool",
            "software",
            "software framework",
            "framework"
          ],
          "iri": "Entity-shaclearner-Mention-13"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "SHACLearner",
          "local_types": [
            "algorithm",
            "tool",
            "software",
            "system"
          ],
          "iri": "Entity-shaclearner-Mention-14"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-2",
          "local_name": "SHACLearner",
          "local_types": [
            "software tool",
            "tool",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-15"
        },
        {
          "reference": "Section-12-Paragraph-6-Sentence-1",
          "local_name": "SHACLearner",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-16"
        },
        {
          "reference": "Section-12-Paragraph-6-Sentence-2",
          "local_name": "SHACLearner",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-17"
        },
        {
          "reference": "Section-12-Paragraph-6-Sentence-3",
          "local_name": "SHACLearner",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-18"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-8",
          "local_name": "SHACLearner",
          "local_types": [
            "algorithm",
            "machine learning model",
            "tool",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-19"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-1",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning model",
            "method"
          ],
          "iri": "Entity-shaclearner-Mention-20"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning model",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-21"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-1",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software",
            "method",
            "machine learning model",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-22"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning model",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-23"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-3",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "tool",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-24"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-4",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-25"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-5",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "tool",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-26"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-6",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-27"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-6",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning model",
            "tool",
            "model"
          ],
          "iri": "Entity-shaclearner-Mention-28"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-1",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software",
            "machine learning framework",
            "system",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-29"
        },
        {
          "reference": "Section-16-Paragraph-1-Sentence-1",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "system",
            "software",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-30"
        },
        {
          "reference": "Section-16-Paragraph-1-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software",
            "machine learning model",
            "system",
            "model"
          ],
          "iri": "Entity-shaclearner-Mention-31"
        },
        {
          "reference": "Section-16-Paragraph-1-Sentence-3",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning model"
          ],
          "iri": "Entity-shaclearner-Mention-32"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-1",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software",
            "system",
            "tool",
            "model",
            "methodology"
          ],
          "iri": "Entity-shaclearner-Mention-33"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "tool",
            "software",
            "system"
          ],
          "iri": "Entity-shaclearner-Mention-34"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-3",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning framework",
            "tool",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-35"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-6",
          "local_name": "SHACLEARNER",
          "local_types": [
            "software",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-36"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-5",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-37"
        },
        {
          "reference": "Section-16-Paragraph-4-Sentence-3",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "system"
          ],
          "iri": "Entity-shaclearner-Mention-38"
        },
        {
          "reference": "Section-16-Paragraph-4-Sentence-4",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning model",
            "model"
          ],
          "iri": "Entity-shaclearner-Mention-39"
        },
        {
          "reference": "Section-16-Paragraph-5-Sentence-1",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "software",
            "machine learning model",
            "system",
            "tool",
            "model"
          ],
          "iri": "Entity-shaclearner-Mention-40"
        },
        {
          "reference": "Section-16-Paragraph-5-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning model",
            "tool",
            "method"
          ],
          "iri": "Entity-shaclearner-Mention-41"
        },
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "SHACLearner",
          "local_types": [
            "algorithm",
            "learning method",
            "software",
            "system",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-42"
        },
        {
          "reference": "Section-18-Paragraph-4-Sentence-4",
          "local_name": "SHACLearner",
          "local_types": [
            "algorithm",
            "benchmark",
            "tool",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-43"
        },
        {
          "reference": "Section-18-Paragraph-5-Sentence-1",
          "local_name": "SHACLearner",
          "local_types": [
            "algorithm",
            "tool",
            "software",
            "learning method"
          ],
          "iri": "Entity-shaclearner-Mention-44"
        },
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "SHACLearner",
          "local_types": [
            "algorithm",
            "software"
          ],
          "iri": "Entity-shaclearner-Mention-45"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-1",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning model",
            "system",
            "rule learner"
          ],
          "iri": "Entity-shaclearner-Mention-46"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "method",
            "algorithms",
            "system",
            "learning framework"
          ],
          "iri": "Entity-shaclearner-Mention-47"
        },
        {
          "reference": "Section-16-Paragraph-4-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "system"
          ],
          "iri": "Entity-shaclearner-Mention-48"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-2",
          "local_name": "SHACLEARNER",
          "local_types": [
            "algorithm",
            "machine learning framework",
            "machine learning model",
            "system",
            "tool"
          ],
          "iri": "Entity-shaclearner-Mention-49"
        }
      ],
      "relevance": 0.625
    },
    "Entity-the_rule_(2)": {
      "node_id": "the_rule_(2)",
      "disambiguation_index": 2,
      "label": "The rule",
      "aliases": [
        "The rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific shape pattern expressed as paths over connected entities that are present in a Knowledge Graph (KG), used to validate or infer facts from the KG.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-6",
          "local_name": "The rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_rule_(2)-Mention-1"
        }
      ],
      "relevance": 0.625
    },
    "Entity-iopsc_and_iophc": {
      "node_id": "iopsc_and_iophc",
      "disambiguation_index": 0,
      "label": "IOPSC and IOPHC",
      "aliases": [
        "IOPSC and IOPHC",
        "the quality measurements of IOPSC and IOPHC"
      ],
      "types": [
        "metric",
        "quality metrics",
        "quality measure",
        "measurements",
        "quality measurements",
        "quality measurement",
        "metrics",
        "quality measures"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Quality measures for inverse open path rules, used in SHACLearner's rule selection process.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-3",
          "local_name": "IOPSC and IOPHC",
          "local_types": [
            "metric",
            "quality measure",
            "metrics",
            "quality measures"
          ],
          "iri": "Entity-iopsc_and_iophc-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "IOPSC and IOPHC",
          "local_types": [
            "metric",
            "quality measure",
            "metrics",
            "quality measures"
          ],
          "iri": "Entity-iopsc_and_iophc-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "IOPSC and IOPHC",
          "local_types": [
            "metric",
            "quality measure",
            "metrics",
            "quality measures"
          ],
          "iri": "Entity-iopsc_and_iophc-Mention-3"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-3",
          "local_name": "IOPSC and IOPHC",
          "local_types": [
            "quality measurement",
            "quality measurements"
          ],
          "iri": "Entity-iopsc_and_iophc-Mention-4"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-3",
          "local_name": "the quality measurements of IOPSC and IOPHC",
          "local_types": [
            "measurements",
            "quality metrics"
          ],
          "iri": "Entity-iopsc_and_iophc-Mention-5"
        }
      ],
      "relevance": 0.62451171875
    },
    "Entity-we_then_propose_a_method": {
      "node_id": "we_then_propose_a_method",
      "disambiguation_index": 0,
      "label": "we then propose a method",
      "aliases": [
        "we then propose a method"
      ],
      "types": [
        "method",
        "proposition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel approach to learn high-quality tree shapes from knowledge graphs by building trees out of Inverse Open Path rules mined from the graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "we then propose a method",
          "local_types": [
            "method",
            "proposition"
          ],
          "iri": "Entity-we_then_propose_a_method-Mention-1"
        }
      ],
      "relevance": 0.62451171875
    },
    "Entity-another_work_provides_an_interactive_framework_to_define_shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use_.": {
      "node_id": "another_work_provides_an_interactive_framework_to_define_shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use_.",
      "disambiguation_index": 0,
      "label": "Another work provides an interactive framework to define SHACL shapes with different complexities, including nested patterns that are similar to the trees that we use.",
      "aliases": [
        "Another work provides an interactive framework to define SHACL shapes with different complexities, including nested patterns that are similar to the trees that we use."
      ],
      "types": [
        "methodology comparison",
        "paper reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research paper or methodology comparison providing a framework for defining Shapes in Hash Language (SHACL) shapes with varying complexities.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "Another work provides an interactive framework to define SHACL shapes with different complexities, including nested patterns that are similar to the trees that we use.",
          "local_types": [
            "methodology comparison",
            "paper reference"
          ],
          "iri": "Entity-another_work_provides_an_interactive_framework_to_define_shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use_.-Mention-1"
        }
      ],
      "relevance": 0.6240234375
    },
    "Entity-kg_k_": {
      "node_id": "kg_k_",
      "disambiguation_index": 0,
      "label": "KG K'",
      "aliases": [
        "KG K'",
        "the KG K'"
      ],
      "types": [
        "knowledge graph",
        "database",
        "entity set",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A knowledge graph, specifically a subgraph of massive Knowledge Graphs (KGs) with millions of facts and entities.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "KG K'",
          "local_types": [
            "knowledge graph",
            "database",
            "data structure"
          ],
          "iri": "Entity-kg_k_-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "the KG K'",
          "local_types": [
            "knowledge graph",
            "entity set"
          ],
          "iri": "Entity-kg_k_-Mention-2"
        }
      ],
      "relevance": 0.62353515625
    },
    "Entity-the_small_poker_kg": {
      "node_id": "the_small_poker_kg",
      "disambiguation_index": 0,
      "label": "the small Poker KG",
      "aliases": [
        "the small Poker KG"
      ],
      "types": [
        "knowledge graph",
        "PokerKG",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The small Poker Knowledge Graph (KG) used as a dataset for evaluating SHACLEARNER's performance.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-1",
          "local_name": "the small Poker KG",
          "local_types": [
            "knowledge graph",
            "PokerKG",
            "dataset"
          ],
          "iri": "Entity-the_small_poker_kg-Mention-1"
        }
      ],
      "relevance": 0.62353515625
    },
    "Entity-iopsc_determines_the_confidence_of_a_rule_based_on_counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg": {
      "node_id": "iopsc_determines_the_confidence_of_a_rule_based_on_counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg",
      "disambiguation_index": 0,
      "label": "IOPSC determines the confidence of a rule based on counting the proportion of target predicate instances for which the rule holds true in the KG",
      "aliases": [
        "IOPSC determines the confidence of a rule based on counting the proportion of target predicate instances for which the rule holds true in the KG"
      ],
      "types": [
        "algorithm",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure used to determine the confidence of a learned rule based on counting the proportion of target predicate instances for which the rule holds true in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "IOPSC determines the confidence of a rule based on counting the proportion of target predicate instances for which the rule holds true in the KG",
          "local_types": [
            "algorithm",
            "rule"
          ],
          "iri": "Entity-iopsc_determines_the_confidence_of_a_rule_based_on_counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.62255859375
    },
    "Entity-unary_occupation_predicate": {
      "node_id": "unary_occupation_predicate",
      "disambiguation_index": 0,
      "label": "unary occupation predicates",
      "aliases": [
        "unary occupation predicates"
      ],
      "types": [
        "predicate",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Unary occupation predicates refer to a set of SHACL shapes, specifically simple shape patterns that can be used as building blocks for more complex shapes, such as trees and other rule patterns, learned from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-5",
          "local_name": "unary occupation predicates",
          "local_types": [
            "predicate",
            "concept"
          ],
          "iri": "Entity-unary_occupation_predicate-Mention-1"
        }
      ],
      "relevance": 0.6220703125
    },
    "Entity-the_other_kg": {
      "node_id": "the_other_kg",
      "disambiguation_index": 0,
      "label": "the other KGs",
      "aliases": [
        "the other KGs"
      ],
      "types": [
        "knowledge graphs"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Other knowledge graphs (KGs) mentioned in this paper refer to massive KGs such as YAGO2s with 4 million facts, DBpedia 3.8 with 11 million facts, and Wikidata with 8 million facts.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-5-Sentence-1",
          "local_name": "the other KGs",
          "local_types": [
            "knowledge graphs"
          ],
          "iri": "Entity-the_other_kg-Mention-1"
        }
      ],
      "relevance": 0.6220703125
    },
    "Entity-ptq": {
      "node_id": "ptq",
      "disambiguation_index": 0,
      "label": "P't^q",
      "aliases": [
        "P't^q"
      ],
      "types": [
        "predicate",
        "tree"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A tree shape in SHACL (Shapes Constraint Language) that represents a path of connected entities and predicates in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "P't^q",
          "local_types": [
            "predicate",
            "tree"
          ],
          "iri": "Entity-ptq-Mention-1"
        }
      ],
      "relevance": 0.62158203125
    },
    "Entity-an_example": {
      "node_id": "an_example",
      "disambiguation_index": 0,
      "label": "an example",
      "aliases": [
        "an example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of computing quality measures (IOPSC, IOPHC) for a given SHACLearner rule from the adjacency matrices representing a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "an example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-an_example-Mention-1"
        }
      ],
      "relevance": 0.62158203125
    },
    "Entity-type_predicate_for_experiment": {
      "node_id": "type_predicate_for_experiment",
      "disambiguation_index": 0,
      "label": "type predicates for experiments",
      "aliases": [
        "type predicates for experiments"
      ],
      "types": [
        "predicate",
        "experiment"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of unary predicate transformations applied to real-world knowledge graphs (KGs) to enable learning and discovery of shapes, necessary for validating KG data and facilitating manual editing tasks.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-1",
          "local_name": "type predicates for experiments",
          "local_types": [
            "predicate",
            "experiment"
          ],
          "iri": "Entity-type_predicate_for_experiment-Mention-1"
        }
      ],
      "relevance": 0.62158203125
    },
    "Entity-shaclearner__-sh_": {
      "node_id": "shaclearner__-sh_",
      "disambiguation_index": 0,
      "label": "SHACLEARNER (-S+H)",
      "aliases": [
        "SHACLEARNER (-S+H)"
      ],
      "types": [
        "algorithm",
        "rule learning system",
        "system",
        "algorithm variant"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A system that does not sample and uses heuristic pruning to learn high-quality IOP rules from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-3",
          "local_name": "SHACLEARNER (-S+H)",
          "local_types": [
            "algorithm",
            "rule learning system",
            "system",
            "algorithm variant"
          ],
          "iri": "Entity-shaclearner__-sh_-Mention-1"
        }
      ],
      "relevance": 0.62109375
    },
    "Entity-a_kg_for_valid_reason": {
      "node_id": "a_kg_for_valid_reason",
      "disambiguation_index": 0,
      "label": "a KG for valid reasons",
      "aliases": [
        "a KG for valid reasons"
      ],
      "types": [
        "knowledge graph",
        "reason"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A knowledge graph (KG) that has incomplete information due to its evolving nature, cultural bias, and resource constraints.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-5",
          "local_name": "a KG for valid reasons",
          "local_types": [
            "knowledge graph",
            "reason"
          ],
          "iri": "Entity-a_kg_for_valid_reason-Mention-1"
        }
      ],
      "relevance": 0.62109375
    },
    "Entity-inference_process_on_the_kg": {
      "node_id": "inference_process_on_the_kg",
      "disambiguation_index": 0,
      "label": "inference processes on the KG",
      "aliases": [
        "inference processes on the KG"
      ],
      "types": [
        "process",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Processes that infer knowledge or make predictions from a Knowledge Graph (KG) using type information to understand, validate data and improve inference accuracy.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "inference processes on the KG",
          "local_types": [
            "process",
            "knowledge graph"
          ],
          "iri": "Entity-inference_process_on_the_kg-Mention-1"
        }
      ],
      "relevance": 0.62060546875
    },
    "Entity-that_can_be_augmented_with_minimum_cardinality_constraint_and_also_used_a_a_building_block_for_more_complex_shape__such_a_tree_and_other_rule_pattern_.": {
      "node_id": "that_can_be_augmented_with_minimum_cardinality_constraint_and_also_used_a_a_building_block_for_more_complex_shape__such_a_tree_and_other_rule_pattern_.",
      "disambiguation_index": 0,
      "label": "that can be augmented with minimum cardinality constraints and also used as a building block for more complex shapes, such as trees and other rule patterns.",
      "aliases": [
        "that can be augmented with minimum cardinality constraints and also used as a building block for more complex shapes, such as trees and other rule patterns."
      ],
      "types": [
        "constraint",
        "shape",
        "tree"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Inverse Open Path (IOP) rules",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "that can be augmented with minimum cardinality constraints and also used as a building block for more complex shapes, such as trees and other rule patterns.",
          "local_types": [
            "constraint",
            "shape",
            "tree"
          ],
          "iri": "Entity-that_can_be_augmented_with_minimum_cardinality_constraint_and_also_used_a_a_building_block_for_more_complex_shape__such_a_tree_and_other_rule_pattern_.-Mention-1"
        }
      ],
      "relevance": 0.61962890625
    },
    "Entity-predicate_and_entity_(1)": {
      "node_id": "predicate_and_entity_(1)",
      "disambiguation_index": 1,
      "label": "predicates and entities",
      "aliases": [
        "predicates and entities"
      ],
      "types": [
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Predicates and entities refer to the fundamental components used to define Inverse Open Path (IOP) rules, which are formalisms that present specific shapes in the form of paths over connected entities in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-5",
          "local_name": "predicates and entities",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-predicate_and_entity_(1)-Mention-1"
        }
      ],
      "relevance": 0.61962890625
    },
    "Entity-embeddings__k__": {
      "node_id": "embeddings__k__",
      "disambiguation_index": 0,
      "label": "Embeddings(K')",
      "aliases": [
        "Embeddings(K')",
        "Embeddings( K')"
      ],
      "types": [
        "algorithm",
        "function call",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The embeddings of K', which are used as input to learn high-quality IOP rules from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-6",
          "local_name": "Embeddings(K')",
          "local_types": [
            "algorithm",
            "function call",
            "function"
          ],
          "iri": "Entity-embeddings__k__-Mention-1"
        }
      ],
      "relevance": 0.619140625
    },
    "Entity-candidate_iop_rule": {
      "node_id": "candidate_iop_rule",
      "disambiguation_index": 0,
      "label": "candidate IOP rules",
      "aliases": [
        "candidate IOP rules"
      ],
      "types": [
        "set of possibilities",
        "potential solutions",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of potential solutions or possibilities for Inverse Open Path (IOP) rules, which are used to express simple shape patterns that can be augmented with minimum cardinality constraints and also used as a building block for more complex shapes.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "candidate IOP rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-candidate_iop_rule-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "candidate IOP rules",
          "local_types": [
            "set of possibilities",
            "potential solutions"
          ],
          "iri": "Entity-candidate_iop_rule-Mention-2"
        }
      ],
      "relevance": 0.619140625
    },
    "Entity-procedural_method_without_logical_foundation": {
      "node_id": "procedural_method_without_logical_foundation",
      "disambiguation_index": 0,
      "label": "procedural methods without logical foundations",
      "aliases": [
        "procedural methods without logical foundations"
      ],
      "types": [
        "approach",
        "methodology",
        "foundation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Exploratory attempts at learning SHACL shapes from knowledge graphs that lack logical foundations and have been shown to be non-scalable for handling large-scale datasets.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "procedural methods without logical foundations",
          "local_types": [
            "approach",
            "methodology",
            "foundation"
          ],
          "iri": "Entity-procedural_method_without_logical_foundation-Mention-1"
        }
      ],
      "relevance": 0.619140625
    },
    "Entity-the_method_that_is_used_to_build_a_kg": {
      "node_id": "the_method_that_is_used_to_build_a_kg",
      "disambiguation_index": 0,
      "label": "the method that is used to build a KG",
      "aliases": [
        "the method that is used to build a KG"
      ],
      "types": [
        "method",
        "KG building process"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of constructing a Knowledge Graph (KG) from scratch or by learning high-quality shapes and rules from existing KGs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "the method that is used to build a KG",
          "local_types": [
            "method",
            "KG building process"
          ],
          "iri": "Entity-the_method_that_is_used_to_build_a_kg-Mention-1"
        }
      ],
      "relevance": 0.619140625
    },
    "Entity-the_first_column__the_number_of_learnt_rule_with_iopsc_in_range_of__0.1__0.3__": {
      "node_id": "the_first_column__the_number_of_learnt_rule_with_iopsc_in_range_of__0.1__0.3__",
      "disambiguation_index": 0,
      "label": "the first column (the number of learnt rules with IOPSC in range of [0.1, 0.3))",
      "aliases": [
        "the first column (the number of learnt rules with IOPSC in range of [0.1, 0.3))"
      ],
      "types": [
        "column",
        "range specification"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The count of learned Inverse Open Path Shape Constraints (IOPSC) within a specific quality range of [0.1, 0.3), representing the initial set of discovered shape constraints.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-1",
          "local_name": "the first column (the number of learnt rules with IOPSC in range of [0.1, 0.3))",
          "local_types": [
            "column",
            "range specification"
          ],
          "iri": "Entity-the_first_column__the_number_of_learnt_rule_with_iopsc_in_range_of__0.1__0.3__-Mention-1"
        }
      ],
      "relevance": 0.619140625
    },
    "Entity-each_tree_we_employ_a_greedy_search__greedysearch": {
      "node_id": "each_tree_we_employ_a_greedy_search__greedysearch",
      "disambiguation_index": 0,
      "label": "each tree we employ a greedy search, GreedySearch",
      "aliases": [
        "each tree we employ a greedy search, GreedySearch"
      ],
      "types": [
        "algorithm",
        "search algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A greedy algorithm used to aggregate IOP rules for the subject and object arguments of each target predicate when learning SHACL trees.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-1",
          "local_name": "each tree we employ a greedy search, GreedySearch",
          "local_types": [
            "algorithm",
            "search algorithm"
          ],
          "iri": "Entity-each_tree_we_employ_a_greedy_search__greedysearch-Mention-1"
        }
      ],
      "relevance": 0.61865234375
    },
    "Entity-a_shape": {
      "node_id": "a_shape",
      "disambiguation_index": 0,
      "label": "a shape",
      "aliases": [
        "a shape"
      ],
      "types": [
        "shape"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A shape refers to a specific pattern or structure that can be derived from one or more Inverse Open Path (IOP) rules in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "a shape",
          "local_types": [
            "shape"
          ],
          "iri": "Entity-a_shape-Mention-1"
        }
      ],
      "relevance": 0.6181640625
    },
    "Entity-the_sampling___method": {
      "node_id": "the_sampling___method",
      "disambiguation_index": 0,
      "label": "the Sampling() method",
      "aliases": [
        "the Sampling() method",
        "The sampling method"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method for computing a fragment of a knowledge graph (KG) K' by selecting a bounded number of entities related to a target predicate Pt, used in learning SHACL shapes from KGs.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "the Sampling() method",
          "local_types": [
            "method"
          ],
          "iri": "Entity-the_sampling___method-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "The sampling method",
          "local_types": [
            "method"
          ],
          "iri": "Entity-the_sampling___method-Mention-2"
        }
      ],
      "relevance": 0.6181640625
    },
    "Entity-the_time_of_learning": {
      "node_id": "the_time_of_learning",
      "disambiguation_index": 0,
      "label": "the time of learning",
      "aliases": [
        "the time of learning"
      ],
      "types": [
        "timeframe",
        "learning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The period or duration during which knowledge graphs are processed to learn SHACL shapes and validate their constraints.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-4",
          "local_name": "the time of learning",
          "local_types": [
            "timeframe",
            "learning"
          ],
          "iri": "Entity-the_time_of_learning-Mention-1"
        }
      ],
      "relevance": 0.61767578125
    },
    "Entity-kg_rule_learning_system": {
      "node_id": "kg_rule_learning_system",
      "disambiguation_index": 0,
      "label": "KG rule learning systems",
      "aliases": [
        "KG rule learning systems"
      ],
      "types": [
        "software",
        "system",
        "artificial intelligence"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Systems that learn and apply rules for knowledge graph management",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "KG rule learning systems",
          "local_types": [
            "software",
            "system",
            "artificial intelligence"
          ],
          "iri": "Entity-kg_rule_learning_system-Mention-1"
        }
      ],
      "relevance": 0.61669921875
    },
    "Entity-to_assess_the_quality_of_a_tree_we_follow_the_quality_measure_for_iop_rule": {
      "node_id": "to_assess_the_quality_of_a_tree_we_follow_the_quality_measure_for_iop_rule",
      "disambiguation_index": 0,
      "label": "To assess the quality of a tree we follow the quality measures for IOP rules",
      "aliases": [
        "To assess the quality of a tree we follow the quality measures for IOP rules"
      ],
      "types": [
        "quality assessment",
        "rule-based evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The procedure used in SHACLEARNER to evaluate the quality of derived SHACL trees from annotated IOP rules.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-7",
          "local_name": "To assess the quality of a tree we follow the quality measures for IOP rules",
          "local_types": [
            "quality assessment",
            "rule-based evaluation"
          ],
          "iri": "Entity-to_assess_the_quality_of_a_tree_we_follow_the_quality_measure_for_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.61669921875
    },
    "Entity-rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape": {
      "node_id": "rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "disambiguation_index": 0,
      "label": "rules induced from paths that have a straightforward interpretation as shapes",
      "aliases": [
        "rules induced from paths that have a straightforward interpretation as shapes"
      ],
      "types": [
        "rule",
        "path",
        "shape"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Inverse Open Path (IOP) rules are a type of rule induced from paths that have a straightforward interpretation as shapes, used for expressing simple shape patterns and building complex shapes like trees.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-4",
          "local_name": "rules induced from paths that have a straightforward interpretation as shapes",
          "local_types": [
            "rule",
            "path",
            "shape"
          ],
          "iri": "Entity-rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape-Mention-1"
        }
      ],
      "relevance": 0.61669921875
    },
    "Entity-to_mine": {
      "node_id": "to_mine",
      "disambiguation_index": 0,
      "label": "To mine",
      "aliases": [
        "To mine"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of extracting or discovering Inverse Open Path (IOP) rules from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "To mine",
          "local_types": [
            "task"
          ],
          "iri": "Entity-to_mine-Mention-1"
        }
      ],
      "relevance": 0.61669921875
    },
    "Entity-the_common_underlying_form": {
      "node_id": "the_common_underlying_form",
      "disambiguation_index": 0,
      "label": "the common underlying form",
      "aliases": [
        "the common underlying form"
      ],
      "types": [
        "form"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The fundamental concept or pattern that underlies various SHACL shape types, including rules and constraints, which can be expressed as paths over connected entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "the common underlying form",
          "local_types": [
            "form"
          ],
          "iri": "Entity-the_common_underlying_form-Mention-1"
        }
      ],
      "relevance": 0.61572265625
    },
    "Entity-the_size_of_the_problem": {
      "node_id": "the_size_of_the_problem",
      "disambiguation_index": 0,
      "label": "the size of the problem",
      "aliases": [
        "the size of the problem"
      ],
      "types": [
        "problem"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The magnitude or extent to which a knowledge graph's complexity and scale pose a challenge for learning SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "the size of the problem",
          "local_types": [
            "problem"
          ],
          "iri": "Entity-the_size_of_the_problem-Mention-1"
        }
      ],
      "relevance": 0.61572265625
    },
    "Entity-_sh_": {
      "node_id": "_sh_",
      "disambiguation_index": 0,
      "label": "(+S+H)",
      "aliases": [
        "(+S+H)"
      ],
      "types": [
        "notation",
        "SHACLEARNER",
        "mathematical notation",
        "rule learner"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "SHACLEARNER, a state-of-the-art embedding-based open path rule learner that uses two tricks to significantly reduce the search space for IOP rules in PathFinding of Algorithm 1.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-6",
          "local_name": "(+S+H)",
          "local_types": [
            "notation",
            "SHACLEARNER",
            "mathematical notation",
            "rule learner"
          ],
          "iri": "Entity-_sh_-Mention-1"
        }
      ],
      "relevance": 0.615234375
    },
    "Entity-the_established_approach_for_evaluating_kg_rule-learning_method": {
      "node_id": "the_established_approach_for_evaluating_kg_rule-learning_method",
      "disambiguation_index": 0,
      "label": "the established approach for evaluating KG rule-learning methods",
      "aliases": [
        "the established approach for evaluating KG rule-learning methods"
      ],
      "types": [
        "method",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The standard method used to assess and compare the performance of knowledge graph (KG) rule-learning algorithms, which involves measuring both the quantity and quality of distinct rules learned.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-1",
          "local_name": "the established approach for evaluating KG rule-learning methods",
          "local_types": [
            "method",
            "approach"
          ],
          "iri": "Entity-the_established_approach_for_evaluating_kg_rule-learning_method-Mention-1"
        }
      ],
      "relevance": 0.615234375
    },
    "Entity-_2__we_introduce_cardinality_constraint_and_tree_shape_for_more_expressive_pattern_": {
      "node_id": "_2__we_introduce_cardinality_constraint_and_tree_shape_for_more_expressive_pattern_",
      "disambiguation_index": 0,
      "label": "(2) we introduce cardinality constraints and tree shapes for more expressive patterns;",
      "aliases": [
        "(2) we introduce cardinality constraints and tree shapes for more expressive patterns;"
      ],
      "types": [
        "constraint",
        "pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Cardinality constraints and tree shapes for more expressive patterns introduced to learn SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "(2) we introduce cardinality constraints and tree shapes for more expressive patterns;",
          "local_types": [
            "constraint",
            "pattern"
          ],
          "iri": "Entity-_2__we_introduce_cardinality_constraint_and_tree_shape_for_more_expressive_pattern_-Mention-1"
        }
      ],
      "relevance": 0.615234375
    },
    "Entity-a_the_iopsc_increase": {
      "node_id": "a_the_iopsc_increase",
      "disambiguation_index": 0,
      "label": "as the IOPSC increases",
      "aliases": [
        "as the IOPSC increases"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The measure of confidence for inverse open path (IOP) rules, indicating how well each rule holds true in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-2",
          "local_name": "as the IOPSC increases",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-a_the_iopsc_increase-Mention-1"
        }
      ],
      "relevance": 0.615234375
    },
    "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape": {
      "node_id": "and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "disambiguation_index": 0,
      "label": "and provides the output in an interactive interface for a human user to create SHACL shapes",
      "aliases": [
        "and provides the output in an interactive interface for a human user to create SHACL shapes"
      ],
      "types": [
        "interface",
        "SHACL shape creation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A semi-automatic method for learning SHACL shapes from knowledge graphs, which involves providing a sample of data to an off-the-shelf graph structure learner and then allowing a human user to interactively create SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "and provides the output in an interactive interface for a human user to create SHACL shapes",
          "local_types": [
            "interface",
            "SHACL shape creation"
          ],
          "iri": "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape-Mention-1"
        }
      ],
      "relevance": 0.61474609375
    },
    "Entity-rlvlr_and_scalekb": {
      "node_id": "rlvlr_and_scalekb",
      "disambiguation_index": 0,
      "label": "RLvLR and SCALEKB",
      "aliases": [
        "RLvLR and SCALEKB"
      ],
      "types": [
        "tool",
        "software",
        "software system"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A tool or software system that uses closed-path (CP) rules for expressing constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-3",
          "local_name": "RLvLR and SCALEKB",
          "local_types": [
            "tool",
            "software",
            "software system"
          ],
          "iri": "Entity-rlvlr_and_scalekb-Mention-1"
        }
      ],
      "relevance": 0.6142578125
    },
    "Entity-the_shape_constraint_language": {
      "node_id": "the_shape_constraint_language",
      "disambiguation_index": 0,
      "label": "the Shapes Constraint Language",
      "aliases": [
        "the Shapes Constraint Language"
      ],
      "types": [
        "concept",
        "language"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A World Wide Web Consortium (W3C) recommendation for expressing constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "the Shapes Constraint Language",
          "local_types": [
            "concept",
            "language"
          ],
          "iri": "Entity-the_shape_constraint_language-Mention-1"
        }
      ],
      "relevance": 0.6142578125
    },
    "Entity-p1__z0__x___p2__z1__y_": {
      "node_id": "p1__z0__x___p2__z1__y_",
      "disambiguation_index": 0,
      "label": "P1(z0, x) ^ P2(z1, y)",
      "aliases": [
        "P1(z0, x) ^ P2(z1, y)"
      ],
      "types": [
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An IOP rule expressing simple shape patterns in the form of paths over connected entities present in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-2",
          "local_name": "P1(z0, x) ^ P2(z1, y)",
          "local_types": [
            "expression"
          ],
          "iri": "Entity-p1__z0__x___p2__z1__y_-Mention-1"
        }
      ],
      "relevance": 0.61376953125
    },
    "Entity-potential_rule_in_the_search_space": {
      "node_id": "potential_rule_in_the_search_space",
      "disambiguation_index": 0,
      "label": "potential rules in the search space",
      "aliases": [
        "potential rules in the search space"
      ],
      "types": [
        "concept",
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of possible constraints or patterns that can be discovered from a knowledge graph, which grow exponentially as the complexity of the rules increases.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-3",
          "local_name": "potential rules in the search space",
          "local_types": [
            "concept",
            "rules"
          ],
          "iri": "Entity-potential_rule_in_the_search_space-Mention-1"
        }
      ],
      "relevance": 0.61376953125
    },
    "Entity-these_constraint": {
      "node_id": "these_constraint",
      "disambiguation_index": 0,
      "label": "These constraints",
      "aliases": [
        "These constraints"
      ],
      "types": [
        "constraint"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Constraints used to validate and ensure consistency within a Knowledge Graph (KG)",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-4",
          "local_name": "These constraints",
          "local_types": [
            "constraint"
          ],
          "iri": "Entity-these_constraint-Mention-1"
        }
      ],
      "relevance": 0.61328125
    },
    "Entity-original_input_kg": {
      "node_id": "original_input_kg",
      "disambiguation_index": 0,
      "label": "original input KGs",
      "aliases": [
        "original input KGs"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The initial knowledge graphs used as inputs before processing and transformation.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-3",
          "local_name": "original input KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-original_input_kg-Mention-1"
        }
      ],
      "relevance": 0.61328125
    },
    "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.": {
      "node_id": "a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "disambiguation_index": 0,
      "label": "a predicate logic formalism which presents specific shapes in the form of paths over connected entities that are present in a KG.",
      "aliases": [
        "a predicate logic formalism which presents specific shapes in the form of paths over connected entities that are present in a KG.",
        "a predicate logic formalism which presents specific shapes in the form of paths over connected entities that are present in a KG"
      ],
      "types": [
        "KG",
        "formalism",
        "predicate logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism for presenting specific shapes as paths over connected entities within a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "a predicate logic formalism which presents specific shapes in the form of paths over connected entities that are present in a KG.",
          "local_types": [
            "predicate logic",
            "formalism",
            "KG"
          ],
          "iri": "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "a predicate logic formalism which presents specific shapes in the form of paths over connected entities that are present in a KG",
          "local_types": [
            "formalism"
          ],
          "iri": "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.-Mention-2"
        }
      ],
      "relevance": 0.61279296875
    },
    "Entity-the_size_of_the_problem_significantly__a_discussed_.": {
      "node_id": "the_size_of_the_problem_significantly__a_discussed_.",
      "disambiguation_index": 0,
      "label": "the size of the problem significantly, as discussed.",
      "aliases": [
        "the size of the problem significantly, as discussed."
      ],
      "types": [
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The sampling method for reducing the complexity of learning SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "the size of the problem significantly, as discussed.",
          "local_types": [
            "description"
          ],
          "iri": "Entity-the_size_of_the_problem_significantly__a_discussed_.-Mention-1"
        }
      ],
      "relevance": 0.61279296875
    },
    "Entity-new_fact": {
      "node_id": "new_fact",
      "disambiguation_index": 0,
      "label": "new facts",
      "aliases": [
        "new facts"
      ],
      "types": [
        "fact"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "New facts refer to a type of pattern or constraint expressed as shapes in the Shapes Constraint Language (SHACL) that can be inferred from knowledge graphs, used for validating data quality and characterizing frequent patterns.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "new facts",
          "local_types": [
            "fact"
          ],
          "iri": "Entity-new_fact-Mention-1"
        }
      ],
      "relevance": 0.61279296875
    },
    "Entity-the_full_kg": {
      "node_id": "the_full_kg",
      "disambiguation_index": 0,
      "label": "the full KG",
      "aliases": [
        "the full KG"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The full knowledge graph, referring to a massive dataset with weak inference rules and weakly-constraining data schemes.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-3",
          "local_name": "the full KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-the_full_kg-Mention-1"
        }
      ],
      "relevance": 0.61279296875
    },
    "Entity-all_28_unary_predicate_a_the_target_predicate": {
      "node_id": "all_28_unary_predicate_a_the_target_predicate",
      "disambiguation_index": 0,
      "label": "all 28 unary predicates as the target predicates",
      "aliases": [
        "all 28 unary predicates as the target predicates"
      ],
      "types": [
        "predicate",
        "target predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of 28 unary predicates that are being used as the target predicates for learning SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-2",
          "local_name": "all 28 unary predicates as the target predicates",
          "local_types": [
            "predicate",
            "target predicate"
          ],
          "iri": "Entity-all_28_unary_predicate_a_the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.61279296875
    },
    "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule": {
      "node_id": "we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule",
      "disambiguation_index": 0,
      "label": "We show how to build high-quality tree shapes from the IOP rules",
      "aliases": [
        "how to build high-quality tree shapes from the IOP rules",
        "We show how to build high-quality tree shapes from the IOP rules"
      ],
      "types": [
        "tree shape",
        "result",
        "approach",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A method for constructing high-quality tree-shaped structures using Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-4",
          "local_name": "We show how to build high-quality tree shapes from the IOP rules",
          "local_types": [
            "result",
            "tree shape"
          ],
          "iri": "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-4",
          "local_name": "how to build high-quality tree shapes from the IOP rules",
          "local_types": [
            "method",
            "approach"
          ],
          "iri": "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule-Mention-2"
        }
      ],
      "relevance": 0.6123046875
    },
    "Entity-heuristic_function": {
      "node_id": "heuristic_function",
      "disambiguation_index": 0,
      "label": "heuristic functions",
      "aliases": [
        "heuristic functions"
      ],
      "types": [
        "function",
        "heuristics"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Heuristic functions are algorithms or methods used to guide the generation of Inverse Open Path (IOP) rules in SHACLEARNER, informing the creation of IOP rules bounded by a maximum length.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-5",
          "local_name": "heuristic functions",
          "local_types": [
            "function",
            "heuristics"
          ],
          "iri": "Entity-heuristic_function-Mention-1"
        }
      ],
      "relevance": 0.6123046875
    },
    "Entity-rule_with_cardinality_car": {
      "node_id": "rule_with_cardinality_car",
      "disambiguation_index": 0,
      "label": "rules with cardinality Car",
      "aliases": [
        "rules with cardinality Car"
      ],
      "types": [
        "rule",
        "cardinality"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A rule in SHACL shape learning, characterized by its minimum support threshold (Car), used for evaluating and selecting high-quality rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "rules with cardinality Car",
          "local_types": [
            "rule",
            "cardinality"
          ],
          "iri": "Entity-rule_with_cardinality_car-Mention-1"
        }
      ],
      "relevance": 0.61181640625
    },
    "Entity-real-world_massive_knowledge_graph__kg_": {
      "node_id": "real-world_massive_knowledge_graph__kg_",
      "disambiguation_index": 0,
      "label": "real-world massive knowledge graphs (KGs)",
      "aliases": [
        "real-world massive knowledge graphs (KGs)",
        "real-world KGs"
      ],
      "types": [
        "data source",
        "knowledge graph",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Large-scale collections of structured data that represent relationships between entities in the world",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "real-world massive knowledge graphs (KGs)",
          "local_types": [
            "dataset",
            "data source"
          ],
          "iri": "Entity-real-world_massive_knowledge_graph__kg_-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-1",
          "local_name": "real-world KGs",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-real-world_massive_knowledge_graph__kg_-Mention-2"
        }
      ],
      "relevance": 0.61181640625
    },
    "Entity-iophc_indicates_the_proportion_of_rule_consequent_instance_that_are_justified_by_target_predicate_instance_in_the_kg__thereby_indicating_the_relevance_of_the_rule_to_the_target": {
      "node_id": "iophc_indicates_the_proportion_of_rule_consequent_instance_that_are_justified_by_target_predicate_instance_in_the_kg__thereby_indicating_the_relevance_of_the_rule_to_the_target",
      "disambiguation_index": 0,
      "label": "IOPHC indicates the proportion of rule consequent instances that are justified by target predicate instances in the KG, thereby indicating the relevance of the rule to the target",
      "aliases": [
        "IOPHC indicates the proportion of rule consequent instances that are justified by target predicate instances in the KG, thereby indicating the relevance of the rule to the target"
      ],
      "types": [
        "metric",
        "relevance"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A metric measuring the proportion of rule consequent instances that are justified by target predicate instances in a Knowledge Graph (KG), indicating the relevance of the rule to its target.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "IOPHC indicates the proportion of rule consequent instances that are justified by target predicate instances in the KG, thereby indicating the relevance of the rule to the target",
          "local_types": [
            "metric",
            "relevance"
          ],
          "iri": "Entity-iophc_indicates_the_proportion_of_rule_consequent_instance_that_are_justified_by_target_predicate_instance_in_the_kg__thereby_indicating_the_relevance_of_the_rule_to_the_target-Mention-1"
        }
      ],
      "relevance": 0.61181640625
    },
    "Entity-many_case": {
      "node_id": "many_case",
      "disambiguation_index": 0,
      "label": "many cases",
      "aliases": [
        "many cases"
      ],
      "types": [
        "situation",
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of examples or situations where SHACL shapes need to be learned from knowledge graphs, often requiring specific shape patterns and minimum cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "many cases",
          "local_types": [
            "situation",
            "example"
          ],
          "iri": "Entity-many_case-Mention-1"
        }
      ],
      "relevance": 0.61181640625
    },
    "Entity-for_the_subject_argument_and_the_object_argument_of_each_target_predicate": {
      "node_id": "for_the_subject_argument_and_the_object_argument_of_each_target_predicate",
      "disambiguation_index": 0,
      "label": "for the subject argument and the object argument of each target predicate",
      "aliases": [
        "for the subject argument and the object argument of each target predicate"
      ],
      "types": [
        "predicate",
        "argument",
        "target"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A procedure used in SHACLearner to derive tree shapes from annotated IOP rules, which involves aggregating IOP rules for the subject and object arguments of each target predicate using a greedy search.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "for the subject argument and the object argument of each target predicate",
          "local_types": [
            "predicate",
            "argument",
            "target"
          ],
          "iri": "Entity-for_the_subject_argument_and_the_object_argument_of_each_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.61181640625
    },
    "Entity-every_high-quality_rule": {
      "node_id": "every_high-quality_rule",
      "disambiguation_index": 0,
      "label": "every high-quality rule",
      "aliases": [
        "every high-quality rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "High-quality rules learned from knowledge graphs using SHACLEARNER's algorithm",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-5",
          "local_name": "every high-quality rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-every_high-quality_rule-Mention-1"
        }
      ],
      "relevance": 0.61181640625
    },
    "Entity-iop_rule_discovered_in_the_experiment": {
      "node_id": "iop_rule_discovered_in_the_experiment",
      "disambiguation_index": 0,
      "label": "IOP rules discovered in the experiments",
      "aliases": [
        "IOP rules discovered in the experiments"
      ],
      "types": [
        "experiments",
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of logical rules derived from experimental data, which describe specific shape patterns present in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-1",
          "local_name": "IOP rules discovered in the experiments",
          "local_types": [
            "experiments",
            "rules"
          ],
          "iri": "Entity-iop_rule_discovered_in_the_experiment-Mention-1"
        }
      ],
      "relevance": 0.61181640625
    },
    "Entity-an_example_of_tree_shape_learning": {
      "node_id": "an_example_of_tree_shape_learning",
      "disambiguation_index": 0,
      "label": "an example of tree shape learning",
      "aliases": [
        "an example of tree shape learning"
      ],
      "types": [
        "learning",
        "tree shape learning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific instance or illustration of how SHACLEARNER learns and generates complex tree-shaped constraints on graph data, as presented in a fragment from DBpedia.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "an example of tree shape learning",
          "local_types": [
            "learning",
            "tree shape learning"
          ],
          "iri": "Entity-an_example_of_tree_shape_learning-Mention-1"
        }
      ],
      "relevance": 0.61181640625
    },
    "Entity-our_system": {
      "node_id": "our_system",
      "disambiguation_index": 0,
      "label": "our system",
      "aliases": [
        "our system"
      ],
      "types": [
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The SHACLEARNER method for learning high-quality shapes from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-4",
          "local_name": "our system",
          "local_types": [
            "system"
          ],
          "iri": "Entity-our_system-Mention-1"
        }
      ],
      "relevance": 0.611328125
    },
    "Entity-these_method_traverse_the_kg_in_a_breadth-first_manner": {
      "node_id": "these_method_traverse_the_kg_in_a_breadth-first_manner",
      "disambiguation_index": 0,
      "label": "these methods traverse the KG in a breadth-first manner",
      "aliases": [
        "these methods traverse the KG in a breadth-first manner"
      ],
      "types": [
        "methodology",
        "algorithmic approach"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Methods for completing knowledge graphs (KGs) by predicting missing facts",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-3",
          "local_name": "these methods traverse the KG in a breadth-first manner",
          "local_types": [
            "methodology",
            "algorithmic approach"
          ],
          "iri": "Entity-these_method_traverse_the_kg_in_a_breadth-first_manner-Mention-1"
        }
      ],
      "relevance": 0.61083984375
    },
    "Entity-we_propose_a_predicate_calculus_formalism": {
      "node_id": "we_propose_a_predicate_calculus_formalism",
      "disambiguation_index": 0,
      "label": "we propose a predicate calculus formalism",
      "aliases": [
        "we propose a predicate calculus formalism"
      ],
      "types": [
        "proposal",
        "formalism"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A proposed logical framework for expressing constraints on graph data as shapes, used to validate knowledge graphs and guide their population.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "we propose a predicate calculus formalism",
          "local_types": [
            "proposal",
            "formalism"
          ],
          "iri": "Entity-we_propose_a_predicate_calculus_formalism-Mention-1"
        }
      ],
      "relevance": 0.6103515625
    },
    "Entity-the_quality_and_quantity_of_learnt_rule": {
      "node_id": "the_quality_and_quantity_of_learnt_rule",
      "disambiguation_index": 0,
      "label": "the quality and quantity of learnt rules",
      "aliases": [
        "the quality and quantity of learnt rules"
      ],
      "types": [
        "metric",
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of IOP rules learned by SHACLEARNER, categorized by their quality (IOPSC) measured as a metric for evaluating the effectiveness and generality of learnt shapes.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-1-Sentence-2",
          "local_name": "the quality and quantity of learnt rules",
          "local_types": [
            "metric",
            "evaluation"
          ],
          "iri": "Entity-the_quality_and_quantity_of_learnt_rule-Mention-1"
        }
      ],
      "relevance": 0.60986328125
    },
    "Entity-the_predicate_involved_in_each_rule": {
      "node_id": "the_predicate_involved_in_each_rule",
      "disambiguation_index": 0,
      "label": "the predicates involved in each rule",
      "aliases": [
        "the predicates involved in each rule"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of logical statements or conditions that are used to generate SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "the predicates involved in each rule",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-the_predicate_involved_in_each_rule-Mention-1"
        }
      ],
      "relevance": 0.609375
    },
    "Entity-a_set_of_rule": {
      "node_id": "a_set_of_rule",
      "disambiguation_index": 0,
      "label": "a set of rules",
      "aliases": [
        "a set of rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A formalism that presents specific shape patterns in the form of paths over connected entities present in a Knowledge Graph, used for expressing constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-2",
          "local_name": "a set of rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-a_set_of_rule-Mention-1"
        }
      ],
      "relevance": 0.609375
    },
    "Entity-several_shape_each_for_various_target_predicate": {
      "node_id": "several_shape_each_for_various_target_predicate",
      "disambiguation_index": 0,
      "label": "several shapes each for various target predicates",
      "aliases": [
        "several shapes each for various target predicates"
      ],
      "types": [
        "shapes",
        "predicates"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of shape patterns, each corresponding to a different predicate or relationship type, learned from massive knowledge graphs using the SHACLEARNER algorithm.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-2",
          "local_name": "several shapes each for various target predicates",
          "local_types": [
            "shapes",
            "predicates"
          ],
          "iri": "Entity-several_shape_each_for_various_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.60888671875
    },
    "Entity-this": {
      "node_id": "this",
      "disambiguation_index": 0,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "statement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The phenomenon that the majority of learned SHACL shapes have lower IOPSC and IOPHC, which is expected due to the statistical likelihood of poor quality rules being higher.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-5",
          "local_name": "This",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-this-Mention-1"
        }
      ],
      "relevance": 0.60888671875
    },
    "Entity-to_prune_the_class_with_few_instance_for_which_learning_may_be_pointless__we_consider_only_our_unary_predicate_which_have_at_least_one_hundred_fact_.": {
      "node_id": "to_prune_the_class_with_few_instance_for_which_learning_may_be_pointless__we_consider_only_our_unary_predicate_which_have_at_least_one_hundred_fact_.",
      "disambiguation_index": 0,
      "label": "To prune the classes with few instances for which learning may be pointless, we consider only our unary predicates which have at least one hundred facts.",
      "aliases": [
        "To prune the classes with few instances for which learning may be pointless, we consider only our unary predicates which have at least one hundred facts."
      ],
      "types": [
        "pruning method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pruning method that considers only unary predicates having at least 100 facts to learn SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-3",
          "local_name": "To prune the classes with few instances for which learning may be pointless, we consider only our unary predicates which have at least one hundred facts.",
          "local_types": [
            "pruning method"
          ],
          "iri": "Entity-to_prune_the_class_with_few_instance_for_which_learning_may_be_pointless__we_consider_only_our_unary_predicate_which_have_at_least_one_hundred_fact_.-Mention-1"
        }
      ],
      "relevance": 0.6083984375
    },
    "Entity-it_will_be_incomplete_because_of_the_evolving_nature_of_human_knowledge": {
      "node_id": "it_will_be_incomplete_because_of_the_evolving_nature_of_human_knowledge",
      "disambiguation_index": 0,
      "label": "it will be incomplete because of the evolving nature of human knowledge",
      "aliases": [
        "it will be incomplete because of the evolving nature of human knowledge"
      ],
      "types": [
        "conclusion",
        "knowledge evolution"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The inherent incompleteness of large-scale Knowledge Graphs (KGs) due to their evolving nature, cultural bias, and resource constraints.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "it will be incomplete because of the evolving nature of human knowledge",
          "local_types": [
            "conclusion",
            "knowledge evolution"
          ],
          "iri": "Entity-it_will_be_incomplete_because_of_the_evolving_nature_of_human_knowledge-Mention-1"
        }
      ],
      "relevance": 0.6083984375
    },
    "Entity-schema_information_(1)": {
      "node_id": "schema_information_(1)",
      "disambiguation_index": 1,
      "label": "schema information",
      "aliases": [
        "schema information"
      ],
      "types": [
        "information"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Information about the structure, organization, and constraints of data in a Knowledge Graph (KG), used to define schema for KGs stored as an RDF graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "schema information",
          "local_types": [
            "information"
          ],
          "iri": "Entity-schema_information_(1)-Mention-1"
        }
      ],
      "relevance": 0.6083984375
    },
    "Entity-the_relationship_between_an_op_rule_and_it_converse_iop_version": {
      "node_id": "the_relationship_between_an_op_rule_and_it_converse_iop_version",
      "disambiguation_index": 0,
      "label": "the relationship between an OP rule and its converse IOP version",
      "aliases": [
        "the relationship between an OP rule and its converse IOP version"
      ],
      "types": [
        "relationship",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The relationship between an Open Path (OP) rule and its converse Inverse Open Path (IOP) version, which corresponds to a SHACL shape.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "the relationship between an OP rule and its converse IOP version",
          "local_types": [
            "relationship",
            "concept"
          ],
          "iri": "Entity-the_relationship_between_an_op_rule_and_it_converse_iop_version-Mention-1"
        }
      ],
      "relevance": 0.6083984375
    },
    "Entity-shacl_tree": {
      "node_id": "shacl_tree",
      "disambiguation_index": 0,
      "label": "SHACL trees",
      "aliases": [
        "SHACL trees"
      ],
      "types": [
        "tree data structure",
        "tree",
        "data structure",
        "knowledge representation",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A data structure used for knowledge representation and graphing that represents a hierarchical organization of nodes.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "SHACL trees",
          "local_types": [
            "tree data structure",
            "tree",
            "data structure",
            "knowledge representation",
            "knowledge graph"
          ],
          "iri": "Entity-shacl_tree-Mention-1"
        }
      ],
      "relevance": 0.60791015625
    },
    "Entity-the_support_for_an_iop_rule_is_the_same_a_the_corresponding_opsc": {
      "node_id": "the_support_for_an_iop_rule_is_the_same_a_the_corresponding_opsc",
      "disambiguation_index": 0,
      "label": "the support for an IOP rule is the same as the corresponding OPSC",
      "aliases": [
        "the support for an IOP rule is the same as the corresponding OPSC"
      ],
      "types": [
        "support",
        "comparison"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept of comparing the support for an Inverse Open Path (IOP) rule with its corresponding OPSC, indicating that both types of rules have the same level of support in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "the support for an IOP rule is the same as the corresponding OPSC",
          "local_types": [
            "support",
            "comparison"
          ],
          "iri": "Entity-the_support_for_an_iop_rule_is_the_same_a_the_corresponding_opsc-Mention-1"
        }
      ],
      "relevance": 0.60693359375
    },
    "Entity-a_formalisation": {
      "node_id": "a_formalisation",
      "disambiguation_index": 0,
      "label": "A formalisation",
      "aliases": [
        "A formalisation"
      ],
      "types": [
        "formalization"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The presentation or explanation of an approach to learning SHACL shapes from knowledge graphs without logical foundations, which lacks essential shape quality measures for large-scale shape mining.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "A formalisation",
          "local_types": [
            "formalization"
          ],
          "iri": "Entity-a_formalisation-Mention-1"
        }
      ],
      "relevance": 0.60693359375
    },
    "Entity-kg": {
      "node_id": "kg",
      "disambiguation_index": 0,
      "label": "KGs",
      "aliases": [
        "KG",
        "KGs"
      ],
      "types": [
        "information system",
        "database",
        "ontology",
        "abbreviation",
        "graph database",
        "model",
        "schema-free database",
        "knowledge_graph",
        "data sets",
        "knowledge graphs",
        "data storage",
        "notation",
        "acronym",
        "datasets",
        "data model",
        "data representation",
        "knowledge graph",
        "Knowledge Graph",
        "database system",
        "concept",
        "system",
        "data structure",
        "dataset",
        "technology",
        "data storage system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A type of database that stores structured information as a network of interconnected nodes, often used to represent knowledge or relationships.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "database system",
            "concept",
            "knowledge_graph",
            "technology",
            "data storage"
          ],
          "iri": "Entity-kg-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-2"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "KGs",
          "local_types": [
            "database",
            "Knowledge Graph",
            "technology"
          ],
          "iri": "Entity-kg-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "data model",
            "concept",
            "technology"
          ],
          "iri": "Entity-kg-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "concept"
          ],
          "iri": "Entity-kg-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-5",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "Knowledge Graph"
          ],
          "iri": "Entity-kg-Mention-6"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data model",
            "system",
            "acronym"
          ],
          "iri": "Entity-kg-Mention-7"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-5",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-8"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-5",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "concept"
          ],
          "iri": "Entity-kg-Mention-9"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "schema-free database",
            "knowledge graph",
            "database",
            "concept"
          ],
          "iri": "Entity-kg-Mention-10"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure",
            "concept"
          ],
          "iri": "Entity-kg-Mention-11"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-12"
        },
        {
          "reference": "Section-14-Paragraph-5-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "concept",
            "model"
          ],
          "iri": "Entity-kg-Mention-13"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-14"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "dataset"
          ],
          "iri": "Entity-kg-Mention-15"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graphs",
            "database",
            "data sets",
            "data structure",
            "technology",
            "knowledge graph",
            "data storage system"
          ],
          "iri": "Entity-kg-Mention-16"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "notation",
            "abbreviation",
            "concept"
          ],
          "iri": "Entity-kg-Mention-17"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "knowledge graphs"
          ],
          "iri": "Entity-kg-Mention-18"
        },
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-19"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-20"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-21"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-5",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-22"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-23"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-6",
          "local_name": "KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-24"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-25"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-kg-Mention-26"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-6",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "notation",
            "abbreviation",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-27"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-28"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-29"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-30"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-31"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-6",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-32"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-33"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-34"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-35"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "schema-free database",
            "database",
            "knowledge graph",
            "concept"
          ],
          "iri": "Entity-kg-Mention-36"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-37"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database system"
          ],
          "iri": "Entity-kg-Mention-38"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "schema-free database",
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-39"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-40"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "schema-free database",
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-41"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-42"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-43"
        },
        {
          "reference": "Section-6-Paragraph-8-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-44"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-45"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-46"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-47"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "dataset"
          ],
          "iri": "Entity-kg-Mention-48"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-49"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-50"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-51"
        },
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-52"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-3",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-53"
        },
        {
          "reference": "Section-12-Paragraph-9-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-54"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database system",
            "data structure",
            "dataset"
          ],
          "iri": "Entity-kg-Mention-55"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-3",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "data structure",
            "dataset"
          ],
          "iri": "Entity-kg-Mention-56"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "concept",
            "Knowledge Graph",
            "data structure",
            "dataset",
            "technology",
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-57"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-58"
        },
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database",
            "data structure",
            "dataset"
          ],
          "iri": "Entity-kg-Mention-59"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-5",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-60"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-8",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-61"
        },
        {
          "reference": "Section-14-Paragraph-6-Sentence-3",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "data representation"
          ],
          "iri": "Entity-kg-Mention-62"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-63"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-64"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data model"
          ],
          "iri": "Entity-kg-Mention-65"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-4",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-66"
        },
        {
          "reference": "Section-15-Paragraph-6-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "information system",
            "database",
            "datasets",
            "knowledge graphs",
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-67"
        },
        {
          "reference": "Section-15-Paragraph-6-Sentence-3",
          "local_name": "KGs",
          "local_types": [
            "knowledge graphs",
            "datasets"
          ],
          "iri": "Entity-kg-Mention-68"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-5",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-69"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-70"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "graph database"
          ],
          "iri": "Entity-kg-Mention-71"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "dataset",
            "acronym"
          ],
          "iri": "Entity-kg-Mention-72"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "ontology"
          ],
          "iri": "Entity-kg-Mention-73"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graphs",
            "data sets"
          ],
          "iri": "Entity-kg-Mention-74"
        },
        {
          "reference": "Section-18-Paragraph-3-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "data sets",
            "knowledge graphs"
          ],
          "iri": "Entity-kg-Mention-75"
        },
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graphs",
            "data sets"
          ],
          "iri": "Entity-kg-Mention-76"
        },
        {
          "reference": "Section-18-Paragraph-4-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "database",
            "information system"
          ],
          "iri": "Entity-kg-Mention-77"
        },
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "data sets",
            "data structure",
            "knowledge graphs"
          ],
          "iri": "Entity-kg-Mention-78"
        }
      ],
      "relevance": 0.6064453125
    },
    "Entity-to_validate_a_kg__to_underpin_manual_kg_editing_task__and_to_offer_insight_into_kg_structure": {
      "node_id": "to_validate_a_kg__to_underpin_manual_kg_editing_task__and_to_offer_insight_into_kg_structure",
      "disambiguation_index": 0,
      "label": "to validate a KG, to underpin manual KG editing tasks, and to offer insight into KG structure",
      "aliases": [
        "to validate a KG, to underpin manual KG editing tasks, and to offer insight into KG structure"
      ],
      "types": [
        "purpose"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACL shape",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "to validate a KG, to underpin manual KG editing tasks, and to offer insight into KG structure",
          "local_types": [
            "purpose"
          ],
          "iri": "Entity-to_validate_a_kg__to_underpin_manual_kg_editing_task__and_to_offer_insight_into_kg_structure-Mention-1"
        }
      ],
      "relevance": 0.6064453125
    },
    "Entity-open_path_rule_learner_oprl": {
      "node_id": "open_path_rule_learner_oprl",
      "disambiguation_index": 0,
      "label": "open path rule learner OPRL",
      "aliases": [
        "open path rule learner OPRL"
      ],
      "types": [
        "algorithm",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A state-of-the-art embedding-based open path rule learning algorithm used as the starting point for adapting its methodology to learn annotated Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "open path rule learner OPRL",
          "local_types": [
            "algorithm",
            "methodology"
          ],
          "iri": "Entity-open_path_rule_learner_oprl-Mention-1"
        }
      ],
      "relevance": 0.6064453125
    },
    "Entity-the_initial_iop_mining_time": {
      "node_id": "the_initial_iop_mining_time",
      "disambiguation_index": 0,
      "label": "the initial IOP mining time",
      "aliases": [
        "the initial IOP mining time"
      ],
      "types": [
        "time",
        "mining time"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The amount of time required for initially discovering and extracting Inverse Open Path (IOP) rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "the initial IOP mining time",
          "local_types": [
            "time",
            "mining time"
          ],
          "iri": "Entity-the_initial_iop_mining_time-Mention-1"
        }
      ],
      "relevance": 0.6064453125
    },
    "Entity-shape_constraint_language": {
      "node_id": "shape_constraint_language",
      "disambiguation_index": 0,
      "label": "Shapes Constraint Language",
      "aliases": [
        "Shapes Constraint Language"
      ],
      "types": [
        "standard",
        "language",
        "standard language"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A standard language used to define constraints and rules for shaping data structures, particularly in the context of knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "Shapes Constraint Language",
          "local_types": [
            "standard",
            "language",
            "standard language"
          ],
          "iri": "Entity-shape_constraint_language-Mention-1"
        }
      ],
      "relevance": 0.60498046875
    },
    "Entity-frequent_pattern_in_a_kg": {
      "node_id": "frequent_pattern_in_a_kg",
      "disambiguation_index": 0,
      "label": "frequent patterns in a KG",
      "aliases": [
        "characterising the frequent patterns in a KG",
        "frequent patterns in a KG"
      ],
      "types": [
        "knowledge graph",
        "KG",
        "pattern recognition",
        "pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Recurring relationships or structures within a knowledge graph",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-1",
          "local_name": "frequent patterns in a KG",
          "local_types": [
            "pattern",
            "KG"
          ],
          "iri": "Entity-frequent_pattern_in_a_kg-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-1",
          "local_name": "characterising the frequent patterns in a KG",
          "local_types": [
            "pattern recognition",
            "knowledge graph"
          ],
          "iri": "Entity-frequent_pattern_in_a_kg-Mention-2"
        }
      ],
      "relevance": 0.60498046875
    },
    "Entity-a_set_of_rule_and_shape_are_provided": {
      "node_id": "a_set_of_rule_and_shape_are_provided",
      "disambiguation_index": 0,
      "label": "a set of rules and shapes are provided",
      "aliases": [
        "a set of rules and shapes are provided"
      ],
      "types": [
        "set",
        "rules",
        "shapes"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A method for detecting SHACL shape violations when applying inference rules",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-2",
          "local_name": "a set of rules and shapes are provided",
          "local_types": [
            "set",
            "rules",
            "shapes"
          ],
          "iri": "Entity-a_set_of_rule_and_shape_are_provided-Mention-1"
        }
      ],
      "relevance": 0.60498046875
    },
    "Entity-we_observe_that": {
      "node_id": "we_observe_that",
      "disambiguation_index": 0,
      "label": "We observe that",
      "aliases": [
        "We observe that"
      ],
      "types": [
        "statement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept referred to by 'We observe that' is the relationship between Open Path (OP) rules and Inverse Open Path (IOP) rules, specifically how IOP rules correspond to SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "We observe that",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-we_observe_that-Mention-1"
        }
      ],
      "relevance": 0.60498046875
    },
    "Entity-pt__x__z0__(1)": {
      "node_id": "pt__x__z0__(1)",
      "disambiguation_index": 1,
      "label": "P't(x, z0)",
      "aliases": [
        "P't(x, z0)"
      ],
      "types": [
        "tree",
        "predicate",
        "mathematical expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A mathematical expression representing a tree shape in SHACL (Shapes Constraint Language) that defines a path of connected entities and their relationships in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "P't(x, z0)",
          "local_types": [
            "tree",
            "predicate",
            "mathematical expression"
          ],
          "iri": "Entity-pt__x__z0__(1)-Mention-1"
        }
      ],
      "relevance": 0.6044921875
    },
    "Entity-an_op_rule": {
      "node_id": "an_op_rule",
      "disambiguation_index": 0,
      "label": "an OP rule",
      "aliases": [
        "an OP rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A specific type of rule, also known as an open path rule, which expresses simple shape patterns in the form of paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "an OP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-an_op_rule-Mention-1"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-semi-automatic_manner__it_provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape": {
      "node_id": "semi-automatic_manner__it_provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "disambiguation_index": 0,
      "label": "semi-automatic manner: it provides a sample of data to an off-the-shelf graph structure learner and provides the output in an interactive interface for a human user to create SHACL shapes",
      "aliases": [
        "it provides a sample of data to an off-the-shelf graph structure learner",
        "semi-automatic manner: it provides a sample of data to an off-the-shelf graph structure learner and provides the output in an interactive interface for a human user to create SHACL shapes"
      ],
      "types": [
        "approach",
        "method",
        "interface design",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An approach to learning SHACL shapes from knowledge graphs that involves providing a sample of data to an off-the-shelf graph structure learner, followed by an interactive interface for creating SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "semi-automatic manner: it provides a sample of data to an off-the-shelf graph structure learner and provides the output in an interactive interface for a human user to create SHACL shapes",
          "local_types": [
            "approach",
            "interface design"
          ],
          "iri": "Entity-semi-automatic_manner__it_provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "it provides a sample of data to an off-the-shelf graph structure learner",
          "local_types": [
            "method",
            "data"
          ],
          "iri": "Entity-semi-automatic_manner__it_provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape-Mention-2"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-a_state-of-the-art_embedding-based_open_path_rule_learner": {
      "node_id": "a_state-of-the-art_embedding-based_open_path_rule_learner",
      "disambiguation_index": 0,
      "label": "a state-of-the-art embedding-based open path rule learner",
      "aliases": [
        "a state-of-the-art embedding-based open path rule learner",
        "an embedding-based open path rule learner"
      ],
      "types": [
        "algorithm",
        "learner"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A machine learning algorithm that learns high-quality shapes for knowledge graphs by adapting a state-of-the-art approach to learn open path rules.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-5",
          "local_name": "a state-of-the-art embedding-based open path rule learner",
          "local_types": [
            "learner"
          ],
          "iri": "Entity-a_state-of-the-art_embedding-based_open_path_rule_learner-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-4",
          "local_name": "an embedding-based open path rule learner",
          "local_types": [
            "algorithm",
            "learner"
          ],
          "iri": "Entity-a_state-of-the-art_embedding-based_open_path_rule_learner-Mention-2"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-the_shape_(2)": {
      "node_id": "the_shape_(2)",
      "disambiguation_index": 2,
      "label": "the shape",
      "aliases": [
        "the shape"
      ],
      "types": [
        "shape"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A path shape constraint expressed as a sequence of predicates connected by closed intermediate variables and terminating with open variables, used for validating data quality in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "the shape",
          "local_types": [
            "shape"
          ],
          "iri": "Entity-the_shape_(2)-Mention-1"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-universal_variable_in_the_body": {
      "node_id": "universal_variable_in_the_body",
      "disambiguation_index": 0,
      "label": "universal variables in the body",
      "aliases": [
        "universal variables in the body"
      ],
      "types": [
        "variable",
        "body"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Universal variables that appear in the bodies of inverse open path (IOP) rules, which are used to express constraints on graph data and validate knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "universal variables in the body",
          "local_types": [
            "variable",
            "body"
          ],
          "iri": "Entity-universal_variable_in_the_body-Mention-1"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-quality_measure_that_are_novel_for_shaclearner": {
      "node_id": "quality_measure_that_are_novel_for_shaclearner",
      "disambiguation_index": 0,
      "label": "quality measures that are novel for SHACLearner",
      "aliases": [
        "quality measures that are novel for SHACLearner"
      ],
      "types": [
        "research outcome",
        "SHACLearner"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Novel quality measures learned by SHACLEARNER, a method to learn high-quality rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "quality measures that are novel for SHACLearner",
          "local_types": [
            "research outcome",
            "SHACLearner"
          ],
          "iri": "Entity-quality_measure_that_are_novel_for_shaclearner-Mention-1"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-yago": {
      "node_id": "yago",
      "disambiguation_index": 0,
      "label": "Yago",
      "aliases": [
        "Yago"
      ],
      "types": [
        "KG",
        "ontology",
        "massive real-world benchmark KG",
        "project",
        "information resource",
        "knowledge base",
        "dataset",
        "research",
        "knowledge graph"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A massive real-world benchmark knowledge graph and information resource.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "Yago",
          "local_types": [
            "KG",
            "ontology",
            "project",
            "information resource",
            "dataset",
            "research",
            "knowledge graph"
          ],
          "iri": "Entity-yago-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "Yago",
          "local_types": [
            "knowledge graph",
            "massive real-world benchmark KG",
            "knowledge base",
            "dataset"
          ],
          "iri": "Entity-yago-Mention-2"
        }
      ],
      "relevance": 0.603515625
    },
    "Entity-discovered_tree": {
      "node_id": "discovered_tree",
      "disambiguation_index": 0,
      "label": "discovered trees",
      "aliases": [
        "discovered trees"
      ],
      "types": [
        "biological entity",
        "results",
        "plant species"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of complex shapes learned from Inverse Open Path rules discovered during experiments on massive Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "discovered trees",
          "local_types": [
            "biological entity",
            "results",
            "plant species"
          ],
          "iri": "Entity-discovered_tree-Mention-1"
        }
      ],
      "relevance": 0.603515625
    },
    "Entity-the_pattern": {
      "node_id": "the_pattern",
      "disambiguation_index": 0,
      "label": "The pattern",
      "aliases": [
        "The pattern"
      ],
      "types": [
        "pattern"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific form or structure of SHACL shapes, corresponding to inverse open path rules that express simple shape patterns and can be used as a building block for more complex shapes.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "The pattern",
          "local_types": [
            "pattern"
          ],
          "iri": "Entity-the_pattern-Mention-1"
        }
      ],
      "relevance": 0.603515625
    },
    "Entity-benchmark_kg": {
      "node_id": "benchmark_kg",
      "disambiguation_index": 0,
      "label": "benchmark KGs",
      "aliases": [
        "benchmark KGs"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of standard knowledge graphs used for evaluation and comparison purposes.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-1",
          "local_name": "benchmark KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-benchmark_kg-Mention-1"
        }
      ],
      "relevance": 0.60302734375
    },
    "Entity-real-world_kg_model": {
      "node_id": "real-world_kg_model",
      "disambiguation_index": 0,
      "label": "real-world KG models",
      "aliases": [
        "real-world KG models"
      ],
      "types": [
        "information system",
        "KG model",
        "data model",
        "model",
        "knowledge graph model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Real-world knowledge graph models are data structures that represent relationships between entities and concepts in everyday life, often used for information storage and retrieval.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-1",
          "local_name": "real-world KG models",
          "local_types": [
            "information system",
            "KG model",
            "data model",
            "model",
            "knowledge graph model"
          ],
          "iri": "Entity-real-world_kg_model-Mention-1"
        }
      ],
      "relevance": 0.60302734375
    },
    "Entity-the_sequence_of_predicate_p1__p2__...__pn": {
      "node_id": "the_sequence_of_predicate_p1__p2__...__pn",
      "disambiguation_index": 0,
      "label": "the sequence of predicates P1 ^ P2 ^ ... ^ Pn",
      "aliases": [
        "the sequence of predicates P1 ^ P2 ^ ... ^ Pn"
      ],
      "types": [
        "sequence",
        "predicates"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The head of an Inverse Open Path (IOP) rule, which represents a path over connected entities in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "the sequence of predicates P1 ^ P2 ^ ... ^ Pn",
          "local_types": [
            "sequence",
            "predicates"
          ],
          "iri": "Entity-the_sequence_of_predicate_p1__p2__...__pn-Mention-1"
        }
      ],
      "relevance": 0.60302734375
    },
    "Entity-many_kg_are_augmented_with_type_information": {
      "node_id": "many_kg_are_augmented_with_type_information",
      "disambiguation_index": 0,
      "label": "many KGs are augmented with type information",
      "aliases": [
        "many KGs are augmented with type information"
      ],
      "types": [
        "augmentation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Knowledge Graphs (KGs) that have been augmented with type information",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "many KGs are augmented with type information",
          "local_types": [
            "augmentation"
          ],
          "iri": "Entity-many_kg_are_augmented_with_type_information-Mention-1"
        }
      ],
      "relevance": 0.6025390625
    },
    "Entity-the_method_for_aggregating_iop_rule_into_tree": {
      "node_id": "the_method_for_aggregating_iop_rule_into_tree",
      "disambiguation_index": 0,
      "label": "the method for aggregating IOP rules into trees",
      "aliases": [
        "the running time for aggregating IOP rules into trees",
        "the method for aggregating IOP rules into trees"
      ],
      "types": [
        "algorithm",
        "method",
        "algorithm-for-aggregating-IOP-rules",
        "time measurement",
        "time complexity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel method to combine Inverse Open Path (IOP) rules into tree shapes",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "the method for aggregating IOP rules into trees",
          "local_types": [
            "method",
            "algorithm-for-aggregating-IOP-rules"
          ],
          "iri": "Entity-the_method_for_aggregating_iop_rule_into_tree-Mention-1"
        },
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "the running time for aggregating IOP rules into trees",
          "local_types": [
            "algorithm",
            "time measurement",
            "time complexity"
          ],
          "iri": "Entity-the_method_for_aggregating_iop_rule_into_tree-Mention-2"
        }
      ],
      "relevance": 0.6025390625
    },
    "Entity-an_adjacency_matrix_representation_of_the_kg": {
      "node_id": "an_adjacency_matrix_representation_of_the_kg",
      "disambiguation_index": 0,
      "label": "an adjacency matrix representation of the KG",
      "aliases": [
        "an adjacency matrix representation of the KG"
      ],
      "types": [
        "representation",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A data structure representing a knowledge graph as a set of square matrices, where each matrix corresponds to a predicate and its elements indicate whether two entities are connected by that predicate.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-4",
          "local_name": "an adjacency matrix representation of the KG",
          "local_types": [
            "representation",
            "algorithm"
          ],
          "iri": "Entity-an_adjacency_matrix_representation_of_the_kg-Mention-1"
        }
      ],
      "relevance": 0.6025390625
    },
    "Entity-the_core_of_shacl": {
      "node_id": "the_core_of_shacl",
      "disambiguation_index": 0,
      "label": "the core of SHACL",
      "aliases": [
        "the SHACL Core features",
        "the core of SHACL"
      ],
      "types": [
        "standard",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The central or fundamental aspect of SHACL (Shape Constraint Language) that defines how node and property shapes constrain data.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "the core of SHACL",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_core_of_shacl-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-6-Sentence-1",
          "local_name": "the SHACL Core features",
          "local_types": [
            "standard"
          ],
          "iri": "Entity-the_core_of_shacl-Mention-2"
        }
      ],
      "relevance": 0.60205078125
    },
    "Entity-the_building_block": {
      "node_id": "the_building_block",
      "disambiguation_index": 0,
      "label": "The building block",
      "aliases": [
        "The building block"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A sequence of predicates, serving as the fundamental structure for expressing various types of shape constraints in Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "The building block",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_building_block-Mention-1"
        }
      ],
      "relevance": 0.60205078125
    },
    "Entity-shaclearner_with_respect_to_shacl_core": {
      "node_id": "shaclearner_with_respect_to_shacl_core",
      "disambiguation_index": 0,
      "label": "SHACLearner with respect to SHACL Core",
      "aliases": [
        "SHACLearner with respect to SHACL Core"
      ],
      "types": [
        "tool",
        "comparison"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A tool that learns SHACL shapes from knowledge graphs with respect to SHACL Core features.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-2",
          "local_name": "SHACLearner with respect to SHACL Core",
          "local_types": [
            "tool",
            "comparison"
          ],
          "iri": "Entity-shaclearner_with_respect_to_shacl_core-Mention-1"
        }
      ],
      "relevance": 0.60205078125
    },
    "Entity-functional_graph_dependency__fgd_": {
      "node_id": "functional_graph_dependency__fgd_",
      "disambiguation_index": 0,
      "label": "Functional Graph Dependency (FGD)",
      "aliases": [
        "Functional Graph Dependency (FGD)"
      ],
      "types": [
        "dependency",
        "relationship",
        "graph theory concept",
        "constraint",
        "formalism",
        "pattern recognition",
        "constraint language",
        "graph theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A formalism that defines constraints like entity types in domain and range of predicates, or number of entities related by a specific predicate to make a Knowledge Graph consistent.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "Functional Graph Dependency (FGD)",
          "local_types": [
            "dependency",
            "relationship",
            "graph theory concept",
            "constraint",
            "formalism",
            "pattern recognition",
            "constraint language",
            "graph theory"
          ],
          "iri": "Entity-functional_graph_dependency__fgd_-Mention-1"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-formalisation_of_the_approach_is_given__but_there_are_no_shape_quality_measure_that_are_essential_for_large_scale_shape_mining": {
      "node_id": "formalisation_of_the_approach_is_given__but_there_are_no_shape_quality_measure_that_are_essential_for_large_scale_shape_mining",
      "disambiguation_index": 0,
      "label": "formalisation of the approach is given, but there are no shape quality measures that are essential for large scale shape mining",
      "aliases": [
        "formalisation of the approach is given, but there are no shape quality measures that are essential for large scale shape mining"
      ],
      "types": [
        "evaluation criterion",
        "challenge"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Another work provides an interactive framework to define SHACL shapes with different complexities, including nested patterns that are similar to the trees that we use.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "formalisation of the approach is given, but there are no shape quality measures that are essential for large scale shape mining",
          "local_types": [
            "evaluation criterion",
            "challenge"
          ],
          "iri": "Entity-formalisation_of_the_approach_is_given__but_there_are_no_shape_quality_measure_that_are_essential_for_large_scale_shape_mining-Mention-1"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-an_embedding_learner": {
      "node_id": "an_embedding_learner",
      "disambiguation_index": 0,
      "label": "an embedding learner",
      "aliases": [
        "an embedding learner"
      ],
      "types": [
        "learner",
        "embedding"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A machine learning model that learns high-quality SHACL shapes from knowledge graphs by using embeddings and heuristic functions.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "an embedding learner",
          "local_types": [
            "learner",
            "embedding"
          ],
          "iri": "Entity-an_embedding_learner-Mention-1"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-the_left-hand_tree_in_fig_._3": {
      "node_id": "the_left-hand_tree_in_fig_._3",
      "disambiguation_index": 0,
      "label": "the left-hand tree in Fig. 3",
      "aliases": [
        "the left-hand tree in Fig. 3"
      ],
      "types": [
        "figure",
        "tree"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The SHACL shape depicted as a tree structure on the left-hand side of Figure 3, which represents a specific pattern or constraint in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-2",
          "local_name": "the left-hand tree in Fig. 3",
          "local_types": [
            "figure",
            "tree"
          ],
          "iri": "Entity-the_left-hand_tree_in_fig_._3-Mention-1"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-yago2s__wikidata__and_dbpedia": {
      "node_id": "yago2s__wikidata__and_dbpedia",
      "disambiguation_index": 0,
      "label": "YAGO2s, Wikidata, and DBpedia",
      "aliases": [
        "YAGO2s, Wikidata, and DBpedia"
      ],
      "types": [
        "KGs",
        "dataset",
        "knowledge graphs"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of three real-world massive knowledge graphs (KGs) that include YAGO2s with 4 million facts, DBpedia 3.8 with 11 million facts, and Wikidata with 8 million facts.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-2",
          "local_name": "YAGO2s, Wikidata, and DBpedia",
          "local_types": [
            "KGs",
            "dataset",
            "knowledge graphs"
          ],
          "iri": "Entity-yago2s__wikidata__and_dbpedia-Mention-1"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-measuring_the_quantity_and_quality_of_distinct_rule_learnt": {
      "node_id": "measuring_the_quantity_and_quality_of_distinct_rule_learnt",
      "disambiguation_index": 0,
      "label": "measuring the quantity and quality of distinct rules learnt",
      "aliases": [
        "measuring the quantity and quality of distinct rules learnt"
      ],
      "types": [
        "metric",
        "evaluation metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A metric used to evaluate knowledge graph (KG) rule-learning methods by quantifying and qualifying the number of unique, high-quality rules learned from KGs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-1",
          "local_name": "measuring the quantity and quality of distinct rules learnt",
          "local_types": [
            "metric",
            "evaluation metric"
          ],
          "iri": "Entity-measuring_the_quantity_and_quality_of_distinct_rule_learnt-Mention-1"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-50_target_predicate": {
      "node_id": "50_target_predicate",
      "disambiguation_index": 0,
      "label": "50 target predicates",
      "aliases": [
        "50 target predicates"
      ],
      "types": [
        "target",
        "number",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of 50 specific predicate expressions that are targeted for learning SHACL shapes from knowledge graphs, including Wikidata and DBPedia unary predicates.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-3",
          "local_name": "50 target predicates",
          "local_types": [
            "target",
            "number",
            "predicate"
          ],
          "iri": "Entity-50_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-the_largest_proportion_of_rule_ha_a_cardinality_of_1": {
      "node_id": "the_largest_proportion_of_rule_ha_a_cardinality_of_1",
      "disambiguation_index": 0,
      "label": "the largest proportion of rules has a cardinality of 1",
      "aliases": [
        "the largest proportion of rules has a cardinality of 1"
      ],
      "types": [
        "result",
        "finding",
        "rule",
        "cardinality",
        "proportion"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The majority of learned SHACL shapes from knowledge graphs that meet minimum quality thresholds.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-6-Sentence-1",
          "local_name": "the largest proportion of rules has a cardinality of 1",
          "local_types": [
            "result",
            "finding",
            "rule",
            "cardinality",
            "proportion"
          ],
          "iri": "Entity-the_largest_proportion_of_rule_ha_a_cardinality_of_1-Mention-1"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg": {
      "node_id": "an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "disambiguation_index": 0,
      "label": "an instantiation of the body of the rule in the KG",
      "aliases": [
        "an instantiation of the body of the rule in the KG"
      ],
      "types": [
        "knowledge graph",
        "body",
        "instantiation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific instance or realization of the shape constraint defined by the rule's body within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "an instantiation of the body of the rule in the KG",
          "local_types": [
            "knowledge graph",
            "body",
            "instantiation"
          ],
          "iri": "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.60107421875
    },
    "Entity-the_effectiveness_of_our_shaclearner": {
      "node_id": "the_effectiveness_of_our_shaclearner",
      "disambiguation_index": 0,
      "label": "the effectiveness of our SHACLEARNER",
      "aliases": [
        "the effectiveness of our SHACLEARNER"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The evaluation of the performance of our SHACLEARNER algorithm at learning shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "the effectiveness of our SHACLEARNER",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-the_effectiveness_of_our_shaclearner-Mention-1"
        }
      ],
      "relevance": 0.60107421875
    },
    "Entity-the_statistical_likelihood_of_poor_quality_rule": {
      "node_id": "the_statistical_likelihood_of_poor_quality_rule",
      "disambiguation_index": 0,
      "label": "the statistical likelihood of poor quality rules",
      "aliases": [
        "the statistical likelihood of poor quality rules"
      ],
      "types": [
        "concept",
        "statistical concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The probability that learned IOP rules are of low quality, indicating the prevalence of inaccurate or irrelevant shape constraints in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-5",
          "local_name": "the statistical likelihood of poor quality rules",
          "local_types": [
            "concept",
            "statistical concept"
          ],
          "iri": "Entity-the_statistical_likelihood_of_poor_quality_rule-Mention-1"
        }
      ],
      "relevance": 0.60107421875
    },
    "Entity-p2__z0__z1___p3__z1__z2_": {
      "node_id": "p2__z0__z1___p3__z1__z2_",
      "disambiguation_index": 0,
      "label": "P2(z0, z1) ^ P3(z1, z2)",
      "aliases": [
        "P2(z0, z1) ^ P3(z1, z2)",
        "P1(x, z0) -> P2(z0, z1) ^ P3(z1, z2)"
      ],
      "types": [
        "predicate",
        "rule",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An inverse open path rule in predicate logic formalism expressing specific shapes as paths over connected entities present in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "P2(z0, z1) ^ P3(z1, z2)",
          "local_types": [
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-p2__z0__z1___p3__z1__z2_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-6",
          "local_name": "P1(x, z0) -> P2(z0, z1) ^ P3(z1, z2)",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-p2__z0__z1___p3__z1__z2_-Mention-2"
        }
      ],
      "relevance": 0.6005859375
    },
    "Entity-existing_ontology_for_kg": {
      "node_id": "existing_ontology_for_kg",
      "disambiguation_index": 0,
      "label": "existing ontologies for KGs",
      "aliases": [
        "existing ontologies for KGs"
      ],
      "types": [
        "knowledge representation",
        "ontology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of formal representations or vocabularies used to describe and organize knowledge, particularly in the context of Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "existing ontologies for KGs",
          "local_types": [
            "knowledge representation",
            "ontology"
          ],
          "iri": "Entity-existing_ontology_for_kg-Mention-1"
        }
      ],
      "relevance": 0.6005859375
    },
    "Entity-these_kind_of_rule": {
      "node_id": "these_kind_of_rule",
      "disambiguation_index": 0,
      "label": "these kinds of rules",
      "aliases": [
        "these kinds of rules"
      ],
      "types": [
        "concept",
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Closed-path rules used to express constraints on graph data as shapes",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "these kinds of rules",
          "local_types": [
            "concept",
            "rules"
          ],
          "iri": "Entity-these_kind_of_rule-Mention-1"
        }
      ],
      "relevance": 0.6005859375
    },
    "Entity-oprl": {
      "node_id": "oprl",
      "disambiguation_index": 0,
      "label": "OPRL",
      "aliases": [
        "the open path rule learner OPRL",
        "OPRL"
      ],
      "types": [
        "algorithm",
        "software",
        "method",
        "rule learner",
        "machine learning model",
        "rule-based system",
        "logic framework",
        "system",
        "tool",
        "framework",
        "model",
        "methodology",
        "logic system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The open path rule learner, an algorithm for learning open path rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "algorithm",
            "software",
            "tool",
            "rule learner"
          ],
          "iri": "Entity-oprl-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "OPRL",
          "local_types": [
            "algorithm",
            "logic framework",
            "rule-based system",
            "system",
            "logic system"
          ],
          "iri": "Entity-oprl-Mention-2"
        },
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "OPRL",
          "local_types": [
            "algorithm",
            "method",
            "model"
          ],
          "iri": "Entity-oprl-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "algorithm",
            "method",
            "tool",
            "framework",
            "methodology"
          ],
          "iri": "Entity-oprl-Mention-4"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "algorithm",
            "machine learning model",
            "system",
            "rule learner"
          ],
          "iri": "Entity-oprl-Mention-5"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "algorithm",
            "software"
          ],
          "iri": "Entity-oprl-Mention-6"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "the open path rule learner OPRL",
          "local_types": [
            "algorithm",
            "software",
            "rule learner",
            "tool"
          ],
          "iri": "Entity-oprl-Mention-7"
        }
      ],
      "relevance": 0.60009765625
    },
    "Entity-the_head_of_the_rule_(1)": {
      "node_id": "the_head_of_the_rule_(1)",
      "disambiguation_index": 1,
      "label": "the head of the rule",
      "aliases": [
        "the head of the rule",
        "the head and the body of IOP rules"
      ],
      "types": [
        "IOP rule",
        "head",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The head of an Inverse Open Path (IOP) rule, which is a sequence of predicates in the knowledge graph that are predicted to be instantiated together.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "the head of the rule",
          "local_types": [
            "head",
            "rule"
          ],
          "iri": "Entity-the_head_of_the_rule_(1)-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "the head and the body of IOP rules",
          "local_types": [
            "rule",
            "IOP rule"
          ],
          "iri": "Entity-the_head_of_the_rule_(1)-Mention-2"
        }
      ],
      "relevance": 0.60009765625
    },
    "Entity-_cardinality_of_an_iop_rule__car_": {
      "node_id": "_cardinality_of_an_iop_rule__car_",
      "disambiguation_index": 0,
      "label": "(Cardinality of an IOP rule, Car)",
      "aliases": [
        "(Cardinality of an IOP rule, Car)"
      ],
      "types": [
        "notation",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The cardinality annotation for a given Inverse Open Path (IOP) rule, indicating the minimum number of distinct instantiations of the head predicate that must exist in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-1",
          "local_name": "(Cardinality of an IOP rule, Car)",
          "local_types": [
            "notation",
            "mathematical concept"
          ],
          "iri": "Entity-_cardinality_of_an_iop_rule__car_-Mention-1"
        }
      ],
      "relevance": 0.599609375
    },
    "Entity-r1": {
      "node_id": "r1",
      "disambiguation_index": 0,
      "label": "r1",
      "aliases": [
        "r1"
      ],
      "types": [
        "parameter",
        "notation",
        "reference",
        "variable",
        "identifier"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The reference r1 to an Inverse Open Path (IOP) rule, which expresses a specific shape pattern that can be used as a building block for more complex shapes.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "r1",
          "local_types": [
            "parameter",
            "variable",
            "reference",
            "identifier"
          ],
          "iri": "Entity-r1-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "r1",
          "local_types": [
            "notation",
            "identifier"
          ],
          "iri": "Entity-r1-Mention-2"
        }
      ],
      "relevance": 0.59912109375
    },
    "Entity-in_order_to_discover_more_complex_shape__that_is__tree_.": {
      "node_id": "in_order_to_discover_more_complex_shape__that_is__tree_.",
      "disambiguation_index": 0,
      "label": "in order to discover more complex shapes, that is, trees.",
      "aliases": [
        "in order to discover more complex shapes, that is, trees."
      ],
      "types": [
        "goal",
        "discovery",
        "shape",
        "tree"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method or approach used to aggregate learned Inverse Open Path rules in order to form more intricate and hierarchical patterns, specifically tree-like structures.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-2",
          "local_name": "in order to discover more complex shapes, that is, trees.",
          "local_types": [
            "goal",
            "discovery",
            "shape",
            "tree"
          ],
          "iri": "Entity-in_order_to_discover_more_complex_shape__that_is__tree_.-Mention-1"
        }
      ],
      "relevance": 0.59912109375
    },
    "Entity-kg-completion": {
      "node_id": "kg-completion",
      "disambiguation_index": 0,
      "label": "KG-completion",
      "aliases": [
        "KG completion",
        "KG-completion",
        "KG-Completion"
      ],
      "types": [
        "algorithm",
        "problem",
        "method",
        "technique",
        "information retrieval process",
        "knowledge graph task",
        "artificial intelligence application",
        "task",
        "artificial intelligence",
        "information retrieval",
        "goal",
        "problem domain"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The process of completing or filling gaps in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-2",
          "local_name": "KG-completion",
          "local_types": [
            "algorithm",
            "method",
            "technique",
            "information retrieval process",
            "knowledge graph task",
            "task",
            "artificial intelligence",
            "information retrieval",
            "goal"
          ],
          "iri": "Entity-kg-completion-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "KG completion",
          "local_types": [
            "problem",
            "problem domain",
            "task"
          ],
          "iri": "Entity-kg-completion-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "KG completion",
          "local_types": [
            "knowledge graph task",
            "artificial intelligence application"
          ],
          "iri": "Entity-kg-completion-Mention-3"
        }
      ],
      "relevance": 0.5986328125
    },
    "Entity-original_kg": {
      "node_id": "original_kg",
      "disambiguation_index": 0,
      "label": "original KG",
      "aliases": [
        "original KG"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A comprehensive knowledge representation framework or dataset that serves as the foundation for subsequent processing and analysis.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-5",
          "local_name": "original KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-original_kg-Mention-1"
        }
      ],
      "relevance": 0.59814453125
    },
    "Entity-the_efficient_matrix-computation": {
      "node_id": "the_efficient_matrix-computation",
      "disambiguation_index": 0,
      "label": "the efficient matrix-computation",
      "aliases": [
        "the efficient matrix-computation"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The efficient computation method used to calculate the quality measures (IOPSC and IOPHC) of SHACLEARNER, which involves matrix operations on adjacency matrices representing knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "the efficient matrix-computation",
          "local_types": [
            "method"
          ],
          "iri": "Entity-the_efficient_matrix-computation-Mention-1"
        }
      ],
      "relevance": 0.59814453125
    },
    "Entity-all_rule_that_bind_the_subject_argument": {
      "node_id": "all_rule_that_bind_the_subject_argument",
      "disambiguation_index": 0,
      "label": "all rules that bind the subject argument",
      "aliases": [
        "all rules that bind the subject argument"
      ],
      "types": [
        "rule",
        "argument",
        "subject"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of rules that bind the subject argument, used as input for learning SHACL trees from annotated Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-2",
          "local_name": "all rules that bind the subject argument",
          "local_types": [
            "rule",
            "argument",
            "subject"
          ],
          "iri": "Entity-all_rule_that_bind_the_subject_argument-Mention-1"
        }
      ],
      "relevance": 0.59765625
    },
    "Entity-the_occupation": {
      "node_id": "the_occupation",
      "disambiguation_index": 0,
      "label": "the occupations",
      "aliases": [
        "the occupations"
      ],
      "types": [
        "occupation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of job or profession types that share similar constraints and patterns in a knowledge graph, characterized by having high Inverse Open Path Standard Confidence (IOPSC) and low IOPHC.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-4",
          "local_name": "the occupations",
          "local_types": [
            "occupation"
          ],
          "iri": "Entity-the_occupation-Mention-1"
        }
      ],
      "relevance": 0.59765625
    },
    "Entity-the_characteristic_of_discovered_tree": {
      "node_id": "the_characteristic_of_discovered_tree",
      "disambiguation_index": 0,
      "label": "the characteristics of discovered trees",
      "aliases": [
        "the characteristics of discovered trees"
      ],
      "types": [
        "research finding"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The characteristics mentioned refer to the results obtained from aggregating Inverse Open Path (IOP) rules into tree shapes, including metrics such as average TreeSC, number of branches, and building runtime.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "the characteristics of discovered trees",
          "local_types": [
            "research finding"
          ],
          "iri": "Entity-the_characteristic_of_discovered_tree-Mention-1"
        }
      ],
      "relevance": 0.59765625
    },
    "Entity-left-hand_chart": {
      "node_id": "left-hand_chart",
      "disambiguation_index": 0,
      "label": "left-hand chart",
      "aliases": [
        "left-hand chart"
      ],
      "types": [
        "graphical representation",
        "diagram"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A graphical representation or diagram showing the distribution of mined rules with respect to their Inverse Open Path Standard Confidence (IOPSC) and Inverse Open Path Head Coverage (IOPHC).",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-2",
          "local_name": "left-hand chart",
          "local_types": [
            "graphical representation",
            "diagram"
          ],
          "iri": "Entity-left-hand_chart-Mention-1"
        }
      ],
      "relevance": 0.59716796875
    },
    "Entity-the_confidence_of_a_rule": {
      "node_id": "the_confidence_of_a_rule",
      "disambiguation_index": 0,
      "label": "the confidence of a rule",
      "aliases": [
        "the confidence of a rule"
      ],
      "types": [
        "confidence",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The confidence measure for a learned SHACL shape rule based on its proportion of true instances among all possible predicate instances in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "the confidence of a rule",
          "local_types": [
            "confidence",
            "rule"
          ],
          "iri": "Entity-the_confidence_of_a_rule-Mention-1"
        }
      ],
      "relevance": 0.59716796875
    },
    "Entity-for_a_mapreduce_implementation": {
      "node_id": "for_a_mapreduce_implementation",
      "disambiguation_index": 0,
      "label": "for a MapReduce implementation",
      "aliases": [
        "for a MapReduce implementation"
      ],
      "types": [
        "implementation",
        "MapReduce"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The redesigning of the SHACLearner algorithm for a distributed processing framework (MapReduce) to handle extremely large knowledge graphs with tens of billions of facts, such as the most recent version of Wikidata.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "for a MapReduce implementation",
          "local_types": [
            "implementation",
            "MapReduce"
          ],
          "iri": "Entity-for_a_mapreduce_implementation-Mention-1"
        }
      ],
      "relevance": 0.59716796875
    },
    "Entity-a_knowledge_graph__kg_": {
      "node_id": "a_knowledge_graph__kg_",
      "disambiguation_index": 0,
      "label": "A knowledge graph (KG)",
      "aliases": [
        "A knowledge graph (KG)",
        "Knowledge Graphs (KGs)"
      ],
      "types": [
        "knowledge graph",
        "knowledge representation",
        "concept",
        "term"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A data structure that represents relationships between entities, concepts, or terms as a graph of interconnected nodes.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-6",
          "local_name": "A knowledge graph (KG)",
          "local_types": [
            "knowledge representation",
            "concept",
            "term"
          ],
          "iri": "Entity-a_knowledge_graph__kg_-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graphs (KGs)",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-a_knowledge_graph__kg_-Mention-2"
        }
      ],
      "relevance": 0.59619140625
    },
    "Entity-it_constituent_iop_rule": {
      "node_id": "it_constituent_iop_rule",
      "disambiguation_index": 0,
      "label": "its constituent IOP rules",
      "aliases": [
        "its constituent IOP rules"
      ],
      "types": [
        "component",
        "IOP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of individual Inverse Open Path (IOP) rules that, when combined through conjunction, form a tree shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-6",
          "local_name": "its constituent IOP rules",
          "local_types": [
            "component",
            "IOP rule"
          ],
          "iri": "Entity-it_constituent_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.59619140625
    },
    "Entity-a_tree_(2)": {
      "node_id": "a_tree_(2)",
      "disambiguation_index": 2,
      "label": "a tree",
      "aliases": [
        "a tree"
      ],
      "types": [
        "tree"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A tree is a shape in SHACL, representing a set of paths or branches that can be used to validate and predict instances from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "a tree",
          "local_types": [
            "tree"
          ],
          "iri": "Entity-a_tree_(2)-Mention-1"
        }
      ],
      "relevance": 0.59619140625
    },
    "Entity-dbpedia_with_over_11_million_fact": {
      "node_id": "dbpedia_with_over_11_million_fact",
      "disambiguation_index": 0,
      "label": "DBpedia with over 11 million facts",
      "aliases": [
        "DBpedia with over 11 million facts"
      ],
      "types": [
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A large-scale knowledge graph dataset containing over 11 million facts, used as one of the benchmarks to evaluate the effectiveness of SHACLEARNER in learning high-quality shapes from massive KGs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-1",
          "local_name": "DBpedia with over 11 million facts",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-dbpedia_with_over_11_million_fact-Mention-1"
        }
      ],
      "relevance": 0.59619140625
    },
    "Entity-this_system": {
      "node_id": "this_system",
      "disambiguation_index": 0,
      "label": "This system",
      "aliases": [
        "This system"
      ],
      "types": [
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An ideal Inverse Open Path (IOP) rule learner that generates and evaluates all possible IOP rules up to the maximum length parameter.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-4",
          "local_name": "This system",
          "local_types": [
            "system"
          ],
          "iri": "Entity-this_system-Mention-1"
        }
      ],
      "relevance": 0.59619140625
    },
    "Entity-automatic_and_semi-automatic_method": {
      "node_id": "automatic_and_semi-automatic_method",
      "disambiguation_index": 0,
      "label": "automatic and semi-automatic methods",
      "aliases": [
        "automatic and semi-automatic methods"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Automatic and semi-automatic methods used for populating large knowledge graphs (KGs) from non-structured sources like Wikipedia, which can be prone to errors.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "automatic and semi-automatic methods",
          "local_types": [
            "method"
          ],
          "iri": "Entity-automatic_and_semi-automatic_method-Mention-1"
        }
      ],
      "relevance": 0.595703125
    },
    "Entity-standard_shacl_shape": {
      "node_id": "standard_shacl_shape",
      "disambiguation_index": 0,
      "label": "standard SHACL shapes",
      "aliases": [
        "standard SHACL shapes"
      ],
      "types": [
        "SHACL shape",
        "format",
        "specification"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of predefined specifications for Semantic Web Architecture and Connectivity Language (SHACL) data, defining expected structures and constraints.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-1",
          "local_name": "standard SHACL shapes",
          "local_types": [
            "SHACL shape",
            "format",
            "specification"
          ],
          "iri": "Entity-standard_shacl_shape-Mention-1"
        }
      ],
      "relevance": 0.59521484375
    },
    "Entity-kg_verification": {
      "node_id": "kg_verification",
      "disambiguation_index": 0,
      "label": "KG verification",
      "aliases": [
        "KG verification"
      ],
      "types": [
        "knowledge graph validation",
        "data quality control"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of verifying the accuracy and consistency of knowledge represented in a graph.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-1",
          "local_name": "KG verification",
          "local_types": [
            "knowledge graph validation",
            "data quality control"
          ],
          "iri": "Entity-kg_verification-Mention-1"
        }
      ],
      "relevance": 0.59521484375
    },
    "Entity-wikidata_and_dbpedia": {
      "node_id": "wikidata_and_dbpedia",
      "disambiguation_index": 0,
      "label": "Wikidata and DBpedia",
      "aliases": [
        "Wikidata and DBpedia"
      ],
      "types": [
        "dataset",
        "knowledge base"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A pair of knowledge bases, specifically Wikidata and DBPedia, used for learning SHACL shapes from massive Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-6",
          "local_name": "Wikidata and DBpedia",
          "local_types": [
            "dataset",
            "knowledge base"
          ],
          "iri": "Entity-wikidata_and_dbpedia-Mention-1"
        }
      ],
      "relevance": 0.59521484375
    },
    "Entity-the_treesc": {
      "node_id": "the_treesc",
      "disambiguation_index": 0,
      "label": "the TreeSC",
      "aliases": [
        "the TreeSC"
      ],
      "types": [
        "Tree"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel method for learning SHACL trees from knowledge graphs, used in the SHACLEARNER algorithm.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-4",
          "local_name": "the TreeSC",
          "local_types": [
            "Tree"
          ],
          "iri": "Entity-the_treesc-Mention-1"
        }
      ],
      "relevance": 0.5947265625
    },
    "Entity-the_shacl_core_feature__node_and_property_shape_": {
      "node_id": "the_shacl_core_feature__node_and_property_shape_",
      "disambiguation_index": 0,
      "label": "the SHACL Core features (node and property shapes)",
      "aliases": [
        "the SHACL Core features (node and property shapes)"
      ],
      "types": [
        "feature set"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of fundamental characteristics or patterns that define node and property shapes in the SHACL (Shapes Constraint Language) framework.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-1",
          "local_name": "the SHACL Core features (node and property shapes)",
          "local_types": [
            "feature set"
          ],
          "iri": "Entity-the_shacl_core_feature__node_and_property_shape_-Mention-1"
        }
      ],
      "relevance": 0.5947265625
    },
    "Entity-_1__we_propose_an_iop_rule_language_that_allows_u_to_mine_rule_with_open_variable__with_one_predicate_forming_the_body_and_a_chain_of_predicate_a_the_head_": {
      "node_id": "_1__we_propose_an_iop_rule_language_that_allows_u_to_mine_rule_with_open_variable__with_one_predicate_forming_the_body_and_a_chain_of_predicate_a_the_head_",
      "disambiguation_index": 0,
      "label": "(1) we propose an IOP rule language that allows us to mine rules with open variables, with one predicate forming the body and a chain of predicates as the head;",
      "aliases": [
        "(1) we propose an IOP rule language that allows us to mine rules with open variables, with one predicate forming the body and a chain of predicates as the head;"
      ],
      "types": [
        "language",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An Inverse Open Path (IOP) rule language that allows for mining rules with open variables, having one predicate forming the body and a chain of predicates as the head.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "(1) we propose an IOP rule language that allows us to mine rules with open variables, with one predicate forming the body and a chain of predicates as the head;",
          "local_types": [
            "language",
            "rule"
          ],
          "iri": "Entity-_1__we_propose_an_iop_rule_language_that_allows_u_to_mine_rule_with_open_variable__with_one_predicate_forming_the_body_and_a_chain_of_predicate_a_the_head_-Mention-1"
        }
      ],
      "relevance": 0.59423828125
    },
    "Entity-let_(1)": {
      "node_id": "let_(1)",
      "disambiguation_index": 1,
      "label": "Let",
      "aliases": [
        "Let"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A notation for expressing constraints on graph data as shapes, used to validate a Knowledge Graph and offer insight into its structure.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "Let",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-let_(1)-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "Let",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-let_(1)-Mention-2"
        }
      ],
      "relevance": 0.59423828125
    },
    "Entity-two_different_kind_of_knowledge": {
      "node_id": "two_different_kind_of_knowledge",
      "disambiguation_index": 0,
      "label": "two different kinds of knowledge",
      "aliases": [
        "two different kinds of knowledge"
      ],
      "types": [
        "knowledge type"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Two types of knowledge used for automatic generation of SHACL shapes, including ontology constraint patterns and input ontologies.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-2",
          "local_name": "two different kinds of knowledge",
          "local_types": [
            "knowledge type"
          ],
          "iri": "Entity-two_different_kind_of_knowledge-Mention-1"
        }
      ],
      "relevance": 0.59423828125
    },
    "Entity-_3__we_propose_an_efficient_method_to_evaluate_iop_rule_and_tree_by_exactly_computing_the_quality_measure_of_each_rule_using_fast_matrix_and_vector_operation_.": {
      "node_id": "_3__we_propose_an_efficient_method_to_evaluate_iop_rule_and_tree_by_exactly_computing_the_quality_measure_of_each_rule_using_fast_matrix_and_vector_operation_.",
      "disambiguation_index": 0,
      "label": "(3) we propose an efficient method to evaluate IOP rules and trees by exactly computing the quality measures of each rule using fast matrix and vector operations.",
      "aliases": [
        "(3) we propose an efficient method to evaluate IOP rules and trees by exactly computing the quality measures of each rule using fast matrix and vector operations."
      ],
      "types": [
        "method",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The proposed efficient method for evaluating Inverse Open Path (IOP) rules and trees, which exactly computes the quality measures of each rule using fast matrix and vector operations.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "(3) we propose an efficient method to evaluate IOP rules and trees by exactly computing the quality measures of each rule using fast matrix and vector operations.",
          "local_types": [
            "method",
            "evaluation"
          ],
          "iri": "Entity-_3__we_propose_an_efficient_method_to_evaluate_iop_rule_and_tree_by_exactly_computing_the_quality_measure_of_each_rule_using_fast_matrix_and_vector_operation_.-Mention-1"
        }
      ],
      "relevance": 0.59375
    },
    "Entity-the_body_and_the_head_are_both_satisfied_in_the_kg": {
      "node_id": "the_body_and_the_head_are_both_satisfied_in_the_kg",
      "disambiguation_index": 0,
      "label": "the body and the head are both satisfied in the KG",
      "aliases": [
        "the body and the head are both satisfied in the KG"
      ],
      "types": [
        "condition",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The condition where a knowledge graph (KG) satisfies both the body and the head of a closed-path rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-5",
          "local_name": "the body and the head are both satisfied in the KG",
          "local_types": [
            "condition",
            "knowledge graph"
          ],
          "iri": "Entity-the_body_and_the_head_are_both_satisfied_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.59375
    },
    "Entity-the_rule_is_true": {
      "node_id": "the_rule_is_true",
      "disambiguation_index": 0,
      "label": "the rule is true",
      "aliases": [
        "the rule is true"
      ],
      "types": [
        "rule",
        "truth"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A measure of how frequently an inverse open path (IOP) rule is supported by facts in the knowledge graph, indicating the proportion of entity pairs that satisfy the body and head of the rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "the rule is true",
          "local_types": [
            "rule",
            "truth"
          ],
          "iri": "Entity-the_rule_is_true-Mention-1"
        }
      ],
      "relevance": 0.59375
    },
    "Entity-the_entity_set_esample_and_corresponding_fact_set_k_": {
      "node_id": "the_entity_set_esample_and_corresponding_fact_set_k_",
      "disambiguation_index": 0,
      "label": "the entity set Esample and corresponding fact set K'",
      "aliases": [
        "the entity set Esample and corresponding fact set K'"
      ],
      "types": [
        "entity set",
        "fact set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity set containing a bounded number of entities related to the target predicate Pt, used as input for learning Inverse Open Path (IOP) rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "the entity set Esample and corresponding fact set K'",
          "local_types": [
            "entity set",
            "fact set"
          ],
          "iri": "Entity-the_entity_set_esample_and_corresponding_fact_set_k_-Mention-1"
        }
      ],
      "relevance": 0.59326171875
    },
    "Entity-we_retain_the_original_predicate_and_fact_in_the_kg_a_well_a_extending_it_with_our_new_one": {
      "node_id": "we_retain_the_original_predicate_and_fact_in_the_kg_a_well_a_extending_it_with_our_new_one",
      "disambiguation_index": 0,
      "label": "we retain the original predicates and facts in the KG as well as extending it with our new ones",
      "aliases": [
        "we retain the original predicates and facts in the KG as well as extending it with our new ones"
      ],
      "types": [
        "knowledge graph management"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The knowledge graph management system that retains the original predicates and facts, while also adding new unary predicates and facts.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-4",
          "local_name": "we retain the original predicates and facts in the KG as well as extending it with our new ones",
          "local_types": [
            "knowledge graph management"
          ],
          "iri": "Entity-we_retain_the_original_predicate_and_fact_in_the_kg_a_well_a_extending_it_with_our_new_one-Mention-1"
        }
      ],
      "relevance": 0.59326171875
    },
    "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl": {
      "node_id": "derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "disambiguation_index": 0,
      "label": "derive shapes that can be trivially expressed in a fragment of SHACL",
      "aliases": [
        "derive shapes that can be trivially expressed in a fragment of SHACL"
      ],
      "types": [
        "process",
        "SHACL"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A process for deriving simple shape patterns, such as trees, from knowledge graphs using logical formalisms and motivating use cases.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-3",
          "local_name": "derive shapes that can be trivially expressed in a fragment of SHACL",
          "local_types": [
            "process",
            "SHACL"
          ],
          "iri": "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl-Mention-1"
        }
      ],
      "relevance": 0.59326171875
    },
    "Entity-using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.": {
      "node_id": "using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.",
      "disambiguation_index": 0,
      "label": "Using self-loop links for unary predicates is convenient syntactic sugar to keep the presentation in the triple format, as for the original input KGs.",
      "aliases": [
        "Using self-loop links for unary predicates is convenient syntactic sugar to keep the presentation in the triple format, as for the original input KGs."
      ],
      "types": [
        "method",
        "syntax",
        "presentation",
        "triple format",
        "input KGs"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A technique used to present knowledge graph data in a triple format, where self-loop links are employed for unary predicates.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-3",
          "local_name": "Using self-loop links for unary predicates is convenient syntactic sugar to keep the presentation in the triple format, as for the original input KGs.",
          "local_types": [
            "method",
            "syntax",
            "presentation",
            "triple format",
            "input KGs"
          ],
          "iri": "Entity-using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.-Mention-1"
        }
      ],
      "relevance": 0.591796875
    },
    "Entity-regardless": {
      "node_id": "regardless",
      "disambiguation_index": 0,
      "label": "Regardless",
      "aliases": [
        "Regardless"
      ],
      "types": [
        "statement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The fact that any method used to build a Knowledge Graph (KG) will result in an incomplete KG due to the evolving nature of human knowledge, cultural bias, and resource constraints.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "Regardless",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-regardless-Mention-1"
        }
      ],
      "relevance": 0.591796875
    },
    "Entity-a_small_amount_of_data": {
      "node_id": "a_small_amount_of_data",
      "disambiguation_index": 0,
      "label": "a small amount of data",
      "aliases": [
        "a small amount of data"
      ],
      "types": [
        "data",
        "amount"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A limited quantity of information used by procedural methods without logical foundations for learning SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "a small amount of data",
          "local_types": [
            "data",
            "amount"
          ],
          "iri": "Entity-a_small_amount_of_data-Mention-1"
        }
      ],
      "relevance": 0.591796875
    },
    "Entity-the_first_row": {
      "node_id": "the_first_row",
      "disambiguation_index": 0,
      "label": "The first row",
      "aliases": [
        "The first row"
      ],
      "types": [
        "description"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The first row of the table showing the number of Inverse Open Path (IOP) rules learnt by an ideal SHACLEARNER with no pruning, for all target predicates, separated into various IOPSC intervals.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "The first row",
          "local_types": [
            "description"
          ],
          "iri": "Entity-the_first_row-Mention-1"
        }
      ],
      "relevance": 0.591796875
    },
    "Entity-the_maximum_number_of_predicate_of_the_rule": {
      "node_id": "the_maximum_number_of_predicate_of_the_rule",
      "disambiguation_index": 0,
      "label": "the maximum number of predicates of the rules",
      "aliases": [
        "the maximum number of predicates of the rules"
      ],
      "types": [
        "parameter",
        "rule parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A parameter that determines the upper limit on the number of predicate arguments allowed in a rule, which affects the complexity and search space of learning SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-3",
          "local_name": "the maximum number of predicates of the rules",
          "local_types": [
            "parameter",
            "rule parameter"
          ],
          "iri": "Entity-the_maximum_number_of_predicate_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.591796875
    },
    "Entity-for__2_": {
      "node_id": "for__2_",
      "disambiguation_index": 0,
      "label": "For (2)",
      "aliases": [
        "For (2)"
      ],
      "types": [
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The IOP rule r: Pt(x, z0) -> P1(z0, x) ^ P2(z1, y), which expresses simple shape patterns in the form of paths over connected entities present in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "For (2)",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-for__2_-Mention-1"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-average_treesc_for_each_kg__along_with_the_average_number_of_branch_in_the_tree_and_the_average_tree-building_runtime": {
      "node_id": "average_treesc_for_each_kg__along_with_the_average_number_of_branch_in_the_tree_and_the_average_tree-building_runtime",
      "disambiguation_index": 0,
      "label": "average TreeSC for each KG, along with the average number of branches in the trees and the average tree-building runtime",
      "aliases": [
        "showing average TreeSC for each KG, along with the average number of branches in the trees and the average tree-building runtime",
        "average TreeSC for each KG, along with the average number of branches in the trees and the average tree-building runtime"
      ],
      "types": [
        "result presentation",
        "results"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The characteristics of discovered trees from knowledge graphs (KGs), including their TreeSC values, branch counts, and building runtimes.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "average TreeSC for each KG, along with the average number of branches in the trees and the average tree-building runtime",
          "local_types": [
            "results"
          ],
          "iri": "Entity-average_treesc_for_each_kg__along_with_the_average_number_of_branch_in_the_tree_and_the_average_tree-building_runtime-Mention-1"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "showing average TreeSC for each KG, along with the average number of branches in the trees and the average tree-building runtime",
          "local_types": [
            "result presentation"
          ],
          "iri": "Entity-average_treesc_for_each_kg__along_with_the_average_number_of_branch_in_the_tree_and_the_average_tree-building_runtime-Mention-2"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-the_w3c_in_2017": {
      "node_id": "the_w3c_in_2017",
      "disambiguation_index": 0,
      "label": "the W3C in 2017",
      "aliases": [
        "the W3C in 2017"
      ],
      "types": [
        "organization",
        "time period"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The World Wide Web Consortium (W3C) recommendation for expressing constraints on graph data as shapes, formalized in 2017.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "the W3C in 2017",
          "local_types": [
            "organization",
            "time period"
          ],
          "iri": "Entity-the_w3c_in_2017-Mention-1"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-the_general_form_of_an_iop_rule": {
      "node_id": "the_general_form_of_an_iop_rule",
      "disambiguation_index": 0,
      "label": "The general form of an IOP rule",
      "aliases": [
        "The general form of an IOP rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The general form of an IOP rule, which represents a path over connected entities that are present in a knowledge graph and expresses simple shape patterns with minimum cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-1",
          "local_name": "The general form of an IOP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_general_form_of_an_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-lower-cardinality_version_of_that_rule": {
      "node_id": "lower-cardinality_version_of_that_rule",
      "disambiguation_index": 0,
      "label": "lower-cardinality versions of that rule",
      "aliases": [
        "lower-cardinality versions of that rule"
      ],
      "types": [
        "version",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Lower-cardinality versions of an Inverse Open Path rule that have the same or higher IOPSC values, with a larger required cardinality placing a stricter lower bound on the number of instances of the head in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "lower-cardinality versions of that rule",
          "local_types": [
            "version",
            "rule"
          ],
          "iri": "Entity-lower-cardinality_version_of_that_rule-Mention-1"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-typically__shacl_shape_are_manually_specified": {
      "node_id": "typically__shacl_shape_are_manually_specified",
      "disambiguation_index": 0,
      "label": "Typically, SHACL shapes are manually specified",
      "aliases": [
        "Typically, SHACL shapes are manually specified"
      ],
      "types": [
        "practice",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of defining or specifying the structure and constraints for data validation",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "Typically, SHACL shapes are manually specified",
          "local_types": [
            "practice",
            "methodology"
          ],
          "iri": "Entity-typically__shacl_shape_are_manually_specified-Mention-1"
        }
      ],
      "relevance": 0.5908203125
    },
    "Entity-the_rule": {
      "node_id": "the_rule",
      "disambiguation_index": 0,
      "label": "the rule",
      "aliases": [
        "the rule"
      ],
      "types": [
        "rule",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism expressing specific shapes as paths over connected entities present in a knowledge graph, used for validating and editing large-scale data-first graph databases.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "the rule",
          "local_types": [
            "rule",
            "concept"
          ],
          "iri": "Entity-the_rule-Mention-1"
        }
      ],
      "relevance": 0.5908203125
    },
    "Entity-many_kg": {
      "node_id": "many_kg",
      "disambiguation_index": 0,
      "label": "many KGs",
      "aliases": [
        "many KGs"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A large number of knowledge graphs, which are schema-free databases that do not need to be augmented with schema information natively.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "many KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-many_kg-Mention-1"
        }
      ],
      "relevance": 0.5908203125
    },
    "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_subject_and_object_binding_swapped__and_free_variable_are_universally_quantified_at_the_outside_.": {
      "node_id": "each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_subject_and_object_binding_swapped__and_free_variable_are_universally_quantified_at_the_outside_.",
      "disambiguation_index": 0,
      "label": "each P'i is either a predicate in the KG or its reverse with subject and object bindings swapped, and free variables are universally quantified at the outside.",
      "aliases": [
        "each P'i is either a predicate in the KG or its reverse with subject and object bindings swapped, and free variables are universally quantified at the outside."
      ],
      "types": [
        "description",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A representation of an IOP rule where Pt' is either a predicate in the knowledge graph (KG) or its reverse with subject and object bindings swapped, and free variables are universally quantified.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "each P'i is either a predicate in the KG or its reverse with subject and object bindings swapped, and free variables are universally quantified at the outside.",
          "local_types": [
            "description",
            "predicate"
          ],
          "iri": "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_subject_and_object_binding_swapped__and_free_variable_are_universally_quantified_at_the_outside_.-Mention-1"
        }
      ],
      "relevance": 0.5908203125
    },
    "Entity-with_iopsc_greater_than_or_equal_to_0.9": {
      "node_id": "with_iopsc_greater_than_or_equal_to_0.9",
      "disambiguation_index": 0,
      "label": "with IOPSC greater than or equal to 0.9",
      "aliases": [
        "with IOPSC greater than or equal to 0.9"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "High-quality rules learned from knowledge graphs",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-5",
          "local_name": "with IOPSC greater than or equal to 0.9",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-with_iopsc_greater_than_or_equal_to_0.9-Mention-1"
        }
      ],
      "relevance": 0.5908203125
    },
    "Entity-all_entity": {
      "node_id": "all_entity",
      "disambiguation_index": 0,
      "label": "All entities",
      "aliases": [
        "All entities"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities present in a knowledge graph that can be used as input for learning SHACL shapes",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-4",
          "local_name": "All entities",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-all_entity-Mention-1"
        }
      ],
      "relevance": 0.5908203125
    },
    "Entity-the_number_of_tree": {
      "node_id": "the_number_of_tree",
      "disambiguation_index": 0,
      "label": "The number of trees",
      "aliases": [
        "The number of trees"
      ],
      "types": [
        "quantity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The total count of tree-shaped constraints learned from Inverse Open Path rules in each knowledge graph.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-3",
          "local_name": "The number of trees",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-the_number_of_tree-Mention-1"
        }
      ],
      "relevance": 0.5908203125
    },
    "Entity-right_hand_chart": {
      "node_id": "right_hand_chart",
      "disambiguation_index": 0,
      "label": "right hand chart",
      "aliases": [
        "right hand chart",
        "the right hand chart"
      ],
      "types": [
        "diagram",
        "chart",
        "visualisation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A diagram or visualization showing the distribution of mined rules with respect to their Inverse Open Path Standard Confidence (IOPSC) and Inverse Open Path Head Coverage (IOPHC)",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-3",
          "local_name": "right hand chart",
          "local_types": [
            "diagram",
            "visualisation"
          ],
          "iri": "Entity-right_hand_chart-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-3",
          "local_name": "the right hand chart",
          "local_types": [
            "chart"
          ],
          "iri": "Entity-right_hand_chart-Mention-2"
        }
      ],
      "relevance": 0.59033203125
    },
    "Entity-shacl__the_shape_constraint_language": {
      "node_id": "shacl__the_shape_constraint_language",
      "disambiguation_index": 0,
      "label": "SHACL, the Shapes Constraint Language",
      "aliases": [
        "SHACL, the Shapes Constraint Language"
      ],
      "types": [
        "language",
        "constraint language"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A constraint language used to express rules and restrictions on structured data.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "SHACL, the Shapes Constraint Language",
          "local_types": [
            "language",
            "constraint language"
          ],
          "iri": "Entity-shacl__the_shape_constraint_language-Mention-1"
        }
      ],
      "relevance": 0.58984375
    },
    "Entity-some_real-world_massive_kg": {
      "node_id": "some_real-world_massive_kg",
      "disambiguation_index": 0,
      "label": "some real-world massive KGs",
      "aliases": [
        "some real-world massive KGs"
      ],
      "types": [
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Large-scale knowledge graphs that exist or have existed in reality",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "some real-world massive KGs",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-some_real-world_massive_kg-Mention-1"
        }
      ],
      "relevance": 0.58984375
    },
    "Entity-proposed_system": {
      "node_id": "proposed_system",
      "disambiguation_index": 0,
      "label": "proposed system",
      "aliases": [
        "proposed system"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or algorithm designed to automate learning of shapes from large knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-3",
          "local_name": "proposed system",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-proposed_system-Mention-1"
        }
      ],
      "relevance": 0.58984375
    },
    "Entity-_kg_": {
      "node_id": "_kg_",
      "disambiguation_index": 0,
      "label": "(KG)",
      "aliases": [
        "(KG)"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A knowledge graph (KG) is a pair K = (E, F), where E is a set of entities and F is a set of facts, with all entities occurring in F also present in E.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-6",
          "local_name": "(KG)",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-_kg_-Mention-1"
        }
      ],
      "relevance": 0.58984375
    },
    "Entity-shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use": {
      "node_id": "shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use",
      "disambiguation_index": 0,
      "label": "SHACL shapes with different complexities, including nested patterns that are similar to the trees that we use",
      "aliases": [
        "SHACL shapes with different complexities, including nested patterns that are similar to the trees that we use"
      ],
      "types": [
        "pattern",
        "concept",
        "framework"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "SHACL shape concepts or frameworks that allow for defining complex patterns, such as nested structures resembling tree-like shapes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "SHACL shapes with different complexities, including nested patterns that are similar to the trees that we use",
          "local_types": [
            "pattern",
            "concept",
            "framework"
          ],
          "iri": "Entity-shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use-Mention-1"
        }
      ],
      "relevance": 0.58984375
    },
    "Entity-denoted_pt__e___e___if_pt__e___e__is_a_fact_in_the_kg_.": {
      "node_id": "denoted_pt__e___e___if_pt__e___e__is_a_fact_in_the_kg_.",
      "disambiguation_index": 0,
      "label": "denoted Pt(e', e), if Pt(e', e) is a fact in the KG.",
      "aliases": [
        "denoted Pt(e', e), if Pt(e', e) is a fact in the KG."
      ],
      "types": [
        "notation",
        "function",
        "fact",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A fact denoting an open path relationship between two entities, indicating the existence of a specific shape pattern or constraint in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-4",
          "local_name": "denoted Pt(e', e), if Pt(e', e) is a fact in the KG.",
          "local_types": [
            "notation",
            "function",
            "fact",
            "knowledge graph"
          ],
          "iri": "Entity-denoted_pt__e___e___if_pt__e___e__is_a_fact_in_the_kg_.-Mention-1"
        }
      ],
      "relevance": 0.58935546875
    },
    "Entity-a_bounded_number_of_entity_that_are_related_to_the_target_predicate_pt": {
      "node_id": "a_bounded_number_of_entity_that_are_related_to_the_target_predicate_pt",
      "disambiguation_index": 0,
      "label": "a bounded number of entities that are related to the target predicate Pt",
      "aliases": [
        "a bounded number of entities that are related to the target predicate Pt"
      ],
      "types": [
        "entities",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of entities connected by paths over which SHACL shapes can be learned from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "a bounded number of entities that are related to the target predicate Pt",
          "local_types": [
            "entities",
            "predicate"
          ],
          "iri": "Entity-a_bounded_number_of_entity_that_are_related_to_the_target_predicate_pt-Mention-1"
        }
      ],
      "relevance": 0.5888671875
    },
    "Entity-an_instance_of_the_head": {
      "node_id": "an_instance_of_the_head",
      "disambiguation_index": 0,
      "label": "an instance of the head",
      "aliases": [
        "an instance of the head"
      ],
      "types": [
        "instance",
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific pattern or shape that corresponds to a SHACL (Shapes Constraint Language) constraint, derived from an inverse open path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-5",
          "local_name": "an instance of the head",
          "local_types": [
            "instance",
            "head"
          ],
          "iri": "Entity-an_instance_of_the_head-Mention-1"
        }
      ],
      "relevance": 0.5888671875
    },
    "Entity-a_set_of_iop_rule_r_and_tree": {
      "node_id": "a_set_of_iop_rule_r_and_tree",
      "disambiguation_index": 0,
      "label": "a set of IOP rules R and Tree",
      "aliases": [
        "a set of IOP rules R and Tree"
      ],
      "types": [
        "ruleset",
        "IOP"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A collection of Inverse Open Path (IOP) rules, along with their corresponding tree structure.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-4",
          "local_name": "a set of IOP rules R and Tree",
          "local_types": [
            "ruleset",
            "IOP"
          ],
          "iri": "Entity-a_set_of_iop_rule_r_and_tree-Mention-1"
        }
      ],
      "relevance": 0.5888671875
    },
    "Entity-one_specific_unary_predicate": {
      "node_id": "one_specific_unary_predicate",
      "disambiguation_index": 0,
      "label": "one specific unary predicate",
      "aliases": [
        "one specific unary predicate"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A single unary predicate for which a learned SHACL shape has a high Inverse Open Path Head Coverage (IOPHC) value.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-5",
          "local_name": "one specific unary predicate",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-one_specific_unary_predicate-Mention-1"
        }
      ],
      "relevance": 0.5888671875
    },
    "Entity-iopsupp": {
      "node_id": "iopsupp",
      "disambiguation_index": 0,
      "label": "IOPsupp",
      "aliases": [
        "IOPsupp"
      ],
      "types": [
        "metric",
        "statistic",
        "notation",
        "parameter",
        "mathematical concept",
        "support function",
        "variable",
        "measure",
        "function",
        "formula",
        "constant"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The inverse open path support of an IOP rule, which measures the number of distinct instantiations of head paths that are satisfied in a knowledge graph for every instantiation linking the body to the head.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-6",
          "local_name": "IOPsupp",
          "local_types": [
            "notation",
            "formula",
            "function"
          ],
          "iri": "Entity-iopsupp-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-7",
          "local_name": "IOPsupp",
          "local_types": [
            "statistic",
            "parameter",
            "metric",
            "constant"
          ],
          "iri": "Entity-iopsupp-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-1",
          "local_name": "IOPsupp",
          "local_types": [
            "metric",
            "parameter",
            "variable",
            "measure",
            "function"
          ],
          "iri": "Entity-iopsupp-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-7",
          "local_name": "IOPsupp",
          "local_types": [
            "function",
            "support function"
          ],
          "iri": "Entity-iopsupp-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-8",
          "local_name": "IOPsupp",
          "local_types": [
            "notation",
            "mathematical concept"
          ],
          "iri": "Entity-iopsupp-Mention-5"
        }
      ],
      "relevance": 0.58837890625
    },
    "Entity-define_schema_information_for_kg_stored_a_an_rdf_graph": {
      "node_id": "define_schema_information_for_kg_stored_a_an_rdf_graph",
      "disambiguation_index": 0,
      "label": "define schema information for KGs stored as an RDF graph",
      "aliases": [
        "schema information for KGs stored as an RDF graph",
        "define schema information for KGs stored as an RDF graph"
      ],
      "types": [
        "information",
        "definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A definition of schema information that provides structure and constraints for knowledge graphs (KGs) represented in the Resource Description Framework (RDF) format.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "define schema information for KGs stored as an RDF graph",
          "local_types": [
            "definition"
          ],
          "iri": "Entity-define_schema_information_for_kg_stored_a_an_rdf_graph-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "schema information for KGs stored as an RDF graph",
          "local_types": [
            "information"
          ],
          "iri": "Entity-define_schema_information_for_kg_stored_a_an_rdf_graph-Mention-2"
        }
      ],
      "relevance": 0.58837890625
    },
    "Entity-yago2_demonstrates_a_tendency_towards_higher_cardinality_than_the_other_kg__possibly_a_result_of_it_more_curated_development": {
      "node_id": "yago2_demonstrates_a_tendency_towards_higher_cardinality_than_the_other_kg__possibly_a_result_of_it_more_curated_development",
      "disambiguation_index": 0,
      "label": "YAGO2 demonstrates a tendency towards higher cardinalities than the other KGs, possibly a result of its more curated development",
      "aliases": [
        "YAGO2 demonstrates a tendency towards higher cardinalities than the other KGs, possibly a result of its more curated development"
      ],
      "types": [
        "study",
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A knowledge graph with 4 million facts",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-6-Sentence-3",
          "local_name": "YAGO2 demonstrates a tendency towards higher cardinalities than the other KGs, possibly a result of its more curated development",
          "local_types": [
            "study",
            "research"
          ],
          "iri": "Entity-yago2_demonstrates_a_tendency_towards_higher_cardinality_than_the_other_kg__possibly_a_result_of_it_more_curated_development-Mention-1"
        }
      ],
      "relevance": 0.58837890625
    },
    "Entity-their_data-first_approach": {
      "node_id": "their_data-first_approach",
      "disambiguation_index": 0,
      "label": "their data-first approach",
      "aliases": [
        "their data-first approach"
      ],
      "types": [
        "approach",
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The methodology that enables contributors to extend a Knowledge Graph (KG) in a relatively arbitrary manner.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "their data-first approach",
          "local_types": [
            "approach",
            "methodology"
          ],
          "iri": "Entity-their_data-first_approach-Mention-1"
        }
      ],
      "relevance": 0.58837890625
    },
    "Entity-this_completion_strategy": {
      "node_id": "this_completion_strategy",
      "disambiguation_index": 0,
      "label": "This completion strategy",
      "aliases": [
        "This completion strategy",
        "This strategy"
      ],
      "types": [
        "strategy"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A depth-first questioning approach for completing knowledge graphs by working sequentially along a shape tree, reducing cognitive load and facilitating human- KG interaction.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-6",
          "local_name": "This completion strategy",
          "local_types": [
            "strategy"
          ],
          "iri": "Entity-this_completion_strategy-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-8",
          "local_name": "This strategy",
          "local_types": [
            "strategy"
          ],
          "iri": "Entity-this_completion_strategy-Mention-2"
        }
      ],
      "relevance": 0.58837890625
    },
    "Entity-any_instantiated_open_path": {
      "node_id": "any_instantiated_open_path",
      "disambiguation_index": 0,
      "label": "any instantiated open path",
      "aliases": [
        "any instantiated open path"
      ],
      "types": [
        "path"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A specific instance of an open path in a knowledge graph, which corresponds to both an Open Path (OP) rule and its converse Inverse Open Path (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "any instantiated open path",
          "local_types": [
            "path"
          ],
          "iri": "Entity-any_instantiated_open_path-Mention-1"
        }
      ],
      "relevance": 0.587890625
    },
    "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg": {
      "node_id": "if_there_exist_entity_e1__...__e__n-1__in_the_kg",
      "disambiguation_index": 0,
      "label": "if there exist entities e1, ..., e(n-1) in the KG",
      "aliases": [
        "if there exist entities e1, ..., e(n-1) in the KG"
      ],
      "types": [
        "entities",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A condition for satisfying the body of a closed-path rule, requiring the existence of specific entities and their relationships within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "if there exist entities e1, ..., e(n-1) in the KG",
          "local_types": [
            "entities",
            "knowledge graph"
          ],
          "iri": "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.587890625
    },
    "Entity-note_that": {
      "node_id": "note_that",
      "disambiguation_index": 0,
      "label": "Note that",
      "aliases": [
        "Note that"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of IOP rules learned by SHACLEARNER, characterized by varying lengths and cardinalities.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-2",
          "local_name": "Note that",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-note_that-Mention-1"
        }
      ],
      "relevance": 0.587890625
    },
    "Entity-human-kg-completion": {
      "node_id": "human-kg-completion",
      "disambiguation_index": 0,
      "label": "human-KG-completion",
      "aliases": [
        "human-KG-completion"
      ],
      "types": [
        "knowledge graph completion",
        "natural language processing",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique or process of completing knowledge graphs with information from various sources, often involving human input and natural language processing.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-8",
          "local_name": "human-KG-completion",
          "local_types": [
            "knowledge graph completion",
            "natural language processing",
            "concept"
          ],
          "iri": "Entity-human-kg-completion-Mention-1"
        }
      ],
      "relevance": 0.58740234375
    },
    "Entity-the_general_form_of_a_tree": {
      "node_id": "the_general_form_of_a_tree",
      "disambiguation_index": 0,
      "label": "The general form of a tree",
      "aliases": [
        "The general form of a tree"
      ],
      "types": [
        "form"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A tree-shaped structure consisting of a head predicate and a sequence of paths or branches, each representing a set of SHACL shapes that can be used to validate a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "The general form of a tree",
          "local_types": [
            "form"
          ],
          "iri": "Entity-the_general_form_of_a_tree-Mention-1"
        }
      ],
      "relevance": 0.58740234375
    },
    "Entity-opsc": {
      "node_id": "opsc",
      "disambiguation_index": 0,
      "label": "OPSC",
      "aliases": [
        "OPSC"
      ],
      "types": [
        "metric",
        "concept",
        "ontology path",
        "evaluation metric",
        "schema",
        "notation",
        "knowledge graph concept",
        "abbreviation",
        "mathematical concept",
        "open path",
        "ontology",
        "statistic",
        "standard",
        "knowledge graph component",
        "equation",
        "rule",
        "function",
        "pathway"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A measure of the proportion of entities that satisfy both the body and head of an open path rule, used to assess the quality of such rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "standard",
            "metric",
            "evaluation metric"
          ],
          "iri": "Entity-opsc-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-5-Sentence-3",
          "local_name": "OPSC",
          "local_types": [
            "metric",
            "evaluation metric",
            "notation",
            "mathematical concept",
            "equation",
            "function"
          ],
          "iri": "Entity-opsc-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "metric",
            "concept",
            "evaluation metric",
            "ontology path",
            "abbreviation",
            "open path",
            "knowledge graph component",
            "pathway"
          ],
          "iri": "Entity-opsc-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "concept",
            "schema",
            "knowledge graph concept",
            "ontology",
            "rule"
          ],
          "iri": "Entity-opsc-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-5",
          "local_name": "OPSC",
          "local_types": [
            "metric",
            "rule",
            "statistic"
          ],
          "iri": "Entity-opsc-Mention-5"
        }
      ],
      "relevance": 0.5869140625
    },
    "Entity-experiment_to_assess_it": {
      "node_id": "experiment_to_assess_it",
      "disambiguation_index": 0,
      "label": "experiments to assess it",
      "aliases": [
        "experiments to assess it"
      ],
      "types": [
        "experiment",
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The effectiveness of the proposed system, SHACLEARNER, at capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-1",
          "local_name": "experiments to assess it",
          "local_types": [
            "experiment",
            "evaluation"
          ],
          "iri": "Entity-experiment_to_assess_it-Mention-1"
        }
      ],
      "relevance": 0.5869140625
    },
    "Entity-quality_iop_rule": {
      "node_id": "quality_iop_rule",
      "disambiguation_index": 0,
      "label": "quality IOP rules",
      "aliases": [
        "quality IOP rules"
      ],
      "types": [
        "algorithm",
        "concept",
        "performance indicator",
        "evaluation metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Formal measures defining the quality of Inverse Open Path rules",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-1",
          "local_name": "quality IOP rules",
          "local_types": [
            "algorithm",
            "concept",
            "performance indicator",
            "evaluation metric"
          ],
          "iri": "Entity-quality_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.5859375
    },
    "Entity-whether_collaboratively_or_individually__manually_or_automatically": {
      "node_id": "whether_collaboratively_or_individually__manually_or_automatically",
      "disambiguation_index": 0,
      "label": "whether collaboratively or individually, manually or automatically",
      "aliases": [
        "whether collaboratively or individually, manually or automatically"
      ],
      "types": [
        "approach",
        "collaboration",
        "automation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The method used to build a Knowledge Graph (KG)",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "whether collaboratively or individually, manually or automatically",
          "local_types": [
            "approach",
            "collaboration",
            "automation"
          ],
          "iri": "Entity-whether_collaboratively_or_individually__manually_or_automatically-Mention-1"
        }
      ],
      "relevance": 0.5859375
    },
    "Entity-the_classic_version": {
      "node_id": "the_classic_version",
      "disambiguation_index": 0,
      "label": "the classic version",
      "aliases": [
        "the classic version"
      ],
      "types": [
        "version"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A small, synthetic knowledge graph (KG) used as an evaluation benchmark, adapted from the original 'classic' version to ensure richness and correctness.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-4",
          "local_name": "the classic version",
          "local_types": [
            "version"
          ],
          "iri": "Entity-the_classic_version-Mention-1"
        }
      ],
      "relevance": 0.5859375
    },
    "Entity-the_original_predicate_and_fact_in_the_kg_a_well_a_extending_it_with_our_new_one": {
      "node_id": "the_original_predicate_and_fact_in_the_kg_a_well_a_extending_it_with_our_new_one",
      "disambiguation_index": 0,
      "label": "the original predicates and facts in the KG as well as extending it with our new ones",
      "aliases": [
        "the original predicates and facts in the KG as well as extending it with our new ones"
      ],
      "types": [
        "knowledge graph",
        "extension"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The knowledge graph's original predicates, facts, and newly added unary predicates and facts.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-4",
          "local_name": "the original predicates and facts in the KG as well as extending it with our new ones",
          "local_types": [
            "knowledge graph",
            "extension"
          ],
          "iri": "Entity-the_original_predicate_and_fact_in_the_kg_a_well_a_extending_it_with_our_new_one-Mention-1"
        }
      ],
      "relevance": 0.5859375
    },
    "Entity-iopsc_and_iophc_belong_to__0__1__and_denote_the_quality_of_the_rule": {
      "node_id": "iopsc_and_iophc_belong_to__0__1__and_denote_the_quality_of_the_rule",
      "disambiguation_index": 0,
      "label": "IOPSC and IOPHC belong to [0, 1] and denote the qualities of the rule",
      "aliases": [
        "IOPSC and IOPHC belong to [0, 1] and denote the qualities of the rule"
      ],
      "types": [
        "quality",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The quality measures for inverse open path rules (IOP) that describe the support, standard confidence, and head coverage of a rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-5",
          "local_name": "IOPSC and IOPHC belong to [0, 1] and denote the qualities of the rule",
          "local_types": [
            "quality",
            "rule"
          ],
          "iri": "Entity-iopsc_and_iophc_belong_to__0__1__and_denote_the_quality_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.58544921875
    },
    "Entity-the_approach": {
      "node_id": "the_approach",
      "disambiguation_index": 0,
      "label": "the approach",
      "aliases": [
        "the approach"
      ],
      "types": [
        "approach",
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The approach refers to procedural methods without logical foundations used in exploratory attempts to learn SHACL shapes from knowledge graphs, which lack scalability and essential quality measures for large-scale shape mining.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "the approach",
          "local_types": [
            "approach",
            "methodology"
          ],
          "iri": "Entity-the_approach-Mention-1"
        }
      ],
      "relevance": 0.58544921875
    },
    "Entity-threshold_established_in_comparative_work": {
      "node_id": "threshold_established_in_comparative_work",
      "disambiguation_index": 0,
      "label": "thresholds established in comparative work",
      "aliases": [
        "thresholds established in comparative work"
      ],
      "types": [
        "study",
        "work"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Minimum quality thresholds for Inverse Open Path (IOP) rules used to filter out low-quality rules",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "thresholds established in comparative work",
          "local_types": [
            "study",
            "work"
          ],
          "iri": "Entity-threshold_established_in_comparative_work-Mention-1"
        }
      ],
      "relevance": 0.58544921875
    },
    "Entity-a_consistent_decrease_in_the_proportion_of_quality_rule": {
      "node_id": "a_consistent_decrease_in_the_proportion_of_quality_rule",
      "disambiguation_index": 0,
      "label": "a consistent decrease in the proportion of quality rules",
      "aliases": [
        "a consistent decrease in the proportion of quality rules"
      ],
      "types": [
        "trend"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The trend showing a decline in the proportion of high-quality SHACL shape learning rules as their confidence score (IOPSC) increases.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-2",
          "local_name": "a consistent decrease in the proportion of quality rules",
          "local_types": [
            "trend"
          ],
          "iri": "Entity-a_consistent_decrease_in_the_proportion_of_quality_rule-Mention-1"
        }
      ],
      "relevance": 0.58544921875
    },
    "Entity-mined_rule_with_respect_to_their_cardinality": {
      "node_id": "mined_rule_with_respect_to_their_cardinality",
      "disambiguation_index": 0,
      "label": "mined rules with respect to their cardinalities",
      "aliases": [
        "mined rules with respect to their cardinalities"
      ],
      "types": [
        "data",
        "statistics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Mined IOP (Inverse Open Path) rules with respect to their cardinalities",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-6-Sentence-1",
          "local_name": "mined rules with respect to their cardinalities",
          "local_types": [
            "data",
            "statistics"
          ],
          "iri": "Entity-mined_rule_with_respect_to_their_cardinality-Mention-1"
        }
      ],
      "relevance": 0.5849609375
    },
    "Entity-pathfinding__": {
      "node_id": "pathfinding__",
      "disambiguation_index": 0,
      "label": "PathFinding()",
      "aliases": [
        "PathFinding()"
      ],
      "types": [
        "method",
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method that generates candidate Inverse Open Path (IOP) rules by leveraging the embedding representations of predicates involved in each rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "PathFinding()",
          "local_types": [
            "method",
            "function"
          ],
          "iri": "Entity-pathfinding__-Mention-1"
        }
      ],
      "relevance": 0.5849609375
    },
    "Entity-provide_logical_foundation_for_the_semantics_of_the_shacl_language__including_one_that_present_the_semantics_of_recursive_shacl_shape_.": {
      "node_id": "provide_logical_foundation_for_the_semantics_of_the_shacl_language__including_one_that_present_the_semantics_of_recursive_shacl_shape_.",
      "disambiguation_index": 0,
      "label": "provide logical foundations for the semantics of the SHACL language, including one that presents the semantics of recursive SHACL shapes.",
      "aliases": [
        "provide logical foundations for the semantics of the SHACL language, including one that presents the semantics of recursive SHACL shapes."
      ],
      "types": [
        "research goal",
        "language design"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Research goal or design effort aiming to establish a solid foundation in logic for understanding and working with the Shapes Constraint Language (SHACL), including its recursive shape semantics.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-1",
          "local_name": "provide logical foundations for the semantics of the SHACL language, including one that presents the semantics of recursive SHACL shapes.",
          "local_types": [
            "research goal",
            "language design"
          ],
          "iri": "Entity-provide_logical_foundation_for_the_semantics_of_the_shacl_language__including_one_that_present_the_semantics_of_recursive_shacl_shape_.-Mention-1"
        }
      ],
      "relevance": 0.58447265625
    },
    "Entity-the_closed_path_form": {
      "node_id": "the_closed_path_form",
      "disambiguation_index": 0,
      "label": "the closed path forms",
      "aliases": [
        "the closed path forms"
      ],
      "types": [
        "formalism",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A formalism or concept that represents a specific shape pattern expressed as paths over connected entities present in a knowledge graph, used to validate and maintain large-scale graph databases.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "the closed path forms",
          "local_types": [
            "formalism",
            "concept"
          ],
          "iri": "Entity-the_closed_path_form-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-the_set_of_sampled_entity_for_a_target_predicate_will_be_of_size_2lfe_in_the_worst_case_.": {
      "node_id": "the_set_of_sampled_entity_for_a_target_predicate_will_be_of_size_2lfe_in_the_worst_case_.",
      "disambiguation_index": 0,
      "label": "the set of sampled entities for a target predicate will be of size 2l|F||E| in the worst case.",
      "aliases": [
        "the set of sampled entities for a target predicate will be of size 2l|F||E| in the worst case."
      ],
      "types": [
        "set",
        "predicate",
        "mathematical expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The maximum possible number of entities selected from a knowledge graph K, given its facts F and entities E, for learning SHACL shapes with respect to a target predicate.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "the set of sampled entities for a target predicate will be of size 2l|F||E| in the worst case.",
          "local_types": [
            "set",
            "predicate",
            "mathematical expression"
          ],
          "iri": "Entity-the_set_of_sampled_entity_for_a_target_predicate_will_be_of_size_2lfe_in_the_worst_case_.-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-another_work": {
      "node_id": "another_work",
      "disambiguation_index": 0,
      "label": "Another work",
      "aliases": [
        "Another work"
      ],
      "types": [
        "research",
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A previous research paper or study that proposes an interactive framework for defining SHACL shapes with varying levels of complexity, featuring nested patterns comparable to the tree structures used in this work.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "Another work",
          "local_types": [
            "research",
            "paper"
          ],
          "iri": "Entity-another_work-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-the_quality_of_performance": {
      "node_id": "the_quality_of_performance",
      "disambiguation_index": 0,
      "label": "the quality of performance",
      "aliases": [
        "the quality of performance"
      ],
      "types": [
        "performance metric",
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The measure of confidence and generality in the rules learned by SHACLEARNER, evaluated using Inverse Open Path Standard Confidence (IOPSC) and Inverse Open Path Head Coverage (IOPHC).",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-4",
          "local_name": "the quality of performance",
          "local_types": [
            "performance metric",
            "evaluation"
          ],
          "iri": "Entity-the_quality_of_performance-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-an_expected_decrease_with_greater_cardinality_a_they_demand_tighter_restriction_to_be_satisfied": {
      "node_id": "an_expected_decrease_with_greater_cardinality_a_they_demand_tighter_restriction_to_be_satisfied",
      "disambiguation_index": 0,
      "label": "an expected decrease with greater cardinalities as they demand tighter restrictions to be satisfied",
      "aliases": [
        "an expected decrease with greater cardinalities as they demand tighter restrictions to be satisfied"
      ],
      "types": [
        "phenomenon",
        "trend"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The trend or phenomenon of a decreasing proportion of quality rules mined from knowledge graphs (KGs) as their cardinality increases, indicating that higher-cardinality rules require tighter restrictions to be satisfied.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-6-Sentence-2",
          "local_name": "an expected decrease with greater cardinalities as they demand tighter restrictions to be satisfied",
          "local_types": [
            "phenomenon",
            "trend"
          ],
          "iri": "Entity-an_expected_decrease_with_greater_cardinality_a_they_demand_tighter_restriction_to_be_satisfied-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-for_an_example": {
      "node_id": "for_an_example",
      "disambiguation_index": 0,
      "label": "For an example",
      "aliases": [
        "For an example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific illustration or instance of how SHACLEARNER learns and generates complex shapes, such as trees, from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "For an example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_an_example-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-pn___z__n-1___y_": {
      "node_id": "pn___z__n-1___y_",
      "disambiguation_index": 0,
      "label": "Pn'(z(n-1), y)",
      "aliases": [
        "Pn'(z(n-1), y)"
      ],
      "types": [
        "process",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism that presents specific shapes in the form of paths over connected entities present in a Knowledge Graph, used to express constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-4",
          "local_name": "Pn'(z(n-1), y)",
          "local_types": [
            "process",
            "function"
          ],
          "iri": "Entity-pn___z__n-1___y_-Mention-1"
        }
      ],
      "relevance": 0.58349609375
    },
    "Entity-here": {
      "node_id": "here",
      "disambiguation_index": 0,
      "label": "Here",
      "aliases": [
        "Here"
      ],
      "types": [
        "introductory phrase"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The introductory phrase 'Here', referring to the general form of an Inverse Open Path (IOP) rule in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "Here",
          "local_types": [
            "introductory phrase"
          ],
          "iri": "Entity-here-Mention-1"
        }
      ],
      "relevance": 0.58349609375
    },
    "Entity-shacl_advanced_feature": {
      "node_id": "shacl_advanced_feature",
      "disambiguation_index": 0,
      "label": "SHACL advanced features",
      "aliases": [
        "SHACL advanced features"
      ],
      "types": [
        "standard",
        "feature set",
        "feature",
        "software feature"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of sophisticated capabilities and functionalities that enhance or extend the standard features of the Shapes Constraint Language (SHACL).",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-1",
          "local_name": "SHACL advanced features",
          "local_types": [
            "standard",
            "feature set",
            "feature",
            "software feature"
          ],
          "iri": "Entity-shacl_advanced_feature-Mention-1"
        }
      ],
      "relevance": 0.5830078125
    },
    "Entity-in_real-world_kg": {
      "node_id": "in_real-world_kg",
      "disambiguation_index": 0,
      "label": "In real-world KGs",
      "aliases": [
        "In real-world KGs"
      ],
      "types": [
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Real-world knowledge graphs where concept or class membership is modeled as entity instances of a binary fact.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-1",
          "local_name": "In real-world KGs",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-in_real-world_kg-Mention-1"
        }
      ],
      "relevance": 0.5830078125
    },
    "Entity-iopsc": {
      "node_id": "iopsc",
      "disambiguation_index": 0,
      "label": "IOPSC",
      "aliases": [
        "IOPSC"
      ],
      "types": [
        "conference",
        "statistic",
        "score",
        "evaluation method",
        "ontology",
        "abbreviation",
        "symbol",
        "quality measure",
        "indicator",
        "performance indicator",
        "equation",
        "framework",
        "index",
        "term",
        "ratio",
        "method",
        "measure",
        "function",
        "quality measurement",
        "constant",
        "metric",
        "evaluation criterion",
        "organization",
        "notation",
        "feature",
        "acronym",
        "project",
        "attribute",
        "mathematical equation",
        "symbolic representation",
        "formula",
        "algorithm",
        "concept",
        "parameter",
        "system",
        "mathematical concept",
        "quality metric",
        "variable",
        "theory",
        "evaluation measure",
        "quality",
        "IOPSC",
        "technology"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Inverse Open Path Support, a quality measure for Inverse Open Path rules",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-7",
          "local_name": "IOPSC",
          "local_types": [
            "mathematical concept",
            "mathematical equation",
            "equation"
          ],
          "iri": "Entity-iopsc-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-7",
          "local_name": "IOPSC",
          "local_types": [
            "ratio",
            "metric",
            "statistic",
            "parameter",
            "constant"
          ],
          "iri": "Entity-iopsc-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-4",
          "local_name": "IOPSC",
          "local_types": [
            "organization",
            "notation",
            "term"
          ],
          "iri": "Entity-iopsc-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-5",
          "local_name": "IOPSC",
          "local_types": [
            "notation",
            "symbol",
            "parameter",
            "variable"
          ],
          "iri": "Entity-iopsc-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "concept",
            "notation",
            "theory",
            "measure",
            "symbolic representation"
          ],
          "iri": "Entity-iopsc-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "IOPSC",
          "local_types": [
            "function",
            "mathematical concept",
            "concept",
            "theory"
          ],
          "iri": "Entity-iopsc-Mention-6"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-3",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "quality measurement"
          ],
          "iri": "Entity-iopsc-Mention-7"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-2",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "concept",
            "acronym",
            "indicator"
          ],
          "iri": "Entity-iopsc-Mention-8"
        },
        {
          "reference": "Section-15-Paragraph-5-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "conference",
            "organization",
            "ontology",
            "quality measure",
            "project"
          ],
          "iri": "Entity-iopsc-Mention-9"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-2",
          "local_name": "IOPSC",
          "local_types": [
            "organization",
            "metric",
            "abbreviation",
            "quality measure"
          ],
          "iri": "Entity-iopsc-Mention-10"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "IOPSC",
          "local_types": [
            "algorithm",
            "method",
            "concept"
          ],
          "iri": "Entity-iopsc-Mention-11"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "concept",
            "ontology",
            "system",
            "framework",
            "technology"
          ],
          "iri": "Entity-iopsc-Mention-12"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "parameter",
            "variable",
            "measure",
            "function"
          ],
          "iri": "Entity-iopsc-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-iopsc-Mention-14"
        },
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "measure",
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-iopsc-Mention-15"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-3",
          "local_name": "IOPSC",
          "local_types": [
            "score",
            "metric",
            "algorithm"
          ],
          "iri": "Entity-iopsc-Mention-16"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "algorithm",
            "concept",
            "parameter",
            "theory",
            "index"
          ],
          "iri": "Entity-iopsc-Mention-17"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "organization",
            "abbreviation"
          ],
          "iri": "Entity-iopsc-Mention-18"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "formula"
          ],
          "iri": "Entity-iopsc-Mention-19"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-2",
          "local_name": "IOPSC",
          "local_types": [
            "score",
            "metric",
            "evaluation criterion"
          ],
          "iri": "Entity-iopsc-Mention-20"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-5",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "evaluation measure"
          ],
          "iri": "Entity-iopsc-Mention-21"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-2",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "quality measure"
          ],
          "iri": "Entity-iopsc-Mention-22"
        },
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "IOPSC",
          "local_types": [
            "parameter",
            "metric",
            "quality measure",
            "indicator"
          ],
          "iri": "Entity-iopsc-Mention-23"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-3",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "feature",
            "attribute",
            "quality measure"
          ],
          "iri": "Entity-iopsc-Mention-24"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "parameter",
            "quality measure",
            "quality metric",
            "performance indicator",
            "IOPSC"
          ],
          "iri": "Entity-iopsc-Mention-25"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-4",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "performance indicator"
          ],
          "iri": "Entity-iopsc-Mention-26"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "concept",
            "parameter",
            "quality measure",
            "quality"
          ],
          "iri": "Entity-iopsc-Mention-27"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-4",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "score"
          ],
          "iri": "Entity-iopsc-Mention-28"
        },
        {
          "reference": "Section-16-Paragraph-4-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-iopsc-Mention-29"
        },
        {
          "reference": "Section-16-Paragraph-4-Sentence-4",
          "local_name": "IOPSC",
          "local_types": [
            "parameter",
            "metric"
          ],
          "iri": "Entity-iopsc-Mention-30"
        },
        {
          "reference": "Section-16-Paragraph-5-Sentence-1",
          "local_name": "IOPSC",
          "local_types": [
            "metric",
            "quality measure"
          ],
          "iri": "Entity-iopsc-Mention-31"
        }
      ],
      "relevance": 0.58251953125
    },
    "Entity-the_head_of_r": {
      "node_id": "the_head_of_r",
      "disambiguation_index": 0,
      "label": "the head of r",
      "aliases": [
        "the head of r"
      ],
      "types": [
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The predicate (or property) mentioned as the 'head' in an SHACL shape, which is part of a rule defining constraints on graph data.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-4",
          "local_name": "the head of r",
          "local_types": [
            "head"
          ],
          "iri": "Entity-the_head_of_r-Mention-1"
        }
      ],
      "relevance": 0.58251953125
    },
    "Entity-the_quality_of_a_kg": {
      "node_id": "the_quality_of_a_kg",
      "disambiguation_index": 0,
      "label": "the quality of a KG",
      "aliases": [
        "the quality of a KG"
      ],
      "types": [
        "knowledge graph",
        "property",
        "quality"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The measure or standard by which the quality of a knowledge graph (KG) can be evaluated.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-1",
          "local_name": "the quality of a KG",
          "local_types": [
            "knowledge graph",
            "property",
            "quality"
          ],
          "iri": "Entity-the_quality_of_a_kg-Mention-1"
        }
      ],
      "relevance": 0.58203125
    },
    "Entity-kg_or_it_reverse_with_subject_and_object_binding_swapped": {
      "node_id": "kg_or_it_reverse_with_subject_and_object_binding_swapped",
      "disambiguation_index": 0,
      "label": "KG or its reverse with subject and object bindings swapped",
      "aliases": [
        "KG or its reverse with subject and object bindings swapped"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge graph where relationships between entities have been reversed to swap their roles.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "KG or its reverse with subject and object bindings swapped",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-kg_or_it_reverse_with_subject_and_object_binding_swapped-Mention-1"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-confidence_treescorig": {
      "node_id": "confidence_treescorig",
      "disambiguation_index": 0,
      "label": "confidence TreeSCorig",
      "aliases": [
        "confidence TreeSCorig"
      ],
      "types": [
        "measure",
        "metric",
        "evaluation measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The confidence measure of a tree shape learned by SHACLEARNER, indicating its quality and generality in predicting instances from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "confidence TreeSCorig",
          "local_types": [
            "measure",
            "metric",
            "evaluation measure"
          ],
          "iri": "Entity-confidence_treescorig-Mention-1"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-the_predicate_p1__p2__and_pt": {
      "node_id": "the_predicate_p1__p2__and_pt",
      "disambiguation_index": 0,
      "label": "the predicates P1, P2, and Pt",
      "aliases": [
        "the predicates P1, P2, and Pt"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of three predicate rules (P1, P2, and Pt) used to define shapes in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "the predicates P1, P2, and Pt",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-the_predicate_p1__p2__and_pt-Mention-1"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-this_feature": {
      "node_id": "this_feature",
      "disambiguation_index": 0,
      "label": "This feature",
      "aliases": [
        "This feature"
      ],
      "types": [
        "feature"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The representation of types and classes as unary predicates in knowledge graphs, allowing for learning fully abstracted shapes instead of partially instantiated ones.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-2",
          "local_name": "This feature",
          "local_types": [
            "feature"
          ],
          "iri": "Entity-this_feature-Mention-1"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-node_shape": {
      "node_id": "node_shape",
      "disambiguation_index": 0,
      "label": "node shapes",
      "aliases": [
        "node shapes"
      ],
      "types": [
        "constraint definition",
        "shape",
        "constraint",
        "data structure",
        "conceptual structure",
        "rule",
        "data model component",
        "conceptual model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of rules or definitions that specify the structure and constraints for nodes in a graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "node shapes",
          "local_types": [
            "constraint definition",
            "shape",
            "constraint",
            "data structure",
            "conceptual structure",
            "rule",
            "data model component",
            "conceptual model"
          ],
          "iri": "Entity-node_shape-Mention-1"
        }
      ],
      "relevance": 0.5810546875
    },
    "Entity-this_lemma": {
      "node_id": "this_lemma",
      "disambiguation_index": 0,
      "label": "This lemma",
      "aliases": [
        "This lemma"
      ],
      "types": [
        "lemma"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "This lemma refers to a specific SHACL shape that can be derived from one or more inverse open path rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "This lemma",
          "local_types": [
            "lemma"
          ],
          "iri": "Entity-this_lemma-Mention-1"
        }
      ],
      "relevance": 0.5810546875
    },
    "Entity-a_reduced_set_of_candidate_iop_rule": {
      "node_id": "a_reduced_set_of_candidate_iop_rule",
      "disambiguation_index": 0,
      "label": "a reduced set of candidate IOP rules",
      "aliases": [
        "a reduced set of candidate IOP rules"
      ],
      "types": [
        "set",
        "candidate rule",
        "IOP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of high-scoring potential Inverse Open Path (IOP) rules that have been pruned from the space of all possible IOP rules using two scoring functions.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "a reduced set of candidate IOP rules",
          "local_types": [
            "set",
            "candidate rule",
            "IOP rule"
          ],
          "iri": "Entity-a_reduced_set_of_candidate_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.5810546875
    },
    "Entity-two_benchmark": {
      "node_id": "two_benchmark",
      "disambiguation_index": 0,
      "label": "two benchmarks",
      "aliases": [
        "two benchmarks"
      ],
      "types": [
        "benchmarks"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Two benchmarks for evaluating SHACLEARNER's performance on learning shapes from massive knowledge graphs, including YAGO2s with 4 million facts and DBpedia 3.8 with 11 million facts.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-5",
          "local_name": "two benchmarks",
          "local_types": [
            "benchmarks"
          ],
          "iri": "Entity-two_benchmark-Mention-1"
        }
      ],
      "relevance": 0.5810546875
    },
    "Entity-p1": {
      "node_id": "p1",
      "disambiguation_index": 0,
      "label": "P1",
      "aliases": [
        "P1_1",
        "P1"
      ],
      "types": [
        "notation",
        "argument",
        "symbol",
        "mathematical constant",
        "variable",
        "rule",
        "function",
        "predicate"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism that presents specific shapes in the form of paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P1",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p1-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "P1",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p1-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "P1",
          "local_types": [
            "rule",
            "predicate"
          ],
          "iri": "Entity-p1-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-6",
          "local_name": "P1",
          "local_types": [
            "rule",
            "predicate"
          ],
          "iri": "Entity-p1-Mention-4"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "P1",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p1-Mention-5"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-4",
          "local_name": "P1",
          "local_types": [
            "mathematical constant"
          ],
          "iri": "Entity-p1-Mention-6"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "P1",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-p1-Mention-7"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-2",
          "local_name": "P1_1",
          "local_types": [
            "notation",
            "argument",
            "symbol",
            "variable"
          ],
          "iri": "Entity-p1-Mention-8"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-the_fact_in_the_kg": {
      "node_id": "the_fact_in_the_kg",
      "disambiguation_index": 0,
      "label": "the facts in the KG",
      "aliases": [
        "and the facts in the KG:",
        "the facts in the KG"
      ],
      "types": [
        "facts",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of statements or assertions in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "the facts in the KG",
          "local_types": [
            "facts",
            "knowledge graph"
          ],
          "iri": "Entity-the_fact_in_the_kg-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "and the facts in the KG:",
          "local_types": [
            "facts",
            "knowledge graph"
          ],
          "iri": "Entity-the_fact_in_the_kg-Mention-2"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-add_pathfinding__k___pt__p__a__k_": {
      "node_id": "add_pathfinding__k___pt__p__a__k_",
      "disambiguation_index": 0,
      "label": "Add PathFinding(K', Pt, P, A, k)",
      "aliases": [
        "Add PathFinding(K', Pt, P, A, k)"
      ],
      "types": [
        "algorithm",
        "pathfinding",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The 'Add PathFinding' function adds a pathfinding algorithm to learn high-quality IOP rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-9",
          "local_name": "Add PathFinding(K', Pt, P, A, k)",
          "local_types": [
            "algorithm",
            "pathfinding",
            "function"
          ],
          "iri": "Entity-add_pathfinding__k___pt__p__a__k_-Mention-1"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-path_of_shape_predicate": {
      "node_id": "path_of_shape_predicate",
      "disambiguation_index": 0,
      "label": "path of shape predicates",
      "aliases": [
        "an entire path of shape predicates",
        "path of shape predicates"
      ],
      "types": [
        "sequence of rules",
        "rule-based system",
        "path",
        "shape predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sequence of rules or predicate logic formalism expressing specific shapes in the form of paths over connected entities that are present in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "path of shape predicates",
          "local_types": [
            "sequence of rules",
            "rule-based system"
          ],
          "iri": "Entity-path_of_shape_predicate-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "an entire path of shape predicates",
          "local_types": [
            "path",
            "shape predicate"
          ],
          "iri": "Entity-path_of_shape_predicate-Mention-2"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-iopsc_interval": {
      "node_id": "iopsc_interval",
      "disambiguation_index": 0,
      "label": "IOPSC intervals",
      "aliases": [
        "IOPSC intervals"
      ],
      "types": [
        "interval",
        "time period"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACL shape patterns that can be augmented with minimum cardinality constraints and used as a building block for more complex shapes",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "IOPSC intervals",
          "local_types": [
            "interval",
            "time period"
          ],
          "iri": "Entity-iopsc_interval-Mention-1"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-the_expressivity_of_the_shape_we_can_discover": {
      "node_id": "the_expressivity_of_the_shape_we_can_discover",
      "disambiguation_index": 0,
      "label": "the expressivity of the shapes we can discover",
      "aliases": [
        "the expressivity of the shapes we can discover"
      ],
      "types": [
        "concept",
        "expressivity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept or quality of being expressive, referring to the ability to learn SHACL shapes from knowledge graphs that describe conjunctive paths of constraints over properties.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-1",
          "local_name": "the expressivity of the shapes we can discover",
          "local_types": [
            "concept",
            "expressivity"
          ],
          "iri": "Entity-the_expressivity_of_the_shape_we_can_discover-Mention-1"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-the_number_of_rule__the_average_number_of_quality_iop_rule_found__the_proportion_of_target_predicate_for_which_at_least_one_iop_rule_wa_found__and_the_running_time_in_hour__averaged_over_the_target_.": {
      "node_id": "the_number_of_rule__the_average_number_of_quality_iop_rule_found__the_proportion_of_target_predicate_for_which_at_least_one_iop_rule_wa_found__and_the_running_time_in_hour__averaged_over_the_target_.",
      "disambiguation_index": 0,
      "label": "the number of rules, the average numbers of quality IOP rules found, the proportion of target predicates for which at least one IOP rule was found, and the running times in hours, averaged over the targets.",
      "aliases": [
        "the number of rules, the average numbers of quality IOP rules found, the proportion of target predicates for which at least one IOP rule was found, and the running times in hours, averaged over the targets."
      ],
      "types": [
        "data",
        "statistics"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Statistics about the number of learned rules, their quality, and runtime performance on various knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-1",
          "local_name": "the number of rules, the average numbers of quality IOP rules found, the proportion of target predicates for which at least one IOP rule was found, and the running times in hours, averaged over the targets.",
          "local_types": [
            "data",
            "statistics"
          ],
          "iri": "Entity-the_number_of_rule__the_average_number_of_quality_iop_rule_found__the_proportion_of_target_predicate_for_which_at_least_one_iop_rule_wa_found__and_the_running_time_in_hour__averaged_over_the_target_.-Mention-1"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-while_enabling_the_acquisition_of_fact_about_entity_that_are_entirely_missing_from_the_kg": {
      "node_id": "while_enabling_the_acquisition_of_fact_about_entity_that_are_entirely_missing_from_the_kg",
      "disambiguation_index": 0,
      "label": "while enabling the acquisition of facts about entities that are entirely missing from the KG",
      "aliases": [
        "while enabling the acquisition of facts about entities that are entirely missing from the KG"
      ],
      "types": [
        "process",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of acquiring facts about entities that do not exist in a knowledge graph (KG), while enabling the acquisition of such facts.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-1",
          "local_name": "while enabling the acquisition of facts about entities that are entirely missing from the KG",
          "local_types": [
            "process",
            "knowledge graph"
          ],
          "iri": "Entity-while_enabling_the_acquisition_of_fact_about_entity_that_are_entirely_missing_from_the_kg-Mention-1"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-sampled_kg": {
      "node_id": "sampled_kg",
      "disambiguation_index": 0,
      "label": "sampled KG",
      "aliases": [
        "sampled KG"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A subset of data extracted from a knowledge graph to facilitate learning or testing.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-5",
          "local_name": "sampled KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-sampled_kg-Mention-1"
        }
      ],
      "relevance": 0.580078125
    },
    "Entity-the_kg_consistent": {
      "node_id": "the_kg_consistent",
      "disambiguation_index": 0,
      "label": "the KG consistent",
      "aliases": [
        "the KG consistent"
      ],
      "types": [
        "goal"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The goal that ensures a knowledge graph (KG) conforms to its defined schema and constraints.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-4",
          "local_name": "the KG consistent",
          "local_types": [
            "goal"
          ],
          "iri": "Entity-the_kg_consistent-Mention-1"
        }
      ],
      "relevance": 0.580078125
    },
    "Entity-sampling__k__pt_": {
      "node_id": "sampling__k__pt_",
      "disambiguation_index": 0,
      "label": "Sampling(K, Pt)",
      "aliases": [
        "Sampling(K, Pt)"
      ],
      "types": [
        "algorithm",
        "function call",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The sampling of a knowledge graph (KG) with respect to predicate Pt.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-5",
          "local_name": "Sampling(K, Pt)",
          "local_types": [
            "algorithm",
            "function call",
            "function"
          ],
          "iri": "Entity-sampling__k__pt_-Mention-1"
        }
      ],
      "relevance": 0.57958984375
    },
    "Entity-heuristic_function_that_inform_the_generation_of_iop_rule_bounded_by_a_maximum_length": {
      "node_id": "heuristic_function_that_inform_the_generation_of_iop_rule_bounded_by_a_maximum_length",
      "disambiguation_index": 0,
      "label": "heuristic functions that inform the generation of IOP rules bounded by a maximum length",
      "aliases": [
        "heuristic functions that inform the generation of IOP rules bounded by a maximum length"
      ],
      "types": [
        "concept",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Heuristic functions used to generate Inverse Open Path (IOP) rules, with a maximum length constraint.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-5",
          "local_name": "heuristic functions that inform the generation of IOP rules bounded by a maximum length",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-heuristic_function_that_inform_the_generation_of_iop_rule_bounded_by_a_maximum_length-Mention-1"
        }
      ],
      "relevance": 0.57958984375
    },
    "Entity-inverse_open_path_standard_confidence__iopsc_": {
      "node_id": "inverse_open_path_standard_confidence__iopsc_",
      "disambiguation_index": 0,
      "label": "Inverse open path standard confidence (IOPSC)",
      "aliases": [
        "Inverse open path standard confidence (IOPSC)"
      ],
      "types": [
        "metric",
        "standard metric",
        "evaluation metric",
        "measure",
        "confidence metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure of the standard confidence level for inverse open path rules, indicating the proportion of target predicate instances that a rule holds true in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-2",
          "local_name": "Inverse open path standard confidence (IOPSC)",
          "local_types": [
            "metric",
            "standard metric",
            "evaluation metric",
            "measure",
            "confidence metric"
          ],
          "iri": "Entity-inverse_open_path_standard_confidence__iopsc_-Mention-1"
        }
      ],
      "relevance": 0.57958984375
    },
    "Entity-op_rule": {
      "node_id": "op_rule",
      "disambiguation_index": 0,
      "label": "OP rules",
      "aliases": [
        "OP rule",
        "OP rules"
      ],
      "types": [
        "type of rule",
        "ontology",
        "algorithm component",
        "rule-based system",
        "operational procedure",
        "pattern",
        "rule",
        "logical statement",
        "open predicate rule",
        "notation",
        "rule set",
        "algorithm",
        "rule type",
        "concept",
        "logic-based inference",
        "set of rules",
        "mathematical concept",
        "ruleset",
        "logical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Inverse Open Path (IOP) rules",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-5",
          "local_name": "OP rules",
          "local_types": [
            "rule set",
            "concept",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-6",
          "local_name": "OP rule",
          "local_types": [
            "operational procedure",
            "concept",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-3",
          "local_name": "OP rule",
          "local_types": [
            "algorithm",
            "open predicate rule",
            "rule type",
            "concept",
            "algorithm component",
            "logic-based inference",
            "type of rule",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-4",
          "local_name": "OP rules",
          "local_types": [
            "rule-based system",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "algorithm",
            "rule type",
            "concept",
            "algorithm component",
            "type of rule",
            "set of rules",
            "rule set"
          ],
          "iri": "Entity-op_rule-Mention-5"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "OP rule",
          "local_types": [
            "rule type",
            "concept",
            "algorithm component",
            "notation",
            "type of rule"
          ],
          "iri": "Entity-op_rule-Mention-6"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "algorithm",
            "rule type",
            "concept",
            "rule",
            "rule set"
          ],
          "iri": "Entity-op_rule-Mention-7"
        },
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "rule type",
            "concept",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-8"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "OP rule",
          "local_types": [
            "algorithm",
            "rule type",
            "concept",
            "logical expression",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-9"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "OP rule",
          "local_types": [
            "mathematical concept",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-10"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "OP rules",
          "local_types": [
            "algorithm",
            "rule type",
            "ontology",
            "ruleset",
            "pattern",
            "rule",
            "logical statement"
          ],
          "iri": "Entity-op_rule-Mention-11"
        }
      ],
      "relevance": 0.5791015625
    },
    "Entity-a_tree_is_discovered_for_each_argument_of_each_target_predicate": {
      "node_id": "a_tree_is_discovered_for_each_argument_of_each_target_predicate",
      "disambiguation_index": 0,
      "label": "a tree is discovered for each argument of each target predicate",
      "aliases": [
        "a tree is discovered for each argument of each target predicate"
      ],
      "types": [
        "data structure",
        "tree"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A data structure representing a tree-like shape learned from knowledge graphs using SHACLEARNER, where each argument of each target predicate is associated with a discovered tree.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-7",
          "local_name": "a tree is discovered for each argument of each target predicate",
          "local_types": [
            "data structure",
            "tree"
          ],
          "iri": "Entity-a_tree_is_discovered_for_each_argument_of_each_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.5791015625
    },
    "Entity-the_following_three_iop_rule": {
      "node_id": "the_following_three_iop_rule",
      "disambiguation_index": 0,
      "label": "the following three IOP rules",
      "aliases": [
        "the following three IOP rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The three IOP rules that correspond to a SHACL shape",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "the following three IOP rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-the_following_three_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.5791015625
    },
    "Entity-and_secondly_in_it_reverse_form__where_the_subject_argument_serf_to_connect_": {
      "node_id": "and_secondly_in_it_reverse_form__where_the_subject_argument_serf_to_connect_",
      "disambiguation_index": 0,
      "label": "and secondly in its reverse form (where the subject argument serves to connect)",
      "aliases": [
        "and secondly in its reverse form (where the subject argument serves to connect)"
      ],
      "types": [
        "form",
        "argument",
        "subject"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A target predicate, which can be either binary or unary, used as two separate targets for learning SHACL shapes from knowledge graphs: once in the straight form and again in its reverse form.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-5",
          "local_name": "and secondly in its reverse form (where the subject argument serves to connect)",
          "local_types": [
            "form",
            "argument",
            "subject"
          ],
          "iri": "Entity-and_secondly_in_it_reverse_form__where_the_subject_argument_serf_to_connect_-Mention-1"
        }
      ],
      "relevance": 0.5791015625
    },
    "Entity-rule_can_be_further_pruned_by_applying_stricter_quality_threshold_later_on": {
      "node_id": "rule_can_be_further_pruned_by_applying_stricter_quality_threshold_later_on",
      "disambiguation_index": 0,
      "label": "rules can be further pruned by applying stricter quality thresholds later on",
      "aliases": [
        "rules can be further pruned by applying stricter quality thresholds later on"
      ],
      "types": [
        "pruning",
        "quality control"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of refining or filtering learned SHACL shapes to improve their quality and relevance.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-4",
          "local_name": "rules can be further pruned by applying stricter quality thresholds later on",
          "local_types": [
            "pruning",
            "quality control"
          ],
          "iri": "Entity-rule_can_be_further_pruned_by_applying_stricter_quality_threshold_later_on-Mention-1"
        }
      ],
      "relevance": 0.5791015625
    },
    "Entity-in_this_manual_mode": {
      "node_id": "in_this_manual_mode",
      "disambiguation_index": 0,
      "label": "In this manual mode",
      "aliases": [
        "In this manual mode"
      ],
      "types": [
        "mode"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A mode where SHACL shapes can be used traditionally to complete missing facts for a target predicate, as well as other related predicates, enabling acquisition of new information about entities that are entirely missing from the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-1",
          "local_name": "In this manual mode",
          "local_types": [
            "mode"
          ],
          "iri": "Entity-in_this_manual_mode-Mention-1"
        }
      ],
      "relevance": 0.5791015625
    },
    "Entity-for_this_purpose": {
      "node_id": "for_this_purpose",
      "disambiguation_index": 0,
      "label": "For this purpose",
      "aliases": [
        "For this purpose"
      ],
      "types": [
        "purpose"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A predicate calculus formalism for expressing constraints on graph data as shapes, used to learn high-quality rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "For this purpose",
          "local_types": [
            "purpose"
          ],
          "iri": "Entity-for_this_purpose-Mention-1"
        }
      ],
      "relevance": 0.57861328125
    },
    "Entity-the_latter_row": {
      "node_id": "the_latter_row",
      "disambiguation_index": 0,
      "label": "The latter rows",
      "aliases": [
        "The latter rows"
      ],
      "types": [
        "text"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Percentage differences in the number of IOP rules learnt by different variants of SHACLEARNER compared to the ideal rule learner.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-4",
          "local_name": "The latter rows",
          "local_types": [
            "text"
          ],
          "iri": "Entity-the_latter_row-Mention-1"
        }
      ],
      "relevance": 0.57861328125
    },
    "Entity-validate_a_kg": {
      "node_id": "validate_a_kg",
      "disambiguation_index": 0,
      "label": "validate a KG",
      "aliases": [
        "validate a KG"
      ],
      "types": [
        "process",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of verifying or confirming the accuracy, completeness, and consistency of a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-1",
          "local_name": "validate a KG",
          "local_types": [
            "process",
            "method"
          ],
          "iri": "Entity-validate_a_kg-Mention-1"
        }
      ],
      "relevance": 0.578125
    },
    "Entity-now": {
      "node_id": "now",
      "disambiguation_index": 0,
      "label": "Now",
      "aliases": [
        "Now"
      ],
      "types": [
        "procedure",
        "time"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The current point or moment in time where the procedure for deriving SHACL trees from annotated Inverse Open Path (IOP) rules begins.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "Now",
          "local_types": [
            "procedure",
            "time"
          ],
          "iri": "Entity-now-Mention-1"
        }
      ],
      "relevance": 0.578125
    },
    "Entity-kg_itself": {
      "node_id": "kg_itself",
      "disambiguation_index": 0,
      "label": "KG itself",
      "aliases": [
        "KG itself"
      ],
      "types": [
        "data source",
        "information system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge graph that serves as a data source and information system.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-3",
          "local_name": "KG itself",
          "local_types": [
            "data source",
            "information system"
          ],
          "iri": "Entity-kg_itself-Mention-1"
        }
      ],
      "relevance": 0.57763671875
    },
    "Entity-the_body_of_r__denoted_body_r__e__e__": {
      "node_id": "the_body_of_r__denoted_body_r__e__e__",
      "disambiguation_index": 0,
      "label": "the body of r, denoted body_r(e, e')",
      "aliases": [
        "the body of r, denoted body_r(e, e')"
      ],
      "types": [
        "notation",
        "convention"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entities and their relationships in a knowledge graph (KG) that satisfy the conditions specified by a closed-path rule 'r', where each condition is represented as a fact P1(e, e1), P2(e1, e2), ..., Pn(e(n-1), e') in the KG.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "the body of r, denoted body_r(e, e')",
          "local_types": [
            "notation",
            "convention"
          ],
          "iri": "Entity-the_body_of_r__denoted_body_r__e__e__-Mention-1"
        }
      ],
      "relevance": 0.5771484375
    },
    "Entity-the_running_time_for_aggregating_iop_rule_into_tree_is_lower_than_the_initial_iop_mining_time_by_a_factor_greater_than_10": {
      "node_id": "the_running_time_for_aggregating_iop_rule_into_tree_is_lower_than_the_initial_iop_mining_time_by_a_factor_greater_than_10",
      "disambiguation_index": 0,
      "label": "the running time for aggregating IOP rules into trees is lower than the initial IOP mining time by a factor greater than 10",
      "aliases": [
        "the running time for aggregating IOP rules into trees is lower than the initial IOP mining time by a factor greater than 10"
      ],
      "types": [
        "result"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The average runtime required to build tree shapes from Inverse Open Path (IOP) rules, which is significantly shorter than the initial time spent on discovering these rules.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "the running time for aggregating IOP rules into trees is lower than the initial IOP mining time by a factor greater than 10",
          "local_types": [
            "result"
          ],
          "iri": "Entity-the_running_time_for_aggregating_iop_rule_into_tree_is_lower_than_the_initial_iop_mining_time_by_a_factor_greater_than_10-Mention-1"
        }
      ],
      "relevance": 0.5771484375
    },
    "Entity-a_good_learning_algorithm_should_scale_gracefully_so_that_discovered_constraint_are_relatively_more_certain_than_those_that_are_missed__and_shaclearner_establishes_a_benchmark_for_this_problem": {
      "node_id": "a_good_learning_algorithm_should_scale_gracefully_so_that_discovered_constraint_are_relatively_more_certain_than_those_that_are_missed__and_shaclearner_establishes_a_benchmark_for_this_problem",
      "disambiguation_index": 0,
      "label": "a good learning algorithm should scale gracefully so that discovered constraints are relatively more certain than those that are missed, and SHACLearner establishes a benchmark for this problem",
      "aliases": [
        "a good learning algorithm should scale gracefully so that discovered constraints are relatively more certain than those that are missed, and SHACLearner establishes a benchmark for this problem"
      ],
      "types": [
        "algorithm evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACLEARNER: an algorithm evaluation method",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-4",
          "local_name": "a good learning algorithm should scale gracefully so that discovered constraints are relatively more certain than those that are missed, and SHACLearner establishes a benchmark for this problem",
          "local_types": [
            "algorithm evaluation"
          ],
          "iri": "Entity-a_good_learning_algorithm_should_scale_gracefully_so_that_discovered_constraint_are_relatively_more_certain_than_those_that_are_missed__and_shaclearner_establishes_a_benchmark_for_this_problem-Mention-1"
        }
      ],
      "relevance": 0.5771484375
    },
    "Entity-a_novel_numerical_confidence_measure": {
      "node_id": "a_novel_numerical_confidence_measure",
      "disambiguation_index": 0,
      "label": "a novel numerical confidence measure",
      "aliases": [
        "a novel numerical confidence measure"
      ],
      "types": [
        "measure"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A metric used to quantify the reliability or certainty of a learned SHACL shape, indicating the strength of evidence supporting its presence in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-8",
          "local_name": "a novel numerical confidence measure",
          "local_types": [
            "measure"
          ],
          "iri": "Entity-a_novel_numerical_confidence_measure-Mention-1"
        }
      ],
      "relevance": 0.5771484375
    },
    "Entity-the_length_increase__the_number_of_rule_would_increase_since_the_space_of_possible_rule_grows": {
      "node_id": "the_length_increase__the_number_of_rule_would_increase_since_the_space_of_possible_rule_grows",
      "disambiguation_index": 0,
      "label": "the length increases, the number of rules would increase since the space of possible rules grows",
      "aliases": [
        "the length increases, the number of rules would increase since the space of possible rules grows"
      ],
      "types": [
        "observation",
        "theory"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The observation that as the length of SHACL shapes increases, the number of learned rules also tends to increase due to the growing space of possible rule patterns.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-7-Sentence-1",
          "local_name": "the length increases, the number of rules would increase since the space of possible rules grows",
          "local_types": [
            "observation",
            "theory"
          ],
          "iri": "Entity-the_length_increase__the_number_of_rule_would_increase_since_the_space_of_possible_rule_grows-Mention-1"
        }
      ],
      "relevance": 0.5771484375
    },
    "Entity-the_number_of_entity_pair_that_satisfy_the_body_in_the_kg": {
      "node_id": "the_number_of_entity_pair_that_satisfy_the_body_in_the_kg",
      "disambiguation_index": 0,
      "label": "the number of entity pairs that satisfy the body in the KG",
      "aliases": [
        "the number of entity pairs that satisfy the body in the KG"
      ],
      "types": [
        "quantity",
        "KG fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The count of distinct pairings between entities that conform to the constraints specified by the body in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "the number of entity pairs that satisfy the body in the KG",
          "local_types": [
            "quantity",
            "KG fact"
          ],
          "iri": "Entity-the_number_of_entity_pair_that_satisfy_the_body_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-interestingness": {
      "node_id": "interestingness",
      "disambiguation_index": 0,
      "label": "interestingness",
      "aliases": [
        "interestingness"
      ],
      "types": [
        "evaluation criterion",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure that represents the quantified uncertainty of a candidate SHACL shape, used for selecting shapes based on their interest or verifying knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-1",
          "local_name": "interestingness",
          "local_types": [
            "evaluation criterion",
            "metric"
          ],
          "iri": "Entity-interestingness-Mention-1"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-pathfinding_of_algorithm_1": {
      "node_id": "pathfinding_of_algorithm_1",
      "disambiguation_index": 0,
      "label": "PathFinding of Algorithm 1",
      "aliases": [
        "PathFinding of Algorithm 1"
      ],
      "types": [
        "algorithm",
        "pathfinding algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A pathfinding algorithm within SHACLEARNER that reduces the search space for Inverse Open Path rules using prior sampling and heuristic pruning.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-1-Sentence-1",
          "local_name": "PathFinding of Algorithm 1",
          "local_types": [
            "algorithm",
            "pathfinding algorithm"
          ],
          "iri": "Entity-pathfinding_of_algorithm_1-Mention-1"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-an_ideal_iop_rule_learner": {
      "node_id": "an_ideal_iop_rule_learner",
      "disambiguation_index": 0,
      "label": "an ideal IOP rule learner",
      "aliases": [
        "an ideal IOP rule learner"
      ],
      "types": [
        "learner",
        "rule learner"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A hypothetical entity that learns and evaluates every possible Inverse Open Path (IOP) rule, up to the maximum length parameter, without any pruning or sampling mechanisms.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-4",
          "local_name": "an ideal IOP rule learner",
          "local_types": [
            "learner",
            "rule learner"
          ],
          "iri": "Entity-an_ideal_iop_rule_learner-Mention-1"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg_such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e____are_fact_in_the_kg": {
      "node_id": "if_there_exist_entity_e1__...__e__n-1__in_the_kg_such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e____are_fact_in_the_kg",
      "disambiguation_index": 0,
      "label": "if there exist entities e1, ..., e(n-1) in the KG such that all of {P1(e, e1), P2(e1, e2), ..., Pn(e( n-1), e') } are facts in the KG",
      "aliases": [
        "if there exist entities e1, ..., e(n-1) in the KG such that all of {P1(e, e1), P2(e1, e2), ..., Pn(e( n-1), e') } are facts in the KG"
      ],
      "types": [
        "mathematics",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A path of entities in a knowledge graph that satisfies certain conditions",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "if there exist entities e1, ..., e(n-1) in the KG such that all of {P1(e, e1), P2(e1, e2), ..., Pn(e( n-1), e') } are facts in the KG",
          "local_types": [
            "mathematics",
            "knowledge graph"
          ],
          "iri": "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg_such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e____are_fact_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.576171875
    },
    "Entity-p1_t_._pt_._p1_._p2_._p2_2": {
      "node_id": "p1_t_._pt_._p1_._p2_._p2_2",
      "disambiguation_index": 0,
      "label": "P1_t. Pt. P1. P2. P2_2",
      "aliases": [
        "P1_t. Pt. P1. P2. P2_2"
      ],
      "types": [
        "expression",
        "similarity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An IOP (Inverse Open Path) rule that connects entities satisfying the subject argument of predicate Pt to entities forming the object argument of predicate P2 along a path of entities that satisfy a chain of predicates in the rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-4",
          "local_name": "P1_t. Pt. P1. P2. P2_2",
          "local_types": [
            "expression",
            "similarity"
          ],
          "iri": "Entity-p1_t_._pt_._p1_._p2_._p2_2-Mention-1"
        }
      ],
      "relevance": 0.576171875
    },
    "Entity-inverse_open_path_head_coverage__iophc_": {
      "node_id": "inverse_open_path_head_coverage__iophc_",
      "disambiguation_index": 0,
      "label": "Inverse open path head coverage (IOPHC)",
      "aliases": [
        "Inverse open path head coverage (IOPHC)"
      ],
      "types": [
        "coverage metric",
        "metric",
        "measure",
        "evaluation metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure of the proportion of rule consequent instances that are justified by target predicate instances in a knowledge graph, indicating the relevance of the rule to the target.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-2",
          "local_name": "Inverse open path head coverage (IOPHC)",
          "local_types": [
            "coverage metric",
            "metric",
            "measure",
            "evaluation metric"
          ],
          "iri": "Entity-inverse_open_path_head_coverage__iophc_-Mention-1"
        }
      ],
      "relevance": 0.576171875
    },
    "Entity-at_least_44__of_iop_rule_are_pruned": {
      "node_id": "at_least_44__of_iop_rule_are_pruned",
      "disambiguation_index": 0,
      "label": "at least 44% of IOP rules are pruned",
      "aliases": [
        "at least 44% of IOP rules are pruned",
        "at least 44%"
      ],
      "types": [
        "result",
        "pruning",
        "percentage"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The percentage of Inverse Open Path (IOP) rules that are removed or pruned when applying the tree-shaped constraint to the basic IOP- shaped constraint.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-3-Sentence-2",
          "local_name": "at least 44% of IOP rules are pruned",
          "local_types": [
            "result",
            "pruning",
            "percentage"
          ],
          "iri": "Entity-at_least_44__of_iop_rule_are_pruned-Mention-1"
        },
        {
          "reference": "Section-17-Paragraph-3-Sentence-2",
          "local_name": "at least 44%",
          "local_types": [
            "percentage"
          ],
          "iri": "Entity-at_least_44__of_iop_rule_are_pruned-Mention-2"
        }
      ],
      "relevance": 0.576171875
    },
    "Entity-learning_shape_constraint": {
      "node_id": "learning_shape_constraint",
      "disambiguation_index": 0,
      "label": "Learning shape constraints",
      "aliases": [
        "Learning shape constraints"
      ],
      "types": [
        "project",
        "research program",
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process or activity of acquiring and utilizing rules governing the structure and organization of information.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-2",
          "local_name": "Learning shape constraints",
          "local_types": [
            "project",
            "research program",
            "task"
          ],
          "iri": "Entity-learning_shape_constraint-Mention-1"
        }
      ],
      "relevance": 0.576171875
    },
    "Entity-validate_kg": {
      "node_id": "validate_kg",
      "disambiguation_index": 0,
      "label": "validate KGs",
      "aliases": [
        "validate KGs"
      ],
      "types": [
        "validation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of confirming or ensuring the accuracy and correctness of knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "validate KGs",
          "local_types": [
            "validation"
          ],
          "iri": "Entity-validate_kg-Mention-1"
        }
      ],
      "relevance": 0.57568359375
    },
    "Entity-the_candidate_rule": {
      "node_id": "the_candidate_rule",
      "disambiguation_index": 0,
      "label": "The candidate rules",
      "aliases": [
        "The candidate rules"
      ],
      "types": [
        "candidate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Candidate IOP rules generated based on predicate embeddings and logical relationships in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "The candidate rules",
          "local_types": [
            "candidate"
          ],
          "iri": "Entity-the_candidate_rule-Mention-1"
        }
      ],
      "relevance": 0.57568359375
    },
    "Entity-iophc": {
      "node_id": "iophc",
      "disambiguation_index": 0,
      "label": "IOPHC",
      "aliases": [
        "IOPHC"
      ],
      "types": [
        "statistic",
        "score",
        "abbreviation",
        "symbol",
        "quality measure",
        "performance indicator",
        "equation",
        "index",
        "term",
        "ratio",
        "method",
        "measure",
        "function",
        "quality measurement",
        "constant",
        "metric",
        "organization",
        "notation",
        "IOPHC",
        "feature",
        "attribute",
        "formula",
        "algorithm",
        "concept",
        "parameter",
        "mathematical concept",
        "quality metric",
        "variable",
        "theory",
        "quality",
        "indicator"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Inverse Open Path Head Coverage (IOPHC) - a quality measure for IOP rules",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-8",
          "local_name": "IOPHC",
          "local_types": [
            "mathematical concept",
            "notation",
            "equation"
          ],
          "iri": "Entity-iophc-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-7",
          "local_name": "IOPHC",
          "local_types": [
            "ratio",
            "metric",
            "statistic",
            "parameter",
            "constant"
          ],
          "iri": "Entity-iophc-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-4",
          "local_name": "IOPHC",
          "local_types": [
            "organization",
            "notation",
            "term"
          ],
          "iri": "Entity-iophc-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-5",
          "local_name": "IOPHC",
          "local_types": [
            "notation",
            "symbol",
            "parameter",
            "variable"
          ],
          "iri": "Entity-iophc-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "IOPHC",
          "local_types": [
            "formula",
            "metric",
            "concept",
            "theory"
          ],
          "iri": "Entity-iophc-Mention-5"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-3",
          "local_name": "IOPHC",
          "local_types": [
            "metric",
            "quality measurement"
          ],
          "iri": "Entity-iophc-Mention-6"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-2",
          "local_name": "IOPHC",
          "local_types": [
            "organization",
            "metric",
            "abbreviation",
            "quality measure"
          ],
          "iri": "Entity-iophc-Mention-7"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-1",
          "local_name": "IOPHC",
          "local_types": [
            "metric",
            "parameter",
            "variable",
            "measure",
            "function"
          ],
          "iri": "Entity-iophc-Mention-8"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-3",
          "local_name": "IOPHC",
          "local_types": [
            "score",
            "metric",
            "algorithm"
          ],
          "iri": "Entity-iophc-Mention-9"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "IOPHC",
          "local_types": [
            "algorithm",
            "concept",
            "parameter",
            "theory",
            "index"
          ],
          "iri": "Entity-iophc-Mention-10"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "IOPHC",
          "local_types": [
            "organization",
            "abbreviation"
          ],
          "iri": "Entity-iophc-Mention-11"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-2",
          "local_name": "IOPHC",
          "local_types": [
            "metric",
            "quality measure"
          ],
          "iri": "Entity-iophc-Mention-12"
        },
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "IOPHC",
          "local_types": [
            "parameter",
            "metric",
            "quality measure",
            "indicator"
          ],
          "iri": "Entity-iophc-Mention-13"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-3",
          "local_name": "IOPHC",
          "local_types": [
            "metric",
            "feature",
            "attribute",
            "quality measure"
          ],
          "iri": "Entity-iophc-Mention-14"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-1",
          "local_name": "IOPHC",
          "local_types": [
            "metric",
            "IOPHC",
            "parameter",
            "quality measure",
            "quality metric",
            "performance indicator"
          ],
          "iri": "Entity-iophc-Mention-15"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-3",
          "local_name": "IOPHC",
          "local_types": [
            "indicator",
            "metric"
          ],
          "iri": "Entity-iophc-Mention-16"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-4",
          "local_name": "IOPHC",
          "local_types": [
            "metric",
            "performance indicator"
          ],
          "iri": "Entity-iophc-Mention-17"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-1",
          "local_name": "IOPHC",
          "local_types": [
            "metric",
            "concept",
            "parameter",
            "quality measure",
            "quality"
          ],
          "iri": "Entity-iophc-Mention-18"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "IOPHC",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-iophc-Mention-19"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-4",
          "local_name": "IOPHC",
          "local_types": [
            "metric",
            "score"
          ],
          "iri": "Entity-iophc-Mention-20"
        }
      ],
      "relevance": 0.5751953125
    },
    "Entity-the_complexity_of_the_sampling_algorithm": {
      "node_id": "the_complexity_of_the_sampling_algorithm",
      "disambiguation_index": 0,
      "label": "the complexity of the sampling algorithm",
      "aliases": [
        "the complexity of the sampling algorithm"
      ],
      "types": [
        "complexity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The computational difficulty or intricacy involved in implementing a method for selecting a subset of entities and facts from a knowledge graph, used to reduce the size of the problem for learning inverse open path rules.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "the complexity of the sampling algorithm",
          "local_types": [
            "complexity"
          ],
          "iri": "Entity-the_complexity_of_the_sampling_algorithm-Mention-1"
        }
      ],
      "relevance": 0.57470703125
    },
    "Entity-the_rule_that_bind_the_object_argument_of_the_target_predicate": {
      "node_id": "the_rule_that_bind_the_object_argument_of_the_target_predicate",
      "disambiguation_index": 0,
      "label": "the rules that bind the object argument of the target predicate",
      "aliases": [
        "the rules that bind the object argument of the target predicate"
      ],
      "types": [
        "rules",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Rules used to aggregate and combine IOP rules for the subject or object arguments of each target predicate in SHACLearner.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-5",
          "local_name": "the rules that bind the object argument of the target predicate",
          "local_types": [
            "rules",
            "predicate"
          ],
          "iri": "Entity-the_rule_that_bind_the_object_argument_of_the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.57470703125
    },
    "Entity-the_result": {
      "node_id": "the_result",
      "disambiguation_index": 0,
      "label": "The results",
      "aliases": [
        "The results"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of experimental outcomes demonstrating the effectiveness and efficiency of aggregating Inverse Open Path rules into tree shapes, showcasing reduced running times compared to initial IOP mining time.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "The results",
          "local_types": [
            "research"
          ],
          "iri": "Entity-the_result-Mention-1"
        }
      ],
      "relevance": 0.57470703125
    },
    "Entity-iop": {
      "node_id": "iop",
      "disambiguation_index": 0,
      "label": "IOP",
      "aliases": [
        "IOP"
      ],
      "types": [
        "algorithm",
        "formal system",
        "rule system",
        "method",
        "concept",
        "organization",
        "notation",
        "ontology",
        "acronym",
        "theory",
        "standard",
        "publisher",
        "framework",
        "rule",
        "rule set",
        "mathematical framework",
        "format",
        "logic system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of rules or guidelines, possibly with associated learning methods",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "IOP",
          "local_types": [
            "concept",
            "framework"
          ],
          "iri": "Entity-iop-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-4",
          "local_name": "IOP",
          "local_types": [
            "acronym",
            "organization"
          ],
          "iri": "Entity-iop-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-5",
          "local_name": "IOP",
          "local_types": [
            "concept",
            "theory"
          ],
          "iri": "Entity-iop-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-6",
          "local_name": "IOP",
          "local_types": [
            "logic system",
            "concept",
            "theory"
          ],
          "iri": "Entity-iop-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-3",
          "local_name": "IOP",
          "local_types": [
            "notation",
            "format",
            "concept",
            "theory"
          ],
          "iri": "Entity-iop-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-4",
          "local_name": "IOP",
          "local_types": [
            "organization"
          ],
          "iri": "Entity-iop-Mention-6"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "IOP",
          "local_types": [
            "concept",
            "notation",
            "ontology",
            "theory",
            "framework",
            "format"
          ],
          "iri": "Entity-iop-Mention-7"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "IOP",
          "local_types": [
            "mathematical framework",
            "acronym",
            "theory"
          ],
          "iri": "Entity-iop-Mention-8"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-7",
          "local_name": "IOP",
          "local_types": [
            "organization",
            "standard",
            "acronym",
            "rule set"
          ],
          "iri": "Entity-iop-Mention-9"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-1",
          "local_name": "IOP",
          "local_types": [
            "algorithm",
            "rule"
          ],
          "iri": "Entity-iop-Mention-10"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-4",
          "local_name": "IOP",
          "local_types": [
            "standard",
            "notation"
          ],
          "iri": "Entity-iop-Mention-11"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-7",
          "local_name": "IOP",
          "local_types": [
            "standard",
            "notation"
          ],
          "iri": "Entity-iop-Mention-12"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-1",
          "local_name": "IOP",
          "local_types": [
            "notation",
            "rule"
          ],
          "iri": "Entity-iop-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "IOP",
          "local_types": [
            "rule system",
            "formal system"
          ],
          "iri": "Entity-iop-Mention-14"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "IOP",
          "local_types": [
            "notation",
            "formal system"
          ],
          "iri": "Entity-iop-Mention-15"
        },
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "IOP",
          "local_types": [
            "acronym",
            "concept"
          ],
          "iri": "Entity-iop-Mention-16"
        },
        {
          "reference": "Section-6-Paragraph-8-Sentence-2",
          "local_name": "IOP",
          "local_types": [
            "theory",
            "framework"
          ],
          "iri": "Entity-iop-Mention-17"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-6",
          "local_name": "IOP",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-iop-Mention-18"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "IOP",
          "local_types": [
            "notation",
            "ontology",
            "format",
            "concept"
          ],
          "iri": "Entity-iop-Mention-19"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "IOP",
          "local_types": [
            "organization",
            "notation",
            "format",
            "framework"
          ],
          "iri": "Entity-iop-Mention-20"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "IOP",
          "local_types": [
            "acronym",
            "concept"
          ],
          "iri": "Entity-iop-Mention-21"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "IOP",
          "local_types": [
            "organization",
            "publisher"
          ],
          "iri": "Entity-iop-Mention-22"
        },
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "IOP",
          "local_types": [
            "algorithm",
            "method",
            "rule"
          ],
          "iri": "Entity-iop-Mention-23"
        },
        {
          "reference": "Section-17-Paragraph-3-Sentence-2",
          "local_name": "IOP",
          "local_types": [
            "algorithm",
            "concept",
            "theory",
            "framework",
            "rule"
          ],
          "iri": "Entity-iop-Mention-24"
        },
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "IOP",
          "local_types": [
            "rule",
            "algorithm"
          ],
          "iri": "Entity-iop-Mention-25"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-they_generalise_well__that_is__they_explain_many_fact": {
      "node_id": "they_generalise_well__that_is__they_explain_many_fact",
      "disambiguation_index": 0,
      "label": "they generalise well, that is, they explain many facts",
      "aliases": [
        "they generalise well, that is, they explain many facts"
      ],
      "types": [
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A property of a closed-path rule that measures its ability to infer and explain multiple KG facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "they generalise well, that is, they explain many facts",
          "local_types": [
            "property"
          ],
          "iri": "Entity-they_generalise_well__that_is__they_explain_many_fact-Mention-1"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-iopsc_and_iophc__definition_4_": {
      "node_id": "iopsc_and_iophc__definition_4_",
      "disambiguation_index": 0,
      "label": "IOPSC and IOPHC (Definition 4)",
      "aliases": [
        "IOPSC and IOPHC (Definition 4)"
      ],
      "types": [
        "reference"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality measures for SHACLearner's learned rules, specifically the number of entities that satisfy the body or head of a rule and those that join the two.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "IOPSC and IOPHC (Definition 4)",
          "local_types": [
            "reference"
          ],
          "iri": "Entity-iopsc_and_iophc__definition_4_-Mention-1"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-paper_(1)": {
      "node_id": "paper_(1)",
      "disambiguation_index": 1,
      "label": "papers",
      "aliases": [
        "papers"
      ],
      "types": [
        "research",
        "publications"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Papers that investigate the application of SHACL shapes to the validation of RDF databases",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "papers",
          "local_types": [
            "research",
            "publications"
          ],
          "iri": "Entity-paper_(1)-Mention-1"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-the_same_or_higher_iopsc_value": {
      "node_id": "the_same_or_higher_iopsc_value",
      "disambiguation_index": 0,
      "label": "the same or higher IOPSC values",
      "aliases": [
        "the same or higher IOPSC values"
      ],
      "types": [
        "value",
        "IOPSC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality measures for inverse open path (IOP) rules that indicate confidence and generality.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "the same or higher IOPSC values",
          "local_types": [
            "value",
            "IOPSC"
          ],
          "iri": "Entity-the_same_or_higher_iopsc_value-Mention-1"
        }
      ],
      "relevance": 0.57373046875
    },
    "Entity-these_measure": {
      "node_id": "these_measure",
      "disambiguation_index": 0,
      "label": "these measures",
      "aliases": [
        "these measures"
      ],
      "types": [
        "measure",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The quality measures mentioned, which are novel for SHACLEARNER and used to evaluate candidate rules on a small sampled knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-4",
          "local_name": "these measures",
          "local_types": [
            "measure",
            "concept"
          ],
          "iri": "Entity-these_measure-Mention-1"
        }
      ],
      "relevance": 0.57373046875
    },
    "Entity-p2_t__p1_1_and_p2_1__p2_1_.": {
      "node_id": "p2_t__p1_1_and_p2_1__p2_1_.",
      "disambiguation_index": 0,
      "label": "P2_t ~ P1_1 and P2_1 ~ P2_1.",
      "aliases": [
        "P2_t ~ P1_1 and P2_1 ~ P2_1."
      ],
      "types": [
        "predicate",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism that presents specific shapes in the form of paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-2",
          "local_name": "P2_t ~ P1_1 and P2_1 ~ P2_1.",
          "local_types": [
            "predicate",
            "rule"
          ],
          "iri": "Entity-p2_t__p1_1_and_p2_1__p2_1_.-Mention-1"
        }
      ],
      "relevance": 0.5732421875
    },
    "Entity-then_r": {
      "node_id": "then_r",
      "disambiguation_index": 0,
      "label": "Then r",
      "aliases": [
        "Then r"
      ],
      "types": [
        "variable",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The cardinality annotation for an IOP rule, indicating a lower bound on the number of head paths that are satisfied in the KG.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-3",
          "local_name": "Then r",
          "local_types": [
            "variable",
            "rule"
          ],
          "iri": "Entity-then_r-Mention-1"
        }
      ],
      "relevance": 0.5732421875
    },
    "Entity-a_kg": {
      "node_id": "a_kg",
      "disambiguation_index": 0,
      "label": "A KG",
      "aliases": [
        "A KG"
      ],
      "types": [
        "knowledge graph",
        "database",
        "concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A knowledge graph that serves as a schema-free database.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "A KG",
          "local_types": [
            "knowledge graph",
            "database",
            "concept"
          ],
          "iri": "Entity-a_kg-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-1",
          "local_name": "A KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-a_kg-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-4",
          "local_name": "A KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-a_kg-Mention-3"
        }
      ],
      "relevance": 0.57275390625
    },
    "Entity-a_non-recursive_rule_that_ha_both_100__sc_and_hc_is_redundant_with_respect_to_the_kg__and_every_kg_fact_that_is_an_instance_of_the_rule_head_is_redundant_with_respect_to_the_rule_.": {
      "node_id": "a_non-recursive_rule_that_ha_both_100__sc_and_hc_is_redundant_with_respect_to_the_kg__and_every_kg_fact_that_is_an_instance_of_the_rule_head_is_redundant_with_respect_to_the_rule_.",
      "disambiguation_index": 0,
      "label": "A non-recursive rule that has both 100% SC and HC is redundant with respect to the KG, and every KG fact that is an instance of the rule head is redundant with respect to the rule.",
      "aliases": [
        "A non-recursive rule that has both 100% SC and HC is redundant with respect to the KG, and every KG fact that is an instance of the rule head is redundant with respect to the rule."
      ],
      "types": [
        "statement",
        "redundancy principle"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A non-recursive rule in SHACL shape learning, characterized by having both 100% standard confidence and head coverage, which makes it redundant with respect to the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-6",
          "local_name": "A non-recursive rule that has both 100% SC and HC is redundant with respect to the KG, and every KG fact that is an instance of the rule head is redundant with respect to the rule.",
          "local_types": [
            "statement",
            "redundancy principle"
          ],
          "iri": "Entity-a_non-recursive_rule_that_ha_both_100__sc_and_hc_is_redundant_with_respect_to_the_kg__and_every_kg_fact_that_is_an_instance_of_the_rule_head_is_redundant_with_respect_to_the_rule_.-Mention-1"
        }
      ],
      "relevance": 0.572265625
    },
    "Entity-the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality": {
      "node_id": "the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality",
      "disambiguation_index": 0,
      "label": "the SC of the tree and the subsequent values at the beginning of each branch indicate the branch cardinality",
      "aliases": [
        "the SC of the tree and the subsequent values at the beginning of each branch indicate the branch cardinality"
      ],
      "types": [
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A shape constraint that represents a tree structure in a knowledge graph, where the first value indicates its size complexity (SC) and subsequent values at the start of each branch represent the number of entities or relationships within those branches.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-2",
          "local_name": "the SC of the tree and the subsequent values at the beginning of each branch indicate the branch cardinality",
          "local_types": [
            "description"
          ],
          "iri": "Entity-the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality-Mention-1"
        }
      ],
      "relevance": 0.572265625
    },
    "Entity-about_the_predicate_of_the_head": {
      "node_id": "about_the_predicate_of_the_head",
      "disambiguation_index": 0,
      "label": "about the predicate of the head",
      "aliases": [
        "about the predicate of the head"
      ],
      "types": [
        "description",
        "context"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A characteristic describing closed-path rules in knowledge graph rule learning systems, where each rule consists of a head and a body, with the rule being about the predicate associated with the head.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-5",
          "local_name": "about the predicate of the head",
          "local_types": [
            "description",
            "context"
          ],
          "iri": "Entity-about_the_predicate_of_the_head-Mention-1"
        }
      ],
      "relevance": 0.572265625
    },
    "Entity-this_simple_approach": {
      "node_id": "this_simple_approach",
      "disambiguation_index": 0,
      "label": "This simple approach",
      "aliases": [
        "This simple approach"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method for reducing the complexity of learning SHACL shapes from knowledge graphs by sampling a subgraph of entities related to a target predicate.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "This simple approach",
          "local_types": [
            "method"
          ],
          "iri": "Entity-this_simple_approach-Mention-1"
        }
      ],
      "relevance": 0.572265625
    },
    "Entity-rule_instance": {
      "node_id": "rule_instance",
      "disambiguation_index": 0,
      "label": "rule instances",
      "aliases": [
        "rule instances"
      ],
      "types": [
        "instances",
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Rule instances refer to specific shapes or patterns that can be expressed as paths over connected entities present in a knowledge graph, used to validate the graph data, underpin manual editing tasks, and offer insight into the graph structure.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-5",
          "local_name": "rule instances",
          "local_types": [
            "instances",
            "rules"
          ],
          "iri": "Entity-rule_instance-Mention-1"
        }
      ],
      "relevance": 0.57177734375
    },
    "Entity-esample": {
      "node_id": "esample",
      "disambiguation_index": 0,
      "label": "Esample",
      "aliases": [
        "Esample"
      ],
      "types": [
        "mathematical concept",
        "sample set",
        "collection of examples",
        "data structure",
        "expression",
        "set",
        "equation",
        "dataset",
        "collection"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A subset of entities related to a target predicate in a knowledge graph, used as input for learning inverse open path rules.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "Esample",
          "local_types": [
            "sample set",
            "collection of examples",
            "data structure",
            "set",
            "dataset"
          ],
          "iri": "Entity-esample-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-9",
          "local_name": "Esample",
          "local_types": [
            "expression",
            "equation",
            "mathematical concept",
            "sample set"
          ],
          "iri": "Entity-esample-Mention-2"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-10",
          "local_name": "Esample",
          "local_types": [
            "dataset",
            "collection"
          ],
          "iri": "Entity-esample-Mention-3"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-iop_rule_express_simple_shape_pattern": {
      "node_id": "iop_rule_express_simple_shape_pattern",
      "disambiguation_index": 0,
      "label": "IOP rules express simple shape patterns",
      "aliases": [
        "IOP rules express simple shape patterns"
      ],
      "types": [
        "rule",
        "pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Inverse Open Path rules",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "IOP rules express simple shape patterns",
          "local_types": [
            "rule",
            "pattern"
          ],
          "iri": "Entity-iop_rule_express_simple_shape_pattern-Mention-1"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-minimum_iopsc": {
      "node_id": "minimum_iopsc",
      "disambiguation_index": 0,
      "label": "minimum IOPSC",
      "aliases": [
        "minimum IOPSC"
      ],
      "types": [
        "metric",
        "performance measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The minimum confidence threshold for adding an IOP rule to a tree shape in SHACLEARNER, used to determine whether the quality of the tree drops below a certain level.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-6",
          "local_name": "minimum IOPSC",
          "local_types": [
            "metric",
            "performance measure"
          ],
          "iri": "Entity-minimum_iopsc-Mention-1"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-kg_data": {
      "node_id": "kg_data",
      "disambiguation_index": 0,
      "label": "KG data",
      "aliases": [
        "KG data",
        "data"
      ],
      "types": [
        "knowledge graph",
        "data set",
        "data",
        "dataset"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A collection of structured information that represents entities and their relationships.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-5",
          "local_name": "KG data",
          "local_types": [
            "knowledge graph",
            "data set",
            "data"
          ],
          "iri": "Entity-kg_data-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-1",
          "local_name": "KG data",
          "local_types": [
            "knowledge graph",
            "data set",
            "data"
          ],
          "iri": "Entity-kg_data-Mention-2"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-5",
          "local_name": "KG data",
          "local_types": [
            "knowledge graph",
            "data",
            "dataset"
          ],
          "iri": "Entity-kg_data-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "data",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-kg_data-Mention-4"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-there_is_scant_previous_research": {
      "node_id": "there_is_scant_previous_research",
      "disambiguation_index": 0,
      "label": "There is scant previous research",
      "aliases": [
        "There is scant previous research"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The lack of existing studies or research on learning SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-7",
          "local_name": "There is scant previous research",
          "local_types": [
            "research"
          ],
          "iri": "Entity-there_is_scant_previous_research-Mention-1"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-within_a_sh__property_declaration": {
      "node_id": "within_a_sh__property_declaration",
      "disambiguation_index": 0,
      "label": "within a sh:property declaration",
      "aliases": [
        "within a sh:property declaration"
      ],
      "types": [
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A nested path of head predicates declared within an SHACL property declaration, representing a sequence of shapes in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "within a sh:property declaration",
          "local_types": [
            "property"
          ],
          "iri": "Entity-within_a_sh__property_declaration-Mention-1"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-using_heuristic_pruning_alone_in__-sh_": {
      "node_id": "using_heuristic_pruning_alone_in__-sh_",
      "disambiguation_index": 0,
      "label": "using heuristic pruning alone in (-S+H)",
      "aliases": [
        "using heuristic pruning alone in (-S+H)"
      ],
      "types": [
        "method",
        "pruning variant"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The method of learning SHACL shapes from knowledge graphs that uses only heuristic pruning without sampling, as opposed to other variants that combine or omit both techniques.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-1",
          "local_name": "using heuristic pruning alone in (-S+H)",
          "local_types": [
            "method",
            "pruning variant"
          ],
          "iri": "Entity-using_heuristic_pruning_alone_in__-sh_-Mention-1"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-yago2s": {
      "node_id": "yago2s",
      "disambiguation_index": 0,
      "label": "YAGO2s",
      "aliases": [
        "YAGO2s",
        "YAGO2"
      ],
      "types": [
        "entity set",
        "benchmark",
        "data source",
        "database",
        "ontology",
        "project",
        "knowledge base",
        "information source",
        "dataset",
        "YAGO2",
        "knowledge graph"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A large-scale knowledge graph dataset",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "YAGO2s",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-yago2s-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-2",
          "local_name": "YAGO2s",
          "local_types": [
            "knowledge graph",
            "benchmark",
            "dataset",
            "database"
          ],
          "iri": "Entity-yago2s-Mention-2"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-4",
          "local_name": "YAGO2s",
          "local_types": [
            "knowledge graph",
            "database",
            "knowledge base",
            "dataset"
          ],
          "iri": "Entity-yago2s-Mention-3"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-6",
          "local_name": "YAGO2s",
          "local_types": [
            "knowledge graph",
            "knowledge base",
            "dataset"
          ],
          "iri": "Entity-yago2s-Mention-4"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-7",
          "local_name": "YAGO2s",
          "local_types": [
            "knowledge base",
            "dataset"
          ],
          "iri": "Entity-yago2s-Mention-5"
        },
        {
          "reference": "Section-15-Paragraph-5-Sentence-1",
          "local_name": "YAGO2s",
          "local_types": [
            "database",
            "project",
            "information source",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-yago2s-Mention-6"
        },
        {
          "reference": "Section-15-Paragraph-5-Sentence-2",
          "local_name": "YAGO2s",
          "local_types": [
            "data source",
            "knowledge graph",
            "dataset",
            "YAGO2"
          ],
          "iri": "Entity-yago2s-Mention-7"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "YAGO2",
          "local_types": [
            "entity set",
            "data source",
            "database",
            "ontology",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-yago2s-Mention-8"
        },
        {
          "reference": "Section-15-Paragraph-6-Sentence-3",
          "local_name": "YAGO2",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-yago2s-Mention-9"
        }
      ],
      "relevance": 0.5703125
    },
    "Entity-p2_t": {
      "node_id": "p2_t",
      "disambiguation_index": 0,
      "label": "P2_t",
      "aliases": [
        "P2_t"
      ],
      "types": [
        "notation",
        "argument",
        "symbol",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism that presents specific shapes in the form of paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-2",
          "local_name": "P2_t",
          "local_types": [
            "notation",
            "argument",
            "symbol",
            "variable"
          ],
          "iri": "Entity-p2_t-Mention-1"
        }
      ],
      "relevance": 0.5703125
    },
    "Entity-the_rule_(3)": {
      "node_id": "the_rule_(3)",
      "disambiguation_index": 3,
      "label": "the rules",
      "aliases": [
        "the rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Rule quality measures introduced to augment Inverse Open Path (IOP) rules, including IOP Standard Confidence, IOP Head Coverage, and Cardinality.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-4",
          "local_name": "the rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-the_rule_(3)-Mention-1"
        }
      ],
      "relevance": 0.5703125
    },
    "Entity-p1__x__z0___-_p2__z0__z1___p3__z1__z2_": {
      "node_id": "p1__x__z0___-_p2__z0__z1___p3__z1__z2_",
      "disambiguation_index": 0,
      "label": "P1(x, z0) <- P2(z0, z1) ^ P3(z1, z2)",
      "aliases": [
        "P1(x, z0) <- P2(z0, z1) ^ P3(z1, z2)"
      ],
      "types": [
        "rule",
        "logic formula"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A logic formula representing an inverse open path rule in a knowledge graph",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "P1(x, z0) <- P2(z0, z1) ^ P3(z1, z2)",
          "local_types": [
            "rule",
            "logic formula"
          ],
          "iri": "Entity-p1__x__z0___-_p2__z0__z1___p3__z1__z2_-Mention-1"
        }
      ],
      "relevance": 0.56982421875
    },
    "Entity-learning_partially_instantiated_shape": {
      "node_id": "learning_partially_instantiated_shape",
      "disambiguation_index": 0,
      "label": "learning partially instantiated shapes",
      "aliases": [
        "learning partially instantiated shapes"
      ],
      "types": [
        "concept",
        "shapes"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of discovering and constructing complex shape patterns from knowledge graphs, where some entities are already instantiated with specific properties, but others remain abstracted as classes or types.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-2",
          "local_name": "learning partially instantiated shapes",
          "local_types": [
            "concept",
            "shapes"
          ],
          "iri": "Entity-learning_partially_instantiated_shape-Mention-1"
        }
      ],
      "relevance": 0.56982421875
    },
    "Entity-various_feature_value": {
      "node_id": "various_feature_value",
      "disambiguation_index": 0,
      "label": "various feature values",
      "aliases": [
        "various feature values"
      ],
      "types": [
        "feature value",
        "attribute"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The various feature values refer to the diverse structural features and quality measures of the learned SHACL shapes, including their depth, width, confidence (IOPSC), head coverage (IOPHC), cardinality, and length.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-4",
          "local_name": "various feature values",
          "local_types": [
            "feature value",
            "attribute"
          ],
          "iri": "Entity-various_feature_value-Mention-1"
        }
      ],
      "relevance": 0.56982421875
    },
    "Entity-ideal_rule_learner": {
      "node_id": "ideal_rule_learner",
      "disambiguation_index": 0,
      "label": "ideal rule learner",
      "aliases": [
        "ideal rule learner"
      ],
      "types": [
        "algorithm",
        "machine learning model",
        "rule-based system",
        "system",
        "model"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A system that generates and evaluates all possible IOP rules up to the maximum length parameter without using sampling or heuristic pruning, resulting in an inefficient yet complete set of learnt rules.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-2",
          "local_name": "ideal rule learner",
          "local_types": [
            "algorithm",
            "machine learning model",
            "system"
          ],
          "iri": "Entity-ideal_rule_learner-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-4-Sentence-3",
          "local_name": "ideal rule learner",
          "local_types": [
            "model",
            "rule-based system"
          ],
          "iri": "Entity-ideal_rule_learner-Mention-2"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-the_converse_of_op_rule": {
      "node_id": "the_converse_of_op_rule",
      "disambiguation_index": 0,
      "label": "the converse of OP rules",
      "aliases": [
        "the converse of OP rules"
      ],
      "types": [
        "concept",
        "OP rules"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept or set of OP rules whose converses are equivalent to SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "the converse of OP rules",
          "local_types": [
            "concept",
            "OP rules"
          ],
          "iri": "Entity-the_converse_of_op_rule-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-we_represent_k_a_a_set_of_square_n_x_n_adjacency_matrix": {
      "node_id": "we_represent_k_a_a_set_of_square_n_x_n_adjacency_matrix",
      "disambiguation_index": 0,
      "label": "We represent K as a set of square n x n adjacency matrices",
      "aliases": [
        "K as a set of square n x n adjacency matrices",
        "We represent K as a set of square n x n adjacency matrices"
      ],
      "types": [
        "notation",
        "concept",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge graph represented as a set of square adjacency matrices, where each matrix corresponds to a predicate and its elements indicate whether there is an edge between two entities.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "We represent K as a set of square n x n adjacency matrices",
          "local_types": [
            "notation",
            "mathematics"
          ],
          "iri": "Entity-we_represent_k_a_a_set_of_square_n_x_n_adjacency_matrix-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "K as a set of square n x n adjacency matrices",
          "local_types": [
            "concept",
            "mathematics"
          ],
          "iri": "Entity-we_represent_k_a_a_set_of_square_n_x_n_adjacency_matrix-Mention-2"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-percentage_difference_in_the_number_of_rule_found": {
      "node_id": "percentage_difference_in_the_number_of_rule_found",
      "disambiguation_index": 0,
      "label": "percentage difference in the number of rules found",
      "aliases": [
        "the percentage difference in the number of rules found",
        "percentage difference in the number of rules found"
      ],
      "types": [
        "metric",
        "rule",
        "statistic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Percentage difference in the quality and quantity of IOP rules learned by SHACLEARNER variants compared to an ideal rule learner.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-4",
          "local_name": "percentage difference in the number of rules found",
          "local_types": [
            "metric",
            "statistic"
          ],
          "iri": "Entity-percentage_difference_in_the_number_of_rule_found-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-4",
          "local_name": "the percentage difference in the number of rules found",
          "local_types": [
            "metric",
            "rule"
          ],
          "iri": "Entity-percentage_difference_in_the_number_of_rule_found-Mention-2"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-to_quantify_this_idea": {
      "node_id": "to_quantify_this_idea",
      "disambiguation_index": 0,
      "label": "To quantify this idea",
      "aliases": [
        "To quantify this idea"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Measures for evaluating the quality of closed-path rules in knowledge graph-based rule learning systems",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "To quantify this idea",
          "local_types": [
            "research"
          ],
          "iri": "Entity-to_quantify_this_idea-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-shape_of_varying_complexity_and_diversity_with_respect_to_length_and_cardinality": {
      "node_id": "shape_of_varying_complexity_and_diversity_with_respect_to_length_and_cardinality",
      "disambiguation_index": 0,
      "label": "shapes of varying complexity and diversity with respect to length and cardinality",
      "aliases": [
        "shapes of varying complexity and diversity with respect to length and cardinality"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of SHACL shapes that exhibit diverse structural features, such as depth and width, and quality measures indicating confidence and generality.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-4",
          "local_name": "shapes of varying complexity and diversity with respect to length and cardinality",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-shape_of_varying_complexity_and_diversity_with_respect_to_length_and_cardinality-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-many_relevant_rule_with_many_covered_head_instance": {
      "node_id": "many_relevant_rule_with_many_covered_head_instance",
      "disambiguation_index": 0,
      "label": "many relevant rules with many covered head instances",
      "aliases": [
        "many relevant rules with many covered head instances"
      ],
      "types": [
        "rules",
        "instances"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A pattern observed in the distribution of learned IOP rules, where there is a decrease in proportion as IOPHC increases, indicating the presence of numerous high-quality rules covering multiple head instances.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-3",
          "local_name": "many relevant rules with many covered head instances",
          "local_types": [
            "rules",
            "instances"
          ],
          "iri": "Entity-many_relevant_rule_with_many_covered_head_instance-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-we_observe_that_(1)": {
      "node_id": "we_observe_that_(1)",
      "disambiguation_index": 1,
      "label": "We observe that",
      "aliases": [
        "We observe that"
      ],
      "types": [
        "statement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The observation about SHACLEARNER's performance and the effect of its pruning methods on learning high-quality IOP rules.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-1",
          "local_name": "We observe that",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-we_observe_that_(1)-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-branch_in_the_mined_tree": {
      "node_id": "branch_in_the_mined_tree",
      "disambiguation_index": 0,
      "label": "branches in the mined trees",
      "aliases": [
        "branches in the mined trees"
      ],
      "types": [
        "data",
        "tree"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure of the branching structure of learned tree shapes, representing the proportion of IOP rules aggregated into trees.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "branches in the mined trees",
          "local_types": [
            "data",
            "tree"
          ],
          "iri": "Entity-branch_in_the_mined_tree-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-iopsc_value": {
      "node_id": "iopsc_value",
      "disambiguation_index": 0,
      "label": "IOPSC values",
      "aliases": [
        "IOPSC values"
      ],
      "types": [
        "score",
        "metric",
        "evaluation metric",
        "evaluation measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Inverse Open Path Standard Confidence measures, which quantify the quality of an IOP rule by dividing its support by the number of entities that can instantiate the body part.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "IOPSC values",
          "local_types": [
            "score",
            "metric",
            "evaluation metric",
            "evaluation measure"
          ],
          "iri": "Entity-iopsc_value-Mention-1"
        }
      ],
      "relevance": 0.56884765625
    },
    "Entity-this_completion_strategy_is_depth-first_a_it_work_through_a_shape_tree_.": {
      "node_id": "this_completion_strategy_is_depth-first_a_it_work_through_a_shape_tree_.",
      "disambiguation_index": 0,
      "label": "This completion strategy is depth-first as it works through a shape tree.",
      "aliases": [
        "This completion strategy is depth-first as it works through a shape tree."
      ],
      "types": [
        "strategy",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel method for human- KG-completion, which involves asking sequential questions along a path of dependent relationships in a depth-first manner.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-6",
          "local_name": "This completion strategy is depth-first as it works through a shape tree.",
          "local_types": [
            "strategy",
            "algorithm"
          ],
          "iri": "Entity-this_completion_strategy_is_depth-first_a_it_work_through_a_shape_tree_.-Mention-1"
        }
      ],
      "relevance": 0.56884765625
    },
    "Entity-the_experiment": {
      "node_id": "the_experiment",
      "disambiguation_index": 0,
      "label": "The experiments",
      "aliases": [
        "The experiments",
        "Our experiments"
      ],
      "types": [
        "research",
        "study"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Experiments evaluating the effectiveness of SHACLEARNER in learning high-quality shapes from large knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "The experiments",
          "local_types": [
            "study"
          ],
          "iri": "Entity-the_experiment-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "Our experiments",
          "local_types": [
            "research"
          ],
          "iri": "Entity-the_experiment-Mention-2"
        }
      ],
      "relevance": 0.56884765625
    },
    "Entity-entity_that_occur_a_the_subject__respectively_object__of_p_k_in_the_kg": {
      "node_id": "entity_that_occur_a_the_subject__respectively_object__of_p_k_in_the_kg",
      "disambiguation_index": 0,
      "label": "entities that occur as the subject (respectively object) of P_k in the KG",
      "aliases": [
        "entities that occur as the subject (respectively object) of P_k in the KG"
      ],
      "types": [
        "knowledge graph",
        "entity",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that are connected to predicate P_k through either subject or object relationships within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "entities that occur as the subject (respectively object) of P_k in the KG",
          "local_types": [
            "knowledge graph",
            "entity",
            "concept"
          ],
          "iri": "Entity-entity_that_occur_a_the_subject__respectively_object__of_p_k_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.56884765625
    },
    "Entity-the_experiment_(1)": {
      "node_id": "the_experiment_(1)",
      "disambiguation_index": 1,
      "label": "the experiments",
      "aliases": [
        "the experiments"
      ],
      "types": [
        "experiment",
        "study"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of experimental results obtained from evaluating SHACLEARNER on massive knowledge graphs such as YAGO2s, DBpedia 3.8, and Wikidata.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-1",
          "local_name": "the experiments",
          "local_types": [
            "experiment",
            "study"
          ],
          "iri": "Entity-the_experiment_(1)-Mention-1"
        }
      ],
      "relevance": 0.56884765625
    },
    "Entity-these_benefit": {
      "node_id": "these_benefit",
      "disambiguation_index": 0,
      "label": "these benefits",
      "aliases": [
        "these benefits"
      ],
      "types": [
        "benefit"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The ability to validate a Knowledge Graph (KG), underpin manual editing tasks, and gain insight into KG structure.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-5",
          "local_name": "these benefits",
          "local_types": [
            "benefit"
          ],
          "iri": "Entity-these_benefit-Mention-1"
        }
      ],
      "relevance": 0.568359375
    },
    "Entity-to_do_so": {
      "node_id": "to_do_so",
      "disambiguation_index": 0,
      "label": "To do so",
      "aliases": [
        "To do so"
      ],
      "types": [
        "method",
        "action"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of sorting and selecting rules based on their quality measures (IOPSC) for constructing SHACL trees.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-2",
          "local_name": "To do so",
          "local_types": [
            "method",
            "action"
          ],
          "iri": "Entity-to_do_so-Mention-1"
        }
      ],
      "relevance": 0.568359375
    },
    "Entity-rule_with_respect_to_the_feature__iopsc__iophc__cardinality_and_length__and_also_iopsc_v_length": {
      "node_id": "rule_with_respect_to_the_feature__iopsc__iophc__cardinality_and_length__and_also_iopsc_v_length",
      "disambiguation_index": 0,
      "label": "rules with respect to the features, IOPSC, IOPHC, cardinality and length, and also IOPSC vs length",
      "aliases": [
        "rules with respect to the features, IOPSC, IOPHC, cardinality and length, and also IOPSC vs length"
      ],
      "types": [
        "features",
        "metrics"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The distribution of learned rules in terms of their quality metrics (IOPSC, IOPHC), structural properties (cardinality, length), and relationships between these features.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-3",
          "local_name": "rules with respect to the features, IOPSC, IOPHC, cardinality and length, and also IOPSC vs length",
          "local_types": [
            "features",
            "metrics"
          ],
          "iri": "Entity-rule_with_respect_to_the_feature__iopsc__iophc__cardinality_and_length__and_also_iopsc_v_length-Mention-1"
        }
      ],
      "relevance": 0.568359375
    },
    "Entity-the_proportion_of_mined_rule_having_the_various_feature_value_is_presented": {
      "node_id": "the_proportion_of_mined_rule_having_the_various_feature_value_is_presented",
      "disambiguation_index": 0,
      "label": "the proportion of mined rules having the various feature values is presented",
      "aliases": [
        "the proportion of mined rules having the various feature values is presented"
      ],
      "types": [
        "result",
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The distribution of learned IOP rules with respect to their quality features (IOPSC, IOPHC), cardinality, and length.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-4",
          "local_name": "the proportion of mined rules having the various feature values is presented",
          "local_types": [
            "result",
            "output"
          ],
          "iri": "Entity-the_proportion_of_mined_rule_having_the_various_feature_value_is_presented-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-the_better_quality_of_embeddings_extracted_from_the_sampled_kg_arises_from_our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate": {
      "node_id": "the_better_quality_of_embeddings_extracted_from_the_sampled_kg_arises_from_our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate",
      "disambiguation_index": 0,
      "label": "The better quality of embeddings extracted from the sampled KG arises from our sampling method that creates a KG that is customised for the target predicate",
      "aliases": [
        "The better quality of embeddings extracted from the sampled KG arises from our sampling method that creates a KG that is customised for the target predicate"
      ],
      "types": [
        "finding",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or finding that improves the extraction quality of embeddings by creating a knowledge graph tailored to a specific predicate.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-3",
          "local_name": "The better quality of embeddings extracted from the sampled KG arises from our sampling method that creates a KG that is customised for the target predicate",
          "local_types": [
            "finding",
            "methodology"
          ],
          "iri": "Entity-the_better_quality_of_embeddings_extracted_from_the_sampled_kg_arises_from_our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-manually_specified": {
      "node_id": "manually_specified",
      "disambiguation_index": 0,
      "label": "manually specified",
      "aliases": [
        "manually specified"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "SHACL shape constraints that are defined by humans rather than being automatically generated.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "manually specified",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-manually_specified-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-unary_predicate_that_can_act_a_class_or_type_constraint": {
      "node_id": "unary_predicate_that_can_act_a_class_or_type_constraint",
      "disambiguation_index": 0,
      "label": "unary predicates that can act as class or type constraints",
      "aliases": [
        "unary predicates that can act as class or type constraints"
      ],
      "types": [
        "constraint",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Unary predicates that can act as class or type constraints refer to specific formalisms used for expressing constraints on graph data, serving as building blocks for more complex shapes such as trees and quality measurements.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "unary predicates that can act as class or type constraints",
          "local_types": [
            "constraint",
            "predicate"
          ],
          "iri": "Entity-unary_predicate_that_can_act_a_class_or_type_constraint-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-of_the_number_of_entity_pair_that_satisfy_the_body_in_the_kg": {
      "node_id": "of_the_number_of_entity_pair_that_satisfy_the_body_in_the_kg",
      "disambiguation_index": 0,
      "label": "of the number of entity pairs that satisfy the body in the KG",
      "aliases": [
        "of the number of entity pairs that satisfy the body in the KG"
      ],
      "types": [
        "description",
        "statistics"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The measure of standard confidence (SC) for a closed-path rule, which represents the proportion of entity pairs that satisfy the rule's body in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "of the number of entity pairs that satisfy the body in the KG",
          "local_types": [
            "description",
            "statistics"
          ],
          "iri": "Entity-of_the_number_of_entity_pair_that_satisfy_the_body_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-an_editor_called_schimatos_for_manual_knowledge_graph_completion": {
      "node_id": "an_editor_called_schimatos_for_manual_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "an editor called Schimatos for manual knowledge graph completion",
      "aliases": [
        "an editor called Schimatos for manual knowledge graph completion"
      ],
      "types": [
        "editor",
        "Schimatos",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An individual responsible for manually completing information gaps in a knowledge graph using learned SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-3",
          "local_name": "an editor called Schimatos for manual knowledge graph completion",
          "local_types": [
            "editor",
            "Schimatos",
            "knowledge graph"
          ],
          "iri": "Entity-an_editor_called_schimatos_for_manual_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-z": {
      "node_id": "z",
      "disambiguation_index": 0,
      "label": "z",
      "aliases": [
        "z"
      ],
      "types": [
        "variable",
        "symbol"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An Inverse Open Path (IOP) rule that connects entities satisfying the subject argument of the body predicate to entities forming the object argument of the last predicate along a path of entities that satisfy a chain of predicates in the rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "z",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-z-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-iopsc_greater_than_or_equal_to_0.1_and_iophc_greater_than_or_equal_to_0.01__threshold_established_in_comparative_work": {
      "node_id": "iopsc_greater_than_or_equal_to_0.1_and_iophc_greater_than_or_equal_to_0.01__threshold_established_in_comparative_work",
      "disambiguation_index": 0,
      "label": "IOPSC greater than or equal to 0.1 and IOPHC greater than or equal to 0.01, thresholds established in comparative work",
      "aliases": [
        "IOPSC greater than or equal to 0.1 and IOPHC greater than or equal to 0.01, thresholds established in comparative work"
      ],
      "types": [
        "metrics",
        "benchmarks"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Minimum quality thresholds for Inverse Open Path rules",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "IOPSC greater than or equal to 0.1 and IOPHC greater than or equal to 0.01, thresholds established in comparative work",
          "local_types": [
            "metrics",
            "benchmarks"
          ],
          "iri": "Entity-iopsc_greater_than_or_equal_to_0.1_and_iophc_greater_than_or_equal_to_0.01__threshold_established_in_comparative_work-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-_-s-h_": {
      "node_id": "_-s-h_",
      "disambiguation_index": 0,
      "label": "(-S-H)",
      "aliases": [
        "(-S-H)"
      ],
      "types": [
        "SHACLEARNER",
        "IOP rule learner"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACLEARNER, an IOP rule learner without sampling and heuristic pruning",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-3",
          "local_name": "(-S-H)",
          "local_types": [
            "SHACLEARNER",
            "IOP rule learner"
          ],
          "iri": "Entity-_-s-h_-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-yago2s_with_4_million_fact": {
      "node_id": "yago2s_with_4_million_fact",
      "disambiguation_index": 0,
      "label": "YAGO2s with 4 million facts",
      "aliases": [
        "YAGO2s with 4 million facts"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "YAGO2s: a massive knowledge graph dataset containing approximately 4 million facts.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "YAGO2s with 4 million facts",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-yago2s_with_4_million_fact-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-mined_rule": {
      "node_id": "mined_rule",
      "disambiguation_index": 0,
      "label": "mined rules",
      "aliases": [
        "mined rules"
      ],
      "types": [
        "concept",
        "algorithmic output",
        "data",
        "rules",
        "mined",
        "ruleset",
        "computational process",
        "knowledge graph (KG)",
        "data set",
        "knowledge base",
        "artificial intelligence",
        "rule",
        "algorithmic concept",
        "knowledge graph",
        "knowledge discovery"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of extracted or learned rules from data, often used in knowledge discovery and artificial intelligence applications.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-4",
          "local_name": "mined rules",
          "local_types": [
            "knowledge base",
            "data set",
            "data",
            "rule"
          ],
          "iri": "Entity-mined_rule-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-1",
          "local_name": "mined rules",
          "local_types": [
            "mined",
            "knowledge discovery",
            "algorithmic output",
            "rules"
          ],
          "iri": "Entity-mined_rule-Mention-2"
        },
        {
          "reference": "Section-15-Paragraph-6-Sentence-1",
          "local_name": "mined rules",
          "local_types": [
            "data",
            "rules",
            "ruleset",
            "knowledge graph (KG)",
            "artificial intelligence",
            "knowledge graph"
          ],
          "iri": "Entity-mined_rule-Mention-3"
        },
        {
          "reference": "Section-15-Paragraph-7-Sentence-1",
          "local_name": "mined rules",
          "local_types": [
            "knowledge discovery",
            "concept",
            "rules",
            "algorithmic output"
          ],
          "iri": "Entity-mined_rule-Mention-4"
        },
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "mined rules",
          "local_types": [
            "algorithmic concept",
            "computational process"
          ],
          "iri": "Entity-mined_rule-Mention-5"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-iop_mining_time": {
      "node_id": "iop_mining_time",
      "disambiguation_index": 0,
      "label": "IOP mining time",
      "aliases": [
        "IOP mining time"
      ],
      "types": [
        "time measurement",
        "performance metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The total processing time required for aggregating Inverse Open Path (IOP) rules into tree shapes.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "IOP mining time",
          "local_types": [
            "time measurement",
            "performance metric"
          ],
          "iri": "Entity-iop_mining_time-Mention-1"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg": {
      "node_id": "if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg",
      "disambiguation_index": 0,
      "label": "if there exist entities e1, ..., en\u22121 in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(en\u22121, e') are facts in the KG",
      "aliases": [
        "if there exist entities e1, ..., en\u22121 in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(en\u22121, e') are facts in the KG"
      ],
      "types": [
        "entities",
        "facts",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sequence of entities connected by relationships in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "if there exist entities e1, ..., en\u22121 in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(en\u22121, e') are facts in the KG",
          "local_types": [
            "entities",
            "facts",
            "knowledge graph"
          ],
          "iri": "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.56640625
    },
    "Entity-close_relationship": {
      "node_id": "close_relationship",
      "disambiguation_index": 0,
      "label": "close relationship",
      "aliases": [
        "close relationship"
      ],
      "types": [
        "conceptual framework"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept of a close relationship refers to the similarity or equivalence between Open Path (OP) and Inverse Open Path (IOP) rules, which allows for mining both OP and IOP rules in one process.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "close relationship",
          "local_types": [
            "conceptual framework"
          ],
          "iri": "Entity-close_relationship-Mention-1"
        }
      ],
      "relevance": 0.56640625
    },
    "Entity-p3": {
      "node_id": "p3",
      "disambiguation_index": 0,
      "label": "P3",
      "aliases": [
        "P3"
      ],
      "types": [
        "rule",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The predicate P3 in an IOP rule, which represents a fact in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-6",
          "local_name": "P3",
          "local_types": [
            "rule",
            "predicate"
          ],
          "iri": "Entity-p3-Mention-1"
        }
      ],
      "relevance": 0.56640625
    },
    "Entity-rule_quality_measure_iop_standard_confidence__iop_head_coverage__and_cardinality_which_augment_the_rule": {
      "node_id": "rule_quality_measure_iop_standard_confidence__iop_head_coverage__and_cardinality_which_augment_the_rule",
      "disambiguation_index": 0,
      "label": "rule quality measures IOP Standard Confidence, IOP Head Coverage, and Cardinality which augment the rules",
      "aliases": [
        "rule quality measures IOP Standard Confidence, IOP Head Coverage, and Cardinality",
        "rule quality measures IOP Standard Confidence, IOP Head Coverage, and Cardinality which augment the rules"
      ],
      "types": [
        "measure",
        "quality",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Rule quality measures that quantify the confidence, head coverage, and cardinality of Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-4",
          "local_name": "rule quality measures IOP Standard Confidence, IOP Head Coverage, and Cardinality which augment the rules",
          "local_types": [
            "measure",
            "quality"
          ],
          "iri": "Entity-rule_quality_measure_iop_standard_confidence__iop_head_coverage__and_cardinality_which_augment_the_rule-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-4",
          "local_name": "rule quality measures IOP Standard Confidence, IOP Head Coverage, and Cardinality",
          "local_types": [
            "concept",
            "measure"
          ],
          "iri": "Entity-rule_quality_measure_iop_standard_confidence__iop_head_coverage__and_cardinality_which_augment_the_rule-Mention-2"
        }
      ],
      "relevance": 0.56640625
    },
    "Entity-depth-first_a_it_work_through_a_shape_tree": {
      "node_id": "depth-first_a_it_work_through_a_shape_tree",
      "disambiguation_index": 0,
      "label": "depth-first as it works through a shape tree",
      "aliases": [
        "depth-first as it works through a shape tree"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A strategy for human-KG-completion, where questions are asked sequentially along a path of dependent questions in a depth-first manner, following the structure of a generated tree shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-6",
          "local_name": "depth-first as it works through a shape tree",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-depth-first_a_it_work_through_a_shape_tree-Mention-1"
        }
      ],
      "relevance": 0.56640625
    },
    "Entity-pair": {
      "node_id": "pair",
      "disambiguation_index": 0,
      "label": "pairs",
      "aliases": [
        "pairs"
      ],
      "types": [
        "set",
        "collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of entities and their connections that satisfy a specific shape pattern expressed as an Inverse Open Path (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "pairs",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-pair-Mention-1"
        }
      ],
      "relevance": 0.56591796875
    },
    "Entity-the_entity_set_esample": {
      "node_id": "the_entity_set_esample",
      "disambiguation_index": 0,
      "label": "the entity set Esample",
      "aliases": [
        "the entity set Esample"
      ],
      "types": [
        "entity_set"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The entity set Esample represents a subset of entities related to the target predicate Pt, used as input for learning Inverse Open Path (IOP) rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "the entity set Esample",
          "local_types": [
            "entity_set"
          ],
          "iri": "Entity-the_entity_set_esample-Mention-1"
        }
      ],
      "relevance": 0.56591796875
    },
    "Entity-iop_rule_that_are_learnt_by_ideal__modified_shaclearner__-s-h__with_no_pruning": {
      "node_id": "iop_rule_that_are_learnt_by_ideal__modified_shaclearner__-s-h__with_no_pruning",
      "disambiguation_index": 0,
      "label": "IOP rules that are learnt by ideal, modified SHACLEARNER (-S-H) with no pruning",
      "aliases": [
        "IOP rules that are learnt by ideal, modified SHACLEARNER (-S-H) with no pruning"
      ],
      "types": [
        "algorithm",
        "SHACLEARNER"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of rules learned by an ideal SHACLEARNER algorithm without any pruning or sampling.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "IOP rules that are learnt by ideal, modified SHACLEARNER (-S-H) with no pruning",
          "local_types": [
            "algorithm",
            "SHACLEARNER"
          ],
          "iri": "Entity-iop_rule_that_are_learnt_by_ideal__modified_shaclearner__-s-h__with_no_pruning-Mention-1"
        }
      ],
      "relevance": 0.56591796875
    },
    "Entity-a_kg_context": {
      "node_id": "a_kg_context",
      "disambiguation_index": 0,
      "label": "a KG context",
      "aliases": [
        "a KG context"
      ],
      "types": [
        "KG",
        "context"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge graph environment or framework",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "a KG context",
          "local_types": [
            "KG",
            "context"
          ],
          "iri": "Entity-a_kg_context-Mention-1"
        }
      ],
      "relevance": 0.5654296875
    },
    "Entity-pt___x__z0__-__exists__z1__...__z__n-1___y__p1___z0__z1___p2___z1__z2___...__pn___z__n-1___y_": {
      "node_id": "pt___x__z0__-__exists__z1__...__z__n-1___y__p1___z0__z1___p2___z1__z2___...__pn___z__n-1___y_",
      "disambiguation_index": 0,
      "label": "Pt'(x, z0) -> exists(z1, ..., z(n-1), y) P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y)",
      "aliases": [
        "Pt'(x, z0) -> exists(z1, ..., z(n-1), y) P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y)"
      ],
      "types": [
        "formula"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A formula representing an inverse open path rule that expresses a shape pattern as a sequence of predicates over connected entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-1",
          "local_name": "Pt'(x, z0) -> exists(z1, ..., z(n-1), y) P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y)",
          "local_types": [
            "formula"
          ],
          "iri": "Entity-pt___x__z0__-__exists__z1__...__z__n-1___y__p1___z0__z1___p2___z1__z2___...__pn___z__n-1___y_-Mention-1"
        }
      ],
      "relevance": 0.56494140625
    },
    "Entity-the_cardinality": {
      "node_id": "the_cardinality",
      "disambiguation_index": 0,
      "label": "the cardinality",
      "aliases": [
        "the cardinality"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept referring to the minimum or maximum number of instances of a shape pattern that must exist in a knowledge graph, used as a quality measure for inverse open path rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-4",
          "local_name": "the cardinality",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_cardinality-Mention-1"
        }
      ],
      "relevance": 0.56494140625
    },
    "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_the_subject_and_object_binding_swapped_.": {
      "node_id": "each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_the_subject_and_object_binding_swapped_.",
      "disambiguation_index": 0,
      "label": "each P'i is either a predicate in the KG or its reverse with the subject and object bindings swapped.",
      "aliases": [
        "each P'i is either a predicate in the KG or its reverse with the subject and object bindings swapped."
      ],
      "types": [
        "description",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A notation for expressing simple shape patterns that can be augmented with minimum cardinality constraints, used as building blocks for more complex shapes such as trees.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-2",
          "local_name": "each P'i is either a predicate in the KG or its reverse with the subject and object bindings swapped.",
          "local_types": [
            "description",
            "notation"
          ],
          "iri": "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_the_subject_and_object_binding_swapped_.-Mention-1"
        }
      ],
      "relevance": 0.56494140625
    },
    "Entity-inverse_open_path_head_coverage": {
      "node_id": "inverse_open_path_head_coverage",
      "disambiguation_index": 0,
      "label": "Inverse open path head coverage",
      "aliases": [
        "Inverse open path head coverage"
      ],
      "types": [
        "metric",
        "measure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A measure of the proportion of rule consequent instances that are justified by target predicate instances in a knowledge graph, indicating the relevance of the rule to the target.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-2",
          "local_name": "Inverse open path head coverage",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-inverse_open_path_head_coverage-Mention-1"
        }
      ],
      "relevance": 0.564453125
    },
    "Entity-relative_to_the_first_row": {
      "node_id": "relative_to_the_first_row",
      "disambiguation_index": 0,
      "label": "relative to the first row",
      "aliases": [
        "relative to the first row"
      ],
      "types": [
        "reference",
        "row"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Percentage differences in the number of IOP rules learnt by SHACLEARNER variants compared to the ideal rule learner (SHACLEARNER -S- H)",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-4",
          "local_name": "relative to the first row",
          "local_types": [
            "reference",
            "row"
          ],
          "iri": "Entity-relative_to_the_first_row-Mention-1"
        }
      ],
      "relevance": 0.564453125
    },
    "Entity-hole_and_rescal": {
      "node_id": "hole_and_rescal",
      "disambiguation_index": 0,
      "label": "HOLE and RESCAL",
      "aliases": [
        "HOLE and RESCAL"
      ],
      "types": [
        "algorithm",
        "approach",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A combination of HOLE (Hierarchical Representation Learning) and RESCAL (Relational Embedding with Constrained Linearizations), two algorithms/approaches/methods used to learn embeddings in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "HOLE and RESCAL",
          "local_types": [
            "algorithm",
            "approach",
            "method"
          ],
          "iri": "Entity-hole_and_rescal-Mention-1"
        }
      ],
      "relevance": 0.56396484375
    },
    "Entity-rule_of_lower_quality": {
      "node_id": "rule_of_lower_quality",
      "disambiguation_index": 0,
      "label": "rules of lower quality",
      "aliases": [
        "rules of lower quality"
      ],
      "types": [
        "pattern",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "IOP rules that are not discovered by SHACLEARNER due to its pruning methods",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-2",
          "local_name": "rules of lower quality",
          "local_types": [
            "pattern",
            "rule set"
          ],
          "iri": "Entity-rule_of_lower_quality-Mention-1"
        }
      ],
      "relevance": 0.56396484375
    },
    "Entity-we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule": {
      "node_id": "we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule",
      "disambiguation_index": 0,
      "label": "we follow a style of quality measures similar to those used for OP rules",
      "aliases": [
        "we follow a style of quality measures similar to those used for OP rules"
      ],
      "types": [
        "approach",
        "measure",
        "process",
        "rule",
        "OP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Quality measures for Inverse Open Path (IOP) rules",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "we follow a style of quality measures similar to those used for OP rules",
          "local_types": [
            "approach",
            "measure",
            "process",
            "rule",
            "OP rule"
          ],
          "iri": "Entity-we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule-Mention-1"
        }
      ],
      "relevance": 0.56396484375
    },
    "Entity-from_annotated_iop_rule": {
      "node_id": "from_annotated_iop_rule",
      "disambiguation_index": 0,
      "label": "from annotated IOP rules",
      "aliases": [
        "from annotated IOP rules"
      ],
      "types": [
        "input data",
        "IOP rule set"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of pairs of entities that satisfies the head and body of a tree shape derived from annotated Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "from annotated IOP rules",
          "local_types": [
            "input data",
            "IOP rule set"
          ],
          "iri": "Entity-from_annotated_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.56396484375
    },
    "Entity-unlike_earlier_work": {
      "node_id": "unlike_earlier_work",
      "disambiguation_index": 0,
      "label": "Unlike earlier work",
      "aliases": [
        "Unlike earlier work"
      ],
      "types": [
        "comparison"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Comparison with previous approaches to learning shapes from knowledge graphs",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "Unlike earlier work",
          "local_types": [
            "comparison"
          ],
          "iri": "Entity-unlike_earlier_work-Mention-1"
        }
      ],
      "relevance": 0.5634765625
    },
    "Entity-_": {
      "node_id": "_",
      "disambiguation_index": 0,
      "label": ":=",
      "aliases": [
        ":="
      ],
      "types": [
        "operator"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The operator ':=' represents an inverse open path rule in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-6",
          "local_name": ":=",
          "local_types": [
            "operator"
          ],
          "iri": "Entity-_-Mention-1"
        }
      ],
      "relevance": 0.5634765625
    },
    "Entity-these_two_pruning_method": {
      "node_id": "these_two_pruning_method",
      "disambiguation_index": 0,
      "label": "these two pruning methods",
      "aliases": [
        "these two pruning methods"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Two techniques used by SHACLEARNER to reduce the search space for IOP rules, namely prior Sampling and heuristic pruning.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-1-Sentence-2",
          "local_name": "these two pruning methods",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-these_two_pruning_method-Mention-1"
        }
      ],
      "relevance": 0.5634765625
    },
    "Entity-weak_inference_rule": {
      "node_id": "weak_inference_rule",
      "disambiguation_index": 0,
      "label": "weak inference rules",
      "aliases": [
        "weak inference rules"
      ],
      "types": [
        "knowledge representation",
        "rule-based system",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Inference rules that do not draw strong conclusions from given information, used in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "weak inference rules",
          "local_types": [
            "knowledge representation",
            "rule-based system",
            "rule"
          ],
          "iri": "Entity-weak_inference_rule-Mention-1"
        }
      ],
      "relevance": 0.56298828125
    },
    "Entity-shape_could__in_principle__be_inferred_from_kg_data": {
      "node_id": "shape_could__in_principle__be_inferred_from_kg_data",
      "disambiguation_index": 0,
      "label": "shapes could, in principle, be inferred from KG data",
      "aliases": [
        "shapes could, in principle, be inferred from KG data"
      ],
      "types": [
        "possibility",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The possibility of inferring shapes",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-5",
          "local_name": "shapes could, in principle, be inferred from KG data",
          "local_types": [
            "possibility",
            "knowledge representation"
          ],
          "iri": "Entity-shape_could__in_principle__be_inferred_from_kg_data-Mention-1"
        }
      ],
      "relevance": 0.56298828125
    },
    "Entity-counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg": {
      "node_id": "counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg",
      "disambiguation_index": 0,
      "label": "counting the proportion of target predicate instances for which the rule holds true in the KG",
      "aliases": [
        "counting the proportion of target predicate instances for which the rule holds true in the KG"
      ],
      "types": [
        "evaluation",
        "predicate instance"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The measure of a rule's confidence based on the proportion of target predicate instances for which it holds true in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "counting the proportion of target predicate instances for which the rule holds true in the KG",
          "local_types": [
            "evaluation",
            "predicate instance"
          ],
          "iri": "Entity-counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.56298828125
    },
    "Entity-kg_fact": {
      "node_id": "kg_fact",
      "disambiguation_index": 0,
      "label": "KG facts",
      "aliases": [
        "KG facts"
      ],
      "types": [
        "data",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A unit of knowledge or information stored in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-6",
          "local_name": "KG facts",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-kg_fact-Mention-1"
        }
      ],
      "relevance": 0.5625
    },
    "Entity-the_entity_and_predicate_that_are_less_relevant_to_the_target_predicate": {
      "node_id": "the_entity_and_predicate_that_are_less_relevant_to_the_target_predicate",
      "disambiguation_index": 0,
      "label": "the entities and predicates that are less relevant to the target predicate",
      "aliases": [
        "the entities and predicates that are less relevant to the target predicate"
      ],
      "types": [
        "concept",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Entities and predicates in the knowledge graph that do not contribute significantly to the discovery of IOP rules or shape learning, requiring pruning from the sampled graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "the entities and predicates that are less relevant to the target predicate",
          "local_types": [
            "concept",
            "predicate"
          ],
          "iri": "Entity-the_entity_and_predicate_that_are_less_relevant_to_the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.5625
    },
    "Entity-shacl_language": {
      "node_id": "shacl_language",
      "disambiguation_index": 0,
      "label": "SHACL language",
      "aliases": [
        "SHACL language"
      ],
      "types": [
        "programming language",
        "data modeling"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A programming language and data modeling framework used to define the structure and constraints of RDF datasets.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-1",
          "local_name": "SHACL language",
          "local_types": [
            "programming language",
            "data modeling"
          ],
          "iri": "Entity-shacl_language-Mention-1"
        }
      ],
      "relevance": 0.5625
    },
    "Entity-the_sampled_kg": {
      "node_id": "the_sampled_kg",
      "disambiguation_index": 0,
      "label": "the sampled KG",
      "aliases": [
        "the sampled KG"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A subgraph of a knowledge graph, obtained by sampling entities and facts related to a target predicate up to a certain distance l.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-4",
          "local_name": "the sampled KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-the_sampled_kg-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-5",
          "local_name": "the sampled KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-the_sampled_kg-Mention-2"
        }
      ],
      "relevance": 0.5625
    },
    "Entity-public_knowledge_graph": {
      "node_id": "public_knowledge_graph",
      "disambiguation_index": 0,
      "label": "public knowledge graphs",
      "aliases": [
        "public knowledge graphs"
      ],
      "types": [
        "database",
        "knowledge_graph",
        "data structure",
        "knowledge representation",
        "research",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A publicly accessible database or data structure that represents and interconnects information from various domains using semantic web technologies.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "public knowledge graphs",
          "local_types": [
            "database",
            "knowledge_graph",
            "data structure",
            "knowledge representation",
            "research",
            "knowledge graph"
          ],
          "iri": "Entity-public_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.56201171875
    },
    "Entity-by_aggregating_mined_iop_rule_in_greedysearch": {
      "node_id": "by_aggregating_mined_iop_rule_in_greedysearch",
      "disambiguation_index": 0,
      "label": "by aggregating mined IOP rules in GreedySearch",
      "aliases": [
        "by aggregating mined IOP rules in GreedySearch"
      ],
      "types": [
        "methodology",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or technique used to aggregate and combine previously extracted inference optimization problem (IOP) rules",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-7",
          "local_name": "by aggregating mined IOP rules in GreedySearch",
          "local_types": [
            "methodology",
            "technique"
          ],
          "iri": "Entity-by_aggregating_mined_iop_rule_in_greedysearch-Mention-1"
        }
      ],
      "relevance": 0.56201171875
    },
    "Entity-a_fragment_of_the_kg_k_": {
      "node_id": "a_fragment_of_the_kg_k_",
      "disambiguation_index": 0,
      "label": "a fragment of the KG K'",
      "aliases": [
        "a fragment of the KG K'"
      ],
      "types": [
        "fragment",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A subgraph of the input knowledge graph (KG) K' containing a bounded number of entities related to the target predicate Pt.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "a fragment of the KG K'",
          "local_types": [
            "fragment",
            "knowledge graph"
          ],
          "iri": "Entity-a_fragment_of_the_kg_k_-Mention-1"
        }
      ],
      "relevance": 0.56201171875
    },
    "Entity-the_example": {
      "node_id": "the_example",
      "disambiguation_index": 0,
      "label": "the example",
      "aliases": [
        "the example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The specific instance of an IOP rule, Pt( x, z0) -> P1(z0, x)^P2(z1, y), used as an illustration for computing quality measures such as IOPSC and IOPHC over a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-4",
          "local_name": "the example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-the_example-Mention-1"
        }
      ],
      "relevance": 0.56201171875
    },
    "Entity-iopsc__r__": {
      "node_id": "iopsc__r__",
      "disambiguation_index": 0,
      "label": "IOPSC(r')",
      "aliases": [
        "IOPSC(r')"
      ],
      "types": [
        "equation",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The inverse open path support (IOPSC) of an IOP rule, which measures the proportion of entities that can instantiate the head predicate given a body instantiation.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-3",
          "local_name": "IOPSC(r')",
          "local_types": [
            "equation",
            "mathematical concept"
          ],
          "iri": "Entity-iopsc__r__-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-p1__z0__z1_": {
      "node_id": "p1__z0__z1_",
      "disambiguation_index": 0,
      "label": "P1(z0, z1)",
      "aliases": [
        "P1(z0, z1)",
        "P1( y, z ) . P2(z, t)",
        "P2(z1, z2)"
      ],
      "types": [
        "expression",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A predicate logic formalism that presents specific shapes in the form of paths over connected entities present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P1(z0, z1)",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-p1__z0__z1_-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P2(z1, z2)",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-p1__z0__z1_-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "P1( y, z ) . P2(z, t)",
          "local_types": [
            "predicate",
            "expression"
          ],
          "iri": "Entity-p1__z0__z1_-Mention-3"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-the_first_rule": {
      "node_id": "the_first_rule",
      "disambiguation_index": 0,
      "label": "the first rule",
      "aliases": [
        "the first rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The first rule of SHACLearner's greedy search algorithm for learning trees from annotated IOP rules.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-3",
          "local_name": "the first rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_first_rule-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-the_performance_of_our_system": {
      "node_id": "the_performance_of_our_system",
      "disambiguation_index": 0,
      "label": "the performance of our system",
      "aliases": [
        "the performance of our system"
      ],
      "types": [
        "performance"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The effectiveness or quality of how well our proposed learning method (SHACLEARNER) performs at capturing shapes with varying confidence, length, and cardinality from various real-world massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-4",
          "local_name": "the performance of our system",
          "local_types": [
            "performance"
          ],
          "iri": "Entity-the_performance_of_our_system-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-the_distribution_(2)": {
      "node_id": "the_distribution_(2)",
      "disambiguation_index": 2,
      "label": "The distribution",
      "aliases": [
        "The distribution"
      ],
      "types": [
        "data",
        "study"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A graphical representation showing the proportion of mined IOP rules with respect to their lengths, demonstrating an expected increase in rule count as length increases.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-7-Sentence-1",
          "local_name": "The distribution",
          "local_types": [
            "data",
            "study"
          ],
          "iri": "Entity-the_distribution_(2)-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-large_data-first_graph_database": {
      "node_id": "large_data-first_graph_database",
      "disambiguation_index": 0,
      "label": "large data-first graph databases",
      "aliases": [
        "large data-first graph databases"
      ],
      "types": [
        "database"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Large-scale graph databases that prioritize storing massive amounts of data first, followed by weak inference rules and loosely constraining data structures.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "large data-first graph databases",
          "local_types": [
            "database"
          ],
          "iri": "Entity-large_data-first_graph_database-Mention-1"
        }
      ],
      "relevance": 0.56103515625
    },
    "Entity-the_established_approach": {
      "node_id": "the_established_approach",
      "disambiguation_index": 0,
      "label": "the established approach",
      "aliases": [
        "the established approach"
      ],
      "types": [
        "approach",
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The evaluation methodology used to assess the performance of knowledge graph rule-learning methods by quantifying and qualifying the number of distinct rules learned.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-1",
          "local_name": "the established approach",
          "local_types": [
            "approach",
            "methodology"
          ],
          "iri": "Entity-the_established_approach-Mention-1"
        }
      ],
      "relevance": 0.56103515625
    },
    "Entity-_e__f___where_e_is_a_set_of_entity_and_f_is_a_set_of_fact": {
      "node_id": "_e__f___where_e_is_a_set_of_entity_and_f_is_a_set_of_fact",
      "disambiguation_index": 0,
      "label": "(E, F), where E is a set of entities and F is a set of facts",
      "aliases": [
        "(E, F), where E is a set of entities and F is a set of facts"
      ],
      "types": [
        "notation",
        "knowledge graph structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A knowledge graph (KG) pair consisting of a set of entities (E) and a set of facts (F), with all entities occurring in F also present in E.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-6",
          "local_name": "(E, F), where E is a set of entities and F is a set of facts",
          "local_types": [
            "notation",
            "knowledge graph structure"
          ],
          "iri": "Entity-_e__f___where_e_is_a_set_of_entity_and_f_is_a_set_of_fact-Mention-1"
        }
      ],
      "relevance": 0.560546875
    },
    "Entity-off-the-shelf_graph_structure_learner": {
      "node_id": "off-the-shelf_graph_structure_learner",
      "disambiguation_index": 0,
      "label": "off-the-shelf graph structure learner",
      "aliases": [
        "off-the-shelf graph structure learner"
      ],
      "types": [
        "tool",
        "software",
        "learner"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pre-trained software tool designed to automatically learn and generate graph structures.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "off-the-shelf graph structure learner",
          "local_types": [
            "tool",
            "software",
            "learner"
          ],
          "iri": "Entity-off-the-shelf_graph_structure_learner-Mention-1"
        }
      ],
      "relevance": 0.560546875
    },
    "Entity-by_comparison_with_an_ideal_learner": {
      "node_id": "by_comparison_with_an_ideal_learner",
      "disambiguation_index": 0,
      "label": "by comparison with an ideal learner",
      "aliases": [
        "by comparison with an ideal learner"
      ],
      "types": [
        "comparison"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An ideal learner that serves as a benchmark for evaluating the performance of SHACLEARNER in discovering high-quality rules from small complete knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-5",
          "local_name": "by comparison with an ideal learner",
          "local_types": [
            "comparison"
          ],
          "iri": "Entity-by_comparison_with_an_ideal_learner-Mention-1"
        }
      ],
      "relevance": 0.560546875
    },
    "Entity-every_path_from_the_target_predicate_terminating_at_a_node_in_the_tree": {
      "node_id": "every_path_from_the_target_predicate_terminating_at_a_node_in_the_tree",
      "disambiguation_index": 0,
      "label": "every path from the target predicate terminating at a node in the tree",
      "aliases": [
        "every path from the target predicate terminating at a node in the tree"
      ],
      "types": [
        "description"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of SHACL shapes derived by reading off every path from the target predicate terminating at each node in a learned tree shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-2",
          "local_name": "every path from the target predicate terminating at a node in the tree",
          "local_types": [
            "description"
          ],
          "iri": "Entity-every_path_from_the_target_predicate_terminating_at_a_node_in_the_tree-Mention-1"
        }
      ],
      "relevance": 0.56005859375
    },
    "Entity-sh_(1)": {
      "node_id": "sh_(1)",
      "disambiguation_index": 1,
      "label": "+S+H",
      "aliases": [
        "+S+H"
      ],
      "types": [
        "organization",
        "configuration",
        "setting"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "SHACLEARNER, a system that uses two tricks to significantly reduce the search space for IOP rules in PathFinding of Algorithm 1 and has full functionality.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-6",
          "local_name": "+S+H",
          "local_types": [
            "organization",
            "configuration",
            "setting"
          ],
          "iri": "Entity-sh_(1)-Mention-1"
        }
      ],
      "relevance": 0.5595703125
    },
    "Entity-such_constraint": {
      "node_id": "such_constraint",
      "disambiguation_index": 0,
      "label": "such constraints",
      "aliases": [
        "such constraints"
      ],
      "types": [
        "constraint"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Constraints that are typically incomplete, uncertain, or frequently violated in knowledge graphs due to their data-first approach and evolving nature of human knowledge.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-5",
          "local_name": "such constraints",
          "local_types": [
            "constraint"
          ],
          "iri": "Entity-such_constraint-Mention-1"
        }
      ],
      "relevance": 0.5595703125
    },
    "Entity-rule_learning_in_inductive_logic_programming": {
      "node_id": "rule_learning_in_inductive_logic_programming",
      "disambiguation_index": 0,
      "label": "rule learning in inductive logic programming",
      "aliases": [
        "rule learning in inductive logic programming"
      ],
      "types": [
        "field",
        "domain"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of acquiring rules through inductive logic programming, specifically referring to the discovery and refinement of patterns or relationships within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-5",
          "local_name": "rule learning in inductive logic programming",
          "local_types": [
            "field",
            "domain"
          ],
          "iri": "Entity-rule_learning_in_inductive_logic_programming-Mention-1"
        }
      ],
      "relevance": 0.5595703125
    },
    "Entity-shaclearner__ev": {
      "node_id": "shaclearner__ev",
      "disambiguation_index": 0,
      "label": "SHACLEARNER, Ev",
      "aliases": [
        "SHACLEARNER, Ev"
      ],
      "types": [
        "algorithm",
        "model"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The evaluation method of SHACLEARNER, responsible for evaluating and filtering potential IOP rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-4",
          "local_name": "SHACLEARNER, Ev",
          "local_types": [
            "algorithm",
            "model"
          ],
          "iri": "Entity-shaclearner__ev-Mention-1"
        }
      ],
      "relevance": 0.5595703125
    },
    "Entity-for_each_predicate_p_k": {
      "node_id": "for_each_predicate_p_k",
      "disambiguation_index": 0,
      "label": "for each predicate P_k",
      "aliases": [
        "for each predicate P_k"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of specific rules or patterns for each predicate P_k in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "for each predicate P_k",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-for_each_predicate_p_k-Mention-1"
        }
      ],
      "relevance": 0.5595703125
    },
    "Entity-this_(1)": {
      "node_id": "this_(1)",
      "disambiguation_index": 1,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The property of SHACLEARNER not missing any high-quality IOP rules, which is a reassuring aspect in improving computational performance without compromising rule quality.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-3",
          "local_name": "This",
          "local_types": [
            "property"
          ],
          "iri": "Entity-this_(1)-Mention-1"
        }
      ],
      "relevance": 0.5595703125
    },
    "Entity-extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata": {
      "node_id": "extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata",
      "disambiguation_index": 0,
      "label": "extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata",
      "aliases": [
        "extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata"
      ],
      "types": [
        "dataset",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The most recent version of Wikidata",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata",
          "local_types": [
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata-Mention-1"
        }
      ],
      "relevance": 0.55908203125
    },
    "Entity-lower_quality_rule": {
      "node_id": "lower_quality_rule",
      "disambiguation_index": 0,
      "label": "lower quality rules",
      "aliases": [
        "lower quality rules"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Lower-quality rules refer to SHACL (Shapes Constraint Language) rules with a confidence score below 0.1 and/or head coverage less than 0.01, which are pruned away by our pruning techniques for scalability.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-6",
          "local_name": "lower quality rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-lower_quality_rule-Mention-1"
        }
      ],
      "relevance": 0.55908203125
    },
    "Entity-the_third_rule": {
      "node_id": "the_third_rule",
      "disambiguation_index": 0,
      "label": "the third rule",
      "aliases": [
        "the third rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The third rule refers to an IOP (Inverse Open Path) rule that requires a song to have at least two producers, as mentioned in the concrete example of SHACL learning from DBpedia.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-4",
          "local_name": "the third rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_third_rule-Mention-1"
        }
      ],
      "relevance": 0.55908203125
    },
    "Entity-the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner": {
      "node_id": "the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner",
      "disambiguation_index": 0,
      "label": "the quality of the learnt embeddings used in the scoring function of SHACLEARNER",
      "aliases": [
        "the quality of the learnt embeddings used in the scoring function of SHACLEARNER"
      ],
      "types": [
        "quality",
        "SHACLEARNER"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality metric that assesses the effectiveness of the learned embeddings used to score IOP rules in the SHACLEARNER algorithm.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-2",
          "local_name": "the quality of the learnt embeddings used in the scoring function of SHACLEARNER",
          "local_types": [
            "quality",
            "SHACLEARNER"
          ],
          "iri": "Entity-the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner-Mention-1"
        }
      ],
      "relevance": 0.55908203125
    },
    "Entity-increasing_iophc": {
      "node_id": "increasing_iophc",
      "disambiguation_index": 0,
      "label": "increasing IOPHC",
      "aliases": [
        "increasing IOPHC"
      ],
      "types": [
        "phenomenon"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The proportion of rule consequent instances justified by target predicate instances in the Knowledge Graph, indicating the relevance of rules with increasing confidence.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-3",
          "local_name": "increasing IOPHC",
          "local_types": [
            "phenomenon"
          ],
          "iri": "Entity-increasing_iophc-Mention-1"
        }
      ],
      "relevance": 0.55859375
    },
    "Entity-result_of_an_experimental_evaluation": {
      "node_id": "result_of_an_experimental_evaluation",
      "disambiguation_index": 0,
      "label": "results of an experimental evaluation",
      "aliases": [
        "results of an experimental evaluation"
      ],
      "types": [
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The outcomes from testing and evaluating the SHACLEARNER system, which learns shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "results of an experimental evaluation",
          "local_types": [
            "evaluation"
          ],
          "iri": "Entity-result_of_an_experimental_evaluation-Mention-1"
        }
      ],
      "relevance": 0.55810546875
    },
    "Entity-their_syntax": {
      "node_id": "their_syntax",
      "disambiguation_index": 0,
      "label": "their syntax",
      "aliases": [
        "their syntax"
      ],
      "types": [
        "syntax"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The shared characteristic or pattern among various shape constraint languages and formalisms that define constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "their syntax",
          "local_types": [
            "syntax"
          ],
          "iri": "Entity-their_syntax-Mention-1"
        }
      ],
      "relevance": 0.55810546875
    },
    "Entity-the_goal_of_pruning_is_to_improve_the_computational_performance_without_missing_high-quality_rule": {
      "node_id": "the_goal_of_pruning_is_to_improve_the_computational_performance_without_missing_high-quality_rule",
      "disambiguation_index": 0,
      "label": "the goal of pruning is to improve the computational performance without missing high-quality rules",
      "aliases": [
        "the goal of pruning is to improve the computational performance without missing high-quality rules"
      ],
      "types": [
        "goal",
        "pruning",
        "performance",
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of reducing the number of IOP rules generated during SHACLEARNER's learning phase, aiming to improve computational efficiency without sacrificing high-quality rule discovery.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-3",
          "local_name": "the goal of pruning is to improve the computational performance without missing high-quality rules",
          "local_types": [
            "goal",
            "pruning",
            "performance",
            "rules"
          ],
          "iri": "Entity-the_goal_of_pruning_is_to_improve_the_computational_performance_without_missing_high-quality_rule-Mention-1"
        }
      ],
      "relevance": 0.5576171875
    },
    "Entity-the_plausibility": {
      "node_id": "the_plausibility",
      "disambiguation_index": 0,
      "label": "the plausibility",
      "aliases": [
        "the plausibility"
      ],
      "types": [
        "plausibility"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The likelihood or probability that a given IOP rule accurately represents a path between two entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-3",
          "local_name": "the plausibility",
          "local_types": [
            "plausibility"
          ],
          "iri": "Entity-the_plausibility-Mention-1"
        }
      ],
      "relevance": 0.55712890625
    },
    "Entity-unary_predicate_a_target": {
      "node_id": "unary_predicate_a_target",
      "disambiguation_index": 0,
      "label": "unary predicates as targets",
      "aliases": [
        "unary predicates as targets"
      ],
      "types": [
        "predicate",
        "target"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Unary predicates, such as 'singer' or 'entrepreneur', used as target predicates for learning SHACL shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-6",
          "local_name": "unary predicates as targets",
          "local_types": [
            "predicate",
            "target"
          ],
          "iri": "Entity-unary_predicate_a_target-Mention-1"
        }
      ],
      "relevance": 0.55712890625
    },
    "Entity-with_iopsc_greater_than_or_equal_to_0.1_and_iophc_greater_than_or_equal_to_0.01": {
      "node_id": "with_iopsc_greater_than_or_equal_to_0.1_and_iophc_greater_than_or_equal_to_0.01",
      "disambiguation_index": 0,
      "label": "with IOPSC greater than or equal to 0.1 and IOPHC greater than or equal to 0.01",
      "aliases": [
        "with IOPSC greater than or equal to 0.1 and IOPHC greater than or equal to 0.01"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "High-quality rules learned by SHACLEARNER that meet minimum quality thresholds",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "with IOPSC greater than or equal to 0.1 and IOPHC greater than or equal to 0.01",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-with_iopsc_greater_than_or_equal_to_0.1_and_iophc_greater_than_or_equal_to_0.01-Mention-1"
        }
      ],
      "relevance": 0.55712890625
    },
    "Entity-atomic_body": {
      "node_id": "atomic_body",
      "disambiguation_index": 0,
      "label": "atomic body",
      "aliases": [
        "atomic body"
      ],
      "types": [
        "concept",
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept or idea referred to by 'atomic body' represents a single entity that satisfies the conditions specified by an Inverse Open Path (IOP) rule, which corresponds to a SHACL shape.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-5",
          "local_name": "atomic body",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-atomic_body-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-5",
          "local_name": "atomic body",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-atomic_body-Mention-2"
        }
      ],
      "relevance": 0.556640625
    },
    "Entity-recursive_shacl_shape": {
      "node_id": "recursive_shacl_shape",
      "disambiguation_index": 0,
      "label": "recursive SHACL shapes",
      "aliases": [
        "recursive SHACL shapes"
      ],
      "types": [
        "conceptual framework",
        "computational model",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of conceptual framework or computational model that uses recursion in its shape definition.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-1",
          "local_name": "recursive SHACL shapes",
          "local_types": [
            "conceptual framework",
            "computational model",
            "mathematical concept"
          ],
          "iri": "Entity-recursive_shacl_shape-Mention-1"
        }
      ],
      "relevance": 0.556640625
    },
    "Entity-the_occupation_all_have_very_similar_iop_rule_about_each_of_them_with_high_iopsc_and_low_iophc": {
      "node_id": "the_occupation_all_have_very_similar_iop_rule_about_each_of_them_with_high_iopsc_and_low_iophc",
      "disambiguation_index": 0,
      "label": "the occupations all have very similar IOP rules about each of them with high IOPSC and low IOPHC",
      "aliases": [
        "the occupations all have very similar IOP rules about each of them with high IOPSC and low IOPHC"
      ],
      "types": [
        "pattern",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Occupations (e.g., singer or entrepreneur) in Wikidata+UP, characterized by similar Inverse Open Path rules with high confidence scores and low head coverage.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-4",
          "local_name": "the occupations all have very similar IOP rules about each of them with high IOPSC and low IOPHC",
          "local_types": [
            "pattern",
            "rule"
          ],
          "iri": "Entity-the_occupation_all_have_very_similar_iop_rule_about_each_of_them_with_high_iopsc_and_low_iophc-Mention-1"
        }
      ],
      "relevance": 0.556640625
    },
    "Entity-163_rule_learnt_by_ideal_rule_learner__shaclearner__-s-h__": {
      "node_id": "163_rule_learnt_by_ideal_rule_learner__shaclearner__-s-h__",
      "disambiguation_index": 0,
      "label": "163 rules learnt by ideal rule learner (SHACLEARNER (-S-H))",
      "aliases": [
        "163 rules learnt by ideal rule learner (SHACLEARNER (-S-H))"
      ],
      "types": [
        "rule",
        "learner"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The number of IOP rules learned by an ideal, complete SHACLEARNER without pruning or sampling.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-2",
          "local_name": "163 rules learnt by ideal rule learner (SHACLEARNER (-S-H))",
          "local_types": [
            "rule",
            "learner"
          ],
          "iri": "Entity-163_rule_learnt_by_ideal_rule_learner__shaclearner__-s-h__-Mention-1"
        }
      ],
      "relevance": 0.556640625
    },
    "Entity-the_following_three_iop_rule_mined_from_dbpedia_in_the_experiment": {
      "node_id": "the_following_three_iop_rule_mined_from_dbpedia_in_the_experiment",
      "disambiguation_index": 0,
      "label": "the following three IOP rules mined from DBpedia in the experiments",
      "aliases": [
        "the following three IOP rules mined from DBpedia in the experiments"
      ],
      "types": [
        "rules",
        "experiments"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The three Inverse Open Path (IOP) rules learned through experimentation on DBpedia data.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-1",
          "local_name": "the following three IOP rules mined from DBpedia in the experiments",
          "local_types": [
            "rules",
            "experiments"
          ],
          "iri": "Entity-the_following_three_iop_rule_mined_from_dbpedia_in_the_experiment-Mention-1"
        }
      ],
      "relevance": 0.556640625
    },
    "Entity-rule_pt__x__y__-__p1__y__z___p2__z__t_": {
      "node_id": "rule_pt__x__y__-__p1__y__z___p2__z__t_",
      "disambiguation_index": 0,
      "label": "rule Pt(x, y) -> P1(y, z) ^ P2(z, t)",
      "aliases": [
        "rule Pt(x, y) -> P1(y, z) ^ P2(z, t)"
      ],
      "types": [
        "logical statement",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A logical statement representing an Inverse Open Path (IOP) rule connecting entities satisfying the subject argument to those forming the object argument along a path of predicate-satisfying entities.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "rule Pt(x, y) -> P1(y, z) ^ P2(z, t)",
          "local_types": [
            "logical statement",
            "mathematical concept"
          ],
          "iri": "Entity-rule_pt__x__y__-__p1__y__z___p2__z__t_-Mention-1"
        }
      ],
      "relevance": 0.55615234375
    },
    "Entity-iopsc__r__(1)": {
      "node_id": "iopsc__r__(1)",
      "disambiguation_index": 1,
      "label": "IOPSC(r)",
      "aliases": [
        "IOPSC(r)"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Inverse Open Path Standard Confidence, a quality measure for IOP rules that calculates the ratio of instances satisfying the head to those satisfying the body.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-7",
          "local_name": "IOPSC(r)",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-iopsc__r__(1)-Mention-1"
        }
      ],
      "relevance": 0.55615234375
    },
    "Entity-a_high-scoring_candidate_op_rule": {
      "node_id": "a_high-scoring_candidate_op_rule",
      "disambiguation_index": 0,
      "label": "a high-scoring candidate OP rule",
      "aliases": [
        "a high-scoring candidate OP rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A high-scoring candidate Open Path (OP) rule that has been identified as potentially being a good OP rule and also suggests the existence of an informative Inverse Open Path (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "a high-scoring candidate OP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-a_high-scoring_candidate_op_rule-Mention-1"
        }
      ],
      "relevance": 0.55615234375
    },
    "Entity-the_kg_itself": {
      "node_id": "the_kg_itself",
      "disambiguation_index": 0,
      "label": "the KG itself",
      "aliases": [
        "the KG itself"
      ],
      "types": [
        "knowledge graph",
        "KG"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The knowledge graph (KG) being referred to in this context.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-3",
          "local_name": "the KG itself",
          "local_types": [
            "knowledge graph",
            "KG"
          ],
          "iri": "Entity-the_kg_itself-Mention-1"
        }
      ],
      "relevance": 0.55615234375
    },
    "Entity-it_binary_predicate_a_target": {
      "node_id": "it_binary_predicate_a_target",
      "disambiguation_index": 0,
      "label": "its binary predicates as targets",
      "aliases": [
        "its binary predicates as targets"
      ],
      "types": [
        "predicate",
        "target"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of SHACL shapes learned by SHACLEARNER from YAGO2s, using its binary predicates as target predicates.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-6",
          "local_name": "its binary predicates as targets",
          "local_types": [
            "predicate",
            "target"
          ],
          "iri": "Entity-it_binary_predicate_a_target-Mention-1"
        }
      ],
      "relevance": 0.5556640625
    },
    "Entity-they_can_also_be_used_more_traditionally_to_complete_missing_fact_for_a_target_predicate__a_well_a_other_predicate_related_to_the_target": {
      "node_id": "they_can_also_be_used_more_traditionally_to_complete_missing_fact_for_a_target_predicate__a_well_a_other_predicate_related_to_the_target",
      "disambiguation_index": 0,
      "label": "they can also be used more traditionally to complete missing facts for a target predicate, as well as other predicates related to the target",
      "aliases": [
        "they can also be used more traditionally to complete missing facts for a target predicate, as well as other predicates related to the target"
      ],
      "types": [
        "method",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Inverse Open Path rules used more traditionally to complete missing facts for a target predicate and related predicates, enabling acquisition of new information about entities with incomplete or absent data.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-1",
          "local_name": "they can also be used more traditionally to complete missing facts for a target predicate, as well as other predicates related to the target",
          "local_types": [
            "method",
            "predicate"
          ],
          "iri": "Entity-they_can_also_be_used_more_traditionally_to_complete_missing_fact_for_a_target_predicate__a_well_a_other_predicate_related_to_the_target-Mention-1"
        }
      ],
      "relevance": 0.5556640625
    },
    "Entity-closed_path_rule": {
      "node_id": "closed_path_rule",
      "disambiguation_index": 0,
      "label": "closed path rules",
      "aliases": [
        "closed path rules"
      ],
      "types": [
        "concept",
        "path rule",
        "algorithmic rule",
        "rule language",
        "knowledge representation",
        "rule",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of rule that governs the formation or traversal of paths, typically used to represent constraints or relationships between entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "closed path rules",
          "local_types": [
            "concept",
            "path rule",
            "algorithmic rule",
            "rule language",
            "knowledge representation",
            "rule",
            "rule set"
          ],
          "iri": "Entity-closed_path_rule-Mention-1"
        }
      ],
      "relevance": 0.55517578125
    },
    "Entity-for_these_unary_occupation_predicate_there_are_also_some_iop_rule_with_high_iophc_that_apply_only_to_one_specific_unary_predicate": {
      "node_id": "for_these_unary_occupation_predicate_there_are_also_some_iop_rule_with_high_iophc_that_apply_only_to_one_specific_unary_predicate",
      "disambiguation_index": 0,
      "label": "for these unary occupation predicates there are also some IOP rules with high IOPHC that apply only to one specific unary predicate",
      "aliases": [
        "for these unary occupation predicates there are also some IOP rules with high IOPHC that apply only to one specific unary predicate"
      ],
      "types": [
        "exception",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "IOP rules with high Inverse Open Path Head Coverage (IOPHC) that specifically apply to individual unary occupation predicates, such as 'singer' or 'entrepreneur', in the Wikidata+UP knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-5",
          "local_name": "for these unary occupation predicates there are also some IOP rules with high IOPHC that apply only to one specific unary predicate",
          "local_types": [
            "exception",
            "rule"
          ],
          "iri": "Entity-for_these_unary_occupation_predicate_there_are_also_some_iop_rule_with_high_iophc_that_apply_only_to_one_specific_unary_predicate-Mention-1"
        }
      ],
      "relevance": 0.55517578125
    },
    "Entity-treescorig": {
      "node_id": "treescorig",
      "disambiguation_index": 0,
      "label": "TreeSCorig",
      "aliases": [
        "TreeSCorig"
      ],
      "types": [
        "confidence measure",
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The confidence measure of a tree shape in a knowledge graph, indicating its quality and generality.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "TreeSCorig",
          "local_types": [
            "confidence measure",
            "variable"
          ],
          "iri": "Entity-treescorig-Mention-1"
        }
      ],
      "relevance": 0.55517578125
    },
    "Entity-graph_structure_learner": {
      "node_id": "graph_structure_learner",
      "disambiguation_index": 0,
      "label": "graph structure learner",
      "aliases": [
        "graph structure learner"
      ],
      "types": [
        "algorithm",
        "machine learning model",
        "tool"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A machine learning model or algorithm designed to learn and generate graph structures.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "graph structure learner",
          "local_types": [
            "algorithm",
            "machine learning model",
            "tool"
          ],
          "iri": "Entity-graph_structure_learner-Mention-1"
        }
      ],
      "relevance": 0.5546875
    },
    "Entity-those_vector": {
      "node_id": "those_vector",
      "disambiguation_index": 0,
      "label": "those vectors",
      "aliases": [
        "those vectors"
      ],
      "types": [
        "vectors"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Those vectors refer to adjacency matrices representing predicates and facts in a knowledge graph, used for computing quality measures such as IOPSC and IOPHC.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "those vectors",
          "local_types": [
            "vectors"
          ],
          "iri": "Entity-those_vector-Mention-1"
        }
      ],
      "relevance": 0.5546875
    },
    "Entity-latter": {
      "node_id": "latter",
      "disambiguation_index": 0,
      "label": "latter",
      "aliases": [
        "latter"
      ],
      "types": [
        "phrase",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "percentage differences in the number of IOP rules found by SHACLEARNER variants",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-4",
          "local_name": "latter",
          "local_types": [
            "phrase",
            "expression"
          ],
          "iri": "Entity-latter-Mention-1"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-all_entity_in_the_sampled_kg_are_either_directly_related_to_the_target_predicate_or_close_neighbour_of_directly_related_entity_.": {
      "node_id": "all_entity_in_the_sampled_kg_are_either_directly_related_to_the_target_predicate_or_close_neighbour_of_directly_related_entity_.",
      "disambiguation_index": 0,
      "label": "All entities in the sampled KG are either directly related to the target predicate or close neighbours of directly related entities.",
      "aliases": [
        "All entities in the sampled KG are either directly related to the target predicate or close neighbours of directly related entities."
      ],
      "types": [
        "description",
        "property"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of all entities present in a knowledge graph sample, which is customized for a specific target predicate and includes only those entities that are closely connected to it.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-4",
          "local_name": "All entities in the sampled KG are either directly related to the target predicate or close neighbours of directly related entities.",
          "local_types": [
            "description",
            "property"
          ],
          "iri": "Entity-all_entity_in_the_sampled_kg_are_either_directly_related_to_the_target_predicate_or_close_neighbour_of_directly_related_entity_.-Mention-1"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-kg_pattern": {
      "node_id": "kg_pattern",
      "disambiguation_index": 0,
      "label": "KG patterns",
      "aliases": [
        "KG patterns"
      ],
      "types": [
        "machine learning concept",
        "pattern recognition",
        "pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of rules or guidelines used for pattern recognition or machine learning purposes",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "KG patterns",
          "local_types": [
            "machine learning concept",
            "pattern recognition",
            "pattern"
          ],
          "iri": "Entity-kg_pattern-Mention-1"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-quality_measure_that_indicate_confidence_and_generality": {
      "node_id": "quality_measure_that_indicate_confidence_and_generality",
      "disambiguation_index": 0,
      "label": "quality measures that indicate confidence and generality",
      "aliases": [
        "quality measures that indicate confidence and generality"
      ],
      "types": [
        "measures"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Formal metrics used to evaluate the quality of learned SHACL shapes based on their confidence and generalizability.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-3",
          "local_name": "quality measures that indicate confidence and generality",
          "local_types": [
            "measures"
          ],
          "iri": "Entity-quality_measure_that_indicate_confidence_and_generality-Mention-1"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-for_example_(1)": {
      "node_id": "for_example_(1)",
      "disambiguation_index": 1,
      "label": "For example",
      "aliases": [
        "For example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific example of a closed-path rule used to infer a new fact from a knowledge graph",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "For example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_example_(1)-Mention-1"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-iop_standard_confidence": {
      "node_id": "iop_standard_confidence",
      "disambiguation_index": 0,
      "label": "IOP Standard Confidence",
      "aliases": [
        "IOP Standard Confidence"
      ],
      "types": [
        "measure",
        "confidence measure",
        "standard",
        "rule quality measure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A measure of confidence for Inverse Open Path (IOP) rules",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-4",
          "local_name": "IOP Standard Confidence",
          "local_types": [
            "measure",
            "confidence measure",
            "standard",
            "rule quality measure"
          ],
          "iri": "Entity-iop_standard_confidence-Mention-1"
        }
      ],
      "relevance": 0.5537109375
    },
    "Entity-iopsc_is_non-increasing_with_length": {
      "node_id": "iopsc_is_non-increasing_with_length",
      "disambiguation_index": 0,
      "label": "IOPSC is non-increasing with length",
      "aliases": [
        "IOPSC is non-increasing with length"
      ],
      "types": [
        "property",
        "theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The inverse open path standard confidence (IOPSC) of an IOP rule, which measures its quality.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "IOPSC is non-increasing with length",
          "local_types": [
            "property",
            "theory"
          ],
          "iri": "Entity-iopsc_is_non-increasing_with_length-Mention-1"
        }
      ],
      "relevance": 0.5537109375
    },
    "Entity-in_the_worst_case__the_sampled_kg_is_the_same_a_the_original_kg__but_real-world_kg_are_sparse_with_only_a_very_small_proportion_of_entity_associated_with_any_predicate_within_distance_l_.": {
      "node_id": "in_the_worst_case__the_sampled_kg_is_the_same_a_the_original_kg__but_real-world_kg_are_sparse_with_only_a_very_small_proportion_of_entity_associated_with_any_predicate_within_distance_l_.",
      "disambiguation_index": 0,
      "label": "In the worst case, the sampled KG is the same as the original KG, but real-World KGs are sparse with only a very small proportion of entities associated with any predicate within distance l.",
      "aliases": [
        "In the worst case, the sampled KG is the same as the original KG, but real-World KGs are sparse with only a very small proportion of entities associated with any predicate within distance l."
      ],
      "types": [
        "description",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept that in extreme cases, the subgraph obtained through sampling may be identical to the entire knowledge graph, while most real-world knowledge graphs have a sparsity pattern where few entities are connected by predicates at a given distance.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-4",
          "local_name": "In the worst case, the sampled KG is the same as the original KG, but real-World KGs are sparse with only a very small proportion of entities associated with any predicate within distance l.",
          "local_types": [
            "description",
            "notation"
          ],
          "iri": "Entity-in_the_worst_case__the_sampled_kg_is_the_same_a_the_original_kg__but_real-world_kg_are_sparse_with_only_a_very_small_proportion_of_entity_associated_with_any_predicate_within_distance_l_.-Mention-1"
        }
      ],
      "relevance": 0.5537109375
    },
    "Entity-reverse_form": {
      "node_id": "reverse_form",
      "disambiguation_index": 0,
      "label": "reverse form",
      "aliases": [
        "reverse form"
      ],
      "types": [
        "formalism",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A notation or formalism for expressing constraints on graph data as shapes, where the subject argument serves to connect and is used instead of the object argument in the straight form.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-5",
          "local_name": "reverse form",
          "local_types": [
            "formalism",
            "notation"
          ],
          "iri": "Entity-reverse_form-Mention-1"
        }
      ],
      "relevance": 0.55322265625
    },
    "Entity-in_embeddings": {
      "node_id": "in_embeddings",
      "disambiguation_index": 0,
      "label": "In Embeddings",
      "aliases": [
        "In Embeddings"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method for computing predicate, subject, and object argument embeddings from knowledge graphs using the RESCAL algorithm.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "In Embeddings",
          "local_types": [
            "method"
          ],
          "iri": "Entity-in_embeddings-Mention-1"
        }
      ],
      "relevance": 0.55322265625
    },
    "Entity-p1__p2__...__pn": {
      "node_id": "p1__p2__...__pn",
      "disambiguation_index": 0,
      "label": "P1 ^ P2 ^ ... ^ Pn",
      "aliases": [
        "P1 ^ P2 ^ ... ^ Pn"
      ],
      "types": [
        "sequence of predicates",
        "predicate logic expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sequence of predicates representing an inverse open path rule in a knowledge graph, where each predicate is either a fact in the graph or its reverse with subject and object bindings swapped.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "P1 ^ P2 ^ ... ^ Pn",
          "local_types": [
            "sequence of predicates",
            "predicate logic expression"
          ],
          "iri": "Entity-p1__p2__...__pn-Mention-1"
        }
      ],
      "relevance": 0.552734375
    },
    "Entity-corresponding_opsc": {
      "node_id": "corresponding_opsc",
      "disambiguation_index": 0,
      "label": "corresponding OPSC",
      "aliases": [
        "corresponding OPSC"
      ],
      "types": [
        "OPSC",
        "correspondence"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The inverse open path support, which measures the number of pairs of entities satisfying both the head and body predicates in an IOP rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "corresponding OPSC",
          "local_types": [
            "OPSC",
            "correspondence"
          ],
          "iri": "Entity-corresponding_opsc-Mention-1"
        }
      ],
      "relevance": 0.552734375
    },
    "Entity-the_number_of_distinct_instantiation_of_head_r__e__e___is_at_least_car__r_": {
      "node_id": "the_number_of_distinct_instantiation_of_head_r__e__e___is_at_least_car__r_",
      "disambiguation_index": 0,
      "label": "the number of distinct instantiations of head_r(e, e') is at least Car(r)",
      "aliases": [
        "the number of distinct instantiations of head_r(e, e') is at least Car(r)"
      ],
      "types": [
        "inequality",
        "constraint",
        "bound",
        "mathematical statement"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum required number of different chains or paths in a knowledge graph that satisfy a given inverse open path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-3",
          "local_name": "the number of distinct instantiations of head_r(e, e') is at least Car(r)",
          "local_types": [
            "inequality",
            "constraint",
            "bound",
            "mathematical statement"
          ],
          "iri": "Entity-the_number_of_distinct_instantiation_of_head_r__e__e___is_at_least_car__r_-Mention-1"
        }
      ],
      "relevance": 0.552734375
    },
    "Entity-the_system_without_sampling__but_with_the_heuristic_rule_learning_module": {
      "node_id": "the_system_without_sampling__but_with_the_heuristic_rule_learning_module",
      "disambiguation_index": 0,
      "label": "the system without sampling, but with the heuristic rule learning module",
      "aliases": [
        "the system without sampling, but with the heuristic rule learning module"
      ],
      "types": [
        "system",
        "module"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A system that learns IOP rules from a knowledge graph without using sampling, but with the heuristic rule learning module.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-3",
          "local_name": "the system without sampling, but with the heuristic rule learning module",
          "local_types": [
            "system",
            "module"
          ],
          "iri": "Entity-the_system_without_sampling__but_with_the_heuristic_rule_learning_module-Mention-1"
        }
      ],
      "relevance": 0.552734375
    },
    "Entity-the_shape_express_that_each_entity_x_which_satisfies_human__x__should_satisfy_the_following_path_": {
      "node_id": "the_shape_express_that_each_entity_x_which_satisfies_human__x__should_satisfy_the_following_path_",
      "disambiguation_index": 0,
      "label": "the shape expresses that each entity x which satisfies human(x) should satisfy the following paths:",
      "aliases": [
        "the shape expresses that each entity x which satisfies human(x) should satisfy the following paths:"
      ],
      "types": [
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A SHACL shape that constrains entities satisfying human(x) to satisfy specific paths of predicates and variables.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "the shape expresses that each entity x which satisfies human(x) should satisfy the following paths:",
          "local_types": [
            "expression"
          ],
          "iri": "Entity-the_shape_express_that_each_entity_x_which_satisfies_human__x__should_satisfy_the_following_path_-Mention-1"
        }
      ],
      "relevance": 0.55224609375
    },
    "Entity-the_number_(1)": {
      "node_id": "the_number_(1)",
      "disambiguation_index": 1,
      "label": "The number",
      "aliases": [
        "The number"
      ],
      "types": [
        "quantity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "the quantity or magnitude that represents the count of IOP rules discovered from a knowledge graph",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-3",
          "local_name": "The number",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-the_number_(1)-Mention-1"
        }
      ],
      "relevance": 0.55224609375
    },
    "Entity-pt__e__e__": {
      "node_id": "pt__e__e__",
      "disambiguation_index": 0,
      "label": "Pt(e, e')",
      "aliases": [
        "Pt( e , e' )",
        "Pt(e, e')"
      ],
      "types": [
        "fact",
        "statement",
        "predicate logic",
        "function",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic formalism expressing specific shapes as paths over connected entities in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-4",
          "local_name": "Pt(e, e')",
          "local_types": [
            "fact",
            "statement",
            "predicate logic",
            "function",
            "predicate"
          ],
          "iri": "Entity-pt__e__e__-Mention-1"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-for_a_kg_k_with_entity_e_and_fact_f": {
      "node_id": "for_a_kg_k_with_entity_e_and_fact_f",
      "disambiguation_index": 0,
      "label": "For a KG K with entities E and facts F",
      "aliases": [
        "For a KG K with entities E and facts F"
      ],
      "types": [
        "notation",
        "definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge graph definition",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "For a KG K with entities E and facts F",
          "local_types": [
            "notation",
            "definition"
          ],
          "iri": "Entity-for_a_kg_k_with_entity_e_and_fact_f-Mention-1"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-it_advanced_feature": {
      "node_id": "it_advanced_feature",
      "disambiguation_index": 0,
      "label": "its advanced features",
      "aliases": [
        "its advanced features"
      ],
      "types": [
        "feature",
        "advanced feature"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "SHACL's advanced features for modeling diverse shapes, including rules and constraints",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "its advanced features",
          "local_types": [
            "feature",
            "advanced feature"
          ],
          "iri": "Entity-it_advanced_feature-Mention-1"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-the_space_of_possible_shape": {
      "node_id": "the_space_of_possible_shape",
      "disambiguation_index": 0,
      "label": "the space of possible shapes",
      "aliases": [
        "the space of possible shapes"
      ],
      "types": [
        "space",
        "shapes"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of all possible shape patterns that can be learned from knowledge graphs, considering varying confidence, length, and cardinality.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-2",
          "local_name": "the space of possible shapes",
          "local_types": [
            "space",
            "shapes"
          ],
          "iri": "Entity-the_space_of_possible_shape-Mention-1"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-ev_to_produce_annotated_iop_rule": {
      "node_id": "ev_to_produce_annotated_iop_rule",
      "disambiguation_index": 0,
      "label": "Ev to produce annotated IOP rules",
      "aliases": [
        "Ev to produce annotated IOP rules"
      ],
      "types": [
        "methodology",
        "technique",
        "rule evaluation module",
        "evaluation method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The evaluation method that produces annotated Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-6",
          "local_name": "Ev to produce annotated IOP rules",
          "local_types": [
            "methodology",
            "technique",
            "rule evaluation module",
            "evaluation method"
          ],
          "iri": "Entity-ev_to_produce_annotated_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.55126953125
    },
    "Entity-e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1__": {
      "node_id": "e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1__",
      "disambiguation_index": 0,
      "label": "e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)'",
      "aliases": [
        "e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)'"
      ],
      "types": [
        "sequences",
        "mathematical notation",
        "entities",
        "sequences of entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sequence of entities in a knowledge graph that satisfies a tree shape constraint",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)'",
          "local_types": [
            "sequences",
            "mathematical notation",
            "entities",
            "sequences of entities"
          ],
          "iri": "Entity-e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1__-Mention-1"
        }
      ],
      "relevance": 0.55126953125
    },
    "Entity-shacl_core": {
      "node_id": "shacl_core",
      "disambiguation_index": 0,
      "label": "SHACL Core",
      "aliases": [
        "SHACL Core"
      ],
      "types": [
        "standard",
        "ontology",
        "specification"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard specification for defining the structure of RDF data using node and property shapes.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-1",
          "local_name": "SHACL Core",
          "local_types": [
            "standard",
            "ontology",
            "specification"
          ],
          "iri": "Entity-shacl_core-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-6-Sentence-2",
          "local_name": "SHACL Core",
          "local_types": [
            "standard",
            "ontology"
          ],
          "iri": "Entity-shacl_core-Mention-2"
        }
      ],
      "relevance": 0.55126953125
    },
    "Entity-this_close_relationship": {
      "node_id": "this_close_relationship",
      "disambiguation_index": 0,
      "label": "This close relationship",
      "aliases": [
        "This close relationship"
      ],
      "types": [
        "relationship"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The close relationship refers to the similarity or equivalence between Open Path (OP) rules and Inverse Open Path (IOP) rules, which allows for mining both types of rules simultaneously.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "This close relationship",
          "local_types": [
            "relationship"
          ],
          "iri": "Entity-this_close_relationship-Mention-1"
        }
      ],
      "relevance": 0.55126953125
    },
    "Entity-the_open_path_support__open_path_standard_confidence__and_open_path_head_coverage_of_r": {
      "node_id": "the_open_path_support__open_path_standard_confidence__and_open_path_head_coverage_of_r",
      "disambiguation_index": 0,
      "label": "The open path support, open path standard confidence, and open path head coverage of r",
      "aliases": [
        "The open path support, open path standard confidence, and open path head coverage of r",
        "The inverse open path support, inverse open path standard confidence, and inverse open path head coverage of r are given respectively by"
      ],
      "types": [
        "notation",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Quality measures for an Inverse Open Path (IOP) rule",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "The open path support, open path standard confidence, and open path head coverage of r",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-the_open_path_support__open_path_standard_confidence__and_open_path_head_coverage_of_r-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-5",
          "local_name": "The inverse open path support, inverse open path standard confidence, and inverse open path head coverage of r are given respectively by",
          "local_types": [
            "notation",
            "mathematics"
          ],
          "iri": "Entity-the_open_path_support__open_path_standard_confidence__and_open_path_head_coverage_of_r-Mention-2"
        }
      ],
      "relevance": 0.55078125
    },
    "Entity-a_cp_rule_of_the_form__1_": {
      "node_id": "a_cp_rule_of_the_form__1_",
      "disambiguation_index": 0,
      "label": "a CP rule of the form (1)",
      "aliases": [
        "a CP rule of the form (1)"
      ],
      "types": [
        "rule",
        "mathematical concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A mathematical concept representing a specific type of rule used to express constraints on graph data as shapes, with a general form Pt(x, y) <- P1(x, z1) ^ P2(z1, z2) ^ ... ^ Pn(zn-1, y).",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "a CP rule of the form (1)",
          "local_types": [
            "rule",
            "mathematical concept"
          ],
          "iri": "Entity-a_cp_rule_of_the_form__1_-Mention-1"
        }
      ],
      "relevance": 0.55029296875
    },
    "Entity-iophc__r_": {
      "node_id": "iophc__r_",
      "disambiguation_index": 0,
      "label": "IOPHC(r)",
      "aliases": [
        "IOPHC(r)"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The inverse open path head coverage (IOPHC) of a rule r, which measures the proportion of entities for which there exists at least one instance that satisfies the head of the rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-8",
          "local_name": "IOPHC(r)",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-iophc__r_-Mention-1"
        }
      ],
      "relevance": 0.55029296875
    },
    "Entity-for_iopsc": {
      "node_id": "for_iopsc",
      "disambiguation_index": 0,
      "label": "For IOPSC",
      "aliases": [
        "For IOPSC"
      ],
      "types": [
        "definition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality measure for the support of an Inverse Open Path (IOP) rule, calculated as the number of entities that satisfy the body or head of the rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "For IOPSC",
          "local_types": [
            "definition"
          ],
          "iri": "Entity-for_iopsc-Mention-1"
        }
      ],
      "relevance": 0.55029296875
    },
    "Entity-the_quality_performance_of_rule": {
      "node_id": "the_quality_performance_of_rule",
      "disambiguation_index": 0,
      "label": "the quality performance of rules",
      "aliases": [
        "the quality performance of rules"
      ],
      "types": [
        "performance"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality performance metrics used to evaluate the rules learned by SHACLEARNER from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-3",
          "local_name": "the quality performance of rules",
          "local_types": [
            "performance"
          ],
          "iri": "Entity-the_quality_performance_of_rule-Mention-1"
        }
      ],
      "relevance": 0.55029296875
    },
    "Entity-contributor_to_extend_a_kg_in_a_relatively_arbitrary_manner": {
      "node_id": "contributor_to_extend_a_kg_in_a_relatively_arbitrary_manner",
      "disambiguation_index": 0,
      "label": "contributors to extend a KG in a relatively arbitrary manner",
      "aliases": [
        "contributors to extend a KG in a relatively arbitrary manner"
      ],
      "types": [
        "contributors",
        "actors",
        "methodology",
        "actions"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Individuals or entities that contribute to extending a Knowledge Graph (KG) in an arbitrary and flexible manner.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "contributors to extend a KG in a relatively arbitrary manner",
          "local_types": [
            "contributors",
            "actors",
            "methodology",
            "actions"
          ],
          "iri": "Entity-contributor_to_extend_a_kg_in_a_relatively_arbitrary_manner-Mention-1"
        }
      ],
      "relevance": 0.5498046875
    },
    "Entity-the_tree_suggests_that_if_we_have_an_entity_of_type_song_in_the_kg__then_we_would_expect_to_have_the_associated_fact_too_.": {
      "node_id": "the_tree_suggests_that_if_we_have_an_entity_of_type_song_in_the_kg__then_we_would_expect_to_have_the_associated_fact_too_.",
      "disambiguation_index": 0,
      "label": "the tree suggests that if we have an entity of type song in the KG, then we would expect to have the associated facts too.",
      "aliases": [
        "the tree suggests that if we have an entity of type song in the KG, then we would expect to have the associated facts too."
      ],
      "types": [
        "suggestion",
        "expectation",
        "facts"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept being referred to is a suggestion or expectation about how entities with specific types (e.g., 'song') in a Knowledge Graph should be accompanied by certain associated facts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "the tree suggests that if we have an entity of type song in the KG, then we would expect to have the associated facts too.",
          "local_types": [
            "suggestion",
            "expectation",
            "facts"
          ],
          "iri": "Entity-the_tree_suggests_that_if_we_have_an_entity_of_type_song_in_the_kg__then_we_would_expect_to_have_the_associated_fact_too_.-Mention-1"
        }
      ],
      "relevance": 0.54931640625
    },
    "Entity-such_path_shape": {
      "node_id": "such_path_shape",
      "disambiguation_index": 0,
      "label": "such path shapes",
      "aliases": [
        "shapes in the form of a path",
        "such path shapes",
        "these kinds of shapes"
      ],
      "types": [
        "template",
        "concept",
        "shape",
        "shapes",
        "path"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A sequence of predicates connected by closed intermediate variables but terminating with open variables at both ends, serving as a building block for more complex shapes like closed rules or trees.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-1",
          "local_name": "such path shapes",
          "local_types": [
            "concept",
            "path",
            "shape"
          ],
          "iri": "Entity-such_path_shape-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-3",
          "local_name": "shapes in the form of a path",
          "local_types": [
            "template",
            "concept",
            "shape"
          ],
          "iri": "Entity-such_path_shape-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "these kinds of shapes",
          "local_types": [
            "shapes",
            "concept"
          ],
          "iri": "Entity-such_path_shape-Mention-3"
        }
      ],
      "relevance": 0.54931640625
    },
    "Entity-the_distribution_(1)": {
      "node_id": "the_distribution_(1)",
      "disambiguation_index": 1,
      "label": "The distribution",
      "aliases": [
        "The distribution"
      ],
      "types": [
        "research",
        "study",
        "data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The distribution refers to the graphical representation or plot showing the proportion of mined rules with respect to their cardinalities (i.e., the number of instances required for a rule to hold true in the Knowledge Graph).",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-6-Sentence-1",
          "local_name": "The distribution",
          "local_types": [
            "research",
            "study",
            "data"
          ],
          "iri": "Entity-the_distribution_(1)-Mention-1"
        }
      ],
      "relevance": 0.54931640625
    },
    "Entity-ophc": {
      "node_id": "ophc",
      "disambiguation_index": 0,
      "label": "OPHC",
      "aliases": [
        "OPHC"
      ],
      "types": [
        "metric",
        "concept",
        "evaluation metric",
        "ontology path",
        "statistic",
        "notation",
        "abbreviation",
        "mathematical concept",
        "open path",
        "knowledge graph component",
        "equation",
        "rule",
        "function",
        "pathway",
        "coverage"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A measure of the proportion of entities that satisfy both the body and head of an open path rule, used to evaluate the quality of OP rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "OPHC",
          "local_types": [
            "metric",
            "coverage",
            "evaluation metric"
          ],
          "iri": "Entity-ophc-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-5-Sentence-4",
          "local_name": "OPHC",
          "local_types": [
            "metric",
            "evaluation metric",
            "notation",
            "mathematical concept",
            "equation",
            "function"
          ],
          "iri": "Entity-ophc-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "OPHC",
          "local_types": [
            "metric",
            "concept",
            "evaluation metric",
            "ontology path",
            "abbreviation",
            "open path",
            "knowledge graph component",
            "pathway"
          ],
          "iri": "Entity-ophc-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-5",
          "local_name": "OPHC",
          "local_types": [
            "metric",
            "rule",
            "statistic"
          ],
          "iri": "Entity-ophc-Mention-4"
        }
      ],
      "relevance": 0.548828125
    },
    "Entity-a_more_complex_shape": {
      "node_id": "a_more_complex_shape",
      "disambiguation_index": 0,
      "label": "a more complex shape",
      "aliases": [
        "a more complex shape"
      ],
      "types": [
        "complex shape",
        "shape"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A tree-shaped structure composed of multiple interconnected nodes or entities, representing a higher-level abstraction and organization of knowledge graph data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "a more complex shape",
          "local_types": [
            "complex shape",
            "shape"
          ],
          "iri": "Entity-a_more_complex_shape-Mention-1"
        }
      ],
      "relevance": 0.548828125
    },
    "Entity-the_support_for_an_iop_rule": {
      "node_id": "the_support_for_an_iop_rule",
      "disambiguation_index": 0,
      "label": "the support for an IOP rule",
      "aliases": [
        "the support for an IOP rule"
      ],
      "types": [
        "support",
        "IOP rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The measure of how many pairs of entities satisfy both the head and body predicates in an Inverse Open Path (IOP) rule, indicating its quality.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "the support for an IOP rule",
          "local_types": [
            "support",
            "IOP rule"
          ],
          "iri": "Entity-the_support_for_an_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.54833984375
    },
    "Entity-the_target_predicate": {
      "node_id": "the_target_predicate",
      "disambiguation_index": 0,
      "label": "the target predicate",
      "aliases": [
        "the target predicate"
      ],
      "types": [
        "target",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific shape or constraint expressed as a path over connected entities that are present in a knowledge graph, used to validate or edit the graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-5",
          "local_name": "the target predicate",
          "local_types": [
            "target",
            "predicate"
          ],
          "iri": "Entity-the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.54833984375
    },
    "Entity-this_tree": {
      "node_id": "this_tree",
      "disambiguation_index": 0,
      "label": "This tree",
      "aliases": [
        "This tree"
      ],
      "types": [
        "conceptual representation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A conceptual representation of a tree-shaped constraint learned from IOP rules discovered in DBpedia 3.8, describing relationships between song, album, record label, producers, genre, and artist.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-3",
          "local_name": "This tree",
          "local_types": [
            "conceptual representation"
          ],
          "iri": "Entity-this_tree-Mention-1"
        }
      ],
      "relevance": 0.54833984375
    },
    "Entity-tree_shape": {
      "node_id": "tree_shape",
      "disambiguation_index": 0,
      "label": "Tree shapes",
      "aliases": [
        "Tree shapes",
        "tree shapes"
      ],
      "types": [
        "tree shape",
        "method",
        "concept",
        "computational method",
        "idea",
        "data structure",
        "computer science concept",
        "pattern recognition",
        "visual representation",
        "algorithmic structure",
        "computational structure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A way to categorize or represent trees based on their physical forms or structures.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-1",
          "local_name": "Tree shapes",
          "local_types": [
            "data structure",
            "concept"
          ],
          "iri": "Entity-tree_shape-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-4",
          "local_name": "tree shapes",
          "local_types": [
            "data structure",
            "computer science concept"
          ],
          "iri": "Entity-tree_shape-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-7-Sentence-1",
          "local_name": "Tree shapes",
          "local_types": [
            "tree shape",
            "visual representation",
            "concept",
            "idea"
          ],
          "iri": "Entity-tree_shape-Mention-3"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-2",
          "local_name": "tree shapes",
          "local_types": [
            "algorithmic structure",
            "computational method"
          ],
          "iri": "Entity-tree_shape-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-4",
          "local_name": "tree shapes",
          "local_types": [
            "data structure"
          ],
          "iri": "Entity-tree_shape-Mention-5"
        },
        {
          "reference": "Section-17-Paragraph-5-Sentence-1",
          "local_name": "tree shapes",
          "local_types": [
            "data structure",
            "method",
            "concept"
          ],
          "iri": "Entity-tree_shape-Mention-6"
        },
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "tree shapes",
          "local_types": [
            "computational structure",
            "pattern recognition"
          ],
          "iri": "Entity-tree_shape-Mention-7"
        }
      ],
      "relevance": 0.5478515625
    },
    "Entity-path1__path2__...__pathq": {
      "node_id": "path1__path2__...__pathq",
      "disambiguation_index": 0,
      "label": "Path1 ^ Path2 ^ ... ^ Pathq",
      "aliases": [
        "Path1 ^ Path2 ^ ... ^ Pathq"
      ],
      "types": [
        "notation",
        "symbolic representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sequence of paths or branches in a tree shape, representing a set of SHACL shapes and their quality measures.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "Path1 ^ Path2 ^ ... ^ Pathq",
          "local_types": [
            "notation",
            "symbolic representation"
          ],
          "iri": "Entity-path1__path2__...__pathq-Mention-1"
        }
      ],
      "relevance": 0.5478515625
    },
    "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration": {
      "node_id": "sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "disambiguation_index": 0,
      "label": "sh:nodeShape and the path of head predicates as nested sh:path declarations within a sh:property declaration",
      "aliases": [
        "sh:nodeShape and the path of head predicates as nested sh:path declarations within a sh:property declaration"
      ],
      "types": [
        "SHACL",
        "syntax"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A SHACL shape definition for tree shapes, specifying the node shape and paths of head predicates in a property declaration.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "sh:nodeShape and the path of head predicates as nested sh:path declarations within a sh:property declaration",
          "local_types": [
            "SHACL",
            "syntax"
          ],
          "iri": "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration-Mention-1"
        }
      ],
      "relevance": 0.5478515625
    },
    "Entity-the_rule_(1)": {
      "node_id": "the_rule_(1)",
      "disambiguation_index": 1,
      "label": "the rule",
      "aliases": [
        "the rule"
      ],
      "types": [
        "rule",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A closed-path rule in SHACL, which consists of a head and a body, forming a loop of links between variables.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-5",
          "local_name": "the rule",
          "local_types": [
            "rule",
            "concept"
          ],
          "iri": "Entity-the_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.5478515625
    },
    "Entity-by_defining_the_function_a": {
      "node_id": "by_defining_the_function_a",
      "disambiguation_index": 0,
      "label": "by defining the function A",
      "aliases": [
        "by defining the function A"
      ],
      "types": [
        "methodology",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The definition of the function A, which represents a knowledge graph (KG) as a set of square n x n adjacency matrices.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "by defining the function A",
          "local_types": [
            "methodology",
            "notation"
          ],
          "iri": "Entity-by_defining_the_function_a-Mention-1"
        }
      ],
      "relevance": 0.5478515625
    },
    "Entity-in_comparison_with_the_ideal_rule_learner__shaclearner__-s-h__": {
      "node_id": "in_comparison_with_the_ideal_rule_learner__shaclearner__-s-h__",
      "disambiguation_index": 0,
      "label": "in comparison with the ideal rule learner (SHACLEARNER (-S-H))",
      "aliases": [
        "in comparison with the ideal rule learner (SHACLEARNER (-S-H))"
      ],
      "types": [
        "comparison",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The ideal rule learner (SHACLEARNER (-S-H)) that generates and evaluates all possible rules up to the maximum length parameter without using sampling or heuristic pruning.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-3",
          "local_name": "in comparison with the ideal rule learner (SHACLEARNER (-S-H))",
          "local_types": [
            "comparison",
            "algorithm"
          ],
          "iri": "Entity-in_comparison_with_the_ideal_rule_learner__shaclearner__-s-h__-Mention-1"
        }
      ],
      "relevance": 0.5478515625
    },
    "Entity-universal_variable": {
      "node_id": "universal_variable",
      "disambiguation_index": 0,
      "label": "universal variables",
      "aliases": [
        "universal variables"
      ],
      "types": [
        "variable",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Universal variables refer to a concept that represents specific shapes or patterns in knowledge graphs, which are used to validate data constraints and offer insight into graph structure.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "universal variables",
          "local_types": [
            "variable",
            "mathematical concept"
          ],
          "iri": "Entity-universal_variable-Mention-1"
        }
      ],
      "relevance": 0.54736328125
    },
    "Entity-wikidata_and_dbpedia_unary_predicate": {
      "node_id": "wikidata_and_dbpedia_unary_predicate",
      "disambiguation_index": 0,
      "label": "Wikidata and DBPedia unary predicates",
      "aliases": [
        "Wikidata and DBPedia unary predicates"
      ],
      "types": [
        "dataset",
        "source"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of unary predicate constraints learned from Wikidata and DBpedia knowledge graphs, used to validate or generate shapes for these datasets.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-3",
          "local_name": "Wikidata and DBPedia unary predicates",
          "local_types": [
            "dataset",
            "source"
          ],
          "iri": "Entity-wikidata_and_dbpedia_unary_predicate-Mention-1"
        }
      ],
      "relevance": 0.54736328125
    },
    "Entity-iopsupp__r__(1)": {
      "node_id": "iopsupp__r__(1)",
      "disambiguation_index": 1,
      "label": "IOPsupp(r)",
      "aliases": [
        "IOPsupp(r)"
      ],
      "types": [
        "notation",
        "support",
        "support function",
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The inverse open path support of an IOP rule, which measures the proportion of entities that can instantiate z0 to satisfy both the head and body parts of the rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-7",
          "local_name": "IOPsupp(r)",
          "local_types": [
            "function",
            "support function"
          ],
          "iri": "Entity-iopsupp__r__(1)-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-8",
          "local_name": "IOPsupp(r)",
          "local_types": [
            "notation",
            "support"
          ],
          "iri": "Entity-iopsupp__r__(1)-Mention-2"
        }
      ],
      "relevance": 0.54736328125
    },
    "Entity-100__sc_and_hc_is_redundant_with_respect_to_the_kg__and_every_kg_fact_that_is_an_instance_of_the_rule_head_is_redundant_with_respect_to_the_rule_.": {
      "node_id": "100__sc_and_hc_is_redundant_with_respect_to_the_kg__and_every_kg_fact_that_is_an_instance_of_the_rule_head_is_redundant_with_respect_to_the_rule_.",
      "disambiguation_index": 0,
      "label": "100% SC and HC is redundant with respect to the KG, and every KG fact that is an instance of the rule head is redundant with respect to the rule.",
      "aliases": [
        "100% SC and HC is redundant with respect to the KG, and every KG fact that is an instance of the rule head is redundant with respect to the rule."
      ],
      "types": [
        "statement",
        "redundancy"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A statement about redundancy in knowledge graphs (KGs) where non-recursive rules having 100% standard confidence and head coverage are redundant with respect to the KG, and every fact that is an instance of the rule head is also redundant.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-6",
          "local_name": "100% SC and HC is redundant with respect to the KG, and every KG fact that is an instance of the rule head is redundant with respect to the rule.",
          "local_types": [
            "statement",
            "redundancy"
          ],
          "iri": "Entity-100__sc_and_hc_is_redundant_with_respect_to_the_kg__and_every_kg_fact_that_is_an_instance_of_the_rule_head_is_redundant_with_respect_to_the_rule_.-Mention-1"
        }
      ],
      "relevance": 0.546875
    },
    "Entity-inverse_open_path_head_coverage_of_r": {
      "node_id": "inverse_open_path_head_coverage_of_r",
      "disambiguation_index": 0,
      "label": "inverse open path head coverage of r",
      "aliases": [
        "inverse open path head coverage of r"
      ],
      "types": [
        "notation",
        "metric",
        "concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Inverse Open Path Head Coverage of R: a quality measure that calculates the proportion of entities that satisfy the head part of an IOP rule, denoted as Pt'(x, z0) -> P1'(z0, z1) ^ ... ^ Pn'(z(n-1), y).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-5",
          "local_name": "inverse open path head coverage of r",
          "local_types": [
            "notation",
            "metric",
            "concept"
          ],
          "iri": "Entity-inverse_open_path_head_coverage_of_r-Mention-1"
        }
      ],
      "relevance": 0.54638671875
    },
    "Entity-generates_and_evaluates_all_possible_rule_up_to_the_maximum_length_parameter": {
      "node_id": "generates_and_evaluates_all_possible_rule_up_to_the_maximum_length_parameter",
      "disambiguation_index": 0,
      "label": "generates and evaluates all possible rules up to the maximum length parameter",
      "aliases": [
        "generates and evaluates all possible rules up to the maximum length parameter"
      ],
      "types": [
        "process",
        "evaluation process"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An ideal IOP rule learner that exhaustively generates and assesses every feasible rule, regardless of its complexity or size.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-4",
          "local_name": "generates and evaluates all possible rules up to the maximum length parameter",
          "local_types": [
            "process",
            "evaluation process"
          ],
          "iri": "Entity-generates_and_evaluates_all_possible_rule_up_to_the_maximum_length_parameter-Mention-1"
        }
      ],
      "relevance": 0.54638671875
    },
    "Entity-greedysearch__r__mintreesc_": {
      "node_id": "greedysearch__r__mintreesc_",
      "disambiguation_index": 0,
      "label": "GreedySearch(R, MinTreeSC)",
      "aliases": [
        "GreedySearch(R, MinTreeSC)"
      ],
      "types": [
        "function call",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A function that searches for a tree shape from a set of IOP rules with minimum support and confidence thresholds.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-12",
          "local_name": "GreedySearch(R, MinTreeSC)",
          "local_types": [
            "function call",
            "function"
          ],
          "iri": "Entity-greedysearch__r__mintreesc_-Mention-1"
        }
      ],
      "relevance": 0.5458984375
    },
    "Entity-we_(7)": {
      "node_id": "we_(7)",
      "disambiguation_index": 7,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of the paper, referring to themselves as they are discussing their own method (SHACLEARNER) and its evaluation on massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(7)-Mention-1"
        }
      ],
      "relevance": 0.5458984375
    },
    "Entity-iopsc__r_": {
      "node_id": "iopsc__r_",
      "disambiguation_index": 0,
      "label": "IOPSC(r)",
      "aliases": [
        "IOPSC(r)"
      ],
      "types": [
        "organization",
        "conference",
        "equation",
        "mathematical concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Inverse Open Path Support (IOPSC)",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-3",
          "local_name": "IOPSC(r)",
          "local_types": [
            "organization",
            "conference",
            "equation",
            "mathematical concept"
          ],
          "iri": "Entity-iopsc__r_-Mention-1"
        }
      ],
      "relevance": 0.54541015625
    },
    "Entity-we_define_formal_quality_measure_for_iop_rule": {
      "node_id": "we_define_formal_quality_measure_for_iop_rule",
      "disambiguation_index": 0,
      "label": "We define formal quality measures for IOP rules",
      "aliases": [
        "We define formal quality measures for IOP rules"
      ],
      "types": [
        "definition",
        "quality measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Formal quality measures defined for Inverse Open Path (IOP) rules",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "We define formal quality measures for IOP rules",
          "local_types": [
            "definition",
            "quality measure"
          ],
          "iri": "Entity-we_define_formal_quality_measure_for_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.54541015625
    },
    "Entity-entity_a_shown_in_previous_heuristic_rule_learner": {
      "node_id": "entity_a_shown_in_previous_heuristic_rule_learner",
      "disambiguation_index": 0,
      "label": "entities as shown in previous heuristic rule learners",
      "aliases": [
        "entities as shown in previous heuristic rule learners"
      ],
      "types": [
        "entity",
        "previous work"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Predicates and entities from knowledge graphs, represented through embeddings obtained using RESCAL.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-2",
          "local_name": "entities as shown in previous heuristic rule learners",
          "local_types": [
            "entity",
            "previous work"
          ],
          "iri": "Entity-entity_a_shown_in_previous_heuristic_rule_learner-Mention-1"
        }
      ],
      "relevance": 0.54541015625
    },
    "Entity-rlvlr": {
      "node_id": "rlvlr",
      "disambiguation_index": 0,
      "label": "RLvLR",
      "aliases": [
        "RLvLR"
      ],
      "types": [
        "algorithm",
        "language",
        "notation system",
        "learning system",
        "system",
        "rule language",
        "model"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A rule-based learning system or notation system that uses closed-path (CP) rules.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-3",
          "local_name": "RLvLR",
          "local_types": [
            "algorithm",
            "language",
            "notation system",
            "learning system",
            "system",
            "rule language",
            "model"
          ],
          "iri": "Entity-rlvlr-Mention-1"
        }
      ],
      "relevance": 0.54443359375
    },
    "Entity-knowledge_graph": {
      "node_id": "knowledge_graph",
      "disambiguation_index": 0,
      "label": "Knowledge Graphs",
      "aliases": [
        "knowledge graph",
        "Knowledge Graphs"
      ],
      "types": [
        "information system",
        "concept",
        "database",
        "data structure",
        "technology"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A type of database that represents a set of entities and their relationships, used for storing and querying complex data.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "concept",
            "information system",
            "database",
            "data structure",
            "technology"
          ],
          "iri": "Entity-knowledge_graph-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-6",
          "local_name": "knowledge graph",
          "local_types": [
            "concept",
            "data structure"
          ],
          "iri": "Entity-knowledge_graph-Mention-2"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-shape": {
      "node_id": "shape",
      "disambiguation_index": 0,
      "label": "Shapes",
      "aliases": [
        "Shapes",
        "shapes",
        "shape"
      ],
      "types": [
        "forms",
        "geometric form",
        "schema",
        "conceptual representation",
        "conceptual framework",
        "framework",
        "structure",
        "software",
        "pattern",
        "geometric shapes",
        "mathematical object",
        "visual object",
        "knowledge representation",
        "abstract structure",
        "ontology concept",
        "geometric object",
        "geometric concept",
        "constraint",
        "data model",
        "format",
        "schema definition",
        "visual representation",
        "concept",
        "mathematical concept",
        "geometric shape",
        "data structure",
        "tool",
        "conceptual model"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A conceptual representation or pattern that defines the structure, form, or shape of something",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-1",
          "local_name": "Shapes",
          "local_types": [
            "software",
            "tool",
            "concept",
            "framework"
          ],
          "iri": "Entity-shape-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "shapes",
          "local_types": [
            "constraint",
            "schema"
          ],
          "iri": "Entity-shape-Mention-2"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "shapes",
          "local_types": [
            "conceptual framework",
            "schema definition"
          ],
          "iri": "Entity-shape-Mention-3"
        },
        {
          "reference": "Section-1-Paragraph-3-Sentence-3",
          "local_name": "shapes",
          "local_types": [
            "geometric object"
          ],
          "iri": "Entity-shape-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "shapes",
          "local_types": [
            "data structure",
            "knowledge representation",
            "ontology concept"
          ],
          "iri": "Entity-shape-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "shapes",
          "local_types": [
            "conceptual representation"
          ],
          "iri": "Entity-shape-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "shapes",
          "local_types": [
            "conceptual model",
            "data structure"
          ],
          "iri": "Entity-shape-Mention-7"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-6",
          "local_name": "shapes",
          "local_types": [
            "pattern"
          ],
          "iri": "Entity-shape-Mention-8"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "shapes",
          "local_types": [
            "data structure",
            "knowledge representation"
          ],
          "iri": "Entity-shape-Mention-9"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "shapes",
          "local_types": [
            "geometric shapes",
            "forms"
          ],
          "iri": "Entity-shape-Mention-10"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "shapes",
          "local_types": [
            "data structure",
            "knowledge representation",
            "concept",
            "structure"
          ],
          "iri": "Entity-shape-Mention-11"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-1",
          "local_name": "shapes",
          "local_types": [
            "data structure",
            "visual object",
            "knowledge representation",
            "geometric form"
          ],
          "iri": "Entity-shape-Mention-12"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "shapes",
          "local_types": [
            "data structure",
            "knowledge representation"
          ],
          "iri": "Entity-shape-Mention-13"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-5",
          "local_name": "shapes",
          "local_types": [
            "data structure",
            "format"
          ],
          "iri": "Entity-shape-Mention-14"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-1",
          "local_name": "Shapes",
          "local_types": [
            "concept",
            "pattern"
          ],
          "iri": "Entity-shape-Mention-15"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "shape",
          "local_types": [
            "conceptual representation"
          ],
          "iri": "Entity-shape-Mention-16"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-3",
          "local_name": "shapes",
          "local_types": [
            "geometric concept"
          ],
          "iri": "Entity-shape-Mention-17"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "shapes",
          "local_types": [
            "geometric shape",
            "mathematical concept"
          ],
          "iri": "Entity-shape-Mention-18"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "shape",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-shape-Mention-19"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-1",
          "local_name": "shapes",
          "local_types": [
            "conceptual representation",
            "data structure"
          ],
          "iri": "Entity-shape-Mention-20"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-2",
          "local_name": "shapes",
          "local_types": [
            "conceptual framework",
            "data model"
          ],
          "iri": "Entity-shape-Mention-21"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-3",
          "local_name": "shapes",
          "local_types": [
            "concept",
            "pattern"
          ],
          "iri": "Entity-shape-Mention-22"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "shapes",
          "local_types": [
            "geometric form"
          ],
          "iri": "Entity-shape-Mention-23"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-3",
          "local_name": "shapes",
          "local_types": [
            "geometric form",
            "visual representation"
          ],
          "iri": "Entity-shape-Mention-24"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-2",
          "local_name": "shapes",
          "local_types": [
            "geometric concept",
            "mathematical object"
          ],
          "iri": "Entity-shape-Mention-25"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-4",
          "local_name": "shapes",
          "local_types": [
            "geometric shape",
            "mathematical concept"
          ],
          "iri": "Entity-shape-Mention-26"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-6",
          "local_name": "shapes",
          "local_types": [
            "geometric shape",
            "mathematical concept"
          ],
          "iri": "Entity-shape-Mention-27"
        },
        {
          "reference": "Section-14-Paragraph-6-Sentence-1",
          "local_name": "shapes",
          "local_types": [
            "geometric form",
            "mathematical concept",
            "abstract structure",
            "geometric shape"
          ],
          "iri": "Entity-shape-Mention-28"
        },
        {
          "reference": "Section-14-Paragraph-6-Sentence-2",
          "local_name": "shapes",
          "local_types": [
            "geometric object",
            "mathematical concept"
          ],
          "iri": "Entity-shape-Mention-29"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-1",
          "local_name": "shapes",
          "local_types": [
            "data structure",
            "concept",
            "conceptual representation"
          ],
          "iri": "Entity-shape-Mention-30"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-3",
          "local_name": "shapes",
          "local_types": [
            "concept",
            "data structure"
          ],
          "iri": "Entity-shape-Mention-31"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-4",
          "local_name": "shapes",
          "local_types": [
            "visual representation"
          ],
          "iri": "Entity-shape-Mention-32"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-shape_learning_system": {
      "node_id": "shape_learning_system",
      "disambiguation_index": 0,
      "label": "shape learning system",
      "aliases": [
        "shape learning system"
      ],
      "types": [
        "algorithm",
        "artificial intelligence application",
        "machine learning model",
        "system",
        "project",
        "research program"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A computer-based framework or model that enables machines to learn and recognize various shapes.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-1",
          "local_name": "shape learning system",
          "local_types": [
            "algorithm",
            "artificial intelligence application",
            "machine learning model",
            "system",
            "project",
            "research program"
          ],
          "iri": "Entity-shape_learning_system-Mention-1"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-sh__nodeshape": {
      "node_id": "sh__nodeshape",
      "disambiguation_index": 0,
      "label": "sh:nodeShape",
      "aliases": [
        "sh:nodeShape"
      ],
      "types": [
        "notation",
        "predicate",
        "semantic web concept",
        "ontology term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A semantic web concept representing the shape or structure of nodes in a graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "sh:nodeShape",
          "local_types": [
            "notation",
            "predicate",
            "semantic web concept",
            "ontology term"
          ],
          "iri": "Entity-sh__nodeshape-Mention-1"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-smart_kg_editor": {
      "node_id": "smart_kg_editor",
      "disambiguation_index": 0,
      "label": "smart KG editor",
      "aliases": [
        "a smart KG editor",
        "smart KG editor"
      ],
      "types": [
        "software tool",
        "software",
        "editor"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software tool or editor designed to facilitate intelligent knowledge graph management and editing.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-8",
          "local_name": "smart KG editor",
          "local_types": [
            "software tool",
            "editor"
          ],
          "iri": "Entity-smart_kg_editor-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-8",
          "local_name": "a smart KG editor",
          "local_types": [
            "editor",
            "software"
          ],
          "iri": "Entity-smart_kg_editor-Mention-2"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-f": {
      "node_id": "f",
      "disambiguation_index": 0,
      "label": "F",
      "aliases": [
        "F"
      ],
      "types": [
        "facts",
        "database",
        "notation",
        "fact base",
        "set of facts",
        "predicates set",
        "collection",
        "set",
        "facts set",
        "set of predicates",
        "data set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of facts, which is part of a knowledge graph (KG) pair K = (E, F), where E is a set of entities and all the entities occurring in F also occur in E.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-6",
          "local_name": "F",
          "local_types": [
            "set of facts",
            "facts set"
          ],
          "iri": "Entity-f-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "F",
          "local_types": [
            "facts",
            "set",
            "set of facts"
          ],
          "iri": "Entity-f-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "F",
          "local_types": [
            "set of predicates",
            "predicates set",
            "data set"
          ],
          "iri": "Entity-f-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "F",
          "local_types": [
            "facts",
            "database",
            "set",
            "fact base"
          ],
          "iri": "Entity-f-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-3",
          "local_name": "F",
          "local_types": [
            "notation",
            "predicates set",
            "collection",
            "set",
            "set of predicates",
            "data set"
          ],
          "iri": "Entity-f-Mention-5"
        }
      ],
      "relevance": 0.54296875
    },
    "Entity-various_iopsc_interval": {
      "node_id": "various_iopsc_interval",
      "disambiguation_index": 0,
      "label": "various IOPSC intervals",
      "aliases": [
        "various IOPSC intervals"
      ],
      "types": [
        "interval"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Intervals of Inverse Open Path Shape Constraints (IOPSCs), categorized by quality measures",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "various IOPSC intervals",
          "local_types": [
            "interval"
          ],
          "iri": "Entity-various_iopsc_interval-Mention-1"
        }
      ],
      "relevance": 0.54296875
    },
    "Entity-the_number_of_missing_rule_increasing_a_quality_decrease": {
      "node_id": "the_number_of_missing_rule_increasing_a_quality_decrease",
      "disambiguation_index": 0,
      "label": "the number of missing rules increasing as quality decreases",
      "aliases": [
        "the number of missing rules increasing as quality decreases"
      ],
      "types": [
        "phenomenon",
        "trend"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The phenomenon or trend where SHACLEARNER fails to learn and discover IOP rules of decreasing quality due to its pruning methods, resulting in an increasing number of missing rules.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-2",
          "local_name": "the number of missing rules increasing as quality decreases",
          "local_types": [
            "phenomenon",
            "trend"
          ],
          "iri": "Entity-the_number_of_missing_rule_increasing_a_quality_decrease-Mention-1"
        }
      ],
      "relevance": 0.54296875
    },
    "Entity-denoted_a_body_r__e__e__": {
      "node_id": "denoted_a_body_r__e__e__",
      "disambiguation_index": 0,
      "label": "denoted as body_r(e, e')",
      "aliases": [
        "denoted as body_r(e, e')"
      ],
      "types": [
        "notation",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of entities that satisfies a specific shape pattern expressed as an Inverse Open Path (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "denoted as body_r(e, e')",
          "local_types": [
            "notation",
            "function"
          ],
          "iri": "Entity-denoted_a_body_r__e__e__-Mention-1"
        }
      ],
      "relevance": 0.54248046875
    },
    "Entity-in_which_rule_have_one_body_atom_and_a_chain_of_conjunctive_atom_in_the_head_with_a_specific_variable_binding_pattern": {
      "node_id": "in_which_rule_have_one_body_atom_and_a_chain_of_conjunctive_atom_in_the_head_with_a_specific_variable_binding_pattern",
      "disambiguation_index": 0,
      "label": "in which rules have one body atom and a chain of conjunctive atoms in the head with a specific variable binding pattern",
      "aliases": [
        "in which rules have one body atom and a chain of conjunctive atoms in the head with a specific variable binding pattern"
      ],
      "types": [
        "rules",
        "pattern"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Inverse Open Path (IOP) rule",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "in which rules have one body atom and a chain of conjunctive atoms in the head with a specific variable binding pattern",
          "local_types": [
            "rules",
            "pattern"
          ],
          "iri": "Entity-in_which_rule_have_one_body_atom_and_a_chain_of_conjunctive_atom_in_the_head_with_a_specific_variable_binding_pattern-Mention-1"
        }
      ],
      "relevance": 0.54248046875
    },
    "Entity-corresponding_shape": {
      "node_id": "corresponding_shape",
      "disambiguation_index": 0,
      "label": "corresponding shapes",
      "aliases": [
        "corresponding shapes"
      ],
      "types": [
        "shape"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Types of shapes that correspond to each other in a knowledge graph",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "corresponding shapes",
          "local_types": [
            "shape"
          ],
          "iri": "Entity-corresponding_shape-Mention-1"
        }
      ],
      "relevance": 0.54248046875
    },
    "Entity-the_atomic_body": {
      "node_id": "the_atomic_body",
      "disambiguation_index": 0,
      "label": "the atomic body",
      "aliases": [
        "the atomic body"
      ],
      "types": [
        "body"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept referred to by 'the atomic body' represents a single entity or individual that satisfies certain conditions and patterns expressed through Inverse Open Path (IOP) rules, which are used to validate knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-5",
          "local_name": "the atomic body",
          "local_types": [
            "body"
          ],
          "iri": "Entity-the_atomic_body-Mention-1"
        }
      ],
      "relevance": 0.54248046875
    },
    "Entity-to_assess": {
      "node_id": "to_assess",
      "disambiguation_index": 0,
      "label": "To assess",
      "aliases": [
        "To assess"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process or method of evaluating the effectiveness and reliability of Inverse Open Path (IOP) rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "To assess",
          "local_types": [
            "method"
          ],
          "iri": "Entity-to_assess-Mention-1"
        }
      ],
      "relevance": 0.54248046875
    },
    "Entity-poker": {
      "node_id": "poker",
      "disambiguation_index": 0,
      "label": "Poker",
      "aliases": [
        "Poker"
      ],
      "types": [
        "benchmark",
        "concept",
        "synthetic KG",
        "dataset",
        "synthetic data",
        "knowledge graph",
        "synthetic knowledge graph",
        "game"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A popular card game or synthetic dataset used in knowledge graph analysis and benchmarking.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-3",
          "local_name": "Poker",
          "local_types": [
            "benchmark",
            "concept",
            "synthetic KG",
            "dataset",
            "synthetic data",
            "knowledge graph",
            "synthetic knowledge graph",
            "game"
          ],
          "iri": "Entity-poker-Mention-1"
        }
      ],
      "relevance": 0.5419921875
    },
    "Entity-pathq": {
      "node_id": "pathq",
      "disambiguation_index": 0,
      "label": "Pathq",
      "aliases": [
        "Pathq"
      ],
      "types": [
        "path",
        "branch"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sequence of paths or branches in a tree shape, representing a set of SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "Pathq",
          "local_types": [
            "path",
            "branch"
          ],
          "iri": "Entity-pathq-Mention-1"
        }
      ],
      "relevance": 0.5419921875
    },
    "Entity-what_proportion_of_the_inferred_head_instance_are_satisfied_": {
      "node_id": "what_proportion_of_the_inferred_head_instance_are_satisfied_",
      "disambiguation_index": 0,
      "label": "what proportion of the inferred head instances are satisfied?",
      "aliases": [
        "what proportion of the inferred head instances are satisfied?"
      ],
      "types": [
        "satisfaction rate",
        "query",
        "proportion",
        "question"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The measure that calculates the percentage of entity pairs in the knowledge graph (KG) where both the rule body and its corresponding head instance are true.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "what proportion of the inferred head instances are satisfied?",
          "local_types": [
            "satisfaction rate",
            "query",
            "proportion",
            "question"
          ],
          "iri": "Entity-what_proportion_of_the_inferred_head_instance_are_satisfied_-Mention-1"
        }
      ],
      "relevance": 0.5419921875
    },
    "Entity-version_of_the_rule_extended_with_additional_head_atom": {
      "node_id": "version_of_the_rule_extended_with_additional_head_atom",
      "disambiguation_index": 0,
      "label": "versions of the rule extended with additional head atoms",
      "aliases": [
        "versions of the rule extended with additional head atoms"
      ],
      "types": [
        "rule extension"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of SHACL shapes that are extensions of existing rules with additional head atoms.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "versions of the rule extended with additional head atoms",
          "local_types": [
            "rule extension"
          ],
          "iri": "Entity-version_of_the_rule_extended_with_additional_head_atom-Mention-1"
        }
      ],
      "relevance": 0.5419921875
    },
    "Entity-__e___pt__e___e___": {
      "node_id": "__e___pt__e___e___",
      "disambiguation_index": 0,
      "label": "|{ e'  : Pt(e', e) }|",
      "aliases": [
        "|{ e'  : Pt(e', e) }|"
      ],
      "types": [
        "norm",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The inverse open path support of an IOP rule, which measures its quality.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-7",
          "local_name": "|{ e'  : Pt(e', e) }|",
          "local_types": [
            "norm",
            "mathematical expression"
          ],
          "iri": "Entity-__e___pt__e___e___-Mention-1"
        }
      ],
      "relevance": 0.54150390625
    },
    "Entity-___e__e____body_r__e__e____": {
      "node_id": "___e__e____body_r__e__e____",
      "disambiguation_index": 0,
      "label": "|{ (e, e') : body_r(e, e') }|",
      "aliases": [
        "|{ (e, e') : Pt(e, e') }|",
        "|{ (e, e') : body_r(e, e') }|"
      ],
      "types": [
        "notation",
        "set notation",
        "mathematical expression",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The notation for expressing specific shapes in the form of paths over connected entities that are present in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "|{ (e, e') : body_r(e, e') }|",
          "local_types": [
            "notation",
            "set notation",
            "mathematical expression",
            "expression"
          ],
          "iri": "Entity-___e__e____body_r__e__e____-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "|{ (e, e') : Pt(e, e') }|",
          "local_types": [
            "notation",
            "set notation",
            "expression"
          ],
          "iri": "Entity-___e__e____body_r__e__e____-Mention-2"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-open_path_head_coverage_of_r": {
      "node_id": "open_path_head_coverage_of_r",
      "disambiguation_index": 0,
      "label": "open path head coverage of r",
      "aliases": [
        "open path head coverage of r"
      ],
      "types": [
        "parameter",
        "metric",
        "variable",
        "evaluation measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure that calculates the proportion of entities for which a specific shape pattern exists as a fact in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "open path head coverage of r",
          "local_types": [
            "parameter",
            "metric",
            "variable",
            "evaluation measure"
          ],
          "iri": "Entity-open_path_head_coverage_of_r-Mention-1"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-k-cliques": {
      "node_id": "k-cliques",
      "disambiguation_index": 0,
      "label": "k-cliques",
      "aliases": [
        "k-cliques"
      ],
      "types": [
        "concept",
        "structure",
        "mathematical concept",
        "pattern",
        "graph theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of vertices in a graph that are connected to each other by edges, with at least k vertices being adjacent to one another.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "k-cliques",
          "local_types": [
            "concept",
            "structure",
            "mathematical concept",
            "pattern",
            "graph theory"
          ],
          "iri": "Entity-k-cliques-Mention-1"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-the_path_p1__p2__...__pm": {
      "node_id": "the_path_p1__p2__...__pm",
      "disambiguation_index": 0,
      "label": "the path P1, P2, ..., Pm",
      "aliases": [
        "the path P1, P2, ..., Pm"
      ],
      "types": [
        "path"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sequence of predicates (P1, P2, ..., Pm) representing a shape pattern in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "the path P1, P2, ..., Pm",
          "local_types": [
            "path"
          ],
          "iri": "Entity-the_path_p1__p2__...__pm-Mention-1"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-it_head": {
      "node_id": "it_head",
      "disambiguation_index": 0,
      "label": "its head",
      "aliases": [
        "its head"
      ],
      "types": [
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The sequence of predicates in an IOP rule, representing the pattern of connected entities that satisfy the shape constraint.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "its head",
          "local_types": [
            "head"
          ],
          "iri": "Entity-it_head-Mention-1"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-the_sample": {
      "node_id": "the_sample",
      "disambiguation_index": 0,
      "label": "The sample",
      "aliases": [
        "The sample"
      ],
      "types": [
        "sample"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A subset of entities and predicates from a knowledge graph used as input for learning annotated IOP rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "The sample",
          "local_types": [
            "sample"
          ],
          "iri": "Entity-the_sample-Mention-1"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-cr": {
      "node_id": "cr",
      "disambiguation_index": 0,
      "label": "CRs",
      "aliases": [
        "CRs"
      ],
      "types": [
        "notation",
        "research method",
        "concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Closed rules (CR) that include closed path rules, used for inferring new facts.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "CRs",
          "local_types": [
            "notation",
            "research method",
            "concept"
          ],
          "iri": "Entity-cr-Mention-1"
        }
      ],
      "relevance": 0.54052734375
    },
    "Entity-horn": {
      "node_id": "horn",
      "disambiguation_index": 0,
      "label": "Horn",
      "aliases": [
        "Horn"
      ],
      "types": [
        "logical concept",
        "concept",
        "logic concept",
        "theory"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A logical concept or theory that represents a specific shape pattern over connected entities present in a knowledge graph, used to validate and edit the graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-6",
          "local_name": "Horn",
          "local_types": [
            "logical concept",
            "concept",
            "logic concept",
            "theory"
          ],
          "iri": "Entity-horn-Mention-1"
        }
      ],
      "relevance": 0.54052734375
    },
    "Entity-the_first_annotation_value__0.13__present_the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality": {
      "node_id": "the_first_annotation_value__0.13__present_the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality",
      "disambiguation_index": 0,
      "label": "the first annotation value (0.13) presents the SC of the tree and the subsequent values at the beginning of each branch indicate the branch cardinality",
      "aliases": [
        "the first annotation value (0.13) presents the SC of the tree and the subsequent values at the beginning of each branch indicate the branch cardinality"
      ],
      "types": [
        "description",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A notation that represents a tree shape learned from IOP rules, where the first value (0.13) shows the overall structure complexity score and subsequent values at the start of each branch represent the branch cardinality.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-2",
          "local_name": "the first annotation value (0.13) presents the SC of the tree and the subsequent values at the beginning of each branch indicate the branch cardinality",
          "local_types": [
            "description",
            "notation"
          ],
          "iri": "Entity-the_first_annotation_value__0.13__present_the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality-Mention-1"
        }
      ],
      "relevance": 0.54052734375
    },
    "Entity-the_logical_statement_of_the_rule": {
      "node_id": "the_logical_statement_of_the_rule",
      "disambiguation_index": 0,
      "label": "the logical statement of the rule",
      "aliases": [
        "the logical statement of the rule"
      ],
      "types": [
        "rule",
        "logical statement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A formal expression or statement that represents an Inverse Open Path (IOP) rule, which connects entities satisfying a subject predicate to those forming an object argument along a path of predicates in the IOP rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "the logical statement of the rule",
          "local_types": [
            "rule",
            "logical statement"
          ],
          "iri": "Entity-the_logical_statement_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.54052734375
    },
    "Entity-one_that_present_the_semantics_of_recursive_shacl_shape": {
      "node_id": "one_that_present_the_semantics_of_recursive_shacl_shape",
      "disambiguation_index": 0,
      "label": "one that presents the semantics of recursive SHACL shapes",
      "aliases": [
        "one that presents the semantics of recursive SHACL shapes"
      ],
      "types": [
        "recursive SHACL shapes",
        "work",
        "presentation",
        "paper",
        "study"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A study or paper that provides a formal explanation and definition of the meaning and structure of recursive SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-1",
          "local_name": "one that presents the semantics of recursive SHACL shapes",
          "local_types": [
            "recursive SHACL shapes",
            "work",
            "presentation",
            "paper",
            "study"
          ],
          "iri": "Entity-one_that_present_the_semantics_of_recursive_shacl_shape-Mention-1"
        }
      ],
      "relevance": 0.5400390625
    },
    "Entity-exists__z1__...__z__n-1___y_": {
      "node_id": "exists__z1__...__z__n-1___y_",
      "disambiguation_index": 0,
      "label": "exists(z1, ..., z(n-1), y)",
      "aliases": [
        "exists(z1, ..., z(n-1), y)"
      ],
      "types": [
        "existential quantifier",
        "logical operator",
        "quantifier",
        "quantification"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An existential quantifier that represents a path of entities connected by predicates, used to express constraints on graph data as shapes.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-1",
          "local_name": "exists(z1, ..., z(n-1), y)",
          "local_types": [
            "existential quantifier",
            "logical operator",
            "quantifier",
            "quantification"
          ],
          "iri": "Entity-exists__z1__...__z__n-1___y_-Mention-1"
        }
      ],
      "relevance": 0.53955078125
    },
    "Entity-for_a_concrete_example": {
      "node_id": "for_a_concrete_example",
      "disambiguation_index": 0,
      "label": "For a concrete example",
      "aliases": [
        "For a concrete example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Three Inverse Open Path (IOP) rules mined from DBpedia during the experiments",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-1",
          "local_name": "For a concrete example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_a_concrete_example-Mention-1"
        }
      ],
      "relevance": 0.53955078125
    },
    "Entity-fgds": {
      "node_id": "fgds",
      "disambiguation_index": 0,
      "label": "FGDs",
      "aliases": [
        "FGDs"
      ],
      "types": [
        "notation",
        "ontology",
        "concept",
        "framework"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A conceptual framework that defines constraints for relationships between entities",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "FGDs",
          "local_types": [
            "notation",
            "ontology",
            "concept",
            "framework"
          ],
          "iri": "Entity-fgds-Mention-1"
        }
      ],
      "relevance": 0.5390625
    },
    "Entity-all_fact_related_to_them": {
      "node_id": "all_fact_related_to_them",
      "disambiguation_index": 0,
      "label": "all facts related to them",
      "aliases": [
        "all facts related to them"
      ],
      "types": [
        "facts",
        "related information"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A small synthetic Knowledge Graph (KG) with 500 poker hands, each comprising five playing cards drawn from a deck with thirteen ranks and four suits.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-8",
          "local_name": "all facts related to them",
          "local_types": [
            "facts",
            "related information"
          ],
          "iri": "Entity-all_fact_related_to_them-Mention-1"
        }
      ],
      "relevance": 0.5390625
    },
    "Entity-using_self-loop_link": {
      "node_id": "using_self-loop_link",
      "disambiguation_index": 0,
      "label": "Using self-loop links",
      "aliases": [
        "Using self-loop links"
      ],
      "types": [
        "technique"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A technique used in knowledge graph representation, where unary predicates are represented as entities with self-loop links to maintain consistency and simplicity in triple format.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-3",
          "local_name": "Using self-loop links",
          "local_types": [
            "technique"
          ],
          "iri": "Entity-using_self-loop_link-Mention-1"
        }
      ],
      "relevance": 0.5390625
    },
    "Entity-the_body_(1)": {
      "node_id": "the_body_(1)",
      "disambiguation_index": 1,
      "label": "the body",
      "aliases": [
        "the body"
      ],
      "types": [
        "body"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept referred to by 'the body' is a shape tree structure that represents a set of SHACL shapes learned from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-6",
          "local_name": "the body",
          "local_types": [
            "body"
          ],
          "iri": "Entity-the_body_(1)-Mention-1"
        }
      ],
      "relevance": 0.53857421875
    },
    "Entity-op_rule_are_used_since_they_imply_the_existence_of_a_fact__like_spouse__x__y___z_child__x__z_": {
      "node_id": "op_rule_are_used_since_they_imply_the_existence_of_a_fact__like_spouse__x__y___z_child__x__z_",
      "disambiguation_index": 0,
      "label": "OP rules are used since they imply the existence of a fact, like spouse(x, y) \u2192 \u2203z child(x, z)",
      "aliases": [
        "OP rules are used since they imply the existence of a fact, like spouse(x, y) \u2192 \u2203z child(x, z)"
      ],
      "types": [
        "fact",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Inverse Open Path (IOP) rule that implies the existence of a fact",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-4",
          "local_name": "OP rules are used since they imply the existence of a fact, like spouse(x, y) \u2192 \u2203z child(x, z)",
          "local_types": [
            "fact",
            "rule"
          ],
          "iri": "Entity-op_rule_are_used_since_they_imply_the_existence_of_a_fact__like_spouse__x__y___z_child__x__z_-Mention-1"
        }
      ],
      "relevance": 0.53759765625
    },
    "Entity-this_depth-first_questioning_strategy": {
      "node_id": "this_depth-first_questioning_strategy",
      "disambiguation_index": 0,
      "label": "this depth-first questioning strategy",
      "aliases": [
        "this depth-first questioning strategy"
      ],
      "types": [
        "strategy"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method for asking completion questions about knowledge graphs that works sequentially along a path of dependent questions, reducing cognitive load by leveraging contextual connections.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-7",
          "local_name": "this depth-first questioning strategy",
          "local_types": [
            "strategy"
          ],
          "iri": "Entity-this_depth-first_questioning_strategy-Mention-1"
        }
      ],
      "relevance": 0.53759765625
    },
    "Entity-iop_rule_about_each_of_them": {
      "node_id": "iop_rule_about_each_of_them",
      "disambiguation_index": 0,
      "label": "IOP rules about each of them",
      "aliases": [
        "IOP rules about each of them"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "IOP rules that describe similar constraints for each occupation type, characterized by high confidence (high IOPSC) but limited relevance to the target predicate instances (low IOPHC)",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-4",
          "local_name": "IOP rules about each of them",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-iop_rule_about_each_of_them-Mention-1"
        }
      ],
      "relevance": 0.53759765625
    },
    "Entity-they_(4)": {
      "node_id": "they_(4)",
      "disambiguation_index": 4,
      "label": "They",
      "aliases": [
        "They"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Procedural methods without logical foundations that are not shown to be scalable to handle real-world Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "They",
          "local_types": [
            "author"
          ],
          "iri": "Entity-they_(4)-Mention-1"
        }
      ],
      "relevance": 0.53662109375
    },
    "Entity-pt__x__y___p1__y__z___p2__z__t_": {
      "node_id": "pt__x__y___p1__y__z___p2__z__t_",
      "disambiguation_index": 0,
      "label": "Pt( x, y ) ^ P1(y, z) ^ P2(z, t)",
      "aliases": [
        "Pt( x, y ) ^ P1(y, z) ^ P2(z, t)",
        "Pt(x, y) -> P1(y, z) ^ P2(z, t)"
      ],
      "types": [
        "logic formula",
        "expression",
        "logical statement",
        "composition",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An Inverse Open Path rule that connects entities satisfying a subject predicate to entities forming an object argument along a path of predicates.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "Pt( x, y ) ^ P1(y, z) ^ P2(z, t)",
          "local_types": [
            "expression",
            "composition"
          ],
          "iri": "Entity-pt__x__y___p1__y__z___p2__z__t_-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "Pt(x, y) -> P1(y, z) ^ P2(z, t)",
          "local_types": [
            "logic formula",
            "predicate",
            "logical statement"
          ],
          "iri": "Entity-pt__x__y___p1__y__z___p2__z__t_-Mention-2"
        }
      ],
      "relevance": 0.5361328125
    },
    "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm": {
      "node_id": "the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm",
      "disambiguation_index": 0,
      "label": "the pairs (e, e') satisfying the head are connected by the path P1, P2, ..., Pm",
      "aliases": [
        "the pairs (e, e') satisfying the head are connected by the path P1, P2, ..., Pm"
      ],
      "types": [
        "description",
        "explanation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entities and their corresponding connections in a knowledge graph that satisfy the head of an Inverse Open Path rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "the pairs (e, e') satisfying the head are connected by the path P1, P2, ..., Pm",
          "local_types": [
            "description",
            "explanation"
          ],
          "iri": "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm-Mention-1"
        }
      ],
      "relevance": 0.5361328125
    },
    "Entity-it_internal_knowledge_graph": {
      "node_id": "it_internal_knowledge_graph",
      "disambiguation_index": 0,
      "label": "its internal knowledge graph",
      "aliases": [
        "its internal knowledge graph"
      ],
      "types": [
        "knowledge graph",
        "database",
        "knowledge_graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The internal database or network structure that stores and organizes information within an organization's enterprise knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "its internal knowledge graph",
          "local_types": [
            "knowledge graph",
            "database",
            "knowledge_graph"
          ],
          "iri": "Entity-it_internal_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.5361328125
    },
    "Entity-using_rule_found_in_the_experiment": {
      "node_id": "using_rule_found_in_the_experiment",
      "disambiguation_index": 0,
      "label": "Using rules found in the experiments",
      "aliases": [
        "Using rules found in the experiments"
      ],
      "types": [
        "methodology",
        "experiment"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The methodology or experiment used to find the SHACL shapes",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-1",
          "local_name": "Using rules found in the experiments",
          "local_types": [
            "methodology",
            "experiment"
          ],
          "iri": "Entity-using_rule_found_in_the_experiment-Mention-1"
        }
      ],
      "relevance": 0.53564453125
    },
    "Entity-closed-path_rule": {
      "node_id": "closed-path_rule",
      "disambiguation_index": 0,
      "label": "Closed-path rules",
      "aliases": [
        "closed path (CP) rules",
        "Closed-path rules"
      ],
      "types": [
        "rule set",
        "algorithm",
        "concept",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of rule set that consists of a head at the front of an implication arrow and a body at the tail, forming a closed path or single unbroken loop of links between variables.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "Closed-path rules",
          "local_types": [
            "rule set",
            "algorithm",
            "concept",
            "rule"
          ],
          "iri": "Entity-closed-path_rule-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-3",
          "local_name": "closed path (CP) rules",
          "local_types": [
            "rule set"
          ],
          "iri": "Entity-closed-path_rule-Mention-2"
        }
      ],
      "relevance": 0.53515625
    },
    "Entity-p1_t": {
      "node_id": "p1_t",
      "disambiguation_index": 0,
      "label": "P1_t",
      "aliases": [
        "P1_t"
      ],
      "types": [
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate in an Inverse Open Path (IOP) rule, representing a relationship between entities satisfying certain conditions.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-4",
          "local_name": "P1_t",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-p1_t-Mention-1"
        }
      ],
      "relevance": 0.53515625
    },
    "Entity-knowledge_graph_completion": {
      "node_id": "knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "knowledge graph completion",
      "aliases": [
        "knowledge graph completion"
      ],
      "types": [
        "task",
        "process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of filling gaps or adding missing information to a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-3",
          "local_name": "knowledge graph completion",
          "local_types": [
            "task",
            "process"
          ],
          "iri": "Entity-knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.53515625
    },
    "Entity-between_op_and_iop_rule": {
      "node_id": "between_op_and_iop_rule",
      "disambiguation_index": 0,
      "label": "between OP and IOP rules",
      "aliases": [
        "between OP and IOP rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The term 'between OP and IOP rules' refers to a concept that describes the similarity or connection between Open Path (OP) rules and Inverse Open Path (IOP) rules, highlighting their close relationship in terms of support, standard confidence, and head coverage.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "between OP and IOP rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-between_op_and_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.53515625
    },
    "Entity-both_well-defined_semantics_and_motivating_use_case": {
      "node_id": "both_well-defined_semantics_and_motivating_use_case",
      "disambiguation_index": 0,
      "label": "both well-defined semantics and motivating use cases",
      "aliases": [
        "both well-defined semantics and motivating use cases"
      ],
      "types": [
        "property",
        "use case"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Logical formalisms used as starting point for deriving SHACL shapes, characterized by having both well-defined semantics and motivating use cases.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-3",
          "local_name": "both well-defined semantics and motivating use cases",
          "local_types": [
            "property",
            "use case"
          ],
          "iri": "Entity-both_well-defined_semantics_and_motivating_use_case-Mention-1"
        }
      ],
      "relevance": 0.53515625
    },
    "Entity-inverse_open_path_support": {
      "node_id": "inverse_open_path_support",
      "disambiguation_index": 0,
      "label": "inverse open path support",
      "aliases": [
        "inverse open path support"
      ],
      "types": [
        "parameter",
        "metric",
        "concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Inverse Open Path Support (IOPsupp) refers to a measure that calculates the number of pairs of entities that satisfy both the head and body of an Inverse Open Path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-5",
          "local_name": "inverse open path support",
          "local_types": [
            "parameter",
            "metric",
            "concept"
          ],
          "iri": "Entity-inverse_open_path_support-Mention-1"
        }
      ],
      "relevance": 0.53466796875
    },
    "Entity-a_sequence_of_predicate_(1)": {
      "node_id": "a_sequence_of_predicate_(1)",
      "disambiguation_index": 1,
      "label": "a sequence of predicates",
      "aliases": [
        "a sequence of predicates"
      ],
      "types": [
        "sequence",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A series of related predicate statements that define constraints or patterns in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-2",
          "local_name": "a sequence of predicates",
          "local_types": [
            "sequence",
            "predicate"
          ],
          "iri": "Entity-a_sequence_of_predicate_(1)-Mention-1"
        }
      ],
      "relevance": 0.53466796875
    },
    "Entity-the_ultimate_evaluation": {
      "node_id": "the_ultimate_evaluation",
      "disambiguation_index": 0,
      "label": "The ultimate evaluation",
      "aliases": [
        "The ultimate evaluation"
      ],
      "types": [
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method or process used to assess and determine the quality, relevance, or effectiveness of a learned Inverse Open Path (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "The ultimate evaluation",
          "local_types": [
            "evaluation"
          ],
          "iri": "Entity-the_ultimate_evaluation-Mention-1"
        }
      ],
      "relevance": 0.5341796875
    },
    "Entity-investigate_the_application_of_shacl_shape_to_the_validation_of_rdf_database": {
      "node_id": "investigate_the_application_of_shacl_shape_to_the_validation_of_rdf_database",
      "disambiguation_index": 0,
      "label": "investigate the application of SHACL shapes to the validation of RDF databases",
      "aliases": [
        "investigate the application of SHACL shapes to the validation of RDF databases"
      ],
      "types": [
        "application area",
        "validation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Research on applying SHACL shapes for validating RDF databases",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "investigate the application of SHACL shapes to the validation of RDF databases",
          "local_types": [
            "application area",
            "validation"
          ],
          "iri": "Entity-investigate_the_application_of_shacl_shape_to_the_validation_of_rdf_database-Mention-1"
        }
      ],
      "relevance": 0.53369140625
    },
    "Entity-let_k___e__f__with_e___e1__...__en_": {
      "node_id": "let_k___e__f__with_e___e1__...__en_",
      "disambiguation_index": 0,
      "label": "Let K = (E, F) with E = {e1, ..., en}",
      "aliases": [
        "Let K = (E, F) with E = {e1, ..., en}"
      ],
      "types": [
        "definition",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A notation for representing a knowledge graph as a set of square adjacency matrices.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "Let K = (E, F) with E = {e1, ..., en}",
          "local_types": [
            "definition",
            "notation"
          ],
          "iri": "Entity-let_k___e__f__with_e___e1__...__en_-Mention-1"
        }
      ],
      "relevance": 0.53369140625
    },
    "Entity-nested_sh__path_declaration": {
      "node_id": "nested_sh__path_declaration",
      "disambiguation_index": 0,
      "label": "nested sh:path declarations",
      "aliases": [
        "nested sh:path declarations"
      ],
      "types": [
        "declaration"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of SHACL shapes where the path of head predicates is declared as nested `sh:path` declarations within a `sh:property` declaration.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "nested sh:path declarations",
          "local_types": [
            "declaration"
          ],
          "iri": "Entity-nested_sh__path_declaration-Mention-1"
        }
      ],
      "relevance": 0.53369140625
    },
    "Entity-hole": {
      "node_id": "hole",
      "disambiguation_index": 0,
      "label": "HOLE",
      "aliases": [
        "HOLE"
      ],
      "types": [
        "algorithm",
        "tool",
        "method",
        "embedding learner"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A type of embedding learner used in knowledge graph completion tasks.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "HOLE",
          "local_types": [
            "algorithm",
            "tool",
            "method",
            "embedding learner"
          ],
          "iri": "Entity-hole-Mention-1"
        }
      ],
      "relevance": 0.533203125
    },
    "Entity-shacl_core_feature": {
      "node_id": "shacl_core_feature",
      "disambiguation_index": 0,
      "label": "SHACL Core features",
      "aliases": [
        "SHACL Core features"
      ],
      "types": [
        "standard",
        "specification"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of fundamental specifications or characteristics that define the core capabilities and functionalities of a system, language, or framework.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-1",
          "local_name": "SHACL Core features",
          "local_types": [
            "standard",
            "specification"
          ],
          "iri": "Entity-shacl_core_feature-Mention-1"
        }
      ],
      "relevance": 0.533203125
    },
    "Entity-kg_documentation": {
      "node_id": "kg_documentation",
      "disambiguation_index": 0,
      "label": "KG documentation",
      "aliases": [
        "KG documentation"
      ],
      "types": [
        "data representation",
        "knowledge sharing",
        "information resource",
        "document"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A written or digital record of knowledge, information, or data that can be shared with others.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-1",
          "local_name": "KG documentation",
          "local_types": [
            "data representation",
            "knowledge sharing",
            "information resource",
            "document"
          ],
          "iri": "Entity-kg_documentation-Mention-1"
        }
      ],
      "relevance": 0.53271484375
    },
    "Entity-a_sampled_knowledge_graph": {
      "node_id": "a_sampled_knowledge_graph",
      "disambiguation_index": 0,
      "label": "a sampled knowledge graph",
      "aliases": [
        "a sampled knowledge graph"
      ],
      "types": [
        "data structure",
        "graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A subset of nodes and edges from a larger knowledge graph, selected using a sampling method.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "a sampled knowledge graph",
          "local_types": [
            "data structure",
            "graph"
          ],
          "iri": "Entity-a_sampled_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.5322265625
    },
    "Entity-measure_support__head_coverage_and_standard_confidence": {
      "node_id": "measure_support__head_coverage_and_standard_confidence",
      "disambiguation_index": 0,
      "label": "measures support, head coverage and standard confidence",
      "aliases": [
        "measures support, head coverage and standard confidence"
      ],
      "types": [
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of metrics used to evaluate the quality of closed-path rules in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "measures support, head coverage and standard confidence",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-measure_support__head_coverage_and_standard_confidence-Mention-1"
        }
      ],
      "relevance": 0.5322265625
    },
    "Entity-the_quantifier": {
      "node_id": "the_quantifier",
      "disambiguation_index": 0,
      "label": "the quantifiers",
      "aliases": [
        "the quantifiers"
      ],
      "types": [
        "quantifier",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The quantifiers refer to a set of logical operators used to express constraints on graph data as shapes, specifically existential and universal variables that are universally quantified at the outside.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "the quantifiers",
          "local_types": [
            "quantifier",
            "concept"
          ],
          "iri": "Entity-the_quantifier-Mention-1"
        }
      ],
      "relevance": 0.5322265625
    },
    "Entity-the_evaluation_method": {
      "node_id": "the_evaluation_method",
      "disambiguation_index": 0,
      "label": "the evaluation method",
      "aliases": [
        "the evaluation method"
      ],
      "types": [
        "evaluation_method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The novel algorithmic component in SHACLEARNER responsible for evaluating and filtering mined IOP rules, differing from OPRL's evaluation module.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-4",
          "local_name": "the evaluation method",
          "local_types": [
            "evaluation_method"
          ],
          "iri": "Entity-the_evaluation_method-Mention-1"
        }
      ],
      "relevance": 0.5322265625
    },
    "Entity-defined_threshold__treescmin_": {
      "node_id": "defined_threshold__treescmin_",
      "disambiguation_index": 0,
      "label": "defined threshold (TreeSCMIN)",
      "aliases": [
        "defined threshold (TreeSCMIN)"
      ],
      "types": [
        "threshold"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum confidence score required for adding an IOP rule to a tree shape in SHACLEARNER, below which the rule will be dismissed.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-4",
          "local_name": "defined threshold (TreeSCMIN)",
          "local_types": [
            "threshold"
          ],
          "iri": "Entity-defined_threshold__treescmin_-Mention-1"
        }
      ],
      "relevance": 0.5322265625
    },
    "Entity-all_head_branch_and_the_body_join_in_one_shared_variable__z0_.": {
      "node_id": "all_head_branch_and_the_body_join_in_one_shared_variable__z0_.",
      "disambiguation_index": 0,
      "label": "All head branches and the body join in one shared variable, z0.",
      "aliases": [
        "All head branches and the body join in one shared variable, z0."
      ],
      "types": [
        "variable binding",
        "shared scope"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The tree shape's shared variable, which represents the common root of all paths or branches in the SHACL tree structure.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-6",
          "local_name": "All head branches and the body join in one shared variable, z0.",
          "local_types": [
            "variable binding",
            "shared scope"
          ],
          "iri": "Entity-all_head_branch_and_the_body_join_in_one_shared_variable__z0_.-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-more_complex_shape_like_closed_rule_or_tree__which_are_also_path__with_further_restriction_": {
      "node_id": "more_complex_shape_like_closed_rule_or_tree__which_are_also_path__with_further_restriction_",
      "disambiguation_index": 0,
      "label": "more complex shapes like closed rules or trees, which are also paths (with further restrictions)",
      "aliases": [
        "more complex shapes like closed rules or trees, which are also paths (with further restrictions)"
      ],
      "types": [
        "complex shape"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "More complex shapes that can be built from path shapes with additional constraints",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-3",
          "local_name": "more complex shapes like closed rules or trees, which are also paths (with further restrictions)",
          "local_types": [
            "complex shape"
          ],
          "iri": "Entity-more_complex_shape_like_closed_rule_or_tree__which_are_also_path__with_further_restriction_-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-additional_head_predicate_are_included": {
      "node_id": "additional_head_predicate_are_included",
      "disambiguation_index": 0,
      "label": "additional head predicates are included",
      "aliases": [
        "additional head predicates are included"
      ],
      "types": [
        "predicate",
        "include"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The inclusion of extra predicate atoms in an Inverse Open Path (IOP) rule, which affects its support and standard confidence measures.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "additional head predicates are included",
          "local_types": [
            "predicate",
            "include"
          ],
          "iri": "Entity-additional_head_predicate_are_included-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-model_type_and_class": {
      "node_id": "model_type_and_class",
      "disambiguation_index": 0,
      "label": "model types and classes",
      "aliases": [
        "model types and classes"
      ],
      "types": [
        "concept",
        "ontology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A conceptual representation of categories or classifications used to organize entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-3",
          "local_name": "model types and classes",
          "local_types": [
            "concept",
            "ontology"
          ],
          "iri": "Entity-model_type_and_class-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-pt___x__z0_": {
      "node_id": "pt___x__z0_",
      "disambiguation_index": 0,
      "label": "Pt'(x, z0)",
      "aliases": [
        "Pt'(x, z0)"
      ],
      "types": [
        "logical expression",
        "mathematical formula",
        "predicate",
        "predicate logic expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic expression that represents a specific shape pattern in a knowledge graph, used to validate and underpin manual editing tasks.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-1",
          "local_name": "Pt'(x, z0)",
          "local_types": [
            "logical expression",
            "mathematical formula",
            "predicate",
            "predicate logic expression"
          ],
          "iri": "Entity-pt___x__z0_-Mention-1"
        }
      ],
      "relevance": 0.53125
    },
    "Entity-to_find": {
      "node_id": "to_find",
      "disambiguation_index": 0,
      "label": "To find",
      "aliases": [
        "To find"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of identifying unique entities that satisfy a given rule or pattern, typically used for learning high-quality shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "To find",
          "local_types": [
            "method"
          ],
          "iri": "Entity-to_find-Mention-1"
        }
      ],
      "relevance": 0.53125
    },
    "Entity-our_deliberate_selection_of_type-like_unary_predicate_a_target_for_dbpedia_and_wikidata": {
      "node_id": "our_deliberate_selection_of_type-like_unary_predicate_a_target_for_dbpedia_and_wikidata",
      "disambiguation_index": 0,
      "label": "our deliberate selection of type-like unary predicates as targets for DBPedia and Wikidata",
      "aliases": [
        "our deliberate selection of type-like unary predicates as targets for DBPedia and Wikidata"
      ],
      "types": [
        "selection",
        "targets",
        "DBPedia",
        "Wikidata"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of specific, unary predicate types chosen intentionally as learning targets for SHACLEARNER in experiments involving DBPedia and Wikidata knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-5-Sentence-2",
          "local_name": "our deliberate selection of type-like unary predicates as targets for DBPedia and Wikidata",
          "local_types": [
            "selection",
            "targets",
            "DBPedia",
            "Wikidata"
          ],
          "iri": "Entity-our_deliberate_selection_of_type-like_unary_predicate_a_target_for_dbpedia_and_wikidata-Mention-1"
        }
      ],
      "relevance": 0.53125
    },
    "Entity-let_r_be_an_iop_rule_of_the_form__3__.": {
      "node_id": "let_r_be_an_iop_rule_of_the_form__3__.",
      "disambiguation_index": 0,
      "label": "Let r be an IOP rule of the form (3).",
      "aliases": [
        "r be an IOP rule of the form (3)",
        "r be an IOP rule of the form (3) with n >= 2, and let r' be the same rule shortened by removing the last head predicate.",
        "Let r be an IOP rule of the form (3)."
      ],
      "types": [
        "mathematical concept",
        "rule",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An inverse open path rule, specifically one with the general form Pt'(x, z0) -> exists(z1, ..., z(n-1), y) P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z( n - 1 ), y).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "Let r be an IOP rule of the form (3).",
          "local_types": [
            "rule",
            "mathematics"
          ],
          "iri": "Entity-let_r_be_an_iop_rule_of_the_form__3__.-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "r be an IOP rule of the form (3) with n >= 2, and let r' be the same rule shortened by removing the last head predicate.",
          "local_types": [
            "rule",
            "mathematics"
          ],
          "iri": "Entity-let_r_be_an_iop_rule_of_the_form__3__.-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "r be an IOP rule of the form (3)",
          "local_types": [
            "rule",
            "mathematical concept"
          ],
          "iri": "Entity-let_r_be_an_iop_rule_of_the_form__3__.-Mention-3"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-object_argument_embeddings": {
      "node_id": "object_argument_embeddings",
      "disambiguation_index": 0,
      "label": "object argument embeddings",
      "aliases": [
        "object argument embeddings"
      ],
      "types": [
        "aggregation",
        "knowledge graph embedding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Vector representations of objects or arguments used to capture their semantic meaning",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "object argument embeddings",
          "local_types": [
            "aggregation",
            "knowledge graph embedding"
          ],
          "iri": "Entity-object_argument_embeddings-Mention-1"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-treescmin_parameter": {
      "node_id": "treescmin_parameter",
      "disambiguation_index": 0,
      "label": "TreeSCMIN parameter",
      "aliases": [
        "TreeSCMIN parameter",
        "the TreeSCMIN parameter"
      ],
      "types": [
        "configuration option",
        "parameter",
        "technical term"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The minimum value allowed for the Tree Shape Complexity (TreeSC) parameter when learning tree shapes from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "TreeSCMIN parameter",
          "local_types": [
            "configuration option",
            "parameter",
            "technical term"
          ],
          "iri": "Entity-treescmin_parameter-Mention-1"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "the TreeSCMIN parameter",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-treescmin_parameter-Mention-2"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-our_unary_predicate": {
      "node_id": "our_unary_predicate",
      "disambiguation_index": 0,
      "label": "our unary predicates",
      "aliases": [
        "our unary predicates"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Unary predicates used to model types and classes in the knowledge graph, with each predicate having a class as its second argument.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-3",
          "local_name": "our unary predicates",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-our_unary_predicate-Mention-1"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-corresponding_number_of_mined_rule": {
      "node_id": "corresponding_number_of_mined_rule",
      "disambiguation_index": 0,
      "label": "corresponding number of mined rules",
      "aliases": [
        "corresponding number of mined rules"
      ],
      "types": [
        "statistic",
        "rule",
        "mined data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The total count of tree structures generated from the discovered IOP rules.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "corresponding number of mined rules",
          "local_types": [
            "statistic",
            "rule",
            "mined data"
          ],
          "iri": "Entity-corresponding_number_of_mined_rule-Mention-1"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-for_car2__iopsupp__r2_____e2____1__iophc__r2___11__and_iopsc__r2___12": {
      "node_id": "for_car2__iopsupp__r2_____e2____1__iophc__r2___11__and_iopsc__r2___12",
      "disambiguation_index": 0,
      "label": "For Car=2, IOPsupp(r2) = |{e2}| = 1, IOPHC(r2) = 1/1, and IOPSC(r2) = 1/2",
      "aliases": [
        "For Car=2, IOPsupp(r2) = |{e2}| = 1, IOPHC(r2) = 1/1, and IOPSC(r2) = 1/2"
      ],
      "types": [
        "equation",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The quality measures for an Inverse Open Path (IOP) rule with a cardinality of 2, which evaluates to 1 supporting entity and has a support ratio of 1/2.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-4",
          "local_name": "For Car=2, IOPsupp(r2) = |{e2}| = 1, IOPHC(r2) = 1/1, and IOPSC(r2) = 1/2",
          "local_types": [
            "equation",
            "mathematical concept"
          ],
          "iri": "Entity-for_car2__iopsupp__r2_____e2____1__iophc__r2___11__and_iopsc__r2___12-Mention-1"
        }
      ],
      "relevance": 0.5302734375
    },
    "Entity-_standard_confidence__head_coverage_": {
      "node_id": "_standard_confidence__head_coverage_",
      "disambiguation_index": 0,
      "label": "(standard confidence, head coverage)",
      "aliases": [
        "(standard confidence, head coverage)"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Standard confidence and head coverage are measures used to quantify the quality of closed-path rules in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-1",
          "local_name": "(standard confidence, head coverage)",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-_standard_confidence__head_coverage_-Mention-1"
        }
      ],
      "relevance": 0.5302734375
    },
    "Entity-max_rule_cardinality_mcar": {
      "node_id": "max_rule_cardinality_mcar",
      "disambiguation_index": 0,
      "label": "max rule cardinality MCar",
      "aliases": [
        "max rule cardinality MCar"
      ],
      "types": [
        "MCar",
        "parameter",
        "rule characteristic",
        "cardinality",
        "cardinality metric",
        "constant"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The maximum allowed cardinality of an Inverse Open Path (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-3",
          "local_name": "max rule cardinality MCar",
          "local_types": [
            "MCar",
            "parameter",
            "rule characteristic",
            "cardinality",
            "cardinality metric",
            "constant"
          ],
          "iri": "Entity-max_rule_cardinality_mcar-Mention-1"
        }
      ],
      "relevance": 0.52978515625
    },
    "Entity-these_attribute_have_particular_type__a_string__a_date__and_a_location": {
      "node_id": "these_attribute_have_particular_type__a_string__a_date__and_a_location",
      "disambiguation_index": 0,
      "label": "these attributes have particular types: a string, a date, and a location",
      "aliases": [
        "these attributes have particular types: a string, a date, and a location"
      ],
      "types": [
        "type specification",
        "data type",
        "attribute type"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of attribute specifications in SHACL shapes",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "these attributes have particular types: a string, a date, and a location",
          "local_types": [
            "type specification",
            "data type",
            "attribute type"
          ],
          "iri": "Entity-these_attribute_have_particular_type__a_string__a_date__and_a_location-Mention-1"
        }
      ],
      "relevance": 0.5283203125
    },
    "Entity-it_low_iopsc": {
      "node_id": "it_low_iopsc",
      "disambiguation_index": 0,
      "label": "its low IOPSC",
      "aliases": [
        "its low IOPSC"
      ],
      "types": [
        "metric",
        "IOPSC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The inverse open path standard confidence (IOPSC) for a given rule",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "its low IOPSC",
          "local_types": [
            "metric",
            "IOPSC"
          ],
          "iri": "Entity-it_low_iopsc-Mention-1"
        }
      ],
      "relevance": 0.5283203125
    },
    "Entity-the_maximum_length_of_rule": {
      "node_id": "the_maximum_length_of_rule",
      "disambiguation_index": 0,
      "label": "the maximum length of rules",
      "aliases": [
        "the maximum length of rules"
      ],
      "types": [
        "parameter",
        "technical detail"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The maximum number of predicates allowed in a rule that can be learned from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-2",
          "local_name": "the maximum length of rules",
          "local_types": [
            "parameter",
            "technical detail"
          ],
          "iri": "Entity-the_maximum_length_of_rule-Mention-1"
        }
      ],
      "relevance": 0.5283203125
    },
    "Entity-opsupp": {
      "node_id": "opsupp",
      "disambiguation_index": 0,
      "label": "OPsupp",
      "aliases": [
        "OPsupp"
      ],
      "types": [
        "metric",
        "concept",
        "ontology path",
        "mathematical expression",
        "statistic",
        "notation",
        "abbreviation",
        "mathematical concept",
        "open path",
        "knowledge graph component",
        "rule",
        "function",
        "pathway"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The open path support of a rule, defined as the number of pairs of entities (e, e'') that satisfy both the body and head of the rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-2",
          "local_name": "OPsupp",
          "local_types": [
            "notation",
            "mathematical concept",
            "mathematical expression",
            "function"
          ],
          "iri": "Entity-opsupp-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "OPsupp",
          "local_types": [
            "concept",
            "ontology path",
            "abbreviation",
            "open path",
            "knowledge graph component",
            "pathway"
          ],
          "iri": "Entity-opsupp-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-5",
          "local_name": "OPsupp",
          "local_types": [
            "metric",
            "rule",
            "statistic"
          ],
          "iri": "Entity-opsupp-Mention-3"
        }
      ],
      "relevance": 0.52783203125
    },
    "Entity-iopsupp__r_": {
      "node_id": "iopsupp__r_",
      "disambiguation_index": 0,
      "label": "IOPsupp(r)",
      "aliases": [
        "IOPsupp(r)"
      ],
      "types": [
        "support measure",
        "metric",
        "evaluation metric",
        "evaluation function",
        "quality measure",
        "support",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The support measure of an Inverse Open Path rule, indicating the number of entities that satisfy its body.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "IOPsupp(r)",
          "local_types": [
            "support measure",
            "metric",
            "evaluation metric",
            "evaluation function",
            "quality measure",
            "support",
            "function"
          ],
          "iri": "Entity-iopsupp__r_-Mention-1"
        }
      ],
      "relevance": 0.52783203125
    },
    "Entity-we_obtain_a_simpler_tree": {
      "node_id": "we_obtain_a_simpler_tree",
      "disambiguation_index": 0,
      "label": "we obtain a simpler tree",
      "aliases": [
        "we obtain a simpler tree"
      ],
      "types": [
        "process",
        "result"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of removing branches or paths from a complex tree shape in order to create a more intuitive and concise representation with higher confidence in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-3",
          "local_name": "we obtain a simpler tree",
          "local_types": [
            "process",
            "result"
          ],
          "iri": "Entity-we_obtain_a_simpler_tree-Mention-1"
        }
      ],
      "relevance": 0.52734375
    },
    "Entity-tree_and_other_rule_pattern": {
      "node_id": "tree_and_other_rule_pattern",
      "disambiguation_index": 0,
      "label": "trees and other rule patterns",
      "aliases": [
        "trees and other rule patterns"
      ],
      "types": [
        "data structure",
        "pattern set",
        "rule pattern",
        "shape"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of rules or patterns that can be combined to form more complex tree-like structures",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "trees and other rule patterns",
          "local_types": [
            "data structure",
            "pattern set",
            "rule pattern",
            "shape"
          ],
          "iri": "Entity-tree_and_other_rule_pattern-Mention-1"
        }
      ],
      "relevance": 0.52685546875
    },
    "Entity-cover_which_is_widely_used_for_rule_learning_in_inductive_logic_programming": {
      "node_id": "cover_which_is_widely_used_for_rule_learning_in_inductive_logic_programming",
      "disambiguation_index": 0,
      "label": "cover which is widely used for rule learning in inductive logic programming",
      "aliases": [
        "cover which is widely used for rule learning in inductive logic programming"
      ],
      "types": [
        "concept",
        "rule quality metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure of explanatory power that quantifies how well a rule covers facts satisfying its head, commonly used in inductive logic programming.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-5",
          "local_name": "cover which is widely used for rule learning in inductive logic programming",
          "local_types": [
            "concept",
            "rule quality metric"
          ],
          "iri": "Entity-cover_which_is_widely_used_for_rule_learning_in_inductive_logic_programming-Mention-1"
        }
      ],
      "relevance": 0.52685546875
    },
    "Entity-knowledge_panel": {
      "node_id": "knowledge_panel",
      "disambiguation_index": 0,
      "label": "knowledge panels",
      "aliases": [
        "knowledge panels"
      ],
      "types": [
        "interface",
        "feature",
        "infobox",
        "data visualization"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A graphical representation or summary of information about a topic",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "knowledge panels",
          "local_types": [
            "interface",
            "feature",
            "infobox",
            "data visualization"
          ],
          "iri": "Entity-knowledge_panel-Mention-1"
        }
      ],
      "relevance": 0.5263671875
    },
    "Entity-the_sequence_of_path_or_branch__path1__path2__...__pathq": {
      "node_id": "the_sequence_of_path_or_branch__path1__path2__...__pathq",
      "disambiguation_index": 0,
      "label": "the sequence of paths or branches, Path1 ^ Path2 ^ ... ^ Pathq",
      "aliases": [
        "the sequence of paths or branches, Path1 ^ Path2 ^ ... ^ Pathq"
      ],
      "types": [
        "sequence",
        "paths"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The head of a tree shape in SHACL, representing the sequence of connected entities and predicates that form the structure of the shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "the sequence of paths or branches, Path1 ^ Path2 ^ ... ^ Pathq",
          "local_types": [
            "sequence",
            "paths"
          ],
          "iri": "Entity-the_sequence_of_path_or_branch__path1__path2__...__pathq-Mention-1"
        }
      ],
      "relevance": 0.5263671875
    },
    "Entity-it_doe_not_perform_any_kind_of_data_type_validation": {
      "node_id": "it_doe_not_perform_any_kind_of_data_type_validation",
      "disambiguation_index": 0,
      "label": "it does not perform any kind of data type validation",
      "aliases": [
        "it does not perform any kind of data type validation"
      ],
      "types": [
        "feature",
        "limitation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The limitation that SHACLearner does not perform any kind of data type validation refers to its inability to validate or check the types of data used in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-2",
          "local_name": "it does not perform any kind of data type validation",
          "local_types": [
            "feature",
            "limitation"
          ],
          "iri": "Entity-it_doe_not_perform_any_kind_of_data_type_validation-Mention-1"
        }
      ],
      "relevance": 0.52587890625
    },
    "Entity-class_and_type_are_named_unary_predicate": {
      "node_id": "class_and_type_are_named_unary_predicate",
      "disambiguation_index": 0,
      "label": "classes and types are named unary predicates",
      "aliases": [
        "classes and types are named unary predicates"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A concept or class membership representation in a knowledge graph, where classes and types are represented as unary predicates.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-3",
          "local_name": "classes and types are named unary predicates",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-class_and_type_are_named_unary_predicate-Mention-1"
        }
      ],
      "relevance": 0.52587890625
    },
    "Entity-formal_human-expert_evaluation": {
      "node_id": "formal_human-expert_evaluation",
      "disambiguation_index": 0,
      "label": "formal human-expert evaluation",
      "aliases": [
        "formal human-expert evaluation"
      ],
      "types": [
        "methodology",
        "evaluation method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A process for evaluating the quality and accuracy of shapes learned by SHACLEARNER, involving human experts to assess the correctness and relevance of the discovered patterns.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-1",
          "local_name": "formal human-expert evaluation",
          "local_types": [
            "methodology",
            "evaluation method"
          ],
          "iri": "Entity-formal_human-expert_evaluation-Mention-1"
        }
      ],
      "relevance": 0.52587890625
    },
    "Entity-treesupp__r_": {
      "node_id": "treesupp__r_",
      "disambiguation_index": 0,
      "label": "Treesupp(r)",
      "aliases": [
        "Treesupp(r)"
      ],
      "types": [
        "mathematical concept",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The tree support and standard confidence of a SHACL shape, calculated as the number of entities that satisfy the head of the shape divided by the total number of entities satisfying the body of the shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-5",
          "local_name": "Treesupp(r)",
          "local_types": [
            "mathematical concept",
            "function"
          ],
          "iri": "Entity-treesupp__r_-Mention-1"
        }
      ],
      "relevance": 0.525390625
    },
    "Entity-for_entity": {
      "node_id": "for_entity",
      "disambiguation_index": 0,
      "label": "For entities",
      "aliases": [
        "For entities"
      ],
      "types": [
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "SHACL shape patterns for entities that satisfy specific target predicates",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-2",
          "local_name": "For entities",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-for_entity-Mention-1"
        }
      ],
      "relevance": 0.525390625
    },
    "Entity-k_(1)": {
      "node_id": "k_(1)",
      "disambiguation_index": 1,
      "label": "K",
      "aliases": [
        "K"
      ],
      "types": [
        "notation",
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A knowledge graph, which is a pair K = (E, F), where E is a set of entities and F is a set of facts and all the entities occurring in F also occur in E.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-6",
          "local_name": "K",
          "local_types": [
            "notation",
            "variable"
          ],
          "iri": "Entity-k_(1)-Mention-1"
        }
      ],
      "relevance": 0.52490234375
    },
    "Entity-hence_(1)": {
      "node_id": "hence_(1)",
      "disambiguation_index": 1,
      "label": "Hence",
      "aliases": [
        "Hence"
      ],
      "types": [
        "principle"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The principle of obtaining a simpler shape with higher confidence in the knowledge graph by pruning a tree.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-3",
          "local_name": "Hence",
          "local_types": [
            "principle"
          ],
          "iri": "Entity-hence_(1)-Mention-1"
        }
      ],
      "relevance": 0.52490234375
    },
    "Entity-unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch": {
      "node_id": "unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch",
      "disambiguation_index": 0,
      "label": "unifying some variables that occur in predicates that occur in multiple branches",
      "aliases": [
        "unifying some variables that occur in predicates that occur in multiple branches"
      ],
      "types": [
        "algorithm",
        "process"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of combining variables that appear across multiple branches within a learned tree shape to simplify its structure and improve interpretability.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-5-Sentence-1",
          "local_name": "unifying some variables that occur in predicates that occur in multiple branches",
          "local_types": [
            "algorithm",
            "process"
          ],
          "iri": "Entity-unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch-Mention-1"
        }
      ],
      "relevance": 0.52490234375
    },
    "Entity-cp_rule": {
      "node_id": "cp_rule",
      "disambiguation_index": 0,
      "label": "CP rules",
      "aliases": [
        "CP rule",
        "CP rules"
      ],
      "types": [
        "algorithm",
        "rule type",
        "concept",
        "algorithm component",
        "logic-based inference",
        "type of rule",
        "computational process",
        "closed predicate rule",
        "rule",
        "rule set"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of logical rules used for computational processing and inference",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-5",
          "local_name": "CP rules",
          "local_types": [
            "rule type",
            "concept",
            "algorithm component",
            "logic-based inference",
            "type of rule",
            "closed predicate rule",
            "rule",
            "rule set"
          ],
          "iri": "Entity-cp_rule-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-6",
          "local_name": "CP rule",
          "local_types": [
            "computational process",
            "concept",
            "rule"
          ],
          "iri": "Entity-cp_rule-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "CP rule",
          "local_types": [
            "computational process",
            "algorithm",
            "rule"
          ],
          "iri": "Entity-cp_rule-Mention-3"
        }
      ],
      "relevance": 0.5244140625
    },
    "Entity-ideal__modified_shaclearner__-s-h_": {
      "node_id": "ideal__modified_shaclearner__-s-h_",
      "disambiguation_index": 0,
      "label": "ideal, modified SHACLEARNER (-S-H)",
      "aliases": [
        "ideal, modified SHACLEARNER (-S-H)"
      ],
      "types": [
        "methodology",
        "approach",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The ideal, modified SHACLEARNER (-S-H) refers to a methodology that generates and evaluates all possible rules up to the maximum length parameter without using sampling or heuristic pruning.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "ideal, modified SHACLEARNER (-S-H)",
          "local_types": [
            "methodology",
            "approach",
            "algorithm"
          ],
          "iri": "Entity-ideal__modified_shaclearner__-s-h_-Mention-1"
        }
      ],
      "relevance": 0.5244140625
    },
    "Entity-several_method": {
      "node_id": "several_method",
      "disambiguation_index": 0,
      "label": "several methods",
      "aliases": [
        "several methods"
      ],
      "types": [
        "methods"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Proposed approaches for automatically completing knowledge graphs by predicting missing facts, which traverse the graph in a breadth-first manner.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-3",
          "local_name": "several methods",
          "local_types": [
            "methods"
          ],
          "iri": "Entity-several_method-Mention-1"
        }
      ],
      "relevance": 0.5244140625
    },
    "Entity-the_third_rule_(1)": {
      "node_id": "the_third_rule_(1)",
      "disambiguation_index": 1,
      "label": "the third rule",
      "aliases": [
        "the third rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific SHACL shape pattern learned from DBpedia, requiring a song (x) to have at least two producers and having lower confidence than the second rule due to its more constraining nature.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-5",
          "local_name": "the third rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_third_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.5244140625
    },
    "Entity-we_report": {
      "node_id": "we_report",
      "disambiguation_index": 0,
      "label": "We report",
      "aliases": [
        "We report"
      ],
      "types": [
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The characteristics of discovered trees from knowledge graphs, including average shape complexity, branch count, and building time.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "We report",
          "local_types": [
            "paper"
          ],
          "iri": "Entity-we_report-Mention-1"
        }
      ],
      "relevance": 0.5244140625
    },
    "Entity-iopsc__r2_": {
      "node_id": "iopsc__r2_",
      "disambiguation_index": 0,
      "label": "IOPSC(r2)",
      "aliases": [
        "IOPSC(r2)"
      ],
      "types": [
        "function",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Inverse Open Path Support (IOPSC) measure for a rule r2.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-4",
          "local_name": "IOPSC(r2)",
          "local_types": [
            "function",
            "mathematical concept"
          ],
          "iri": "Entity-iopsc__r2_-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-shape_we_learn": {
      "node_id": "shape_we_learn",
      "disambiguation_index": 0,
      "label": "shapes we learn",
      "aliases": [
        "shapes we learn"
      ],
      "types": [
        "concept",
        "knowledge"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of geometric forms or patterns that are acquired through learning",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-1",
          "local_name": "shapes we learn",
          "local_types": [
            "concept",
            "knowledge"
          ],
          "iri": "Entity-shape_we_learn-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-the_head_of_r_(1)": {
      "node_id": "the_head_of_r_(1)",
      "disambiguation_index": 1,
      "label": "the head of r",
      "aliases": [
        "the head of r"
      ],
      "types": [
        "conceptual entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The head of R refers to a conceptual entity that represents the sequence of predicates (P1 ^ P2 ^ ... ^ Pn) in an Inverse Open Path rule, which corresponds to a SHACL shape.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-3",
          "local_name": "the head of r",
          "local_types": [
            "conceptual entity"
          ],
          "iri": "Entity-the_head_of_r_(1)-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-_iopsc_is_non-increasing_with_length_": {
      "node_id": "_iopsc_is_non-increasing_with_length_",
      "disambiguation_index": 0,
      "label": "(IOPSC is non-increasing with length)",
      "aliases": [
        "(IOPSC is non-increasing with length)"
      ],
      "types": [
        "property",
        "mathematical property"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The property stating that the inverse open path support of an IOP rule does not increase as the length of the rule increases.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "(IOPSC is non-increasing with length)",
          "local_types": [
            "property",
            "mathematical property"
          ],
          "iri": "Entity-_iopsc_is_non-increasing_with_length_-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-after_sampling": {
      "node_id": "after_sampling",
      "disambiguation_index": 0,
      "label": "After sampling",
      "aliases": [
        "After sampling"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of computing predicate embeddings, subject and object argument embeddings for all predicates in a sampled knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "After sampling",
          "local_types": [
            "method"
          ],
          "iri": "Entity-after_sampling-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-car2": {
      "node_id": "car2",
      "disambiguation_index": 0,
      "label": "Car=2",
      "aliases": [
        "Car=2"
      ],
      "types": [
        "equation",
        "mathematical notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The cardinality value of an Inverse Open Path (IOP) rule, specifically set to 2 in this example.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-7",
          "local_name": "Car=2",
          "local_types": [
            "equation",
            "mathematical notation"
          ],
          "iri": "Entity-car2-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-the_first_annotation_value": {
      "node_id": "the_first_annotation_value",
      "disambiguation_index": 0,
      "label": "the first annotation value",
      "aliases": [
        "the first annotation value"
      ],
      "types": [
        "value"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The score or confidence level of a mined tree shape in the SHACL learning process, presented as part of an example tree structure.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-2",
          "local_name": "the first annotation value",
          "local_types": [
            "value"
          ],
          "iri": "Entity-the_first_annotation_value-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-rescal": {
      "node_id": "rescal",
      "disambiguation_index": 0,
      "label": "RESCAL",
      "aliases": [
        "RESCAL"
      ],
      "types": [
        "algorithm",
        "method",
        "embedding learner",
        "machine learning",
        "machine learning model",
        "tool"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A machine learning algorithm or method that learns embeddings.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "RESCAL",
          "local_types": [
            "algorithm",
            "machine learning model",
            "tool",
            "embedding learner"
          ],
          "iri": "Entity-rescal-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "RESCAL",
          "local_types": [
            "algorithm",
            "tool",
            "method",
            "embedding learner"
          ],
          "iri": "Entity-rescal-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-2",
          "local_name": "RESCAL",
          "local_types": [
            "algorithm",
            "method",
            "machine learning",
            "machine learning model",
            "tool"
          ],
          "iri": "Entity-rescal-Mention-3"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "RESCAL",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-rescal-Mention-4"
        }
      ],
      "relevance": 0.5234375
    },
    "Entity-pathfinding__k___pt__p__a__k_": {
      "node_id": "pathfinding__k___pt__p__a__k_",
      "disambiguation_index": 0,
      "label": "PathFinding(K', Pt, P, A, k)",
      "aliases": [
        "PathFinding(K', Pt, P, A, k)"
      ],
      "types": [
        "function call",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A function call that adds a path finding rule of length k from knowledge graph K with predicate Pt and embeddings P and A.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-9",
          "local_name": "PathFinding(K', Pt, P, A, k)",
          "local_types": [
            "function call",
            "function"
          ],
          "iri": "Entity-pathfinding__k___pt__p__a__k_-Mention-1"
        }
      ],
      "relevance": 0.5234375
    },
    "Entity-this_may_be_because": {
      "node_id": "this_may_be_because",
      "disambiguation_index": 0,
      "label": "This may be because",
      "aliases": [
        "This may be because"
      ],
      "types": [
        "reason"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The reason why using the complete KG for learning rules about all target predicates may negatively impact the quality of learned embeddings",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-2",
          "local_name": "This may be because",
          "local_types": [
            "reason"
          ],
          "iri": "Entity-this_may_be_because-Mention-1"
        }
      ],
      "relevance": 0.5234375
    },
    "Entity-path": {
      "node_id": "path",
      "disambiguation_index": 0,
      "label": "path",
      "aliases": [
        "paths",
        "path"
      ],
      "types": [
        "template",
        "network structure",
        "concept",
        "structure",
        "mathematical structure",
        "computing",
        "computing concept",
        "data structure",
        "sequence",
        "graph theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sequence or series of connected elements or nodes that can be traversed in order.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "path",
          "local_types": [
            "data structure",
            "mathematical structure",
            "computing concept",
            "concept"
          ],
          "iri": "Entity-path-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "paths",
          "local_types": [
            "concept",
            "mathematical structure"
          ],
          "iri": "Entity-path-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-6",
          "local_name": "path",
          "local_types": [
            "graph theory",
            "network structure"
          ],
          "iri": "Entity-path-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-1",
          "local_name": "path",
          "local_types": [
            "concept",
            "template"
          ],
          "iri": "Entity-path-Mention-4"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-2",
          "local_name": "path",
          "local_types": [
            "sequence",
            "data structure"
          ],
          "iri": "Entity-path-Mention-5"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-3",
          "local_name": "path",
          "local_types": [
            "template",
            "structure"
          ],
          "iri": "Entity-path-Mention-6"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-4",
          "local_name": "paths",
          "local_types": [
            "graph theory",
            "data structure"
          ],
          "iri": "Entity-path-Mention-7"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-4",
          "local_name": "path",
          "local_types": [
            "graph theory",
            "computing"
          ],
          "iri": "Entity-path-Mention-8"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-_open_path__opsupp__opsc__ophc_": {
      "node_id": "_open_path__opsupp__opsc__ophc_",
      "disambiguation_index": 0,
      "label": "(open path: OPsupp, OPSC, OPHC)",
      "aliases": [
        "(open path: OPsupp, OPSC, OPHC)"
      ],
      "types": [
        "OPSC",
        "OPsupp",
        "OPHC",
        "notation",
        "path"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure of support for an open path rule that defines its confidence and head coverage.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "(open path: OPsupp, OPSC, OPHC)",
          "local_types": [
            "OPSC",
            "OPsupp",
            "OPHC",
            "notation",
            "path"
          ],
          "iri": "Entity-_open_path__opsupp__opsc__ophc_-Mention-1"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-rule_to_express_not_only_the_necessity_of_a_chain_of_fact__the_fact_in_the_head_of_the_iop_rule_": {
      "node_id": "rule_to_express_not_only_the_necessity_of_a_chain_of_fact__the_fact_in_the_head_of_the_iop_rule_",
      "disambiguation_index": 0,
      "label": "rules to express not only the necessity of a chain of facts (the facts in the head of the IOP rule)",
      "aliases": [
        "rules to express not only the necessity of a chain of facts (the facts in the head of the IOP rule)"
      ],
      "types": [
        "rule",
        "IOP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "IOP rules annotated with cardinality, which specify both the existence and number of different chains of facts that should exist.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "rules to express not only the necessity of a chain of facts (the facts in the head of the IOP rule)",
          "local_types": [
            "rule",
            "IOP rule"
          ],
          "iri": "Entity-rule_to_express_not_only_the_necessity_of_a_chain_of_fact__the_fact_in_the_head_of_the_iop_rule_-Mention-1"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-here_(1)": {
      "node_id": "here_(1)",
      "disambiguation_index": 1,
      "label": "Here",
      "aliases": [
        "Here"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A notation that refers to a path over connected entities present in a knowledge graph, used as a building block for more complex shapes such as trees.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-2",
          "local_name": "Here",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-here_(1)-Mention-1"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-5__esample__union__from_i1_to_l__of_ei": {
      "node_id": "5__esample__union__from_i1_to_l__of_ei",
      "disambiguation_index": 0,
      "label": "5: Esample = union (from i=1 to l) of Ei",
      "aliases": [
        "5: Esample = union (from i=1 to l) of Ei"
      ],
      "types": [
        "code snippet"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of sampled entities for a target predicate, containing information needed for learning Inverse Open Path rules with up to l atoms.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-9",
          "local_name": "5: Esample = union (from i=1 to l) of Ei",
          "local_types": [
            "code snippet"
          ],
          "iri": "Entity-5__esample__union__from_i1_to_l__of_ei-Mention-1"
        }
      ],
      "relevance": 0.5224609375
    },
    "Entity-6__tree__treesupp__treesc_": {
      "node_id": "6__tree__treesupp__treesc_",
      "disambiguation_index": 0,
      "label": "6 (Tree: Treesupp, TreeSC)",
      "aliases": [
        "6 (Tree: Treesupp, TreeSC)"
      ],
      "types": [
        "reference",
        "citation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Definition 6 of a tree shape in SHACL, which defines the support and standard confidence measures for trees.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-1",
          "local_name": "6 (Tree: Treesupp, TreeSC)",
          "local_types": [
            "reference",
            "citation"
          ],
          "iri": "Entity-6__tree__treesupp__treesc_-Mention-1"
        }
      ],
      "relevance": 0.5224609375
    },
    "Entity-two_scoring_function": {
      "node_id": "two_scoring_function",
      "disambiguation_index": 0,
      "label": "two scoring functions",
      "aliases": [
        "two scoring functions"
      ],
      "types": [
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Two scoring functions used to heuristically mine the space of all possible Inverse Open Path (IOP) rules, producing a reduced set of candidate IOP rules.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "two scoring functions",
          "local_types": [
            "function"
          ],
          "iri": "Entity-two_scoring_function-Mention-1"
        }
      ],
      "relevance": 0.5224609375
    },
    "Entity-body_r": {
      "node_id": "body_r",
      "disambiguation_index": 0,
      "label": "body_r",
      "aliases": [
        "body_r"
      ],
      "types": [
        "notation",
        "variable",
        "mathematical concept",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The support of a closed-path rule 'body_r' that counts the instances for which both the body and head are satisfied in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "body_r",
          "local_types": [
            "notation",
            "variable",
            "mathematical concept",
            "function"
          ],
          "iri": "Entity-body_r-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.": {
      "node_id": "a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.",
      "disambiguation_index": 0,
      "label": "A path is a sequence of predicates connected by closed intermediate variables but terminating with open variables at both ends.",
      "aliases": [
        "A path is a sequence of predicates connected by closed intermediate variables but terminating with open variables at both ends.",
        "A path"
      ],
      "types": [
        "concept",
        "definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "In the context of SHACL shapes, a path refers to a sequence of predicates connected by closed intermediate variables and terminated with open variables at both ends.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-2",
          "local_name": "A path is a sequence of predicates connected by closed intermediate variables but terminating with open variables at both ends.",
          "local_types": [
            "definition",
            "concept"
          ],
          "iri": "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-2",
          "local_name": "A path",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.-Mention-2"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-rule_and_shape": {
      "node_id": "rule_and_shape",
      "disambiguation_index": 0,
      "label": "rules and shapes",
      "aliases": [
        "rules and shapes"
      ],
      "types": [
        "constraints",
        "specifications"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of constraints or specifications that govern the formation, structure, or behavior of geometric entities.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-2",
          "local_name": "rules and shapes",
          "local_types": [
            "constraints",
            "specifications"
          ],
          "iri": "Entity-rule_and_shape-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg_.": {
      "node_id": "if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg_.",
      "disambiguation_index": 0,
      "label": "if there exist entities e1, ..., en\u22121 in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(en\u22121, e') are facts in the KG.",
      "aliases": [
        "if there exist entities e1, ..., en\u22121 in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(en\u22121, e') are facts in the KG."
      ],
      "types": [
        "condition",
        "facts_in_KG"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A condition for a pair of entities (e, e') to satisfy the body of an open path rule r.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "if there exist entities e1, ..., en\u22121 in the KG such that P1(e, e1), P2(e1, e2), ..., Pn(en\u22121, e') are facts in the KG.",
          "local_types": [
            "condition",
            "facts_in_KG"
          ],
          "iri": "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg_.-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-the_entity_satisfying_both_condition": {
      "node_id": "the_entity_satisfying_both_condition",
      "disambiguation_index": 0,
      "label": "the entities satisfying both conditions",
      "aliases": [
        "the entities satisfying both conditions"
      ],
      "types": [
        "entities",
        "conditions"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that satisfy both the body and head of a given IOP rule, as calculated through matrix operations on an adjacency representation of a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "the entities satisfying both conditions",
          "local_types": [
            "entities",
            "conditions"
          ],
          "iri": "Entity-the_entity_satisfying_both_condition-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-when_car1": {
      "node_id": "when_car1",
      "disambiguation_index": 0,
      "label": "when Car=1",
      "aliases": [
        "when Car=1"
      ],
      "types": [
        "condition",
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The specific instance of an IOP rule where the cardinality threshold is set to 1, used for calculating quality measures such as IOPSC and IOPHC.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "when Car=1",
          "local_types": [
            "condition",
            "equation"
          ],
          "iri": "Entity-when_car1-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-the_two_type-like_predicate_from_dbpedia_3.8_and_the_one_from_wikidata": {
      "node_id": "the_two_type-like_predicate_from_dbpedia_3.8_and_the_one_from_wikidata",
      "disambiguation_index": 0,
      "label": "the two type-like predicates from DBpedia 3.8 and the one from Wikidata",
      "aliases": [
        "the two type-like predicates from DBpedia 3.8 and the one from Wikidata"
      ],
      "types": [
        "Wikidata",
        "predicate",
        "DBpedia"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Two type-like predicates from DBpedia 3.8, one of which has at least one hundred instances, used to generate unary predicates and facts for learning SHACL shapes.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-1",
          "local_name": "the two type-like predicates from DBpedia 3.8 and the one from Wikidata",
          "local_types": [
            "Wikidata",
            "predicate",
            "DBpedia"
          ],
          "iri": "Entity-the_two_type-like_predicate_from_dbpedia_3.8_and_the_one_from_wikidata-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-z0": {
      "node_id": "z0",
      "disambiguation_index": 0,
      "label": "z0",
      "aliases": [
        "z0"
      ],
      "types": [
        "specific variable",
        "mathematical entity",
        "parameter",
        "mathematical concept",
        "binding",
        "variable",
        "shared variable",
        "identifier",
        "term"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A specific variable or parameter used to represent a binding entity in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "z0",
          "local_types": [
            "mathematical entity",
            "parameter",
            "variable"
          ],
          "iri": "Entity-z0-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "z0",
          "local_types": [
            "specific variable",
            "parameter",
            "identifier",
            "variable"
          ],
          "iri": "Entity-z0-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "z0",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-z0-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-6",
          "local_name": "z0",
          "local_types": [
            "variable",
            "term"
          ],
          "iri": "Entity-z0-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "z0",
          "local_types": [
            "parameter",
            "shared variable",
            "binding",
            "variable"
          ],
          "iri": "Entity-z0-Mention-5"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-6",
          "local_name": "z0",
          "local_types": [
            "variable",
            "mathematical concept"
          ],
          "iri": "Entity-z0-Mention-6"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-graph_database": {
      "node_id": "graph_database",
      "disambiguation_index": 0,
      "label": "graph databases",
      "aliases": [
        "graph databases"
      ],
      "types": [
        "data structure",
        "computing concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of database that uses graphs to store and query structured and unstructured data.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "graph databases",
          "local_types": [
            "data structure",
            "computing concept"
          ],
          "iri": "Entity-graph_database-Mention-1"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-r_be_an_op_rule_of_the_given_form_.": {
      "node_id": "r_be_an_op_rule_of_the_given_form_.",
      "disambiguation_index": 0,
      "label": "r be an OP rule of the given form.",
      "aliases": [
        "r be an OP rule of the given form."
      ],
      "types": [
        "rule",
        "form"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An open path (OP) rule of a specific form, defined as P1(z0, z1) \u2227 P2(z1, z2) \u2227 ... \u2227 Pn(zn\u22121, y) \u2192 \u2203x Pt(x, z0), where Pi is a predicate in the knowledge graph and each zi are entity variables.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "r be an OP rule of the given form.",
          "local_types": [
            "rule",
            "form"
          ],
          "iri": "Entity-r_be_an_op_rule_of_the_given_form_.-Mention-1"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-the_formalism_of_constraint": {
      "node_id": "the_formalism_of_constraint",
      "disambiguation_index": 0,
      "label": "the formalism of constraints",
      "aliases": [
        "the formalism of constraints"
      ],
      "types": [
        "formalism",
        "constraint"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A framework or set of rules governing the acquisition and representation of knowledge in schema-free knowledge bases, determining the scope of information that can be learned.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-2",
          "local_name": "the formalism of constraints",
          "local_types": [
            "formalism",
            "constraint"
          ],
          "iri": "Entity-the_formalism_of_constraint-Mention-1"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-open_path_head_coverage__ophc_": {
      "node_id": "open_path_head_coverage__ophc_",
      "disambiguation_index": 0,
      "label": "open path head coverage (OPHC)",
      "aliases": [
        "open path head coverage (OPHC)"
      ],
      "types": [
        "metric",
        "evaluation method",
        "coverage metric",
        "evaluation measure",
        "measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure of how well an Open Path rule covers its predicted heads, indicating the proportion of actual head entities that match the prediction.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "open path head coverage (OPHC)",
          "local_types": [
            "metric",
            "evaluation method",
            "coverage metric",
            "evaluation measure",
            "measure"
          ],
          "iri": "Entity-open_path_head_coverage__ophc_-Mention-1"
        }
      ],
      "relevance": 0.52099609375
    },
    "Entity-the_average_number": {
      "node_id": "the_average_number",
      "disambiguation_index": 0,
      "label": "the average number",
      "aliases": [
        "The average number",
        "the average number"
      ],
      "types": [
        "statistic"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "the proportion or percentage of branches in the mined tree shapes compared to the total number of IOP rules",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "the average number",
          "local_types": [
            "statistic"
          ],
          "iri": "Entity-the_average_number-Mention-1"
        }
      ],
      "relevance": 0.52099609375
    },
    "Entity-treesc__r_": {
      "node_id": "treesc__r_",
      "disambiguation_index": 0,
      "label": "TreeSC(r)",
      "aliases": [
        "TreeSC(r)"
      ],
      "types": [
        "mathematical concept",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The tree standard confidence of a SHACL shape, representing the proportion of entities that satisfy both the head and body of the shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-5",
          "local_name": "TreeSC(r)",
          "local_types": [
            "mathematical concept",
            "function"
          ],
          "iri": "Entity-treesc__r_-Mention-1"
        }
      ],
      "relevance": 0.5205078125
    },
    "Entity-a_branch": {
      "node_id": "a_branch",
      "disambiguation_index": 0,
      "label": "a branch",
      "aliases": [
        "a branch"
      ],
      "types": [
        "branch"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A path or sequence of predicates and nodes in a tree shape, representing a specific pattern or structure within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "a branch",
          "local_types": [
            "branch"
          ],
          "iri": "Entity-a_branch-Mention-1"
        }
      ],
      "relevance": 0.5205078125
    },
    "Entity-more_rule_of_lower_quality": {
      "node_id": "more_rule_of_lower_quality",
      "disambiguation_index": 0,
      "label": "more rules of lower quality",
      "aliases": [
        "more rules of lower quality"
      ],
      "types": [
        "concept",
        "rule set"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept or rule set that SHACLEARNER fails to learn due to its pruning methods, resulting in a decrease in the number of discovered rules as their quality decreases.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-2",
          "local_name": "more rules of lower quality",
          "local_types": [
            "concept",
            "rule set"
          ],
          "iri": "Entity-more_rule_of_lower_quality-Mention-1"
        }
      ],
      "relevance": 0.52001953125
    },
    "Entity-so-called_closed_path__cp__rule": {
      "node_id": "so-called_closed_path__cp__rule",
      "disambiguation_index": 0,
      "label": "so-called closed path (CP) rules",
      "aliases": [
        "so-called closed path (CP) rules"
      ],
      "types": [
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or principles that are considered to be definitive or authoritative, particularly with regards to a specific methodology or framework.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-3",
          "local_name": "so-called closed path (CP) rules",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-so-called_closed_path__cp__rule-Mention-1"
        }
      ],
      "relevance": 0.51953125
    },
    "Entity-r_": {
      "node_id": "r_",
      "disambiguation_index": 0,
      "label": "r'",
      "aliases": [
        "r'",
        "R'"
      ],
      "types": [
        "notation",
        "symbol",
        "mathematical concept",
        "variable",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept or notation representing a modified version of an initial object processing (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "r'",
          "local_types": [
            "mathematical concept",
            "rule"
          ],
          "iri": "Entity-r_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-7",
          "local_name": "R'",
          "local_types": [
            "notation",
            "symbol",
            "variable"
          ],
          "iri": "Entity-r_-Mention-2"
        }
      ],
      "relevance": 0.51953125
    },
    "Entity-structural_feature_such_a_depth_and_width": {
      "node_id": "structural_feature_such_a_depth_and_width",
      "disambiguation_index": 0,
      "label": "structural features such as depth and width",
      "aliases": [
        "structural features such as depth and width"
      ],
      "types": [
        "features"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Structural characteristics of SHACL shapes, including their complexity (depth) and breadth (width), which can vary greatly.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-3",
          "local_name": "structural features such as depth and width",
          "local_types": [
            "features"
          ],
          "iri": "Entity-structural_feature_such_a_depth_and_width-Mention-1"
        }
      ],
      "relevance": 0.51953125
    },
    "Entity-to_assess_the_quality_of_op_rule": {
      "node_id": "to_assess_the_quality_of_op_rule",
      "disambiguation_index": 0,
      "label": "To assess the quality of OP rules",
      "aliases": [
        "To assess the quality of OP rules"
      ],
      "types": [
        "evaluation",
        "quality assessment"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of evaluating the quality of Open Path (OP) rules, using metrics such as open path standard confidence and open path head coverage.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "To assess the quality of OP rules",
          "local_types": [
            "evaluation",
            "quality assessment"
          ],
          "iri": "Entity-to_assess_the_quality_of_op_rule-Mention-1"
        }
      ],
      "relevance": 0.51953125
    },
    "Entity-predicting_missing_fact": {
      "node_id": "predicting_missing_fact",
      "disambiguation_index": 0,
      "label": "predicting missing facts",
      "aliases": [
        "predicting missing facts"
      ],
      "types": [
        "task",
        "fact prediction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of automatically completing knowledge graphs by filling in gaps and predicting unknown relationships between entities.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-3",
          "local_name": "predicting missing facts",
          "local_types": [
            "task",
            "fact prediction"
          ],
          "iri": "Entity-predicting_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.51953125
    },
    "Entity-annotated_iop_rule": {
      "node_id": "annotated_iop_rule",
      "disambiguation_index": 0,
      "label": "annotated IOP rules",
      "aliases": [
        "annotated IOP rules"
      ],
      "types": [
        "ontology",
        "rule-based system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of rules that have been annotated with additional information or semantics.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "annotated IOP rules",
          "local_types": [
            "ontology",
            "rule-based system"
          ],
          "iri": "Entity-annotated_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.51904296875
    },
    "Entity-building_block_for_more_complex_tree": {
      "node_id": "building_block_for_more_complex_tree",
      "disambiguation_index": 0,
      "label": "building blocks for more complex trees",
      "aliases": [
        "building blocks for more complex trees"
      ],
      "types": [
        "approach",
        "tree structure"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A sequence of predicates connected by closed intermediate variables but terminating with open variables at both ends that can be used as a building block for more complex tree shapes.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "building blocks for more complex trees",
          "local_types": [
            "approach",
            "tree structure"
          ],
          "iri": "Entity-building_block_for_more_complex_tree-Mention-1"
        }
      ],
      "relevance": 0.5185546875
    },
    "Entity-the_head_of_the_iop_rule": {
      "node_id": "the_head_of_the_iop_rule",
      "disambiguation_index": 0,
      "label": "the head of the IOP rule",
      "aliases": [
        "the head of the IOP rule"
      ],
      "types": [
        "context"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A part of an Inverse Open Path (IOP) rule that specifies minimum cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "the head of the IOP rule",
          "local_types": [
            "context"
          ],
          "iri": "Entity-the_head_of_the_iop_rule-Mention-1"
        }
      ],
      "relevance": 0.5185546875
    },
    "Entity-we_sum_each_column_and_transpose_to_obtain_the_vector_v2__pt_": {
      "node_id": "we_sum_each_column_and_transpose_to_obtain_the_vector_v2__pt_",
      "disambiguation_index": 0,
      "label": "we sum each column and transpose to obtain the vector V^2(Pt)",
      "aliases": [
        "we sum each column and transpose to obtain the vector V^2(Pt)"
      ],
      "types": [
        "algorithm",
        "mathematical operation",
        "mathematical concept",
        "operation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The computation of entities that satisfy a given rule's body or head, used for calculating quality measures such as IOPSC and IOPHC.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "we sum each column and transpose to obtain the vector V^2(Pt)",
          "local_types": [
            "algorithm",
            "mathematical operation",
            "mathematical concept",
            "operation"
          ],
          "iri": "Entity-we_sum_each_column_and_transpose_to_obtain_the_vector_v2__pt_-Mention-1"
        }
      ],
      "relevance": 0.5185546875
    },
    "Entity-they": {
      "node_id": "they",
      "disambiguation_index": 0,
      "label": "they",
      "aliases": [
        "they"
      ],
      "types": [
        "dataset",
        "collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or dataset of knowledge graphs",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "they",
          "local_types": [
            "dataset",
            "collection"
          ],
          "iri": "Entity-they-Mention-1"
        }
      ],
      "relevance": 0.51806640625
    },
    "Entity-they_are_typically_incomplete": {
      "node_id": "they_are_typically_incomplete",
      "disambiguation_index": 0,
      "label": "they are typically incomplete",
      "aliases": [
        "they are typically incomplete"
      ],
      "types": [
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Knowledge Graphs",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "they are typically incomplete",
          "local_types": [
            "property"
          ],
          "iri": "Entity-they_are_typically_incomplete-Mention-1"
        }
      ],
      "relevance": 0.51806640625
    },
    "Entity-the_presentation": {
      "node_id": "the_presentation",
      "disambiguation_index": 0,
      "label": "The presentation",
      "aliases": [
        "The presentation"
      ],
      "types": [
        "presentation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A formal description or expression of a specific shape pattern that can be used to validate, edit, or gain insight into knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "The presentation",
          "local_types": [
            "presentation"
          ],
          "iri": "Entity-the_presentation-Mention-1"
        }
      ],
      "relevance": 0.51806640625
    },
    "Entity-schema_constraint": {
      "node_id": "schema_constraint",
      "disambiguation_index": 0,
      "label": "schema constraints",
      "aliases": [
        "schema constraints"
      ],
      "types": [
        "guidelines",
        "constraint",
        "data validation rule",
        "rules"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Rules or guidelines that govern data validation and ensure its consistency",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-4",
          "local_name": "schema constraints",
          "local_types": [
            "guidelines",
            "constraint",
            "data validation rule",
            "rules"
          ],
          "iri": "Entity-schema_constraint-Mention-1"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-cardinality_of_an_iop_rule__car": {
      "node_id": "cardinality_of_an_iop_rule__car",
      "disambiguation_index": 0,
      "label": "Cardinality of an IOP rule, Car",
      "aliases": [
        "Cardinality of an IOP rule, Car"
      ],
      "types": [
        "concept",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The cardinality of a rule within an Input/Output Process (IOP), denoted by 'Car', which represents the number or quantity of inputs and outputs allowed for that specific process.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-1",
          "local_name": "Cardinality of an IOP rule, Car",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-cardinality_of_an_iop_rule__car-Mention-1"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-this_feature_is_important_since_learning_partially_instantiated_shape_can_cause_an_explosion_in_the_space_of_possible_shape": {
      "node_id": "this_feature_is_important_since_learning_partially_instantiated_shape_can_cause_an_explosion_in_the_space_of_possible_shape",
      "disambiguation_index": 0,
      "label": "This feature is important since learning partially instantiated shapes can cause an explosion in the space of possible shapes",
      "aliases": [
        "This feature is important since learning partially instantiated shapes can cause an explosion in the space of possible shapes"
      ],
      "types": [
        "feature",
        "importance",
        "explosion"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The ability to present class and type information as unary predicates, allowing for fully abstracted (entity-free) shape learning instead of partially instantiated ones.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-2",
          "local_name": "This feature is important since learning partially instantiated shapes can cause an explosion in the space of possible shapes",
          "local_types": [
            "feature",
            "importance",
            "explosion"
          ],
          "iri": "Entity-this_feature_is_important_since_learning_partially_instantiated_shape_can_cause_an_explosion_in_the_space_of_possible_shape-Mention-1"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-poor_quality_rule": {
      "node_id": "poor_quality_rule",
      "disambiguation_index": 0,
      "label": "poor quality rules",
      "aliases": [
        "poor quality rules"
      ],
      "types": [
        "rule set",
        "algorithmic process"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Rules that have low confidence and relevance, as measured by IOPSC and IOPHC respectively.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-5",
          "local_name": "poor quality rules",
          "local_types": [
            "rule set",
            "algorithmic process"
          ],
          "iri": "Entity-poor_quality_rule-Mention-1"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-the_row_index": {
      "node_id": "the_row_index",
      "disambiguation_index": 0,
      "label": "The row index",
      "aliases": [
        "The row index"
      ],
      "types": [
        "index"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The row index refers to a numerical value indicating the position or location of an entity within a set, used for identifying and counting entities that satisfy specific conditions in the context of SHACL shape learning from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "The row index",
          "local_types": [
            "index"
          ],
          "iri": "Entity-the_row_index-Mention-1"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-rule": {
      "node_id": "rule",
      "disambiguation_index": 0,
      "label": "rules",
      "aliases": [
        "rule",
        "Rules",
        "rules"
      ],
      "types": [
        "algorithmic construct",
        "expert system",
        "guideline",
        "decision-making process",
        "computational process",
        "conceptual framework",
        "standard",
        "algorithmic concept",
        "knowledge base",
        "computer science concept",
        "computational concept",
        "algorithmic process",
        "grammar rule",
        "term",
        "computational rule",
        "rule-based system",
        "computer program",
        "pattern",
        "knowledge representation",
        "linguistic concept",
        "rule",
        "software rule",
        "logical statement",
        "logical statements",
        "logic",
        "computational procedure",
        "constraint",
        "notation",
        "process",
        "algorithmic instruction",
        "artificial intelligence concept",
        "rule set",
        "mathematical structure",
        "logical structure",
        "algorithmic structure",
        "algorithm",
        "concept",
        "computer science",
        "mathematical concept",
        "algorithmic rule",
        "data structure",
        "linguistic rule",
        "regulation",
        "logical construct",
        "logical rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of principles or guidelines that dictate a specific behavior or decision-making process.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "constraint",
            "logic"
          ],
          "iri": "Entity-rule-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "algorithmic structure",
            "logical construct"
          ],
          "iri": "Entity-rule-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "conceptual framework"
          ],
          "iri": "Entity-rule-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-5",
          "local_name": "rule",
          "local_types": [
            "linguistic concept",
            "grammar rule"
          ],
          "iri": "Entity-rule-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-6",
          "local_name": "rule",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-rule-Mention-5"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "guideline",
            "concept",
            "pattern"
          ],
          "iri": "Entity-rule-Mention-6"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "Rules",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-rule-Mention-7"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "rule",
          "local_types": [
            "logical rule",
            "algorithmic process"
          ],
          "iri": "Entity-rule-Mention-8"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-4",
          "local_name": "rule",
          "local_types": [
            "conceptual framework",
            "logical structure"
          ],
          "iri": "Entity-rule-Mention-9"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-2",
          "local_name": "rule",
          "local_types": [
            "computational procedure",
            "algorithmic process",
            "mathematical concept",
            "logical construct"
          ],
          "iri": "Entity-rule-Mention-10"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "computational process",
            "algorithmic rule",
            "logical construct"
          ],
          "iri": "Entity-rule-Mention-11"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-4",
          "local_name": "rules",
          "local_types": [
            "algorithm",
            "rule set"
          ],
          "iri": "Entity-rule-Mention-12"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "rules",
          "local_types": [
            "logical rule",
            "knowledge representation"
          ],
          "iri": "Entity-rule-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "rule",
          "local_types": [
            "logical construct",
            "mathematical concept"
          ],
          "iri": "Entity-rule-Mention-14"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "logical construct",
            "mathematical concept"
          ],
          "iri": "Entity-rule-Mention-15"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "rule set",
            "algorithmic concept"
          ],
          "iri": "Entity-rule-Mention-16"
        },
        {
          "reference": "Section-6-Paragraph-8-Sentence-2",
          "local_name": "rule",
          "local_types": [
            "mathematical concept",
            "notation"
          ],
          "iri": "Entity-rule-Mention-17"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-1",
          "local_name": "Rules",
          "local_types": [
            "mathematical structure",
            "concept",
            "rule"
          ],
          "iri": "Entity-rule-Mention-18"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "rule",
          "local_types": [
            "concept",
            "pattern"
          ],
          "iri": "Entity-rule-Mention-19"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "rule",
          "local_types": [
            "linguistic rule",
            "grammar rule"
          ],
          "iri": "Entity-rule-Mention-20"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "rule",
          "local_types": [
            "mathematical concept",
            "algorithmic structure"
          ],
          "iri": "Entity-rule-Mention-21"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "rule",
          "local_types": [
            "algorithmic instruction",
            "computational process"
          ],
          "iri": "Entity-rule-Mention-22"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "term",
            "notation"
          ],
          "iri": "Entity-rule-Mention-23"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-4",
          "local_name": "rule",
          "local_types": [
            "logical construct",
            "mathematical concept"
          ],
          "iri": "Entity-rule-Mention-24"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "computer science",
            "algorithm"
          ],
          "iri": "Entity-rule-Mention-25"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-3",
          "local_name": "rule",
          "local_types": [
            "concept",
            "algorithm"
          ],
          "iri": "Entity-rule-Mention-26"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-4",
          "local_name": "rule",
          "local_types": [
            "decision-making process",
            "guideline"
          ],
          "iri": "Entity-rule-Mention-27"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-5",
          "local_name": "rules",
          "local_types": [
            "algorithm",
            "guideline"
          ],
          "iri": "Entity-rule-Mention-28"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-5",
          "local_name": "rule",
          "local_types": [
            "knowledge representation",
            "data structure"
          ],
          "iri": "Entity-rule-Mention-29"
        },
        {
          "reference": "Section-15-Paragraph-2-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "rule set",
            "concept"
          ],
          "iri": "Entity-rule-Mention-30"
        },
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "regulation",
            "standard"
          ],
          "iri": "Entity-rule-Mention-31"
        },
        {
          "reference": "Section-15-Paragraph-2-Sentence-4",
          "local_name": "rules",
          "local_types": [
            "algorithm",
            "process"
          ],
          "iri": "Entity-rule-Mention-32"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-rule-Mention-33"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "concept",
            "algorithm"
          ],
          "iri": "Entity-rule-Mention-34"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "knowledge base",
            "algorithmic construct"
          ],
          "iri": "Entity-rule-Mention-35"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-6",
          "local_name": "rules",
          "local_types": [
            "knowledge base",
            "expert system"
          ],
          "iri": "Entity-rule-Mention-36"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-4",
          "local_name": "rule",
          "local_types": [
            "regulation",
            "guideline"
          ],
          "iri": "Entity-rule-Mention-37"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-1",
          "local_name": "rule",
          "local_types": [
            "conceptual framework",
            "algorithmic process"
          ],
          "iri": "Entity-rule-Mention-38"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "rule",
          "local_types": [
            "logical construct",
            "computational rule"
          ],
          "iri": "Entity-rule-Mention-39"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-4",
          "local_name": "rules",
          "local_types": [
            "computer program",
            "logical statements"
          ],
          "iri": "Entity-rule-Mention-40"
        },
        {
          "reference": "Section-16-Paragraph-5-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "computer science concept",
            "artificial intelligence concept"
          ],
          "iri": "Entity-rule-Mention-41"
        },
        {
          "reference": "Section-16-Paragraph-5-Sentence-4",
          "local_name": "rules",
          "local_types": [
            "software rule",
            "computer program"
          ],
          "iri": "Entity-rule-Mention-42"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "logical statement",
            "computational concept"
          ],
          "iri": "Entity-rule-Mention-43"
        },
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "concept",
            "rule-based system",
            "pattern",
            "computational concept",
            "logical statement",
            "rule set"
          ],
          "iri": "Entity-rule-Mention-44"
        },
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "computational concept",
            "algorithmic instruction",
            "computational rule",
            "logical statement"
          ],
          "iri": "Entity-rule-Mention-45"
        },
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "logical statement",
            "computational concept"
          ],
          "iri": "Entity-rule-Mention-46"
        }
      ],
      "relevance": 0.5166015625
    },
    "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule": {
      "node_id": "along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule",
      "disambiguation_index": 0,
      "label": "along a path of entities that satisfy a chain of predicates in the rule",
      "aliases": [
        "along a path of entities that satisfy a chain of predicates in the rule"
      ],
      "types": [
        "path",
        "entities",
        "satisfying",
        "chain",
        "predicates"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A path connecting entities that satisfy a chain of predicates defined by an IOP rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "along a path of entities that satisfy a chain of predicates in the rule",
          "local_types": [
            "path",
            "entities",
            "satisfying",
            "chain",
            "predicates"
          ],
          "iri": "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule-Mention-1"
        }
      ],
      "relevance": 0.5166015625
    },
    "Entity-rdf_graph": {
      "node_id": "rdf_graph",
      "disambiguation_index": 0,
      "label": "RDF graph",
      "aliases": [
        "RDF graph"
      ],
      "types": [
        "semantic web technology",
        "graph",
        "graph data structure",
        "data format",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A data structure that represents relationships between resources and their properties using standardized vocabulary.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "RDF graph",
          "local_types": [
            "semantic web technology",
            "graph",
            "graph data structure",
            "data format",
            "data structure"
          ],
          "iri": "Entity-rdf_graph-Mention-1"
        }
      ],
      "relevance": 0.51611328125
    },
    "Entity-pk": {
      "node_id": "pk",
      "disambiguation_index": 0,
      "label": "Pk",
      "aliases": [
        "Pk"
      ],
      "types": [
        "pattern",
        "knowledge pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge pattern or rule that represents a specific relationship between entities.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "Pk",
          "local_types": [
            "pattern",
            "knowledge pattern"
          ],
          "iri": "Entity-pk-Mention-1"
        }
      ],
      "relevance": 0.51611328125
    },
    "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable": {
      "node_id": "a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "disambiguation_index": 0,
      "label": "a closed path, or single unbroken loop of links between the variables",
      "aliases": [
        "a closed path, or single unbroken loop of links between the variables"
      ],
      "types": [
        "path",
        "loop",
        "links",
        "variables"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of graph pattern that represents a continuous sequence of relationships between entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-6",
          "local_name": "a closed path, or single unbroken loop of links between the variables",
          "local_types": [
            "path",
            "loop",
            "links",
            "variables"
          ],
          "iri": "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable-Mention-1"
        }
      ],
      "relevance": 0.51611328125
    },
    "Entity-rule_length": {
      "node_id": "rule_length",
      "disambiguation_index": 0,
      "label": "rule length",
      "aliases": [
        "rule length"
      ],
      "types": [
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The maximum number of atoms allowed in an Inverse Open Path (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-3",
          "local_name": "rule length",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-rule_length-Mention-1"
        }
      ],
      "relevance": 0.51611328125
    },
    "Entity-their_cardinality": {
      "node_id": "their_cardinality",
      "disambiguation_index": 0,
      "label": "their cardinalities",
      "aliases": [
        "their cardinalities"
      ],
      "types": [
        "cardinality",
        "attribute"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of minimum and maximum values that define the number of entities or relationships allowed for a specific shape pattern learned from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-6-Sentence-1",
          "local_name": "their cardinalities",
          "local_types": [
            "cardinality",
            "attribute"
          ],
          "iri": "Entity-their_cardinality-Mention-1"
        }
      ],
      "relevance": 0.51611328125
    },
    "Entity-high_iophc": {
      "node_id": "high_iophc",
      "disambiguation_index": 0,
      "label": "high IOPHC",
      "aliases": [
        "high IOPHC"
      ],
      "types": [
        "metric",
        "evaluation criterion"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The proportion of rule consequent instances that are justified by target predicate instances in the KG, indicating the relevance of a high-quality IOPHC to a specific unary occupation predicate.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-5",
          "local_name": "high IOPHC",
          "local_types": [
            "metric",
            "evaluation criterion"
          ],
          "iri": "Entity-high_iophc-Mention-1"
        }
      ],
      "relevance": 0.515625
    },
    "Entity-iophc__r2___11": {
      "node_id": "iophc__r2___11",
      "disambiguation_index": 0,
      "label": "IOPHC(r2) = 1/1",
      "aliases": [
        "IOPHC(r2) = 1/1"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality measure for an Inverse Open Path rule (IOPHC), specifically its value of 1/1, indicating that a certain proportion of entities satisfy both conditions.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-4",
          "local_name": "IOPHC(r2) = 1/1",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-iophc__r2___11-Mention-1"
        }
      ],
      "relevance": 0.515625
    },
    "Entity-the_body_predicate": {
      "node_id": "the_body_predicate",
      "disambiguation_index": 0,
      "label": "The body predicate",
      "aliases": [
        "the body predicate",
        "The body predicate"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A predicate in the knowledge graph, used as part of a tree shape and declared as sh:nodeShape with nested sh:path declarations within a sh:property declaration.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "The body predicate",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-the_body_predicate-Mention-1"
        }
      ],
      "relevance": 0.515625
    },
    "Entity-dbpedia": {
      "node_id": "dbpedia",
      "disambiguation_index": 0,
      "label": "DBpedia",
      "aliases": [
        "DBPedia",
        "DBpedia"
      ],
      "types": [
        "benchmark",
        "data source",
        "database",
        "ontology",
        "massive real-world benchmark KG",
        "project",
        "information resource",
        "knowledge base",
        "dataset",
        "information source",
        "research",
        "knowledge graph",
        "repository"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A large-scale online database and ontology that extracts structured information from Wikipedia and other sources.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "DBpedia",
          "local_types": [
            "ontology",
            "project",
            "information resource",
            "dataset",
            "research",
            "knowledge graph"
          ],
          "iri": "Entity-dbpedia-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "DBpedia",
          "local_types": [
            "database",
            "ontology",
            "project",
            "information resource",
            "knowledge base",
            "dataset",
            "research",
            "knowledge graph"
          ],
          "iri": "Entity-dbpedia-Mention-2"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-1",
          "local_name": "DBpedia",
          "local_types": [
            "knowledge graph",
            "database",
            "dataset"
          ],
          "iri": "Entity-dbpedia-Mention-3"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-2",
          "local_name": "DBpedia",
          "local_types": [
            "benchmark",
            "database",
            "ontology",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-dbpedia-Mention-4"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-2",
          "local_name": "DBpedia",
          "local_types": [
            "database",
            "ontology",
            "knowledge base",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-dbpedia-Mention-5"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-1",
          "local_name": "DBpedia",
          "local_types": [
            "database",
            "ontology",
            "knowledge base",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-dbpedia-Mention-6"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-3",
          "local_name": "DBPedia",
          "local_types": [
            "database",
            "ontology",
            "knowledge base",
            "information source",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-dbpedia-Mention-7"
        },
        {
          "reference": "Section-15-Paragraph-5-Sentence-1",
          "local_name": "DBpedia",
          "local_types": [
            "database",
            "project",
            "information source",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-dbpedia-Mention-8"
        },
        {
          "reference": "Section-15-Paragraph-5-Sentence-2",
          "local_name": "DBPedia",
          "local_types": [
            "database",
            "knowledge base"
          ],
          "iri": "Entity-dbpedia-Mention-9"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-1",
          "local_name": "DBpedia",
          "local_types": [
            "database",
            "knowledge base",
            "information source",
            "dataset",
            "knowledge graph",
            "repository"
          ],
          "iri": "Entity-dbpedia-Mention-10"
        },
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "DBpedia",
          "local_types": [
            "data source",
            "database",
            "knowledge base",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-dbpedia-Mention-11"
        },
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "DBpedia",
          "local_types": [
            "knowledge graph",
            "massive real-world benchmark KG",
            "knowledge base",
            "dataset"
          ],
          "iri": "Entity-dbpedia-Mention-12"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-6",
          "local_name": "DBpedia",
          "local_types": [
            "dataset",
            "knowledge base"
          ],
          "iri": "Entity-dbpedia-Mention-13"
        }
      ],
      "relevance": 0.51513671875
    },
    "Entity-treescmin": {
      "node_id": "treescmin",
      "disambiguation_index": 0,
      "label": "TreeSCMIN",
      "aliases": [
        "TreeSCMIN"
      ],
      "types": [
        "parameter",
        "variable",
        "boundary condition",
        "threshold",
        "threshold value",
        "constant"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The minimum threshold value for Tree Standard Confidence (TreeSC) below which an IOP rule should be dismissed during tree construction in SHACLEARNER.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-4",
          "local_name": "TreeSCMIN",
          "local_types": [
            "parameter",
            "threshold",
            "threshold value",
            "boundary condition"
          ],
          "iri": "Entity-treescmin-Mention-1"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "TreeSCMIN",
          "local_types": [
            "parameter",
            "variable",
            "constant"
          ],
          "iri": "Entity-treescmin-Mention-2"
        }
      ],
      "relevance": 0.51513671875
    },
    "Entity-the_annotation_of_the_branch_at_the_terminating_node": {
      "node_id": "the_annotation_of_the_branch_at_the_terminating_node",
      "disambiguation_index": 0,
      "label": "the annotation of the branch at the terminating node",
      "aliases": [
        "the annotation of the branch at the terminating node"
      ],
      "types": [
        "annotation",
        "branch",
        "node"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum cardinality constraint for a SHACL shape tree path",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-4",
          "local_name": "the annotation of the branch at the terminating node",
          "local_types": [
            "annotation",
            "branch",
            "node"
          ],
          "iri": "Entity-the_annotation_of_the_branch_at_the_terminating_node-Mention-1"
        }
      ],
      "relevance": 0.51513671875
    },
    "Entity-wikidata": {
      "node_id": "wikidata",
      "disambiguation_index": 0,
      "label": "Wikidata",
      "aliases": [
        "Wikidata"
      ],
      "types": [
        "benchmark",
        "online encyclopedia",
        "database",
        "ontology",
        "massive real-world benchmark KG",
        "project",
        "knowledge base",
        "information source",
        "dataset",
        "information resource",
        "knowledge graph",
        "wikidataset",
        "repository"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A free online database of structured data that provides information on a wide range of topics",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "Wikidata",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-wikidata-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-2",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "ontology",
            "knowledge base",
            "dataset",
            "knowledge graph",
            "wikidataset",
            "repository"
          ],
          "iri": "Entity-wikidata-Mention-2"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-2",
          "local_name": "Wikidata",
          "local_types": [
            "benchmark",
            "online encyclopedia",
            "database",
            "knowledge base",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-wikidata-Mention-3"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-1",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "ontology",
            "knowledge base",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-wikidata-Mention-4"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-3",
          "local_name": "Wikidata",
          "local_types": [
            "knowledge graph",
            "database",
            "knowledge base",
            "dataset"
          ],
          "iri": "Entity-wikidata-Mention-5"
        },
        {
          "reference": "Section-15-Paragraph-5-Sentence-1",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "project",
            "information source",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-wikidata-Mention-6"
        },
        {
          "reference": "Section-15-Paragraph-5-Sentence-2",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "knowledge base"
          ],
          "iri": "Entity-wikidata-Mention-7"
        },
        {
          "reference": "Section-18-Paragraph-4-Sentence-1",
          "local_name": "Wikidata",
          "local_types": [
            "knowledge graph",
            "massive real-world benchmark KG",
            "knowledge base",
            "dataset"
          ],
          "iri": "Entity-wikidata-Mention-8"
        },
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "massive real-world benchmark KG",
            "information resource",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-wikidata-Mention-9"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "project",
            "knowledge base",
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-wikidata-Mention-10"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-6",
          "local_name": "Wikidata",
          "local_types": [
            "dataset",
            "knowledge base"
          ],
          "iri": "Entity-wikidata-Mention-11"
        }
      ],
      "relevance": 0.5146484375
    },
    "Entity-learning_path": {
      "node_id": "learning_path",
      "disambiguation_index": 0,
      "label": "learning paths",
      "aliases": [
        "learning paths"
      ],
      "types": [
        "algorithm",
        "concept",
        "shape",
        "path",
        "learning path",
        "pathway",
        "methodology",
        "educational framework"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sequence of educational or instructional activities designed to facilitate learning and skill acquisition.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "learning paths",
          "local_types": [
            "algorithm",
            "concept",
            "shape",
            "path",
            "learning path",
            "pathway",
            "methodology",
            "educational framework"
          ],
          "iri": "Entity-learning_path-Mention-1"
        }
      ],
      "relevance": 0.5146484375
    },
    "Entity-the_fact_pk__ei__ej__is_in_f__and_0_otherwise_.": {
      "node_id": "the_fact_pk__ei__ej__is_in_f__and_0_otherwise_.",
      "disambiguation_index": 0,
      "label": "the fact Pk(ei, ej) is in F, and 0 otherwise.",
      "aliases": [
        "the fact Pk(ei, ej) is in F, and 0 otherwise."
      ],
      "types": [
        "logic",
        "computer science"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A binary-valued matrix representing whether a specific fact with predicate Pk and entities ei and ej exists or not in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "the fact Pk(ei, ej) is in F, and 0 otherwise.",
          "local_types": [
            "logic",
            "computer science"
          ],
          "iri": "Entity-the_fact_pk__ei__ej__is_in_f__and_0_otherwise_.-Mention-1"
        }
      ],
      "relevance": 0.5146484375
    },
    "Entity-the_subject__respectively_object__argument_embeddings_of_a_predicate_p_k": {
      "node_id": "the_subject__respectively_object__argument_embeddings_of_a_predicate_p_k",
      "disambiguation_index": 0,
      "label": "the subject (respectively object) argument embeddings of a predicate P_k",
      "aliases": [
        "the subject (respectively object) argument embeddings of a predicate P_k"
      ],
      "types": [
        "concept",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The vector representations of subjects or objects associated with a predicate, computed by aggregating entity embeddings from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "the subject (respectively object) argument embeddings of a predicate P_k",
          "local_types": [
            "concept",
            "predicate"
          ],
          "iri": "Entity-the_subject__respectively_object__argument_embeddings_of_a_predicate_p_k-Mention-1"
        }
      ],
      "relevance": 0.5146484375
    },
    "Entity-graph_a_shape": {
      "node_id": "graph_a_shape",
      "disambiguation_index": 0,
      "label": "graphs as shapes",
      "aliases": [
        "graphs as shapes"
      ],
      "types": [
        "data model",
        "representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A visual representation of a graph, where nodes and edges are depicted as geometric shapes.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "graphs as shapes",
          "local_types": [
            "data model",
            "representation"
          ],
          "iri": "Entity-graph_a_shape-Mention-1"
        }
      ],
      "relevance": 0.51416015625
    },
    "Entity-iop_rule_of_the_form__3_": {
      "node_id": "iop_rule_of_the_form__3_",
      "disambiguation_index": 0,
      "label": "IOP rule of the form (3)",
      "aliases": [
        "an IOP rule of the form (3)",
        "IOP rule of the form (3)"
      ],
      "types": [
        "IOP rule",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An Inverse Open Path rule, specifically one with the general form Pt'(x, z0) -> exists(z1, ..., z(n-1), y) P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z( n - 1 ), y)",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "IOP rule of the form (3)",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-iop_rule_of_the_form__3_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "IOP rule of the form (3)",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-iop_rule_of_the_form__3_-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "an IOP rule of the form (3)",
          "local_types": [
            "rule",
            "IOP rule"
          ],
          "iri": "Entity-iop_rule_of_the_form__3_-Mention-3"
        }
      ],
      "relevance": 0.51416015625
    },
    "Entity-every_entity-instantiation": {
      "node_id": "every_entity-instantiation",
      "disambiguation_index": 0,
      "label": "Every entity-instantiation",
      "aliases": [
        "Every entity-instantiation"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An instance of a Conceptual Path (CP) rule in the context of knowledge graph completion, where every such instance is also an instance of the related Open Path (OP) rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-6",
          "local_name": "Every entity-instantiation",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-every_entity-instantiation-Mention-1"
        }
      ],
      "relevance": 0.51416015625
    },
    "Entity-predicate_logic_formalism": {
      "node_id": "predicate_logic_formalism",
      "disambiguation_index": 0,
      "label": "predicate logic formalism",
      "aliases": [
        "predicate logic formalism"
      ],
      "types": [
        "formalism",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A system or framework for representing and manipulating logical statements using predicates, often used to formalize and reason about knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "predicate logic formalism",
          "local_types": [
            "formalism",
            "logic"
          ],
          "iri": "Entity-predicate_logic_formalism-Mention-1"
        }
      ],
      "relevance": 0.513671875
    },
    "Entity-each_have_a_class_a_their_second_argument": {
      "node_id": "each_have_a_class_a_their_second_argument",
      "disambiguation_index": 0,
      "label": "each have a class as their second argument",
      "aliases": [
        "each have a class as their second argument"
      ],
      "types": [
        "property",
        "argument"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Unary predicates with classes as their second arguments, used to model types and classes in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-2",
          "local_name": "each have a class as their second argument",
          "local_types": [
            "property",
            "argument"
          ],
          "iri": "Entity-each_have_a_class_a_their_second_argument-Mention-1"
        }
      ],
      "relevance": 0.513671875
    },
    "Entity-rule_or_tree": {
      "node_id": "rule_or_tree",
      "disambiguation_index": 0,
      "label": "rule or tree",
      "aliases": [
        "rule or tree"
      ],
      "types": [
        "conceptual structure",
        "data model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual structure used to organize and represent data according to specific rules, guidelines, or constraints.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-7",
          "local_name": "rule or tree",
          "local_types": [
            "conceptual structure",
            "data model"
          ],
          "iri": "Entity-rule_or_tree-Mention-1"
        }
      ],
      "relevance": 0.51318359375
    },
    "Entity-subsequent_data_cleaning_or_ongoing_data_entry": {
      "node_id": "subsequent_data_cleaning_or_ongoing_data_entry",
      "disambiguation_index": 0,
      "label": "subsequent data cleaning or ongoing data entry",
      "aliases": [
        "subsequent data cleaning or ongoing data entry"
      ],
      "types": [
        "data processing task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of refining or updating an existing knowledge graph by correcting errors, filling gaps, or incorporating new information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-6",
          "local_name": "subsequent data cleaning or ongoing data entry",
          "local_types": [
            "data processing task"
          ],
          "iri": "Entity-subsequent_data_cleaning_or_ongoing_data_entry-Mention-1"
        }
      ],
      "relevance": 0.51318359375
    },
    "Entity-the_number_of_different_chain_which_should_exist": {
      "node_id": "the_number_of_different_chain_which_should_exist",
      "disambiguation_index": 0,
      "label": "the number of different chains which should exist",
      "aliases": [
        "the number of different chains which should exist"
      ],
      "types": [
        "quantity",
        "target"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The target quantity representing the minimum or maximum number of distinct paths that a SHACL shape should have",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "the number of different chains which should exist",
          "local_types": [
            "quantity",
            "target"
          ],
          "iri": "Entity-the_number_of_different_chain_which_should_exist-Mention-1"
        }
      ],
      "relevance": 0.51318359375
    },
    "Entity-such_completion_question_of_a_human": {
      "node_id": "such_completion_question_of_a_human",
      "disambiguation_index": 0,
      "label": "such completion questions of a human",
      "aliases": [
        "such completion questions of a human"
      ],
      "types": [
        "questions"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A questioning strategy for completing knowledge graphs, where subsequent questions are asked in a depth-first manner based on contextual connections between answers.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-7",
          "local_name": "such completion questions of a human",
          "local_types": [
            "questions"
          ],
          "iri": "Entity-such_completion_question_of_a_human-Mention-1"
        }
      ],
      "relevance": 0.51318359375
    },
    "Entity-enterprise_knowledge_graph": {
      "node_id": "enterprise_knowledge_graph",
      "disambiguation_index": 0,
      "label": "enterprise knowledge graphs",
      "aliases": [
        "enterprise knowledge graphs"
      ],
      "types": [
        "business intelligence",
        "organizational data management"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of data management system that integrates and organizes information from various sources within an organization to support business intelligence and decision-making.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "enterprise knowledge graphs",
          "local_types": [
            "business intelligence",
            "organizational data management"
          ],
          "iri": "Entity-enterprise_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.5126953125
    },
    "Entity-these_threshold": {
      "node_id": "these_threshold",
      "disambiguation_index": 0,
      "label": "These thresholds",
      "aliases": [
        "These thresholds"
      ],
      "types": [
        "threshold"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Minimum quality thresholds for IOP rules that meet certain criteria (IOPSC >= 0.1 and IOPHC >= 0.01) used to filter out low-quality rules during learning.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-3",
          "local_name": "These thresholds",
          "local_types": [
            "threshold"
          ],
          "iri": "Entity-these_threshold-Mention-1"
        }
      ],
      "relevance": 0.5126953125
    },
    "Entity-op": {
      "node_id": "op",
      "disambiguation_index": 0,
      "label": "OP",
      "aliases": [
        "OP"
      ],
      "types": [
        "algorithm",
        "concept",
        "notation",
        "system",
        "acronym",
        "rule"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of guidelines or principles that govern behavior or decision-making",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-4",
          "local_name": "OP",
          "local_types": [
            "notation",
            "system"
          ],
          "iri": "Entity-op-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "OP",
          "local_types": [
            "rule",
            "notation"
          ],
          "iri": "Entity-op-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-op-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "acronym",
            "concept"
          ],
          "iri": "Entity-op-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "rule",
            "concept"
          ],
          "iri": "Entity-op-Mention-5"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "OP",
          "local_types": [
            "rule",
            "algorithm"
          ],
          "iri": "Entity-op-Mention-6"
        }
      ],
      "relevance": 0.51220703125
    },
    "Entity-self-loops": {
      "node_id": "self-loops",
      "disambiguation_index": 0,
      "label": "self-loops",
      "aliases": [
        "self-loops"
      ],
      "types": [
        "technique",
        "graph structure",
        "graph theory",
        "data representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of edge or connection within a graph that connects an element to itself.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "self-loops",
          "local_types": [
            "technique",
            "graph structure",
            "graph theory",
            "data representation"
          ],
          "iri": "Entity-self-loops-Mention-1"
        }
      ],
      "relevance": 0.51171875
    },
    "Entity-input_graph": {
      "node_id": "input_graph",
      "disambiguation_index": 0,
      "label": "input graph",
      "aliases": [
        "input graph"
      ],
      "types": [
        "data structure",
        "computing concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A visual representation or abstract model that organizes and structures data for analysis, processing, or visualization.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-4",
          "local_name": "input graph",
          "local_types": [
            "data structure",
            "computing concept"
          ],
          "iri": "Entity-input_graph-Mention-1"
        }
      ],
      "relevance": 0.51171875
    },
    "Entity-k__ef": {
      "node_id": "k__ef",
      "disambiguation_index": 0,
      "label": "|K| = |E||F|",
      "aliases": [
        "|K| = |E||F|"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The number of entities and facts in a knowledge graph, calculated as the product of the number of entities (|E|) and the number of facts (|F|).",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "|K| = |E||F|",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-k__ef-Mention-1"
        }
      ],
      "relevance": 0.51171875
    },
    "Entity-all_predicate_in_the_sampled_k_": {
      "node_id": "all_predicate_in_the_sampled_k_",
      "disambiguation_index": 0,
      "label": "all predicates in the sampled K'",
      "aliases": [
        "all predicates in the sampled K'"
      ],
      "types": [
        "predicates",
        "sampled data"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of logical statements or relationships that are present in a randomly selected subset (K') of a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "all predicates in the sampled K'",
          "local_types": [
            "predicates",
            "sampled data"
          ],
          "iri": "Entity-all_predicate_in_the_sampled_k_-Mention-1"
        }
      ],
      "relevance": 0.51171875
    },
    "Entity-exists__z__s__y__s_": {
      "node_id": "exists__z__s__y__s_",
      "disambiguation_index": 0,
      "label": "exists( z* s, y*s )",
      "aliases": [
        "exists( z* s, y*s )"
      ],
      "types": [
        "logical operator"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A logical operator representing a tree-shaped pattern of predicates and entities that exists in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "exists( z* s, y*s )",
          "local_types": [
            "logical operator"
          ],
          "iri": "Entity-exists__z__s__y__s_-Mention-1"
        }
      ],
      "relevance": 0.51171875
    },
    "Entity-candidate_rule": {
      "node_id": "candidate_rule",
      "disambiguation_index": 0,
      "label": "candidate rules",
      "aliases": [
        "candidate rules"
      ],
      "types": [
        "algorithm",
        "rules",
        "knowledge graph element",
        "ruleset",
        "set of rules",
        "candidates"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or principles used to determine outcomes or make decisions",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "candidate rules",
          "local_types": [
            "ruleset",
            "algorithm"
          ],
          "iri": "Entity-candidate_rule-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "candidate rules",
          "local_types": [
            "rules",
            "knowledge graph element",
            "ruleset",
            "set of rules",
            "candidates"
          ],
          "iri": "Entity-candidate_rule-Mention-2"
        }
      ],
      "relevance": 0.5107421875
    },
    "Entity-straight_form": {
      "node_id": "straight_form",
      "disambiguation_index": 0,
      "label": "straight form",
      "aliases": [
        "straight form"
      ],
      "types": [
        "formalism",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A notation or formalism in which the object argument of a binary predicate is the common variable to connect its head, used as one of two forms for evaluating KG rule-learning methods.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-5",
          "local_name": "straight form",
          "local_types": [
            "formalism",
            "notation"
          ],
          "iri": "Entity-straight_form-Mention-1"
        }
      ],
      "relevance": 0.5107421875
    },
    "Entity-element_with_a_value___car_for_rule_with_cardinality_car": {
      "node_id": "element_with_a_value___car_for_rule_with_cardinality_car",
      "disambiguation_index": 0,
      "label": "elements with a value >= Car for rules with cardinality Car",
      "aliases": [
        "elements with a value >= Car for rules with cardinality Car"
      ],
      "types": [
        "rule",
        "cardinality"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of entities that satisfy the head of an IOP rule, considering only those entities that have at least a certain number (Car) of connections to the body of the rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "elements with a value >= Car for rules with cardinality Car",
          "local_types": [
            "rule",
            "cardinality"
          ],
          "iri": "Entity-element_with_a_value___car_for_rule_with_cardinality_car-Mention-1"
        }
      ],
      "relevance": 0.5107421875
    },
    "Entity-to_assess_the_quality_of_a_tree": {
      "node_id": "to_assess_the_quality_of_a_tree",
      "disambiguation_index": 0,
      "label": "To assess the quality of a tree",
      "aliases": [
        "To assess the quality of a tree"
      ],
      "types": [
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process or method used to evaluate and measure the effectiveness, accuracy, or reliability of a tree shape in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-7",
          "local_name": "To assess the quality of a tree",
          "local_types": [
            "evaluation"
          ],
          "iri": "Entity-to_assess_the_quality_of_a_tree-Mention-1"
        }
      ],
      "relevance": 0.5107421875
    },
    "Entity-then_iopsc__r____iopsc__r__": {
      "node_id": "then_iopsc__r____iopsc__r__",
      "disambiguation_index": 0,
      "label": "Then IOPSC(r) <= IOPSC(r')",
      "aliases": [
        "Then IOPSC(r) <= IOPSC(r')"
      ],
      "types": [
        "result",
        "inequality"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The inequality stating that the inverse open path support of a rule r does not exceed its counterpart's support, i.e., IOPSC(r) <= IOPSC(r').",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-3",
          "local_name": "Then IOPSC(r) <= IOPSC(r')",
          "local_types": [
            "result",
            "inequality"
          ],
          "iri": "Entity-then_iopsc__r____iopsc__r__-Mention-1"
        }
      ],
      "relevance": 0.51025390625
    },
    "Entity-sampling__": {
      "node_id": "sampling__",
      "disambiguation_index": 0,
      "label": "Sampling()",
      "aliases": [
        "Sampling()"
      ],
      "types": [
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A procedure or technique for gathering data, typically from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "Sampling()",
          "local_types": [
            "method"
          ],
          "iri": "Entity-sampling__-Mention-1"
        }
      ],
      "relevance": 0.51025390625
    },
    "Entity-detect_which_shape_could_be_violated_by_applying_a_rule": {
      "node_id": "detect_which_shape_could_be_violated_by_applying_a_rule",
      "disambiguation_index": 0,
      "label": "detect which shapes could be violated by applying a rule",
      "aliases": [
        "detect which shapes could be violated by applying a rule"
      ],
      "types": [
        "method",
        "violation detection",
        "rule application",
        "methodology comparison"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method for identifying potential shape violations resulting from the application of rules.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-2",
          "local_name": "detect which shapes could be violated by applying a rule",
          "local_types": [
            "method",
            "violation detection",
            "rule application",
            "methodology comparison"
          ],
          "iri": "Entity-detect_which_shape_could_be_violated_by_applying_a_rule-Mention-1"
        }
      ],
      "relevance": 0.51025390625
    },
    "Entity-there_remains_an_opportunity_for_improving_tree_shape_for_simplicity_and_easier_interpretation_by_unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch": {
      "node_id": "there_remains_an_opportunity_for_improving_tree_shape_for_simplicity_and_easier_interpretation_by_unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch",
      "disambiguation_index": 0,
      "label": "there remains an opportunity for improving tree shapes for simplicity and easier interpretation by unifying some variables that occur in predicates that occur in multiple branches",
      "aliases": [
        "there remains an opportunity for improving tree shapes for simplicity and easier interpretation by unifying some variables that occur in predicates that occur in multiple branches"
      ],
      "types": [
        "opportunity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An opportunity to improve tree shapes for simplicity and ease of understanding by combining variables appearing across multiple branches.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-5-Sentence-1",
          "local_name": "there remains an opportunity for improving tree shapes for simplicity and easier interpretation by unifying some variables that occur in predicates that occur in multiple branches",
          "local_types": [
            "opportunity"
          ],
          "iri": "Entity-there_remains_an_opportunity_for_improving_tree_shape_for_simplicity_and_easier_interpretation_by_unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch-Mention-1"
        }
      ],
      "relevance": 0.51025390625
    },
    "Entity-in_practice__the_sampled_kg_is_far_smaller_than_the_original_kg": {
      "node_id": "in_practice__the_sampled_kg_is_far_smaller_than_the_original_kg",
      "disambiguation_index": 0,
      "label": "In practice, the sampled KG is far smaller than the original KG",
      "aliases": [
        "In practice, the sampled KG is far smaller than the original KG"
      ],
      "types": [
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The complexity of the sampling algorithm",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-5",
          "local_name": "In practice, the sampled KG is far smaller than the original KG",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-in_practice__the_sampled_kg_is_far_smaller_than_the_original_kg-Mention-1"
        }
      ],
      "relevance": 0.509765625
    },
    "Entity-wikidata_with_8_million_fact": {
      "node_id": "wikidata_with_8_million_fact",
      "disambiguation_index": 0,
      "label": "Wikidata with 8 million facts",
      "aliases": [
        "Wikidata with 8 million facts"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A massive knowledge graph containing approximately 8 million facts.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "Wikidata with 8 million facts",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-wikidata_with_8_million_fact-Mention-1"
        }
      ],
      "relevance": 0.509765625
    },
    "Entity-the_form_p__e_": {
      "node_id": "the_form_p__e_",
      "disambiguation_index": 0,
      "label": "the form P( e )",
      "aliases": [
        "the form P( e )"
      ],
      "types": [
        "form",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A notation or a pattern that represents a shape constraint on graph data",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "the form P( e )",
          "local_types": [
            "form",
            "notation"
          ],
          "iri": "Entity-the_form_p__e_-Mention-1"
        }
      ],
      "relevance": 0.509765625
    },
    "Entity-for_(1)": {
      "node_id": "for_(1)",
      "disambiguation_index": 1,
      "label": "for",
      "aliases": [
        "for"
      ],
      "types": [
        "loop"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The loop structure or iteration in Algorithm 2, which samples a subgraph of the input graph K.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-6",
          "local_name": "for",
          "local_types": [
            "loop"
          ],
          "iri": "Entity-for_(1)-Mention-1"
        }
      ],
      "relevance": 0.509765625
    },
    "Entity-the_target_predicate_(1)": {
      "node_id": "the_target_predicate_(1)",
      "disambiguation_index": 1,
      "label": "the target predicate",
      "aliases": [
        "the target predicate"
      ],
      "types": [
        "predicate",
        "target"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A unary predicate that represents a specific shape pattern over connected entities present in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-4",
          "local_name": "the target predicate",
          "local_types": [
            "predicate",
            "target"
          ],
          "iri": "Entity-the_target_predicate_(1)-Mention-1"
        }
      ],
      "relevance": 0.509765625
    },
    "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm_.": {
      "node_id": "the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm_.",
      "disambiguation_index": 0,
      "label": "the pairs (e, e') satisfying the head are connected by the path P1, P2, ..., Pm.",
      "aliases": [
        "the pairs (e, e') satisfying the head are connected by the path P1, P2, ..., Pm."
      ],
      "types": [
        "description",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of entities and their corresponding connections in an adjacency matrix representation of a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "the pairs (e, e') satisfying the head are connected by the path P1, P2, ..., Pm.",
          "local_types": [
            "description",
            "algorithm"
          ],
          "iri": "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm_.-Mention-1"
        }
      ],
      "relevance": 0.50927734375
    },
    "Entity-this_phenomenon": {
      "node_id": "this_phenomenon",
      "disambiguation_index": 0,
      "label": "This phenomenon",
      "aliases": [
        "This phenomenon"
      ],
      "types": [
        "phenomenon"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The difference in the proportion of quality rules learned from DBpedia and Wikidata compared to YAGO2s, possibly due to the deliberate selection of type-like unary predicates as targets for DBPedia and Wikidata.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-5-Sentence-2",
          "local_name": "This phenomenon",
          "local_types": [
            "phenomenon"
          ],
          "iri": "Entity-this_phenomenon-Mention-1"
        }
      ],
      "relevance": 0.5087890625
    },
    "Entity-let_r_be_an_annotated_iop_rule_of_the_form__4_": {
      "node_id": "let_r_be_an_annotated_iop_rule_of_the_form__4_",
      "disambiguation_index": 0,
      "label": "Let r be an annotated IOP rule of the form (4)",
      "aliases": [
        "Let r be an annotated IOP rule of the form (4)"
      ],
      "types": [
        "mathematical notation",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Annotated Inverse Open Path Rule with cardinality annotation, defined as Pt'(x, z0) -> P1'(z0, z1) ^ P2'(z1, z2) ^ ... ^ Pn'(z(n-1), y).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-2",
          "local_name": "Let r be an annotated IOP rule of the form (4)",
          "local_types": [
            "mathematical notation",
            "rule"
          ],
          "iri": "Entity-let_r_be_an_annotated_iop_rule_of_the_form__4_-Mention-1"
        }
      ],
      "relevance": 0.50830078125
    },
    "Entity-rule-learning_method": {
      "node_id": "rule-learning_method",
      "disambiguation_index": 0,
      "label": "rule-learning methods",
      "aliases": [
        "rule-learning methods"
      ],
      "types": [
        "algorithm",
        "computational method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Methods used to learn or discover rules from data",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-1",
          "local_name": "rule-learning methods",
          "local_types": [
            "algorithm",
            "computational method"
          ],
          "iri": "Entity-rule-learning_method-Mention-1"
        }
      ],
      "relevance": 0.50830078125
    },
    "Entity-this_sampling": {
      "node_id": "this_sampling",
      "disambiguation_index": 0,
      "label": "This sampling",
      "aliases": [
        "This sampling"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method for computing a fragment of a knowledge graph, consisting of a bounded number of entities related to a target predicate.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "This sampling",
          "local_types": [
            "method"
          ],
          "iri": "Entity-this_sampling-Mention-1"
        }
      ],
      "relevance": 0.50830078125
    },
    "Entity-p___x__t_": {
      "node_id": "p___x__t_",
      "disambiguation_index": 0,
      "label": "P*(x, t)",
      "aliases": [
        "P*(x, t)"
      ],
      "types": [
        "mathematical expression",
        "mathematical concept",
        "composite predicate",
        "mathematical formula",
        "equation",
        "function",
        "probability distribution",
        "predicate"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A composite predicate representing a path over connected entities in a knowledge graph, formed by combining predicates Pt(x, y), P1(y, z) and P2(z, t)",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-3",
          "local_name": "P*(x, t)",
          "local_types": [
            "probability distribution",
            "equation",
            "mathematical formula",
            "mathematical concept"
          ],
          "iri": "Entity-p___x__t_-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "P*(x, t)",
          "local_types": [
            "composite predicate",
            "predicate",
            "mathematical expression",
            "function"
          ],
          "iri": "Entity-p___x__t_-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "P*(x, t)",
          "local_types": [
            "predicate",
            "mathematical concept"
          ],
          "iri": "Entity-p___x__t_-Mention-3"
        }
      ],
      "relevance": 0.5078125
    },
    "Entity-path_shape": {
      "node_id": "path_shape",
      "disambiguation_index": 0,
      "label": "path shapes",
      "aliases": [
        "path shapes"
      ],
      "types": [
        "template",
        "concept",
        "geometric concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Geometrical patterns or configurations formed by paths",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-1",
          "local_name": "path shapes",
          "local_types": [
            "template",
            "concept",
            "geometric concept"
          ],
          "iri": "Entity-path_shape-Mention-1"
        }
      ],
      "relevance": 0.5078125
    },
    "Entity-v2__pt_": {
      "node_id": "v2__pt_",
      "disambiguation_index": 0,
      "label": "V^2(Pt)",
      "aliases": [
        "V^2( Pt )",
        "V^2(Pt)"
      ],
      "types": [
        "mathematical expression",
        "notation",
        "mathematical concept",
        "linear algebra",
        "matrix",
        "vector"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A column-wise sum of each predicate Pt's adjacency matrix, resulting in a vector representing the count of distinct entities satisfying the body of an IOP rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "V^2(Pt)",
          "local_types": [
            "notation",
            "vector",
            "mathematical expression"
          ],
          "iri": "Entity-v2__pt_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "V^2(Pt)",
          "local_types": [
            "matrix",
            "vector",
            "mathematical concept",
            "linear algebra"
          ],
          "iri": "Entity-v2__pt_-Mention-2"
        }
      ],
      "relevance": 0.5078125
    },
    "Entity-the_fourth": {
      "node_id": "the_fourth",
      "disambiguation_index": 0,
      "label": "The fourth",
      "aliases": [
        "The fourth"
      ],
      "types": [
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A small synthetic knowledge graph (Poker) used for evaluating the completeness of our algorithm.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-3",
          "local_name": "The fourth",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-the_fourth-Mention-1"
        }
      ],
      "relevance": 0.5078125
    },
    "Entity-and_let_car__r__be_the_cardinality_annotation_for_r": {
      "node_id": "and_let_car__r__be_the_cardinality_annotation_for_r",
      "disambiguation_index": 0,
      "label": "and let Car(r) be the cardinality annotation for r",
      "aliases": [
        "and let Car(r) be the cardinality annotation for r"
      ],
      "types": [
        "notation",
        "annotation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Cardinality Annotation, which specifies the minimum number of distinct instantiations of an IOP rule's head predicate in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-2",
          "local_name": "and let Car(r) be the cardinality annotation for r",
          "local_types": [
            "notation",
            "annotation"
          ],
          "iri": "Entity-and_let_car__r__be_the_cardinality_annotation_for_r-Mention-1"
        }
      ],
      "relevance": 0.50732421875
    },
    "Entity-iophc__r2_": {
      "node_id": "iophc__r2_",
      "disambiguation_index": 0,
      "label": "IOPHC(r2)",
      "aliases": [
        "IOPHC(r2)"
      ],
      "types": [
        "function",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Inverse Open Path rule with cardinality r2.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-4",
          "local_name": "IOPHC(r2)",
          "local_types": [
            "function",
            "mathematical concept"
          ],
          "iri": "Entity-iophc__r2_-Mention-1"
        }
      ],
      "relevance": 0.50732421875
    },
    "Entity-an_iop_rule_(1)": {
      "node_id": "an_iop_rule_(1)",
      "disambiguation_index": 1,
      "label": "An IOP rule",
      "aliases": [
        "An IOP rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A logical statement connecting entities satisfying specific subject and object arguments through a chain of predicates.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "An IOP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-an_iop_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.50732421875
    },
    "Entity-a_tree_(1)": {
      "node_id": "a_tree_(1)",
      "disambiguation_index": 1,
      "label": "a tree",
      "aliases": [
        "the tree",
        "a tree"
      ],
      "types": [
        "tree",
        "object"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A hierarchical structure composed of interconnected nodes or arguments that represents relationships between entities and predicates, used to validate a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-7",
          "local_name": "a tree",
          "local_types": [
            "tree"
          ],
          "iri": "Entity-a_tree_(1)-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-2",
          "local_name": "the tree",
          "local_types": [
            "tree"
          ],
          "iri": "Entity-a_tree_(1)-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-9-Sentence-3",
          "local_name": "a tree",
          "local_types": [
            "tree",
            "object"
          ],
          "iri": "Entity-a_tree_(1)-Mention-3"
        }
      ],
      "relevance": 0.5068359375
    },
    "Entity-there_is": {
      "node_id": "there_is",
      "disambiguation_index": 0,
      "label": "There is",
      "aliases": [
        "There is"
      ],
      "types": [
        "statement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A property that links the logical structure of an IOP rule to specific characteristics in its corresponding embedding representation.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "There is",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-there_is-Mention-1"
        }
      ],
      "relevance": 0.50634765625
    },
    "Entity-this_potential_post-processing_step": {
      "node_id": "this_potential_post-processing_step",
      "disambiguation_index": 0,
      "label": "this potential post-processing step",
      "aliases": [
        "this potential post-processing step"
      ],
      "types": [
        "step",
        "methodology",
        "post-processing"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method or technique for simplifying and improving tree shapes, potentially by unifying variables that occur in multiple branches, planned as a topic of investigation in future research.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-5-Sentence-2",
          "local_name": "this potential post-processing step",
          "local_types": [
            "step",
            "methodology",
            "post-processing"
          ],
          "iri": "Entity-this_potential_post-processing_step-Mention-1"
        }
      ],
      "relevance": 0.50634765625
    },
    "Entity-hence_we_instantiate_the_atomic_body_to_predict_an_instance_of_the_head": {
      "node_id": "hence_we_instantiate_the_atomic_body_to_predict_an_instance_of_the_head",
      "disambiguation_index": 0,
      "label": "Hence we instantiate the atomic body to predict an instance of the head",
      "aliases": [
        "Hence we instantiate the atomic body to predict an instance of the head"
      ],
      "types": [
        "instantiation",
        "prediction"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of instantiating the body of an Inverse Open Path (IOP) rule and predicting an instance of its corresponding head.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-5",
          "local_name": "Hence we instantiate the atomic body to predict an instance of the head",
          "local_types": [
            "instantiation",
            "prediction"
          ],
          "iri": "Entity-hence_we_instantiate_the_atomic_body_to_predict_an_instance_of_the_head-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-5",
          "local_name": "Hence we instantiate the atomic body to predict an instance of the head",
          "local_types": [
            "instantiation",
            "prediction"
          ],
          "iri": "Entity-hence_we_instantiate_the_atomic_body_to_predict_an_instance_of_the_head-Mention-2"
        }
      ],
      "relevance": 0.505859375
    },
    "Entity-two_open_variable__y_and_x": {
      "node_id": "two_open_variable__y_and_x",
      "disambiguation_index": 0,
      "label": "two open variables, y and x",
      "aliases": [
        "two open variables, y and x"
      ],
      "types": [
        "variables"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of mathematical expression with two unbound entities or values, denoted by 'y' and 'x', used to represent a specific pattern or relationship in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-3",
          "local_name": "two open variables, y and x",
          "local_types": [
            "variables"
          ],
          "iri": "Entity-two_open_variable__y_and_x-Mention-1"
        }
      ],
      "relevance": 0.505859375
    },
    "Entity-the_better_quality_of_embeddings": {
      "node_id": "the_better_quality_of_embeddings",
      "disambiguation_index": 0,
      "label": "The better quality of embeddings",
      "aliases": [
        "The better quality of embeddings"
      ],
      "types": [
        "quality"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The quality of embeddings extracted from a sampled knowledge graph, customized for a specific target predicate.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-3",
          "local_name": "The better quality of embeddings",
          "local_types": [
            "quality"
          ],
          "iri": "Entity-the_better_quality_of_embeddings-Mention-1"
        }
      ],
      "relevance": 0.505859375
    },
    "Entity-k_": {
      "node_id": "k_",
      "disambiguation_index": 0,
      "label": "K'",
      "aliases": [
        "k",
        "K",
        "K'"
      ],
      "types": [
        "integer",
        "database",
        "symbol",
        "entity",
        "collection",
        "knowledge base",
        "subgraph",
        "set",
        "fragment",
        "constant",
        "notation",
        "output",
        "knowledge graph",
        "fact set",
        "mathematical expression",
        "mathematical concept",
        "variable",
        "data structure",
        "dataset",
        "variable name"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A collection of facts or knowledge representing a mathematical concept or notation.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "K'",
          "local_types": [
            "fact set",
            "data structure",
            "knowledge base"
          ],
          "iri": "Entity-k_-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-4",
          "local_name": "K'",
          "local_types": [
            "notation",
            "symbol",
            "mathematical concept",
            "data structure",
            "subgraph",
            "output"
          ],
          "iri": "Entity-k_-Mention-2"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "K'",
          "local_types": [
            "knowledge graph",
            "fragment",
            "subgraph",
            "database"
          ],
          "iri": "Entity-k_-Mention-3"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-5",
          "local_name": "K'",
          "local_types": [
            "database",
            "entity",
            "knowledge base"
          ],
          "iri": "Entity-k_-Mention-4"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-10",
          "local_name": "K'",
          "local_types": [
            "notation",
            "mathematical concept"
          ],
          "iri": "Entity-k_-Mention-5"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-11",
          "local_name": "K'",
          "local_types": [
            "constant",
            "mathematical expression"
          ],
          "iri": "Entity-k_-Mention-6"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "K'",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-k_-Mention-7"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "K",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-k_-Mention-8"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-6",
          "local_name": "k",
          "local_types": [
            "variable",
            "integer"
          ],
          "iri": "Entity-k_-Mention-9"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "K",
          "local_types": [
            "notation",
            "mathematical concept",
            "data structure",
            "set",
            "knowledge graph",
            "variable name"
          ],
          "iri": "Entity-k_-Mention-10"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "K",
          "local_types": [
            "set",
            "mathematical concept"
          ],
          "iri": "Entity-k_-Mention-11"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-4",
          "local_name": "K",
          "local_types": [
            "set",
            "mathematical concept"
          ],
          "iri": "Entity-k_-Mention-12"
        }
      ],
      "relevance": 0.50537109375
    },
    "Entity-adjacency_matrix": {
      "node_id": "adjacency_matrix",
      "disambiguation_index": 0,
      "label": "adjacency matrices",
      "aliases": [
        "adjacency matrices"
      ],
      "types": [
        "mathematical concept",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of relationships between entities or concepts in a graph-like structure.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "adjacency matrices",
          "local_types": [
            "mathematical concept",
            "data structure"
          ],
          "iri": "Entity-adjacency_matrix-Mention-1"
        }
      ],
      "relevance": 0.50537109375
    },
    "Entity-quality_rule": {
      "node_id": "quality_rule",
      "disambiguation_index": 0,
      "label": "quality rules",
      "aliases": [
        "quality rules"
      ],
      "types": [
        "concept",
        "data mining results",
        "quality metric",
        "knowledge graph patterns",
        "rule",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or standards that define acceptable levels of quality for a particular process, product, or service.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-1",
          "local_name": "quality rules",
          "local_types": [
            "knowledge graph patterns",
            "data mining results"
          ],
          "iri": "Entity-quality_rule-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-2",
          "local_name": "quality rules",
          "local_types": [
            "rule set",
            "quality metric",
            "concept",
            "rule"
          ],
          "iri": "Entity-quality_rule-Mention-2"
        }
      ],
      "relevance": 0.50537109375
    },
    "Entity-the_presentation_of_closed_path_rule_and_open_path_rule": {
      "node_id": "the_presentation_of_closed_path_rule_and_open_path_rule",
      "disambiguation_index": 0,
      "label": "The presentation of closed path rules and open path rules",
      "aliases": [
        "The presentation of closed path rules and open path rules"
      ],
      "types": [
        "presentation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or instructions for explaining or illustrating the concepts of closed paths and open paths.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "The presentation of closed path rules and open path rules",
          "local_types": [
            "presentation"
          ],
          "iri": "Entity-the_presentation_of_closed_path_rule_and_open_path_rule-Mention-1"
        }
      ],
      "relevance": 0.5048828125
    },
    "Entity-sh__path": {
      "node_id": "sh__path",
      "disambiguation_index": 0,
      "label": "sh:path",
      "aliases": [
        "sh:path"
      ],
      "types": [
        "notation",
        "syntax"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A notation or syntax used to define a structured data path in a semantic web context.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "sh:path",
          "local_types": [
            "notation",
            "syntax"
          ],
          "iri": "Entity-sh__path-Mention-1"
        }
      ],
      "relevance": 0.5048828125
    },
    "Entity-their_method": {
      "node_id": "their_method",
      "disambiguation_index": 0,
      "label": "their method",
      "aliases": [
        "their method"
      ],
      "types": [
        "method",
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A procedural method without logical foundations and lacking scalability to handle real-world knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-3",
          "local_name": "their method",
          "local_types": [
            "method",
            "system"
          ],
          "iri": "Entity-their_method-Mention-1"
        }
      ],
      "relevance": 0.5048828125
    },
    "Entity-_e__there_exists_e___e__in_e__k-1__and__pi__e__e___or_pi__e___e___": {
      "node_id": "_e__there_exists_e___e__in_e__k-1__and__pi__e__e___or_pi__e___e___",
      "disambiguation_index": 0,
      "label": "{ e | there exists e': e' in E(k-1) and (Pi(e, e') or Pi(e', e)) }",
      "aliases": [
        "{ e | there exists e': e' in E(k-1) and (Pi(e, e') or Pi(e', e)) }"
      ],
      "types": [
        "formula",
        "set",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of entities that are related to each other through a target predicate in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-7",
          "local_name": "{ e | there exists e': e' in E(k-1) and (Pi(e, e') or Pi(e', e)) }",
          "local_types": [
            "formula",
            "set",
            "mathematical expression"
          ],
          "iri": "Entity-_e__there_exists_e___e__in_e__k-1__and__pi__e__e___or_pi__e___e___-Mention-1"
        }
      ],
      "relevance": 0.50439453125
    },
    "Entity-vector": {
      "node_id": "vector",
      "disambiguation_index": 0,
      "label": "vectors",
      "aliases": [
        "vectors"
      ],
      "types": [
        "data structure",
        "geometric entities",
        "mathematical objects",
        "computational tool"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Mathematical representations used to encode information or relationships in a compact form",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "vectors",
          "local_types": [
            "data structure",
            "computational tool"
          ],
          "iri": "Entity-vector-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "vectors",
          "local_types": [
            "mathematical objects",
            "geometric entities"
          ],
          "iri": "Entity-vector-Mention-2"
        }
      ],
      "relevance": 0.50439453125
    },
    "Entity-thus__a__pk__is_a_matrix_of_binary_value": {
      "node_id": "thus__a__pk__is_a_matrix_of_binary_value",
      "disambiguation_index": 0,
      "label": "Thus, A(Pk) is a matrix of binary values",
      "aliases": [
        "Thus, A(Pk) is a matrix of binary values"
      ],
      "types": [
        "notation",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A(Pk), an adjacency matrix representation of predicate Pk in a knowledge graph K.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-4",
          "local_name": "Thus, A(Pk) is a matrix of binary values",
          "local_types": [
            "notation",
            "mathematics"
          ],
          "iri": "Entity-thus__a__pk__is_a_matrix_of_binary_value-Mention-1"
        }
      ],
      "relevance": 0.50439453125
    },
    "Entity-hc_measure": {
      "node_id": "hc_measure",
      "disambiguation_index": 0,
      "label": "HC measures",
      "aliases": [
        "HC measures"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Measures that quantify the explanatory power of a closed-path rule, indicating what proportion of the facts satisfying its head can be inferred by satisfying its body.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-4",
          "local_name": "HC measures",
          "local_types": [
            "method"
          ],
          "iri": "Entity-hc_measure-Mention-1"
        }
      ],
      "relevance": 0.50439453125
    },
    "Entity-cardinality_of_a_path": {
      "node_id": "cardinality_of_a_path",
      "disambiguation_index": 0,
      "label": "Cardinality of a path",
      "aliases": [
        "Cardinality of a path"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The cardinality of a path in SHACL tree shapes refers to the minimum number of occurrences allowed for that path as specified through an annotation on the branch terminating at a node.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-4",
          "local_name": "Cardinality of a path",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-cardinality_of_a_path-Mention-1"
        }
      ],
      "relevance": 0.50439453125
    },
    "Entity-iop_head_coverage": {
      "node_id": "iop_head_coverage",
      "disambiguation_index": 0,
      "label": "IOP Head Coverage",
      "aliases": [
        "IOP Head Coverage"
      ],
      "types": [
        "measure",
        "coverage metric",
        "head coverage",
        "rule quality measure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A metric used to quantify the coverage of a set of rules or entities",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-4",
          "local_name": "IOP Head Coverage",
          "local_types": [
            "measure",
            "coverage metric",
            "head coverage",
            "rule quality measure"
          ],
          "iri": "Entity-iop_head_coverage-Mention-1"
        }
      ],
      "relevance": 0.50390625
    },
    "Entity-cr_are_used_for_inferring_new_fact_.": {
      "node_id": "cr_are_used_for_inferring_new_fact_.",
      "disambiguation_index": 0,
      "label": "CRs are used for inferring new facts.",
      "aliases": [
        "CRs are used for inferring new facts."
      ],
      "types": [
        "usage",
        "application"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Computational Rules or Constraints",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "CRs are used for inferring new facts.",
          "local_types": [
            "usage",
            "application"
          ],
          "iri": "Entity-cr_are_used_for_inferring_new_fact_.-Mention-1"
        }
      ],
      "relevance": 0.50390625
    },
    "Entity-the_first_rule_(1)": {
      "node_id": "the_first_rule_(1)",
      "disambiguation_index": 1,
      "label": "The first rule",
      "aliases": [
        "The first rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A SHACL shape constraint indicating that a music entity (x) belongs to an album with a specific record label (y).",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-3",
          "local_name": "The first rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_first_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.50390625
    },
    "Entity-there_remains_an_opportunity": {
      "node_id": "there_remains_an_opportunity",
      "disambiguation_index": 0,
      "label": "there remains an opportunity",
      "aliases": [
        "there remains an opportunity"
      ],
      "types": [
        "opportunity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Improving tree shape learning to simplify and enhance interpretability",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-5-Sentence-1",
          "local_name": "there remains an opportunity",
          "local_types": [
            "opportunity"
          ],
          "iri": "Entity-there_remains_an_opportunity-Mention-1"
        }
      ],
      "relevance": 0.50341796875
    },
    "Entity-inverse_open_path_standard_confidence": {
      "node_id": "inverse_open_path_standard_confidence",
      "disambiguation_index": 0,
      "label": "inverse open path standard confidence",
      "aliases": [
        "Inverse open path standard confidence",
        "inverse open path standard confidence"
      ],
      "types": [
        "measure",
        "parameter",
        "metric",
        "concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A measure that calculates the proportion of entities that can instantiate a rule's body to satisfy its head.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-5",
          "local_name": "inverse open path standard confidence",
          "local_types": [
            "parameter",
            "metric",
            "concept"
          ],
          "iri": "Entity-inverse_open_path_standard_confidence-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-2",
          "local_name": "Inverse open path standard confidence",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-inverse_open_path_standard_confidence-Mention-2"
        }
      ],
      "relevance": 0.5029296875
    },
    "Entity-input_ontology": {
      "node_id": "input_ontology",
      "disambiguation_index": 0,
      "label": "input ontologies",
      "aliases": [
        "input ontologies"
      ],
      "types": [
        "resource",
        "data source",
        "ontology",
        "knowledge representation",
        "knowledge base",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of formal representations of concepts and relationships used for knowledge representation, data integration, or querying.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-2",
          "local_name": "input ontologies",
          "local_types": [
            "resource",
            "data source",
            "ontology",
            "knowledge representation",
            "knowledge base",
            "dataset"
          ],
          "iri": "Entity-input_ontology-Mention-1"
        }
      ],
      "relevance": 0.5029296875
    },
    "Entity-self-loop_link": {
      "node_id": "self-loop_link",
      "disambiguation_index": 0,
      "label": "self-loop links",
      "aliases": [
        "self-loop links"
      ],
      "types": [
        "concept",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of link or connection in a knowledge graph or network that connects an element back to itself, often used for notational convenience.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-3",
          "local_name": "self-loop links",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-self-loop_link-Mention-1"
        }
      ],
      "relevance": 0.5029296875
    },
    "Entity-terminating_with_open_variable_at_both_end": {
      "node_id": "terminating_with_open_variable_at_both_end",
      "disambiguation_index": 0,
      "label": "terminating with open variables at both ends",
      "aliases": [
        "terminating with open variables at both ends"
      ],
      "types": [
        "termination",
        "open variable"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of shape in SHACL that consists of a sequence of predicates connected by closed intermediate variables, ending with unbound or 'open' variables on either side.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-2",
          "local_name": "terminating with open variables at both ends",
          "local_types": [
            "termination",
            "open variable"
          ],
          "iri": "Entity-terminating_with_open_variable_at_both_end-Mention-1"
        }
      ],
      "relevance": 0.5029296875
    },
    "Entity-there_are_some_attempt": {
      "node_id": "there_are_some_attempt",
      "disambiguation_index": 0,
      "label": "There are some attempts",
      "aliases": [
        "There are some attempts"
      ],
      "types": [
        "research",
        "attempts"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Previous efforts to establish logical foundations for the SHACL language",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-1",
          "local_name": "There are some attempts",
          "local_types": [
            "research",
            "attempts"
          ],
          "iri": "Entity-there_are_some_attempt-Mention-1"
        }
      ],
      "relevance": 0.5029296875
    },
    "Entity-self-loops_to_have_a_unary_predicate_act_a_the_label_of_a_link_in_the_graph": {
      "node_id": "self-loops_to_have_a_unary_predicate_act_a_the_label_of_a_link_in_the_graph",
      "disambiguation_index": 0,
      "label": "self-loops to have a unary predicate act as the label of a link in the graph",
      "aliases": [
        "self-loops to have a unary predicate act as the label of a link in the graph"
      ],
      "types": [
        "notation",
        "graph structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A notation or graph structure that represents a unary predicate acting as the label of a link in a graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "self-loops to have a unary predicate act as the label of a link in the graph",
          "local_types": [
            "notation",
            "graph structure"
          ],
          "iri": "Entity-self-loops_to_have_a_unary_predicate_act_a_the_label_of_a_link_in_the_graph-Mention-1"
        }
      ],
      "relevance": 0.50244140625
    },
    "Entity-the_body_of_the_rule": {
      "node_id": "the_body_of_the_rule",
      "disambiguation_index": 0,
      "label": "the body of the rule",
      "aliases": [
        "the body of the rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The part of an Inverse Open Path (IOP) rule that specifies the predicate Pt, which is universally quantified and used as a condition for instantiating the head predicates P1 ^ ... ^ Pn.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "the body of the rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_body_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.50244140625
    },
    "Entity-it_treat_all_property__both_object_and_datatype_property__a_plain_predicate_so_there_is_no_distinction": {
      "node_id": "it_treat_all_property__both_object_and_datatype_property__a_plain_predicate_so_there_is_no_distinction",
      "disambiguation_index": 0,
      "label": "it treats all properties, both object and datatype properties, as plain predicates so there is no distinction",
      "aliases": [
        "it treats all properties, both object and datatype properties, as plain predicates so there is no distinction"
      ],
      "types": [
        "limitation",
        "feature"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A limitation of SHACLearner with respect to SHACL Core that treats all properties (both object and datatype) as plain predicates, without distinction.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-2",
          "local_name": "it treats all properties, both object and datatype properties, as plain predicates so there is no distinction",
          "local_types": [
            "limitation",
            "feature"
          ],
          "iri": "Entity-it_treat_all_property__both_object_and_datatype_property__a_plain_predicate_so_there_is_no_distinction-Mention-1"
        }
      ],
      "relevance": 0.501953125
    },
    "Entity-each_element_with_value___car_indicates_a_satisfying_e__and_the_count_of_distinct_e_s_is_the_count_of_non-zero_element_in_that_vector": {
      "node_id": "each_element_with_value___car_indicates_a_satisfying_e__and_the_count_of_distinct_e_s_is_the_count_of_non-zero_element_in_that_vector",
      "disambiguation_index": 0,
      "label": "each element with value >= Car indicates a satisfying e, and the count of distinct e's is the count of non-zero elements in that vector",
      "aliases": [
        "each element with value >= Car indicates a satisfying e, and the count of distinct e's is the count of non-zero elements in that vector"
      ],
      "types": [
        "rule",
        "counting"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A counting rule used to evaluate the quality measures IOPSC and IOPHC, where each element with value >= Car indicates a satisfying e, and the count of distinct e's is the count of non-zero elements in that vector.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "each element with value >= Car indicates a satisfying e, and the count of distinct e's is the count of non-zero elements in that vector",
          "local_types": [
            "rule",
            "counting"
          ],
          "iri": "Entity-each_element_with_value___car_indicates_a_satisfying_e__and_the_count_of_distinct_e_s_is_the_count_of_non-zero_element_in_that_vector-Mention-1"
        }
      ],
      "relevance": 0.50146484375
    },
    "Entity-learned_rule": {
      "node_id": "learned_rule",
      "disambiguation_index": 0,
      "label": "learned rules",
      "aliases": [
        "learned rules"
      ],
      "types": [
        "algorithm",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of algorithms or guidelines that are acquired through learning or experience.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-4",
          "local_name": "learned rules",
          "local_types": [
            "algorithm",
            "rule set"
          ],
          "iri": "Entity-learned_rule-Mention-1"
        }
      ],
      "relevance": 0.50146484375
    },
    "Entity-for_example__a_shape_can_be_derived_from_the_following_three_iop_rule_": {
      "node_id": "for_example__a_shape_can_be_derived_from_the_following_three_iop_rule_",
      "disambiguation_index": 0,
      "label": "For example, a shape can be derived from the following three IOP rules:",
      "aliases": [
        "For example, a shape can be derived from the following three IOP rules:"
      ],
      "types": [
        "example"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Three IOP rules that can be used to derive a shape",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "For example, a shape can be derived from the following three IOP rules:",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_example__a_shape_can_be_derived_from_the_following_three_iop_rule_-Mention-1"
        }
      ],
      "relevance": 0.5009765625
    },
    "Entity-for_an_example_of_tree_shape_learning": {
      "node_id": "for_an_example_of_tree_shape_learning",
      "disambiguation_index": 0,
      "label": "For an example of tree shape learning",
      "aliases": [
        "For an example of tree shape learning"
      ],
      "types": [
        "research",
        "example"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A demonstration or illustration used to teach or explain the concept of tree shape learning",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "For an example of tree shape learning",
          "local_types": [
            "research",
            "example"
          ],
          "iri": "Entity-for_an_example_of_tree_shape_learning-Mention-1"
        }
      ],
      "relevance": 0.5009765625
    },
    "Entity-deeper__more_complex_tree": {
      "node_id": "deeper__more_complex_tree",
      "disambiguation_index": 0,
      "label": "deeper, more complex tree",
      "aliases": [
        "deeper, more complex tree"
      ],
      "types": [
        "tree data structure",
        "computer science concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A hierarchical data structure with increased depth and complexity.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-1",
          "local_name": "deeper, more complex tree",
          "local_types": [
            "tree data structure",
            "computer science concept"
          ],
          "iri": "Entity-deeper__more_complex_tree-Mention-1"
        }
      ],
      "relevance": 0.50048828125
    },
    "Entity-thus": {
      "node_id": "thus",
      "disambiguation_index": 0,
      "label": "Thus",
      "aliases": [
        "Thus"
      ],
      "types": [
        "phrase"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The phrase 'Thus' is used to introduce an adjacency matrix representation of a knowledge graph, where each A(Pk) is a binary-valued square matrix indicating the presence or absence of facts in the graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-4",
          "local_name": "Thus",
          "local_types": [
            "phrase"
          ],
          "iri": "Entity-thus-Mention-1"
        }
      ],
      "relevance": 0.50048828125
    },
    "Entity-the_adjacency_matrix": {
      "node_id": "the_adjacency_matrix",
      "disambiguation_index": 0,
      "label": "The adjacency matrices",
      "aliases": [
        "The adjacency matrices"
      ],
      "types": [
        "data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of square n x n binary-valued matrices representing a knowledge graph, where each matrix corresponds to a predicate and the [i, j]-th element indicates whether there exists an edge between entities e_i and e_j.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "The adjacency matrices",
          "local_types": [
            "data"
          ],
          "iri": "Entity-the_adjacency_matrix-Mention-1"
        }
      ],
      "relevance": 0.50048828125
    },
    "Entity-greedysearch": {
      "node_id": "greedysearch",
      "disambiguation_index": 0,
      "label": "GreedySearch",
      "aliases": [
        "GreedySearch"
      ],
      "types": [
        "algorithm",
        "search technique",
        "method",
        "technique",
        "optimization technique",
        "search algorithm",
        "tool",
        "search method"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A search technique or algorithm that optimizes a process by making greedy decisions based on available information.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-12",
          "local_name": "GreedySearch",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-greedysearch-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-1",
          "local_name": "GreedySearch",
          "local_types": [
            "algorithm",
            "search algorithm",
            "method",
            "optimization technique"
          ],
          "iri": "Entity-greedysearch-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-7",
          "local_name": "GreedySearch",
          "local_types": [
            "algorithm",
            "search technique",
            "technique",
            "tool",
            "search method"
          ],
          "iri": "Entity-greedysearch-Mention-3"
        }
      ],
      "relevance": 0.499267578125
    },
    "Entity-the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate": {
      "node_id": "the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate",
      "disambiguation_index": 0,
      "label": "the type of entities in the domain and range of predicates, or the number of entities to which an entity can be related by a specific predicate",
      "aliases": [
        "the type of entities in the domain and range of predicates, or the number of entities to which an entity can be related by a specific predicate"
      ],
      "types": [
        "constraint",
        "predicate constraint"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Constraints on graph data that define types of entities involved in relationships between predicates or specify the number of entities connected by a particular predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "the type of entities in the domain and range of predicates, or the number of entities to which an entity can be related by a specific predicate",
          "local_types": [
            "constraint",
            "predicate constraint"
          ],
          "iri": "Entity-the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate-Mention-1"
        }
      ],
      "relevance": 0.499267578125
    },
    "Entity-the_body_of_r_(1)": {
      "node_id": "the_body_of_r_(1)",
      "disambiguation_index": 1,
      "label": "the body of r",
      "aliases": [
        "the body of r"
      ],
      "types": [
        "body",
        "reference"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of predicate facts in a tree shape, denoted Pt(e'', e), which satisfies if there exist sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' in the KG such that P1(\u0435, \u04351), P2(\u04351, \u04352), ..., Pt(\u0435(\u043e-1)', \u0435) are facts in the KG.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-4",
          "local_name": "the body of r",
          "local_types": [
            "body",
            "reference"
          ],
          "iri": "Entity-the_body_of_r_(1)-Mention-1"
        }
      ],
      "relevance": 0.499267578125
    },
    "Entity-car_value_1__2__and_3_respectively": {
      "node_id": "car_value_1__2__and_3_respectively",
      "disambiguation_index": 0,
      "label": "Car values 1, 2, and 3 respectively",
      "aliases": [
        "Car values 1, 2, and 3 respectively"
      ],
      "types": [
        "values"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of distinct cardinality values (Car) for a rule in SHACLearner, representing different versions of the rule with varying support, confidence, and harmonic measures.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "Car values 1, 2, and 3 respectively",
          "local_types": [
            "values"
          ],
          "iri": "Entity-car_value_1__2__and_3_respectively-Mention-1"
        }
      ],
      "relevance": 0.4990234375
    },
    "Entity-sequence_of_entity": {
      "node_id": "sequence_of_entity",
      "disambiguation_index": 0,
      "label": "sequences of entities",
      "aliases": [
        "sequences of entities"
      ],
      "types": [
        "sequence",
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of pairs of entities that satisfies a tree shape's head predicate, defined by sequences of entities and predicates from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "sequences of entities",
          "local_types": [
            "sequence",
            "entities"
          ],
          "iri": "Entity-sequence_of_entity-Mention-1"
        }
      ],
      "relevance": 0.4990234375
    },
    "Entity-fgds_define_constraint_like_the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate_.": {
      "node_id": "fgds_define_constraint_like_the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate_.",
      "disambiguation_index": 0,
      "label": "FGDs define constraints like the type of entities in the domain and range of predicates, or the number of entities to which an entity can be related by a specific predicate.",
      "aliases": [
        "FGDs define constraints like the type of entities in the domain and range of predicates, or the number of entities to which an entity can be related by a specific predicate."
      ],
      "types": [
        "definition",
        "constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of rules that impose restrictions on relationships between entities",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "FGDs define constraints like the type of entities in the domain and range of predicates, or the number of entities to which an entity can be related by a specific predicate.",
          "local_types": [
            "definition",
            "constraint"
          ],
          "iri": "Entity-fgds_define_constraint_like_the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate_.-Mention-1"
        }
      ],
      "relevance": 0.498779296875
    },
    "Entity-a_sequence_of_predicate": {
      "node_id": "a_sequence_of_predicate",
      "disambiguation_index": 0,
      "label": "a sequence of predicates",
      "aliases": [
        "a sequence of predicates"
      ],
      "types": [
        "sequence",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A fundamental unit in SHACL shapes, consisting of a series of connected predicate instances or variables.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "a sequence of predicates",
          "local_types": [
            "sequence",
            "predicate"
          ],
          "iri": "Entity-a_sequence_of_predicate-Mention-1"
        }
      ],
      "relevance": 0.49853515625
    },
    "Entity-for_each_given_fact": {
      "node_id": "for_each_given_fact",
      "disambiguation_index": 0,
      "label": "For each given fact",
      "aliases": [
        "For each given fact"
      ],
      "types": [
        "text"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific instance of a fact in a knowledge graph, used as input for computing predicate embeddings and scoring functions.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-4",
          "local_name": "For each given fact",
          "local_types": [
            "text"
          ],
          "iri": "Entity-for_each_given_fact-Mention-1"
        }
      ],
      "relevance": 0.49853515625
    },
    "Entity-hc": {
      "node_id": "hc",
      "disambiguation_index": 0,
      "label": "HC",
      "aliases": [
        "HC"
      ],
      "types": [
        "algorithm",
        "metric",
        "method",
        "concept",
        "evaluation method",
        "theory"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A measure or evaluation method that assesses the explanatory power of a given concept, rule, or theory.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-4",
          "local_name": "HC",
          "local_types": [
            "algorithm",
            "method",
            "concept",
            "theory"
          ],
          "iri": "Entity-hc-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-6",
          "local_name": "HC",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-hc-Mention-2"
        }
      ],
      "relevance": 0.498291015625
    },
    "Entity-both_kind_of_error_can_be_highlighted_for_correction_by_a_careful_application_of_schema_constraint": {
      "node_id": "both_kind_of_error_can_be_highlighted_for_correction_by_a_careful_application_of_schema_constraint",
      "disambiguation_index": 0,
      "label": "Both kinds of errors can be highlighted for correction by a careful application of schema constraints",
      "aliases": [
        "Both kinds of errors can be highlighted for correction by a careful application of schema constraints"
      ],
      "types": [
        "concept",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Schema constraints",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-4",
          "local_name": "Both kinds of errors can be highlighted for correction by a careful application of schema constraints",
          "local_types": [
            "concept",
            "methodology"
          ],
          "iri": "Entity-both_kind_of_error_can_be_highlighted_for_correction_by_a_careful_application_of_schema_constraint-Mention-1"
        }
      ],
      "relevance": 0.498291015625
    },
    "Entity-ophc__r_": {
      "node_id": "ophc__r_",
      "disambiguation_index": 0,
      "label": "OPHC(r)",
      "aliases": [
        "OPHC(r)"
      ],
      "types": [
        "notation",
        "mathematical concept",
        "expression",
        "mathematical formula",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The open path head coverage of a rule, which measures the proportion of entities for which there exists another entity satisfying both the body and the head of the rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-4",
          "local_name": "OPHC(r)",
          "local_types": [
            "notation",
            "mathematical concept",
            "expression",
            "mathematical formula",
            "function"
          ],
          "iri": "Entity-ophc__r_-Mention-1"
        }
      ],
      "relevance": 0.498291015625
    },
    "Entity-nativelanguage__x__z3___language__z3_": {
      "node_id": "nativelanguage__x__z3___language__z3_",
      "disambiguation_index": 0,
      "label": "nativeLanguage( x, z3 ) ^ language(z3)",
      "aliases": [
        "nativeLanguage( x, z3 ) ^ language(z3)"
      ],
      "types": [
        "path",
        "language"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A path shape constraint that specifies each entity x satisfying human(x) should have a native language associated with it, which is also a language.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "nativeLanguage( x, z3 ) ^ language(z3)",
          "local_types": [
            "path",
            "language"
          ],
          "iri": "Entity-nativelanguage__x__z3___language__z3_-Mention-1"
        }
      ],
      "relevance": 0.498291015625
    },
    "Entity-specifically__the__i__j__-th_element_a__pk___i__j__is_1_if": {
      "node_id": "specifically__the__i__j__-th_element_a__pk___i__j__is_1_if",
      "disambiguation_index": 0,
      "label": "Specifically, the [i, j]-th element A(Pk)[i, j] is 1 if",
      "aliases": [
        "Specifically, the [i, j]-th element A(Pk)[i, j] is 1 if"
      ],
      "types": [
        "notation",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The adjacency matrix representation of a fact in a knowledge graph, where each entry represents whether a particular predicate connects two entities.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "Specifically, the [i, j]-th element A(Pk)[i, j] is 1 if",
          "local_types": [
            "notation",
            "mathematics"
          ],
          "iri": "Entity-specifically__the__i__j__-th_element_a__pk___i__j__is_1_if-Mention-1"
        }
      ],
      "relevance": 0.498046875
    },
    "Entity-the_introduction_of_knowledge_panel_to_google_search_in_2012": {
      "node_id": "the_introduction_of_knowledge_panel_to_google_search_in_2012",
      "disambiguation_index": 0,
      "label": "the introduction of knowledge panels to Google search in 2012",
      "aliases": [
        "the introduction of knowledge panels to Google search in 2012"
      ],
      "types": [
        "event"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The event when knowledge panels were introduced to Google Search in 2012.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "the introduction of knowledge panels to Google search in 2012",
          "local_types": [
            "event"
          ],
          "iri": "Entity-the_introduction_of_knowledge_panel_to_google_search_in_2012-Mention-1"
        }
      ],
      "relevance": 0.498046875
    },
    "Entity-_e__e1___...___e__eq_": {
      "node_id": "_e__e1___...___e__eq_",
      "disambiguation_index": 0,
      "label": "(e, e1), ..., (e, eq)",
      "aliases": [
        "(e, e1), ..., (e, eq)"
      ],
      "types": [
        "sequence",
        "pairs",
        "tuple",
        "entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of pairs of entities that satisfies the head of a tree shape in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "(e, e1), ..., (e, eq)",
          "local_types": [
            "sequence",
            "pairs",
            "tuple",
            "entities"
          ],
          "iri": "Entity-_e__e1___...___e__eq_-Mention-1"
        }
      ],
      "relevance": 0.497802734375
    },
    "Entity-it_(2)": {
      "node_id": "it_(2)",
      "disambiguation_index": 2,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept of standard confidence (SC) and head coverage (HC), measures that describe how frequently a closed-path rule is true and its explanatory power, respectively.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-5",
          "local_name": "It",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-it_(2)-Mention-1"
        }
      ],
      "relevance": 0.497802734375
    },
    "Entity-a_song__x__to_have_at_least_one_producer": {
      "node_id": "a_song__x__to_have_at_least_one_producer",
      "disambiguation_index": 0,
      "label": "a song (x) to have at least one producer",
      "aliases": [
        "a song (x) to have at least one producer"
      ],
      "types": [
        "rule",
        "constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A specific SHACL shape constraint requiring that a song has at least one producer.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-4",
          "local_name": "a song (x) to have at least one producer",
          "local_types": [
            "rule",
            "constraint"
          ],
          "iri": "Entity-a_song__x__to_have_at_least_one_producer-Mention-1"
        }
      ],
      "relevance": 0.49755859375
    },
    "Entity-graph_functional_dependency": {
      "node_id": "graph_functional_dependency",
      "disambiguation_index": 0,
      "label": "graph functional dependencies",
      "aliases": [
        "graph functional dependencies"
      ],
      "types": [
        "database theory",
        "dependency",
        "computer science",
        "mathematical concept",
        "functional dependency"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Functional dependencies in a graph context",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "graph functional dependencies",
          "local_types": [
            "database theory",
            "dependency",
            "computer science",
            "mathematical concept",
            "functional dependency"
          ],
          "iri": "Entity-graph_functional_dependency-Mention-1"
        }
      ],
      "relevance": 0.4970703125
    },
    "Entity-the_shape_of_fig_._2": {
      "node_id": "the_shape_of_fig_._2",
      "disambiguation_index": 0,
      "label": "the shape of Fig. 2",
      "aliases": [
        "the shape of Fig. 2"
      ],
      "types": [
        "shape",
        "knowledge structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The geometric form or outline of a diagrammatic representation.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "the shape of Fig. 2",
          "local_types": [
            "shape",
            "knowledge structure"
          ],
          "iri": "Entity-the_shape_of_fig_._2-Mention-1"
        }
      ],
      "relevance": 0.4970703125
    },
    "Entity-satisfies_the_head_of_r": {
      "node_id": "satisfies_the_head_of_r",
      "disambiguation_index": 0,
      "label": "satisfies the head of r",
      "aliases": [
        "satisfies the head of r"
      ],
      "types": [
        "logical statement",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The head of a tree shape, which represents a sequence of paths or branches that can be used to validate an instance in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "satisfies the head of r",
          "local_types": [
            "logical statement",
            "mathematical concept"
          ],
          "iri": "Entity-satisfies_the_head_of_r-Mention-1"
        }
      ],
      "relevance": 0.4970703125
    },
    "Entity-with_entity_e_and_fact_f": {
      "node_id": "with_entity_e_and_fact_f",
      "disambiguation_index": 0,
      "label": "with entities E and facts F",
      "aliases": [
        "with entities E and facts F"
      ],
      "types": [
        "entities",
        "facts"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept refers to the combination of entities E and facts F within a knowledge graph K.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "with entities E and facts F",
          "local_types": [
            "entities",
            "facts"
          ],
          "iri": "Entity-with_entity_e_and_fact_f-Mention-1"
        }
      ],
      "relevance": 0.4970703125
    },
    "Entity-the_iopsc": {
      "node_id": "the_iopsc",
      "disambiguation_index": 0,
      "label": "The IOPSC",
      "aliases": [
        "The IOPSC"
      ],
      "types": [
        "organization"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Inverse Open Path Standard Confidence measure",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-2",
          "local_name": "The IOPSC",
          "local_types": [
            "organization"
          ],
          "iri": "Entity-the_iopsc-Mention-1"
        }
      ],
      "relevance": 0.496337890625
    },
    "Entity-it_component__p___x__t_": {
      "node_id": "it_component__p___x__t_",
      "disambiguation_index": 0,
      "label": "its components: P*(x, t)",
      "aliases": [
        "its components: P*(x, t)"
      ],
      "types": [
        "component",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A composite predicate representing a path of entities that satisfy a chain of predicates in an IOP rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "its components: P*(x, t)",
          "local_types": [
            "component",
            "predicate"
          ],
          "iri": "Entity-it_component__p___x__t_-Mention-1"
        }
      ],
      "relevance": 0.49609375
    },
    "Entity-branch": {
      "node_id": "branch",
      "disambiguation_index": 0,
      "label": "branch",
      "aliases": [
        "branches",
        "branch"
      ],
      "types": [
        "tree structure",
        "concept",
        "algorithmic graph traversal",
        "part of a tree",
        "computer science",
        "subtree",
        "botanical feature",
        "substructure",
        "structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A part or subdivision of a larger entity, often characterized as having its own distinct properties or functions.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-4",
          "local_name": "branch",
          "local_types": [
            "computer science",
            "algorithmic graph traversal"
          ],
          "iri": "Entity-branch-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "branch",
          "local_types": [
            "part of a tree",
            "substructure"
          ],
          "iri": "Entity-branch-Mention-2"
        },
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "branches",
          "local_types": [
            "botanical feature",
            "tree structure",
            "concept",
            "structure"
          ],
          "iri": "Entity-branch-Mention-3"
        },
        {
          "reference": "Section-17-Paragraph-5-Sentence-1",
          "local_name": "branches",
          "local_types": [
            "subtree"
          ],
          "iri": "Entity-branch-Mention-4"
        }
      ],
      "relevance": 0.495849609375
    },
    "Entity-ontology": {
      "node_id": "ontology",
      "disambiguation_index": 0,
      "label": "ontologies",
      "aliases": [
        "ontologies"
      ],
      "types": [
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Formal systems that represent knowledge using classes, types, and relationships.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-3",
          "local_name": "ontologies",
          "local_types": [
            "knowledge representation"
          ],
          "iri": "Entity-ontology-Mention-1"
        }
      ],
      "relevance": 0.495849609375
    },
    "Entity-non-structured_source_such_a_wikipedia": {
      "node_id": "non-structured_source_such_a_wikipedia",
      "disambiguation_index": 0,
      "label": "non-structured sources such as Wikipedia",
      "aliases": [
        "non-structured sources such as Wikipedia"
      ],
      "types": [
        "source",
        "Wikipedia"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Non-structured online encyclopedias, like Wikipedia, used for populating large knowledge graphs with incomplete information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "non-structured sources such as Wikipedia",
          "local_types": [
            "source",
            "Wikipedia"
          ],
          "iri": "Entity-non-structured_source_such_a_wikipedia-Mention-1"
        }
      ],
      "relevance": 0.495361328125
    },
    "Entity-pt__e___e_": {
      "node_id": "pt__e___e_",
      "disambiguation_index": 0,
      "label": "Pt( e', e )",
      "aliases": [
        "Pt(e', e)",
        "Pt( e', e )"
      ],
      "types": [
        "relation",
        "binary relation",
        "predicate logic",
        "function",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The predicate 'Pt' representing an open path rule head, denoting the existence of a fact in a knowledge graph where entities 'e'' and 'e' are connected.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-4",
          "local_name": "Pt( e', e )",
          "local_types": [
            "predicate logic",
            "predicate",
            "function"
          ],
          "iri": "Entity-pt__e___e_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-8-Sentence-3",
          "local_name": "Pt(e', e)",
          "local_types": [
            "binary relation",
            "relation",
            "predicate"
          ],
          "iri": "Entity-pt__e___e_-Mention-2"
        }
      ],
      "relevance": 0.4951171875
    },
    "Entity-let_r_(2)": {
      "node_id": "let_r_(2)",
      "disambiguation_index": 2,
      "label": "Let r",
      "aliases": [
        "Let r"
      ],
      "types": [
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A variable representing an Inverse Open Path (IOP) rule of the form Pt'(x, z0) -> P1'(z0, z1) ^ ... ^ Pn'(z(n-1), y)",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "Let r",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-let_r_(2)-Mention-1"
        }
      ],
      "relevance": 0.4951171875
    },
    "Entity-dbpedia_3.8": {
      "node_id": "dbpedia_3.8",
      "disambiguation_index": 0,
      "label": "DBpedia 3.8",
      "aliases": [
        "DBpedia 3.8 with 11 million facts",
        "DBpedia 3.8"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A knowledge graph dataset containing approximately 11 million facts.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "DBpedia 3.8",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-dbpedia_3.8-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "DBpedia 3.8 with 11 million facts",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-dbpedia_3.8-Mention-2"
        }
      ],
      "relevance": 0.494873046875
    },
    "Entity-algorithm_1": {
      "node_id": "algorithm_1",
      "disambiguation_index": 0,
      "label": "Algorithm 1",
      "aliases": [
        "Algorithm 1"
      ],
      "types": [
        "code snippet",
        "reference",
        "document",
        "computational process",
        "computer science concept",
        "conceptual entity",
        "paper",
        "software",
        "method",
        "code",
        "pseudocode",
        "computer program",
        "software component",
        "research",
        "notation",
        "computational method",
        "process",
        "methodology",
        "algorithm",
        "program",
        "concept",
        "technique",
        "computer science",
        "mathematical concept",
        "system",
        "computing process",
        "procedure",
        "technical term",
        "named entity"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A computational method or procedure for solving a specific problem or achieving a particular goal.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "algorithm",
            "software",
            "method"
          ],
          "iri": "Entity-algorithm_1-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "algorithm",
            "program",
            "method",
            "concept",
            "reference",
            "computational process"
          ],
          "iri": "Entity-algorithm_1-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "Algorithm 1",
          "local_types": [
            "algorithm",
            "software",
            "code",
            "notation",
            "computational method",
            "reference",
            "computer program",
            "computational process",
            "conceptual entity",
            "methodology"
          ],
          "iri": "Entity-algorithm_1-Mention-3"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "Algorithm 1",
          "local_types": [
            "code snippet",
            "notation",
            "pseudocode",
            "reference"
          ],
          "iri": "Entity-algorithm_1-Mention-4"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "algorithm",
            "program",
            "concept",
            "computer science",
            "paper",
            "named entity"
          ],
          "iri": "Entity-algorithm_1-Mention-5"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "algorithm",
            "process",
            "research",
            "procedure",
            "technical term"
          ],
          "iri": "Entity-algorithm_1-Mention-6"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "algorithm",
            "computational method",
            "reference",
            "document",
            "process",
            "procedure"
          ],
          "iri": "Entity-algorithm_1-Mention-7"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "algorithm",
            "technique",
            "mathematical concept",
            "reference",
            "computational method",
            "computer science concept"
          ],
          "iri": "Entity-algorithm_1-Mention-8"
        },
        {
          "reference": "Section-16-Paragraph-1-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "algorithm",
            "system",
            "computing process",
            "computer program"
          ],
          "iri": "Entity-algorithm_1-Mention-9"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-5",
          "local_name": "Algorithm 1",
          "local_types": [
            "algorithm",
            "system",
            "computer program",
            "software component",
            "methodology"
          ],
          "iri": "Entity-algorithm_1-Mention-10"
        }
      ],
      "relevance": 0.494873046875
    },
    "Entity-triple_format": {
      "node_id": "triple_format",
      "disambiguation_index": 0,
      "label": "triple format",
      "aliases": [
        "triple format"
      ],
      "types": [
        "data representation",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standardized structure or arrangement of three elements, typically representing subject-predicate-object relationships in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-3",
          "local_name": "triple format",
          "local_types": [
            "data representation",
            "format"
          ],
          "iri": "Entity-triple_format-Mention-1"
        }
      ],
      "relevance": 0.494873046875
    },
    "Entity-a__pk_": {
      "node_id": "a__pk_",
      "disambiguation_index": 0,
      "label": "A(Pk)",
      "aliases": [
        "A(Pk)"
      ],
      "types": [
        "matrix",
        "mathematical concept",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The adjacency matrix representation of predicate Pk, where A(Pk)[i, j] is 1 if fact Pk(ei, ej) exists in the knowledge graph and 0 otherwise.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-4",
          "local_name": "A(Pk)",
          "local_types": [
            "matrix",
            "mathematical concept",
            "mathematical expression"
          ],
          "iri": "Entity-a__pk_-Mention-1"
        }
      ],
      "relevance": 0.49462890625
    },
    "Entity-our_novel_tree_shape": {
      "node_id": "our_novel_tree_shape",
      "disambiguation_index": 0,
      "label": "Our novel tree shapes",
      "aliases": [
        "Our novel tree shapes"
      ],
      "types": [
        "algorithm",
        "research result",
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of innovative and original designs or structures resembling trees",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-2",
          "local_name": "Our novel tree shapes",
          "local_types": [
            "algorithm",
            "research result",
            "research"
          ],
          "iri": "Entity-our_novel_tree_shape-Mention-1"
        }
      ],
      "relevance": 0.49462890625
    },
    "Entity-_pi__e__e_____e_in_esample__and__e__in_esample__": {
      "node_id": "_pi__e__e_____e_in_esample__and__e__in_esample__",
      "disambiguation_index": 0,
      "label": "{ Pi(e, e') | (e in Esample) and (e' in Esample) }",
      "aliases": [
        "{ Pi(e, e') | (e in Esample) and (e' in Esample) }"
      ],
      "types": [
        "formula",
        "mathematical expression",
        "set theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of pairs of entities related by a predicate in the sampled knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-10",
          "local_name": "{ Pi(e, e') | (e in Esample) and (e' in Esample) }",
          "local_types": [
            "formula",
            "mathematical expression",
            "set theory"
          ],
          "iri": "Entity-_pi__e__e_____e_in_esample__and__e__in_esample__-Mention-1"
        }
      ],
      "relevance": 0.494384765625
    },
    "Entity-shape_quality_measure_that_are_essential_for_large_scale_shape_mining": {
      "node_id": "shape_quality_measure_that_are_essential_for_large_scale_shape_mining",
      "disambiguation_index": 0,
      "label": "shape quality measures that are essential for large scale shape mining",
      "aliases": [
        "shape quality measures that are essential for large scale shape mining"
      ],
      "types": [
        "metric",
        "measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Quantifiable indicators used to evaluate and assess the characteristics or attributes of shapes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "shape quality measures that are essential for large scale shape mining",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-shape_quality_measure_that_are_essential_for_large_scale_shape_mining-Mention-1"
        }
      ],
      "relevance": 0.493896484375
    },
    "Entity-open_path_standard_confidence__opsc_": {
      "node_id": "open_path_standard_confidence__opsc_",
      "disambiguation_index": 0,
      "label": "open path standard confidence (OPSC)",
      "aliases": [
        "open path standard confidence (OPSC)"
      ],
      "types": [
        "metric",
        "evaluation method",
        "evaluation measure",
        "measure",
        "confidence metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure of the proportion of entities that satisfy both the body and head of an open path rule, used to evaluate the quality of such rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "open path standard confidence (OPSC)",
          "local_types": [
            "metric",
            "evaluation method",
            "evaluation measure",
            "measure",
            "confidence metric"
          ],
          "iri": "Entity-open_path_standard_confidence__opsc_-Mention-1"
        }
      ],
      "relevance": 0.493408203125
    },
    "Entity-if_there_exist_sequence_of_entity_e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1___in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq__are_fact_in_the_kg_.": {
      "node_id": "if_there_exist_sequence_of_entity_e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1___in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq__are_fact_in_the_kg_.",
      "disambiguation_index": 0,
      "label": "if there exist sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' in the KG such that P1(e, e1), P2(e1, e2), ..., Pt(e( q-1)', eq) are facts in the KG.",
      "aliases": [
        "if there exist sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' in the KG such that P1(e, e1), P2(e1, e2), ..., Pt(e( q-1)', eq) are facts in the KG."
      ],
      "types": [
        "statement",
        "mathematical statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical statement that describes a sequence of entities and their relationships.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "if there exist sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' in the KG such that P1(e, e1), P2(e1, e2), ..., Pt(e( q-1)', eq) are facts in the KG.",
          "local_types": [
            "statement",
            "mathematical statement"
          ],
          "iri": "Entity-if_there_exist_sequence_of_entity_e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1___in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq__are_fact_in_the_kg_.-Mention-1"
        }
      ],
      "relevance": 0.493408203125
    },
    "Entity-the_limitation_of_shaclearner": {
      "node_id": "the_limitation_of_shaclearner",
      "disambiguation_index": 0,
      "label": "The limitations of SHACLearner",
      "aliases": [
        "The limitations of SHACLearner"
      ],
      "types": [
        "limitation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The limitations or shortcomings of SHACLearner with respect to the full capabilities of SHACL Core.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-2",
          "local_name": "The limitations of SHACLearner",
          "local_types": [
            "limitation"
          ],
          "iri": "Entity-the_limitation_of_shaclearner-Mention-1"
        }
      ],
      "relevance": 0.493408203125
    },
    "Entity-inductive_logic_programming": {
      "node_id": "inductive_logic_programming",
      "disambiguation_index": 0,
      "label": "inductive logic programming",
      "aliases": [
        "inductive logic programming"
      ],
      "types": [
        "subfield of computer science",
        "artificial intelligence technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A subfield of computer science and artificial intelligence technique that involves learning logical rules from data through iterative refinement.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-5",
          "local_name": "inductive logic programming",
          "local_types": [
            "subfield of computer science",
            "artificial intelligence technique"
          ],
          "iri": "Entity-inductive_logic_programming-Mention-1"
        }
      ],
      "relevance": 0.49267578125
    },
    "Entity-each_non-zero_element_indicates_a_satisfying_e": {
      "node_id": "each_non-zero_element_indicates_a_satisfying_e",
      "disambiguation_index": 0,
      "label": "Each non-zero element indicates a satisfying e",
      "aliases": [
        "Each non-zero element indicates a satisfying e"
      ],
      "types": [
        "property",
        "algorithmic process"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The count of distinct entities (e') that satisfy the body of an IOP rule, obtained from summing each column and transposing the adjacency matrix A(Pt) for predicate Pt.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "Each non-zero element indicates a satisfying e",
          "local_types": [
            "property",
            "algorithmic process"
          ],
          "iri": "Entity-each_non-zero_element_indicates_a_satisfying_e-Mention-1"
        }
      ],
      "relevance": 0.492431640625
    },
    "Entity-e2__e3": {
      "node_id": "e2__e3",
      "disambiguation_index": 0,
      "label": "e2, e3",
      "aliases": [
        "e2 and e3",
        "e2, e3"
      ],
      "types": [
        "unknown entities (not further specified)",
        "entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entities {e2, e3} satisfying the body and head of an IOP rule with cardinality 1.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "e2, e3",
          "local_types": [
            "entities",
            "unknown entities (not further specified)"
          ],
          "iri": "Entity-e2__e3-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-6",
          "local_name": "e2 and e3",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-e2__e3-Mention-2"
        }
      ],
      "relevance": 0.492431640625
    },
    "Entity-the_proportion": {
      "node_id": "the_proportion",
      "disambiguation_index": 0,
      "label": "the proportion",
      "aliases": [
        "the proportion"
      ],
      "types": [
        "statistic"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The proportion refers to the percentage or ratio of quality rules mined from knowledge graphs, indicating the confidence and relevance of these rules in validating graph data.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-4",
          "local_name": "the proportion",
          "local_types": [
            "statistic"
          ],
          "iri": "Entity-the_proportion-Mention-1"
        }
      ],
      "relevance": 0.492431640625
    },
    "Entity-the_adjacency_matrix_for_the_predicate_p1__p2__and_pt_are": {
      "node_id": "the_adjacency_matrix_for_the_predicate_p1__p2__and_pt_are",
      "disambiguation_index": 0,
      "label": "The adjacency matrices for the predicates P1, P2, and Pt are",
      "aliases": [
        "The adjacency matrices for the predicates P1, P2, and Pt are"
      ],
      "types": [
        "text"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of square n x n adjacency matrices representing a knowledge graph K = (E, F), where E is the set of all entities and P is the set of all predicates in F.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "The adjacency matrices for the predicates P1, P2, and Pt are",
          "local_types": [
            "text"
          ],
          "iri": "Entity-the_adjacency_matrix_for_the_predicate_p1__p2__and_pt_are-Mention-1"
        }
      ],
      "relevance": 0.4921875
    },
    "Entity-the_number_of_potential_rule_in_the_search_space_grows_exponentially_with_the_maximum_number_of_predicate_of_the_rule": {
      "node_id": "the_number_of_potential_rule_in_the_search_space_grows_exponentially_with_the_maximum_number_of_predicate_of_the_rule",
      "disambiguation_index": 0,
      "label": "the number of potential rules in the search space grows exponentially with the maximum number of predicates of the rules",
      "aliases": [
        "the number of potential rules in the search space grows exponentially with the maximum number of predicates of the rules"
      ],
      "types": [
        "result",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept describing how the number of possible rules increases rapidly as the maximum number of rule predicates is increased.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-3",
          "local_name": "the number of potential rules in the search space grows exponentially with the maximum number of predicates of the rules",
          "local_types": [
            "result",
            "mathematical concept"
          ],
          "iri": "Entity-the_number_of_potential_rule_in_the_search_space_grows_exponentially_with_the_maximum_number_of_predicate_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.4921875
    },
    "Entity-subgraph": {
      "node_id": "subgraph",
      "disambiguation_index": 0,
      "label": "subgraph",
      "aliases": [
        "subgraph"
      ],
      "types": [
        "mathematics",
        "computer science"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A subset or partial structure within a larger network or graph",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-4",
          "local_name": "subgraph",
          "local_types": [
            "mathematics",
            "computer science"
          ],
          "iri": "Entity-subgraph-Mention-1"
        }
      ],
      "relevance": 0.491943359375
    },
    "Entity-x_and_z_i_are_variable_that_are_instantiated_by_entity": {
      "node_id": "x_and_z_i_are_variable_that_are_instantiated_by_entity",
      "disambiguation_index": 0,
      "label": "x and z_i are variables that are instantiated by entities",
      "aliases": [
        "x and z_i are variables that are instantiated by entities"
      ],
      "types": [
        "entity",
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Variables representing entity instances used to define constraints on graph data as shapes",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-2",
          "local_name": "x and z_i are variables that are instantiated by entities",
          "local_types": [
            "entity",
            "variable"
          ],
          "iri": "Entity-x_and_z_i_are_variable_that_are_instantiated_by_entity-Mention-1"
        }
      ],
      "relevance": 0.491943359375
    },
    "Entity-in_real_application": {
      "node_id": "in_real_application",
      "disambiguation_index": 0,
      "label": "In real applications",
      "aliases": [
        "In real applications"
      ],
      "types": [
        "application"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The practice of retaining and acting upon only the most high-quality IOP rules in actual usage scenarios.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-4",
          "local_name": "In real applications",
          "local_types": [
            "application"
          ],
          "iri": "Entity-in_real_application-Mention-1"
        }
      ],
      "relevance": 0.491943359375
    },
    "Entity-presenting_the_class_and_type_information": {
      "node_id": "presenting_the_class_and_type_information",
      "disambiguation_index": 0,
      "label": "Presenting the class and type information",
      "aliases": [
        "Presenting the class and type information"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process or method of representing class and type information as unary predicates, allowing for the learning of fully abstracted (entity-free) shapes.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-1",
          "local_name": "Presenting the class and type information",
          "local_types": [
            "method"
          ],
          "iri": "Entity-presenting_the_class_and_type_information-Mention-1"
        }
      ],
      "relevance": 0.49169921875
    },
    "Entity-and_the_number_of_distinct_e_s_is_the_count_of_non-zero_element": {
      "node_id": "and_the_number_of_distinct_e_s_is_the_count_of_non-zero_element",
      "disambiguation_index": 0,
      "label": "and the number of distinct e's is the count of non-zero elements",
      "aliases": [
        "the count of distinct e's is the count of non-zero elements in that vector",
        "and the number of distinct e's is the count of non-zero elements"
      ],
      "types": [
        "result",
        "mathematical concept",
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entities that satisfy the body of an IOP rule, represented as a vector where each non-zero element indicates a satisfying e and the number of distinct e's is the count of non-zero elements.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "and the number of distinct e's is the count of non-zero elements",
          "local_types": [
            "result",
            "mathematical concept"
          ],
          "iri": "Entity-and_the_number_of_distinct_e_s_is_the_count_of_non-zero_element-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "the count of distinct e's is the count of non-zero elements in that vector",
          "local_types": [
            "description"
          ],
          "iri": "Entity-and_the_number_of_distinct_e_s_is_the_count_of_non-zero_element-Mention-2"
        }
      ],
      "relevance": 0.491455078125
    },
    "Entity-with_three_different_car_value_1__2__and_3_respectively": {
      "node_id": "with_three_different_car_value_1__2__and_3_respectively",
      "disambiguation_index": 0,
      "label": "with three different Car values 1, 2, and 3 respectively",
      "aliases": [
        "with three different Car values 1, 2, and 3 respectively"
      ],
      "types": [
        "parameter",
        "values"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Three different SHACLearner rule versions (r1, r2, and r3) with varying Car values of 1, 2, and 3 respectively",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "with three different Car values 1, 2, and 3 respectively",
          "local_types": [
            "parameter",
            "values"
          ],
          "iri": "Entity-with_three_different_car_value_1__2__and_3_respectively-Mention-1"
        }
      ],
      "relevance": 0.491455078125
    },
    "Entity-embeddings": {
      "node_id": "embeddings",
      "disambiguation_index": 0,
      "label": "Embeddings",
      "aliases": [
        "Embeddings",
        "embeddings"
      ],
      "types": [
        "algorithm",
        "step",
        "technique",
        "concept",
        "module",
        "computer science",
        "vector space",
        "process",
        "vector",
        "field",
        "field of study",
        "function",
        "representation",
        "methodology",
        "component"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical representation of objects or concepts as vectors in a high-dimensional space",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "Embeddings",
          "local_types": [
            "step",
            "concept",
            "module",
            "computer science",
            "process",
            "field",
            "field of study",
            "representation",
            "component"
          ],
          "iri": "Entity-embeddings-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "embeddings",
          "local_types": [
            "technique",
            "methodology"
          ],
          "iri": "Entity-embeddings-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "Embeddings",
          "local_types": [
            "algorithm",
            "technique",
            "function"
          ],
          "iri": "Entity-embeddings-Mention-3"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-2",
          "local_name": "embeddings",
          "local_types": [
            "representation",
            "vector space"
          ],
          "iri": "Entity-embeddings-Mention-4"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-3",
          "local_name": "embeddings",
          "local_types": [
            "representation",
            "vector"
          ],
          "iri": "Entity-embeddings-Mention-5"
        }
      ],
      "relevance": 0.4912109375
    },
    "Entity-scoring_function_heuristic_for_op_rule": {
      "node_id": "scoring_function_heuristic_for_op_rule",
      "disambiguation_index": 0,
      "label": "scoring function heuristic for OP rules",
      "aliases": [
        "the scoring function heuristic for OP rules",
        "scoring function heuristic for OP rules"
      ],
      "types": [
        "heuristic",
        "scoring_function",
        "OP_rules",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A heuristic used to prune candidate IOP rules based on their similarity and plausibility, considering properties of predicate arguments and composite predicates in an embedding space.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "scoring function heuristic for OP rules",
          "local_types": [
            "function",
            "heuristic"
          ],
          "iri": "Entity-scoring_function_heuristic_for_op_rule-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "the scoring function heuristic for OP rules",
          "local_types": [
            "scoring_function",
            "heuristic",
            "OP_rules"
          ],
          "iri": "Entity-scoring_function_heuristic_for_op_rule-Mention-2"
        }
      ],
      "relevance": 0.4912109375
    },
    "Entity-p2_2": {
      "node_id": "p2_2",
      "disambiguation_index": 0,
      "label": "P2_2",
      "aliases": [
        "P2_2"
      ],
      "types": [
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A mathematical expression representing a predicate in an Inverse Open Path rule, connecting entities satisfying the subject argument of the body predicate to entities forming the object argument of the last predicate along a path.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-4",
          "local_name": "P2_2",
          "local_types": [
            "mathematical expression"
          ],
          "iri": "Entity-p2_2-Mention-1"
        }
      ],
      "relevance": 0.4912109375
    },
    "Entity-p__1": {
      "node_id": "p__1",
      "disambiguation_index": 0,
      "label": "P'1",
      "aliases": [
        "P'1"
      ],
      "types": [
        "predicate",
        "tree"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The predicate 'P'1', which represents a specific shape pattern that can be used as a building block for more complex shapes such as trees and other rule patterns.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "P'1",
          "local_types": [
            "predicate",
            "tree"
          ],
          "iri": "Entity-p__1-Mention-1"
        }
      ],
      "relevance": 0.4912109375
    },
    "Entity-quality_rule_mined": {
      "node_id": "quality_rule_mined",
      "disambiguation_index": 0,
      "label": "quality rules mined",
      "aliases": [
        "quality rules mined"
      ],
      "types": [
        "data mining result",
        "knowledge discovery"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or standards that have been automatically discovered through data mining.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-1",
          "local_name": "quality rules mined",
          "local_types": [
            "data mining result",
            "knowledge discovery"
          ],
          "iri": "Entity-quality_rule_mined-Mention-1"
        }
      ],
      "relevance": 0.4912109375
    },
    "Entity-z1": {
      "node_id": "z1",
      "disambiguation_index": 0,
      "label": "z1",
      "aliases": [
        "z1"
      ],
      "types": [
        "mathematical entity",
        "parameter",
        "binding",
        "variable",
        "term"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A mathematical entity or parameter that represents a binding variable in an inverse open path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "z1",
          "local_types": [
            "mathematical entity",
            "variable"
          ],
          "iri": "Entity-z1-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-6",
          "local_name": "z1",
          "local_types": [
            "variable",
            "term"
          ],
          "iri": "Entity-z1-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "z1",
          "local_types": [
            "parameter",
            "binding",
            "variable"
          ],
          "iri": "Entity-z1-Mention-3"
        }
      ],
      "relevance": 0.490966796875
    },
    "Entity-both_kind_of_error": {
      "node_id": "both_kind_of_error",
      "disambiguation_index": 0,
      "label": "Both kinds of errors",
      "aliases": [
        "Both kinds of errors"
      ],
      "types": [
        "error"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Types of errors that occur during knowledge graph construction, including errors of omission and commission.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-4",
          "local_name": "Both kinds of errors",
          "local_types": [
            "error"
          ],
          "iri": "Entity-both_kind_of_error-Mention-1"
        }
      ],
      "relevance": 0.490966796875
    },
    "Entity-universal_quantification_of_all_variable_at_the_outside": {
      "node_id": "universal_quantification_of_all_variable_at_the_outside",
      "disambiguation_index": 0,
      "label": "universal quantification of all variables at the outside",
      "aliases": [
        "universal quantification of all variables at the outside"
      ],
      "types": [
        "methodology",
        "variable",
        "quantification"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process or technique used to quantify all variables at the outside, allowing for the inference of a fact that instantiates the head of a closed-path rule by finding an instantiation of its body in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "universal quantification of all variables at the outside",
          "local_types": [
            "methodology",
            "variable",
            "quantification"
          ],
          "iri": "Entity-universal_quantification_of_all_variable_at_the_outside-Mention-1"
        }
      ],
      "relevance": 0.490966796875
    },
    "Entity-tree__treesupp__treesc": {
      "node_id": "tree__treesupp__treesc",
      "disambiguation_index": 0,
      "label": "Tree: Treesupp, TreeSC",
      "aliases": [
        "Tree: Treesupp, TreeSC"
      ],
      "types": [
        "algorithm",
        "data structure",
        "algorithmic concept",
        "tree structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A tree data structure that supports both subtree and node operations.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-1",
          "local_name": "Tree: Treesupp, TreeSC",
          "local_types": [
            "algorithm",
            "data structure",
            "algorithmic concept",
            "tree structure"
          ],
          "iri": "Entity-tree__treesupp__treesc-Mention-1"
        }
      ],
      "relevance": 0.49072265625
    },
    "Entity-body_predicate": {
      "node_id": "body_predicate",
      "disambiguation_index": 0,
      "label": "body predicate",
      "aliases": [
        "body predicate"
      ],
      "types": [
        "predicate",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept that represents a logical expression or statement in a semantic web framework, used to define the structure and constraints of data entities.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-3",
          "local_name": "body predicate",
          "local_types": [
            "predicate",
            "concept"
          ],
          "iri": "Entity-body_predicate-Mention-1"
        }
      ],
      "relevance": 0.49072265625
    },
    "Entity-__e__e__such_that_pt__e___e___": {
      "node_id": "__e__e__such_that_pt__e___e___",
      "disambiguation_index": 0,
      "label": "|{e : \u2203e' such that Pt(e', e)}|",
      "aliases": [
        "|{e : \u2203e' such that Pt(e', e)}|"
      ],
      "types": [
        "notation",
        "set theory expression",
        "set theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The open path head coverage of a rule, which measures its ability to predict facts with high confidence.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-4",
          "local_name": "|{e : \u2203e' such that Pt(e', e)}|",
          "local_types": [
            "notation",
            "set theory expression",
            "set theory"
          ],
          "iri": "Entity-__e__e__such_that_pt__e___e___-Mention-1"
        }
      ],
      "relevance": 0.490478515625
    },
    "Entity--sh": {
      "node_id": "-sh",
      "disambiguation_index": 0,
      "label": "-S+H",
      "aliases": [
        "-S+H"
      ],
      "types": [
        "algorithm",
        "pruning method",
        "mathematical expression",
        "parameter setting",
        "notation",
        "combination of methods",
        "expression",
        "setting",
        "configuration",
        "pruning variant"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A variant of SHACLEARNER that uses both sampling and heuristic pruning, but does not use the complete input KG for all components.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-1",
          "local_name": "-S+H",
          "local_types": [
            "algorithm",
            "pruning method",
            "mathematical expression",
            "notation",
            "combination of methods",
            "pruning variant"
          ],
          "iri": "Entity--sh-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-1",
          "local_name": "-S+H",
          "local_types": [
            "setting",
            "notation",
            "configuration",
            "expression"
          ],
          "iri": "Entity--sh-Mention-2"
        },
        {
          "reference": "Section-16-Paragraph-4-Sentence-3",
          "local_name": "-S+H",
          "local_types": [
            "parameter setting",
            "configuration"
          ],
          "iri": "Entity--sh-Mention-3"
        }
      ],
      "relevance": 0.490234375
    },
    "Entity-a__p1____0_1_0__1_0_1__0_0_0_": {
      "node_id": "a__p1____0_1_0__1_0_1__0_0_0_",
      "disambiguation_index": 0,
      "label": "A(P1) = [0 1 0; 1 0 1; 0 0 0]",
      "aliases": [
        "A(P2) = [0 1 0; 0 0 0; 0 1 1]",
        "A(P1) = [0 1 0; 1 0 1; 0 0 0]"
      ],
      "types": [
        "matrix"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The adjacency matrix representation of predicate P1 in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "A(P1) = [0 1 0; 1 0 1; 0 0 0]",
          "local_types": [
            "matrix"
          ],
          "iri": "Entity-a__p1____0_1_0__1_0_1__0_0_0_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-3",
          "local_name": "A(P2) = [0 1 0; 0 0 0; 0 1 1]",
          "local_types": [
            "matrix"
          ],
          "iri": "Entity-a__p1____0_1_0__1_0_1__0_0_0_-Mention-2"
        }
      ],
      "relevance": 0.490234375
    },
    "Entity-return_k_": {
      "node_id": "return_k_",
      "disambiguation_index": 0,
      "label": "return K'",
      "aliases": [
        "return K'"
      ],
      "types": [
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A subgraph of a knowledge graph, consisting of a bounded number of entities related to a target predicate.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-11",
          "local_name": "return K'",
          "local_types": [
            "expression"
          ],
          "iri": "Entity-return_k_-Mention-1"
        }
      ],
      "relevance": 0.490234375
    },
    "Entity-existing_ontology": {
      "node_id": "existing_ontology",
      "disambiguation_index": 0,
      "label": "existing ontologies",
      "aliases": [
        "existing ontologies"
      ],
      "types": [
        "knowledge representation",
        "ontology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of formal representations of concepts and relationships used to organize knowledge.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "existing ontologies",
          "local_types": [
            "knowledge representation",
            "ontology"
          ],
          "iri": "Entity-existing_ontology-Mention-1"
        }
      ],
      "relevance": 0.489501953125
    },
    "Entity-the__i__j__-th_element_a__pk___i__j_": {
      "node_id": "the__i__j__-th_element_a__pk___i__j_",
      "disambiguation_index": 0,
      "label": "the [i, j]-th element A(Pk)[i, j]",
      "aliases": [
        "A(Pk)[i, j]",
        "the [i, j]-th element A(Pk)[i, j]"
      ],
      "types": [
        "matrix",
        "Pk",
        "element"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The [i, j]-th element of an adjacency matrix representing a fact in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "the [i, j]-th element A(Pk)[i, j]",
          "local_types": [
            "element",
            "matrix"
          ],
          "iri": "Entity-the__i__j__-th_element_a__pk___i__j_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "A(Pk)[i, j]",
          "local_types": [
            "matrix",
            "Pk"
          ],
          "iri": "Entity-the__i__j__-th_element_a__pk___i__j_-Mention-2"
        }
      ],
      "relevance": 0.489501953125
    },
    "Entity-dynamic_data_entry_form": {
      "node_id": "dynamic_data_entry_form",
      "disambiguation_index": 0,
      "label": "dynamic data entry forms",
      "aliases": [
        "dynamic data entry forms"
      ],
      "types": [
        "interface component",
        "form"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Interactive forms that generate new fields and constraints based on the properties of an entity, allowing for efficient and interpretable human validation.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-4",
          "local_name": "dynamic data entry forms",
          "local_types": [
            "interface component",
            "form"
          ],
          "iri": "Entity-dynamic_data_entry_form-Mention-1"
        }
      ],
      "relevance": 0.4892578125
    },
    "Entity-only_high_quality_rule": {
      "node_id": "only_high_quality_rule",
      "disambiguation_index": 0,
      "label": "Only high quality rules",
      "aliases": [
        "Only high quality rules"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "High-quality rules that meet minimum quality thresholds of IOPSC \u2265 0.1 and IOPHC \u2265 0.01",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "Only high quality rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-only_high_quality_rule-Mention-1"
        }
      ],
      "relevance": 0.489013671875
    },
    "Entity-mapreduce": {
      "node_id": "mapreduce",
      "disambiguation_index": 0,
      "label": "MapReduce",
      "aliases": [
        "MapReduce"
      ],
      "types": [
        "computing framework",
        "framework",
        "technology"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A distributed computing framework used for processing large data sets across a cluster of nodes.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "MapReduce",
          "local_types": [
            "computing framework",
            "framework",
            "technology"
          ],
          "iri": "Entity-mapreduce-Mention-1"
        }
      ],
      "relevance": 0.48876953125
    },
    "Entity-the_following": {
      "node_id": "the_following",
      "disambiguation_index": 0,
      "label": "the following",
      "aliases": [
        "the following"
      ],
      "types": [
        "text"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The two properties that should be satisfied by the predicate arguments in an IOP rule, ensuring similar argument embeddings and a composite predicate's plausibility.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-4",
          "local_name": "the following",
          "local_types": [
            "text"
          ],
          "iri": "Entity-the_following-Mention-1"
        }
      ],
      "relevance": 0.48876953125
    },
    "Entity-average_number_of_branch_in_the_mined_tree_are_50___31___and_56__of_the_corresponding_number_of_mined_rule": {
      "node_id": "average_number_of_branch_in_the_mined_tree_are_50___31___and_56__of_the_corresponding_number_of_mined_rule",
      "disambiguation_index": 0,
      "label": "average number of branches in the mined trees are 50%, 31%, and 56% of the corresponding number of mined rules",
      "aliases": [
        "average number of branches in the mined trees are 50%, 31%, and 56% of the corresponding number of mined rules"
      ],
      "types": [
        "statistic"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Statistics about the branching structure of learned tree shapes",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "average number of branches in the mined trees are 50%, 31%, and 56% of the corresponding number of mined rules",
          "local_types": [
            "statistic"
          ],
          "iri": "Entity-average_number_of_branch_in_the_mined_tree_are_50___31___and_56__of_the_corresponding_number_of_mined_rule-Mention-1"
        }
      ],
      "relevance": 0.488525390625
    },
    "Entity-association_rule_mining": {
      "node_id": "association_rule_mining",
      "disambiguation_index": 0,
      "label": "association rule mining",
      "aliases": [
        "association rule mining"
      ],
      "types": [
        "algorithm",
        "mining technique",
        "data mining technique",
        "field"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A data analysis method that discovers patterns and relationships between variables by identifying rules with significant predictive power.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "association rule mining",
          "local_types": [
            "algorithm",
            "mining technique",
            "data mining technique",
            "field"
          ],
          "iri": "Entity-association_rule_mining-Mention-1"
        }
      ],
      "relevance": 0.48828125
    },
    "Entity-our_mined_shape": {
      "node_id": "our_mined_shape",
      "disambiguation_index": 0,
      "label": "Our mined shapes",
      "aliases": [
        "Our mined shapes"
      ],
      "types": [
        "collection",
        "data set",
        "shapes"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or data set of geometric shapes, possibly extracted from natural sources.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-8",
          "local_name": "Our mined shapes",
          "local_types": [
            "collection",
            "data set",
            "shapes"
          ],
          "iri": "Entity-our_mined_shape-Mention-1"
        }
      ],
      "relevance": 0.488037109375
    },
    "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_": {
      "node_id": "rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "disambiguation_index": 0,
      "label": "RESCAL to embed each entity e_i to a vector E_i in R^d and each predicate P_k to a matrix P_k in R^(d x d)",
      "aliases": [
        "RESCAL to embed each entity e_i to a vector E_i in R^d and each predicate P_k to a matrix P_k in R^(d x d)"
      ],
      "types": [
        "algorithm",
        "method",
        "embedding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method for embedding entities into vector spaces and predicates into matrices, used in knowledge representation and reasoning.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "RESCAL to embed each entity e_i to a vector E_i in R^d and each predicate P_k to a matrix P_k in R^(d x d)",
          "local_types": [
            "algorithm",
            "method",
            "embedding"
          ],
          "iri": "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_-Mention-1"
        }
      ],
      "relevance": 0.488037109375
    },
    "Entity-a__p1___a__p2___...__a__pm_": {
      "node_id": "a__p1___a__p2___...__a__pm_",
      "disambiguation_index": 0,
      "label": "A(P1)*A(P2)*...*A(Pm)",
      "aliases": [
        "A(P1)*A(P2)*...*A(Pm)"
      ],
      "types": [
        "linear algebra operation",
        "mathematical expression",
        "matrix product",
        "equation",
        "product"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The matrix product of adjacency matrices for predicates P1, P2, ..., Pm in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "A(P1)*A(P2)*...*A(Pm)",
          "local_types": [
            "matrix product",
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-a__p1___a__p2___...__a__pm_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "A(P1)*A(P2)*...*A(Pm)",
          "local_types": [
            "product",
            "matrix product",
            "linear algebra operation"
          ],
          "iri": "Entity-a__p1___a__p2___...__a__pm_-Mention-2"
        }
      ],
      "relevance": 0.488037109375
    },
    "Entity-treescnew": {
      "node_id": "treescnew",
      "disambiguation_index": 0,
      "label": "TreeSCnew",
      "aliases": [
        "TreeSCnew"
      ],
      "types": [
        "metric",
        "concept",
        "evaluation measure",
        "variable",
        "data structure",
        "confidence measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The confidence measure of a pruned tree shape after removing one or more branches or paths, which is guaranteed to be greater than or equal to the original TreeSCorig.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "TreeSCnew",
          "local_types": [
            "metric",
            "concept",
            "evaluation measure",
            "variable",
            "data structure",
            "confidence measure"
          ],
          "iri": "Entity-treescnew-Mention-1"
        }
      ],
      "relevance": 0.487548828125
    },
    "Entity-a_tree": {
      "node_id": "a_tree",
      "disambiguation_index": 0,
      "label": "a tree",
      "aliases": [
        "a tree"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A concept representing a hierarchical structure of connected entities with specific types and relationships in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-4",
          "local_name": "a tree",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-a_tree-Mention-1"
        }
      ],
      "relevance": 0.487548828125
    },
    "Entity-description_logic": {
      "node_id": "description_logic",
      "disambiguation_index": 0,
      "label": "Description Logic",
      "aliases": [
        "Description Logic"
      ],
      "types": [
        "formal system",
        "field",
        "theory"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A formal system used to reason about concepts and their relationships in artificial intelligence, computer science, and knowledge representation.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-3",
          "local_name": "Description Logic",
          "local_types": [
            "formal system",
            "field",
            "theory"
          ],
          "iri": "Entity-description_logic-Mention-1"
        }
      ],
      "relevance": 0.4873046875
    },
    "Entity-the_fact_pk__ei__ej_": {
      "node_id": "the_fact_pk__ei__ej_",
      "disambiguation_index": 0,
      "label": "the fact Pk(ei, ej)",
      "aliases": [
        "the fact Pk(ei, ej)"
      ],
      "types": [
        "fact",
        "relation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific instance of a predicate-argument pair in a knowledge graph, where P is a predicate and ei and ej are entities.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "the fact Pk(ei, ej)",
          "local_types": [
            "fact",
            "relation"
          ],
          "iri": "Entity-the_fact_pk__ei__ej_-Mention-1"
        }
      ],
      "relevance": 0.4873046875
    },
    "Entity-in_line_2_embeddings__": {
      "node_id": "in_line_2_embeddings__",
      "disambiguation_index": 0,
      "label": "in line 2 Embeddings()",
      "aliases": [
        "in line 2 Embeddings()"
      ],
      "types": [
        "function",
        "Embeddings"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A function that computes predicate embeddings, as well as subject and object argument embeddings, for all predicates in a sampled knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "in line 2 Embeddings()",
          "local_types": [
            "function",
            "Embeddings"
          ],
          "iri": "Entity-in_line_2_embeddings__-Mention-1"
        }
      ],
      "relevance": 0.487060546875
    },
    "Entity-all_binary_predicate_of_yago2s": {
      "node_id": "all_binary_predicate_of_yago2s",
      "disambiguation_index": 0,
      "label": "all binary predicates of YAGO2s",
      "aliases": [
        "all binary predicates of YAGO2s"
      ],
      "types": [
        "predicate",
        "YAGO2s"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of all binary predicate relationships present in the YAGO2 knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-4",
          "local_name": "all binary predicates of YAGO2s",
          "local_types": [
            "predicate",
            "YAGO2s"
          ],
          "iri": "Entity-all_binary_predicate_of_yago2s-Mention-1"
        }
      ],
      "relevance": 0.487060546875
    },
    "Entity-a_set_of_pair_of_entity": {
      "node_id": "a_set_of_pair_of_entity",
      "disambiguation_index": 0,
      "label": "a set of pairs of entities",
      "aliases": [
        "a set of pairs of entities"
      ],
      "types": [
        "set"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of pairs of entities that satisfies a tree shape's head predicate if there exist sequences of entities that satisfy certain path predicates and are facts in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "a set of pairs of entities",
          "local_types": [
            "set"
          ],
          "iri": "Entity-a_set_of_pair_of_entity-Mention-1"
        }
      ],
      "relevance": 0.48681640625
    },
    "Entity-there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.": {
      "node_id": "there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.",
      "disambiguation_index": 0,
      "label": "There is a relationship between the logical statement of the rule and certain properties in the embedding space.",
      "aliases": [
        "There is a relationship between the logical statement of the rule and certain properties in the embedding space."
      ],
      "types": [
        "relationship",
        "logical statement",
        "rule",
        "properties",
        "embedding space"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The property stating the connection between the logical structure of an IOP rule and its corresponding representation in the embedding space.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "There is a relationship between the logical statement of the rule and certain properties in the embedding space.",
          "local_types": [
            "relationship",
            "logical statement",
            "rule",
            "properties",
            "embedding space"
          ],
          "iri": "Entity-there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.-Mention-1"
        }
      ],
      "relevance": 0.486328125
    },
    "Entity-role__also_called_property__are_named_binary_predicate": {
      "node_id": "role__also_called_property__are_named_binary_predicate",
      "disambiguation_index": 0,
      "label": "roles (also called properties) are named binary predicates",
      "aliases": [
        "roles (also called properties) are named binary predicates"
      ],
      "types": [
        "role",
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Named binary predicates referring to relationships or connections between entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-3",
          "local_name": "roles (also called properties) are named binary predicates",
          "local_types": [
            "role",
            "property"
          ],
          "iri": "Entity-role__also_called_property__are_named_binary_predicate-Mention-1"
        }
      ],
      "relevance": 0.486328125
    },
    "Entity-rule_learning": {
      "node_id": "rule_learning",
      "disambiguation_index": 0,
      "label": "rule learning",
      "aliases": [
        "rule learning"
      ],
      "types": [
        "algorithm",
        "learning method",
        "machine learning technique",
        "machine learning process",
        "field of study",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of acquiring rules or patterns from data through machine-based methods.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "rule learning",
          "local_types": [
            "machine learning technique",
            "algorithm"
          ],
          "iri": "Entity-rule_learning-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-5",
          "local_name": "rule learning",
          "local_types": [
            "machine learning process",
            "algorithm"
          ],
          "iri": "Entity-rule_learning-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "rule learning",
          "local_types": [
            "learning method",
            "methodology",
            "field of study"
          ],
          "iri": "Entity-rule_learning-Mention-3"
        }
      ],
      "relevance": 0.486083984375
    },
    "Entity-path2": {
      "node_id": "path2",
      "disambiguation_index": 0,
      "label": "Path2",
      "aliases": [
        "Path2"
      ],
      "types": [
        "path",
        "branch"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A branch in a tree shape, representing a sequence of predicates and entities that satisfy certain conditions.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "Path2",
          "local_types": [
            "path",
            "branch"
          ],
          "iri": "Entity-path2-Mention-1"
        }
      ],
      "relevance": 0.486083984375
    },
    "Entity-shex": {
      "node_id": "shex",
      "disambiguation_index": 0,
      "label": "ShEx",
      "aliases": [
        "ShEx"
      ],
      "types": [
        "standard",
        "ontology",
        "format",
        "language"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A standard format or ontology used to describe and validate data shapes",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "ShEx",
          "local_types": [
            "standard",
            "ontology",
            "format",
            "language"
          ],
          "iri": "Entity-shex-Mention-1"
        }
      ],
      "relevance": 0.48583984375
    },
    "Entity-7__return_k_": {
      "node_id": "7__return_k_",
      "disambiguation_index": 0,
      "label": "7: return K'",
      "aliases": [
        "7: return K'"
      ],
      "types": [
        "return statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The sampled subgraph of a knowledge graph, containing entities related to the target predicate and its predecessors.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-11",
          "local_name": "7: return K'",
          "local_types": [
            "return statement"
          ],
          "iri": "Entity-7__return_k_-Mention-1"
        }
      ],
      "relevance": 0.485595703125
    },
    "Entity-definition_5": {
      "node_id": "definition_5",
      "disambiguation_index": 0,
      "label": "Definition 5",
      "aliases": [
        "Definition 5"
      ],
      "types": [
        "notation",
        "concept",
        "definition"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A notation or concept that defines a specific cardinality for an Independent Operator Pattern (IOP) rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-1",
          "local_name": "Definition 5",
          "local_types": [
            "notation",
            "concept",
            "definition"
          ],
          "iri": "Entity-definition_5-Mention-1"
        }
      ],
      "relevance": 0.4853515625
    },
    "Entity-however__the_performance_of_our_system_show_that_it_can_handle_the_task_satisfactorily_and_can_be_applied_in_practice": {
      "node_id": "however__the_performance_of_our_system_show_that_it_can_handle_the_task_satisfactorily_and_can_be_applied_in_practice",
      "disambiguation_index": 0,
      "label": "However, the performance of our system shows that it can handle the task satisfactorily and can be applied in practice",
      "aliases": [
        "However, the performance of our system shows that it can handle the task satisfactorily and can be applied in practice"
      ],
      "types": [
        "evaluation",
        "application"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The SHACLEARNER algorithm",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-4",
          "local_name": "However, the performance of our system shows that it can handle the task satisfactorily and can be applied in practice",
          "local_types": [
            "evaluation",
            "application"
          ],
          "iri": "Entity-however__the_performance_of_our_system_show_that_it_can_handle_the_task_satisfactorily_and_can_be_applied_in_practice-Mention-1"
        }
      ],
      "relevance": 0.485107421875
    },
    "Entity-standard_confidence__sc__and_head_coverage__hc_": {
      "node_id": "standard_confidence__sc__and_head_coverage__hc_",
      "disambiguation_index": 0,
      "label": "Standard confidence (SC) and head coverage (HC)",
      "aliases": [
        "Standard confidence (SC) and head coverage (HC)"
      ],
      "types": [
        "measure",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of metrics used to evaluate the quality of closed-path rules, measuring how frequently a rule is true (standard confidence) and its explanatory power (head coverage).",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-1",
          "local_name": "Standard confidence (SC) and head coverage (HC)",
          "local_types": [
            "measure",
            "standard"
          ],
          "iri": "Entity-standard_confidence__sc__and_head_coverage__hc_-Mention-1"
        }
      ],
      "relevance": 0.48486328125
    },
    "Entity-the_number_of_rule_would_increase_since_the_space_of_possible_rule_grows__and_this_is_what_we_see_.": {
      "node_id": "the_number_of_rule_would_increase_since_the_space_of_possible_rule_grows__and_this_is_what_we_see_.",
      "disambiguation_index": 0,
      "label": "the number of rules would increase since the space of possible rules grows, and this is what we see.",
      "aliases": [
        "the number of rules would increase since the space of possible rules grows, and this is what we see."
      ],
      "types": [
        "finding",
        "observation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The observation that as rule lengths increase, so does the number of learned rules due to the growing space of possible rules.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-7-Sentence-1",
          "local_name": "the number of rules would increase since the space of possible rules grows, and this is what we see.",
          "local_types": [
            "finding",
            "observation"
          ],
          "iri": "Entity-the_number_of_rule_would_increase_since_the_space_of_possible_rule_grows__and_this_is_what_we_see_.-Mention-1"
        }
      ],
      "relevance": 0.48486328125
    },
    "Entity-open_path_standard_confidence": {
      "node_id": "open_path_standard_confidence",
      "disambiguation_index": 0,
      "label": "open path standard confidence",
      "aliases": [
        "open path standard confidence"
      ],
      "types": [
        "metric",
        "evaluation metric",
        "evaluation measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A quality measure for Open Path rules that assesses their predictive power based on the proportion of entities that satisfy both the rule's body and head.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "open path standard confidence",
          "local_types": [
            "metric",
            "evaluation metric",
            "evaluation measure"
          ],
          "iri": "Entity-open_path_standard_confidence-Mention-1"
        }
      ],
      "relevance": 0.484619140625
    },
    "Entity-6__k____pi__e__e_____e_in_esample__and__e__in_esample__": {
      "node_id": "6__k____pi__e__e_____e_in_esample__and__e__in_esample__",
      "disambiguation_index": 0,
      "label": "6: K' = { Pi(e, e') | (e in Esample) and (e' in Esample) }",
      "aliases": [
        "6: K' = { Pi(e, e') | (e in Esample) and (e' in Esample) }"
      ],
      "types": [
        "code snippet"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of code snippets that define a relationship between pairs of entities from an example dataset.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-10",
          "local_name": "6: K' = { Pi(e, e') | (e in Esample) and (e' in Esample) }",
          "local_types": [
            "code snippet"
          ],
          "iri": "Entity-6__k____pi__e__e_____e_in_esample__and__e__in_esample__-Mention-1"
        }
      ],
      "relevance": 0.484619140625
    },
    "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.": {
      "node_id": "that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.",
      "disambiguation_index": 0,
      "label": "that have the same variable in the rule should have similar argument embeddings.",
      "aliases": [
        "arguments that have the same variable in the rule should have similar argument embeddings.",
        "that have the same variable in the rule should have similar argument embeddings."
      ],
      "types": [
        "rule",
        "embeddings"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A property stating that predicates with the same variable in an IOP rule should have similar embedding representations.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "that have the same variable in the rule should have similar argument embeddings.",
          "local_types": [
            "rule",
            "embeddings"
          ],
          "iri": "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "arguments that have the same variable in the rule should have similar argument embeddings.",
          "local_types": [
            "rule",
            "embeddings"
          ],
          "iri": "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.-Mention-2"
        }
      ],
      "relevance": 0.484619140625
    },
    "Entity-from_definition_4__iophc__r1___22_and_iopsc__r1___22": {
      "node_id": "from_definition_4__iophc__r1___22_and_iopsc__r1___22",
      "disambiguation_index": 0,
      "label": "From Definition 4, IOPHC(r1) = 2/2 and IOPSC(r1) = 2/2",
      "aliases": [
        "From Definition 4, IOPHC(r1) = 2/2 and IOPSC(r1) = 2/2"
      ],
      "types": [
        "definition",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The quality measures for a specific rule (r1)",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "From Definition 4, IOPHC(r1) = 2/2 and IOPSC(r1) = 2/2",
          "local_types": [
            "definition",
            "mathematical concept"
          ],
          "iri": "Entity-from_definition_4__iophc__r1___22_and_iopsc__r1___22-Mention-1"
        }
      ],
      "relevance": 0.484619140625
    },
    "Entity-the_same_head_and_the_same_body_may_have_different_cardinality": {
      "node_id": "the_same_head_and_the_same_body_may_have_different_cardinality",
      "disambiguation_index": 0,
      "label": "the same head and the same body may have different cardinalities",
      "aliases": [
        "the same head and the same body may have different cardinalities"
      ],
      "types": [
        "property",
        "cardinality"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A property that indicates a set of IOP rules can have varying minimum or maximum counts of instantiations linking the body to the head, despite sharing the same predicate and structure.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-1",
          "local_name": "the same head and the same body may have different cardinalities",
          "local_types": [
            "property",
            "cardinality"
          ],
          "iri": "Entity-the_same_head_and_the_same_body_may_have_different_cardinality-Mention-1"
        }
      ],
      "relevance": 0.484619140625
    },
    "Entity-a__pt____0_0_0__0_0_0__0_1_1_": {
      "node_id": "a__pt____0_0_0__0_0_0__0_1_1_",
      "disambiguation_index": 0,
      "label": "A(Pt) = [0 0 0; 0 0 0; 0 1 1]",
      "aliases": [
        "A(Pt) = [0 0 0; 0 0 0; 0 1 1]",
        "[0 0 0; 0 0 0; 0 1 1]"
      ],
      "types": [
        "matrix",
        "example"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The adjacency matrix representation of predicate Pt in the knowledge graph, indicating the presence of a fact P(t)(e3, e2) and no other facts.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-4",
          "local_name": "A(Pt) = [0 0 0; 0 0 0; 0 1 1]",
          "local_types": [
            "matrix"
          ],
          "iri": "Entity-a__pt____0_0_0__0_0_0__0_1_1_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-4",
          "local_name": "[0 0 0; 0 0 0; 0 1 1]",
          "local_types": [
            "matrix",
            "example"
          ],
          "iri": "Entity-a__pt____0_0_0__0_0_0__0_1_1_-Mention-2"
        }
      ],
      "relevance": 0.484375
    },
    "Entity-an_rdf_triple__e__p__e__": {
      "node_id": "an_rdf_triple__e__p__e__",
      "disambiguation_index": 0,
      "label": "an RDF triple (e, P, e')",
      "aliases": [
        "an RDF triple (e, P, e')"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A notation for expressing constraints on graph data, consisting of three entities (e, P, e') representing the subject entity, predicate, and object entity respectively.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "an RDF triple (e, P, e')",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-an_rdf_triple__e__p__e__-Mention-1"
        }
      ],
      "relevance": 0.484375
    },
    "Entity-for_(3)": {
      "node_id": "for_(3)",
      "disambiguation_index": 3,
      "label": "For",
      "aliases": [
        "For"
      ],
      "types": [
        "formula"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The quality measure for a SHACLearner rule that calculates the number of entities that satisfy its body.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "For",
          "local_types": [
            "formula"
          ],
          "iri": "Entity-for_(3)-Mention-1"
        }
      ],
      "relevance": 0.484375
    },
    "Entity-if_there_exist_sequence_of_entity_e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1___in_the_kg": {
      "node_id": "if_there_exist_sequence_of_entity_e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1___in_the_kg",
      "disambiguation_index": 0,
      "label": "if there exist sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' in the KG",
      "aliases": [
        "if there exist sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' in the KG"
      ],
      "types": [
        "logical statement",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical statement or mathematical concept that represents a sequence of entities and their relationships.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "if there exist sequences of entities e1, ..., e(n-1), e1', ..., e(m-1), e1^q, e(q-1)' in the KG",
          "local_types": [
            "logical statement",
            "mathematical concept"
          ],
          "iri": "Entity-if_there_exist_sequence_of_entity_e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1___in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.484130859375
    },
    "Entity-rule_and_constraint": {
      "node_id": "rule_and_constraint",
      "disambiguation_index": 0,
      "label": "rules and constraints",
      "aliases": [
        "rules and constraints"
      ],
      "types": [
        "conceptual framework",
        "formalism",
        "constraint",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or limitations that govern behavior or structure",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "rules and constraints",
          "local_types": [
            "conceptual framework",
            "formalism",
            "constraint",
            "rule"
          ],
          "iri": "Entity-rule_and_constraint-Mention-1"
        }
      ],
      "relevance": 0.48388671875
    },
    "Entity-what_proportion_of_the_fact_satisfying_the_head_of_the_rule_could_be_inferred_by_satisfying_the_rule_body_": {
      "node_id": "what_proportion_of_the_fact_satisfying_the_head_of_the_rule_could_be_inferred_by_satisfying_the_rule_body_",
      "disambiguation_index": 0,
      "label": "what proportion of the facts satisfying the head of the rule could be inferred by satisfying the rule body?",
      "aliases": [
        "what proportion of the facts satisfying the head of the rule could be inferred by satisfying the rule body?"
      ],
      "types": [
        "inferential power",
        "proportion",
        "description"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure of the explanatory power of a closed-path rule, defined as the proportion of facts that satisfy the rule's head that can also be inferred from satisfying its body.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-4",
          "local_name": "what proportion of the facts satisfying the head of the rule could be inferred by satisfying the rule body?",
          "local_types": [
            "inferential power",
            "proportion",
            "description"
          ],
          "iri": "Entity-what_proportion_of_the_fact_satisfying_the_head_of_the_rule_could_be_inferred_by_satisfying_the_rule_body_-Mention-1"
        }
      ],
      "relevance": 0.48388671875
    },
    "Entity-the_tree_support_and_tree_standard_confidence_of_r": {
      "node_id": "the_tree_support_and_tree_standard_confidence_of_r",
      "disambiguation_index": 0,
      "label": "The tree support and tree standard confidence of r",
      "aliases": [
        "The tree support and tree standard confidence of r"
      ],
      "types": [
        "definition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The tree support and tree standard confidence of r refer to measures that assess the quality of a SHACL tree shape, specifically the number of entities that satisfy its head predicate and the ratio of these entities to those that satisfy its body predicates.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-5",
          "local_name": "The tree support and tree standard confidence of r",
          "local_types": [
            "definition"
          ],
          "iri": "Entity-the_tree_support_and_tree_standard_confidence_of_r-Mention-1"
        }
      ],
      "relevance": 0.48388671875
    },
    "Entity-less_constrained_than_some_more_complex_shape": {
      "node_id": "less_constrained_than_some_more_complex_shape",
      "disambiguation_index": 0,
      "label": "less constrained than some more complex shapes",
      "aliases": [
        "less constrained than some more complex shapes"
      ],
      "types": [
        "comparison",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A shape with fewer constraints",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-3",
          "local_name": "less constrained than some more complex shapes",
          "local_types": [
            "comparison",
            "evaluation"
          ],
          "iri": "Entity-less_constrained_than_some_more_complex_shape-Mention-1"
        }
      ],
      "relevance": 0.4833984375
    },
    "Entity-minimum_quality_threshold": {
      "node_id": "minimum_quality_threshold",
      "disambiguation_index": 0,
      "label": "minimum quality thresholds",
      "aliases": [
        "minimum quality thresholds"
      ],
      "types": [
        "constraint",
        "threshold",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of standards or criteria for evaluating the acceptability of data, information, or results",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-1",
          "local_name": "minimum quality thresholds",
          "local_types": [
            "constraint",
            "threshold",
            "rule"
          ],
          "iri": "Entity-minimum_quality_threshold-Mention-1"
        }
      ],
      "relevance": 0.483154296875
    },
    "Entity-the_atomic_body_(1)": {
      "node_id": "the_atomic_body_(1)",
      "disambiguation_index": 1,
      "label": "the atomic body",
      "aliases": [
        "the atomic body"
      ],
      "types": [
        "body"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept that refers to a single instance or node in a knowledge graph, which can be used as part of a shape tree to validate and document the graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-5",
          "local_name": "the atomic body",
          "local_types": [
            "body"
          ],
          "iri": "Entity-the_atomic_body_(1)-Mention-1"
        }
      ],
      "relevance": 0.483154296875
    },
    "Entity-a_set_of_pair_of_entity__e__e1___...___e__eq_": {
      "node_id": "a_set_of_pair_of_entity__e__e1___...___e__eq_",
      "disambiguation_index": 0,
      "label": "a set of pairs of entities (e, e1), ..., (e, eq)",
      "aliases": [
        "a set of pairs of entities (e, e1), ..., (e, eq)"
      ],
      "types": [
        "mathematical concept",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of pairs of entities (e, e1), ..., (e, eq) that satisfies the head of a tree shape in a knowledge graph, denoted by `headr(e)`, if there exist sequences of entities meeting certain conditions.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "a set of pairs of entities (e, e1), ..., (e, eq)",
          "local_types": [
            "mathematical concept",
            "data structure"
          ],
          "iri": "Entity-a_set_of_pair_of_entity__e__e1___...___e__eq_-Mention-1"
        }
      ],
      "relevance": 0.482666015625
    },
    "Entity-for_(2)": {
      "node_id": "for_(2)",
      "disambiguation_index": 2,
      "label": "For",
      "aliases": [
        "For"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The quality measure calculation for IOP rules, specifically counting entities satisfying the rule body and head.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-7",
          "local_name": "For",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-for_(2)-Mention-1"
        }
      ],
      "relevance": 0.482666015625
    },
    "Entity-z2": {
      "node_id": "z2",
      "disambiguation_index": 0,
      "label": "z2",
      "aliases": [
        "z2"
      ],
      "types": [
        "mathematical entity",
        "variable",
        "parameter",
        "term"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A variable representing an entity in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "z2",
          "local_types": [
            "mathematical entity",
            "variable"
          ],
          "iri": "Entity-z2-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-6",
          "local_name": "z2",
          "local_types": [
            "variable",
            "term"
          ],
          "iri": "Entity-z2-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "z2",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-z2-Mention-3"
        }
      ],
      "relevance": 0.48193359375
    },
    "Entity-__e__there_exists_e__such_that_head_r__e__e____": {
      "node_id": "__e__there_exists_e__such_that_head_r__e__e____",
      "disambiguation_index": 0,
      "label": "|{ e : there exists e' such that head_r(e, e') }|",
      "aliases": [
        "|{ e : there exists e' such that head_r(e, e') }|"
      ],
      "types": [
        "set comprehension",
        "mathematical notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of entities for which a given IOP rule has at least one corresponding instance.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-8",
          "local_name": "|{ e : there exists e' such that head_r(e, e') }|",
          "local_types": [
            "set comprehension",
            "mathematical notation"
          ],
          "iri": "Entity-__e__there_exists_e__such_that_head_r__e__e____-Mention-1"
        }
      ],
      "relevance": 0.48193359375
    },
    "Entity-o__k_": {
      "node_id": "o__k_",
      "disambiguation_index": 0,
      "label": "O(|K|)",
      "aliases": [
        "O(|K|)"
      ],
      "types": [
        "notation",
        "time complexity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A notation representing the time complexity of an algorithm or process.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "O(|K|)",
          "local_types": [
            "notation",
            "time complexity"
          ],
          "iri": "Entity-o__k_-Mention-1"
        }
      ],
      "relevance": 0.4814453125
    },
    "Entity-learning_method": {
      "node_id": "learning_method",
      "disambiguation_index": 0,
      "label": "learning method",
      "aliases": [
        "learning method"
      ],
      "types": [
        "algorithm",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic procedure or strategy used to acquire knowledge, skills, or insights from experience or data.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-3",
          "local_name": "learning method",
          "local_types": [
            "algorithm",
            "approach"
          ],
          "iri": "Entity-learning_method-Mention-1"
        }
      ],
      "relevance": 0.4814453125
    },
    "Entity-the_distribution_of_mined_rule": {
      "node_id": "the_distribution_of_mined_rule",
      "disambiguation_index": 0,
      "label": "The distribution of mined rules",
      "aliases": [
        "The distribution of mined rules"
      ],
      "types": [
        "distribution",
        "rules"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or pattern of extracted and organized rules, possibly from data mining processes.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-1",
          "local_name": "The distribution of mined rules",
          "local_types": [
            "distribution",
            "rules"
          ],
          "iri": "Entity-the_distribution_of_mined_rule-Mention-1"
        }
      ],
      "relevance": 0.481201171875
    },
    "Entity-but_a_straightforward_variable_unification_transforms_an_op_rule_to_a_cp_rule": {
      "node_id": "but_a_straightforward_variable_unification_transforms_an_op_rule_to_a_cp_rule",
      "disambiguation_index": 0,
      "label": "but a straightforward variable unification transforms an OP rule to a CP rule",
      "aliases": [
        "but a straightforward variable unification transforms an OP rule to a CP rule"
      ],
      "types": [
        "unification",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A transformation that converts Open Path (OP) rules into Closed Path (CP) rules through simple variable unification.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-5",
          "local_name": "but a straightforward variable unification transforms an OP rule to a CP rule",
          "local_types": [
            "unification",
            "rule"
          ],
          "iri": "Entity-but_a_straightforward_variable_unification_transforms_an_op_rule_to_a_cp_rule-Mention-1"
        }
      ],
      "relevance": 0.48095703125
    },
    "Entity-embeddings___we_additionally_compute_argument_embeddings": {
      "node_id": "embeddings___we_additionally_compute_argument_embeddings",
      "disambiguation_index": 0,
      "label": "Embeddings() we additionally compute argument embeddings",
      "aliases": [
        "Embeddings() we additionally compute argument embeddings"
      ],
      "types": [
        "method",
        "embedding computation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method for computing and generating vector representations of input data, typically used in natural language processing and machine learning applications.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "Embeddings() we additionally compute argument embeddings",
          "local_types": [
            "method",
            "embedding computation"
          ],
          "iri": "Entity-embeddings___we_additionally_compute_argument_embeddings-Mention-1"
        }
      ],
      "relevance": 0.48095703125
    },
    "Entity-the_body_of_r": {
      "node_id": "the_body_of_r",
      "disambiguation_index": 0,
      "label": "the body of r",
      "aliases": [
        "the body of r"
      ],
      "types": [
        "body",
        "reference"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of entities (e'', e) for which Pt(PT(e'', e)) is true, where PT is an IOP rule and Pt denotes the predicate in the KG.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-4",
          "local_name": "the body of r",
          "local_types": [
            "body",
            "reference"
          ],
          "iri": "Entity-the_body_of_r-Mention-1"
        }
      ],
      "relevance": 0.48095703125
    },
    "Entity-some_major_approach_to_rule_learning": {
      "node_id": "some_major_approach_to_rule_learning",
      "disambiguation_index": 0,
      "label": "some major approaches to rule learning",
      "aliases": [
        "some major approaches to rule learning"
      ],
      "types": [
        "approach",
        "rule learning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Measures of support, head coverage, and standard confidence used in various approaches to rule learning.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "some major approaches to rule learning",
          "local_types": [
            "approach",
            "rule learning"
          ],
          "iri": "Entity-some_major_approach_to_rule_learning-Mention-1"
        }
      ],
      "relevance": 0.480712890625
    },
    "Entity-e": {
      "node_id": "e",
      "disambiguation_index": 0,
      "label": "e",
      "aliases": [
        "E",
        "e"
      ],
      "types": [
        "concept",
        "entities",
        "notation",
        "symbol",
        "mathematical concept",
        "collection of entities",
        "variable",
        "mathematical object",
        "entity",
        "collection",
        "set",
        "entities set",
        "mathematical variable",
        "identifier",
        "set of entities",
        "data set",
        "term"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or identifier representing a set of entities, often used to denote facts in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-4",
          "local_name": "e",
          "local_types": [
            "variable",
            "mathematical variable"
          ],
          "iri": "Entity-e-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-3-Sentence-4",
          "local_name": "e",
          "local_types": [
            "variable",
            "mathematical variable"
          ],
          "iri": "Entity-e-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-1",
          "local_name": "e",
          "local_types": [
            "identifier",
            "set of entities",
            "entities set",
            "variable"
          ],
          "iri": "Entity-e-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "e",
          "local_types": [
            "variable",
            "term"
          ],
          "iri": "Entity-e-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-6",
          "local_name": "E",
          "local_types": [
            "mathematical concept",
            "set of entities",
            "set"
          ],
          "iri": "Entity-e-Mention-5"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "e",
          "local_types": [
            "variable",
            "identifier"
          ],
          "iri": "Entity-e-Mention-6"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "e",
          "local_types": [
            "mathematical object",
            "entity",
            "mathematical concept",
            "variable"
          ],
          "iri": "Entity-e-Mention-7"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "e",
          "local_types": [
            "entity",
            "concept"
          ],
          "iri": "Entity-e-Mention-8"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-3",
          "local_name": "e",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-e-Mention-9"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "E",
          "local_types": [
            "set of entities",
            "set",
            "entities"
          ],
          "iri": "Entity-e-Mention-10"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "E",
          "local_types": [
            "entities",
            "mathematical concept",
            "collection of entities",
            "set",
            "entities set",
            "set of entities",
            "data set"
          ],
          "iri": "Entity-e-Mention-11"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-3",
          "local_name": "E",
          "local_types": [
            "notation",
            "collection",
            "entities set",
            "set",
            "set of entities",
            "data set"
          ],
          "iri": "Entity-e-Mention-12"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "E",
          "local_types": [
            "set of entities",
            "entities set",
            "data set"
          ],
          "iri": "Entity-e-Mention-13"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "E",
          "local_types": [
            "set of entities",
            "entities set",
            "data set"
          ],
          "iri": "Entity-e-Mention-14"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "e",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-e-Mention-15"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "E",
          "local_types": [
            "set of entities",
            "entities set",
            "data set"
          ],
          "iri": "Entity-e-Mention-16"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "e",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-e-Mention-17"
        },
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "e",
          "local_types": [
            "entity",
            "mathematical concept",
            "concept",
            "variable"
          ],
          "iri": "Entity-e-Mention-18"
        }
      ],
      "relevance": 0.48046875
    },
    "Entity-cardinality_constraint": {
      "node_id": "cardinality_constraint",
      "disambiguation_index": 0,
      "label": "cardinality constraints",
      "aliases": [
        "cardinality constraints"
      ],
      "types": [
        "constraint",
        "mathematical concept",
        "cardinality constraint",
        "rule",
        "data constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A rule or restriction governing the quantity of entities within a set",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "cardinality constraints",
          "local_types": [
            "constraint",
            "cardinality constraint",
            "rule"
          ],
          "iri": "Entity-cardinality_constraint-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "cardinality constraints",
          "local_types": [
            "constraint",
            "mathematical concept"
          ],
          "iri": "Entity-cardinality_constraint-Mention-2"
        },
        {
          "reference": "Section-18-Paragraph-3-Sentence-2",
          "local_name": "cardinality constraints",
          "local_types": [
            "mathematical concept",
            "data constraint"
          ],
          "iri": "Entity-cardinality_constraint-Mention-3"
        }
      ],
      "relevance": 0.479736328125
    },
    "Entity-in_this_case__for_car3_we_get_the_same_value_a_for_car2_.": {
      "node_id": "in_this_case__for_car3_we_get_the_same_value_a_for_car2_.",
      "disambiguation_index": 0,
      "label": "In this case, for Car=3 we get the same values as for Car=2.",
      "aliases": [
        "In this case, for Car=3 we get the same values as for Car=2."
      ],
      "types": [
        "conclusion",
        "comparison"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The IOP rule with cardinality 3",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-5",
          "local_name": "In this case, for Car=3 we get the same values as for Car=2.",
          "local_types": [
            "conclusion",
            "comparison"
          ],
          "iri": "Entity-in_this_case__for_car3_we_get_the_same_value_a_for_car2_.-Mention-1"
        }
      ],
      "relevance": 0.479736328125
    },
    "Entity-we_show_a_fragment": {
      "node_id": "we_show_a_fragment",
      "disambiguation_index": 0,
      "label": "we show a fragment",
      "aliases": [
        "we show a fragment"
      ],
      "types": [
        "fragment"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific instance or part of a learned tree shape, showcasing its structure and relationships between entities.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "we show a fragment",
          "local_types": [
            "fragment"
          ],
          "iri": "Entity-we_show_a_fragment-Mention-1"
        }
      ],
      "relevance": 0.479736328125
    },
    "Entity-r": {
      "node_id": "r",
      "disambiguation_index": 0,
      "label": "r",
      "aliases": [
        "R",
        "r"
      ],
      "types": [
        "symbol",
        "CP rule",
        "production rule",
        "term",
        "mathematical object",
        "logical operator",
        "rule",
        "programming language",
        "predicate",
        "notation",
        "relation",
        "IOP rule",
        "mathematical notation system",
        "symbolic representation",
        "mathematical notation",
        "mathematical concept",
        "variable",
        "logical expression",
        "identifier",
        "variable name"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or notation used to represent a logical operator or relation",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "r",
          "local_types": [
            "notation",
            "symbol",
            "variable"
          ],
          "iri": "Entity-r-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-11",
          "local_name": "R",
          "local_types": [
            "mathematical concept",
            "variable"
          ],
          "iri": "Entity-r-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-13",
          "local_name": "R",
          "local_types": [
            "mathematical notation system",
            "symbol",
            "programming language",
            "variable"
          ],
          "iri": "Entity-r-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-2",
          "local_name": "r",
          "local_types": [
            "notation",
            "symbol",
            "variable",
            "rule",
            "symbolic representation",
            "production rule",
            "variable name"
          ],
          "iri": "Entity-r-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "r",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-r-Mention-5"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "r",
          "local_types": [
            "identifier",
            "CP rule",
            "rule",
            "variable"
          ],
          "iri": "Entity-r-Mention-6"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-5",
          "local_name": "r",
          "local_types": [
            "rule",
            "relation"
          ],
          "iri": "Entity-r-Mention-7"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "r",
          "local_types": [
            "mathematical object",
            "mathematical concept",
            "variable"
          ],
          "iri": "Entity-r-Mention-8"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "r",
          "local_types": [
            "mathematical concept",
            "rule",
            "logical expression"
          ],
          "iri": "Entity-r-Mention-9"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "r",
          "local_types": [
            "relation"
          ],
          "iri": "Entity-r-Mention-10"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "r",
          "local_types": [
            "symbol",
            "mathematical concept",
            "IOP rule",
            "variable",
            "rule"
          ],
          "iri": "Entity-r-Mention-11"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-3",
          "local_name": "r",
          "local_types": [
            "relation",
            "predicate"
          ],
          "iri": "Entity-r-Mention-12"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-4",
          "local_name": "r",
          "local_types": [
            "relation",
            "predicate"
          ],
          "iri": "Entity-r-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-8-Sentence-2",
          "local_name": "r",
          "local_types": [
            "term",
            "variable"
          ],
          "iri": "Entity-r-Mention-14"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "r",
          "local_types": [
            "mathematical concept",
            "rule"
          ],
          "iri": "Entity-r-Mention-15"
        },
        {
          "reference": "Section-12-Paragraph-3-Sentence-2",
          "local_name": "r",
          "local_types": [
            "mathematical notation",
            "mathematical concept",
            "variable"
          ],
          "iri": "Entity-r-Mention-16"
        },
        {
          "reference": "Section-12-Paragraph-3-Sentence-4",
          "local_name": "r",
          "local_types": [
            "relation",
            "logical operator"
          ],
          "iri": "Entity-r-Mention-17"
        }
      ],
      "relevance": 0.4794921875
    },
    "Entity-rule_learning_system": {
      "node_id": "rule_learning_system",
      "disambiguation_index": 0,
      "label": "rule learning systems",
      "aliases": [
        "rule learning systems"
      ],
      "types": [
        "research area",
        "machine learning subfield",
        "concept",
        "field of study"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Systems that learn and apply rules, often using machine learning techniques.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "rule learning systems",
          "local_types": [
            "research area",
            "machine learning subfield",
            "concept",
            "field of study"
          ],
          "iri": "Entity-rule_learning_system-Mention-1"
        }
      ],
      "relevance": 0.479248046875
    },
    "Entity-rule_language": {
      "node_id": "rule_language",
      "disambiguation_index": 0,
      "label": "rule languages",
      "aliases": [
        "rule languages"
      ],
      "types": [
        "formal system",
        "knowledge representation",
        "programming language"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Formal systems used for expressing and representing knowledge or programming logic",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "rule languages",
          "local_types": [
            "formal system",
            "knowledge representation",
            "programming language"
          ],
          "iri": "Entity-rule_language-Mention-1"
        }
      ],
      "relevance": 0.479248046875
    },
    "Entity-and_after_summing_column_and_transposing_we_have_v2__pt____0_1_2__t": {
      "node_id": "and_after_summing_column_and_transposing_we_have_v2__pt____0_1_2__t",
      "disambiguation_index": 0,
      "label": "and after summing columns and transposing we have V^2(Pt) = [0 1 2]^T",
      "aliases": [
        "and after summing columns and transposing we have V^2(Pt) = [0 1 2]^T"
      ],
      "types": [
        "result",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The vector representing the count of distinct entities satisfying the body of an IOP rule, obtained by summing each column and transposing the adjacency matrix for predicate Pt.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-4",
          "local_name": "and after summing columns and transposing we have V^2(Pt) = [0 1 2]^T",
          "local_types": [
            "result",
            "mathematical concept"
          ],
          "iri": "Entity-and_after_summing_column_and_transposing_we_have_v2__pt____0_1_2__t-Mention-1"
        }
      ],
      "relevance": 0.47900390625
    },
    "Entity-for_the_iop_version": {
      "node_id": "for_the_iop_version",
      "disambiguation_index": 0,
      "label": "For the IOP version",
      "aliases": [
        "For the IOP version"
      ],
      "types": [
        "version"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The IOP version of a rule, where the body and head predicates are swapped.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-6",
          "local_name": "For the IOP version",
          "local_types": [
            "version"
          ],
          "iri": "Entity-for_the_iop_version-Mention-1"
        }
      ],
      "relevance": 0.47900390625
    },
    "Entity-entity_instance_of_a_binary_fact": {
      "node_id": "entity_instance_of_a_binary_fact",
      "disambiguation_index": 0,
      "label": "entity instances of a binary fact",
      "aliases": [
        "entity instances of a binary fact"
      ],
      "types": [
        "fact",
        "instance"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Instances of binary facts that represent the relationship between entities and their corresponding types or classes in real-world knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-1",
          "local_name": "entity instances of a binary fact",
          "local_types": [
            "fact",
            "instance"
          ],
          "iri": "Entity-entity_instance_of_a_binary_fact-Mention-1"
        }
      ],
      "relevance": 0.47900390625
    },
    "Entity-and_human__x__x__-__nativelanguage__x__z3___language__z3__z3_": {
      "node_id": "and_human__x__x__-__nativelanguage__x__z3___language__z3__z3_",
      "disambiguation_index": 0,
      "label": "and human(x, x) -> nativeLanguage(x, z3) ^ language(z3, z3)",
      "aliases": [
        "human(x, x)  -> nativeLanguage(x, z3) ^ language(z3, z3)",
        "and human(x, x) -> nativeLanguage(x, z3) ^ language(z3, z3)"
      ],
      "types": [
        "IOP rule",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A rule that specifies a person's native language based on their humanity.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "and human(x, x) -> nativeLanguage(x, z3) ^ language(z3, z3)",
          "local_types": [
            "rule",
            "IOP rule"
          ],
          "iri": "Entity-and_human__x__x__-__nativelanguage__x__z3___language__z3__z3_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "human(x, x)  -> nativeLanguage(x, z3) ^ language(z3, z3)",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-and_human__x__x__-__nativelanguage__x__z3___language__z3__z3_-Mention-2"
        }
      ],
      "relevance": 0.478759765625
    },
    "Entity-miniopsc": {
      "node_id": "miniopsc",
      "disambiguation_index": 0,
      "label": "MinIOPSC",
      "aliases": [
        "MinIOPSC"
      ],
      "types": [
        "metric",
        "performance measure",
        "parameter",
        "minimum",
        "input/output processing speed control",
        "constant"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The minimum inverse open path support control parameter",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-3",
          "local_name": "MinIOPSC",
          "local_types": [
            "metric",
            "performance measure",
            "parameter",
            "minimum",
            "input/output processing speed control",
            "constant"
          ],
          "iri": "Entity-miniopsc-Mention-1"
        }
      ],
      "relevance": 0.478759765625
    },
    "Entity-p_k": {
      "node_id": "p_k",
      "disambiguation_index": 0,
      "label": "P_k",
      "aliases": [
        "P_k"
      ],
      "types": [
        "symbol",
        "mathematical concept",
        "variable",
        "matrix",
        "symbolic representation",
        "variable name",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept or symbolic representation used to describe relationships between entities.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "P_k",
          "local_types": [
            "matrix",
            "mathematical concept"
          ],
          "iri": "Entity-p_k-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "P_k",
          "local_types": [
            "symbol",
            "predicate",
            "variable"
          ],
          "iri": "Entity-p_k-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "P_k",
          "local_types": [
            "variable name",
            "symbolic representation"
          ],
          "iri": "Entity-p_k-Mention-3"
        }
      ],
      "relevance": 0.478515625
    },
    "Entity-the_subject_argument_of_the_body_predicate": {
      "node_id": "the_subject_argument_of_the_body_predicate",
      "disambiguation_index": 0,
      "label": "the subject argument of the body predicate",
      "aliases": [
        "the subject argument of the body predicate"
      ],
      "types": [
        "argument",
        "subject"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The entity referred to by 'the subject argument of the body predicate' is the part of an IOP (Inverse Open Path) rule that specifies the entities connected to those satisfying a particular predicate, Pt.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "the subject argument of the body predicate",
          "local_types": [
            "argument",
            "subject"
          ],
          "iri": "Entity-the_subject_argument_of_the_body_predicate-Mention-1"
        }
      ],
      "relevance": 0.47802734375
    },
    "Entity-the_label_of_a_link_in_the_graph": {
      "node_id": "the_label_of_a_link_in_the_graph",
      "disambiguation_index": 0,
      "label": "the label of a link in the graph",
      "aliases": [
        "the label of a link in the graph"
      ],
      "types": [
        "attribute",
        "labeling"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A unique identifier or property that serves as the label of an edge (link) within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "the label of a link in the graph",
          "local_types": [
            "attribute",
            "labeling"
          ],
          "iri": "Entity-the_label_of_a_link_in_the_graph-Mention-1"
        }
      ],
      "relevance": 0.4775390625
    },
    "Entity-they_(2)": {
      "node_id": "they_(2)",
      "disambiguation_index": 2,
      "label": "They",
      "aliases": [
        "They"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of entities that satisfy the head of an IOP rule, calculated by summing each row of the matrix product A(P1)*A(P2)*...*A(Pm) and taking elements with a value >= Car for rules with cardinality Car.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "They",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-they_(2)-Mention-1"
        }
      ],
      "relevance": 0.4775390625
    },
    "Entity-new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album": {
      "node_id": "new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album",
      "disambiguation_index": 0,
      "label": "new predicates from facts in the form, where x is the name of an album",
      "aliases": [
        "new predicates from facts in the form, where x is the name of an album.",
        "new predicates from facts in the form, where x is the name of an album"
      ],
      "types": [
        "fact",
        "album",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of unary predicates generated by transforming binary fact patterns into new predicate forms, with each predicate corresponding to a class or type in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-4",
          "local_name": "new predicates from facts in the form, where x is the name of an album",
          "local_types": [
            "predicate",
            "fact",
            "album"
          ],
          "iri": "Entity-new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-4",
          "local_name": "new predicates from facts in the form, where x is the name of an album.",
          "local_types": [
            "predicate",
            "album"
          ],
          "iri": "Entity-new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album-Mention-2"
        }
      ],
      "relevance": 0.477294921875
    },
    "Entity-opsupp__r_": {
      "node_id": "opsupp__r_",
      "disambiguation_index": 0,
      "label": "OPsupp(r)",
      "aliases": [
        "OPsupp(r)"
      ],
      "types": [
        "mathematical operation",
        "notation",
        "support function",
        "support",
        "expression",
        "mathematical formula",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The open path support of a rule r, which measures the proportion of entities for which there exist other entities that satisfy both the body and head of the rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-2",
          "local_name": "OPsupp(r)",
          "local_types": [
            "expression",
            "mathematical formula",
            "function"
          ],
          "iri": "Entity-opsupp__r_-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-5-Sentence-4",
          "local_name": "OPsupp(r)",
          "local_types": [
            "mathematical operation",
            "notation",
            "support",
            "support function"
          ],
          "iri": "Entity-opsupp__r_-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-5-Sentence-3",
          "local_name": "OPsupp(r)",
          "local_types": [
            "function",
            "support"
          ],
          "iri": "Entity-opsupp__r_-Mention-3"
        }
      ],
      "relevance": 0.47705078125
    },
    "Entity-logical_formalism": {
      "node_id": "logical_formalism",
      "disambiguation_index": 0,
      "label": "logical formalisms",
      "aliases": [
        "logical formalisms"
      ],
      "types": [
        "concept",
        "mathematical concept",
        "formalism",
        "computer science concept",
        "mathematical structure",
        "computational framework"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical framework or structure used for representing, manipulating, and reasoning about logical statements",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-3",
          "local_name": "logical formalisms",
          "local_types": [
            "concept",
            "mathematical concept",
            "formalism",
            "computer science concept",
            "mathematical structure",
            "computational framework"
          ],
          "iri": "Entity-logical_formalism-Mention-1"
        }
      ],
      "relevance": 0.47705078125
    },
    "Entity-embeddings__": {
      "node_id": "embeddings__",
      "disambiguation_index": 0,
      "label": "Embeddings()",
      "aliases": [
        "Embeddings()"
      ],
      "types": [
        "function",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A function or method that generates vector representations of input data, often used for natural language processing and machine learning tasks.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "Embeddings()",
          "local_types": [
            "function",
            "method"
          ],
          "iri": "Entity-embeddings__-Mention-1"
        }
      ],
      "relevance": 0.476806640625
    },
    "Entity-p__i": {
      "node_id": "p__i",
      "disambiguation_index": 0,
      "label": "P'i",
      "aliases": [
        "P'i"
      ],
      "types": [
        "predicate",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The inverse open path rule 'P'i",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "P'i",
          "local_types": [
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-p__i-Mention-1"
        }
      ],
      "relevance": 0.4765625
    },
    "Entity-node_and_property_shape": {
      "node_id": "node_and_property_shape",
      "disambiguation_index": 0,
      "label": "node and property shapes",
      "aliases": [
        "node and property shapes"
      ],
      "types": [
        "conceptual entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of conceptual representations that define node structures and relationships, as well as properties and their constraints.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-1",
          "local_name": "node and property shapes",
          "local_types": [
            "conceptual entity"
          ],
          "iri": "Entity-node_and_property_shape-Mention-1"
        }
      ],
      "relevance": 0.4765625
    },
    "Entity-google_search_engine": {
      "node_id": "google_search_engine",
      "disambiguation_index": 0,
      "label": "Google Search engine",
      "aliases": [
        "Google Search engine"
      ],
      "types": [
        "search platform",
        "information retrieval system",
        "search engine",
        "technology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A popular online search platform that provides information retrieval services and technology.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "Google Search engine",
          "local_types": [
            "search platform",
            "information retrieval system",
            "search engine",
            "technology"
          ],
          "iri": "Entity-google_search_engine-Mention-1"
        }
      ],
      "relevance": 0.476318359375
    },
    "Entity-new_unary_fact": {
      "node_id": "new_unary_fact",
      "disambiguation_index": 0,
      "label": "new unary facts",
      "aliases": [
        "new unary facts"
      ],
      "types": [
        "data point",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "New unary facts refer to a set of predicates created from original binary fact-based types or classes, used for learning fully abstracted shapes instead of partially instantiated ones.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-5",
          "local_name": "new unary facts",
          "local_types": [
            "data point",
            "information"
          ],
          "iri": "Entity-new_unary_fact-Mention-1"
        }
      ],
      "relevance": 0.476318359375
    },
    "Entity-pathfinding": {
      "node_id": "pathfinding",
      "disambiguation_index": 0,
      "label": "PathFinding",
      "aliases": [
        "PathFinding"
      ],
      "types": [
        "algorithm",
        "pathfinding",
        "step",
        "method",
        "technique",
        "algorithm component",
        "module",
        "computational method",
        "computational process",
        "process",
        "computer science concept",
        "function",
        "methodology",
        "pathfinding algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A computational method or technique used for finding a path between two points or locations.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-9",
          "local_name": "PathFinding",
          "local_types": [
            "algorithm",
            "function"
          ],
          "iri": "Entity-pathfinding-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-1-Sentence-1",
          "local_name": "PathFinding",
          "local_types": [
            "method",
            "algorithm component",
            "computational method",
            "process",
            "computer science concept",
            "pathfinding algorithm"
          ],
          "iri": "Entity-pathfinding-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-5",
          "local_name": "PathFinding",
          "local_types": [
            "algorithm",
            "pathfinding",
            "step",
            "method",
            "technique",
            "module",
            "process",
            "methodology",
            "pathfinding algorithm"
          ],
          "iri": "Entity-pathfinding-Mention-3"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "PathFinding",
          "local_types": [
            "computational process",
            "method",
            "algorithm",
            "function"
          ],
          "iri": "Entity-pathfinding-Mention-4"
        }
      ],
      "relevance": 0.47607421875
    },
    "Entity-not-null_and_other_schema-based_constraint": {
      "node_id": "not-null_and_other_schema-based_constraint",
      "disambiguation_index": 0,
      "label": "not-null and other schema-based constraints",
      "aliases": [
        "not-null and other schema-based constraints"
      ],
      "types": [
        "constraint"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Schema-based constraints that ensure certain attributes are always instantiated with specific values or types, typically used in relational databases.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "not-null and other schema-based constraints",
          "local_types": [
            "constraint"
          ],
          "iri": "Entity-not-null_and_other_schema-based_constraint-Mention-1"
        }
      ],
      "relevance": 0.475830078125
    },
    "Entity-k__a_subgraph_of_the_input_graph": {
      "node_id": "k__a_subgraph_of_the_input_graph",
      "disambiguation_index": 0,
      "label": "K' a subgraph of the input graph",
      "aliases": [
        "K' a subgraph of the input graph"
      ],
      "types": [
        "subgraph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A subset or partial representation of a larger graph, containing some but not all nodes and edges.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-4",
          "local_name": "K' a subgraph of the input graph",
          "local_types": [
            "subgraph"
          ],
          "iri": "Entity-k__a_subgraph_of_the_input_graph-Mention-1"
        }
      ],
      "relevance": 0.4755859375
    },
    "Entity-breadth-first_manner": {
      "node_id": "breadth-first_manner",
      "disambiguation_index": 0,
      "label": "breadth-first manner",
      "aliases": [
        "breadth-first manner"
      ],
      "types": [
        "strategy",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method of traversing or processing data structures that visits all nodes at a given level before moving on to the next level.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-3",
          "local_name": "breadth-first manner",
          "local_types": [
            "strategy",
            "algorithm"
          ],
          "iri": "Entity-breadth-first_manner-Mention-1"
        }
      ],
      "relevance": 0.4755859375
    },
    "Entity-person_even_though_there_is_no_explicit_person_type_in_our_kg": {
      "node_id": "person_even_though_there_is_no_explicit_person_type_in_our_kg",
      "disambiguation_index": 0,
      "label": "persons even though there is no explicit person type in our KG",
      "aliases": [
        "persons even though there is no explicit person type in our KG"
      ],
      "types": [
        "person",
        "type"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Entities with occupations such as singer, entrepreneur, etc. which are considered persons despite the absence of an explicit 'person' type in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "persons even though there is no explicit person type in our KG",
          "local_types": [
            "person",
            "type"
          ],
          "iri": "Entity-person_even_though_there_is_no_explicit_person_type_in_our_kg-Mention-1"
        }
      ],
      "relevance": 0.4755859375
    },
    "Entity-predicate_calculus": {
      "node_id": "predicate_calculus",
      "disambiguation_index": 0,
      "label": "predicate calculus",
      "aliases": [
        "predicate calculus formalism",
        "predicate calculus"
      ],
      "types": [
        "computational model",
        "theory",
        "formalism",
        "mathematical framework",
        "mathematics"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A formal system for expressing mathematical statements using predicates, quantifiers, and logical operators.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "predicate calculus",
          "local_types": [
            "formalism",
            "theory"
          ],
          "iri": "Entity-predicate_calculus-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "predicate calculus formalism",
          "local_types": [
            "formalism",
            "mathematical framework",
            "computational model",
            "mathematics"
          ],
          "iri": "Entity-predicate_calculus-Mention-2"
        }
      ],
      "relevance": 0.475341796875
    },
    "Entity-heuristic_pruning": {
      "node_id": "heuristic_pruning",
      "disambiguation_index": 0,
      "label": "heuristic pruning",
      "aliases": [
        "heuristic pruning"
      ],
      "types": [
        "pruning algorithm",
        "computational optimization method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or algorithm for reducing a search space by eliminating less promising options based on heuristics.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-1-Sentence-1",
          "local_name": "heuristic pruning",
          "local_types": [
            "pruning algorithm",
            "computational optimization method"
          ],
          "iri": "Entity-heuristic_pruning-Mention-1"
        }
      ],
      "relevance": 0.475341796875
    },
    "Entity-__e2__e3__": {
      "node_id": "__e2__e3__",
      "disambiguation_index": 0,
      "label": "|{e2, e3}|",
      "aliases": [
        "|{e2, e3}|"
      ],
      "types": [
        "set notation",
        "mathematical expression"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of entities {e2, e3} that satisfy the body and head of a given IOP rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "|{e2, e3}|",
          "local_types": [
            "set notation",
            "mathematical expression"
          ],
          "iri": "Entity-__e2__e3__-Mention-1"
        }
      ],
      "relevance": 0.475341796875
    },
    "Entity-wikidata_and_dbpedia_unary_predicate__157_and_355_respectively_": {
      "node_id": "wikidata_and_dbpedia_unary_predicate__157_and_355_respectively_",
      "disambiguation_index": 0,
      "label": "Wikidata and DBPedia unary predicates (157 and 355 respectively)",
      "aliases": [
        "Wikidata and DBPedia unary predicates (157 and 355 respectively)"
      ],
      "types": [
        "dataset",
        "repository"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of unary predicates, specifically 157 from Wikidata and 355 from DBpedia, used as target predicates for evaluating SHACLEARNER's performance.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-3",
          "local_name": "Wikidata and DBPedia unary predicates (157 and 355 respectively)",
          "local_types": [
            "dataset",
            "repository"
          ],
          "iri": "Entity-wikidata_and_dbpedia_unary_predicate__157_and_355_respectively_-Mention-1"
        }
      ],
      "relevance": 0.475341796875
    },
    "Entity-inference_rule": {
      "node_id": "inference_rule",
      "disambiguation_index": 0,
      "label": "inference rules",
      "aliases": [
        "inference rules"
      ],
      "types": [
        "algorithm",
        "logic",
        "rule-based system",
        "artificial intelligence concept",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of logical statements used to draw conclusions or make predictions based on available information.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "inference rules",
          "local_types": [
            "algorithm",
            "logic",
            "rule-based system",
            "artificial intelligence concept",
            "rule set"
          ],
          "iri": "Entity-inference_rule-Mention-1"
        }
      ],
      "relevance": 0.47509765625
    },
    "Entity-the_support_of_r": {
      "node_id": "the_support_of_r",
      "disambiguation_index": 0,
      "label": "the support of r",
      "aliases": [
        "the support of r"
      ],
      "types": [
        "support"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The measure that counts the number of entity pairs that satisfy both the body and the head of a closed-path rule in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-5",
          "local_name": "the support of r",
          "local_types": [
            "support"
          ],
          "iri": "Entity-the_support_of_r-Mention-1"
        }
      ],
      "relevance": 0.47509765625
    },
    "Entity-miniophc": {
      "node_id": "miniophc",
      "disambiguation_index": 0,
      "label": "MinIOPHC",
      "aliases": [
        "MinIOPHC"
      ],
      "types": [
        "input/output processing handling capacity",
        "metric",
        "performance measure",
        "parameter",
        "minimum",
        "constant"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The minimum inverse open path handling capacity (MinIOPHC) metric",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-3",
          "local_name": "MinIOPHC",
          "local_types": [
            "input/output processing handling capacity",
            "metric",
            "performance measure",
            "parameter",
            "minimum",
            "constant"
          ],
          "iri": "Entity-miniophc-Mention-1"
        }
      ],
      "relevance": 0.474853515625
    },
    "Entity-argument_embeddings": {
      "node_id": "argument_embeddings",
      "disambiguation_index": 0,
      "label": "argument embeddings",
      "aliases": [
        "argument embeddings"
      ],
      "types": [
        "data structure",
        "vector representation",
        "embedding",
        "representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of input data, typically used to capture semantic relationships and contextual information.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "argument embeddings",
          "local_types": [
            "data structure",
            "vector representation",
            "embedding",
            "representation"
          ],
          "iri": "Entity-argument_embeddings-Mention-1"
        }
      ],
      "relevance": 0.474853515625
    },
    "Entity-a_song_ha_at_least_2_producer": {
      "node_id": "a_song_ha_at_least_2_producer",
      "disambiguation_index": 0,
      "label": "a song has at least 2 producers",
      "aliases": [
        "a song has at least 2 producers"
      ],
      "types": [
        "fact",
        "song",
        "song_producer_rule",
        "rule",
        "producer"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A rule or constraint in a knowledge graph (KG) specifying that a song must have at least two producers.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "a song has at least 2 producers",
          "local_types": [
            "fact",
            "song",
            "song_producer_rule",
            "rule",
            "producer"
          ],
          "iri": "Entity-a_song_ha_at_least_2_producer-Mention-1"
        }
      ],
      "relevance": 0.474853515625
    },
    "Entity-we_observe_an_expected_decrease_with_greater_cardinality_a_they_demand_tighter_restriction_to_be_satisfied": {
      "node_id": "we_observe_an_expected_decrease_with_greater_cardinality_a_they_demand_tighter_restriction_to_be_satisfied",
      "disambiguation_index": 0,
      "label": "We observe an expected decrease with greater cardinalities as they demand tighter restrictions to be satisfied",
      "aliases": [
        "We observe an expected decrease with greater cardinalities as they demand tighter restrictions to be satisfied"
      ],
      "types": [
        "finding",
        "result"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The distribution of mined rules with respect to their cardinalities, showing a consistent decrease in proportion of quality rules as cardinality increases.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-6-Sentence-2",
          "local_name": "We observe an expected decrease with greater cardinalities as they demand tighter restrictions to be satisfied",
          "local_types": [
            "finding",
            "result"
          ],
          "iri": "Entity-we_observe_an_expected_decrease_with_greater_cardinality_a_they_demand_tighter_restriction_to_be_satisfied-Mention-1"
        }
      ],
      "relevance": 0.474609375
    },
    "Entity-the_number_of_distinct_e_s_is_the_count_of_non-zero_element": {
      "node_id": "the_number_of_distinct_e_s_is_the_count_of_non-zero_element",
      "disambiguation_index": 0,
      "label": "the number of distinct e's is the count of non-zero elements",
      "aliases": [
        "the number of distinct e's is the count of non-zero elements"
      ],
      "types": [
        "concept",
        "mathematics"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure counting the unique entities (e') satisfying the body of an IOP rule, obtained by summing each column and transposing the adjacency matrix A(Pt) representing the predicate Pt.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "the number of distinct e's is the count of non-zero elements",
          "local_types": [
            "concept",
            "mathematics"
          ],
          "iri": "Entity-the_number_of_distinct_e_s_is_the_count_of_non-zero_element-Mention-1"
        }
      ],
      "relevance": 0.474609375
    },
    "Entity-w3c_recommendation": {
      "node_id": "w3c_recommendation",
      "disambiguation_index": 0,
      "label": "W3C recommendation",
      "aliases": [
        "W3C recommendation"
      ],
      "types": [
        "recommendation",
        "standards document",
        "document type",
        "organization",
        "standards organization"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technical standard or guideline published by the World Wide Web Consortium (W3C) that outlines best practices, guidelines, or protocols for a specific area of web development.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "W3C recommendation",
          "local_types": [
            "recommendation",
            "standards document",
            "document type",
            "organization",
            "standards organization"
          ],
          "iri": "Entity-w3c_recommendation-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "W3C recommendation",
          "local_types": [
            "organization",
            "recommendation",
            "standards document",
            "standards organization"
          ],
          "iri": "Entity-w3c_recommendation-Mention-2"
        }
      ],
      "relevance": 0.474365234375
    },
    "Entity-the_necessity_of_a_chain_of_fact": {
      "node_id": "the_necessity_of_a_chain_of_fact",
      "disambiguation_index": 0,
      "label": "the necessity of a chain of facts",
      "aliases": [
        "the necessity of a chain of facts"
      ],
      "types": [
        "necessity",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept that certain relationships between entities must be present to validate a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "the necessity of a chain of facts",
          "local_types": [
            "necessity",
            "fact"
          ],
          "iri": "Entity-the_necessity_of_a_chain_of_fact-Mention-1"
        }
      ],
      "relevance": 0.474365234375
    },
    "Entity-an_entity_which_ha_song_a_it_type": {
      "node_id": "an_entity_which_ha_song_a_it_type",
      "disambiguation_index": 0,
      "label": "an entity which has song as its type",
      "aliases": [
        "an entity which has song as its type"
      ],
      "types": [
        "type",
        "entity",
        "song"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A shape that represents a path over connected entities present in a knowledge graph, where each node corresponds to an instance of 'song' and edges represent relationships between songs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-4",
          "local_name": "an entity which has song as its type",
          "local_types": [
            "type",
            "entity",
            "song"
          ],
          "iri": "Entity-an_entity_which_ha_song_a_it_type-Mention-1"
        }
      ],
      "relevance": 0.474365234375
    },
    "Entity-opsc__r_": {
      "node_id": "opsc__r_",
      "disambiguation_index": 0,
      "label": "OPSC(r)",
      "aliases": [
        "OPSC(r)"
      ],
      "types": [
        "expression",
        "mathematical formula",
        "equation",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Open path standard confidence measure for a given open path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-3",
          "local_name": "OPSC(r)",
          "local_types": [
            "expression",
            "mathematical formula",
            "equation",
            "function"
          ],
          "iri": "Entity-opsc__r_-Mention-1"
        }
      ],
      "relevance": 0.47412109375
    },
    "Entity-predicate_p1__p2__and_pt": {
      "node_id": "predicate_p1__p2__and_pt",
      "disambiguation_index": 0,
      "label": "predicates P1, P2, and Pt",
      "aliases": [
        "predicates P1, P2, and Pt"
      ],
      "types": [
        "logical construct",
        "computer science term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of logical operations or computer science terms that define relationships between entities.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "predicates P1, P2, and Pt",
          "local_types": [
            "logical construct",
            "computer science term"
          ],
          "iri": "Entity-predicate_p1__p2__and_pt-Mention-1"
        }
      ],
      "relevance": 0.47412109375
    },
    "Entity-schema-free_knowledge_base": {
      "node_id": "schema-free_knowledge_base",
      "disambiguation_index": 0,
      "label": "schema-free knowledge bases",
      "aliases": [
        "schema-free knowledge bases"
      ],
      "types": [
        "data source",
        "knowledge repository",
        "database",
        "knowledge base",
        "information repository"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of database or repository that does not rely on predefined schemas to organize and store information.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-2",
          "local_name": "schema-free knowledge bases",
          "local_types": [
            "data source",
            "knowledge repository",
            "database",
            "knowledge base",
            "information repository"
          ],
          "iri": "Entity-schema-free_knowledge_base-Mention-1"
        }
      ],
      "relevance": 0.473876953125
    },
    "Entity-algorithm_2": {
      "node_id": "algorithm_2",
      "disambiguation_index": 0,
      "label": "Algorithm 2",
      "aliases": [
        "Algorithm 2"
      ],
      "types": [
        "algorithm",
        "program",
        "method",
        "concept",
        "code snippet",
        "reference",
        "computer program",
        "algorithmic process"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A step-by-step procedure for processing or solving a problem",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "Algorithm 2",
          "local_types": [
            "algorithm",
            "program",
            "method",
            "reference",
            "algorithmic process"
          ],
          "iri": "Entity-algorithm_2-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "Algorithm 2",
          "local_types": [
            "algorithm",
            "method",
            "concept"
          ],
          "iri": "Entity-algorithm_2-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "Algorithm 2",
          "local_types": [
            "code snippet",
            "reference",
            "computer program"
          ],
          "iri": "Entity-algorithm_2-Mention-3"
        }
      ],
      "relevance": 0.4736328125
    },
    "Entity-sequence": {
      "node_id": "sequence",
      "disambiguation_index": 0,
      "label": "sequence",
      "aliases": [
        "sequence"
      ],
      "types": [
        "data structure",
        "computer science"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A series or list of items, often used to represent an ordered collection in computer science.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "sequence",
          "local_types": [
            "data structure",
            "computer science"
          ],
          "iri": "Entity-sequence-Mention-1"
        }
      ],
      "relevance": 0.4736328125
    },
    "Entity-closed_rule": {
      "node_id": "closed_rule",
      "disambiguation_index": 0,
      "label": "closed rules",
      "aliases": [
        "closed rules"
      ],
      "types": [
        "closed rule",
        "rule-based system",
        "rule",
        "logical construct"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of predetermined guidelines or principles that dictate specific outcomes or behaviors.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "closed rules",
          "local_types": [
            "closed rule",
            "rule-based system",
            "rule",
            "logical construct"
          ],
          "iri": "Entity-closed_rule-Mention-1"
        }
      ],
      "relevance": 0.473388671875
    },
    "Entity-potential_rule": {
      "node_id": "potential_rule",
      "disambiguation_index": 0,
      "label": "potential rules",
      "aliases": [
        "potential rules"
      ],
      "types": [
        "concept",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or system of guidelines, principles, or standards that have not yet been formally established",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-3",
          "local_name": "potential rules",
          "local_types": [
            "concept",
            "rule set"
          ],
          "iri": "Entity-potential_rule-Mention-1"
        }
      ],
      "relevance": 0.473388671875
    },
    "Entity-various_formalism": {
      "node_id": "various_formalism",
      "disambiguation_index": 0,
      "label": "Various formalisms",
      "aliases": [
        "Various formalisms"
      ],
      "types": [
        "conceptual framework",
        "formalism"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of abstract systems or structures used to represent and organize patterns, relationships, or concepts in a specific domain.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "Various formalisms",
          "local_types": [
            "conceptual framework",
            "formalism"
          ],
          "iri": "Entity-various_formalism-Mention-1"
        }
      ],
      "relevance": 0.47265625
    },
    "Entity-formalisation": {
      "node_id": "formalisation",
      "disambiguation_index": 0,
      "label": "formalisation",
      "aliases": [
        "formalisation"
      ],
      "types": [
        "approach",
        "concept",
        "logical framework",
        "mathematical representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic and structured representation or framework used to describe, model, or analyze something.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "formalisation",
          "local_types": [
            "approach",
            "concept",
            "logical framework",
            "mathematical representation"
          ],
          "iri": "Entity-formalisation-Mention-1"
        }
      ],
      "relevance": 0.47265625
    },
    "Entity-rule_learner": {
      "node_id": "rule_learner",
      "disambiguation_index": 0,
      "label": "rule learners",
      "aliases": [
        "rule learners"
      ],
      "types": [
        "algorithm",
        "machine learning",
        "machine learning model",
        "tool"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Entities that learn and apply rules or patterns in a machine learning process.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-2",
          "local_name": "rule learners",
          "local_types": [
            "algorithm",
            "machine learning",
            "machine learning model",
            "tool"
          ],
          "iri": "Entity-rule_learner-Mention-1"
        }
      ],
      "relevance": 0.472412109375
    },
    "Entity-the_following_scoring_function_is_computed_": {
      "node_id": "the_following_scoring_function_is_computed_",
      "disambiguation_index": 0,
      "label": "the following scoring function is computed:",
      "aliases": [
        "the following scoring function is computed:"
      ],
      "types": [
        "statement"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A mathematical formula used to calculate the plausibility of a fact in a knowledge graph, given two entities and a predicate.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-4",
          "local_name": "the following scoring function is computed:",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-the_following_scoring_function_is_computed_-Mention-1"
        }
      ],
      "relevance": 0.47216796875
    },
    "Entity-kb": {
      "node_id": "kb",
      "disambiguation_index": 0,
      "label": "KB",
      "aliases": [
        "KB"
      ],
      "types": [
        "database",
        "knowledge base"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A database or knowledge base that stores and organizes information.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "KB",
          "local_types": [
            "database",
            "knowledge base"
          ],
          "iri": "Entity-kb-Mention-1"
        }
      ],
      "relevance": 0.471923828125
    },
    "Entity-a_good_learning_algorithm": {
      "node_id": "a_good_learning_algorithm",
      "disambiguation_index": 0,
      "label": "A good learning algorithm",
      "aliases": [
        "A good learning algorithm"
      ],
      "types": [
        "algorithm",
        "machine learning"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A machine learning method or process designed to efficiently learn from data",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-4",
          "local_name": "A good learning algorithm",
          "local_types": [
            "algorithm",
            "machine learning"
          ],
          "iri": "Entity-a_good_learning_algorithm-Mention-1"
        }
      ],
      "relevance": 0.471923828125
    },
    "Entity-the_embedding": {
      "node_id": "the_embedding",
      "disambiguation_index": 0,
      "label": "The embedding",
      "aliases": [
        "The embedding"
      ],
      "types": [
        "embedding"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A vectorial representation of a predicate or entity, computed using the RESCAL algorithm to capture their relationships and properties.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-2",
          "local_name": "The embedding",
          "local_types": [
            "embedding"
          ],
          "iri": "Entity-the_embedding-Mention-1"
        }
      ],
      "relevance": 0.471923828125
    },
    "Entity-entity_satisfying_the_subject_argument_of_the_body_predicate": {
      "node_id": "entity_satisfying_the_subject_argument_of_the_body_predicate",
      "disambiguation_index": 0,
      "label": "entities satisfying the subject argument of the body predicate",
      "aliases": [
        "entities satisfying the subject argument of the body predicate"
      ],
      "types": [
        "entity",
        "satisfying"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Entities connected by a path of predicates in an IOP rule, where each entity satisfies the subject argument of the body predicate.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "entities satisfying the subject argument of the body predicate",
          "local_types": [
            "entity",
            "satisfying"
          ],
          "iri": "Entity-entity_satisfying_the_subject_argument_of_the_body_predicate-Mention-1"
        }
      ],
      "relevance": 0.4716796875
    },
    "Entity-_e__e___satisfies_the_body_of_r_(1)": {
      "node_id": "_e__e___satisfies_the_body_of_r_(1)",
      "disambiguation_index": 1,
      "label": "(e, e') satisfies the body of r",
      "aliases": [
        "(e, e') satisfies the body of r"
      ],
      "types": [
        "relation",
        "body_of_r"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A pair of entities that satisfies a given open path rule by instantiating its predicate terms with entities from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "(e, e') satisfies the body of r",
          "local_types": [
            "relation",
            "body_of_r"
          ],
          "iri": "Entity-_e__e___satisfies_the_body_of_r_(1)-Mention-1"
        }
      ],
      "relevance": 0.4716796875
    },
    "Entity-a_large_number_of_redundant_and_low_quality_rule": {
      "node_id": "a_large_number_of_redundant_and_low_quality_rule",
      "disambiguation_index": 0,
      "label": "a large number of redundant and low quality rules",
      "aliases": [
        "a large number of redundant and low quality rules"
      ],
      "types": [
        "rules",
        "knowledge base"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of knowledge base rules that are redundant, low quality, or both.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-3",
          "local_name": "a large number of redundant and low quality rules",
          "local_types": [
            "rules",
            "knowledge base"
          ],
          "iri": "Entity-a_large_number_of_redundant_and_low_quality_rule-Mention-1"
        }
      ],
      "relevance": 0.4716796875
    },
    "Entity-a_brute-force_search": {
      "node_id": "a_brute-force_search",
      "disambiguation_index": 0,
      "label": "a brute-force search",
      "aliases": [
        "a brute-force search"
      ],
      "types": [
        "search"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A computational approach that exhaustively searches and evaluates all possible rules up to a maximum length parameter, without using sampling or heuristic pruning.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-5",
          "local_name": "a brute-force search",
          "local_types": [
            "search"
          ],
          "iri": "Entity-a_brute-force_search-Mention-1"
        }
      ],
      "relevance": 0.4716796875
    },
    "Entity-for_iopsc_and_iophc": {
      "node_id": "for_iopsc_and_iophc",
      "disambiguation_index": 0,
      "label": "For IOPSC and IOPHC",
      "aliases": [
        "For IOPSC and IOPHC"
      ],
      "types": [
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of rules or guidelines for International Organization for Psychosocial Services (IOPSC) and International Organization for Palliative Home Care (IOPHC)",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "For IOPSC and IOPHC",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-for_iopsc_and_iophc-Mention-1"
        }
      ],
      "relevance": 0.471435546875
    },
    "Entity-consisting_of_a_bounded_number_of_entity": {
      "node_id": "consisting_of_a_bounded_number_of_entity",
      "disambiguation_index": 0,
      "label": "consisting of a bounded number of entities",
      "aliases": [
        "consisting of a bounded number of entities"
      ],
      "types": [
        "entities",
        "number"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A subgraph of a knowledge graph, comprising a limited number of entities connected by relationships relevant to a specific target predicate.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "consisting of a bounded number of entities",
          "local_types": [
            "entities",
            "number"
          ],
          "iri": "Entity-consisting_of_a_bounded_number_of_entity-Mention-1"
        }
      ],
      "relevance": 0.471435546875
    },
    "Entity-sampling___method": {
      "node_id": "sampling___method",
      "disambiguation_index": 0,
      "label": "Sampling() method",
      "aliases": [
        "sampling algorithm",
        "Sampling() method"
      ],
      "types": [
        "algorithm",
        "method",
        "computational method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A computational procedure for selecting and extracting specific data or information from a larger dataset.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "Sampling() method",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-sampling___method-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "sampling algorithm",
          "local_types": [
            "algorithm",
            "computational method"
          ],
          "iri": "Entity-sampling___method-Mention-2"
        }
      ],
      "relevance": 0.47119140625
    },
    "Entity-a_human_expert": {
      "node_id": "a_human_expert",
      "disambiguation_index": 0,
      "label": "a human expert",
      "aliases": [
        "a human expert"
      ],
      "types": [
        "person"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A person with expertise in extracting and interpreting knowledge graph shapes",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-1",
          "local_name": "a human expert",
          "local_types": [
            "person"
          ],
          "iri": "Entity-a_human_expert-Mention-1"
        }
      ],
      "relevance": 0.47119140625
    },
    "Entity-rule_mining": {
      "node_id": "rule_mining",
      "disambiguation_index": 0,
      "label": "rule mining",
      "aliases": [
        "rule mining"
      ],
      "types": [
        "research area",
        "field of study"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process or field of study focused on discovering and extracting patterns or relationships from data to create predictive models, decision-making tools, or other knowledge-based systems.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "rule mining",
          "local_types": [
            "research area",
            "field of study"
          ],
          "iri": "Entity-rule_mining-Mention-1"
        }
      ],
      "relevance": 0.470947265625
    },
    "Entity-matrix": {
      "node_id": "matrix",
      "disambiguation_index": 0,
      "label": "matrix",
      "aliases": [
        "matrix"
      ],
      "types": [
        "mathematical concept",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a mathematical structure or data representation that consists of rows and columns of values, often used to manipulate or analyze large datasets",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "matrix",
          "local_types": [
            "mathematical concept",
            "data structure"
          ],
          "iri": "Entity-matrix-Mention-1"
        }
      ],
      "relevance": 0.47021484375
    },
    "Entity-existential_variable_in_the_head": {
      "node_id": "existential_variable_in_the_head",
      "disambiguation_index": 0,
      "label": "existential variables in the head",
      "aliases": [
        "existential variables in the head"
      ],
      "types": [
        "variable",
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Existential variables that appear at the end of an inverse open path rule, representing the sequence of predicates that must be satisfied to instantiate the head.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "existential variables in the head",
          "local_types": [
            "variable",
            "head"
          ],
          "iri": "Entity-existential_variable_in_the_head-Mention-1"
        }
      ],
      "relevance": 0.47021484375
    },
    "Entity-a_pair_of_entity_(2)": {
      "node_id": "a_pair_of_entity_(2)",
      "disambiguation_index": 2,
      "label": "A pair of entities",
      "aliases": [
        "A pair of entities"
      ],
      "types": [
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A pair of entities (e, e') that satisfies a given open path rule r by having predicates P1(e, e1), ..., Pn(en-1, e') as facts in the knowledge graph and Pt(e', e) being a fact.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "A pair of entities",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-a_pair_of_entity_(2)-Mention-1"
        }
      ],
      "relevance": 0.469970703125
    },
    "Entity-an_instance_of_the_head_(1)": {
      "node_id": "an_instance_of_the_head_(1)",
      "disambiguation_index": 1,
      "label": "an instance of the head",
      "aliases": [
        "an instance of the head"
      ],
      "types": [
        "instance",
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific shape pattern that can be augmented with minimum cardinality constraints and used as a building block for more complex shapes, such as trees.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-5",
          "local_name": "an instance of the head",
          "local_types": [
            "instance",
            "head"
          ],
          "iri": "Entity-an_instance_of_the_head_(1)-Mention-1"
        }
      ],
      "relevance": 0.469970703125
    },
    "Entity-simple_shape_pattern": {
      "node_id": "simple_shape_pattern",
      "disambiguation_index": 0,
      "label": "simple shape patterns",
      "aliases": [
        "simple shape patterns"
      ],
      "types": [
        "pattern",
        "geometric concept",
        "shape pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A fundamental concept or design element that involves repeating geometric forms with minimal complexity.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "simple shape patterns",
          "local_types": [
            "pattern",
            "geometric concept",
            "shape pattern"
          ],
          "iri": "Entity-simple_shape_pattern-Mention-1"
        }
      ],
      "relevance": 0.4697265625
    },
    "Entity-an_op_rule_ha_two_open_variable__y_and_x": {
      "node_id": "an_op_rule_ha_two_open_variable__y_and_x",
      "disambiguation_index": 0,
      "label": "An OP rule has two open variables, y and x",
      "aliases": [
        "An OP rule has two open variables, y and x"
      ],
      "types": [
        "OP rule",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept that represents a set of rules with specific variables.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-3",
          "local_name": "An OP rule has two open variables, y and x",
          "local_types": [
            "OP rule",
            "variable"
          ],
          "iri": "Entity-an_op_rule_ha_two_open_variable__y_and_x-Mention-1"
        }
      ],
      "relevance": 0.4697265625
    },
    "Entity-we_can_read_the_pair__e___e__directly_from_the_matrix_a__pt__.": {
      "node_id": "we_can_read_the_pair__e___e__directly_from_the_matrix_a__pt__.",
      "disambiguation_index": 0,
      "label": "we can read the pairs (e', e) directly from the matrix A(Pt).",
      "aliases": [
        "we can read the pairs (e', e) directly from the matrix A(Pt)."
      ],
      "types": [
        "sentence",
        "text"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The function or process of reading pairs of entities (e', e) directly from an adjacency matrix representation of a knowledge graph, specifically the Pt predicate.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "we can read the pairs (e', e) directly from the matrix A(Pt).",
          "local_types": [
            "sentence",
            "text"
          ],
          "iri": "Entity-we_can_read_the_pair__e___e__directly_from_the_matrix_a__pt__.-Mention-1"
        }
      ],
      "relevance": 0.4697265625
    },
    "Entity-pruning_method": {
      "node_id": "pruning_method",
      "disambiguation_index": 0,
      "label": "pruning methods",
      "aliases": [
        "pruning",
        "pruning methods"
      ],
      "types": [
        "algorithm",
        "optimization method",
        "method",
        "technique",
        "optimization technique",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Techniques used to reduce or eliminate parts of a system, model, or data set in order to improve performance, efficiency, or accuracy.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-1-Sentence-2",
          "local_name": "pruning methods",
          "local_types": [
            "algorithm",
            "technique"
          ],
          "iri": "Entity-pruning_method-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-5-Sentence-2",
          "local_name": "pruning methods",
          "local_types": [
            "approach",
            "optimization method",
            "technique"
          ],
          "iri": "Entity-pruning_method-Mention-2"
        },
        {
          "reference": "Section-16-Paragraph-5-Sentence-3",
          "local_name": "pruning",
          "local_types": [
            "algorithm",
            "method",
            "optimization technique"
          ],
          "iri": "Entity-pruning_method-Mention-3"
        }
      ],
      "relevance": 0.4697265625
    },
    "Entity-aside_from_the_cardinality": {
      "node_id": "aside_from_the_cardinality",
      "disambiguation_index": 0,
      "label": "Aside from the cardinality",
      "aliases": [
        "Aside from the cardinality"
      ],
      "types": [
        "phrase"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept or entity referred to by 'Aside from the cardinality' is the process of interpreting and representing SHACL trees as sets of SHACL shapes, excluding the consideration of minimum cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-2",
          "local_name": "Aside from the cardinality",
          "local_types": [
            "phrase"
          ],
          "iri": "Entity-aside_from_the_cardinality-Mention-1"
        }
      ],
      "relevance": 0.4697265625
    },
    "Entity-n_x_n_adjacency_matrix": {
      "node_id": "n_x_n_adjacency_matrix",
      "disambiguation_index": 0,
      "label": "n x n adjacency matrices",
      "aliases": [
        "n x n adjacency matrices"
      ],
      "types": [
        "data structure",
        "matrix representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A matrix used to describe relationships between elements in a graph or network, where each element is represented by an entry in the matrix.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "n x n adjacency matrices",
          "local_types": [
            "data structure",
            "matrix representation"
          ],
          "iri": "Entity-n_x_n_adjacency_matrix-Mention-1"
        }
      ],
      "relevance": 0.469482421875
    },
    "Entity-argument": {
      "node_id": "argument",
      "disambiguation_index": 0,
      "label": "argument",
      "aliases": [
        "argument",
        "arguments"
      ],
      "types": [
        "parameter",
        "parameters",
        "data structure",
        "input",
        "computer science concept",
        "input values"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A value or set of values provided to influence the behavior, output, or computation of a function, algorithm, or system.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-7",
          "local_name": "argument",
          "local_types": [
            "input",
            "parameter"
          ],
          "iri": "Entity-argument-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "arguments",
          "local_types": [
            "data structure",
            "parameters",
            "computer science concept",
            "input values"
          ],
          "iri": "Entity-argument-Mention-2"
        }
      ],
      "relevance": 0.46923828125
    },
    "Entity-embedding": {
      "node_id": "embedding",
      "disambiguation_index": 0,
      "label": "embedding",
      "aliases": [
        "embedding representation",
        "embedding"
      ],
      "types": [
        "machine learning",
        "vector representation",
        "representation",
        "model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical vector or matrix that represents the semantic meaning of a concept, object, or relationship.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-2",
          "local_name": "embedding",
          "local_types": [
            "representation",
            "vector representation"
          ],
          "iri": "Entity-embedding-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "embedding representation",
          "local_types": [
            "machine learning",
            "representation",
            "model"
          ],
          "iri": "Entity-embedding-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "embedding representation",
          "local_types": [
            "machine learning",
            "representation",
            "model"
          ],
          "iri": "Entity-embedding-Mention-3"
        }
      ],
      "relevance": 0.46923828125
    },
    "Entity-parameter": {
      "node_id": "parameter",
      "disambiguation_index": 0,
      "label": "Parameters",
      "aliases": [
        "Parameters"
      ],
      "types": [
        "parameter",
        "parameter set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of rules or constraints that define the boundaries or limits within which a system or process operates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-3",
          "local_name": "Parameters",
          "local_types": [
            "parameter",
            "parameter set"
          ],
          "iri": "Entity-parameter-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-3",
          "local_name": "Parameters",
          "local_types": [
            "parameter set"
          ],
          "iri": "Entity-parameter-Mention-2"
        }
      ],
      "relevance": 0.468505859375
    },
    "Entity-shape_quality_measure": {
      "node_id": "shape_quality_measure",
      "disambiguation_index": 0,
      "label": "shape quality measures",
      "aliases": [
        "shape quality measures"
      ],
      "types": [
        "metric",
        "evaluation criterion",
        "evaluation metric",
        "quality metric",
        "measure",
        "performance indicator"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of metrics used to evaluate and quantify the characteristics or attributes of shapes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "shape quality measures",
          "local_types": [
            "metric",
            "evaluation criterion",
            "evaluation metric",
            "quality metric",
            "measure",
            "performance indicator"
          ],
          "iri": "Entity-shape_quality_measure-Mention-1"
        }
      ],
      "relevance": 0.468505859375
    },
    "Entity-rdf_triple": {
      "node_id": "rdf_triple",
      "disambiguation_index": 0,
      "label": "RDF triple",
      "aliases": [
        "RDF triple"
      ],
      "types": [
        "data structure",
        "knowledge representation",
        "technical term",
        "format"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of three elements consisting of subject, predicate, and object that represent a statement or fact in Resource Description Framework (RDF) knowledge representation.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "RDF triple",
          "local_types": [
            "data structure",
            "knowledge representation",
            "technical term",
            "format"
          ],
          "iri": "Entity-rdf_triple-Mention-1"
        }
      ],
      "relevance": 0.46826171875
    },
    "Entity-every_entity-instantiation_of_a_cp_rule_is_also_an_entity-instantiation_of_the_related_op_rule__but_not_vice_versa": {
      "node_id": "every_entity-instantiation_of_a_cp_rule_is_also_an_entity-instantiation_of_the_related_op_rule__but_not_vice_versa",
      "disambiguation_index": 0,
      "label": "Every entity-instantiation of a CP rule is also an entity-instantiation of the related OP rule, but not vice versa",
      "aliases": [
        "Every entity-instantiation of a CP rule is also an entity-instantiation of the related OP rule, but not vice versa"
      ],
      "types": [
        "CP rule",
        "OP rule",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A relationship between two types of rules in a linguistic framework.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-6",
          "local_name": "Every entity-instantiation of a CP rule is also an entity-instantiation of the related OP rule, but not vice versa",
          "local_types": [
            "CP rule",
            "OP rule",
            "concept"
          ],
          "iri": "Entity-every_entity-instantiation_of_a_cp_rule_is_also_an_entity-instantiation_of_the_related_op_rule__but_not_vice_versa-Mention-1"
        }
      ],
      "relevance": 0.4677734375
    },
    "Entity-max": {
      "node_id": "max",
      "disambiguation_index": 0,
      "label": "max",
      "aliases": [
        "max"
      ],
      "types": [
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The maximum allowed number of atoms (entities or predicates) in an IOP rule.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-3",
          "local_name": "max",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-max-Mention-1"
        }
      ],
      "relevance": 0.4677734375
    },
    "Entity-it_head_(1)": {
      "node_id": "it_head_(1)",
      "disambiguation_index": 1,
      "label": "its head",
      "aliases": [
        "its head"
      ],
      "types": [
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The sequence of paths or branches in a tree shape, consisting of one or more predicate paths connected by the '^' operator.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "its head",
          "local_types": [
            "head"
          ],
          "iri": "Entity-it_head_(1)-Mention-1"
        }
      ],
      "relevance": 0.467529296875
    },
    "Entity-target_predicate": {
      "node_id": "target_predicate",
      "disambiguation_index": 0,
      "label": "target predicate",
      "aliases": [
        "target predicate",
        "target predicates"
      ],
      "types": [
        "condition",
        "collection",
        "goal",
        "variables",
        "data set",
        "computer science term",
        "predicate logic",
        "rule",
        "function",
        "logical statement",
        "concepts",
        "predicate",
        "constraint",
        "relation",
        "concept",
        "predicate logic concept",
        "logical expression",
        "logic concept",
        "logical predicate",
        "logical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical statement or concept that defines a constraint on data",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "target predicate",
          "local_types": [
            "predicate logic",
            "logical concept",
            "predicate"
          ],
          "iri": "Entity-target_predicate-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "target predicate",
          "local_types": [
            "predicate logic",
            "logical expression"
          ],
          "iri": "Entity-target_predicate-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-7",
          "local_name": "target predicate",
          "local_types": [
            "function",
            "rule"
          ],
          "iri": "Entity-target_predicate-Mention-3"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-5",
          "local_name": "target predicate",
          "local_types": [
            "predicate",
            "goal"
          ],
          "iri": "Entity-target_predicate-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "target predicate",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-target_predicate-Mention-5"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-5",
          "local_name": "target predicate",
          "local_types": [
            "function",
            "predicate logic"
          ],
          "iri": "Entity-target_predicate-Mention-6"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-2",
          "local_name": "target predicates",
          "local_types": [
            "predicate logic",
            "logical expression"
          ],
          "iri": "Entity-target_predicate-Mention-7"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-3",
          "local_name": "target predicates",
          "local_types": [
            "data set",
            "collection"
          ],
          "iri": "Entity-target_predicate-Mention-8"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-7",
          "local_name": "target predicates",
          "local_types": [
            "concept",
            "predicate"
          ],
          "iri": "Entity-target_predicate-Mention-9"
        },
        {
          "reference": "Section-15-Paragraph-2-Sentence-1",
          "local_name": "target predicates",
          "local_types": [
            "predicate logic",
            "logical statement",
            "logical predicate",
            "variables",
            "concepts",
            "predicate"
          ],
          "iri": "Entity-target_predicate-Mention-10"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "target predicates",
          "local_types": [
            "predicate logic",
            "logic concept"
          ],
          "iri": "Entity-target_predicate-Mention-11"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-4",
          "local_name": "target predicate",
          "local_types": [
            "predicate",
            "relation"
          ],
          "iri": "Entity-target_predicate-Mention-12"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-3",
          "local_name": "target predicates",
          "local_types": [
            "computer science term",
            "concept",
            "predicate logic concept",
            "logical expression",
            "predicate logic",
            "predicate"
          ],
          "iri": "Entity-target_predicate-Mention-13"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-2",
          "local_name": "target predicates",
          "local_types": [
            "constraint",
            "predicate",
            "condition"
          ],
          "iri": "Entity-target_predicate-Mention-14"
        },
        {
          "reference": "Section-18-Paragraph-3-Sentence-1",
          "local_name": "target predicate",
          "local_types": [
            "concept",
            "predicate"
          ],
          "iri": "Entity-target_predicate-Mention-15"
        }
      ],
      "relevance": 0.46728515625
    },
    "Entity-and_iopsc__r2___12": {
      "node_id": "and_iopsc__r2___12",
      "disambiguation_index": 0,
      "label": "and IOPSC(r2) = 1/2",
      "aliases": [
        "and IOPSC(r2) = 1/2"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality measure for a rule's support, calculated as the number of entities that satisfy its body divided by the total number of entities.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-4",
          "local_name": "and IOPSC(r2) = 1/2",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-and_iopsc__r2___12-Mention-1"
        }
      ],
      "relevance": 0.46728515625
    },
    "Entity-sampling": {
      "node_id": "sampling",
      "disambiguation_index": 0,
      "label": "Sampling",
      "aliases": [
        "Sampling"
      ],
      "types": [
        "algorithm",
        "method",
        "technique",
        "algorithm component",
        "methodology"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A statistical technique used for selecting a subset of data or instances from a larger population, often employed in machine learning and data analysis.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "Sampling",
          "local_types": [
            "algorithm",
            "methodology",
            "method",
            "technique"
          ],
          "iri": "Entity-sampling-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-5",
          "local_name": "Sampling",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-sampling-Mention-2"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "Sampling",
          "local_types": [
            "method",
            "algorithm component"
          ],
          "iri": "Entity-sampling-Mention-3"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "Sampling",
          "local_types": [
            "methodology",
            "method",
            "technique"
          ],
          "iri": "Entity-sampling-Mention-4"
        }
      ],
      "relevance": 0.466796875
    },
    "Entity-1_approx_p1_t_._pt_._p1_._p2_._p2_2": {
      "node_id": "1_approx_p1_t_._pt_._p1_._p2_._p2_2",
      "disambiguation_index": 0,
      "label": "1 approx P1_t . Pt . P1 . P2 . P2_2",
      "aliases": [
        "1 approx P1_t . Pt . P1 . P2 . P2_2"
      ],
      "types": [
        "mathematical_expression",
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A mathematical expression or equation that represents the similarity between a composite predicate and its components, used to evaluate the plausibility of an entity-free IOP rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-4",
          "local_name": "1 approx P1_t . Pt . P1 . P2 . P2_2",
          "local_types": [
            "mathematical_expression",
            "equation"
          ],
          "iri": "Entity-1_approx_p1_t_._pt_._p1_._p2_._p2_2-Mention-1"
        }
      ],
      "relevance": 0.466796875
    },
    "Entity-the_performance_of_the_shaclearner__-sh_": {
      "node_id": "the_performance_of_the_shaclearner__-sh_",
      "disambiguation_index": 0,
      "label": "the performance of the SHACLEARNER (-S+H)",
      "aliases": [
        "the performance of the SHACLEARNER (-S+H)"
      ],
      "types": [
        "algorithm",
        "system",
        "performance"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The performance of SHACLEARNER (-S+H), a system without sampling but with heuristic pruning, in comparison to the ideal rule learner (SHACLEARNER -S-H)",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-3",
          "local_name": "the performance of the SHACLEARNER (-S+H)",
          "local_types": [
            "algorithm",
            "system",
            "performance"
          ],
          "iri": "Entity-the_performance_of_the_shaclearner__-sh_-Mention-1"
        }
      ],
      "relevance": 0.466796875
    },
    "Entity-google_search": {
      "node_id": "google_search",
      "disambiguation_index": 0,
      "label": "Google search",
      "aliases": [
        "Google search"
      ],
      "types": [
        "service",
        "online service",
        "search engine",
        "product"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A popular online service that provides a platform for searching and retrieving information from the internet.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Google search",
          "local_types": [
            "service",
            "online service",
            "search engine",
            "product"
          ],
          "iri": "Entity-google_search-Mention-1"
        }
      ],
      "relevance": 0.466552734375
    },
    "Entity-mapreduce_implementation": {
      "node_id": "mapreduce_implementation",
      "disambiguation_index": 0,
      "label": "MapReduce implementation",
      "aliases": [
        "MapReduce implementation"
      ],
      "types": [
        "implementation",
        "technology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software framework or system that uses distributed processing and parallel computing techniques to process large data sets.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-2",
          "local_name": "MapReduce implementation",
          "local_types": [
            "implementation",
            "technology"
          ],
          "iri": "Entity-mapreduce_implementation-Mention-1"
        }
      ],
      "relevance": 0.466552734375
    },
    "Entity-hc_measure_the_explanatory_power_of_the_rule": {
      "node_id": "hc_measure_the_explanatory_power_of_the_rule",
      "disambiguation_index": 0,
      "label": "HC measures the explanatory power of the rule",
      "aliases": [
        "HC measures the explanatory power of the rule"
      ],
      "types": [
        "measure",
        "explanatory power"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statistical measure that evaluates the ability to explain or predict a phenomenon based on a given rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-4",
          "local_name": "HC measures the explanatory power of the rule",
          "local_types": [
            "measure",
            "explanatory power"
          ],
          "iri": "Entity-hc_measure_the_explanatory_power_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.46630859375
    },
    "Entity-__e__e__such_that_body_r__e__e____": {
      "node_id": "__e__e__such_that_body_r__e__e____",
      "disambiguation_index": 0,
      "label": "|{e : \u2203e' such that body_r(e, e')}|",
      "aliases": [
        "|{e : \u2203e' such that body_r(e, e')}|"
      ],
      "types": [
        "set comprehension",
        "mathematical expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The support of an open path rule, measuring its confidence and generality.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-3",
          "local_name": "|{e : \u2203e' such that body_r(e, e')}|",
          "local_types": [
            "set comprehension",
            "mathematical expression"
          ],
          "iri": "Entity-__e__e__such_that_body_r__e__e____-Mention-1"
        }
      ],
      "relevance": 0.46630859375
    },
    "Entity-rdf": {
      "node_id": "rdf",
      "disambiguation_index": 0,
      "label": "RDF",
      "aliases": [
        "RDF"
      ],
      "types": [
        "ontology",
        "standard"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard for representing and serializing data on the web, particularly in the context of linked data.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "RDF",
          "local_types": [
            "ontology",
            "standard"
          ],
          "iri": "Entity-rdf-Mention-1"
        }
      ],
      "relevance": 0.466064453125
    },
    "Entity-third_rule": {
      "node_id": "third_rule",
      "disambiguation_index": 0,
      "label": "third rule",
      "aliases": [
        "third rule"
      ],
      "types": [
        "rule",
        "constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The third IOP rule mined from DBpedia in the experiments, which requires a song (x) to have at least two producers and has lower confidence than the second rule due to its more constraining nature.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-5",
          "local_name": "third rule",
          "local_types": [
            "rule",
            "constraint"
          ],
          "iri": "Entity-third_rule-Mention-1"
        }
      ],
      "relevance": 0.466064453125
    },
    "Entity-predicate_and_entity_(2)": {
      "node_id": "predicate_and_entity_(2)",
      "disambiguation_index": 2,
      "label": "predicates and entities",
      "aliases": [
        "predicates and entities"
      ],
      "types": [
        "predicate",
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A pair of concepts consisting of predicates (relational terms) and entities (individuals or objects), which are represented as vectors in a high-dimensional space using RESCAL, enabling the computation of plausibility scores for facts.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-2",
          "local_name": "predicates and entities",
          "local_types": [
            "predicate",
            "entity"
          ],
          "iri": "Entity-predicate_and_entity_(2)-Mention-1"
        }
      ],
      "relevance": 0.466064453125
    },
    "Entity-the_second_rule": {
      "node_id": "the_second_rule",
      "disambiguation_index": 0,
      "label": "The second rule",
      "aliases": [
        "The second rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A SHACL shape that requires a song (x) to have at least one producer.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-4",
          "local_name": "The second rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_second_rule-Mention-1"
        }
      ],
      "relevance": 0.466064453125
    },
    "Entity-brute-force_search": {
      "node_id": "brute-force_search",
      "disambiguation_index": 0,
      "label": "brute-force search",
      "aliases": [
        "brute-force search"
      ],
      "types": [
        "search algorithm",
        "computational method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A simple and exhaustive computational method that systematically checks all possible solutions or combinations to find a solution, often relying on trial-and-error rather than exploiting structural properties.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-2-Sentence-5",
          "local_name": "brute-force search",
          "local_types": [
            "search algorithm",
            "computational method"
          ],
          "iri": "Entity-brute-force_search-Mention-1"
        }
      ],
      "relevance": 0.4658203125
    },
    "Entity-of_cardinality_expression__only_min_cardinality_is_handled": {
      "node_id": "of_cardinality_expression__only_min_cardinality_is_handled",
      "disambiguation_index": 0,
      "label": "of cardinality expressions, only min cardinality is handled",
      "aliases": [
        "of cardinality expressions, only min cardinality is handled"
      ],
      "types": [
        "feature",
        "limitation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The limitation of SHACLearner regarding cardinality expressions, which means that it can only handle minimum cardinality constraints.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-2",
          "local_name": "of cardinality expressions, only min cardinality is handled",
          "local_types": [
            "feature",
            "limitation"
          ],
          "iri": "Entity-of_cardinality_expression__only_min_cardinality_is_handled-Mention-1"
        }
      ],
      "relevance": 0.465576171875
    },
    "Entity-one_shared_variable__z0": {
      "node_id": "one_shared_variable__z0",
      "disambiguation_index": 0,
      "label": "one shared variable, z0",
      "aliases": [
        "one shared variable, z0"
      ],
      "types": [
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A common variable used to unify and connect multiple branches of paths in tree shapes, representing the root node of each shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-6",
          "local_name": "one shared variable, z0",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-one_shared_variable__z0-Mention-1"
        }
      ],
      "relevance": 0.46484375
    },
    "Entity-extract_a_more_intuitive_concise_sub-tree_out_of_a_deeper__more_complex_tree_when_desired_for_human_interpretability": {
      "node_id": "extract_a_more_intuitive_concise_sub-tree_out_of_a_deeper__more_complex_tree_when_desired_for_human_interpretability",
      "disambiguation_index": 0,
      "label": "extract a more intuitive concise sub-tree out of a deeper, more complex tree when desired for human interpretability",
      "aliases": [
        "extract a more intuitive concise sub-tree out of a deeper, more complex tree when desired for human interpretability"
      ],
      "types": [
        "process",
        "interpretation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of extracting a more intuitive and concise subtree from a deeper and more complex tree to facilitate human interpretation.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-1",
          "local_name": "extract a more intuitive concise sub-tree out of a deeper, more complex tree when desired for human interpretability",
          "local_types": [
            "process",
            "interpretation"
          ],
          "iri": "Entity-extract_a_more_intuitive_concise_sub-tree_out_of_a_deeper__more_complex_tree_when_desired_for_human_interpretability-Mention-1"
        }
      ],
      "relevance": 0.46484375
    },
    "Entity-multidimensional_relational_database_scheme": {
      "node_id": "multidimensional_relational_database_scheme",
      "disambiguation_index": 0,
      "label": "multidimensional relational database schemes",
      "aliases": [
        "multidimensional relational database schemes"
      ],
      "types": [
        "database",
        "database schema",
        "database scheme",
        "technology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of database schema that organizes and relates data across multiple dimensions or perspectives.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-5",
          "local_name": "multidimensional relational database schemes",
          "local_types": [
            "database",
            "database schema",
            "database scheme",
            "technology"
          ],
          "iri": "Entity-multidimensional_relational_database_scheme-Mention-1"
        }
      ],
      "relevance": 0.464599609375
    },
    "Entity-entity_that_satisfy_the_first_argument_of_the_head": {
      "node_id": "entity_that_satisfy_the_first_argument_of_the_head",
      "disambiguation_index": 0,
      "label": "entities that satisfy the first argument of the head",
      "aliases": [
        "entities that satisfy the first argument of the head"
      ],
      "types": [
        "argument",
        "head",
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that are connected by a path specified in an IOP rule, satisfying both the body and the head of the rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "entities that satisfy the first argument of the head",
          "local_types": [
            "argument",
            "head",
            "entity"
          ],
          "iri": "Entity-entity_that_satisfy_the_first_argument_of_the_head-Mention-1"
        }
      ],
      "relevance": 0.464599609375
    },
    "Entity-candidate_shape": {
      "node_id": "candidate_shape",
      "disambiguation_index": 0,
      "label": "candidate shape",
      "aliases": [
        "candidate shape"
      ],
      "types": [
        "concept",
        "shape",
        "proposed answer",
        "entity",
        "potential solution"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A proposed solution concept that represents a potential shape to be considered",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-1",
          "local_name": "candidate shape",
          "local_types": [
            "concept",
            "shape",
            "proposed answer",
            "entity",
            "potential solution"
          ],
          "iri": "Entity-candidate_shape-Mention-1"
        }
      ],
      "relevance": 0.46435546875
    },
    "Entity-the_semantics_of_the_shacl_language": {
      "node_id": "the_semantics_of_the_shacl_language",
      "disambiguation_index": 0,
      "label": "the semantics of the SHACL language",
      "aliases": [
        "the semantics of the SHACL language"
      ],
      "types": [
        "language",
        "SHACL"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The rules and principles governing the meaning and interpretation of statements in the SHACL language.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-1",
          "local_name": "the semantics of the SHACL language",
          "local_types": [
            "language",
            "SHACL"
          ],
          "iri": "Entity-the_semantics_of_the_shacl_language-Mention-1"
        }
      ],
      "relevance": 0.464111328125
    },
    "Entity-formalism": {
      "node_id": "formalism",
      "disambiguation_index": 0,
      "label": "formalisms",
      "aliases": [
        "formalisms"
      ],
      "types": [
        "notation",
        "system",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of standardized notations or systems used to express patterns, concepts, or relationships in a specific domain.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "formalisms",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-formalism-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "formalisms",
          "local_types": [
            "notation",
            "system"
          ],
          "iri": "Entity-formalism-Mention-2"
        }
      ],
      "relevance": 0.4638671875
    },
    "Entity-the_computed_embedding_representation_of_predicate_and_entity": {
      "node_id": "the_computed_embedding_representation_of_predicate_and_entity",
      "disambiguation_index": 0,
      "label": "the computed embedding representations of predicates and entities",
      "aliases": [
        "the computed embedding representations of predicates and entities"
      ],
      "types": [
        "data structure",
        "representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A data structure representing the numerical embeddings of concepts, including both predicate and entity types.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-5",
          "local_name": "the computed embedding representations of predicates and entities",
          "local_types": [
            "data structure",
            "representation"
          ],
          "iri": "Entity-the_computed_embedding_representation_of_predicate_and_entity-Mention-1"
        }
      ],
      "relevance": 0.4638671875
    },
    "Entity-iopsupp__r1_": {
      "node_id": "iopsupp__r1_",
      "disambiguation_index": 0,
      "label": "IOPsupp(r1)",
      "aliases": [
        "IOPsupp(r1)"
      ],
      "types": [
        "mathematical operation",
        "function call",
        "mathematical concept",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The support value of IOP rule r1, which represents the number of entities that satisfy its body.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "IOPsupp(r1)",
          "local_types": [
            "mathematical operation",
            "function call",
            "mathematical concept",
            "function"
          ],
          "iri": "Entity-iopsupp__r1_-Mention-1"
        }
      ],
      "relevance": 0.463623046875
    },
    "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq_": {
      "node_id": "p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq_",
      "disambiguation_index": 0,
      "label": "P1(e, e1), P2(e1, e2), ..., Pt(e( q-1)', eq)",
      "aliases": [
        "P1(e, e1), P2(e1, e2), ..., Pt(e( q-1)', eq)"
      ],
      "types": [
        "facts",
        "predicates"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of pairs of entities that satisfies a tree shape's head predicate",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "P1(e, e1), P2(e1, e2), ..., Pt(e( q-1)', eq)",
          "local_types": [
            "facts",
            "predicates"
          ],
          "iri": "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq_-Mention-1"
        }
      ],
      "relevance": 0.463623046875
    },
    "Entity-space_of_possible_rule": {
      "node_id": "space_of_possible_rule",
      "disambiguation_index": 0,
      "label": "space of possible rules",
      "aliases": [
        "space of possible rules"
      ],
      "types": [
        "concept",
        "theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A theoretical construct representing all potential or feasible rules that can be formulated within a given system or framework.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-7-Sentence-1",
          "local_name": "space of possible rules",
          "local_types": [
            "concept",
            "theory"
          ],
          "iri": "Entity-space_of_possible_rule-Mention-1"
        }
      ],
      "relevance": 0.46337890625
    },
    "Entity-open_path_support": {
      "node_id": "open_path_support",
      "disambiguation_index": 0,
      "label": "open path support",
      "aliases": [
        "open path support",
        "The open path support"
      ],
      "types": [
        "metric",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure that calculates the number of entity pairs for which there exist entities satisfying both the body and head of an Open Path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "open path support",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-open_path_support-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "The open path support",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-open_path_support-Mention-2"
        }
      ],
      "relevance": 0.463134765625
    },
    "Entity-each_argument_of_each_target_predicate": {
      "node_id": "each_argument_of_each_target_predicate",
      "disambiguation_index": 0,
      "label": "each argument of each target predicate",
      "aliases": [
        "each argument of each target predicate"
      ],
      "types": [
        "argument",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of entities that are connected to each other through paths and serve as arguments for specific predicates, which together form a tree-like structure.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-7",
          "local_name": "each argument of each target predicate",
          "local_types": [
            "argument",
            "predicate"
          ],
          "iri": "Entity-each_argument_of_each_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.463134765625
    },
    "Entity-suppr": {
      "node_id": "suppr",
      "disambiguation_index": 0,
      "label": "suppr",
      "aliases": [
        "suppr"
      ],
      "types": [
        "mathematical expression",
        "value",
        "notation",
        "symbol",
        "variable",
        "mathematical object",
        "operator",
        "number"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The support of a closed-path rule, which counts the number of entity pairs that satisfy both the body and head of the rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-6",
          "local_name": "suppr",
          "local_types": [
            "notation",
            "mathematical expression"
          ],
          "iri": "Entity-suppr-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "suppr",
          "local_types": [
            "mathematical object",
            "variable",
            "number",
            "value"
          ],
          "iri": "Entity-suppr-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "suppr",
          "local_types": [
            "symbol",
            "operator",
            "variable"
          ],
          "iri": "Entity-suppr-Mention-3"
        }
      ],
      "relevance": 0.462646484375
    },
    "Entity-r__e__e___body_r": {
      "node_id": "r__e__e___body_r",
      "disambiguation_index": 0,
      "label": "r, e, e', body_r",
      "aliases": [
        "r, e, e', body_r"
      ],
      "types": [
        "variable declaration",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A closed-path rule with a head predicate Pt and a body consisting of unary or binary predicates P1 to Pn that form a single unbroken loop of links between variables.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "r, e, e', body_r",
          "local_types": [
            "variable declaration",
            "mathematical expression"
          ],
          "iri": "Entity-r__e__e___body_r-Mention-1"
        }
      ],
      "relevance": 0.462646484375
    },
    "Entity-open_path": {
      "node_id": "open_path",
      "disambiguation_index": 0,
      "label": "open path",
      "aliases": [
        "open path"
      ],
      "types": [
        "concept",
        "path"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual or physical route with no restrictions, allowing for unrestricted movement or progression.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "open path",
          "local_types": [
            "concept",
            "path"
          ],
          "iri": "Entity-open_path-Mention-1"
        }
      ],
      "relevance": 0.462646484375
    },
    "Entity-validation_framework": {
      "node_id": "validation_framework",
      "disambiguation_index": 0,
      "label": "validation framework",
      "aliases": [
        "validation framework"
      ],
      "types": [
        "methodology",
        "framework"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic approach or structure used to verify or test something, typically involving a set of procedures or guidelines.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "validation framework",
          "local_types": [
            "methodology",
            "framework"
          ],
          "iri": "Entity-validation_framework-Mention-1"
        }
      ],
      "relevance": 0.46240234375
    },
    "Entity-iopsupp__r2_": {
      "node_id": "iopsupp__r2_",
      "disambiguation_index": 0,
      "label": "IOPsupp(r2)",
      "aliases": [
        "IOPsupp(r2)"
      ],
      "types": [
        "mathematical concept",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The quality measure for a rule r2 that evaluates the number of entities supporting it.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-4",
          "local_name": "IOPsupp(r2)",
          "local_types": [
            "mathematical concept",
            "function"
          ],
          "iri": "Entity-iopsupp__r2_-Mention-1"
        }
      ],
      "relevance": 0.462158203125
    },
    "Entity-let_r_be_a_cp_rule_of_the_form__1_": {
      "node_id": "let_r_be_a_cp_rule_of_the_form__1_",
      "disambiguation_index": 0,
      "label": "Let r be a CP rule of the form (1)",
      "aliases": [
        "Let r be a CP rule of the form (1)"
      ],
      "types": [
        "mathematics",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A closed path (CP) rule of the form Pt(x, y) <- P1(x, z1) ^ P2(z1, z2) ^ ... ^ Pn(zn-1, y)",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "Let r be a CP rule of the form (1)",
          "local_types": [
            "mathematics",
            "rule"
          ],
          "iri": "Entity-let_r_be_a_cp_rule_of_the_form__1_-Mention-1"
        }
      ],
      "relevance": 0.4619140625
    },
    "Entity-_e___e__satisfies_the_head_of_r": {
      "node_id": "_e___e__satisfies_the_head_of_r",
      "disambiguation_index": 0,
      "label": "(e', e) satisfies the head of r",
      "aliases": [
        "(e', e) satisfies the head of r"
      ],
      "types": [
        "entities",
        "head",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of entities (e, e') where Pt(PT(e', e)) is a fact in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-4",
          "local_name": "(e', e) satisfies the head of r",
          "local_types": [
            "entities",
            "head",
            "rule"
          ],
          "iri": "Entity-_e___e__satisfies_the_head_of_r-Mention-1"
        }
      ],
      "relevance": 0.461669921875
    },
    "Entity-pattern": {
      "node_id": "pattern",
      "disambiguation_index": 0,
      "label": "pattern",
      "aliases": [
        "pattern"
      ],
      "types": [
        "concept",
        "structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of logical relationships or structures that govern the existence and quantification of variables.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "pattern",
          "local_types": [
            "concept",
            "structure"
          ],
          "iri": "Entity-pattern-Mention-1"
        }
      ],
      "relevance": 0.461181640625
    },
    "Entity-v1__a__p1___a__p2___...__a__pm__": {
      "node_id": "v1__a__p1___a__p2___...__a__pm__",
      "disambiguation_index": 0,
      "label": "V^1(A(P1)*A(P2)*...*A(Pm))",
      "aliases": [
        "V^1(A(P1)*A(P2)*...*A(Pm))"
      ],
      "types": [
        "mathematical concept",
        "matrix",
        "argument",
        "vector"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The vector representing the count of distinct entities satisfying the head of an IOP rule, calculated by summing each row of the matrix product A(P1)*A(P2)*...*A(Pm).",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "V^1(A(P1)*A(P2)*...*A(Pm))",
          "local_types": [
            "vector",
            "mathematical concept"
          ],
          "iri": "Entity-v1__a__p1___a__p2___...__a__pm__-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "V^1(A(P1)*A(P2)*...*A(Pm))",
          "local_types": [
            "vector",
            "matrix",
            "argument"
          ],
          "iri": "Entity-v1__a__p1___a__p2___...__a__pm__-Mention-2"
        }
      ],
      "relevance": 0.461181640625
    },
    "Entity-head_branch": {
      "node_id": "head_branch",
      "disambiguation_index": 0,
      "label": "head branches",
      "aliases": [
        "head branches"
      ],
      "types": [
        "part",
        "component"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The sequence of paths or branches leading from the target predicate in a tree shape, representing the head of the shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-6",
          "local_name": "head branches",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-head_branch-Mention-1"
        }
      ],
      "relevance": 0.4609375
    },
    "Entity-this_result": {
      "node_id": "this_result",
      "disambiguation_index": 0,
      "label": "This result",
      "aliases": [
        "This result"
      ],
      "types": [
        "result"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The lemma stating that IOPSC is non-increasing with length, which shows that if we discard an IOP rule due to its low IOPSC value, we do not need to check versions of the rule extended with additional head atoms.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "This result",
          "local_types": [
            "result"
          ],
          "iri": "Entity-this_result-Mention-1"
        }
      ],
      "relevance": 0.4609375
    },
    "Entity-implication_arrow": {
      "node_id": "implication_arrow",
      "disambiguation_index": 0,
      "label": "implication arrow",
      "aliases": [
        "implication arrow"
      ],
      "types": [
        "symbol",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A graphical symbol used to represent logical implications or conditional relationships between statements.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-4",
          "local_name": "implication arrow",
          "local_types": [
            "symbol",
            "notation"
          ],
          "iri": "Entity-implication_arrow-Mention-1"
        }
      ],
      "relevance": 0.46044921875
    },
    "Entity-description_logic_ontology": {
      "node_id": "description_logic_ontology",
      "disambiguation_index": 0,
      "label": "Description Logic ontologies",
      "aliases": [
        "Description Logic ontologies"
      ],
      "types": [
        "ontology",
        "field of study"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formal system for representing and reasoning about knowledge using logical operators",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-3",
          "local_name": "Description Logic ontologies",
          "local_types": [
            "ontology",
            "field of study"
          ],
          "iri": "Entity-description_logic_ontology-Mention-1"
        }
      ],
      "relevance": 0.46044921875
    },
    "Entity-syntax": {
      "node_id": "syntax",
      "disambiguation_index": 0,
      "label": "syntax",
      "aliases": [
        "syntax"
      ],
      "types": [
        "linguistics",
        "computer science"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The rules and principles governing the structure of language or computer programming languages.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "syntax",
          "local_types": [
            "linguistics",
            "computer science"
          ],
          "iri": "Entity-syntax-Mention-1"
        }
      ],
      "relevance": 0.460205078125
    },
    "Entity-iopsc__r1_": {
      "node_id": "iopsc__r1_",
      "disambiguation_index": 0,
      "label": "IOPSC(r1)",
      "aliases": [
        "IOPSC(r1)"
      ],
      "types": [
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality measure for a rule r1, which represents the number of entities that satisfy both the body and head of the rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "IOPSC(r1)",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-iopsc__r1_-Mention-1"
        }
      ],
      "relevance": 0.460205078125
    },
    "Entity-tree": {
      "node_id": "tree",
      "disambiguation_index": 0,
      "label": "tree",
      "aliases": [
        "tree",
        "trees",
        "Tree"
      ],
      "types": [
        "natural feature",
        "biological organism",
        "hierarchical model",
        "botany",
        "algorithmic representation",
        "conceptual representation",
        "computer science concept",
        "computational concept",
        "structure",
        "biological concept",
        "thing",
        "computer science term",
        "natural phenomenon",
        "computing concept",
        "pattern",
        "tree",
        "mathematical object",
        "vegetation",
        "geometric object",
        "shape",
        "plant species",
        "biological entity",
        "plant",
        "natural entity",
        "tree data structure",
        "botanical structure",
        "concept",
        "data",
        "data structure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A perennial plant with a single stem or trunk and branches that grow from it.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-4",
          "local_name": "tree",
          "local_types": [
            "thing",
            "natural phenomenon",
            "natural entity"
          ],
          "iri": "Entity-tree-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-13",
          "local_name": "Tree",
          "local_types": [
            "tree",
            "biological organism",
            "concept"
          ],
          "iri": "Entity-tree-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "trees",
          "local_types": [
            "tree",
            "data structure",
            "computing concept",
            "computational concept"
          ],
          "iri": "Entity-tree-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "tree",
          "local_types": [
            "data structure",
            "hierarchical model",
            "geometric object",
            "shape"
          ],
          "iri": "Entity-tree-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "trees",
          "local_types": [
            "data structure",
            "computer science concept",
            "shape"
          ],
          "iri": "Entity-tree-Mention-5"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "trees",
          "local_types": [
            "pattern",
            "mathematical object",
            "data structure",
            "computer science concept",
            "structure"
          ],
          "iri": "Entity-tree-Mention-6"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-3",
          "local_name": "trees",
          "local_types": [
            "data structure",
            "computer science concept",
            "structure",
            "pattern"
          ],
          "iri": "Entity-tree-Mention-7"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "trees",
          "local_types": [
            "data structure",
            "computer science concept"
          ],
          "iri": "Entity-tree-Mention-8"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-7",
          "local_name": "tree",
          "local_types": [
            "data structure"
          ],
          "iri": "Entity-tree-Mention-9"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "tree",
          "local_types": [
            "botanical structure"
          ],
          "iri": "Entity-tree-Mention-10"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-7",
          "local_name": "tree",
          "local_types": [
            "biological entity",
            "plant species"
          ],
          "iri": "Entity-tree-Mention-11"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-3",
          "local_name": "tree",
          "local_types": [
            "data structure",
            "computing concept"
          ],
          "iri": "Entity-tree-Mention-12"
        },
        {
          "reference": "Section-12-Paragraph-7-Sentence-1",
          "local_name": "Tree",
          "local_types": [
            "concept",
            "shape"
          ],
          "iri": "Entity-tree-Mention-13"
        },
        {
          "reference": "Section-12-Paragraph-9-Sentence-1",
          "local_name": "Tree",
          "local_types": [
            "concept",
            "data structure"
          ],
          "iri": "Entity-tree-Mention-14"
        },
        {
          "reference": "Section-12-Paragraph-9-Sentence-2",
          "local_name": "Tree",
          "local_types": [
            "data structure"
          ],
          "iri": "Entity-tree-Mention-15"
        },
        {
          "reference": "Section-12-Paragraph-9-Sentence-3",
          "local_name": "tree",
          "local_types": [
            "data structure"
          ],
          "iri": "Entity-tree-Mention-16"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "trees",
          "local_types": [
            "biological concept",
            "botany",
            "natural phenomenon"
          ],
          "iri": "Entity-tree-Mention-17"
        },
        {
          "reference": "Section-14-Paragraph-2-Sentence-6",
          "local_name": "trees",
          "local_types": [
            "data structure",
            "computer science term"
          ],
          "iri": "Entity-tree-Mention-18"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-1",
          "local_name": "trees",
          "local_types": [
            "data structure",
            "computer science concept"
          ],
          "iri": "Entity-tree-Mention-19"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-3",
          "local_name": "trees",
          "local_types": [
            "natural feature",
            "vegetation"
          ],
          "iri": "Entity-tree-Mention-20"
        },
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "trees",
          "local_types": [
            "data structure",
            "computer science concept",
            "tree data structure",
            "computational concept"
          ],
          "iri": "Entity-tree-Mention-21"
        },
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "trees",
          "local_types": [
            "data",
            "natural phenomenon",
            "plant species",
            "data structure",
            "computer science concept",
            "vegetation",
            "biological entity"
          ],
          "iri": "Entity-tree-Mention-22"
        },
        {
          "reference": "Section-17-Paragraph-4-Sentence-1",
          "local_name": "tree",
          "local_types": [
            "data structure",
            "computer science concept",
            "botanical structure",
            "plant"
          ],
          "iri": "Entity-tree-Mention-23"
        },
        {
          "reference": "Section-17-Paragraph-4-Sentence-2",
          "local_name": "tree",
          "local_types": [
            "data structure",
            "algorithmic representation"
          ],
          "iri": "Entity-tree-Mention-24"
        },
        {
          "reference": "Section-17-Paragraph-4-Sentence-3",
          "local_name": "tree",
          "local_types": [
            "conceptual representation"
          ],
          "iri": "Entity-tree-Mention-25"
        },
        {
          "reference": "Section-17-Paragraph-5-Sentence-1",
          "local_name": "trees",
          "local_types": [
            "data structure",
            "computer science concept"
          ],
          "iri": "Entity-tree-Mention-26"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-2",
          "local_name": "trees",
          "local_types": [
            "data structure",
            "computer science concept"
          ],
          "iri": "Entity-tree-Mention-27"
        }
      ],
      "relevance": 0.459716796875
    },
    "Entity-sampling_method": {
      "node_id": "sampling_method",
      "disambiguation_index": 0,
      "label": "sampling method",
      "aliases": [
        "sampling method"
      ],
      "types": [
        "algorithm",
        "methodology",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic approach to selecting and gathering data or information",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "sampling method",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-sampling_method-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-3",
          "local_name": "sampling method",
          "local_types": [
            "algorithm",
            "technique"
          ],
          "iri": "Entity-sampling_method-Mention-2"
        }
      ],
      "relevance": 0.459716796875
    },
    "Entity-to_compute": {
      "node_id": "to_compute",
      "disambiguation_index": 0,
      "label": "To compute",
      "aliases": [
        "To compute"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "To compute refers to aggregating and combining entity representations or predicate matrices from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "To compute",
          "local_types": [
            "method"
          ],
          "iri": "Entity-to_compute-Mention-1"
        }
      ],
      "relevance": 0.459716796875
    },
    "Entity-sh__mincount_within_the_property_declaration": {
      "node_id": "sh__mincount_within_the_property_declaration",
      "disambiguation_index": 0,
      "label": "sh:minCount within the property declaration",
      "aliases": [
        "sh:minCount within the property declaration"
      ],
      "types": [
        "property",
        "declaration"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum count for a specific SHACL shape property",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-4",
          "local_name": "sh:minCount within the property declaration",
          "local_types": [
            "property",
            "declaration"
          ],
          "iri": "Entity-sh__mincount_within_the_property_declaration-Mention-1"
        }
      ],
      "relevance": 0.459716796875
    },
    "Entity-an_example_of_a_shape_from_wikidata": {
      "node_id": "an_example_of_a_shape_from_wikidata",
      "disambiguation_index": 0,
      "label": "an example of a shape from Wikidata",
      "aliases": [
        "an example of a shape from Wikidata"
      ],
      "types": [
        "example",
        "Wikidata"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A geometric form represented as an instance on Wikidata.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-2",
          "local_name": "an example of a shape from Wikidata",
          "local_types": [
            "example",
            "Wikidata"
          ],
          "iri": "Entity-an_example_of_a_shape_from_wikidata-Mention-1"
        }
      ],
      "relevance": 0.45947265625
    },
    "Entity-car1_(1)": {
      "node_id": "car1_(1)",
      "disambiguation_index": 1,
      "label": "Car=1",
      "aliases": [
        "Car=1"
      ],
      "types": [
        "equation",
        "variable declaration"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The variable declaration 'Car=1' represents the cardinality of a rule with an inverse open path pattern.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "Car=1",
          "local_types": [
            "equation",
            "variable declaration"
          ],
          "iri": "Entity-car1_(1)-Mention-1"
        }
      ],
      "relevance": 0.458740234375
    },
    "Entity-greedy_search": {
      "node_id": "greedy_search",
      "disambiguation_index": 0,
      "label": "greedy search",
      "aliases": [
        "greedy search"
      ],
      "types": [
        "algorithmic technique",
        "search method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A heuristic algorithmic technique that makes locally optimal choices in an attempt to find a solution, often used as a search method.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "greedy search",
          "local_types": [
            "algorithmic technique",
            "search method"
          ],
          "iri": "Entity-greedy_search-Mention-1"
        }
      ],
      "relevance": 0.458251953125
    },
    "Entity-completion_strategy": {
      "node_id": "completion_strategy",
      "disambiguation_index": 0,
      "label": "completion strategy",
      "aliases": [
        "completion strategy"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or approach used to complete or fill out something, such as a data structure or a task.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-6",
          "local_name": "completion strategy",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-completion_strategy-Mention-1"
        }
      ],
      "relevance": 0.458251953125
    },
    "Entity-human__x__x__-__father__x__z2___human__z2__z2_": {
      "node_id": "human__x__x__-__father__x__z2___human__z2__z2_",
      "disambiguation_index": 0,
      "label": "human( x , x )  -> father( x , z2 ) ^ human( z2 , z2 )",
      "aliases": [
        "human(x, x) -> father(x, z2) ^ human(z2, z2)",
        "human( x , x )  -> father( x , z2 ) ^ human( z2 , z2 )"
      ],
      "types": [
        "IOP rule",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A rule that states a person (human) has at least one father.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "human( x , x )  -> father( x , z2 ) ^ human( z2 , z2 )",
          "local_types": [
            "IOP rule",
            "rule"
          ],
          "iri": "Entity-human__x__x__-__father__x__z2___human__z2__z2_-Mention-1"
        }
      ],
      "relevance": 0.458251953125
    },
    "Entity-class_and_type": {
      "node_id": "class_and_type",
      "disambiguation_index": 0,
      "label": "classes and types",
      "aliases": [
        "classes and types"
      ],
      "types": [
        "concept",
        "category"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of categories or concepts that can be used to classify or categorize entities, objects, or ideas.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-3",
          "local_name": "classes and types",
          "local_types": [
            "concept",
            "category"
          ],
          "iri": "Entity-class_and_type-Mention-1"
        }
      ],
      "relevance": 0.457763671875
    },
    "Entity-ei__ej": {
      "node_id": "ei__ej",
      "disambiguation_index": 0,
      "label": "ei, ej",
      "aliases": [
        "ei, ej"
      ],
      "types": [
        "entities",
        "objects"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of entities ei and ej mentioned as part of an adjacency matrix representation of a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "ei, ej",
          "local_types": [
            "entities",
            "objects"
          ],
          "iri": "Entity-ei__ej-Mention-1"
        }
      ],
      "relevance": 0.45751953125
    },
    "Entity-expected_decrease": {
      "node_id": "expected_decrease",
      "disambiguation_index": 0,
      "label": "expected decrease",
      "aliases": [
        "expected decrease"
      ],
      "types": [
        "phenomenon"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The phenomenon of a decline or reduction in the number of rules found, specifically referring to the distribution of mined rules with respect to their cardinalities.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-6-Sentence-2",
          "local_name": "expected decrease",
          "local_types": [
            "phenomenon"
          ],
          "iri": "Entity-expected_decrease-Mention-1"
        }
      ],
      "relevance": 0.45751953125
    },
    "Entity-row": {
      "node_id": "row",
      "disambiguation_index": 0,
      "label": "rows",
      "aliases": [
        "rows"
      ],
      "types": [
        "data structure",
        "table"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of organized data or a table with multiple entries",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-4",
          "local_name": "rows",
          "local_types": [
            "data structure",
            "table"
          ],
          "iri": "Entity-row-Mention-1"
        }
      ],
      "relevance": 0.45751953125
    },
    "Entity-maximum_length_of_rule": {
      "node_id": "maximum_length_of_rule",
      "disambiguation_index": 0,
      "label": "maximum length of rules",
      "aliases": [
        "maximum length of rules"
      ],
      "types": [
        "configuration setting",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The longest possible number of rules that can be applied or learned.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-2",
          "local_name": "maximum length of rules",
          "local_types": [
            "configuration setting",
            "parameter"
          ],
          "iri": "Entity-maximum_length_of_rule-Mention-1"
        }
      ],
      "relevance": 0.45751953125
    },
    "Entity-and_let_r__be_the_same_rule_shortened_by_removing_the_last_head_predicate_.": {
      "node_id": "and_let_r__be_the_same_rule_shortened_by_removing_the_last_head_predicate_.",
      "disambiguation_index": 0,
      "label": "and let r' be the same rule shortened by removing the last head predicate.",
      "aliases": [
        "and let r' be the same rule shortened by removing the last head predicate."
      ],
      "types": [
        "statement",
        "rule modification"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A modified version of an IOP rule, obtained by removing its last head predicate.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "and let r' be the same rule shortened by removing the last head predicate.",
          "local_types": [
            "statement",
            "rule modification"
          ],
          "iri": "Entity-and_let_r__be_the_same_rule_shortened_by_removing_the_last_head_predicate_.-Mention-1"
        }
      ],
      "relevance": 0.45751953125
    },
    "Entity-x": {
      "node_id": "x",
      "disambiguation_index": 0,
      "label": "x",
      "aliases": [
        "x"
      ],
      "types": [
        "mathematical entity",
        "parameter",
        "symbol",
        "open variable",
        "placeholder",
        "album name",
        "variable",
        "input parameter",
        "musical entity",
        "identifier"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "An open path rule that implies the existence of a fact and has two open variables, 'y' and 'x'.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "x",
          "local_types": [
            "mathematical entity",
            "parameter",
            "variable"
          ],
          "iri": "Entity-x-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-3",
          "local_name": "x",
          "local_types": [
            "parameter",
            "open variable",
            "variable"
          ],
          "iri": "Entity-x-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "x",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-x-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-6",
          "local_name": "x",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-x-Mention-4"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "x",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-x-Mention-5"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "x",
          "local_types": [
            "variable",
            "input parameter"
          ],
          "iri": "Entity-x-Mention-6"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-4",
          "local_name": "x",
          "local_types": [
            "identifier",
            "placeholder",
            "album name",
            "variable"
          ],
          "iri": "Entity-x-Mention-7"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-3",
          "local_name": "x",
          "local_types": [
            "placeholder",
            "variable",
            "musical entity"
          ],
          "iri": "Entity-x-Mention-8"
        }
      ],
      "relevance": 0.457275390625
    },
    "Entity-we_could_have_three_version_of_r__namely_r1__r2__and_r3": {
      "node_id": "we_could_have_three_version_of_r__namely_r1__r2__and_r3",
      "disambiguation_index": 0,
      "label": "we could have three versions of r, namely r1, r2, and r3",
      "aliases": [
        "we could have three versions of r, namely r1, r2, and r3",
        "three versions of r, namely r1, r2, and r3"
      ],
      "types": [
        "algorithm",
        "versions"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Three versions of a rule (r) with varying cardinality constraints (Car), namely r1, r2, and r3.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "we could have three versions of r, namely r1, r2, and r3",
          "local_types": [
            "algorithm",
            "versions"
          ],
          "iri": "Entity-we_could_have_three_version_of_r__namely_r1__r2__and_r3-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "three versions of r, namely r1, r2, and r3",
          "local_types": [
            "versions"
          ],
          "iri": "Entity-we_could_have_three_version_of_r__namely_r1__r2__and_r3-Mention-2"
        }
      ],
      "relevance": 0.457275390625
    },
    "Entity-the_figure": {
      "node_id": "the_figure",
      "disambiguation_index": 0,
      "label": "the figures",
      "aliases": [
        "the figures"
      ],
      "types": [
        "figure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Graphical representations or illustrations, typically used to convey information or data.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-1",
          "local_name": "the figures",
          "local_types": [
            "figure"
          ],
          "iri": "Entity-the_figure-Mention-1"
        }
      ],
      "relevance": 0.457275390625
    },
    "Entity-head_coverage": {
      "node_id": "head_coverage",
      "disambiguation_index": 0,
      "label": "head coverage",
      "aliases": [
        "head coverage"
      ],
      "types": [
        "metric",
        "evaluation criterion",
        "concept",
        "evaluation method",
        "performance metric",
        "measure",
        "metric for evaluation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A measure of how well a model or system captures relevant information",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-1",
          "local_name": "head coverage",
          "local_types": [
            "measure",
            "metric",
            "concept"
          ],
          "iri": "Entity-head_coverage-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "head coverage",
          "local_types": [
            "measure",
            "metric",
            "performance metric",
            "evaluation method"
          ],
          "iri": "Entity-head_coverage-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-1",
          "local_name": "head coverage",
          "local_types": [
            "metric for evaluation",
            "metric",
            "evaluation criterion"
          ],
          "iri": "Entity-head_coverage-Mention-3"
        }
      ],
      "relevance": 0.45703125
    },
    "Entity-non-zero_element_of_v2__pt_": {
      "node_id": "non-zero_element_of_v2__pt_",
      "disambiguation_index": 0,
      "label": "non-zero elements of V^2(Pt)",
      "aliases": [
        "non-zero elements of V^2(Pt)"
      ],
      "types": [
        "elements",
        "V^2",
        "Pt"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of distinct entity pairs (e', e) satisfying the second argument of a given IOP rule's body, obtained by summing each column and transposing the adjacency matrix A(Pt).",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "non-zero elements of V^2(Pt)",
          "local_types": [
            "elements",
            "V^2",
            "Pt"
          ],
          "iri": "Entity-non-zero_element_of_v2__pt_-Mention-1"
        }
      ],
      "relevance": 0.45703125
    },
    "Entity-ev": {
      "node_id": "ev",
      "disambiguation_index": 0,
      "label": "Ev",
      "aliases": [
        "Ev"
      ],
      "types": [
        "algorithm",
        "step",
        "algorithm component",
        "evaluation method",
        "evaluation framework",
        "parameter",
        "system",
        "variable",
        "author",
        "process",
        "environment",
        "function",
        "person",
        "evaluation module"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "An evaluation framework or methodology",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-4",
          "local_name": "Ev",
          "local_types": [
            "algorithm component",
            "evaluation method",
            "parameter",
            "variable",
            "author",
            "person",
            "evaluation module"
          ],
          "iri": "Entity-ev-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "Ev",
          "local_types": [
            "algorithm",
            "function",
            "algorithm component",
            "variable"
          ],
          "iri": "Entity-ev-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-6",
          "local_name": "Ev",
          "local_types": [
            "step",
            "algorithm component",
            "evaluation method",
            "evaluation framework",
            "system",
            "process",
            "environment"
          ],
          "iri": "Entity-ev-Mention-3"
        }
      ],
      "relevance": 0.456787109375
    },
    "Entity-cultural_bias__and_resource_constraint": {
      "node_id": "cultural_bias__and_resource_constraint",
      "disambiguation_index": 0,
      "label": "cultural bias, and resource constraints",
      "aliases": [
        "cultural bias, and resource constraints"
      ],
      "types": [
        "challenge",
        "bias",
        "resource limitation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The limitations that arise from incomplete or inaccurate representation of knowledge due to human factors such as cultural biases and the availability of resources.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "cultural bias, and resource constraints",
          "local_types": [
            "challenge",
            "bias",
            "resource limitation"
          ],
          "iri": "Entity-cultural_bias__and_resource_constraint-Mention-1"
        }
      ],
      "relevance": 0.456787109375
    },
    "Entity-the_vector_v1__a__p1___a__p2___...__a__pm__": {
      "node_id": "the_vector_v1__a__p1___a__p2___...__a__pm__",
      "disambiguation_index": 0,
      "label": "the vector V^1(A(P1)*A(P2)*...*A(Pm))",
      "aliases": [
        "the vector V^1(A(P1)*A(P2)*...*A(Pm))"
      ],
      "types": [
        "mathematical concept",
        "vector"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The mathematical concept represented by 'the vector V^1(A(P1)*A(P2)*...*A(Pm))' refers to a count of distinct entities that satisfy the head of an IOP rule, calculated from the product of adjacency matrices for predicates P1 through Pm.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "the vector V^1(A(P1)*A(P2)*...*A(Pm))",
          "local_types": [
            "mathematical concept",
            "vector"
          ],
          "iri": "Entity-the_vector_v1__a__p1___a__p2___...__a__pm__-Mention-1"
        }
      ],
      "relevance": 0.45654296875
    },
    "Entity-all_target_predicate": {
      "node_id": "all_target_predicate",
      "disambiguation_index": 0,
      "label": "all target predicates",
      "aliases": [
        "all target predicates"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "All the predicate types that are targeted by SHACLEARNER's learning process.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-3",
          "local_name": "all target predicates",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-all_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.45654296875
    },
    "Entity-a_relational_database_typically_employ_not-null_and_other_schema-based_constraint_that_require_some_attribute_to_be_instantiated_in_a_defined_way_at_all_time": {
      "node_id": "a_relational_database_typically_employ_not-null_and_other_schema-based_constraint_that_require_some_attribute_to_be_instantiated_in_a_defined_way_at_all_time",
      "disambiguation_index": 0,
      "label": "a relational database typically employs not-null and other schema-based constraints that require some attributes to be instantiated in a defined way at all times",
      "aliases": [
        "a relational database typically employs not-null and other schema-based constraints that require some attributes to be instantiated in a defined way at all times"
      ],
      "types": [
        "concept",
        "database"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of digital storage system that organizes data into tables with well-defined relationships between them.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "a relational database typically employs not-null and other schema-based constraints that require some attributes to be instantiated in a defined way at all times",
          "local_types": [
            "concept",
            "database"
          ],
          "iri": "Entity-a_relational_database_typically_employ_not-null_and_other_schema-based_constraint_that_require_some_attribute_to_be_instantiated_in_a_defined_way_at_all_time-Mention-1"
        }
      ],
      "relevance": 0.456298828125
    },
    "Entity-2__for_2___k___l_do": {
      "node_id": "2__for_2___k___l_do",
      "disambiguation_index": 0,
      "label": "2: for 2 <= k <= l do",
      "aliases": [
        "2: for 2 <= k <= l do"
      ],
      "types": [
        "loop construct"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A loop construct that iterates from k=2 to k=l, where each iteration adds entities related to previous iterations through predicate Pt.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-6",
          "local_name": "2: for 2 <= k <= l do",
          "local_types": [
            "loop construct"
          ],
          "iri": "Entity-2__for_2___k___l_do-Mention-1"
        }
      ],
      "relevance": 0.455810546875
    },
    "Entity-matrix_p_k_in_r__d_x_d_": {
      "node_id": "matrix_p_k_in_r__d_x_d_",
      "disambiguation_index": 0,
      "label": "matrix P_k in R^(d x d)",
      "aliases": [
        "matrix P_k in R^(d x d)"
      ],
      "types": [
        "representation",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation matrix that maps entities to predicates.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "matrix P_k in R^(d x d)",
          "local_types": [
            "representation",
            "mathematical concept"
          ],
          "iri": "Entity-matrix_p_k_in_r__d_x_d_-Mention-1"
        }
      ],
      "relevance": 0.455322265625
    },
    "Entity-learnt_rule": {
      "node_id": "learnt_rule",
      "disambiguation_index": 0,
      "label": "learnt rules",
      "aliases": [
        "learnt rules"
      ],
      "types": [
        "knowledge base",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or principles acquired through experience or learning.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-1",
          "local_name": "learnt rules",
          "local_types": [
            "knowledge base",
            "rule set"
          ],
          "iri": "Entity-learnt_rule-Mention-1"
        }
      ],
      "relevance": 0.455078125
    },
    "Entity-all_unary_predicate": {
      "node_id": "all_unary_predicate",
      "disambiguation_index": 0,
      "label": "all unary predicates",
      "aliases": [
        "all unary predicates"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of occupation-related types, such as singer or entrepreneur, which are used to classify entities in the Wikidata+UP knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "all unary predicates",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-all_unary_predicate-Mention-1"
        }
      ],
      "relevance": 0.455078125
    },
    "Entity-representation": {
      "node_id": "representation",
      "disambiguation_index": 0,
      "label": "representation",
      "aliases": [
        "representation"
      ],
      "types": [
        "conceptual framework"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual structure or model used to organize, categorize, or describe something",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-2",
          "local_name": "representation",
          "local_types": [
            "conceptual framework"
          ],
          "iri": "Entity-representation-Mention-1"
        }
      ],
      "relevance": 0.45458984375
    },
    "Entity-the_last_row": {
      "node_id": "the_last_row",
      "disambiguation_index": 0,
      "label": "The last row",
      "aliases": [
        "The last row"
      ],
      "types": [
        "row"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Unmodified version of the SHACLEARNER algorithm, as described in Algorithm 1.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-5",
          "local_name": "The last row",
          "local_types": [
            "row"
          ],
          "iri": "Entity-the_last_row-Mention-1"
        }
      ],
      "relevance": 0.45458984375
    },
    "Entity-s": {
      "node_id": "s",
      "disambiguation_index": 0,
      "label": "s",
      "aliases": [
        "s"
      ],
      "types": [
        "parameter",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A symbolic representation of a parameter or variable used to describe a tree structure.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "s",
          "local_types": [
            "parameter",
            "variable"
          ],
          "iri": "Entity-s-Mention-1"
        }
      ],
      "relevance": 0.454345703125
    },
    "Entity-then_standard_confidence": {
      "node_id": "then_standard_confidence",
      "disambiguation_index": 0,
      "label": "Then standard confidence",
      "aliases": [
        "Then standard confidence"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The standard confidence measure that describes how frequently a closed-path rule is true, i.e., what proportion of entity pairs that satisfy the body of the rule also satisfy its head.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "Then standard confidence",
          "local_types": [
            "method"
          ],
          "iri": "Entity-then_standard_confidence-Mention-1"
        }
      ],
      "relevance": 0.454345703125
    },
    "Entity-a_deeper__more_complex_tree": {
      "node_id": "a_deeper__more_complex_tree",
      "disambiguation_index": 0,
      "label": "a deeper, more complex tree",
      "aliases": [
        "a deeper, more complex tree"
      ],
      "types": [
        "tree"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A hierarchical structure with multiple branches and nodes",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-1",
          "local_name": "a deeper, more complex tree",
          "local_types": [
            "tree"
          ],
          "iri": "Entity-a_deeper__more_complex_tree-Mention-1"
        }
      ],
      "relevance": 0.453857421875
    },
    "Entity-their_method_for_comparison_purpose": {
      "node_id": "their_method_for_comparison_purpose",
      "disambiguation_index": 0,
      "label": "their method for comparison purposes",
      "aliases": [
        "their method for comparison purposes"
      ],
      "types": [
        "technique",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique or algorithm used to compare and evaluate different entities",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-3",
          "local_name": "their method for comparison purposes",
          "local_types": [
            "technique",
            "algorithm"
          ],
          "iri": "Entity-their_method_for_comparison_purpose-Mention-1"
        }
      ],
      "relevance": 0.453857421875
    },
    "Entity-pruning_technique": {
      "node_id": "pruning_technique",
      "disambiguation_index": 0,
      "label": "pruning techniques",
      "aliases": [
        "pruning techniques"
      ],
      "types": [
        "methodology",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Methods or algorithms used to reduce or eliminate parts of a system, dataset, or model",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-6",
          "local_name": "pruning techniques",
          "local_types": [
            "methodology",
            "algorithm"
          ],
          "iri": "Entity-pruning_technique-Mention-1"
        }
      ],
      "relevance": 0.453857421875
    },
    "Entity-...__pn__zn1__y___x_pt__x__z0__.": {
      "node_id": "...__pn__zn1__y___x_pt__x__z0__.",
      "disambiguation_index": 0,
      "label": "... \u2227 Pn(zn\u22121, y) \u2192 \u2203x Pt(x, z0).",
      "aliases": [
        "... \u2227 Pn(zn\u22121, y) \u2192 \u2203x Pt(x, z0)."
      ],
      "types": [
        "formula"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A formula representing an open path rule that implies the existence of a fact",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "... \u2227 Pn(zn\u22121, y) \u2192 \u2203x Pt(x, z0).",
          "local_types": [
            "formula"
          ],
          "iri": "Entity-...__pn__zn1__y___x_pt__x__z0__.-Mention-1"
        }
      ],
      "relevance": 0.453857421875
    },
    "Entity-schimatos": {
      "node_id": "schimatos",
      "disambiguation_index": 0,
      "label": "Schimatos",
      "aliases": [
        "Schimatos"
      ],
      "types": [
        "software tool",
        "editor",
        "tool",
        "software"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Schimatos: An editor used for manual knowledge graph completion",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-3",
          "local_name": "Schimatos",
          "local_types": [
            "software tool",
            "editor",
            "tool",
            "software"
          ],
          "iri": "Entity-schimatos-Mention-1"
        }
      ],
      "relevance": 0.45361328125
    },
    "Entity-with_n___2": {
      "node_id": "with_n___2",
      "disambiguation_index": 0,
      "label": "with n >= 2",
      "aliases": [
        "with n >= 2"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A condition that specifies a minimum number of distinct instantiations of an IOP rule's head path, given its body and predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "with n >= 2",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-with_n___2-Mention-1"
        }
      ],
      "relevance": 0.45361328125
    },
    "Entity-subject_and_object_argument_embeddings": {
      "node_id": "subject_and_object_argument_embeddings",
      "disambiguation_index": 0,
      "label": "subject and object argument embeddings",
      "aliases": [
        "subject and object argument embeddings"
      ],
      "types": [
        "object",
        "concept",
        "argument",
        "representation",
        "embedding",
        "argument embedding",
        "subject"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of mathematical representation that captures semantic relationships between entities, used to analyze or generate natural language text.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "subject and object argument embeddings",
          "local_types": [
            "object",
            "concept",
            "argument",
            "representation",
            "embedding",
            "argument embedding",
            "subject"
          ],
          "iri": "Entity-subject_and_object_argument_embeddings-Mention-1"
        }
      ],
      "relevance": 0.453125
    },
    "Entity-p1__p2__...__pm": {
      "node_id": "p1__p2__...__pm",
      "disambiguation_index": 0,
      "label": "P1, P2, ..., Pm",
      "aliases": [
        "P1, P2, ..., Pm"
      ],
      "types": [
        "path",
        "sequence of nodes"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sequence of nodes that forms a path connecting pairs of entities.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "P1, P2, ..., Pm",
          "local_types": [
            "path",
            "sequence of nodes"
          ],
          "iri": "Entity-p1__p2__...__pm-Mention-1"
        }
      ],
      "relevance": 0.453125
    },
    "Entity-_p__a_": {
      "node_id": "_p__a_",
      "disambiguation_index": 0,
      "label": "(P, A)",
      "aliases": [
        "(P, A)"
      ],
      "types": [
        "notation",
        "mathematical notation",
        "equation",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical notation or equation representing a specific embedding of a set K'",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-6",
          "local_name": "(P, A)",
          "local_types": [
            "notation",
            "mathematical notation",
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-_p__a_-Mention-1"
        }
      ],
      "relevance": 0.452880859375
    },
    "Entity-additional_constraint": {
      "node_id": "additional_constraint",
      "disambiguation_index": 0,
      "label": "additional constraints",
      "aliases": [
        "additional constraints"
      ],
      "types": [
        "constraint",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Rules or limitations imposed on a system or process to modify its behavior or output.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "additional constraints",
          "local_types": [
            "constraint",
            "rule"
          ],
          "iri": "Entity-additional_constraint-Mention-1"
        }
      ],
      "relevance": 0.452880859375
    },
    "Entity-algorithm": {
      "node_id": "algorithm",
      "disambiguation_index": 0,
      "label": "algorithm",
      "aliases": [
        "algorithm"
      ],
      "types": [
        "computational method",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic procedure that solves a specific problem or achieves a particular goal through automated manipulation and processing of data.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-3",
          "local_name": "algorithm",
          "local_types": [
            "computational method",
            "technique"
          ],
          "iri": "Entity-algorithm-Mention-1"
        }
      ],
      "relevance": 0.452880859375
    },
    "Entity-the_class_and_type_information_a_unary_predicate": {
      "node_id": "the_class_and_type_information_a_unary_predicate",
      "disambiguation_index": 0,
      "label": "the class and type information as unary predicates",
      "aliases": [
        "the class and type information as unary predicates"
      ],
      "types": [
        "information",
        "unary predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A representation of classification data that can be used in logical statements.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-1",
          "local_name": "the class and type information as unary predicates",
          "local_types": [
            "information",
            "unary predicate"
          ],
          "iri": "Entity-the_class_and_type_information_a_unary_predicate-Mention-1"
        }
      ],
      "relevance": 0.452880859375
    },
    "Entity-sc__r_": {
      "node_id": "sc__r_",
      "disambiguation_index": 0,
      "label": "SC(r)",
      "aliases": [
        "SC(r)"
      ],
      "types": [
        "notation",
        "mathematical concept",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The standard confidence measure for a closed-path rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "SC(r)",
          "local_types": [
            "notation",
            "mathematical concept",
            "expression"
          ],
          "iri": "Entity-sc__r_-Mention-1"
        }
      ],
      "relevance": 0.45263671875
    },
    "Entity-information": {
      "node_id": "information",
      "disambiguation_index": 0,
      "label": "information",
      "aliases": [
        "information"
      ],
      "types": [
        "data",
        "knowledge"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Facts, data, or knowledge that has been gathered and organized.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-4",
          "local_name": "information",
          "local_types": [
            "data",
            "knowledge"
          ],
          "iri": "Entity-information-Mention-1"
        }
      ],
      "relevance": 0.45263671875
    },
    "Entity-definition_4": {
      "node_id": "definition_4",
      "disambiguation_index": 0,
      "label": "Definition 4",
      "aliases": [
        "Definition 4"
      ],
      "types": [
        "concept",
        "definition",
        "notation",
        "reference",
        "conceptual framework"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual framework or notation that provides a detailed explanation of a specific concept.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-1",
          "local_name": "Definition 4",
          "local_types": [
            "notation",
            "conceptual framework",
            "concept",
            "definition"
          ],
          "iri": "Entity-definition_4-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "Definition 4",
          "local_types": [
            "definition",
            "reference"
          ],
          "iri": "Entity-definition_4-Mention-2"
        }
      ],
      "relevance": 0.451904296875
    },
    "Entity-whole_path": {
      "node_id": "whole_path",
      "disambiguation_index": 0,
      "label": "whole path",
      "aliases": [
        "whole path"
      ],
      "types": [
        "concept",
        "predicate",
        "path"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sequence of related events or actions that forms a unified concept",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "whole path",
          "local_types": [
            "concept",
            "predicate",
            "path"
          ],
          "iri": "Entity-whole_path-Mention-1"
        }
      ],
      "relevance": 0.451904296875
    },
    "Entity-pt": {
      "node_id": "pt",
      "disambiguation_index": 0,
      "label": "Pt",
      "aliases": [
        "Pt"
      ],
      "types": [
        "parameter",
        "notation",
        "symbol",
        "mathematical concept",
        "variable",
        "expression",
        "logical operator",
        "function",
        "mathematical symbol",
        "rule component",
        "predicate",
        "term"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or variable representing a predicate or rule component.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "Pt",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-pt-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "Pt",
          "local_types": [
            "function",
            "mathematical concept"
          ],
          "iri": "Entity-pt-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "Pt",
          "local_types": [
            "expression",
            "predicate",
            "term"
          ],
          "iri": "Entity-pt-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-5",
          "local_name": "Pt",
          "local_types": [
            "parameter",
            "variable"
          ],
          "iri": "Entity-pt-Mention-4"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "Pt",
          "local_types": [
            "predicate",
            "logical operator"
          ],
          "iri": "Entity-pt-Mention-5"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-2",
          "local_name": "Pt",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-pt-Mention-6"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "Pt",
          "local_types": [
            "rule component",
            "predicate",
            "function"
          ],
          "iri": "Entity-pt-Mention-7"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-4",
          "local_name": "Pt",
          "local_types": [
            "mathematical symbol"
          ],
          "iri": "Entity-pt-Mention-8"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "Pt",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-pt-Mention-9"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "Pt",
          "local_types": [
            "notation",
            "symbol",
            "term"
          ],
          "iri": "Entity-pt-Mention-10"
        }
      ],
      "relevance": 0.45166015625
    },
    "Entity-only_e2_satisfies_the_rule": {
      "node_id": "only_e2_satisfies_the_rule",
      "disambiguation_index": 0,
      "label": "only e2 satisfies the rule",
      "aliases": [
        "only e2 satisfies the rule"
      ],
      "types": [
        "condition",
        "constraint"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The IOP rule with cardinality constraint Car=2, which has only one satisfying entity, namely e2.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-7",
          "local_name": "only e2 satisfies the rule",
          "local_types": [
            "condition",
            "constraint"
          ],
          "iri": "Entity-only_e2_satisfies_the_rule-Mention-1"
        }
      ],
      "relevance": 0.45166015625
    },
    "Entity-zi": {
      "node_id": "zi",
      "disambiguation_index": 0,
      "label": "zi",
      "aliases": [
        "zi"
      ],
      "types": [
        "variable",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "zi is an entity variable in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "zi",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-zi-Mention-1"
        }
      ],
      "relevance": 0.451416015625
    },
    "Entity-the_related_op_rule": {
      "node_id": "the_related_op_rule",
      "disambiguation_index": 0,
      "label": "the related OP rule",
      "aliases": [
        "the related OP rule"
      ],
      "types": [
        "rule",
        "OP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A rule in which every entity-instantiation is also an instance of the corresponding closed path (CP) rule, but not vice versa.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-6",
          "local_name": "the related OP rule",
          "local_types": [
            "rule",
            "OP rule"
          ],
          "iri": "Entity-the_related_op_rule-Mention-1"
        }
      ],
      "relevance": 0.451416015625
    },
    "Entity-in_other_word__the_cardinality_express_a_lower_bound_on_the_number_of_head_path_that_are_satisfied_in_the_kg_for_every_instantiation_linking_the_body_to_the_head": {
      "node_id": "in_other_word__the_cardinality_express_a_lower_bound_on_the_number_of_head_path_that_are_satisfied_in_the_kg_for_every_instantiation_linking_the_body_to_the_head",
      "disambiguation_index": 0,
      "label": "In other words, the cardinality expresses a lower bound on the number of head paths that are satisfied in the KG for every instantiation linking the body to the head",
      "aliases": [
        "In other words, the cardinality expresses a lower bound on the number of head paths that are satisfied in the KG for every instantiation linking the body to the head"
      ],
      "types": [
        "explanation",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Cardinality measure",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-4",
          "local_name": "In other words, the cardinality expresses a lower bound on the number of head paths that are satisfied in the KG for every instantiation linking the body to the head",
          "local_types": [
            "explanation",
            "notation"
          ],
          "iri": "Entity-in_other_word__the_cardinality_express_a_lower_bound_on_the_number_of_head_path_that_are_satisfied_in_the_kg_for_every_instantiation_linking_the_body_to_the_head-Mention-1"
        }
      ],
      "relevance": 0.451171875
    },
    "Entity-head_coverage_and_standard_confidence": {
      "node_id": "head_coverage_and_standard_confidence",
      "disambiguation_index": 0,
      "label": "head coverage and standard confidence",
      "aliases": [
        "head coverage and standard confidence"
      ],
      "types": [
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure of how frequently a closed-path rule is true, i.e., what proportion of entity pairs that satisfy the body also satisfy the head.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "head coverage and standard confidence",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-head_coverage_and_standard_confidence-Mention-1"
        }
      ],
      "relevance": 0.450927734375
    },
    "Entity-a__pt_": {
      "node_id": "a__pt_",
      "disambiguation_index": 0,
      "label": "A(Pt)",
      "aliases": [
        "A(Pt)"
      ],
      "types": [
        "mathematical concept",
        "matrix",
        "notation",
        "equation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A square matrix with a specific notation or equation.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-4",
          "local_name": "A(Pt)",
          "local_types": [
            "mathematical concept",
            "matrix",
            "notation",
            "equation"
          ],
          "iri": "Entity-a__pt_-Mention-1"
        }
      ],
      "relevance": 0.450439453125
    },
    "Entity-each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_": {
      "node_id": "each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "disambiguation_index": 0,
      "label": "each predicate P_k to a matrix P_k in R^(d x d)",
      "aliases": [
        "each predicate P_k to a matrix P_k in R^(d x d)"
      ],
      "types": [
        "predicate representation",
        "matrix"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A representation of each predicate as a square matrix, mapping entities to vectors in a high-dimensional space.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "each predicate P_k to a matrix P_k in R^(d x d)",
          "local_types": [
            "predicate representation",
            "matrix"
          ],
          "iri": "Entity-each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_-Mention-1"
        }
      ],
      "relevance": 0.450439453125
    },
    "Entity-cover": {
      "node_id": "cover",
      "disambiguation_index": 0,
      "label": "cover",
      "aliases": [
        "cover"
      ],
      "types": [
        "technique",
        "method",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique, method or concept used to conceal or protect something.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-5",
          "local_name": "cover",
          "local_types": [
            "technique",
            "method",
            "concept"
          ],
          "iri": "Entity-cover-Mention-1"
        }
      ],
      "relevance": 0.4501953125
    },
    "Entity-for_car1__iopsupp__r1_____e2__e3____2": {
      "node_id": "for_car1__iopsupp__r1_____e2__e3____2",
      "disambiguation_index": 0,
      "label": "For Car=1, IOPsupp(r1) = |{e2, e3}| = 2",
      "aliases": [
        "For Car=1, IOPsupp(r1) = |{e2, e3}| = 2"
      ],
      "types": [
        "equation",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "For Car=1, IOPsupp(r1) = |{e2, e3}| = 2",
          "local_types": [
            "equation",
            "mathematical concept"
          ],
          "iri": "Entity-for_car1__iopsupp__r1_____e2__e3____2-Mention-1"
        }
      ],
      "relevance": 0.4501953125
    },
    "Entity-sequence_of_path_or_branch": {
      "node_id": "sequence_of_path_or_branch",
      "disambiguation_index": 0,
      "label": "sequence of paths or branches",
      "aliases": [
        "sequence of paths or branches"
      ],
      "types": [
        "collection",
        "set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of connected routes or pathways in a hierarchical structure.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "sequence of paths or branches",
          "local_types": [
            "collection",
            "set"
          ],
          "iri": "Entity-sequence_of_path_or_branch-Mention-1"
        }
      ],
      "relevance": 0.4501953125
    },
    "Entity-an_op_rule_(1)": {
      "node_id": "an_op_rule_(1)",
      "disambiguation_index": 1,
      "label": "An OP rule",
      "aliases": [
        "An OP rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of rule with two open variables (y and x) that implies the existence of a fact.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-3",
          "local_name": "An OP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-an_op_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.4501953125
    },
    "Entity-data": {
      "node_id": "data",
      "disambiguation_index": 0,
      "label": "data",
      "aliases": [
        "data"
      ],
      "types": [
        "information",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of information or facts, typically used for analysis, processing, or decision-making.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "data",
          "local_types": [
            "dataset",
            "information"
          ],
          "iri": "Entity-data-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "data",
          "local_types": [
            "information",
            "dataset"
          ],
          "iri": "Entity-data-Mention-2"
        }
      ],
      "relevance": 0.449951171875
    },
    "Entity-class": {
      "node_id": "class",
      "disambiguation_index": 0,
      "label": "class",
      "aliases": [
        "class",
        "classes"
      ],
      "types": [
        "category",
        "classification",
        "concept",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A fundamental concept or category that defines a set of entities with shared characteristics.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-1",
          "local_name": "class",
          "local_types": [
            "category",
            "concept",
            "predicate"
          ],
          "iri": "Entity-class-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-3",
          "local_name": "classes",
          "local_types": [
            "category",
            "classification"
          ],
          "iri": "Entity-class-Mention-2"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-2",
          "local_name": "class",
          "local_types": [
            "category",
            "classification"
          ],
          "iri": "Entity-class-Mention-3"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-3",
          "local_name": "classes",
          "local_types": [
            "concept",
            "category"
          ],
          "iri": "Entity-class-Mention-4"
        }
      ],
      "relevance": 0.449951171875
    },
    "Entity-unlike_cp_rule__op_rule_do_not_necessarily_form_a_loop": {
      "node_id": "unlike_cp_rule__op_rule_do_not_necessarily_form_a_loop",
      "disambiguation_index": 0,
      "label": "Unlike CP rules, OP rules do not necessarily form a loop",
      "aliases": [
        "Unlike CP rules, OP rules do not necessarily form a loop"
      ],
      "types": [
        "CP rule",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "OP rule",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-5",
          "local_name": "Unlike CP rules, OP rules do not necessarily form a loop",
          "local_types": [
            "CP rule",
            "concept"
          ],
          "iri": "Entity-unlike_cp_rule__op_rule_do_not_necessarily_form_a_loop-Mention-1"
        }
      ],
      "relevance": 0.44970703125
    },
    "Entity-predicate_embeddings": {
      "node_id": "predicate_embeddings",
      "disambiguation_index": 0,
      "label": "predicate embeddings",
      "aliases": [
        "predicate embeddings"
      ],
      "types": [
        "concept",
        "vector space",
        "representation",
        "embedding",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of a predicate's meaning or concept, typically represented as a vector in a high-dimensional space.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "predicate embeddings",
          "local_types": [
            "concept",
            "vector space",
            "representation",
            "embedding",
            "predicate"
          ],
          "iri": "Entity-predicate_embeddings-Mention-1"
        }
      ],
      "relevance": 0.44970703125
    },
    "Entity-__e__there_exists_e__such_that_headr__e__and_pt__e___e___": {
      "node_id": "__e__there_exists_e__such_that_headr__e__and_pt__e___e___",
      "disambiguation_index": 0,
      "label": "|{ e : there exists e' such that headr(e) and Pt(e', e) }|",
      "aliases": [
        "|{ e : there exists e' such that headr(e) and Pt(e', e) }|"
      ],
      "types": [
        "mathematical notation",
        "set expression",
        "set theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entities that satisfy both the head and body predicates of a tree shape, used to measure its support and standard confidence.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-5",
          "local_name": "|{ e : there exists e' such that headr(e) and Pt(e', e) }|",
          "local_types": [
            "mathematical notation",
            "set expression",
            "set theory"
          ],
          "iri": "Entity-__e__there_exists_e__such_that_headr__e__and_pt__e___e___-Mention-1"
        }
      ],
      "relevance": 0.44970703125
    },
    "Entity-the_latter_question": {
      "node_id": "the_latter_question",
      "disambiguation_index": 0,
      "label": "the latter question",
      "aliases": [
        "the latter question",
        "the former question"
      ],
      "types": [
        "question"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A depth-first questioning strategy that reduces cognitive load by asking completion questions sequentially, where each subsequent question builds upon the previous one's answer.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-5",
          "local_name": "the latter question",
          "local_types": [
            "question"
          ],
          "iri": "Entity-the_latter_question-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-5",
          "local_name": "the former question",
          "local_types": [
            "question"
          ],
          "iri": "Entity-the_latter_question-Mention-2"
        }
      ],
      "relevance": 0.44970703125
    },
    "Entity-predicate_p_k": {
      "node_id": "predicate_p_k",
      "disambiguation_index": 0,
      "label": "predicate P_k",
      "aliases": [
        "predicate P_k"
      ],
      "types": [
        "relation",
        "predicate",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical expression or relation that represents a predicate in a knowledge representation framework.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "predicate P_k",
          "local_types": [
            "relation",
            "predicate"
          ],
          "iri": "Entity-predicate_p_k-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "predicate P_k",
          "local_types": [
            "relation",
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-predicate_p_k-Mention-2"
        }
      ],
      "relevance": 0.44921875
    },
    "Entity-a_value_of_0.1_for_the_treescmin_parameter": {
      "node_id": "a_value_of_0.1_for_the_treescmin_parameter",
      "disambiguation_index": 0,
      "label": "a value of 0.1 for the TreeSCMIN parameter",
      "aliases": [
        "a value of 0.1 for the TreeSCMIN parameter"
      ],
      "types": [
        "parameter setting"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum value used to determine the shape complexity (TreeSC) of discovered trees.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "a value of 0.1 for the TreeSCMIN parameter",
          "local_types": [
            "parameter setting"
          ],
          "iri": "Entity-a_value_of_0.1_for_the_treescmin_parameter-Mention-1"
        }
      ],
      "relevance": 0.44921875
    },
    "Entity-all_unary_predicate_are_occupation_such_a_singer_or_entrepreneur__so_all_the_entity_which_have_these_type_turn_out_to_be_person_even_though_there_is_no_explicit_person_type_in_our_kg": {
      "node_id": "all_unary_predicate_are_occupation_such_a_singer_or_entrepreneur__so_all_the_entity_which_have_these_type_turn_out_to_be_person_even_though_there_is_no_explicit_person_type_in_our_kg",
      "disambiguation_index": 0,
      "label": "all unary predicates are occupations such as singer or entrepreneur, so all the entities which have these types turn out to be persons even though there is no explicit person type in our KG",
      "aliases": [
        "all unary predicates are occupations such as singer or entrepreneur, so all the entities which have these types turn out to be persons even though there is no explicit person type in our KG"
      ],
      "types": [
        "finding",
        "ontology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept that categorizes certain unary predicates as occupations, resulting in all entities with such types being classified as people.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "all unary predicates are occupations such as singer or entrepreneur, so all the entities which have these types turn out to be persons even though there is no explicit person type in our KG",
          "local_types": [
            "finding",
            "ontology"
          ],
          "iri": "Entity-all_unary_predicate_are_occupation_such_a_singer_or_entrepreneur__so_all_the_entity_which_have_these_type_turn_out_to_be_person_even_though_there_is_no_explicit_person_type_in_our_kg-Mention-1"
        }
      ],
      "relevance": 0.448974609375
    },
    "Entity-that_satisfy_the_body_of_the_rule": {
      "node_id": "that_satisfy_the_body_of_the_rule",
      "disambiguation_index": 0,
      "label": "that satisfy the body of the rule",
      "aliases": [
        "that satisfy the body of the rule"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that are connected to another entity by a predicate Pt, indicating satisfaction of the body of an IOP rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "that satisfy the body of the rule",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-that_satisfy_the_body_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.448974609375
    },
    "Entity-each_binary_target_predicate": {
      "node_id": "each_binary_target_predicate",
      "disambiguation_index": 0,
      "label": "Each binary target predicate",
      "aliases": [
        "Each binary target predicate"
      ],
      "types": [
        "predicate",
        "logical construct"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A specific logical construct representing each of the 74 binary predicates from YAGO2s, which serves as two target predicates in both straight and reverse forms.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-5",
          "local_name": "Each binary target predicate",
          "local_types": [
            "predicate",
            "logical construct"
          ],
          "iri": "Entity-each_binary_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.44873046875
    },
    "Entity-doe_not_uniformly_increase_in_effectiveness_with_decreasing_rule_quality": {
      "node_id": "doe_not_uniformly_increase_in_effectiveness_with_decreasing_rule_quality",
      "disambiguation_index": 0,
      "label": "does not uniformly increase in effectiveness with decreasing rule quality",
      "aliases": [
        "does not uniformly increase in effectiveness with decreasing rule quality"
      ],
      "types": [
        "evaluation result",
        "finding",
        "evaluation metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The finding that SHACLEARNER's heuristic pruning method, when used without sampling, does not consistently improve the effectiveness of learnt rules as their quality decreases.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-6-Sentence-1",
          "local_name": "does not uniformly increase in effectiveness with decreasing rule quality",
          "local_types": [
            "evaluation result",
            "finding",
            "evaluation metric"
          ],
          "iri": "Entity-doe_not_uniformly_increase_in_effectiveness_with_decreasing_rule_quality-Mention-1"
        }
      ],
      "relevance": 0.44873046875
    },
    "Entity-out_of_thirty-five_predicate": {
      "node_id": "out_of_thirty-five_predicate",
      "disambiguation_index": 0,
      "label": "out of thirty-five predicates",
      "aliases": [
        "out of thirty-five predicates"
      ],
      "types": [
        "quantity",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of unary predicates in the Poker KG, which are specific poker hands such as fullHouse(x) where x is a particular hand.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-9",
          "local_name": "out of thirty-five predicates",
          "local_types": [
            "quantity",
            "predicate"
          ],
          "iri": "Entity-out_of_thirty-five_predicate-Mention-1"
        }
      ],
      "relevance": 0.448486328125
    },
    "Entity-k": {
      "node_id": "k",
      "disambiguation_index": 0,
      "label": "|K|",
      "aliases": [
        "|K|"
      ],
      "types": [
        "notation",
        "mathematical expression",
        "complexity measure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical expression representing a complexity measure or notation.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "|K|",
          "local_types": [
            "notation",
            "mathematical expression",
            "complexity measure"
          ],
          "iri": "Entity-k-Mention-1"
        }
      ],
      "relevance": 0.4482421875
    },
    "Entity-constraint": {
      "node_id": "constraint",
      "disambiguation_index": 0,
      "label": "constraints",
      "aliases": [
        "constraints"
      ],
      "types": [
        "limitation",
        "restriction",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A rule or limitation that governs behavior, usage, or interpretation.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "constraints",
          "local_types": [
            "rule",
            "restriction"
          ],
          "iri": "Entity-constraint-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "constraints",
          "local_types": [
            "rule",
            "limitation"
          ],
          "iri": "Entity-constraint-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-4",
          "local_name": "constraints",
          "local_types": [
            "rule",
            "limitation"
          ],
          "iri": "Entity-constraint-Mention-3"
        }
      ],
      "relevance": 0.447998046875
    },
    "Entity-branch_in_the_tree": {
      "node_id": "branch_in_the_tree",
      "disambiguation_index": 0,
      "label": "branches in the trees",
      "aliases": [
        "branches in the trees"
      ],
      "types": [
        "biological feature",
        "tree characteristic"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The characteristics of discovered tree shapes",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-1-Sentence-2",
          "local_name": "branches in the trees",
          "local_types": [
            "biological feature",
            "tree characteristic"
          ],
          "iri": "Entity-branch_in_the_tree-Mention-1"
        }
      ],
      "relevance": 0.447998046875
    },
    "Entity-a_pair_of_entity_(1)": {
      "node_id": "a_pair_of_entity_(1)",
      "disambiguation_index": 1,
      "label": "A pair of entities",
      "aliases": [
        "A pair of entities"
      ],
      "types": [
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A pair of entities (e, e') that satisfies a closed-path rule's body, denoted by `body_r(e, e')`, if there exist entities e1, ..., e(n-1) in the KG such that all of {P1(e, e1), P2(e1, e2), ..., Pn(e(n-1), e')} are facts in the KG.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "A pair of entities",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-a_pair_of_entity_(1)-Mention-1"
        }
      ],
      "relevance": 0.447998046875
    },
    "Entity-the_inverse_open_path_support": {
      "node_id": "the_inverse_open_path_support",
      "disambiguation_index": 0,
      "label": "The inverse open path support",
      "aliases": [
        "The inverse open path support"
      ],
      "types": [
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure that calculates the number of pairs of entities (e', e'') such that there exists an entity e'' satisfying the body Pt(., .) and another entity e' satisfying the head P1(. , z0) ^ ... ^ Pn(z(n-1), y).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-5",
          "local_name": "The inverse open path support",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-the_inverse_open_path_support-Mention-1"
        }
      ],
      "relevance": 0.447998046875
    },
    "Entity-for_example_(3)": {
      "node_id": "for_example_(3)",
      "disambiguation_index": 3,
      "label": "For example",
      "aliases": [
        "For example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The performance comparison between SHACLEARNER's ideal rule learner and the system without sampling",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-1",
          "local_name": "For example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_example_(3)-Mention-1"
        }
      ],
      "relevance": 0.447998046875
    },
    "Entity-hc__r_": {
      "node_id": "hc__r_",
      "disambiguation_index": 0,
      "label": "HC(r)",
      "aliases": [
        "HC(r)"
      ],
      "types": [
        "variable name",
        "notation",
        "mathematical concept",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The standardised measure of how frequently a rule is true, i.e., what proportion of entity pairs that satisfy the body also satisfy the head.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "HC(r)",
          "local_types": [
            "variable name",
            "notation",
            "mathematical concept",
            "expression"
          ],
          "iri": "Entity-hc__r_-Mention-1"
        }
      ],
      "relevance": 0.44775390625
    },
    "Entity-r3": {
      "node_id": "r3",
      "disambiguation_index": 0,
      "label": "r3",
      "aliases": [
        "r3"
      ],
      "types": [
        "notation",
        "identifier"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The IOP rule 'r3' that has a cardinality value of 3.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "r3",
          "local_types": [
            "notation",
            "identifier"
          ],
          "iri": "Entity-r3-Mention-1"
        }
      ],
      "relevance": 0.44775390625
    },
    "Entity-the_body": {
      "node_id": "the_body",
      "disambiguation_index": 0,
      "label": "the body",
      "aliases": [
        "the body"
      ],
      "types": [
        "part"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The term 'the body' in this context refers to the predicate Pt, which is part of a SHACL tree shape and represents the core pattern or structure of the shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "the body",
          "local_types": [
            "part"
          ],
          "iri": "Entity-the_body-Mention-1"
        }
      ],
      "relevance": 0.44775390625
    },
    "Entity-sc": {
      "node_id": "sc",
      "disambiguation_index": 0,
      "label": "SC",
      "aliases": [
        "SC"
      ],
      "types": [
        "statistical concept",
        "metric",
        "concept",
        "evaluation method",
        "notation",
        "system",
        "standard",
        "component"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A statistical measure or concept used to evaluate the frequency or proportion of entities that satisfy certain conditions.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "SC",
          "local_types": [
            "concept",
            "notation",
            "system",
            "standard",
            "component"
          ],
          "iri": "Entity-sc-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-6",
          "local_name": "SC",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-sc-Mention-2"
        },
        {
          "reference": "Section-17-Paragraph-4-Sentence-2",
          "local_name": "SC",
          "local_types": [
            "statistical concept",
            "metric"
          ],
          "iri": "Entity-sc-Mention-3"
        }
      ],
      "relevance": 0.447509765625
    },
    "Entity-the_presentation_in_the_triple_format": {
      "node_id": "the_presentation_in_the_triple_format",
      "disambiguation_index": 0,
      "label": "the presentation in the triple format",
      "aliases": [
        "the presentation in the triple format"
      ],
      "types": [
        "format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The way of presenting class and type information using unary predicates with self-loop links to maintain a consistent representation in the triple format.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-3",
          "local_name": "the presentation in the triple format",
          "local_types": [
            "format"
          ],
          "iri": "Entity-the_presentation_in_the_triple_format-Mention-1"
        }
      ],
      "relevance": 0.447509765625
    },
    "Entity-number_of_quality_rule_mined": {
      "node_id": "number_of_quality_rule_mined",
      "disambiguation_index": 0,
      "label": "numbers of quality rules mined",
      "aliases": [
        "numbers of quality rules mined"
      ],
      "types": [
        "result",
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of extracted quality rules",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-1",
          "local_name": "numbers of quality rules mined",
          "local_types": [
            "result",
            "output"
          ],
          "iri": "Entity-number_of_quality_rule_mined-Mention-1"
        }
      ],
      "relevance": 0.447265625
    },
    "Entity-the_straight_form": {
      "node_id": "the_straight_form",
      "disambiguation_index": 0,
      "label": "the straight form",
      "aliases": [
        "the straight form"
      ],
      "types": [
        "form"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of target predicate where the object argument is the common variable to connect the head, used in evaluating SHACLEARNER on YAGO2s.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-5",
          "local_name": "the straight form",
          "local_types": [
            "form"
          ],
          "iri": "Entity-the_straight_form-Mention-1"
        }
      ],
      "relevance": 0.447021484375
    },
    "Entity-selecting_a_low_threshold": {
      "node_id": "selecting_a_low_threshold",
      "disambiguation_index": 0,
      "label": "selecting a low threshold",
      "aliases": [
        "selecting a low threshold"
      ],
      "types": [
        "threshold"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The practice or strategy of setting a minimum standard for rule quality during the learning process, allowing for more rules to be generated and then pruning them further based on stricter criteria.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-4",
          "local_name": "selecting a low threshold",
          "local_types": [
            "threshold"
          ],
          "iri": "Entity-selecting_a_low_threshold-Mention-1"
        }
      ],
      "relevance": 0.44677734375
    },
    "Entity-annotated_with_a_cardinality_car": {
      "node_id": "annotated_with_a_cardinality_car",
      "disambiguation_index": 0,
      "label": "annotated with a cardinality Car",
      "aliases": [
        "annotated with a cardinality Car"
      ],
      "types": [
        "annotation",
        "cardinality constraint"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A rule that expresses not only the necessity of a chain of facts but also the minimum number of different chains that should exist.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-3",
          "local_name": "annotated with a cardinality Car",
          "local_types": [
            "annotation",
            "cardinality constraint"
          ],
          "iri": "Entity-annotated_with_a_cardinality_car-Mention-1"
        }
      ],
      "relevance": 0.446533203125
    },
    "Entity-we_employ_an_abstract_model": {
      "node_id": "we_employ_an_abstract_model",
      "disambiguation_index": 0,
      "label": "We employ an abstract model",
      "aliases": [
        "We employ an abstract model"
      ],
      "types": [
        "model"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An abstract model used in Description Logic ontologies to represent classes and types as unary predicates and roles (properties) as binary predicates.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-3",
          "local_name": "We employ an abstract model",
          "local_types": [
            "model"
          ],
          "iri": "Entity-we_employ_an_abstract_model-Mention-1"
        }
      ],
      "relevance": 0.446533203125
    },
    "Entity-scoring_function": {
      "node_id": "scoring_function",
      "disambiguation_index": 0,
      "label": "scoring function",
      "aliases": [
        "the scoring function",
        "scoring function",
        "scoring functions"
      ],
      "types": [
        "algorithm",
        "evaluation metric",
        "scoring",
        "mathematical concept",
        "function",
        "methodology",
        "algorithmic component"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical formula that assigns scores or values to entities based on their relationships and properties.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-4",
          "local_name": "scoring function",
          "local_types": [
            "function",
            "algorithmic component"
          ],
          "iri": "Entity-scoring_function-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-5",
          "local_name": "scoring function",
          "local_types": [
            "algorithm",
            "mathematical concept"
          ],
          "iri": "Entity-scoring_function-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "scoring function",
          "local_types": [
            "algorithm",
            "evaluation metric",
            "function"
          ],
          "iri": "Entity-scoring_function-Mention-3"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-3",
          "local_name": "scoring function",
          "local_types": [
            "algorithm",
            "evaluation metric",
            "function"
          ],
          "iri": "Entity-scoring_function-Mention-4"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "scoring functions",
          "local_types": [
            "algorithm",
            "methodology",
            "mathematical concept",
            "function"
          ],
          "iri": "Entity-scoring_function-Mention-5"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-3",
          "local_name": "the scoring function",
          "local_types": [
            "function",
            "scoring"
          ],
          "iri": "Entity-scoring_function-Mention-6"
        }
      ],
      "relevance": 0.4462890625
    },
    "Entity-w3c": {
      "node_id": "w3c",
      "disambiguation_index": 0,
      "label": "W3C",
      "aliases": [
        "W3C"
      ],
      "types": [
        "standards body",
        "consortium",
        "organization",
        "organisation",
        "standards_body",
        "standards organization"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The World Wide Web Consortium (W3C) is an international community that develops and maintains standards for the web.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "W3C",
          "local_types": [
            "organization",
            "standards_body",
            "standards body"
          ],
          "iri": "Entity-w3c-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "W3C",
          "local_types": [
            "organization",
            "organisation",
            "standards body",
            "standards organization"
          ],
          "iri": "Entity-w3c-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "W3C",
          "local_types": [
            "organization",
            "consortium",
            "standards organization"
          ],
          "iri": "Entity-w3c-Mention-3"
        }
      ],
      "relevance": 0.446044921875
    },
    "Entity-fact_related_to_them": {
      "node_id": "fact_related_to_them",
      "disambiguation_index": 0,
      "label": "facts related to them",
      "aliases": [
        "facts related to them"
      ],
      "types": [
        "information",
        "knowledge"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of data or knowledge about various aspects",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-8",
          "local_name": "facts related to them",
          "local_types": [
            "information",
            "knowledge"
          ],
          "iri": "Entity-fact_related_to_them-Mention-1"
        }
      ],
      "relevance": 0.44580078125
    },
    "Entity-all_head_branch": {
      "node_id": "all_head_branch",
      "disambiguation_index": 0,
      "label": "All head branches",
      "aliases": [
        "All head branches"
      ],
      "types": [
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The sequence of paths or branches terminating at each node in a tree shape, representing the head predicates and their relationships.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-6",
          "local_name": "All head branches",
          "local_types": [
            "head"
          ],
          "iri": "Entity-all_head_branch-Mention-1"
        }
      ],
      "relevance": 0.44580078125
    },
    "Entity-table_2": {
      "node_id": "table_2",
      "disambiguation_index": 0,
      "label": "Table 2",
      "aliases": [
        "Table 2"
      ],
      "types": [
        "data table",
        "table",
        "data",
        "dataset"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A data table or dataset containing numerical information about rules, quality metrics, and running times.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-1",
          "local_name": "Table 2",
          "local_types": [
            "data table",
            "table",
            "data",
            "dataset"
          ],
          "iri": "Entity-table_2-Mention-1"
        }
      ],
      "relevance": 0.445556640625
    },
    "Entity-e__e_": {
      "node_id": "e__e_",
      "disambiguation_index": 0,
      "label": "e, e'",
      "aliases": [
        "e, e'"
      ],
      "types": [
        "variables",
        "unknowns"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of variables or unknowns that satisfy a specific condition and are connected through a sequence of paths.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "e, e'",
          "local_types": [
            "variables",
            "unknowns"
          ],
          "iri": "Entity-e__e_-Mention-1"
        }
      ],
      "relevance": 0.445556640625
    },
    "Entity-branch_cardinality": {
      "node_id": "branch_cardinality",
      "disambiguation_index": 0,
      "label": "branch cardinality",
      "aliases": [
        "branch cardinality"
      ],
      "types": [
        "counting metric",
        "numeric value",
        "dimensionality measure",
        "data attribute"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The number or quantity of branches in a given structure.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-2",
          "local_name": "branch cardinality",
          "local_types": [
            "counting metric",
            "numeric value",
            "dimensionality measure",
            "data attribute"
          ],
          "iri": "Entity-branch_cardinality-Mention-1"
        }
      ],
      "relevance": 0.445068359375
    },
    "Entity-classic_version": {
      "node_id": "classic_version",
      "disambiguation_index": 0,
      "label": "classic version",
      "aliases": [
        "classic version"
      ],
      "types": [
        "previous work",
        "reference model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A well-established or widely recognized earlier work, serving as a reference model.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-4",
          "local_name": "classic version",
          "local_types": [
            "previous work",
            "reference model"
          ],
          "iri": "Entity-classic_version-Mention-1"
        }
      ],
      "relevance": 0.44482421875
    },
    "Entity-meaning_that_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.": {
      "node_id": "meaning_that_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.",
      "disambiguation_index": 0,
      "label": "meaning that the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P.",
      "aliases": [
        "meaning that the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P."
      ],
      "types": [
        "definition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A fact or link in a knowledge graph, represented by an RDF triple (e, P, e'), indicating that subject entity e is related to object entity e' via binary predicate P.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "meaning that the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P.",
          "local_types": [
            "definition"
          ],
          "iri": "Entity-meaning_that_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.-Mention-1"
        }
      ],
      "relevance": 0.444580078125
    },
    "Entity-for_each_entity_e_such_that_pt__e___e__hold": {
      "node_id": "for_each_entity_e_such_that_pt__e___e__hold",
      "disambiguation_index": 0,
      "label": "for each entity e such that Pt(e', e) holds",
      "aliases": [
        "for each entity e such that Pt(e', e) holds"
      ],
      "types": [
        "condition",
        "quantification"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The condition where a pair of entities (e, e') satisfies an IOP rule",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-3",
          "local_name": "for each entity e such that Pt(e', e) holds",
          "local_types": [
            "condition",
            "quantification"
          ],
          "iri": "Entity-for_each_entity_e_such_that_pt__e___e__hold-Mention-1"
        }
      ],
      "relevance": 0.444580078125
    },
    "Entity-we_choose_to_model_type_and_class_with_unary_predicate": {
      "node_id": "we_choose_to_model_type_and_class_with_unary_predicate",
      "disambiguation_index": 0,
      "label": "we choose to model types and classes with unary predicates",
      "aliases": [
        "we choose to model types and classes with unary predicates"
      ],
      "types": [
        "modeling",
        "unary predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The approach of modeling types and classes as unary predicates",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-3",
          "local_name": "we choose to model types and classes with unary predicates",
          "local_types": [
            "modeling",
            "unary predicate"
          ],
          "iri": "Entity-we_choose_to_model_type_and_class_with_unary_predicate-Mention-1"
        }
      ],
      "relevance": 0.4443359375
    },
    "Entity-google": {
      "node_id": "google",
      "disambiguation_index": 0,
      "label": "Google",
      "aliases": [
        "Google"
      ],
      "types": [
        "company",
        "search engine"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A multinational technology company that specializes in Internet-related services and products, including a popular search engine.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Google",
          "local_types": [
            "company",
            "search engine"
          ],
          "iri": "Entity-google-Mention-1"
        }
      ],
      "relevance": 0.444091796875
    },
    "Entity-alternative_formalism": {
      "node_id": "alternative_formalism",
      "disambiguation_index": 0,
      "label": "alternative formalisms",
      "aliases": [
        "alternative formalisms"
      ],
      "types": [
        "notation system",
        "notation",
        "alternative",
        "formalism",
        "mathematical structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A system or structure that provides an alternative way of expressing mathematical concepts or relationships.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "alternative formalisms",
          "local_types": [
            "notation system",
            "notation",
            "alternative",
            "formalism",
            "mathematical structure"
          ],
          "iri": "Entity-alternative_formalism-Mention-1"
        }
      ],
      "relevance": 0.444091796875
    },
    "Entity-a_non-recursive_rule": {
      "node_id": "a_non-recursive_rule",
      "disambiguation_index": 0,
      "label": "A non-recursive rule",
      "aliases": [
        "A non-recursive rule"
      ],
      "types": [
        "algorithm",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of algorithm or rule that does not involve recursive calls or self-references.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-6",
          "local_name": "A non-recursive rule",
          "local_types": [
            "algorithm",
            "rule"
          ],
          "iri": "Entity-a_non-recursive_rule-Mention-1"
        }
      ],
      "relevance": 0.44384765625
    },
    "Entity-sc__r___suppr_____e__e____body_r__e__e____": {
      "node_id": "sc__r___suppr_____e__e____body_r__e__e____",
      "disambiguation_index": 0,
      "label": "SC(r) = suppr / |{(e, e') : body_r(e, e')}|",
      "aliases": [
        "SC(r) = suppr / |{(e, e') : body_r(e, e')}|"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The standard confidence of a closed-path rule r, which measures how frequently the rule is true by counting the proportion of entity pairs that satisfy both the body and head of the rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "SC(r) = suppr / |{(e, e') : body_r(e, e')}|",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-sc__r___suppr_____e__e____body_r__e__e____-Mention-1"
        }
      ],
      "relevance": 0.443603515625
    },
    "Entity-which_have_at_least_one_hundred_fact": {
      "node_id": "which_have_at_least_one_hundred_fact",
      "disambiguation_index": 0,
      "label": "which have at least one hundred facts",
      "aliases": [
        "which have at least one hundred facts"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Unary predicates from DBpedia 3.8 and Wikidata with class as their second argument that each have at least one hundred facts",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-3",
          "local_name": "which have at least one hundred facts",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-which_have_at_least_one_hundred_fact-Mention-1"
        }
      ],
      "relevance": 0.443359375
    },
    "Entity-iophc__r1_": {
      "node_id": "iophc__r1_",
      "disambiguation_index": 0,
      "label": "IOPHC(r1)",
      "aliases": [
        "IOPHC(r1)"
      ],
      "types": [
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality measure for a rule r, calculated as the ratio of entities that satisfy both the head and body to those satisfying only the body.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "IOPHC(r1)",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-iophc__r1_-Mention-1"
        }
      ],
      "relevance": 0.443115234375
    },
    "Entity-entity_e_i": {
      "node_id": "entity_e_i",
      "disambiguation_index": 0,
      "label": "entity e_i",
      "aliases": [
        "entity e_i"
      ],
      "types": [
        "entity",
        "object"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An object that represents an entity in a knowledge graph or semantic network.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "entity e_i",
          "local_types": [
            "entity",
            "object"
          ],
          "iri": "Entity-entity_e_i-Mention-1"
        }
      ],
      "relevance": 0.4423828125
    },
    "Entity-sampling__shown_in_algorithm_2": {
      "node_id": "sampling__shown_in_algorithm_2",
      "disambiguation_index": 0,
      "label": "Sampling, shown in Algorithm 2",
      "aliases": [
        "Sampling, shown in Algorithm 2"
      ],
      "types": [
        "sampling technique",
        "methodology",
        "method",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sampling technique used for pruning irrelevant data",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "Sampling, shown in Algorithm 2",
          "local_types": [
            "sampling technique",
            "methodology",
            "method",
            "technique"
          ],
          "iri": "Entity-sampling__shown_in_algorithm_2-Mention-1"
        }
      ],
      "relevance": 0.44189453125
    },
    "Entity-rdf_database": {
      "node_id": "rdf_database",
      "disambiguation_index": 0,
      "label": "RDF databases",
      "aliases": [
        "RDF databases"
      ],
      "types": [
        "database system",
        "data",
        "knowledge base",
        "technology",
        "data storage",
        "format",
        "data storage system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A type of database system that stores and manages data in Resource Description Framework (RDF) format.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "RDF databases",
          "local_types": [
            "database system",
            "data",
            "knowledge base",
            "technology",
            "data storage",
            "format",
            "data storage system"
          ],
          "iri": "Entity-rdf_database-Mention-1"
        }
      ],
      "relevance": 0.441650390625
    },
    "Entity-method": {
      "node_id": "method",
      "disambiguation_index": 0,
      "label": "method",
      "aliases": [
        "method",
        "methods"
      ],
      "types": [
        "algorithm",
        "technique",
        "approach",
        "computational technique",
        "algorithmic process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic procedure used to achieve a specific goal or solve a problem.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "method",
          "local_types": [
            "approach",
            "technique"
          ],
          "iri": "Entity-method-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-5",
          "local_name": "method",
          "local_types": [
            "algorithmic process",
            "computational technique"
          ],
          "iri": "Entity-method-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-3",
          "local_name": "methods",
          "local_types": [
            "approach",
            "technique"
          ],
          "iri": "Entity-method-Mention-3"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-3",
          "local_name": "method",
          "local_types": [
            "approach",
            "technique"
          ],
          "iri": "Entity-method-Mention-4"
        },
        {
          "reference": "Section-13-Paragraph-6-Sentence-2",
          "local_name": "method",
          "local_types": [
            "algorithm",
            "approach"
          ],
          "iri": "Entity-method-Mention-5"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-5",
          "local_name": "method",
          "local_types": [
            "algorithm",
            "approach"
          ],
          "iri": "Entity-method-Mention-6"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "method",
          "local_types": [
            "algorithm",
            "approach"
          ],
          "iri": "Entity-method-Mention-7"
        },
        {
          "reference": "Section-18-Paragraph-2-Sentence-2",
          "local_name": "method",
          "local_types": [
            "algorithm",
            "technique"
          ],
          "iri": "Entity-method-Mention-8"
        }
      ],
      "relevance": 0.441650390625
    },
    "Entity-section_6": {
      "node_id": "section_6",
      "disambiguation_index": 0,
      "label": "Section 6",
      "aliases": [
        "Section 6",
        "Section 5"
      ],
      "types": [
        "part",
        "section",
        "part of a document",
        "chapter"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A part or chapter within a larger work, typically containing specific content or information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "Section 6",
          "local_types": [
            "part",
            "section",
            "part of a document",
            "chapter"
          ],
          "iri": "Entity-section_6-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "Section 5",
          "local_types": [
            "section",
            "part of a document",
            "chapter"
          ],
          "iri": "Entity-section_6-Mention-2"
        }
      ],
      "relevance": 0.44140625
    },
    "Entity-p1__x__z0_": {
      "node_id": "p1__x__z0_",
      "disambiguation_index": 0,
      "label": "P1(x, z0)",
      "aliases": [
        "P1(x, z0)"
      ],
      "types": [
        "function",
        "logical statement",
        "mathematical notation",
        "rule component",
        "predicate"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A logical statement or mathematical notation that represents a predicate in the context of an OP rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "P1(x, z0)",
          "local_types": [
            "function",
            "logical statement",
            "mathematical notation",
            "rule component",
            "predicate"
          ],
          "iri": "Entity-p1__x__z0_-Mention-1"
        }
      ],
      "relevance": 0.44140625
    },
    "Entity-e_i": {
      "node_id": "e_i",
      "disambiguation_index": 0,
      "label": "e_i",
      "aliases": [
        "E_i",
        "e_i"
      ],
      "types": [
        "mathematical concept",
        "vector"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept represented as a vector in a high-dimensional space.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "e_i",
          "local_types": [
            "mathematical concept",
            "vector"
          ],
          "iri": "Entity-e_i-Mention-1"
        }
      ],
      "relevance": 0.44140625
    },
    "Entity-potential_post-processing_step": {
      "node_id": "potential_post-processing_step",
      "disambiguation_index": 0,
      "label": "potential post-processing step",
      "aliases": [
        "potential post-processing step"
      ],
      "types": [
        "research topic",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique or procedure that can be applied after a primary processing stage to refine or enhance results.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-5-Sentence-2",
          "local_name": "potential post-processing step",
          "local_types": [
            "research topic",
            "methodology"
          ],
          "iri": "Entity-potential_post-processing_step-Mention-1"
        }
      ],
      "relevance": 0.44140625
    },
    "Entity-the_first_column": {
      "node_id": "the_first_column",
      "disambiguation_index": 0,
      "label": "the first column",
      "aliases": [
        "the first column"
      ],
      "types": [
        "column"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A vertical arrangement of data or information",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-4-Sentence-1",
          "local_name": "the first column",
          "local_types": [
            "column"
          ],
          "iri": "Entity-the_first_column-Mention-1"
        }
      ],
      "relevance": 0.441162109375
    },
    "Entity-if_all_variable_of_a_rule_are_closed_then_the_rule_is_closed": {
      "node_id": "if_all_variable_of_a_rule_are_closed_then_the_rule_is_closed",
      "disambiguation_index": 0,
      "label": "If all variables of a rule are closed then the rule is closed",
      "aliases": [
        "If all variables of a rule are closed then the rule is closed"
      ],
      "types": [
        "rule",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A concept or rule in which all variables are bound, making it a closed rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-2",
          "local_name": "If all variables of a rule are closed then the rule is closed",
          "local_types": [
            "rule",
            "concept"
          ],
          "iri": "Entity-if_all_variable_of_a_rule_are_closed_then_the_rule_is_closed-Mention-1"
        }
      ],
      "relevance": 0.44091796875
    },
    "Entity-ideal_learner": {
      "node_id": "ideal_learner",
      "disambiguation_index": 0,
      "label": "ideal learner",
      "aliases": [
        "ideal learner"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A hypothetical individual who serves as a standard of excellence or perfection in learning.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-2-Sentence-5",
          "local_name": "ideal learner",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-ideal_learner-Mention-1"
        }
      ],
      "relevance": 0.44091796875
    },
    "Entity-learning_each_target_predicate": {
      "node_id": "learning_each_target_predicate",
      "disambiguation_index": 0,
      "label": "learning each target predicate",
      "aliases": [
        "learning each target predicate"
      ],
      "types": [
        "process",
        "predicate_learning",
        "education process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of acquiring knowledge or understanding about specific predicates.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-8",
          "local_name": "learning each target predicate",
          "local_types": [
            "process",
            "predicate_learning",
            "education process"
          ],
          "iri": "Entity-learning_each_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.44091796875
    },
    "Entity-search_space": {
      "node_id": "search_space",
      "disambiguation_index": 0,
      "label": "search space",
      "aliases": [
        "search space"
      ],
      "types": [
        "domain",
        "scope"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set or area within which a search or inquiry takes place, encompassing all possible options or possibilities.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-3",
          "local_name": "search space",
          "local_types": [
            "domain",
            "scope"
          ],
          "iri": "Entity-search_space-Mention-1"
        }
      ],
      "relevance": 0.44091796875
    },
    "Entity-the_whole_path": {
      "node_id": "the_whole_path",
      "disambiguation_index": 0,
      "label": "The whole path",
      "aliases": [
        "The whole path"
      ],
      "types": [
        "path"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A composite predicate formed by chaining predicates along a path of entities that satisfy certain conditions.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "The whole path",
          "local_types": [
            "path"
          ],
          "iri": "Entity-the_whole_path-Mention-1"
        }
      ],
      "relevance": 0.44091796875
    },
    "Entity-wikipedia": {
      "node_id": "wikipedia",
      "disambiguation_index": 0,
      "label": "Wikipedia",
      "aliases": [
        "Wikipedia"
      ],
      "types": [
        "online encyclopedia",
        "information source",
        "website",
        "source"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A free online encyclopedia providing access to a vast repository of human knowledge",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "Wikipedia",
          "local_types": [
            "online encyclopedia",
            "information source",
            "website",
            "source"
          ],
          "iri": "Entity-wikipedia-Mention-1"
        }
      ],
      "relevance": 0.440673828125
    },
    "Entity-lemma": {
      "node_id": "lemma",
      "disambiguation_index": 0,
      "label": "lemma",
      "aliases": [
        "lemma"
      ],
      "types": [
        "concept",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept or rule in a logical framework that governs the application and extension of rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "lemma",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-lemma-Mention-1"
        }
      ],
      "relevance": 0.440673828125
    },
    "Entity-line_1_of_algorithm_1": {
      "node_id": "line_1_of_algorithm_1",
      "disambiguation_index": 0,
      "label": "line 1 of Algorithm 1",
      "aliases": [
        "line 1 of Algorithm 1"
      ],
      "types": [
        "location",
        "reference"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The first step or instruction in an algorithm, specifically Algorithm 1.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "line 1 of Algorithm 1",
          "local_types": [
            "location",
            "reference"
          ],
          "iri": "Entity-line_1_of_algorithm_1-Mention-1"
        }
      ],
      "relevance": 0.440673828125
    },
    "Entity-first_row": {
      "node_id": "first_row",
      "disambiguation_index": 0,
      "label": "first row",
      "aliases": [
        "first row"
      ],
      "types": [
        "data structure",
        "table"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The initial or primary sequence of elements within a table or data structure.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-4",
          "local_name": "first row",
          "local_types": [
            "data structure",
            "table"
          ],
          "iri": "Entity-first_row-Mention-1"
        }
      ],
      "relevance": 0.4404296875
    },
    "Entity-existential_rule": {
      "node_id": "existential_rule",
      "disambiguation_index": 0,
      "label": "existential rules",
      "aliases": [
        "existential rules"
      ],
      "types": [
        "logic",
        "rule type",
        "rule-based system",
        "existential rule",
        "rule",
        "logical construct",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of logical principles governing the existence or non-existence of entities",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "existential rules",
          "local_types": [
            "logic",
            "rule-based system",
            "existential rule",
            "rule",
            "logical construct",
            "mathematics"
          ],
          "iri": "Entity-existential_rule-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "existential rules",
          "local_types": [
            "rule type"
          ],
          "iri": "Entity-existential_rule-Mention-2"
        }
      ],
      "relevance": 0.440185546875
    },
    "Entity-r2": {
      "node_id": "r2",
      "disambiguation_index": 0,
      "label": "r2",
      "aliases": [
        "r2"
      ],
      "types": [
        "notation",
        "identifier"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A notation or identifier used to distinguish between multiple versions of a concept or entity.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "r2",
          "local_types": [
            "notation",
            "identifier"
          ],
          "iri": "Entity-r2-Mention-1"
        }
      ],
      "relevance": 0.440185546875
    },
    "Entity-e1": {
      "node_id": "e1",
      "disambiguation_index": 0,
      "label": "E1",
      "aliases": [
        "e1",
        "E1"
      ],
      "types": [
        "object",
        "concept",
        "set theory concept",
        "mathematical entity",
        "parameter",
        "variable",
        "mathematical object",
        "matrix",
        "entity",
        "set",
        "vector"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The set of entities related to a target predicate Pt through either Pt(e,e') or Pt(e',e)",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-5",
          "local_name": "E1",
          "local_types": [
            "set theory concept",
            "mathematical entity",
            "set",
            "concept"
          ],
          "iri": "Entity-e1-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-4",
          "local_name": "E1",
          "local_types": [
            "object",
            "mathematical entity",
            "parameter",
            "variable",
            "mathematical object",
            "matrix",
            "entity",
            "vector"
          ],
          "iri": "Entity-e1-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-5",
          "local_name": "e1",
          "local_types": [
            "entity",
            "concept"
          ],
          "iri": "Entity-e1-Mention-3"
        }
      ],
      "relevance": 0.43994140625
    },
    "Entity-the_count_is_1": {
      "node_id": "the_count_is_1",
      "disambiguation_index": 0,
      "label": "the count is 1",
      "aliases": [
        "the count is 1"
      ],
      "types": [
        "result",
        "output"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of entities satisfying the head of an IOP rule, specifically in this example, only e2 satisfies the rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-7",
          "local_name": "the count is 1",
          "local_types": [
            "result",
            "output"
          ],
          "iri": "Entity-the_count_is_1-Mention-1"
        }
      ],
      "relevance": 0.43994140625
    },
    "Entity-_satisfies__support_": {
      "node_id": "_satisfies__support_",
      "disambiguation_index": 0,
      "label": "(satisfies, support)",
      "aliases": [
        "(satisfies, support)"
      ],
      "types": [
        "notation",
        "convention"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard or guideline that specifies how to fulfill a particular requirement",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-1",
          "local_name": "(satisfies, support)",
          "local_types": [
            "notation",
            "convention"
          ],
          "iri": "Entity-_satisfies__support_-Mention-1"
        }
      ],
      "relevance": 0.439697265625
    },
    "Entity-existential_variable": {
      "node_id": "existential_variable",
      "disambiguation_index": 0,
      "label": "existential variables",
      "aliases": [
        "existential variables"
      ],
      "types": [
        "variable",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Variables that represent unknown or unbound values, often used to express quantification over a domain.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "existential variables",
          "local_types": [
            "variable",
            "mathematical concept"
          ],
          "iri": "Entity-existential_variable-Mention-1"
        }
      ],
      "relevance": 0.439697265625
    },
    "Entity-and_head_coverage": {
      "node_id": "and_head_coverage",
      "disambiguation_index": 0,
      "label": "and head coverage",
      "aliases": [
        "and head coverage"
      ],
      "types": [
        "mathematical concept",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The measure of how many facts satisfying a rule head can be inferred by satisfying its body.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "and head coverage",
          "local_types": [
            "mathematical concept",
            "concept"
          ],
          "iri": "Entity-and_head_coverage-Mention-1"
        }
      ],
      "relevance": 0.439208984375
    },
    "Entity-the_row_index_of_element_with_value___car_of_v1__a__p1___a__p2___...__a__pm__": {
      "node_id": "the_row_index_of_element_with_value___car_of_v1__a__p1___a__p2___...__a__pm__",
      "disambiguation_index": 0,
      "label": "the row index of elements with value >= Car of V^1(A(P1)*A(P2)*...*A(Pm))",
      "aliases": [
        "the row index of elements with value >= Car of V^1(A(P1)*A(P2)*...*A(Pm))"
      ],
      "types": [
        "index",
        "elements",
        "V^1",
        "Car",
        "A",
        "P1",
        "P2",
        "...",
        "Pm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of entities that satisfy both conditions: being an argument in the body of a rule and also satisfying the head of the same rule, given a minimum cardinality threshold (Car).",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "the row index of elements with value >= Car of V^1(A(P1)*A(P2)*...*A(Pm))",
          "local_types": [
            "index",
            "elements",
            "V^1",
            "Car",
            "A",
            "P1",
            "P2",
            "...",
            "Pm"
          ],
          "iri": "Entity-the_row_index_of_element_with_value___car_of_v1__a__p1___a__p2___...__a__pm__-Mention-1"
        }
      ],
      "relevance": 0.439208984375
    },
    "Entity-data_type_validation": {
      "node_id": "data_type_validation",
      "disambiguation_index": 0,
      "label": "data type validation",
      "aliases": [
        "data type validation"
      ],
      "types": [
        "process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of checking the correctness or validity of data based on its expected format or structure.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-2",
          "local_name": "data type validation",
          "local_types": [
            "process"
          ],
          "iri": "Entity-data_type_validation-Mention-1"
        }
      ],
      "relevance": 0.43896484375
    },
    "Entity-learning": {
      "node_id": "learning",
      "disambiguation_index": 0,
      "label": "learning",
      "aliases": [
        "learning"
      ],
      "types": [
        "process",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process or method by which individuals acquire knowledge, skills, and understanding.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-2",
          "local_name": "learning",
          "local_types": [
            "process",
            "method"
          ],
          "iri": "Entity-learning-Mention-1"
        }
      ],
      "relevance": 0.43896484375
    },
    "Entity-future_work": {
      "node_id": "future_work",
      "disambiguation_index": 0,
      "label": "future work",
      "aliases": [
        "future work"
      ],
      "types": [
        "plan",
        "research agenda",
        "project plan",
        "academic goal",
        "work",
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A planned or intended research agenda, project plan, or academic goal that has not yet been undertaken.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-5-Sentence-2",
          "local_name": "future work",
          "local_types": [
            "plan",
            "research agenda",
            "project plan",
            "academic goal",
            "work",
            "research"
          ],
          "iri": "Entity-future_work-Mention-1"
        }
      ],
      "relevance": 0.43896484375
    },
    "Entity-a_rule_are_closed": {
      "node_id": "a_rule_are_closed",
      "disambiguation_index": 0,
      "label": "a rule are closed",
      "aliases": [
        "a rule are closed"
      ],
      "types": [
        "rule",
        "state"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A situation where all variables in an open path rule have occurred in at least two distinct predicate terms, making the rule itself 'closed'.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-2",
          "local_name": "a rule are closed",
          "local_types": [
            "rule",
            "state"
          ],
          "iri": "Entity-a_rule_are_closed-Mention-1"
        }
      ],
      "relevance": 0.4384765625
    },
    "Entity-p0": {
      "node_id": "p0",
      "disambiguation_index": 0,
      "label": "P0",
      "aliases": [
        "P0"
      ],
      "types": [
        "scoring function",
        "notation",
        "relation",
        "function",
        "predicate",
        "linking concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical function that represents the relationship between two entities, used to compute similarity or distance measures.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-4",
          "local_name": "P0",
          "local_types": [
            "scoring function",
            "notation",
            "relation",
            "function",
            "predicate"
          ],
          "iri": "Entity-p0-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-5",
          "local_name": "P0",
          "local_types": [
            "relation",
            "predicate",
            "linking concept"
          ],
          "iri": "Entity-p0-Mention-2"
        }
      ],
      "relevance": 0.438232421875
    },
    "Entity-schema_information": {
      "node_id": "schema_information",
      "disambiguation_index": 0,
      "label": "schema information",
      "aliases": [
        "schema information"
      ],
      "types": [
        "metadata",
        "data description"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Definition or structure of data, providing metadata and describing the organization and relationships within it",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "schema information",
          "local_types": [
            "metadata",
            "data description"
          ],
          "iri": "Entity-schema_information-Mention-1"
        }
      ],
      "relevance": 0.438232421875
    },
    "Entity-for": {
      "node_id": "for",
      "disambiguation_index": 0,
      "label": "for",
      "aliases": [
        "for",
        "For"
      ],
      "types": [
        "preposition",
        "loop type",
        "phrase",
        "rule",
        "formula",
        "control structure",
        "programming construct"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A loop control statement or a programming construct used to repeat a sequence of instructions",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-8",
          "local_name": "for",
          "local_types": [
            "control structure",
            "programming construct",
            "loop type"
          ],
          "iri": "Entity-for-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "For",
          "local_types": [
            "preposition",
            "phrase"
          ],
          "iri": "Entity-for-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "For",
          "local_types": [
            "formula",
            "preposition",
            "rule"
          ],
          "iri": "Entity-for-Mention-3"
        }
      ],
      "relevance": 0.438232421875
    },
    "Entity-novel_tree_shape": {
      "node_id": "novel_tree_shape",
      "disambiguation_index": 0,
      "label": "novel tree shapes",
      "aliases": [
        "novel tree shapes"
      ],
      "types": [
        "tree shape",
        "innovation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Unique and creative forms of trees or their branching structures",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-2",
          "local_name": "novel tree shapes",
          "local_types": [
            "tree shape",
            "innovation"
          ],
          "iri": "Entity-novel_tree_shape-Mention-1"
        }
      ],
      "relevance": 0.438232421875
    },
    "Entity-to_find_distinct_e_s": {
      "node_id": "to_find_distinct_e_s",
      "disambiguation_index": 0,
      "label": "To find distinct e's",
      "aliases": [
        "To find distinct e's"
      ],
      "types": [
        "task",
        "algorithmic process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A procedure or operation aimed at identifying unique instances of a particular entity 'e'.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "To find distinct e's",
          "local_types": [
            "task",
            "algorithmic process"
          ],
          "iri": "Entity-to_find_distinct_e_s-Mention-1"
        }
      ],
      "relevance": 0.43798828125
    },
    "Entity-system": {
      "node_id": "system",
      "disambiguation_index": 0,
      "label": "system",
      "aliases": [
        "system"
      ],
      "types": [
        "algorithm",
        "software",
        "software system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software or algorithmic framework designed to perform specific tasks or operations.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-3",
          "local_name": "system",
          "local_types": [
            "software system",
            "algorithm"
          ],
          "iri": "Entity-system-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-4",
          "local_name": "system",
          "local_types": [
            "software system"
          ],
          "iri": "Entity-system-Mention-2"
        },
        {
          "reference": "Section-16-Paragraph-2-Sentence-4",
          "local_name": "system",
          "local_types": [
            "software",
            "algorithm"
          ],
          "iri": "Entity-system-Mention-3"
        }
      ],
      "relevance": 0.43798828125
    },
    "Entity-new_data_entry": {
      "node_id": "new_data_entry",
      "disambiguation_index": 0,
      "label": "new data entry",
      "aliases": [
        "new data entry"
      ],
      "types": [
        "data processing",
        "information system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of adding newly collected or generated information into an organized system.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "new data entry",
          "local_types": [
            "data processing",
            "information system"
          ],
          "iri": "Entity-new_data_entry-Mention-1"
        }
      ],
      "relevance": 0.43798828125
    },
    "Entity-front_of_the_implication_arrow": {
      "node_id": "front_of_the_implication_arrow",
      "disambiguation_index": 0,
      "label": "front of the implication arrow",
      "aliases": [
        "front of the implication arrow",
        "the front of the implication arrow"
      ],
      "types": [
        "location",
        "position"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The location or position immediately preceding an implication arrow, typically indicating the subject entity of a closed-path rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-4",
          "local_name": "front of the implication arrow",
          "local_types": [
            "location",
            "position"
          ],
          "iri": "Entity-front_of_the_implication_arrow-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-4",
          "local_name": "the front of the implication arrow",
          "local_types": [
            "location",
            "position"
          ],
          "iri": "Entity-front_of_the_implication_arrow-Mention-2"
        }
      ],
      "relevance": 0.437744140625
    },
    "Entity-human__x__x__-__citizenof__x__z1___country__z1__z1_": {
      "node_id": "human__x__x__-__citizenof__x__z1___country__z1__z1_",
      "disambiguation_index": 0,
      "label": "human(x, x)  -> citizenOf(x, z1) ^ country(z1, z1)",
      "aliases": [
        "human(x, x)  -> citizenOf(x, z1) ^ country(z1, z1)",
        "human(x, x) -> citizenOf(x, z1) ^ country(z1, z1)"
      ],
      "types": [
        "IOP rule",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A rule that specifies a person's citizenship and country of origin based on their humanity.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "human(x, x)  -> citizenOf(x, z1) ^ country(z1, z1)",
          "local_types": [
            "IOP rule",
            "rule"
          ],
          "iri": "Entity-human__x__x__-__citizenof__x__z1___country__z1__z1_-Mention-1"
        }
      ],
      "relevance": 0.437744140625
    },
    "Entity-fig_._1": {
      "node_id": "fig_._1",
      "disambiguation_index": 0,
      "label": "Fig. 1",
      "aliases": [
        "Fig. 3",
        "Fig. 2",
        "Fig. 1"
      ],
      "types": [
        "reference",
        "diagram",
        "illustration",
        "image",
        "visual representation",
        "figure",
        "figure reference"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A visual representation or diagram",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "Fig. 1",
          "local_types": [
            "illustration",
            "figure reference",
            "figure",
            "image"
          ],
          "iri": "Entity-fig_._1-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-2",
          "local_name": "Fig. 2",
          "local_types": [
            "illustration",
            "reference",
            "figure"
          ],
          "iri": "Entity-fig_._1-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "Fig. 2",
          "local_types": [
            "illustration",
            "reference",
            "figure",
            "figure reference"
          ],
          "iri": "Entity-fig_._1-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "Fig. 2",
          "local_types": [
            "figure"
          ],
          "iri": "Entity-fig_._1-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "Fig. 3",
          "local_types": [
            "diagram",
            "illustration",
            "image",
            "visual representation",
            "figure"
          ],
          "iri": "Entity-fig_._1-Mention-5"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-2",
          "local_name": "Fig. 3",
          "local_types": [
            "figure",
            "diagram"
          ],
          "iri": "Entity-fig_._1-Mention-6"
        }
      ],
      "relevance": 0.4375
    },
    "Entity-p": {
      "node_id": "p",
      "disambiguation_index": 0,
      "label": "P",
      "aliases": [
        "P"
      ],
      "types": [
        "class",
        "datatype",
        "predicates",
        "mathematical concept",
        "function in logic",
        "property",
        "set",
        "function",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A binary relation or property that connects two entities, representing an association between them.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "P",
          "local_types": [
            "predicate",
            "property"
          ],
          "iri": "Entity-p-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "P",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "P",
          "local_types": [
            "class",
            "datatype"
          ],
          "iri": "Entity-p-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "P",
          "local_types": [
            "predicates",
            "mathematical concept",
            "function in logic",
            "set",
            "predicate"
          ],
          "iri": "Entity-p-Mention-4"
        }
      ],
      "relevance": 0.4375
    },
    "Entity-predicate": {
      "node_id": "predicate",
      "disambiguation_index": 0,
      "label": "predicates",
      "aliases": [
        "Predicates",
        "predicates",
        "predicate"
      ],
      "types": [
        "conceptual framework",
        "proposition",
        "term",
        "statement",
        "mathematical object",
        "predicate logic",
        "logical operator",
        "rule",
        "logical statement",
        "function",
        "predicate",
        "relation",
        "logical structure",
        "concept",
        "mathematical term",
        "mathematical concept",
        "logical expression",
        "property",
        "logical construct",
        "statements",
        "logical concept",
        "logical expressions",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statement that expresses a relationship between one or more entities",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "predicates",
          "local_types": [
            "relation",
            "function"
          ],
          "iri": "Entity-predicate-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "predicates",
          "local_types": [
            "logical concept",
            "mathematics"
          ],
          "iri": "Entity-predicate-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-2",
          "local_name": "predicates",
          "local_types": [
            "mathematical term",
            "logical concept",
            "proposition",
            "logical statement"
          ],
          "iri": "Entity-predicate-Mention-3"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-5",
          "local_name": "predicates",
          "local_types": [
            "logical concept",
            "mathematical object"
          ],
          "iri": "Entity-predicate-Mention-4"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-5",
          "local_name": "Predicates",
          "local_types": [
            "concept",
            "predicate"
          ],
          "iri": "Entity-predicate-Mention-5"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-4",
          "local_name": "predicate",
          "local_types": [
            "relation",
            "property"
          ],
          "iri": "Entity-predicate-Mention-6"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "predicate",
          "local_types": [
            "concept",
            "term"
          ],
          "iri": "Entity-predicate-Mention-7"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-2",
          "local_name": "predicates",
          "local_types": [
            "logical expressions",
            "statements"
          ],
          "iri": "Entity-predicate-Mention-8"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "predicate",
          "local_types": [
            "concept",
            "function"
          ],
          "iri": "Entity-predicate-Mention-9"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "predicate",
          "local_types": [
            "logical construct",
            "mathematical concept"
          ],
          "iri": "Entity-predicate-Mention-10"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "predicate",
          "local_types": [
            "term",
            "concept",
            "statement",
            "logical statement"
          ],
          "iri": "Entity-predicate-Mention-11"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "predicate",
          "local_types": [
            "logical statement",
            "statement"
          ],
          "iri": "Entity-predicate-Mention-12"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "predicate",
          "local_types": [
            "concept",
            "statement",
            "logical statement",
            "rule",
            "logical construct"
          ],
          "iri": "Entity-predicate-Mention-13"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "predicate",
          "local_types": [
            "logical statement",
            "statement"
          ],
          "iri": "Entity-predicate-Mention-14"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-2",
          "local_name": "predicate",
          "local_types": [
            "logical statement",
            "relation"
          ],
          "iri": "Entity-predicate-Mention-15"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-9",
          "local_name": "predicates",
          "local_types": [
            "concept",
            "logical construct"
          ],
          "iri": "Entity-predicate-Mention-16"
        },
        {
          "reference": "Section-14-Paragraph-5-Sentence-1",
          "local_name": "predicates",
          "local_types": [
            "concept",
            "property"
          ],
          "iri": "Entity-predicate-Mention-17"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-2",
          "local_name": "predicates",
          "local_types": [
            "conceptual framework",
            "relation",
            "logical structure",
            "concept"
          ],
          "iri": "Entity-predicate-Mention-18"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-4",
          "local_name": "predicates",
          "local_types": [
            "concept",
            "logical construct"
          ],
          "iri": "Entity-predicate-Mention-19"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-5",
          "local_name": "predicate",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-predicate-Mention-20"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-2",
          "local_name": "predicates",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-predicate-Mention-21"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-4",
          "local_name": "predicates",
          "local_types": [
            "logical expression",
            "rule"
          ],
          "iri": "Entity-predicate-Mention-22"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-3",
          "local_name": "predicate",
          "local_types": [
            "logical operator",
            "function"
          ],
          "iri": "Entity-predicate-Mention-23"
        },
        {
          "reference": "Section-17-Paragraph-2-Sentence-3",
          "local_name": "predicates",
          "local_types": [
            "logical operator",
            "predicate logic"
          ],
          "iri": "Entity-predicate-Mention-24"
        },
        {
          "reference": "Section-17-Paragraph-5-Sentence-1",
          "local_name": "predicates",
          "local_types": [
            "proposition",
            "rule",
            "logical statement"
          ],
          "iri": "Entity-predicate-Mention-25"
        }
      ],
      "relevance": 0.4375
    },
    "Entity-condition": {
      "node_id": "condition",
      "disambiguation_index": 0,
      "label": "conditions",
      "aliases": [
        "conditions"
      ],
      "types": [
        "requirements",
        "constraints"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Rules or limitations that must be met in order to satisfy a particular standard, requirement, or expectation.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "conditions",
          "local_types": [
            "requirements",
            "constraints"
          ],
          "iri": "Entity-condition-Mention-1"
        }
      ],
      "relevance": 0.437255859375
    },
    "Entity-computer_scientist": {
      "node_id": "computer_scientist",
      "disambiguation_index": 0,
      "label": "computer scientists",
      "aliases": [
        "computer scientists"
      ],
      "types": [
        "professionals",
        "technology",
        "category",
        "profession",
        "science",
        "academic field",
        "researcher",
        "researchers",
        "group"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Professionals who design, develop, and apply the principles of computing to create innovative solutions.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "computer scientists",
          "local_types": [
            "professionals",
            "technology",
            "category",
            "profession",
            "science",
            "academic field",
            "researcher",
            "researchers",
            "group"
          ],
          "iri": "Entity-computer_scientist-Mention-1"
        }
      ],
      "relevance": 0.43701171875
    },
    "Entity-a_fact": {
      "node_id": "a_fact",
      "disambiguation_index": 0,
      "label": "A fact",
      "aliases": [
        "A fact"
      ],
      "types": [
        "concept",
        "idea"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A statement or assertion that describes a relationship between two entities, typically represented by an RDF triple.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "A fact",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-a_fact-Mention-1"
        }
      ],
      "relevance": 0.43701171875
    },
    "Entity-nativelanguage__x__z3_": {
      "node_id": "nativelanguage__x__z3_",
      "disambiguation_index": 0,
      "label": "nativeLanguage(x, z3)",
      "aliases": [
        "nativeLanguage(x, z3)"
      ],
      "types": [
        "association",
        "language",
        "relation",
        "logical expression",
        "attribute",
        "technical term",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity 'nativeLanguage(x, z3)' refers to a property shape that constrains an argument of the target predicate human(x), expressing that each entity x satisfying human(x) should have a native language specified by z3.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "nativeLanguage(x, z3)",
          "local_types": [
            "relation",
            "association"
          ],
          "iri": "Entity-nativelanguage__x__z3_-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "nativeLanguage(x, z3)",
          "local_types": [
            "language",
            "logical expression",
            "attribute",
            "technical term",
            "predicate"
          ],
          "iri": "Entity-nativelanguage__x__z3_-Mention-2"
        }
      ],
      "relevance": 0.43701171875
    },
    "Entity-for_example__we_should_have_the_following_similarity_": {
      "node_id": "for_example__we_should_have_the_following_similarity_",
      "disambiguation_index": 0,
      "label": "For example, we should have the following similarities:",
      "aliases": [
        "For example, we should have the following similarities:"
      ],
      "types": [
        "example",
        "similarities"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of comparable instances or patterns used to illustrate a point",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-2",
          "local_name": "For example, we should have the following similarities:",
          "local_types": [
            "example",
            "similarities"
          ],
          "iri": "Entity-for_example__we_should_have_the_following_similarity_-Mention-1"
        }
      ],
      "relevance": 0.43701171875
    },
    "Entity-_a__pk___k_in_1_.._m_": {
      "node_id": "_a__pk___k_in_1_.._m_",
      "disambiguation_index": 0,
      "label": "{A(Pk) | k in 1..m}",
      "aliases": [
        "{A(Pk) | k in 1..m}"
      ],
      "types": [
        "mathematical expression",
        "binary values",
        "matrix",
        "representation of K",
        "set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-4",
          "local_name": "{A(Pk) | k in 1..m}",
          "local_types": [
            "mathematical expression",
            "binary values",
            "matrix",
            "representation of K",
            "set"
          ],
          "iri": "Entity-_a__pk___k_in_1_.._m_-Mention-1"
        }
      ],
      "relevance": 0.436767578125
    },
    "Entity-the_explanatory_power_of_the_rule": {
      "node_id": "the_explanatory_power_of_the_rule",
      "disambiguation_index": 0,
      "label": "the explanatory power of the rule",
      "aliases": [
        "the explanatory power of the rule"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept that measures how well a rule explains or predicts its conclusions, indicating the proportion of facts supporting the rule's head that can be inferred by satisfying the rule body.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-4",
          "local_name": "the explanatory power of the rule",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_explanatory_power_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.436767578125
    },
    "Entity-sample": {
      "node_id": "sample",
      "disambiguation_index": 0,
      "label": "sample",
      "aliases": [
        "sample"
      ],
      "types": [
        "data set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of data used for testing or training a model.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "sample",
          "local_types": [
            "data set"
          ],
          "iri": "Entity-sample-Mention-1"
        }
      ],
      "relevance": 0.4365234375
    },
    "Entity-depth-first_questioning_strategy": {
      "node_id": "depth-first_questioning_strategy",
      "disambiguation_index": 0,
      "label": "depth-first questioning strategy",
      "aliases": [
        "depth-first questioning strategy"
      ],
      "types": [
        "methodology",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or approach that involves asking subsequent questions in a hierarchical and systematic manner.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-7",
          "local_name": "depth-first questioning strategy",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-depth-first_questioning_strategy-Mention-1"
        }
      ],
      "relevance": 0.4365234375
    },
    "Entity-every_instantiation_linking_the_body_to_the_head": {
      "node_id": "every_instantiation_linking_the_body_to_the_head",
      "disambiguation_index": 0,
      "label": "every instantiation linking the body to the head",
      "aliases": [
        "every instantiation linking the body to the head"
      ],
      "types": [
        "instantiation",
        "linking"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure of the minimum number of distinct instantiations of an IOP rule's head predicate, given a specific body predicate.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-4",
          "local_name": "every instantiation linking the body to the head",
          "local_types": [
            "instantiation",
            "linking"
          ],
          "iri": "Entity-every_instantiation_linking_the_body_to_the_head-Mention-1"
        }
      ],
      "relevance": 0.4365234375
    },
    "Entity-maximum_number_of_predicate": {
      "node_id": "maximum_number_of_predicate",
      "disambiguation_index": 0,
      "label": "maximum number of predicates",
      "aliases": [
        "maximum number of predicates"
      ],
      "types": [
        "parameter",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The upper limit on the quantity or scope of logical relationships or statements",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-3",
          "local_name": "maximum number of predicates",
          "local_types": [
            "parameter",
            "variable"
          ],
          "iri": "Entity-maximum_number_of_predicate-Mention-1"
        }
      ],
      "relevance": 0.436279296875
    },
    "Entity-entity_that_satisfy_the_second_argument_of_the_body": {
      "node_id": "entity_that_satisfy_the_second_argument_of_the_body",
      "disambiguation_index": 0,
      "label": "entities that satisfy the second argument of the body",
      "aliases": [
        "entities that satisfy the second argument of the body"
      ],
      "types": [
        "argument",
        "body",
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Entities that, when considering a specific IOP rule, satisfy the second argument (i.e., the body) of the rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "entities that satisfy the second argument of the body",
          "local_types": [
            "argument",
            "body",
            "entity"
          ],
          "iri": "Entity-entity_that_satisfy_the_second_argument_of_the_body-Mention-1"
        }
      ],
      "relevance": 0.436279296875
    },
    "Entity-composite_predicate": {
      "node_id": "composite_predicate",
      "disambiguation_index": 0,
      "label": "composite predicate",
      "aliases": [
        "composite predicate"
      ],
      "types": [
        "logic",
        "mathematical concept",
        "logical structure",
        "predicate",
        "composite"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical structure composed of multiple predicates or propositions connected by a logical operator.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "composite predicate",
          "local_types": [
            "logic",
            "mathematical concept",
            "logical structure",
            "predicate",
            "composite"
          ],
          "iri": "Entity-composite_predicate-Mention-1"
        }
      ],
      "relevance": 0.43603515625
    },
    "Entity-terminating_node": {
      "node_id": "terminating_node",
      "disambiguation_index": 0,
      "label": "terminating node",
      "aliases": [
        "terminating node"
      ],
      "types": [
        "node",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point in a data structure or graph that marks the end of a path.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-4",
          "local_name": "terminating node",
          "local_types": [
            "node",
            "data structure"
          ],
          "iri": "Entity-terminating_node-Mention-1"
        }
      ],
      "relevance": 0.43603515625
    },
    "Entity-p___x__t___pt__x__y___p1__y__z___p2__z__t_": {
      "node_id": "p___x__t___pt__x__y___p1__y__z___p2__z__t_",
      "disambiguation_index": 0,
      "label": "P*(x, t) = Pt(x, y) ^ P1(y, z) ^ P2(z, t)",
      "aliases": [
        "P*(x, t) = Pt(x, y) ^ P1(y, z) ^ P2(z, t)"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A composite predicate that represents a path of entities connected by predicates Pt, P1, and P2.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "P*(x, t) = Pt(x, y) ^ P1(y, z) ^ P2(z, t)",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-p___x__t___pt__x__y___p1__y__z___p2__z__t_-Mention-1"
        }
      ],
      "relevance": 0.43603515625
    },
    "Entity-the_validation_of_rdf_database": {
      "node_id": "the_validation_of_rdf_database",
      "disambiguation_index": 0,
      "label": "the validation of RDF databases",
      "aliases": [
        "the validation of RDF databases"
      ],
      "types": [
        "process",
        "validation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of verifying that RDF databases conform to defined constraints and rules.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "the validation of RDF databases",
          "local_types": [
            "process",
            "validation"
          ],
          "iri": "Entity-the_validation_of_rdf_database-Mention-1"
        }
      ],
      "relevance": 0.43603515625
    },
    "Entity-unary_predicate": {
      "node_id": "unary_predicate",
      "disambiguation_index": 0,
      "label": "Unary predicates",
      "aliases": [
        "Unary predicates",
        "unary predicates"
      ],
      "types": [
        "concept",
        "predicates",
        "mathematical concept",
        "predicate logic",
        "logical operator",
        "logical concept",
        "predicate",
        "attributes",
        "mathematics"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A type of predicate that takes only one argument and expresses a property or attribute about an individual, often used in formal logic and mathematical frameworks.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "Unary predicates",
          "local_types": [
            "concept",
            "predicate"
          ],
          "iri": "Entity-unary_predicate-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "unary predicates",
          "local_types": [
            "concept",
            "logical concept",
            "predicate"
          ],
          "iri": "Entity-unary_predicate-Mention-2"
        },
        {
          "reference": "Section-14-Paragraph-5-Sentence-3",
          "local_name": "unary predicates",
          "local_types": [
            "predicate logic"
          ],
          "iri": "Entity-unary_predicate-Mention-3"
        },
        {
          "reference": "Section-14-Paragraph-6-Sentence-1",
          "local_name": "unary predicates",
          "local_types": [
            "logical operator",
            "mathematical concept"
          ],
          "iri": "Entity-unary_predicate-Mention-4"
        },
        {
          "reference": "Section-14-Paragraph-6-Sentence-3",
          "local_name": "unary predicates",
          "local_types": [
            "predicate logic",
            "predicate",
            "mathematics"
          ],
          "iri": "Entity-unary_predicate-Mention-5"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-3",
          "local_name": "unary predicates",
          "local_types": [
            "predicate logic",
            "mathematics"
          ],
          "iri": "Entity-unary_predicate-Mention-6"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "unary predicates",
          "local_types": [
            "concept",
            "predicate"
          ],
          "iri": "Entity-unary_predicate-Mention-7"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-2",
          "local_name": "unary predicates",
          "local_types": [
            "predicates",
            "logical concept",
            "predicate",
            "attributes"
          ],
          "iri": "Entity-unary_predicate-Mention-8"
        }
      ],
      "relevance": 0.435302734375
    },
    "Entity-figure": {
      "node_id": "figure",
      "disambiguation_index": 0,
      "label": "figures",
      "aliases": [
        "figures"
      ],
      "types": [
        "data set",
        "statistical data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of numerical data used to represent statistical information.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-2",
          "local_name": "figures",
          "local_types": [
            "data set",
            "statistical data"
          ],
          "iri": "Entity-figure-Mention-1"
        }
      ],
      "relevance": 0.435302734375
    },
    "Entity-also_equivalently_written_here_a_the_binary_fact_p__e__e_": {
      "node_id": "also_equivalently_written_here_a_the_binary_fact_p__e__e_",
      "disambiguation_index": 0,
      "label": "also equivalently written here as the binary fact P( e, e )",
      "aliases": [
        "also equivalently written here as the binary fact P( e, e )"
      ],
      "types": [
        "equivalence",
        "binary fact"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A unary predicate or a self-loop representing class assertions expressed in an RDF triple.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "also equivalently written here as the binary fact P( e, e )",
          "local_types": [
            "equivalence",
            "binary fact"
          ],
          "iri": "Entity-also_equivalently_written_here_a_the_binary_fact_p__e__e_-Mention-1"
        }
      ],
      "relevance": 0.43505859375
    },
    "Entity-ev__": {
      "node_id": "ev__",
      "disambiguation_index": 0,
      "label": "Ev()",
      "aliases": [
        "Ev()"
      ],
      "types": [
        "algorithm",
        "evaluation method",
        "evaluation",
        "evaluation function",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or algorithm used to evaluate or assess something",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "Ev()",
          "local_types": [
            "algorithm",
            "evaluation method",
            "evaluation",
            "evaluation function",
            "function"
          ],
          "iri": "Entity-ev__-Mention-1"
        }
      ],
      "relevance": 0.434814453125
    },
    "Entity-prior_sampling": {
      "node_id": "prior_sampling",
      "disambiguation_index": 0,
      "label": "prior Sampling",
      "aliases": [
        "prior Sampling"
      ],
      "types": [
        "sampling technique",
        "data processing method",
        "pruning method",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or technique for selecting a subset of data before processing",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-1-Sentence-1",
          "local_name": "prior Sampling",
          "local_types": [
            "sampling technique",
            "data processing method",
            "pruning method",
            "technique"
          ],
          "iri": "Entity-prior_sampling-Mention-1"
        }
      ],
      "relevance": 0.4345703125
    },
    "Entity-confidence_widely_used_in_association_rule_mining": {
      "node_id": "confidence_widely_used_in_association_rule_mining",
      "disambiguation_index": 0,
      "label": "confidence widely used in association rule mining",
      "aliases": [
        "confidence widely used in association rule mining"
      ],
      "types": [
        "concept",
        "rule quality metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of the certainty or reliability of a discovered pattern or relationship",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "confidence widely used in association rule mining",
          "local_types": [
            "concept",
            "rule quality metric"
          ],
          "iri": "Entity-confidence_widely_used_in_association_rule_mining-Mention-1"
        }
      ],
      "relevance": 0.43408203125
    },
    "Entity-yq": {
      "node_id": "yq",
      "disambiguation_index": 0,
      "label": "y^q",
      "aliases": [
        "y^q"
      ],
      "types": [
        "variable",
        "binding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A variable or binding representing a value at a specific position in a tree structure.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "y^q",
          "local_types": [
            "variable",
            "binding"
          ],
          "iri": "Entity-yq-Mention-1"
        }
      ],
      "relevance": 0.43408203125
    },
    "Entity-p2": {
      "node_id": "p2",
      "disambiguation_index": 0,
      "label": "P2",
      "aliases": [
        "P2"
      ],
      "types": [
        "mathematical concept",
        "predicate",
        "rule",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical function or rule that takes one input and produces another as its output.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P2",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-p2-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-6",
          "local_name": "P2",
          "local_types": [
            "rule",
            "predicate"
          ],
          "iri": "Entity-p2-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "P2",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p2-Mention-3"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-4",
          "local_name": "P2",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-p2-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "P2",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-p2-Mention-5"
        }
      ],
      "relevance": 0.433837890625
    },
    "Entity-and_the_set__a__pk___k_in_1_.._m__represents_k_.": {
      "node_id": "and_the_set__a__pk___k_in_1_.._m__represents_k_.",
      "disambiguation_index": 0,
      "label": "and the set {A(Pk) | k in 1..m} represents K.",
      "aliases": [
        "and the set {A(Pk) | k in 1..m} represents K."
      ],
      "types": [
        "notation",
        "computer science"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-4",
          "local_name": "and the set {A(Pk) | k in 1..m} represents K.",
          "local_types": [
            "notation",
            "computer science"
          ],
          "iri": "Entity-and_the_set__a__pk___k_in_1_.._m__represents_k_.-Mention-1"
        }
      ],
      "relevance": 0.433837890625
    },
    "Entity-cardinality_expression__only_min_cardinality_is_handled": {
      "node_id": "cardinality_expression__only_min_cardinality_is_handled",
      "disambiguation_index": 0,
      "label": "cardinality expressions, only min cardinality is handled",
      "aliases": [
        "cardinality expressions, only min cardinality is handled"
      ],
      "types": [
        "limitation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A constraint on the number of instances allowed for a property or class",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-6-Sentence-2",
          "local_name": "cardinality expressions, only min cardinality is handled",
          "local_types": [
            "limitation"
          ],
          "iri": "Entity-cardinality_expression__only_min_cardinality_is_handled-Mention-1"
        }
      ],
      "relevance": 0.433837890625
    },
    "Entity-they_work_with_a_small_amount_of_data": {
      "node_id": "they_work_with_a_small_amount_of_data",
      "disambiguation_index": 0,
      "label": "They work with a small amount of data",
      "aliases": [
        "They work with a small amount of data"
      ],
      "types": [
        "data",
        "amount"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An individual or group working with limited information",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "They work with a small amount of data",
          "local_types": [
            "data",
            "amount"
          ],
          "iri": "Entity-they_work_with_a_small_amount_of_data-Mention-1"
        }
      ],
      "relevance": 0.433837890625
    },
    "Entity-certain_property_in_the_embedding_space": {
      "node_id": "certain_property_in_the_embedding_space",
      "disambiguation_index": 0,
      "label": "certain properties in the embedding space",
      "aliases": [
        "certain properties in the embedding space"
      ],
      "types": [
        "properties",
        "embedding space"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Properties related to predicate embeddings, specifically similarities between argument predicates and composite predicate representations.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "certain properties in the embedding space",
          "local_types": [
            "properties",
            "embedding space"
          ],
          "iri": "Entity-certain_property_in_the_embedding_space-Mention-1"
        }
      ],
      "relevance": 0.433837890625
    },
    "Entity-link": {
      "node_id": "link",
      "disambiguation_index": 0,
      "label": "links",
      "aliases": [
        "links"
      ],
      "types": [
        "connection",
        "relationship"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A fact in an RDF triple format (e, P, e'), representing a relationship or connection between two entities e and e' via predicate P.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-6",
          "local_name": "links",
          "local_types": [
            "connection",
            "relationship"
          ],
          "iri": "Entity-link-Mention-1"
        }
      ],
      "relevance": 0.43359375
    },
    "Entity-domain": {
      "node_id": "domain",
      "disambiguation_index": 0,
      "label": "domain",
      "aliases": [
        "domain"
      ],
      "types": [
        "scope",
        "range"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual area or sphere of influence",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "domain",
          "local_types": [
            "scope",
            "range"
          ],
          "iri": "Entity-domain-Mention-1"
        }
      ],
      "relevance": 0.43359375
    },
    "Entity-p1__y__z_": {
      "node_id": "p1__y__z_",
      "disambiguation_index": 0,
      "label": "P1(y, z)",
      "aliases": [
        "P1(y, z)",
        "P2(z, t)"
      ],
      "types": [
        "mathematical expression",
        "logic formula",
        "logical expression",
        "mathematical function",
        "logical operator",
        "rule",
        "function",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical operator or mathematical function that connects two entities based on their relationships with other entities.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "P1(y, z)",
          "local_types": [
            "logic formula",
            "predicate",
            "rule",
            "logical expression"
          ],
          "iri": "Entity-p1__y__z_-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "P1(y, z)",
          "local_types": [
            "mathematical expression",
            "logic formula",
            "logical operator",
            "function",
            "predicate"
          ],
          "iri": "Entity-p1__y__z_-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "P1(y, z)",
          "local_types": [
            "function",
            "mathematical function"
          ],
          "iri": "Entity-p1__y__z_-Mention-3"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "P2(z, t)",
          "local_types": [
            "logic formula",
            "predicate",
            "rule",
            "logical expression"
          ],
          "iri": "Entity-p1__y__z_-Mention-4"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "P2(z, t)",
          "local_types": [
            "mathematical expression",
            "logic formula",
            "logical operator",
            "function",
            "predicate"
          ],
          "iri": "Entity-p1__y__z_-Mention-5"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "P2(z, t)",
          "local_types": [
            "function",
            "mathematical function"
          ],
          "iri": "Entity-p1__y__z_-Mention-6"
        }
      ],
      "relevance": 0.43310546875
    },
    "Entity-the_sampling_method__first_introduced": {
      "node_id": "the_sampling_method__first_introduced",
      "disambiguation_index": 0,
      "label": "the sampling method, first introduced",
      "aliases": [
        "the sampling method, first introduced"
      ],
      "types": [
        "method",
        "reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statistical technique used to select a subset of data points from a larger population",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "the sampling method, first introduced",
          "local_types": [
            "method",
            "reference"
          ],
          "iri": "Entity-the_sampling_method__first_introduced-Mention-1"
        }
      ],
      "relevance": 0.4326171875
    },
    "Entity-fullhouse": {
      "node_id": "fullhouse",
      "disambiguation_index": 0,
      "label": "fullHouse",
      "aliases": [
        "fullHouse"
      ],
      "types": [
        "predicate",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The 'fullHouse' predicate represents a unary predicate in a knowledge graph, specifically describing a poker hand with three cards of one rank and two cards of another rank.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-9",
          "local_name": "fullHouse",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-fullhouse-Mention-1"
        }
      ],
      "relevance": 0.432373046875
    },
    "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.": {
      "node_id": "unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "disambiguation_index": 0,
      "label": "Unary predicates may, but are not limited to, represent class assertions expressed in an RDF triple as (e, rdf:type, P) where P is a class or a datatype.",
      "aliases": [
        "P(e)",
        "Unary predicates may, but are not limited to, represent class assertions expressed in an RDF triple as (e, rdf:type, P) where P is a class or a datatype."
      ],
      "types": [
        "class assertion",
        "unary predicate",
        "predicate",
        "definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of predicate that represents a statement about the nature or classification of an entity.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "Unary predicates may, but are not limited to, represent class assertions expressed in an RDF triple as (e, rdf:type, P) where P is a class or a datatype.",
          "local_types": [
            "definition",
            "class assertion"
          ],
          "iri": "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "P(e)",
          "local_types": [
            "predicate",
            "unary predicate"
          ],
          "iri": "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.-Mention-2"
        }
      ],
      "relevance": 0.432373046875
    },
    "Entity-the_object_argument_of_the_last_predicate": {
      "node_id": "the_object_argument_of_the_last_predicate",
      "disambiguation_index": 0,
      "label": "the object argument of the last predicate",
      "aliases": [
        "the object argument of the last predicate"
      ],
      "types": [
        "argument",
        "object"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The entity referred to by 'the object argument of the last predicate' is the final part of an IOP rule, which represents the entities that satisfy a chain of predicates in the rule.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "the object argument of the last predicate",
          "local_types": [
            "argument",
            "object"
          ],
          "iri": "Entity-the_object_argument_of_the_last_predicate-Mention-1"
        }
      ],
      "relevance": 0.432373046875
    },
    "Entity-fact": {
      "node_id": "fact",
      "disambiguation_index": 0,
      "label": "fact",
      "aliases": [
        "facts",
        "fact"
      ],
      "types": [
        "knowledge unit",
        "concept",
        "statement",
        "information unit",
        "assertion",
        "data point",
        "information",
        "proposition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statement or assertion of information, typically consisting of three parts: subject, predicate, and object.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "fact",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-fact-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "facts",
          "local_types": [
            "data point",
            "information"
          ],
          "iri": "Entity-fact-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-4",
          "local_name": "fact",
          "local_types": [
            "knowledge unit",
            "proposition"
          ],
          "iri": "Entity-fact-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "facts",
          "local_types": [
            "data point",
            "information unit"
          ],
          "iri": "Entity-fact-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-3",
          "local_name": "facts",
          "local_types": [
            "information",
            "data point"
          ],
          "iri": "Entity-fact-Mention-5"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-4",
          "local_name": "facts",
          "local_types": [
            "information",
            "data point"
          ],
          "iri": "Entity-fact-Mention-6"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-3",
          "local_name": "facts",
          "local_types": [
            "data point",
            "information"
          ],
          "iri": "Entity-fact-Mention-7"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-4",
          "local_name": "facts",
          "local_types": [
            "statement",
            "assertion"
          ],
          "iri": "Entity-fact-Mention-8"
        }
      ],
      "relevance": 0.43212890625
    },
    "Entity-p__e__e__": {
      "node_id": "p__e__e__",
      "disambiguation_index": 0,
      "label": "P(e, e')",
      "aliases": [
        "P(e, e')"
      ],
      "types": [
        "binary fact",
        "notation",
        "binary predicate",
        "relationship"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A fact in an RDF triple format representing a relationship between two entities (subject and object) via a binary predicate or property.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "P(e, e')",
          "local_types": [
            "binary fact",
            "notation",
            "binary predicate",
            "relationship"
          ],
          "iri": "Entity-p__e__e__-Mention-1"
        }
      ],
      "relevance": 0.43212890625
    },
    "Entity-type_predicate": {
      "node_id": "type_predicate",
      "disambiguation_index": 0,
      "label": "type predicates",
      "aliases": [
        "type predicates"
      ],
      "types": [
        "predicate",
        "ontology concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept or relation that describes the properties or characteristics of something.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-1",
          "local_name": "type predicates",
          "local_types": [
            "predicate",
            "ontology concept"
          ],
          "iri": "Entity-type_predicate-Mention-1"
        }
      ],
      "relevance": 0.43212890625
    },
    "Entity-data-first_approach": {
      "node_id": "data-first_approach",
      "disambiguation_index": 0,
      "label": "data-first approach",
      "aliases": [
        "data-first approach"
      ],
      "types": [
        "methodology",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or approach that prioritizes data as the primary consideration.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-5",
          "local_name": "data-first approach",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-data-first_approach-Mention-1"
        }
      ],
      "relevance": 0.431640625
    },
    "Entity-embedding_space": {
      "node_id": "embedding_space",
      "disambiguation_index": 0,
      "label": "embedding space",
      "aliases": [
        "embedding space"
      ],
      "types": [
        "space",
        "dimensionality"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical construct representing a high-dimensional representation of objects or concepts, often used to capture complex relationships between them.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "embedding space",
          "local_types": [
            "space",
            "dimensionality"
          ],
          "iri": "Entity-embedding_space-Mention-1"
        }
      ],
      "relevance": 0.431640625
    },
    "Entity-rdf__type": {
      "node_id": "rdf__type",
      "disambiguation_index": 0,
      "label": "rdf:type",
      "aliases": [
        "rdf:type"
      ],
      "types": [
        "relationship type",
        "property",
        "datatype",
        "namespace"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of relationship or property that represents a classification or categorization.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "rdf:type",
          "local_types": [
            "relationship type",
            "property",
            "datatype",
            "namespace"
          ],
          "iri": "Entity-rdf__type-Mention-1"
        }
      ],
      "relevance": 0.431396484375
    },
    "Entity-approach": {
      "node_id": "approach",
      "disambiguation_index": 0,
      "label": "approach",
      "aliases": [
        "approach"
      ],
      "types": [
        "research strategy",
        "methodology",
        "method",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic method or procedure for achieving a goal",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "approach",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-approach-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "approach",
          "local_types": [
            "method",
            "technique"
          ],
          "iri": "Entity-approach-Mention-2"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "approach",
          "local_types": [
            "methodology",
            "research strategy"
          ],
          "iri": "Entity-approach-Mention-3"
        }
      ],
      "relevance": 0.431396484375
    },
    "Entity-ev__r___k__mcar__miniopsc__miniophc_": {
      "node_id": "ev__r___k__mcar__miniopsc__miniophc_",
      "disambiguation_index": 0,
      "label": "Ev(R', K, MCar, MinIOPSC, MinIOPHC)",
      "aliases": [
        "Ev(R', K, MCar, MinIOPSC, MinIOPHC)"
      ],
      "types": [
        "mathematical expression",
        "mathematical function",
        "expression",
        "function",
        "function call"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-11",
          "local_name": "Ev(R', K, MCar, MinIOPSC, MinIOPHC)",
          "local_types": [
            "mathematical expression",
            "mathematical function",
            "expression",
            "function",
            "function call"
          ],
          "iri": "Entity-ev__r___k__mcar__miniopsc__miniophc_-Mention-1"
        }
      ],
      "relevance": 0.43115234375
    },
    "Entity-then_the_rule_is_closed": {
      "node_id": "then_the_rule_is_closed",
      "disambiguation_index": 0,
      "label": "then the rule is closed",
      "aliases": [
        "then the rule is closed"
      ],
      "types": [
        "conclusion",
        "rule",
        "state"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A situation where all variables in an open path rule have been instantiated, making it impossible to further instantiate any remaining free variables.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-2",
          "local_name": "then the rule is closed",
          "local_types": [
            "conclusion",
            "rule",
            "state"
          ],
          "iri": "Entity-then_the_rule_is_closed-Mention-1"
        }
      ],
      "relevance": 0.43115234375
    },
    "Entity-entity_which_have_these_type": {
      "node_id": "entity_which_have_these_type",
      "disambiguation_index": 0,
      "label": "entities which have these types",
      "aliases": [
        "entities which have these types"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities with occupations such as singer, entrepreneur, etc., in Wikidata+UP knowledge graph.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "entities which have these types",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-entity_which_have_these_type-Mention-1"
        }
      ],
      "relevance": 0.43115234375
    },
    "Entity-v1__p1__p2_": {
      "node_id": "v1__p1__p2_",
      "disambiguation_index": 0,
      "label": "V^1(P1, P2)",
      "aliases": [
        "V^1(P1, P2)"
      ],
      "types": [
        "matrix",
        "vector"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A matrix or vector representing a transformation between two points",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-5",
          "local_name": "V^1(P1, P2)",
          "local_types": [
            "matrix",
            "vector"
          ],
          "iri": "Entity-v1__p1__p2_-Mention-1"
        }
      ],
      "relevance": 0.430908203125
    },
    "Entity-presentation": {
      "node_id": "presentation",
      "disambiguation_index": 0,
      "label": "presentation",
      "aliases": [
        "presentation"
      ],
      "types": [
        "description",
        "exposition",
        "document"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formal or informal talk, document, or exposition intended to convey information or ideas",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "presentation",
          "local_types": [
            "description",
            "exposition",
            "document"
          ],
          "iri": "Entity-presentation-Mention-1"
        }
      ],
      "relevance": 0.4306640625
    },
    "Entity-type_information": {
      "node_id": "type_information",
      "disambiguation_index": 0,
      "label": "type information",
      "aliases": [
        "type information"
      ],
      "types": [
        "metadata",
        "data description",
        "attribute",
        "data type",
        "information structure",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Type of metadata or attribute providing additional context about a piece of information",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "type information",
          "local_types": [
            "metadata",
            "information",
            "data description"
          ],
          "iri": "Entity-type_information-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-6-Sentence-1",
          "local_name": "type information",
          "local_types": [
            "information structure",
            "attribute",
            "data type"
          ],
          "iri": "Entity-type_information-Mention-2"
        }
      ],
      "relevance": 0.4306640625
    },
    "Entity-benchmark": {
      "node_id": "benchmark",
      "disambiguation_index": 0,
      "label": "benchmarks",
      "aliases": [
        "benchmarks"
      ],
      "types": [
        "performance indicators",
        "metric",
        "evaluation method",
        "evaluation metrics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Standardized measures used to evaluate or compare performance",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-5",
          "local_name": "benchmarks",
          "local_types": [
            "performance indicators",
            "evaluation metrics"
          ],
          "iri": "Entity-benchmark-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-4-Sentence-4",
          "local_name": "benchmarks",
          "local_types": [
            "evaluation method",
            "metric"
          ],
          "iri": "Entity-benchmark-Mention-2"
        }
      ],
      "relevance": 0.430419921875
    },
    "Entity-generality": {
      "node_id": "generality",
      "disambiguation_index": 0,
      "label": "generality",
      "aliases": [
        "generality"
      ],
      "types": [
        "property"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of scope or breadth",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-3",
          "local_name": "generality",
          "local_types": [
            "property"
          ],
          "iri": "Entity-generality-Mention-1"
        }
      ],
      "relevance": 0.43017578125
    },
    "Entity-k___e__f_": {
      "node_id": "k___e__f_",
      "disambiguation_index": 0,
      "label": "K = (E, F)",
      "aliases": [
        "K = (E, F)"
      ],
      "types": [
        "notation",
        "definition",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical notation representing a definition or equation in mathematics.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "K = (E, F)",
          "local_types": [
            "notation",
            "definition",
            "mathematics"
          ],
          "iri": "Entity-k___e__f_-Mention-1"
        }
      ],
      "relevance": 0.43017578125
    },
    "Entity-car": {
      "node_id": "car",
      "disambiguation_index": 0,
      "label": "Car",
      "aliases": [
        "Car"
      ],
      "types": [
        "integer",
        "concept",
        "value",
        "mathematical term",
        "parameter",
        "variable",
        "cardinality measure",
        "automobile",
        "attribute",
        "cardinality",
        "vehicle",
        "constant",
        "threshold",
        "term"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A self-propelled road vehicle designed for personal or commercial use.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-3",
          "local_name": "Car",
          "local_types": [
            "mathematical term",
            "parameter",
            "variable",
            "cardinality measure",
            "attribute",
            "cardinality"
          ],
          "iri": "Entity-car-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-5",
          "local_name": "Car",
          "local_types": [
            "integer",
            "variable",
            "constant"
          ],
          "iri": "Entity-car-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "Car",
          "local_types": [
            "automobile",
            "term",
            "vehicle"
          ],
          "iri": "Entity-car-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "Car",
          "local_types": [
            "parameter",
            "threshold",
            "constant",
            "value"
          ],
          "iri": "Entity-car-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "Car",
          "local_types": [
            "automobile",
            "vehicle",
            "parameter",
            "constant"
          ],
          "iri": "Entity-car-Mention-5"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "Car",
          "local_types": [
            "parameter",
            "value",
            "concept",
            "variable"
          ],
          "iri": "Entity-car-Mention-6"
        }
      ],
      "relevance": 0.429931640625
    },
    "Entity-table_1": {
      "node_id": "table_1",
      "disambiguation_index": 0,
      "label": "Table 1",
      "aliases": [
        "Table 1"
      ],
      "types": [
        "data structure",
        "table",
        "reference",
        "dataset"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A tabular data representation or reference",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-1",
          "local_name": "Table 1",
          "local_types": [
            "data structure",
            "table",
            "reference"
          ],
          "iri": "Entity-table_1-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-5",
          "local_name": "Table 1",
          "local_types": [
            "data structure",
            "table",
            "dataset"
          ],
          "iri": "Entity-table_1-Mention-2"
        }
      ],
      "relevance": 0.429931640625
    },
    "Entity-union__from_i1_to_l__of_ei": {
      "node_id": "union__from_i1_to_l__of_ei",
      "disambiguation_index": 0,
      "label": "union (from i=1 to l) of Ei",
      "aliases": [
        "union (from i=1 to l) of Ei"
      ],
      "types": [
        "algorithm",
        "mathematical operation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of sampled entities for a target predicate, used in the sampling algorithm.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-9",
          "local_name": "union (from i=1 to l) of Ei",
          "local_types": [
            "algorithm",
            "mathematical operation"
          ],
          "iri": "Entity-union__from_i1_to_l__of_ei-Mention-1"
        }
      ],
      "relevance": 0.429931640625
    },
    "Entity-twenty-eight": {
      "node_id": "twenty-eight",
      "disambiguation_index": 0,
      "label": "Twenty-eight",
      "aliases": [
        "Twenty-eight"
      ],
      "types": [
        "number"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number twenty-eight referring to the quantity of unary predicates in the Poker benchmark KG.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-9",
          "local_name": "Twenty-eight",
          "local_types": [
            "number"
          ],
          "iri": "Entity-twenty-eight-Mention-1"
        }
      ],
      "relevance": 0.429931640625
    },
    "Entity-head": {
      "node_id": "head",
      "disambiguation_index": 0,
      "label": "head",
      "aliases": [
        "head"
      ],
      "types": [
        "concept",
        "part of a rule",
        "part",
        "variable",
        "expression",
        "logical construct",
        "component",
        "term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The topmost or leading part of an expression, rule, or construct.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-4",
          "local_name": "head",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-head-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-5",
          "local_name": "head",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-head-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "head",
          "local_types": [
            "part of a rule",
            "logical construct"
          ],
          "iri": "Entity-head-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-1",
          "local_name": "head",
          "local_types": [
            "expression",
            "variable",
            "term"
          ],
          "iri": "Entity-head-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "head",
          "local_types": [
            "concept",
            "term"
          ],
          "iri": "Entity-head-Mention-5"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-5",
          "local_name": "head",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-head-Mention-6"
        }
      ],
      "relevance": 0.429443359375
    },
    "Entity-semantics": {
      "node_id": "semantics",
      "disambiguation_index": 0,
      "label": "semantics",
      "aliases": [
        "semantics"
      ],
      "types": [
        "concept",
        "meaning",
        "theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The study or theory of meaning in language",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-7-Sentence-1",
          "local_name": "semantics",
          "local_types": [
            "concept",
            "theory"
          ],
          "iri": "Entity-semantics-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-7-Sentence-2",
          "local_name": "semantics",
          "local_types": [
            "concept",
            "meaning"
          ],
          "iri": "Entity-semantics-Mention-2"
        }
      ],
      "relevance": 0.429443359375
    },
    "Entity-distribution": {
      "node_id": "distribution",
      "disambiguation_index": 0,
      "label": "distribution",
      "aliases": [
        "distribution"
      ],
      "types": [
        "statistical analysis",
        "data visualization"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statistical representation or visualization of data that shows how values are spread out over a range",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-1",
          "local_name": "distribution",
          "local_types": [
            "statistical analysis",
            "data visualization"
          ],
          "iri": "Entity-distribution-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-6-Sentence-1",
          "local_name": "distribution",
          "local_types": [
            "statistical analysis",
            "data visualization"
          ],
          "iri": "Entity-distribution-Mention-2"
        },
        {
          "reference": "Section-15-Paragraph-7-Sentence-1",
          "local_name": "distribution",
          "local_types": [
            "statistical analysis",
            "data visualization"
          ],
          "iri": "Entity-distribution-Mention-3"
        }
      ],
      "relevance": 0.429443359375
    },
    "Entity-rule_quality_measure": {
      "node_id": "rule_quality_measure",
      "disambiguation_index": 0,
      "label": "rule quality measures",
      "aliases": [
        "rule quality measures"
      ],
      "types": [
        "metric",
        "evaluation method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of metrics or evaluation methods used to assess the quality of rules.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-4",
          "local_name": "rule quality measures",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-rule_quality_measure-Mention-1"
        }
      ],
      "relevance": 0.429443359375
    },
    "Entity-each_element": {
      "node_id": "each_element",
      "disambiguation_index": 0,
      "label": "Each element",
      "aliases": [
        "Each element"
      ],
      "types": [
        "mathematical concept",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A singular unit or component within a larger set, collection, or structure.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "Each element",
          "local_types": [
            "mathematical concept",
            "concept"
          ],
          "iri": "Entity-each_element-Mention-1"
        }
      ],
      "relevance": 0.428955078125
    },
    "Entity-the_w3c": {
      "node_id": "the_w3c",
      "disambiguation_index": 0,
      "label": "the W3C",
      "aliases": [
        "the W3C"
      ],
      "types": [
        "organization"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The World Wide Web Consortium, an international organization that develops and maintains standards for the web.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "the W3C",
          "local_types": [
            "organization"
          ],
          "iri": "Entity-the_w3c-Mention-1"
        }
      ],
      "relevance": 0.42822265625
    },
    "Entity-universal_quantification": {
      "node_id": "universal_quantification",
      "disambiguation_index": 0,
      "label": "universal quantification",
      "aliases": [
        "universally quantified",
        "universal quantification"
      ],
      "types": [
        "logical operation",
        "mathematical process",
        "mathematical concept",
        "quantification"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept or logical operation used to express statements about all members of a particular class, without specifying individual instances.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "universal quantification",
          "local_types": [
            "mathematical concept",
            "logical operation"
          ],
          "iri": "Entity-universal_quantification-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-3",
          "local_name": "universally quantified",
          "local_types": [
            "logical operation",
            "mathematical process",
            "quantification"
          ],
          "iri": "Entity-universal_quantification-Mention-2"
        }
      ],
      "relevance": 0.42822265625
    },
    "Entity-aggregation_module": {
      "node_id": "aggregation_module",
      "disambiguation_index": 0,
      "label": "aggregation module",
      "aliases": [
        "aggregation module"
      ],
      "types": [
        "software component"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software component responsible for combining or grouping data into a cohesive structure.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "aggregation module",
          "local_types": [
            "software component"
          ],
          "iri": "Entity-aggregation_module-Mention-1"
        }
      ],
      "relevance": 0.42822265625
    },
    "Entity-a": {
      "node_id": "a",
      "disambiguation_index": 0,
      "label": "A",
      "aliases": [
        "A"
      ],
      "types": [
        "notation",
        "mathematical constant",
        "variable",
        "mathematical object",
        "matrix",
        "function",
        "algorithmic component"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical object representing an adjacency matrix or a function.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "A",
          "local_types": [
            "function",
            "algorithmic component"
          ],
          "iri": "Entity-a-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "A",
          "local_types": [
            "matrix",
            "mathematical object"
          ],
          "iri": "Entity-a-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-4",
          "local_name": "A",
          "local_types": [
            "variable",
            "mathematical constant"
          ],
          "iri": "Entity-a-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "A",
          "local_types": [
            "variable",
            "notation"
          ],
          "iri": "Entity-a-Mention-4"
        }
      ],
      "relevance": 0.42822265625
    },
    "Entity-p__1__z0__z1_": {
      "node_id": "p__1__z0__z1_",
      "disambiguation_index": 0,
      "label": "P'1(z0, z1)",
      "aliases": [
        "P'1(z0, z1)"
      ],
      "types": [
        "tree structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A tree structure node with a specific relationship between its elements.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "P'1(z0, z1)",
          "local_types": [
            "tree structure"
          ],
          "iri": "Entity-p__1__z0__z1_-Mention-1"
        }
      ],
      "relevance": 0.427978515625
    },
    "Entity-interactive_interface": {
      "node_id": "interactive_interface",
      "disambiguation_index": 0,
      "label": "interactive interface",
      "aliases": [
        "interactive interface"
      ],
      "types": [
        "interface",
        "user interface"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A graphical or digital medium through which users can interact with and manipulate data, applications, or systems.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "interactive interface",
          "local_types": [
            "interface",
            "user interface"
          ],
          "iri": "Entity-interactive_interface-Mention-1"
        }
      ],
      "relevance": 0.427978515625
    },
    "Entity-in_table_1__we_report_the_specification_of_two_benchmark_where_we_have_added_the_unary_predicate_and_fact_.": {
      "node_id": "in_table_1__we_report_the_specification_of_two_benchmark_where_we_have_added_the_unary_predicate_and_fact_.",
      "disambiguation_index": 0,
      "label": "In Table 1, we report the specifications of two benchmarks where we have added the unary predicates and facts.",
      "aliases": [
        "In Table 1, we report the specifications of two benchmarks where we have added the unary predicates and facts."
      ],
      "types": [
        "benchmark reporting"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Specifications of two benchmarks with added unary predicates and facts",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-5",
          "local_name": "In Table 1, we report the specifications of two benchmarks where we have added the unary predicates and facts.",
          "local_types": [
            "benchmark reporting"
          ],
          "iri": "Entity-in_table_1__we_report_the_specification_of_two_benchmark_where_we_have_added_the_unary_predicate_and_fact_.-Mention-1"
        }
      ],
      "relevance": 0.427978515625
    },
    "Entity-a_variable_closed": {
      "node_id": "a_variable_closed",
      "disambiguation_index": 0,
      "label": "a variable closed",
      "aliases": [
        "a variable closed"
      ],
      "types": [
        "concept",
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A variable that appears in at least two distinct predicate terms.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "a variable closed",
          "local_types": [
            "concept",
            "variable"
          ],
          "iri": "Entity-a_variable_closed-Mention-1"
        }
      ],
      "relevance": 0.427490234375
    },
    "Entity-car_is_an_integer___1": {
      "node_id": "car_is_an_integer___1",
      "disambiguation_index": 0,
      "label": "Car is an integer >= 1",
      "aliases": [
        "Car is an integer >= 1"
      ],
      "types": [
        "integer",
        "cardinality"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A quantity or measure representing the number of cars.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-5",
          "local_name": "Car is an integer >= 1",
          "local_types": [
            "integer",
            "cardinality"
          ],
          "iri": "Entity-car_is_an_integer___1-Mention-1"
        }
      ],
      "relevance": 0.42724609375
    },
    "Entity-entity": {
      "node_id": "entity",
      "disambiguation_index": 0,
      "label": "entities",
      "aliases": [
        "entities"
      ],
      "types": [
        "thing",
        "abstract thing",
        "object",
        "concept",
        "conceptual entity",
        "shapes",
        "objects",
        "grouping",
        "things being studied",
        "collection",
        "set",
        "objects of study",
        "things"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An abstract representation or grouping of people, places, things, or concepts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-1",
          "local_name": "entities",
          "local_types": [
            "object",
            "concept"
          ],
          "iri": "Entity-entity-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "entities",
          "local_types": [
            "object",
            "concept"
          ],
          "iri": "Entity-entity-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "entities",
          "local_types": [
            "object",
            "concept"
          ],
          "iri": "Entity-entity-Mention-3"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-5",
          "local_name": "entities",
          "local_types": [
            "conceptual entity",
            "abstract thing"
          ],
          "iri": "Entity-entity-Mention-4"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-4",
          "local_name": "entities",
          "local_types": [
            "objects",
            "things"
          ],
          "iri": "Entity-entity-Mention-5"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-2",
          "local_name": "entities",
          "local_types": [
            "objects",
            "things"
          ],
          "iri": "Entity-entity-Mention-6"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "entities",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-entity-Mention-7"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-4",
          "local_name": "entities",
          "local_types": [
            "grouping",
            "set"
          ],
          "iri": "Entity-entity-Mention-8"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "entities",
          "local_types": [
            "objects of study",
            "things being studied"
          ],
          "iri": "Entity-entity-Mention-9"
        },
        {
          "reference": "Section-14-Paragraph-5-Sentence-1",
          "local_name": "entities",
          "local_types": [
            "object",
            "thing"
          ],
          "iri": "Entity-entity-Mention-10"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-4",
          "local_name": "entities",
          "local_types": [
            "concept",
            "object"
          ],
          "iri": "Entity-entity-Mention-11"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-2",
          "local_name": "entities",
          "local_types": [
            "shapes"
          ],
          "iri": "Entity-entity-Mention-12"
        }
      ],
      "relevance": 0.427001953125
    },
    "Entity-dbpedia_contains_predicate_where_the_second_argument_of_these_predicate_are_type_or_class": {
      "node_id": "dbpedia_contains_predicate_where_the_second_argument_of_these_predicate_are_type_or_class",
      "disambiguation_index": 0,
      "label": "DBpedia contains predicates where the second arguments of these predicates are types or classes",
      "aliases": [
        "DBpedia contains predicates where the second arguments of these predicates are types or classes"
      ],
      "types": [
        "database",
        "predicate",
        "type",
        "class"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "DBpedia's predicate structure that has type or class as its second argument",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-2",
          "local_name": "DBpedia contains predicates where the second arguments of these predicates are types or classes",
          "local_types": [
            "database",
            "predicate",
            "type",
            "class"
          ],
          "iri": "Entity-dbpedia_contains_predicate_where_the_second_argument_of_these_predicate_are_type_or_class-Mention-1"
        }
      ],
      "relevance": 0.427001953125
    },
    "Entity-object_argument": {
      "node_id": "object_argument",
      "disambiguation_index": 0,
      "label": "object argument",
      "aliases": [
        "object argument"
      ],
      "types": [
        "parameter",
        "argument",
        "variable",
        "logical component",
        "conceptual entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A value or expression being acted upon by a predicate.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "object argument",
          "local_types": [
            "conceptual entity",
            "logical component"
          ],
          "iri": "Entity-object_argument-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "object argument",
          "local_types": [
            "argument",
            "variable"
          ],
          "iri": "Entity-object_argument-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-5",
          "local_name": "object argument",
          "local_types": [
            "parameter",
            "variable"
          ],
          "iri": "Entity-object_argument-Mention-3"
        }
      ],
      "relevance": 0.4267578125
    },
    "Entity-this_tree_can_be_read_a_saying_that_a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist": {
      "node_id": "this_tree_can_be_read_a_saying_that_a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "disambiguation_index": 0,
      "label": "This tree can be read as saying that a song has an album with a record label, an album with two producers, an album with a genre, and an artist who is a musical artist",
      "aliases": [
        "This tree can be read as saying that a song has an album with a record label, an album with two producers, an album with a genre, and an artist who is a musical artist"
      ],
      "types": [
        "explanation",
        "ontology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual representation of a song's metadata",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-3",
          "local_name": "This tree can be read as saying that a song has an album with a record label, an album with two producers, an album with a genre, and an artist who is a musical artist",
          "local_types": [
            "explanation",
            "ontology"
          ],
          "iri": "Entity-this_tree_can_be_read_a_saying_that_a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist-Mention-1"
        }
      ],
      "relevance": 0.426513671875
    },
    "Entity-a_relational_database": {
      "node_id": "a_relational_database",
      "disambiguation_index": 0,
      "label": "a relational database",
      "aliases": [
        "a relational database"
      ],
      "types": [
        "database"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of digital storage system that organizes data into tables with rows and columns, where each row represents an instance of an entity and each column represents an attribute or field.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "a relational database",
          "local_types": [
            "database"
          ],
          "iri": "Entity-a_relational_database-Mention-1"
        }
      ],
      "relevance": 0.426513671875
    },
    "Entity-human_knowledge": {
      "node_id": "human_knowledge",
      "disambiguation_index": 0,
      "label": "human knowledge",
      "aliases": [
        "human knowledge"
      ],
      "types": [
        "information",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The collective understanding, experiences, and insights gained by humans through various means of learning, discovery, and communication.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "human knowledge",
          "local_types": [
            "information",
            "data"
          ],
          "iri": "Entity-human_knowledge-Mention-1"
        }
      ],
      "relevance": 0.426025390625
    },
    "Entity-measure": {
      "node_id": "measure",
      "disambiguation_index": 0,
      "label": "measures",
      "aliases": [
        "measures"
      ],
      "types": [
        "metric",
        "evaluation method",
        "statistic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "quantifiable indicators or standards",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "measures",
          "local_types": [
            "metric",
            "statistic"
          ],
          "iri": "Entity-measure-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-4",
          "local_name": "measures",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-measure-Mention-2"
        }
      ],
      "relevance": 0.42578125
    },
    "Entity-e2": {
      "node_id": "e2",
      "disambiguation_index": 0,
      "label": "e2",
      "aliases": [
        "E2",
        "e2"
      ],
      "types": [
        "object",
        "concept",
        "value",
        "mathematical entity",
        "parameter",
        "element",
        "variable",
        "mathematical object",
        "matrix",
        "entity",
        "expression",
        "set",
        "constant"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical object or value used in the computation of a scoring function, possibly representing a matrix or set.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-4",
          "local_name": "e2",
          "local_types": [
            "object",
            "parameter",
            "variable",
            "mathematical object",
            "matrix",
            "entity"
          ],
          "iri": "Entity-e2-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-5",
          "local_name": "e2",
          "local_types": [
            "entity",
            "concept"
          ],
          "iri": "Entity-e2-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-6",
          "local_name": "e2",
          "local_types": [
            "entity",
            "variable"
          ],
          "iri": "Entity-e2-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-7",
          "local_name": "e2",
          "local_types": [
            "expression",
            "mathematical entity"
          ],
          "iri": "Entity-e2-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "e2",
          "local_types": [
            "entity",
            "variable"
          ],
          "iri": "Entity-e2-Mention-5"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "e2",
          "local_types": [
            "element",
            "set"
          ],
          "iri": "Entity-e2-Mention-6"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-4",
          "local_name": "e2",
          "local_types": [
            "constant",
            "value"
          ],
          "iri": "Entity-e2-Mention-7"
        }
      ],
      "relevance": 0.42578125
    },
    "Entity-for_example_(2)": {
      "node_id": "for_example_(2)",
      "disambiguation_index": 2,
      "label": "For example",
      "aliases": [
        "For example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Similarity constraints between predicate arguments, such as P2_t ~ P1_1 and P2_1 ~ P2_1",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-2",
          "local_name": "For example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_example_(2)-Mention-1"
        }
      ],
      "relevance": 0.42578125
    },
    "Entity-p1__e__e1_": {
      "node_id": "p1__e__e1_",
      "disambiguation_index": 0,
      "label": "P1(e, e1)",
      "aliases": [
        "P1(e, e1)"
      ],
      "types": [
        "mathematical operation",
        "function call",
        "fact",
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A unary predicate or fact representing an RDF triple (e, P, e') where 'e' is an identifier for an object such as a place or person and 'P' is a binary predicate.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "P1(e, e1)",
          "local_types": [
            "fact",
            "statement"
          ],
          "iri": "Entity-p1__e__e1_-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "P1(e, e1)",
          "local_types": [
            "function call",
            "mathematical operation"
          ],
          "iri": "Entity-p1__e__e1_-Mention-2"
        }
      ],
      "relevance": 0.42529296875
    },
    "Entity-language__z3__z3_": {
      "node_id": "language__z3__z3_",
      "disambiguation_index": 0,
      "label": "language(z3, z3)",
      "aliases": [
        "language(z3, z3)"
      ],
      "types": [
        "language",
        "concept",
        "logical expression",
        "technical term",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A binary predicate representing a linguistic relationship between two entities.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "language(z3, z3)",
          "local_types": [
            "language",
            "concept",
            "logical expression",
            "technical term",
            "predicate"
          ],
          "iri": "Entity-language__z3__z3_-Mention-1"
        }
      ],
      "relevance": 0.42529296875
    },
    "Entity-heuristic": {
      "node_id": "heuristic",
      "disambiguation_index": 0,
      "label": "heuristic",
      "aliases": [
        "heuristic"
      ],
      "types": [
        "rule-based approach",
        "optimization technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or strategy used to make decisions, solve problems, or optimize processes",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "heuristic",
          "local_types": [
            "rule-based approach",
            "optimization technique"
          ],
          "iri": "Entity-heuristic-Mention-1"
        }
      ],
      "relevance": 0.425048828125
    },
    "Entity-quality_measurement": {
      "node_id": "quality_measurement",
      "disambiguation_index": 0,
      "label": "quality measurements",
      "aliases": [
        "quality measurements"
      ],
      "types": [
        "metric",
        "evaluation method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Quantifiable assessments of characteristics or attributes",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "quality measurements",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-quality_measurement-Mention-1"
        }
      ],
      "relevance": 0.4248046875
    },
    "Entity-a_fact__also_known_a_a_link_": {
      "node_id": "a_fact__also_known_a_a_link_",
      "disambiguation_index": 0,
      "label": "A fact (also known as a link)",
      "aliases": [
        "A fact (also known as a link)"
      ],
      "types": [
        "term",
        "link"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statement or assertion of information, often represented by a subject-predicate-object triple",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "A fact (also known as a link)",
          "local_types": [
            "term",
            "link"
          ],
          "iri": "Entity-a_fact__also_known_a_a_link_-Mention-1"
        }
      ],
      "relevance": 0.4248046875
    },
    "Entity-general_form": {
      "node_id": "general_form",
      "disambiguation_index": 0,
      "label": "general form",
      "aliases": [
        "The general form",
        "general form"
      ],
      "types": [
        "form",
        "format",
        "structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standardized arrangement or pattern",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-7",
          "local_name": "general form",
          "local_types": [
            "structure",
            "format"
          ],
          "iri": "Entity-general_form-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-1",
          "local_name": "The general form",
          "local_types": [
            "form"
          ],
          "iri": "Entity-general_form-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "The general form",
          "local_types": [
            "form"
          ],
          "iri": "Entity-general_form-Mention-3"
        }
      ],
      "relevance": 0.4248046875
    },
    "Entity-width": {
      "node_id": "width",
      "disambiguation_index": 0,
      "label": "width",
      "aliases": [
        "width"
      ],
      "types": [
        "dimension",
        "measurement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a measurable characteristic of an object or shape",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-3",
          "local_name": "width",
          "local_types": [
            "dimension",
            "measurement"
          ],
          "iri": "Entity-width-Mention-1"
        }
      ],
      "relevance": 0.424072265625
    },
    "Entity-resource_constraint": {
      "node_id": "resource_constraint",
      "disambiguation_index": 0,
      "label": "resource constraints",
      "aliases": [
        "resource constraints"
      ],
      "types": [
        "limitation",
        "constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Restrictions imposed by limitations in availability or allocation of resources.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "resource constraints",
          "local_types": [
            "limitation",
            "constraint"
          ],
          "iri": "Entity-resource_constraint-Mention-1"
        }
      ],
      "relevance": 0.424072265625
    },
    "Entity-quality_measure": {
      "node_id": "quality_measure",
      "disambiguation_index": 0,
      "label": "quality measures",
      "aliases": [
        "quality measures"
      ],
      "types": [
        "metric",
        "evaluation metric",
        "quality measure",
        "evaluation metrics",
        "measure",
        "assessment framework",
        "assessment method",
        "performance indicator",
        "evaluation criteria",
        "measures"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of metrics used to assess and evaluate the quality or performance of something.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-5",
          "local_name": "quality measures",
          "local_types": [
            "evaluation metric",
            "quality measure",
            "evaluation metrics",
            "measure",
            "performance indicator",
            "measures"
          ],
          "iri": "Entity-quality_measure-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "quality measures",
          "local_types": [
            "assessment framework",
            "evaluation metric",
            "assessment method"
          ],
          "iri": "Entity-quality_measure-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "quality measures",
          "local_types": [
            "metric",
            "evaluation criteria"
          ],
          "iri": "Entity-quality_measure-Mention-3"
        }
      ],
      "relevance": 0.424072265625
    },
    "Entity-rule_quality": {
      "node_id": "rule_quality",
      "disambiguation_index": 0,
      "label": "rule quality",
      "aliases": [
        "rule quality",
        "Rule quality"
      ],
      "types": [
        "metric",
        "evaluation criterion",
        "concept",
        "property",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or criterion used to evaluate the effectiveness of a rule",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-1",
          "local_name": "rule quality",
          "local_types": [
            "concept",
            "property"
          ],
          "iri": "Entity-rule_quality-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-2",
          "local_name": "Rule quality",
          "local_types": [
            "metric",
            "rule"
          ],
          "iri": "Entity-rule_quality-Mention-2"
        },
        {
          "reference": "Section-16-Paragraph-6-Sentence-1",
          "local_name": "rule quality",
          "local_types": [
            "metric",
            "evaluation criterion"
          ],
          "iri": "Entity-rule_quality-Mention-3"
        }
      ],
      "relevance": 0.423828125
    },
    "Entity-v2__pt__(1)": {
      "node_id": "v2__pt__(1)",
      "disambiguation_index": 1,
      "label": "V^2(Pt)",
      "aliases": [
        "V^2(Pt)"
      ],
      "types": [
        "vector"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The vector V^2(PT) represents the number of entities that satisfy the body of a rule, i.e., the count of e' such that there exists e'' with PT(e'', e').",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-4",
          "local_name": "V^2(Pt)",
          "local_types": [
            "vector"
          ],
          "iri": "Entity-v2__pt__(1)-Mention-1"
        }
      ],
      "relevance": 0.423095703125
    },
    "Entity-oprl_evaluation_module": {
      "node_id": "oprl_evaluation_module",
      "disambiguation_index": 0,
      "label": "OPRL evaluation module",
      "aliases": [
        "OPRL evaluation module"
      ],
      "types": [
        "module",
        "evaluation system",
        "software component",
        "system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A software component responsible for evaluating or assessing something.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-4",
          "local_name": "OPRL evaluation module",
          "local_types": [
            "module",
            "evaluation system",
            "software component",
            "system"
          ],
          "iri": "Entity-oprl_evaluation_module-Mention-1"
        }
      ],
      "relevance": 0.4228515625
    },
    "Entity-relational_database": {
      "node_id": "relational_database",
      "disambiguation_index": 0,
      "label": "relational database",
      "aliases": [
        "relational database"
      ],
      "types": [
        "database management system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of digital storage system that organizes data into related tables with defined relationships between them.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "relational database",
          "local_types": [
            "database management system"
          ],
          "iri": "Entity-relational_database-Mention-1"
        }
      ],
      "relevance": 0.4228515625
    },
    "Entity-y": {
      "node_id": "y",
      "disambiguation_index": 0,
      "label": "y",
      "aliases": [
        "y"
      ],
      "types": [
        "parameter",
        "placeholder",
        "symbol",
        "open variable",
        "variable",
        "record label"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A variable or placeholder used to represent a value or quantity",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "y",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-y-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-3",
          "local_name": "y",
          "local_types": [
            "parameter",
            "open variable",
            "variable"
          ],
          "iri": "Entity-y-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "y",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-y-Mention-3"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-3",
          "local_name": "y",
          "local_types": [
            "placeholder",
            "record label",
            "variable"
          ],
          "iri": "Entity-y-Mention-4"
        }
      ],
      "relevance": 0.422607421875
    },
    "Entity-logical_foundation": {
      "node_id": "logical_foundation",
      "disambiguation_index": 0,
      "label": "logical foundations",
      "aliases": [
        "logical foundations"
      ],
      "types": [
        "foundation",
        "logic",
        "philosophy"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The underlying principles or theoretical bases that support a system of reasoning, argumentation, or decision-making.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "logical foundations",
          "local_types": [
            "foundation",
            "logic",
            "philosophy"
          ],
          "iri": "Entity-logical_foundation-Mention-1"
        }
      ],
      "relevance": 0.422607421875
    },
    "Entity-we_compute_the_embedding_representation": {
      "node_id": "we_compute_the_embedding_representation",
      "disambiguation_index": 0,
      "label": "We compute the embedding representation",
      "aliases": [
        "We compute the embedding representation"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating a numerical representation for the composite predicate P*(x, t), which combines the embeddings of its component predicates Pt(x, y), P1(y, z) and P2(z, t).",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "We compute the embedding representation",
          "local_types": [
            "research"
          ],
          "iri": "Entity-we_compute_the_embedding_representation-Mention-1"
        }
      ],
      "relevance": 0.42236328125
    },
    "Entity-standard_confidence": {
      "node_id": "standard_confidence",
      "disambiguation_index": 0,
      "label": "Standard confidence",
      "aliases": [
        "Standard confidence",
        "standard confidence"
      ],
      "types": [
        "metric",
        "performance measure",
        "concept",
        "evaluation metric",
        "evaluation method",
        "statistic",
        "measure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A standardized measure of performance or evaluation used to compare and assess the quality of rules.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-1",
          "local_name": "Standard confidence",
          "local_types": [
            "measure",
            "metric",
            "concept"
          ],
          "iri": "Entity-standard_confidence-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "standard confidence",
          "local_types": [
            "measure",
            "metric",
            "evaluation method",
            "statistic"
          ],
          "iri": "Entity-standard_confidence-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-1",
          "local_name": "standard confidence",
          "local_types": [
            "metric",
            "performance measure",
            "evaluation metric"
          ],
          "iri": "Entity-standard_confidence-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "standard confidence",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-standard_confidence-Mention-4"
        }
      ],
      "relevance": 0.422119140625
    },
    "Entity-feature_value": {
      "node_id": "feature_value",
      "disambiguation_index": 0,
      "label": "feature values",
      "aliases": [
        "feature values"
      ],
      "types": [
        "attribute",
        "property"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of measurable characteristics or attributes used to describe and distinguish entities.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-4",
          "local_name": "feature values",
          "local_types": [
            "attribute",
            "property"
          ],
          "iri": "Entity-feature_value-Mention-1"
        }
      ],
      "relevance": 0.422119140625
    },
    "Entity-the_head_of_the_rule": {
      "node_id": "the_head_of_the_rule",
      "disambiguation_index": 0,
      "label": "the head of the rule",
      "aliases": [
        "the head of the rule"
      ],
      "types": [
        "head",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The entity referred to as 'the head of the rule' is a predicate that appears at the front of a closed-path rule, representing the conclusion or target fact that can be inferred by satisfying the body of the rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "the head of the rule",
          "local_types": [
            "head",
            "rule"
          ],
          "iri": "Entity-the_head_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.422119140625
    },
    "Entity-paper": {
      "node_id": "paper",
      "disambiguation_index": 0,
      "label": "paper",
      "aliases": [
        "paper"
      ],
      "types": [
        "research output",
        "publication",
        "document"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A written work or document published in print or electronic form, typically presenting research findings, ideas, or information on a specific topic.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "paper",
          "local_types": [
            "research output",
            "publication"
          ],
          "iri": "Entity-paper-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "paper",
          "local_types": [
            "publication",
            "document"
          ],
          "iri": "Entity-paper-Mention-2"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-3",
          "local_name": "paper",
          "local_types": [
            "document",
            "publication"
          ],
          "iri": "Entity-paper-Mention-3"
        }
      ],
      "relevance": 0.421875
    },
    "Entity-l": {
      "node_id": "l",
      "disambiguation_index": 0,
      "label": "l",
      "aliases": [
        "l"
      ],
      "types": [
        "identifier",
        "integer",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a variable or integer representing a maximum limit",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-3",
          "local_name": "l",
          "local_types": [
            "variable",
            "identifier"
          ],
          "iri": "Entity-l-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-6",
          "local_name": "l",
          "local_types": [
            "variable",
            "integer"
          ],
          "iri": "Entity-l-Mention-2"
        }
      ],
      "relevance": 0.421875
    },
    "Entity-through_an_example": {
      "node_id": "through_an_example",
      "disambiguation_index": 0,
      "label": "through an example",
      "aliases": [
        "through an example"
      ],
      "types": [
        "example"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concrete illustration or demonstration used to explain a concept, process, or idea",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "through an example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-through_an_example-Mention-1"
        }
      ],
      "relevance": 0.421875
    },
    "Entity-exploratory_attempt": {
      "node_id": "exploratory_attempt",
      "disambiguation_index": 0,
      "label": "exploratory attempts",
      "aliases": [
        "exploratory attempts"
      ],
      "types": [
        "research",
        "approach",
        "research effort"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Initial investigations or endeavors undertaken to gather information, test hypotheses, or develop a new understanding",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "exploratory attempts",
          "local_types": [
            "research",
            "approach",
            "research effort"
          ],
          "iri": "Entity-exploratory_attempt-Mention-1"
        }
      ],
      "relevance": 0.421875
    },
    "Entity-quantifier": {
      "node_id": "quantifier",
      "disambiguation_index": 0,
      "label": "quantifiers",
      "aliases": [
        "quantifiers"
      ],
      "types": [
        "mathematical concept",
        "logical term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Expressions or words used to indicate quantity, amount, or scope in mathematical and logical contexts.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "quantifiers",
          "local_types": [
            "mathematical concept",
            "logical term"
          ],
          "iri": "Entity-quantifier-Mention-1"
        }
      ],
      "relevance": 0.421630859375
    },
    "Entity-vector_e_i_in_rd": {
      "node_id": "vector_e_i_in_rd",
      "disambiguation_index": 0,
      "label": "vector E_i in R^d",
      "aliases": [
        "vector E_i in R^d"
      ],
      "types": [
        "representation",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation that maps entities to points in a high-dimensional space.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "vector E_i in R^d",
          "local_types": [
            "representation",
            "mathematical concept"
          ],
          "iri": "Entity-vector_e_i_in_rd-Mention-1"
        }
      ],
      "relevance": 0.421630859375
    },
    "Entity-latter_question": {
      "node_id": "latter_question",
      "disambiguation_index": 0,
      "label": "latter question",
      "aliases": [
        "latter question"
      ],
      "types": [
        "research question",
        "academic inquiry"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research inquiry seeking clarification or further understanding on a specific topic",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-5",
          "local_name": "latter question",
          "local_types": [
            "research question",
            "academic inquiry"
          ],
          "iri": "Entity-latter_question-Mention-1"
        }
      ],
      "relevance": 0.421630859375
    },
    "Entity-they_(1)": {
      "node_id": "they_(1)",
      "disambiguation_index": 1,
      "label": "They",
      "aliases": [
        "They"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of author(s) who may still include a large number of redundant and low quality rules.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-3",
          "local_name": "They",
          "local_types": [
            "author"
          ],
          "iri": "Entity-they_(1)-Mention-1"
        }
      ],
      "relevance": 0.421630859375
    },
    "Entity-proposal": {
      "node_id": "proposal",
      "disambiguation_index": 0,
      "label": "proposal",
      "aliases": [
        "proposal"
      ],
      "types": [
        "research proposal",
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A suggested plan or idea, typically outlining a course of action to achieve a specific goal",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "proposal",
          "local_types": [
            "research proposal",
            "idea"
          ],
          "iri": "Entity-proposal-Mention-1"
        }
      ],
      "relevance": 0.42138671875
    },
    "Entity-_e2__e3_": {
      "node_id": "_e2__e3_",
      "disambiguation_index": 0,
      "label": "{e2, e3}",
      "aliases": [
        "{e2, e3}",
        "{e2}"
      ],
      "types": [
        "entities",
        "mathematical concept",
        "entity",
        "set",
        "mathematical set",
        "mathematical structure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "{e2, e3}",
          "local_types": [
            "set",
            "entities"
          ],
          "iri": "Entity-_e2__e3_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "{e2, e3}",
          "local_types": [
            "set",
            "mathematical structure"
          ],
          "iri": "Entity-_e2__e3_-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-5",
          "local_name": "{e2}",
          "local_types": [
            "entities",
            "mathematical concept",
            "entity",
            "set",
            "mathematical set"
          ],
          "iri": "Entity-_e2__e3_-Mention-3"
        }
      ],
      "relevance": 0.421142578125
    },
    "Entity-our_unary_predicate_and_fact": {
      "node_id": "our_unary_predicate_and_fact",
      "disambiguation_index": 0,
      "label": "our unary predicates and facts",
      "aliases": [
        "our unary predicates and facts"
      ],
      "types": [
        "unary predicate",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of logical statements or propositions that describe a single entity, concept, or relationship.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-1",
          "local_name": "our unary predicates and facts",
          "local_types": [
            "unary predicate",
            "fact"
          ],
          "iri": "Entity-our_unary_predicate_and_fact-Mention-1"
        }
      ],
      "relevance": 0.421142578125
    },
    "Entity-support_new_data_entry": {
      "node_id": "support_new_data_entry",
      "disambiguation_index": 0,
      "label": "support new data entry",
      "aliases": [
        "support new data entry"
      ],
      "types": [
        "functionality"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mechanism or process for adding or updating information into a database or system.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-1",
          "local_name": "support new data entry",
          "local_types": [
            "functionality"
          ],
          "iri": "Entity-support_new_data_entry-Mention-1"
        }
      ],
      "relevance": 0.421142578125
    },
    "Entity-y__s": {
      "node_id": "y__s",
      "disambiguation_index": 0,
      "label": "y*s",
      "aliases": [
        "y*s"
      ],
      "types": [
        "output variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The 'y*s' entity refers to a set of pairs of entities that satisfies the head of a tree shape.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "y*s",
          "local_types": [
            "output variable"
          ],
          "iri": "Entity-y__s-Mention-1"
        }
      ],
      "relevance": 0.4208984375
    },
    "Entity-we_find_distinct_e_s": {
      "node_id": "we_find_distinct_e_s",
      "disambiguation_index": 0,
      "label": "We find distinct e's",
      "aliases": [
        "We find distinct e's"
      ],
      "types": [
        "research",
        "finding"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The count of distinct entities that satisfy a given rule's head, obtained by summing each row of the product matrix.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "We find distinct e's",
          "local_types": [
            "research",
            "finding"
          ],
          "iri": "Entity-we_find_distinct_e_s-Mention-1"
        }
      ],
      "relevance": 0.4208984375
    },
    "Entity-_pt_": {
      "node_id": "_pt_",
      "disambiguation_index": 0,
      "label": "(Pt)",
      "aliases": [
        "(Pt)"
      ],
      "types": [
        "notation",
        "matrix",
        "linear algebra"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A matrix representation of a linear algebra notation",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-4",
          "local_name": "(Pt)",
          "local_types": [
            "matrix",
            "linear algebra"
          ],
          "iri": "Entity-_pt_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "(Pt)",
          "local_types": [
            "matrix",
            "notation"
          ],
          "iri": "Entity-_pt_-Mention-2"
        }
      ],
      "relevance": 0.420654296875
    },
    "Entity-_e3__e4__e5_": {
      "node_id": "_e3__e4__e5_",
      "disambiguation_index": 0,
      "label": "(e3, e4, e5)",
      "aliases": [
        "(e3, e4, e5)"
      ],
      "types": [
        "entities",
        "set of entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of entities that can instantiate a certain concept and satisfy multiple conditions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-3",
          "local_name": "(e3, e4, e5)",
          "local_types": [
            "entities",
            "set of entities"
          ],
          "iri": "Entity-_e3__e4__e5_-Mention-1"
        }
      ],
      "relevance": 0.42041015625
    },
    "Entity-_e1__e2__e3__e4__e5_": {
      "node_id": "_e1__e2__e3__e4__e5_",
      "disambiguation_index": 0,
      "label": "{e1, e2, e3, e4, e5}",
      "aliases": [
        "{e1, e2, e3, e4, e5}",
        "{e2, e4, e5, e6, e7, e8, e9}"
      ],
      "types": [
        "entities",
        "instantiation set",
        "collection",
        "instantiations",
        "set of entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-4",
          "local_name": "{e1, e2, e3, e4, e5}",
          "local_types": [
            "entities",
            "instantiation set",
            "collection",
            "instantiations",
            "set of entities"
          ],
          "iri": "Entity-_e1__e2__e3__e4__e5_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-4",
          "local_name": "{e2, e4, e5, e6, e7, e8, e9}",
          "local_types": [
            "entities",
            "instantiation set",
            "collection",
            "instantiations",
            "set of entities"
          ],
          "iri": "Entity-_e1__e2__e3__e4__e5_-Mention-2"
        }
      ],
      "relevance": 0.42041015625
    },
    "Entity-the_google_search_engine": {
      "node_id": "the_google_search_engine",
      "disambiguation_index": 0,
      "label": "the Google Search engine",
      "aliases": [
        "the Google Search engine"
      ],
      "types": [
        "search_engine"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The primary search engine developed and maintained by Google.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "the Google Search engine",
          "local_types": [
            "search_engine"
          ],
          "iri": "Entity-the_google_search_engine-Mention-1"
        }
      ],
      "relevance": 0.419921875
    },
    "Entity-based_on_the_new_predicate_and_related_fact": {
      "node_id": "based_on_the_new_predicate_and_related_fact",
      "disambiguation_index": 0,
      "label": "based on the new predicate and related facts",
      "aliases": [
        "based on the new predicate and related facts"
      ],
      "types": [
        "predicate",
        "facts"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating new unary facts from existing predicates and their corresponding instances.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-5",
          "local_name": "based on the new predicate and related facts",
          "local_types": [
            "predicate",
            "facts"
          ],
          "iri": "Entity-based_on_the_new_predicate_and_related_fact-Mention-1"
        }
      ],
      "relevance": 0.419921875
    },
    "Entity-subject_argument": {
      "node_id": "subject_argument",
      "disambiguation_index": 0,
      "label": "subject argument",
      "aliases": [
        "subject argument"
      ],
      "types": [
        "argument",
        "conceptual entity",
        "variable",
        "mathematical object",
        "logical component",
        "computational concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual representation or variable used to describe a relationship between two entities",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "subject argument",
          "local_types": [
            "conceptual entity",
            "logical component"
          ],
          "iri": "Entity-subject_argument-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "subject argument",
          "local_types": [
            "argument",
            "variable"
          ],
          "iri": "Entity-subject_argument-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-4-Sentence-2",
          "local_name": "subject argument",
          "local_types": [
            "computational concept",
            "mathematical object"
          ],
          "iri": "Entity-subject_argument-Mention-3"
        }
      ],
      "relevance": 0.419677734375
    },
    "Entity-we_illustrate": {
      "node_id": "we_illustrate",
      "disambiguation_index": 0,
      "label": "We illustrate",
      "aliases": [
        "We illustrate"
      ],
      "types": [
        "text"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A visual representation or explanation",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "We illustrate",
          "local_types": [
            "text"
          ],
          "iri": "Entity-we_illustrate-Mention-1"
        }
      ],
      "relevance": 0.419677734375
    },
    "Entity-such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e___": {
      "node_id": "such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e___",
      "disambiguation_index": 0,
      "label": "such that all of {P1(e, e1), P2(e1, e2), ..., Pn(e( n-1), e')}",
      "aliases": [
        "such that all of {P1(e, e1), P2(e1, e2), ..., Pn(e( n-1), e')}"
      ],
      "types": [
        "facts",
        "relation chain"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "such that all of {P1(e, e1), P2(e1, e2), ..., Pn(e( n-1), e')}",
          "local_types": [
            "facts",
            "relation chain"
          ],
          "iri": "Entity-such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e___-Mention-1"
        }
      ],
      "relevance": 0.419677734375
    },
    "Entity-novel_numerical_confidence_measure": {
      "node_id": "novel_numerical_confidence_measure",
      "disambiguation_index": 0,
      "label": "novel numerical confidence measure",
      "aliases": [
        "novel numerical confidence measure"
      ],
      "types": [
        "metric",
        "evaluation method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A quantitative indicator used to assess the level of certainty or reliability associated with a particular piece of information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-8",
          "local_name": "novel numerical confidence measure",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-novel_numerical_confidence_measure-Mention-1"
        }
      ],
      "relevance": 0.41943359375
    },
    "Entity-the_matrix_a__pt_": {
      "node_id": "the_matrix_a__pt_",
      "disambiguation_index": 0,
      "label": "the matrix A(Pt)",
      "aliases": [
        "the matrix A(Pt)"
      ],
      "types": [
        "matrix",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of a set of relationships or associations between entities, typically represented as an array of values.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "the matrix A(Pt)",
          "local_types": [
            "matrix",
            "mathematical concept"
          ],
          "iri": "Entity-the_matrix_a__pt_-Mention-1"
        }
      ],
      "relevance": 0.41943359375
    },
    "Entity-_e__there_exists_e___pt__e__e___or_pt__e___e__": {
      "node_id": "_e__there_exists_e___pt__e__e___or_pt__e___e__",
      "disambiguation_index": 0,
      "label": "{ e | there exists e' : Pt(e, e') or Pt(e', e) }",
      "aliases": [
        "{ e | there exists e' : Pt(e, e') or Pt(e', e) }"
      ],
      "types": [
        "formula"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of entities that are directly related to each other through a target predicate.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-5",
          "local_name": "{ e | there exists e' : Pt(e, e') or Pt(e', e) }",
          "local_types": [
            "formula"
          ],
          "iri": "Entity-_e__there_exists_e___pt__e__e___or_pt__e___e__-Mention-1"
        }
      ],
      "relevance": 0.41943359375
    },
    "Entity-_also_known_a_a_link_": {
      "node_id": "_also_known_a_a_link_",
      "disambiguation_index": 0,
      "label": "(also known as a link)",
      "aliases": [
        "(also known as a link)"
      ],
      "types": [
        "equivalence"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A fact (also known as a link) is an RDF triple (e, P, e'), written here as P(e, e'), meaning that the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "(also known as a link)",
          "local_types": [
            "equivalence"
          ],
          "iri": "Entity-_also_known_a_a_link_-Mention-1"
        }
      ],
      "relevance": 0.419189453125
    },
    "Entity-former_question": {
      "node_id": "former_question",
      "disambiguation_index": 0,
      "label": "former question",
      "aliases": [
        "former question"
      ],
      "types": [
        "research question",
        "academic inquiry"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A research inquiry or academic question that has been previously asked and answered, serving as a foundation for subsequent questions along a path of dependent queries.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-5",
          "local_name": "former question",
          "local_types": [
            "research question",
            "academic inquiry"
          ],
          "iri": "Entity-former_question-Mention-1"
        }
      ],
      "relevance": 0.4189453125
    },
    "Entity-ek": {
      "node_id": "ek",
      "disambiguation_index": 0,
      "label": "Ek",
      "aliases": [
        "Ek",
        "E(k-1)"
      ],
      "types": [
        "set",
        "mathematical concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The set of entities related to a target predicate Pt up to l atoms",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-7",
          "local_name": "Ek",
          "local_types": [
            "mathematical concept",
            "set"
          ],
          "iri": "Entity-ek-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-7",
          "local_name": "E(k-1)",
          "local_types": [
            "set",
            "mathematical concept"
          ],
          "iri": "Entity-ek-Mention-2"
        }
      ],
      "relevance": 0.41845703125
    },
    "Entity-i1_to_l": {
      "node_id": "i1_to_l",
      "disambiguation_index": 0,
      "label": "i=1 to l",
      "aliases": [
        "i=1 to l"
      ],
      "types": [
        "range",
        "integer range"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sequence or set of consecutive integers from a starting value 'i' up to and including an ending value 'l'.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-9",
          "local_name": "i=1 to l",
          "local_types": [
            "range",
            "integer range"
          ],
          "iri": "Entity-i1_to_l-Mention-1"
        }
      ],
      "relevance": 0.41845703125
    },
    "Entity-the_embedding_representation": {
      "node_id": "the_embedding_representation",
      "disambiguation_index": 0,
      "label": "the embedding representation",
      "aliases": [
        "the embedding representation"
      ],
      "types": [
        "representation",
        "embedding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical representation of a concept or object that captures its essential characteristics and properties.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "the embedding representation",
          "local_types": [
            "representation",
            "embedding"
          ],
          "iri": "Entity-the_embedding_representation-Mention-1"
        }
      ],
      "relevance": 0.41845703125
    },
    "Entity-_p1__...__pm_": {
      "node_id": "_p1__...__pm_",
      "disambiguation_index": 0,
      "label": "{P1, ..., Pm}",
      "aliases": [
        "{P1, ..., Pm}"
      ],
      "types": [
        "notation",
        "list of predicates",
        "mathematical concept",
        "set notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "{P1, ..., Pm}",
          "local_types": [
            "notation",
            "list of predicates",
            "mathematical concept",
            "set notation"
          ],
          "iri": "Entity-_p1__...__pm_-Mention-1"
        }
      ],
      "relevance": 0.41845703125
    },
    "Entity-work": {
      "node_id": "work",
      "disambiguation_index": 0,
      "label": "work",
      "aliases": [
        "works",
        "work"
      ],
      "types": [
        "research output",
        "research project",
        "research paper",
        "publications",
        "research papers",
        "publication"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research outcome or product resulting from a systematic investigation and analysis of a specific topic",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "work",
          "local_types": [
            "research output",
            "publication",
            "research paper"
          ],
          "iri": "Entity-work-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "works",
          "local_types": [
            "research papers",
            "publications"
          ],
          "iri": "Entity-work-Mention-2"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-2",
          "local_name": "work",
          "local_types": [
            "research project"
          ],
          "iri": "Entity-work-Mention-3"
        },
        {
          "reference": "Section-14-Paragraph-5-Sentence-2",
          "local_name": "work",
          "local_types": [
            "research project"
          ],
          "iri": "Entity-work-Mention-4"
        }
      ],
      "relevance": 0.418212890625
    },
    "Entity-an_argument_of_the_target_predicate": {
      "node_id": "an_argument_of_the_target_predicate",
      "disambiguation_index": 0,
      "label": "an argument of the target predicate",
      "aliases": [
        "an argument of the target predicate"
      ],
      "types": [
        "argument",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A piece of information that restricts or defines a value associated with a specific predicate, such as 'human' in Fig. 2.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "an argument of the target predicate",
          "local_types": [
            "argument",
            "predicate"
          ],
          "iri": "Entity-an_argument_of_the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.418212890625
    },
    "Entity-connected_by_closed_intermediate_variable": {
      "node_id": "connected_by_closed_intermediate_variable",
      "disambiguation_index": 0,
      "label": "connected by closed intermediate variables",
      "aliases": [
        "connected by closed intermediate variables"
      ],
      "types": [
        "connection",
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A connection between entities that involves intermediate variables, which are fully defined and do not introduce new uncertainty.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-2",
          "local_name": "connected by closed intermediate variables",
          "local_types": [
            "connection",
            "variable"
          ],
          "iri": "Entity-connected_by_closed_intermediate_variable-Mention-1"
        }
      ],
      "relevance": 0.418212890625
    },
    "Entity-_1_": {
      "node_id": "_1_",
      "disambiguation_index": 0,
      "label": "(1)",
      "aliases": [
        "(1)",
        "(2)"
      ],
      "types": [
        "mathematical expression",
        "notation",
        "reference",
        "equation",
        "number"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical reference or notation used to identify a specific number, expression, or quantity.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "(1)",
          "local_types": [
            "notation",
            "number",
            "reference"
          ],
          "iri": "Entity-_1_-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "(1)",
          "local_types": [
            "notation",
            "mathematical expression"
          ],
          "iri": "Entity-_1_-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "(2)",
          "local_types": [
            "number",
            "equation",
            "reference",
            "mathematical expression"
          ],
          "iri": "Entity-_1_-Mention-3"
        }
      ],
      "relevance": 0.41796875
    },
    "Entity-support": {
      "node_id": "support",
      "disambiguation_index": 0,
      "label": "support",
      "aliases": [
        "support"
      ],
      "types": [
        "measure",
        "parameter",
        "metric",
        "indicator"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or indicator of something's effectiveness or quality",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "support",
          "local_types": [
            "measure",
            "parameter",
            "metric",
            "indicator"
          ],
          "iri": "Entity-support-Mention-1"
        }
      ],
      "relevance": 0.41796875
    },
    "Entity-predicate_where_the_second_argument_of_these_predicate_are_type_or_class": {
      "node_id": "predicate_where_the_second_argument_of_these_predicate_are_type_or_class",
      "disambiguation_index": 0,
      "label": "predicates where the second arguments of these predicates are types or classes",
      "aliases": [
        "These predicates",
        "predicates where the second arguments of these predicates are types or classes"
      ],
      "types": [
        "ontology",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Predicates that have type or class as their second argument",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-2",
          "local_name": "predicates where the second arguments of these predicates are types or classes",
          "local_types": [
            "predicate",
            "ontology"
          ],
          "iri": "Entity-predicate_where_the_second_argument_of_these_predicate_are_type_or_class-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-2",
          "local_name": "These predicates",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-predicate_where_the_second_argument_of_these_predicate_are_type_or_class-Mention-2"
        }
      ],
      "relevance": 0.417724609375
    },
    "Entity-_e__f_": {
      "node_id": "_e__f_",
      "disambiguation_index": 0,
      "label": "(E, F)",
      "aliases": [
        "(E, F)"
      ],
      "types": [
        "entities",
        "notation",
        "tuple",
        "mathematical concept",
        "data structure",
        "set",
        "mathematical structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair consisting of a set of entities and a set of facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-6",
          "local_name": "(E, F)",
          "local_types": [
            "tuple",
            "data structure"
          ],
          "iri": "Entity-_e__f_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "(E, F)",
          "local_types": [
            "entities",
            "notation",
            "tuple",
            "mathematical concept",
            "set",
            "mathematical structure"
          ],
          "iri": "Entity-_e__f_-Mention-2"
        }
      ],
      "relevance": 0.41748046875
    },
    "Entity-procedural_method": {
      "node_id": "procedural_method",
      "disambiguation_index": 0,
      "label": "procedural methods",
      "aliases": [
        "procedural methods"
      ],
      "types": [
        "methodology",
        "methods"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of systematic processes or techniques used to achieve a specific goal or outcome.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "procedural methods",
          "local_types": [
            "methodology",
            "methods"
          ],
          "iri": "Entity-procedural_method-Mention-1"
        }
      ],
      "relevance": 0.417236328125
    },
    "Entity-the_literature_a_existential_rule": {
      "node_id": "the_literature_a_existential_rule",
      "disambiguation_index": 0,
      "label": "the literature as existential rules",
      "aliases": [
        "the literature as existential rules"
      ],
      "types": [
        "literature",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A concept that refers to a type of rule or pattern found in the literature, characterized by the existence of existential variables in the head and universal variables in the body.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "the literature as existential rules",
          "local_types": [
            "literature",
            "rule"
          ],
          "iri": "Entity-the_literature_a_existential_rule-Mention-1"
        }
      ],
      "relevance": 0.417236328125
    },
    "Entity-the_approach_is_given": {
      "node_id": "the_approach_is_given",
      "disambiguation_index": 0,
      "label": "the approach is given",
      "aliases": [
        "the approach is given"
      ],
      "types": [
        "methodology",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or approach",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "the approach is given",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-the_approach_is_given-Mention-1"
        }
      ],
      "relevance": 0.4169921875
    },
    "Entity-section_2": {
      "node_id": "section_2",
      "disambiguation_index": 0,
      "label": "Section 2",
      "aliases": [
        "Section 2"
      ],
      "types": [
        "part of a document",
        "part",
        "section",
        "chapter",
        "part-of-paper",
        "component"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A part or division within a document, typically containing related content.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "Section 2",
          "local_types": [
            "part of a document",
            "part",
            "section",
            "chapter",
            "part-of-paper",
            "component"
          ],
          "iri": "Entity-section_2-Mention-1"
        }
      ],
      "relevance": 0.416748046875
    },
    "Entity-body_of_the_shape": {
      "node_id": "body_of_the_shape",
      "disambiguation_index": 0,
      "label": "body of the shape",
      "aliases": [
        "body of the shape"
      ],
      "types": [
        "part",
        "component"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The main structural part that defines the overall form or outline.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-4",
          "local_name": "body of the shape",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-body_of_the_shape-Mention-1"
        }
      ],
      "relevance": 0.416748046875
    },
    "Entity-mintreesc": {
      "node_id": "mintreesc",
      "disambiguation_index": 0,
      "label": "MinTreeSC",
      "aliases": [
        "MinTreeSC"
      ],
      "types": [
        "metric",
        "parameter",
        "variable",
        "tree structure characteristic",
        "constant"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The minimum tree structure characteristic (MinTreeSC) parameter",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-3",
          "local_name": "MinTreeSC",
          "local_types": [
            "parameter",
            "metric",
            "tree structure characteristic",
            "constant"
          ],
          "iri": "Entity-mintreesc-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-12",
          "local_name": "MinTreeSC",
          "local_types": [
            "parameter",
            "variable"
          ],
          "iri": "Entity-mintreesc-Mention-2"
        }
      ],
      "relevance": 0.41650390625
    },
    "Entity-_e__p__e__": {
      "node_id": "_e__p__e__",
      "disambiguation_index": 0,
      "label": "(e, P, e')",
      "aliases": [
        "(e, P, e')",
        "written here as P(e, e')"
      ],
      "types": [
        "notation",
        "syntax"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A fact in an RDF triple representing a relationship between entities 'e' and 'e'' via predicate 'P'.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "(e, P, e')",
          "local_types": [
            "notation",
            "syntax"
          ],
          "iri": "Entity-_e__p__e__-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "written here as P(e, e')",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-_e__p__e__-Mention-2"
        }
      ],
      "relevance": 0.416259765625
    },
    "Entity-cardinality_annotation": {
      "node_id": "cardinality_annotation",
      "disambiguation_index": 0,
      "label": "Cardinality annotations",
      "aliases": [
        "Cardinality annotations"
      ],
      "types": [
        "annotation",
        "annotation system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of labels or markings that indicate the quantity or magnitude of something",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-2",
          "local_name": "Cardinality annotations",
          "local_types": [
            "annotation",
            "annotation system"
          ],
          "iri": "Entity-cardinality_annotation-Mention-1"
        }
      ],
      "relevance": 0.416259765625
    },
    "Entity-cardinality": {
      "node_id": "cardinality",
      "disambiguation_index": 0,
      "label": "Cardinality",
      "aliases": [
        "Cardinality",
        "cardinalities",
        "cardinality"
      ],
      "types": [
        "statistics",
        "metric",
        "size measurement",
        "cardinal number",
        "concept",
        "rule quality measure",
        "mathematical term",
        "data characteristic",
        "mathematical concept",
        "measure",
        "dimension",
        "property",
        "attribute",
        "quantity",
        "mathematics"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A measure or quantity that describes the size or magnitude of a set or collection.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-2",
          "local_name": "Cardinality",
          "local_types": [
            "concept",
            "mathematical term"
          ],
          "iri": "Entity-cardinality-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-4",
          "local_name": "Cardinality",
          "local_types": [
            "measure",
            "cardinal number",
            "metric",
            "rule quality measure"
          ],
          "iri": "Entity-cardinality-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-8-Sentence-4",
          "local_name": "cardinality",
          "local_types": [
            "mathematical concept",
            "quantity"
          ],
          "iri": "Entity-cardinality-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-1",
          "local_name": "cardinalities",
          "local_types": [
            "mathematical concept",
            "property"
          ],
          "iri": "Entity-cardinality-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-5-Sentence-4",
          "local_name": "Cardinality",
          "local_types": [
            "concept",
            "mathematical concept"
          ],
          "iri": "Entity-cardinality-Mention-5"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "cardinality",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-cardinality-Mention-6"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-2",
          "local_name": "cardinality",
          "local_types": [
            "data characteristic",
            "size measurement"
          ],
          "iri": "Entity-cardinality-Mention-7"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-3",
          "local_name": "cardinality",
          "local_types": [
            "attribute",
            "dimension"
          ],
          "iri": "Entity-cardinality-Mention-8"
        },
        {
          "reference": "Section-15-Paragraph-6-Sentence-1",
          "local_name": "cardinalities",
          "local_types": [
            "mathematics",
            "statistics"
          ],
          "iri": "Entity-cardinality-Mention-9"
        },
        {
          "reference": "Section-15-Paragraph-6-Sentence-2",
          "local_name": "cardinalities",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-cardinality-Mention-10"
        }
      ],
      "relevance": 0.415771484375
    },
    "Entity-to_entity_forming_the_object_argument_of_the_last_predicate__p2": {
      "node_id": "to_entity_forming_the_object_argument_of_the_last_predicate__p2",
      "disambiguation_index": 0,
      "label": "to entities forming the object argument of the last predicate, P2",
      "aliases": [
        "to entities forming the object argument of the last predicate, P2"
      ],
      "types": [
        "object",
        "argument",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Entities connected by a path of predicates from Pt to P2",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "to entities forming the object argument of the last predicate, P2",
          "local_types": [
            "object",
            "argument",
            "predicate"
          ],
          "iri": "Entity-to_entity_forming_the_object_argument_of_the_last_predicate__p2-Mention-1"
        }
      ],
      "relevance": 0.415771484375
    },
    "Entity-_x__zi__y_": {
      "node_id": "_x__zi__y_",
      "disambiguation_index": 0,
      "label": "{x, zi, y}",
      "aliases": [
        "{x, zi, y}"
      ],
      "types": [
        "entities",
        "entity variables",
        "mathematical concept",
        "variable set",
        "set of variables"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept representing a set of variable entities in a predicate Pi.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "{x, zi, y}",
          "local_types": [
            "entities",
            "entity variables",
            "mathematical concept",
            "variable set",
            "set of variables"
          ],
          "iri": "Entity-_x__zi__y_-Mention-1"
        }
      ],
      "relevance": 0.41552734375
    },
    "Entity-free_variable_are_universally_quantified_at_the_outside": {
      "node_id": "free_variable_are_universally_quantified_at_the_outside",
      "disambiguation_index": 0,
      "label": "free variables are universally quantified at the outside",
      "aliases": [
        "free variables are universally quantified at the outside",
        "Free variables are universally quantified at the outside"
      ],
      "types": [
        "quantification",
        "logic",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept related to universal quantification of variables in logical frameworks",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "free variables are universally quantified at the outside",
          "local_types": [
            "variable",
            "quantification"
          ],
          "iri": "Entity-free_variable_are_universally_quantified_at_the_outside-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-3",
          "local_name": "Free variables are universally quantified at the outside",
          "local_types": [
            "quantification",
            "logic"
          ],
          "iri": "Entity-free_variable_are_universally_quantified_at_the_outside-Mention-2"
        }
      ],
      "relevance": 0.41552734375
    },
    "Entity-a__pt__(1)": {
      "node_id": "a__pt__(1)",
      "disambiguation_index": 1,
      "label": "A(Pt)",
      "aliases": [
        "A(Pt)"
      ],
      "types": [
        "matrix"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The adjacency matrix representation of a predicate (Pt) in an entity set E and fact set F.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-4",
          "local_name": "A(Pt)",
          "local_types": [
            "matrix"
          ],
          "iri": "Entity-a__pt__(1)-Mention-1"
        }
      ],
      "relevance": 0.41552734375
    },
    "Entity-x_should_belong_to_an_album_that_ha_y_a_record_label": {
      "node_id": "x_should_belong_to_an_album_that_ha_y_a_record_label",
      "disambiguation_index": 0,
      "label": "x should belong to an album that has y as record label",
      "aliases": [
        "x should belong to an album that has y as record label"
      ],
      "types": [
        "rule",
        "constraint",
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A constraint or condition specifying that a song (x) belongs to an album with a specific record label (y).",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-3",
          "local_name": "x should belong to an album that has y as record label",
          "local_types": [
            "rule",
            "constraint",
            "condition"
          ],
          "iri": "Entity-x_should_belong_to_an_album_that_ha_y_a_record_label-Mention-1"
        }
      ],
      "relevance": 0.41552734375
    },
    "Entity-car_indicates_a_satisfying_e": {
      "node_id": "car_indicates_a_satisfying_e",
      "disambiguation_index": 0,
      "label": "Car indicates a satisfying e",
      "aliases": [
        "Car indicates a satisfying e"
      ],
      "types": [
        "rule",
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A value indicating whether an entity satisfies a rule or condition, specifically representing the count of non-zero elements in a vector.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "Car indicates a satisfying e",
          "local_types": [
            "rule",
            "condition"
          ],
          "iri": "Entity-car_indicates_a_satisfying_e-Mention-1"
        }
      ],
      "relevance": 0.415283203125
    },
    "Entity-a_pair_of_entity__e__e___satisfies": {
      "node_id": "a_pair_of_entity__e__e___satisfies",
      "disambiguation_index": 0,
      "label": "A pair of entities (e, e') satisfies",
      "aliases": [
        "A pair of entities (e, e') satisfies the body of r",
        "A pair of entities (e, e') satisfies"
      ],
      "types": [
        "body",
        "logic",
        "rule",
        "entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of entities (e, e') satisfies a closed-path rule's body",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "A pair of entities (e, e') satisfies",
          "local_types": [
            "logic",
            "entities"
          ],
          "iri": "Entity-a_pair_of_entity__e__e___satisfies-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "A pair of entities (e, e') satisfies the body of r",
          "local_types": [
            "entities",
            "body",
            "rule"
          ],
          "iri": "Entity-a_pair_of_entity__e__e___satisfies-Mention-2"
        }
      ],
      "relevance": 0.4150390625
    },
    "Entity-p___x__t___pt__x__y__._p1__y__z__._p2__z__t_": {
      "node_id": "p___x__t___pt__x__y__._p1__y__z__._p2__z__t_",
      "disambiguation_index": 0,
      "label": "P*(x, t) = Pt(x, y). P1(y, z). P2(z, t)",
      "aliases": [
        "P*(x, t) = Pt(x, y). P1(y, z). P2(z, t)"
      ],
      "types": [
        "equation",
        "assignment"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A composite predicate that represents a logical assignment or equation between variables.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "P*(x, t) = Pt(x, y). P1(y, z). P2(z, t)",
          "local_types": [
            "equation",
            "assignment"
          ],
          "iri": "Entity-p___x__t___pt__x__y__._p1__y__z__._p2__z__t_-Mention-1"
        }
      ],
      "relevance": 0.4150390625
    },
    "Entity-fact_p0__e1__e2_": {
      "node_id": "fact_p0__e1__e2_",
      "disambiguation_index": 0,
      "label": "fact P0(e1, e2)",
      "aliases": [
        "fact P0(e1, e2)"
      ],
      "types": [
        "proposition",
        "statement",
        "logical construct"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical construct representing a proposition or statement that relates two entities (e1 and e2) through an evaluation function.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-4",
          "local_name": "fact P0(e1, e2)",
          "local_types": [
            "proposition",
            "statement",
            "logical construct"
          ],
          "iri": "Entity-fact_p0__e1__e2_-Mention-1"
        }
      ],
      "relevance": 0.414794921875
    },
    "Entity-f__e1__p0__e2___e1t_._p0_._e2": {
      "node_id": "f__e1__p0__e2___e1t_._p0_._e2",
      "disambiguation_index": 0,
      "label": "f(e1, P0, e2) = E1^T . P0 . E2",
      "aliases": [
        "f(e1, P0, e2) = E1^T . P0 . E2"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A scoring function that measures the plausibility of a fact given two entities and a predicate, used to compute the likelihood of an entity having a certain relation with another.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-4",
          "local_name": "f(e1, P0, e2) = E1^T . P0 . E2",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-f__e1__p0__e2___e1t_._p0_._e2-Mention-1"
        }
      ],
      "relevance": 0.414794921875
    },
    "Entity-we_produce_new_unary_fact": {
      "node_id": "we_produce_new_unary_fact",
      "disambiguation_index": 0,
      "label": "we produce new unary facts",
      "aliases": [
        "we produce new unary facts"
      ],
      "types": [
        "process",
        "fact creation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of generating new unary fact instances from existing predicates and related facts.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-5",
          "local_name": "we produce new unary facts",
          "local_types": [
            "process",
            "fact creation"
          ],
          "iri": "Entity-we_produce_new_unary_fact-Mention-1"
        }
      ],
      "relevance": 0.414794921875
    },
    "Entity-distinct_e_s": {
      "node_id": "distinct_e_s",
      "disambiguation_index": 0,
      "label": "distinct e's",
      "aliases": [
        "distinct e's"
      ],
      "types": [
        "set theory",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of unique entities or values, often used to describe a collection of distinct items.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "distinct e's",
          "local_types": [
            "set theory",
            "mathematical concept"
          ],
          "iri": "Entity-distinct_e_s-Mention-1"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-the_scoring_function": {
      "node_id": "the_scoring_function",
      "disambiguation_index": 0,
      "label": "The scoring function",
      "aliases": [
        "The scoring function"
      ],
      "types": [
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A mathematical formula used to calculate the likelihood or probability of a given fact (e.g., entity relationship) being true, based on predicate embeddings and entity representations.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-5",
          "local_name": "The scoring function",
          "local_types": [
            "function"
          ],
          "iri": "Entity-the_scoring_function-Mention-1"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-for_each_variant": {
      "node_id": "for_each_variant",
      "disambiguation_index": 0,
      "label": "for each variant",
      "aliases": [
        "for each variant"
      ],
      "types": [
        "context",
        "variant"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of distinct configurations or implementations of a system or process.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-4",
          "local_name": "for each variant",
          "local_types": [
            "context",
            "variant"
          ],
          "iri": "Entity-for_each_variant-Mention-1"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-e_": {
      "node_id": "e_",
      "disambiguation_index": 0,
      "label": "e'",
      "aliases": [
        "e'"
      ],
      "types": [
        "concept",
        "placeholder",
        "symbol",
        "mathematical concept",
        "element",
        "variable",
        "mathematical object",
        "entity",
        "identifier"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical object representing an element that satisfies certain properties.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-7",
          "local_name": "e'",
          "local_types": [
            "element",
            "mathematical object"
          ],
          "iri": "Entity-e_-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "e'",
          "local_types": [
            "variable",
            "identifier"
          ],
          "iri": "Entity-e_-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "e'",
          "local_types": [
            "mathematical object",
            "entity",
            "mathematical concept",
            "variable"
          ],
          "iri": "Entity-e_-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "e'",
          "local_types": [
            "entity",
            "concept"
          ],
          "iri": "Entity-e_-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-3",
          "local_name": "e'",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-e_-Mention-5"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "e'",
          "local_types": [
            "variable",
            "placeholder"
          ],
          "iri": "Entity-e_-Mention-6"
        }
      ],
      "relevance": 0.413818359375
    },
    "Entity-earlier_work": {
      "node_id": "earlier_work",
      "disambiguation_index": 0,
      "label": "earlier work",
      "aliases": [
        "earlier work"
      ],
      "types": [
        "research",
        "study"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Research or study conducted prior to a specific project or investigation",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "earlier work",
          "local_types": [
            "research",
            "study"
          ],
          "iri": "Entity-earlier_work-Mention-1"
        }
      ],
      "relevance": 0.413818359375
    },
    "Entity-language": {
      "node_id": "language",
      "disambiguation_index": 0,
      "label": "language",
      "aliases": [
        "language"
      ],
      "types": [
        "communication system",
        "linguistic system",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A system of communication used by humans to convey meaning",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "language",
          "local_types": [
            "concept",
            "linguistic system"
          ],
          "iri": "Entity-language-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "language",
          "local_types": [
            "communication system"
          ],
          "iri": "Entity-language-Mention-2"
        }
      ],
      "relevance": 0.41357421875
    },
    "Entity-that_is__they_explain_many_fact": {
      "node_id": "that_is__they_explain_many_fact",
      "disambiguation_index": 0,
      "label": "that is, they explain many facts",
      "aliases": [
        "that is, they explain many facts"
      ],
      "types": [
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The idea of explaining many facts",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "that is, they explain many facts",
          "local_types": [
            "idea"
          ],
          "iri": "Entity-that_is__they_explain_many_fact-Mention-1"
        }
      ],
      "relevance": 0.413330078125
    },
    "Entity-gb_ram": {
      "node_id": "gb_ram",
      "disambiguation_index": 0,
      "label": "GB RAM",
      "aliases": [
        "GB RAM"
      ],
      "types": [
        "amount of memory"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A unit of measurement for computer memory",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-4-Sentence-1",
          "local_name": "GB RAM",
          "local_types": [
            "amount of memory"
          ],
          "iri": "Entity-gb_ram-Mention-1"
        }
      ],
      "relevance": 0.4130859375
    },
    "Entity-high_card": {
      "node_id": "high_card",
      "disambiguation_index": 0,
      "label": "High Card",
      "aliases": [
        "High Card"
      ],
      "types": [
        "rank"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A card ranking system where cards are ranked in order from highest to lowest.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-7",
          "local_name": "High Card",
          "local_types": [
            "rank"
          ],
          "iri": "Entity-high_card-Mention-1"
        }
      ],
      "relevance": 0.412841796875
    },
    "Entity-converse": {
      "node_id": "converse",
      "disambiguation_index": 0,
      "label": "converse",
      "aliases": [
        "converse"
      ],
      "types": [
        "concept",
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical or philosophical concept expressing a reversed or opposite idea",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "converse",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-converse-Mention-1"
        }
      ],
      "relevance": 0.412841796875
    },
    "Entity-challenge": {
      "node_id": "challenge",
      "disambiguation_index": 0,
      "label": "challenge",
      "aliases": [
        "challenge"
      ],
      "types": [
        "problem",
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A difficult or trying situation that requires skill, effort, or ingenuity to overcome.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-3",
          "local_name": "challenge",
          "local_types": [
            "problem",
            "task"
          ],
          "iri": "Entity-challenge-Mention-1"
        }
      ],
      "relevance": 0.41259765625
    },
    "Entity-this_section": {
      "node_id": "this_section",
      "disambiguation_index": 0,
      "label": "this section",
      "aliases": [
        "this section"
      ],
      "types": [
        "section"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A self-contained part or subdivision of a larger work, such as an article, chapter, or document.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "this section",
          "local_types": [
            "section"
          ],
          "iri": "Entity-this_section-Mention-1"
        }
      ],
      "relevance": 0.412353515625
    },
    "Entity-certain_property": {
      "node_id": "certain_property",
      "disambiguation_index": 0,
      "label": "certain properties",
      "aliases": [
        "certain properties"
      ],
      "types": [
        "property",
        "attribute"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of characteristics or attributes that define an object, concept, or system.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "certain properties",
          "local_types": [
            "property",
            "attribute"
          ],
          "iri": "Entity-certain_property-Mention-1"
        }
      ],
      "relevance": 0.412353515625
    },
    "Entity-car1": {
      "node_id": "car1",
      "disambiguation_index": 0,
      "label": "Car=1",
      "aliases": [
        "Car=1"
      ],
      "types": [
        "parameter",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A vehicle designed primarily for personal transportation",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "Car=1",
          "local_types": [
            "parameter",
            "variable"
          ],
          "iri": "Entity-car1-Mention-1"
        }
      ],
      "relevance": 0.412353515625
    },
    "Entity-_e__rdf__type__p_": {
      "node_id": "_e__rdf__type__p_",
      "disambiguation_index": 0,
      "label": "(e, rdf:type, P)",
      "aliases": [
        "(e, rdf:type, P)"
      ],
      "types": [
        "RDF triple",
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A class or datatype assertion represented by an RDF triple (e, rdf:type, P), indicating that entity e has type P.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "(e, rdf:type, P)",
          "local_types": [
            "RDF triple",
            "expression"
          ],
          "iri": "Entity-_e__rdf__type__p_-Mention-1"
        }
      ],
      "relevance": 0.412353515625
    },
    "Entity-measure_support": {
      "node_id": "measure_support",
      "disambiguation_index": 0,
      "label": "measures support",
      "aliases": [
        "measures support"
      ],
      "types": [
        "measure",
        "metric",
        "evaluation method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of metrics or evaluation methods",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "measures support",
          "local_types": [
            "measure",
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-measure_support-Mention-1"
        }
      ],
      "relevance": 0.412109375
    },
    "Entity-binary_predicate": {
      "node_id": "binary_predicate",
      "disambiguation_index": 0,
      "label": "binary predicates",
      "aliases": [
        "binary predicates"
      ],
      "types": [
        "predicate",
        "logical operator"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Logical operators or relations that take two arguments and return a truth value",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-4",
          "local_name": "binary predicates",
          "local_types": [
            "predicate",
            "logical operator"
          ],
          "iri": "Entity-binary_predicate-Mention-1"
        }
      ],
      "relevance": 0.41162109375
    },
    "Entity-variable": {
      "node_id": "variable",
      "disambiguation_index": 0,
      "label": "variables",
      "aliases": [
        "variables",
        "variable"
      ],
      "types": [
        "concept",
        "data",
        "parameter",
        "mathematical concept",
        "variable",
        "mathematical variable",
        "attribute",
        "symbolic representation",
        "term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A value that can take on different states or values in a mathematical model or system.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-6",
          "local_name": "variables",
          "local_types": [
            "mathematical variable"
          ],
          "iri": "Entity-variable-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "variables",
          "local_types": [
            "parameter",
            "attribute"
          ],
          "iri": "Entity-variable-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "variable",
          "local_types": [
            "mathematical concept",
            "concept",
            "term"
          ],
          "iri": "Entity-variable-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-2",
          "local_name": "variables",
          "local_types": [
            "concept",
            "term"
          ],
          "iri": "Entity-variable-Mention-4"
        },
        {
          "reference": "Section-5-Paragraph-5-Sentence-2",
          "local_name": "variables",
          "local_types": [
            "symbolic representation",
            "mathematical concept",
            "concept",
            "term"
          ],
          "iri": "Entity-variable-Mention-5"
        },
        {
          "reference": "Section-17-Paragraph-5-Sentence-1",
          "local_name": "variables",
          "local_types": [
            "parameter",
            "attribute",
            "data",
            "variable"
          ],
          "iri": "Entity-variable-Mention-6"
        }
      ],
      "relevance": 0.411376953125
    },
    "Entity-cardinality_c1": {
      "node_id": "cardinality_c1",
      "disambiguation_index": 0,
      "label": "cardinality c1",
      "aliases": [
        "cardinality c1"
      ],
      "types": [
        "measure",
        "quantity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The measure or quantity representing the minimum or maximum number of instances allowed for a particular entity.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "cardinality c1",
          "local_types": [
            "measure",
            "quantity"
          ],
          "iri": "Entity-cardinality_c1-Mention-1"
        }
      ],
      "relevance": 0.411376953125
    },
    "Entity-1__e1___e__there_exists_e___pt__e__e___or_pt__e___e__": {
      "node_id": "1__e1___e__there_exists_e___pt__e__e___or_pt__e___e__",
      "disambiguation_index": 0,
      "label": "1: E1 = { e | there exists e': Pt(e, e') or Pt(e', e) }",
      "aliases": [
        "1: E1 = { e | there exists e': Pt(e, e') or Pt(e', e) }"
      ],
      "types": [
        "code snippet"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of related code snippets",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-5",
          "local_name": "1: E1 = { e | there exists e': Pt(e, e') or Pt(e', e) }",
          "local_types": [
            "code snippet"
          ],
          "iri": "Entity-1__e1___e__there_exists_e___pt__e__e___or_pt__e___e__-Mention-1"
        }
      ],
      "relevance": 0.411376953125
    },
    "Entity-y_": {
      "node_id": "y_",
      "disambiguation_index": 0,
      "label": "y*",
      "aliases": [
        "y*"
      ],
      "types": [
        "variable",
        "binding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A bound variable or binding instance",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "y*",
          "local_types": [
            "variable",
            "binding"
          ],
          "iri": "Entity-y_-Mention-1"
        }
      ],
      "relevance": 0.411376953125
    },
    "Entity-once_in_the_straight_form__where_the_object_argument_of_the_predicate_is_the_common_variable_to_connect_the_head_": {
      "node_id": "once_in_the_straight_form__where_the_object_argument_of_the_predicate_is_the_common_variable_to_connect_the_head_",
      "disambiguation_index": 0,
      "label": "once in the straight form (where the object argument of the predicate is the common variable to connect the head)",
      "aliases": [
        "once in the straight form (where the object argument of the predicate is the common variable to connect the head)"
      ],
      "types": [
        "predicate",
        "argument",
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A way of representing binary target predicates, where each predicate serves as two targets: once with the object argument connecting the head and again with the subject argument serving to connect.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-5",
          "local_name": "once in the straight form (where the object argument of the predicate is the common variable to connect the head)",
          "local_types": [
            "predicate",
            "argument",
            "variable"
          ],
          "iri": "Entity-once_in_the_straight_form__where_the_object_argument_of_the_predicate_is_the_common_variable_to_connect_the_head_-Mention-1"
        }
      ],
      "relevance": 0.411376953125
    },
    "Entity-procedure": {
      "node_id": "procedure",
      "disambiguation_index": 0,
      "label": "procedure",
      "aliases": [
        "procedure"
      ],
      "types": [
        "methodology",
        "process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic and structured approach or method for achieving a specific goal or outcome",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-2",
          "local_name": "procedure",
          "local_types": [
            "methodology",
            "process"
          ],
          "iri": "Entity-procedure-Mention-1"
        }
      ],
      "relevance": 0.4111328125
    },
    "Entity-count": {
      "node_id": "count",
      "disambiguation_index": 0,
      "label": "count",
      "aliases": [
        "count"
      ],
      "types": [
        "measurement",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The quantity or number of entities meeting a specific condition",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "count",
          "local_types": [
            "measurement",
            "evaluation"
          ],
          "iri": "Entity-count-Mention-1"
        }
      ],
      "relevance": 0.410888671875
    },
    "Entity-schema-free_database": {
      "node_id": "schema-free_database",
      "disambiguation_index": 0,
      "label": "schema-free database",
      "aliases": [
        "schema-free database",
        "a schema-free database"
      ],
      "types": [
        "database",
        "database system",
        "schema-free",
        "data storage system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of database that does not require predefined schemas or structures for storing data.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "schema-free database",
          "local_types": [
            "database",
            "database system",
            "schema-free",
            "data storage system"
          ],
          "iri": "Entity-schema-free_database-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "a schema-free database",
          "local_types": [
            "database"
          ],
          "iri": "Entity-schema-free_database-Mention-2"
        }
      ],
      "relevance": 0.410400390625
    },
    "Entity-definition_2": {
      "node_id": "definition_2",
      "disambiguation_index": 0,
      "label": "Definition 2",
      "aliases": [
        "Definition 2"
      ],
      "types": [
        "conceptual framework",
        "definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual definition outlining a specific understanding or interpretation of something.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-1",
          "local_name": "Definition 2",
          "local_types": [
            "conceptual framework",
            "definition"
          ],
          "iri": "Entity-definition_2-Mention-1"
        }
      ],
      "relevance": 0.41015625
    },
    "Entity-length": {
      "node_id": "length",
      "disambiguation_index": 0,
      "label": "length",
      "aliases": [
        "lengths",
        "length"
      ],
      "types": [
        "scale",
        "data characteristic",
        "measure",
        "dimension",
        "attribute",
        "dimensional measure",
        "dimensionality"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or dimension used to quantify the magnitude of something.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "length",
          "local_types": [
            "dimension",
            "measure"
          ],
          "iri": "Entity-length-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-2",
          "local_name": "length",
          "local_types": [
            "data characteristic",
            "dimensional measure"
          ],
          "iri": "Entity-length-Mention-2"
        },
        {
          "reference": "Section-15-Paragraph-3-Sentence-3",
          "local_name": "length",
          "local_types": [
            "attribute",
            "dimension"
          ],
          "iri": "Entity-length-Mention-3"
        },
        {
          "reference": "Section-15-Paragraph-7-Sentence-1",
          "local_name": "lengths",
          "local_types": [
            "scale",
            "dimensionality"
          ],
          "iri": "Entity-length-Mention-4"
        }
      ],
      "relevance": 0.409912109375
    },
    "Entity-thereby_indicating_the_relevance_of_the_rule_to_the_target": {
      "node_id": "thereby_indicating_the_relevance_of_the_rule_to_the_target",
      "disambiguation_index": 0,
      "label": "thereby indicating the relevance of the rule to the target",
      "aliases": [
        "thereby indicating the relevance of the rule to the target"
      ],
      "types": [
        "relevance",
        "target"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality measure for a rule's relevance to its target predicate instance",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-2",
          "local_name": "thereby indicating the relevance of the rule to the target",
          "local_types": [
            "relevance",
            "target"
          ],
          "iri": "Entity-thereby_indicating_the_relevance_of_the_rule_to_the_target-Mention-1"
        }
      ],
      "relevance": 0.409912109375
    },
    "Entity-pt__x__y_": {
      "node_id": "pt__x__y_",
      "disambiguation_index": 0,
      "label": "Pt(x, y)",
      "aliases": [
        "Pt(x, y)",
        "Pt( x, y )",
        "Pt(x,y)"
      ],
      "types": [
        "mathematical expression",
        "logic formula",
        "logical expression",
        "mathematical function",
        "mathematical formula",
        "equation",
        "logical operator",
        "rule",
        "function",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical predicate that relates two variables",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-1",
          "local_name": "Pt(x, y)",
          "local_types": [
            "mathematical function",
            "mathematical formula",
            "equation",
            "function"
          ],
          "iri": "Entity-pt__x__y_-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "Pt(x, y)",
          "local_types": [
            "logic formula",
            "predicate",
            "rule",
            "logical expression"
          ],
          "iri": "Entity-pt__x__y_-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "Pt(x, y)",
          "local_types": [
            "mathematical expression",
            "logic formula",
            "logical operator",
            "function",
            "predicate"
          ],
          "iri": "Entity-pt__x__y_-Mention-3"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "Pt(x, y)",
          "local_types": [
            "function",
            "mathematical function"
          ],
          "iri": "Entity-pt__x__y_-Mention-4"
        }
      ],
      "relevance": 0.40966796875
    },
    "Entity-lemma_1": {
      "node_id": "lemma_1",
      "disambiguation_index": 0,
      "label": "Lemma 1",
      "aliases": [
        "Lemma 1"
      ],
      "types": [
        "mathematical concept",
        "reference",
        "lemma"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical statement or proposition, often used as a reference point in an argument or proof.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "Lemma 1",
          "local_types": [
            "mathematical concept",
            "reference",
            "lemma"
          ],
          "iri": "Entity-lemma_1-Mention-1"
        }
      ],
      "relevance": 0.409423828125
    },
    "Entity-a_common_representation_for_this_work_that_clearly_distinguishes_entity_and_predicate": {
      "node_id": "a_common_representation_for_this_work_that_clearly_distinguishes_entity_and_predicate",
      "disambiguation_index": 0,
      "label": "a common representation for this work that clearly distinguishes entities and predicates",
      "aliases": [
        "a common representation for this work that clearly distinguishes entities and predicates"
      ],
      "types": [
        "requirement",
        "representation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A requirement or representation needed to distinguish between entities and predicates, providing a unified framework for the current work.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-2",
          "local_name": "a common representation for this work that clearly distinguishes entities and predicates",
          "local_types": [
            "requirement",
            "representation"
          ],
          "iri": "Entity-a_common_representation_for_this_work_that_clearly_distinguishes_entity_and_predicate-Mention-1"
        }
      ],
      "relevance": 0.4091796875
    },
    "Entity-minimum_cardinality_constraint": {
      "node_id": "minimum_cardinality_constraint",
      "disambiguation_index": 0,
      "label": "minimum cardinality constraints",
      "aliases": [
        "minimum cardinality constraints"
      ],
      "types": [
        "constraint",
        "limitation",
        "cardinality"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A restriction on the number of instances or occurrences allowed",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "minimum cardinality constraints",
          "local_types": [
            "constraint",
            "limitation"
          ],
          "iri": "Entity-minimum_cardinality_constraint-Mention-1"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-2",
          "local_name": "minimum cardinality constraints",
          "local_types": [
            "constraint",
            "cardinality"
          ],
          "iri": "Entity-minimum_cardinality_constraint-Mention-2"
        }
      ],
      "relevance": 0.408935546875
    },
    "Entity-_e1__e2__e3_": {
      "node_id": "_e1__e2__e3_",
      "disambiguation_index": 0,
      "label": "{e1, e2, e3}",
      "aliases": [
        "{e1, e2, e3}"
      ],
      "types": [
        "list",
        "notation",
        "entity",
        "set",
        "set of entities",
        "sequence"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of entities that represents a sequence or list notation.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-3",
          "local_name": "{e1, e2, e3}",
          "local_types": [
            "list",
            "notation",
            "entity",
            "set",
            "set of entities",
            "sequence"
          ],
          "iri": "Entity-_e1__e2__e3_-Mention-1"
        }
      ],
      "relevance": 0.408935546875
    },
    "Entity-the_unary_predicate_human_in_fig_._2": {
      "node_id": "the_unary_predicate_human_in_fig_._2",
      "disambiguation_index": 0,
      "label": "the unary predicate human in Fig. 2",
      "aliases": [
        "the unary predicate human in Fig. 2"
      ],
      "types": [
        "unary predicate",
        "human"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A unary predicate that constrains entities as 'human' and specifies three paths: citizenOf(x, z1) ^ country(z1), father(x, z2) ^ human(z2), and nativeLanguage(x, z3) ^ language(z3).",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "the unary predicate human in Fig. 2",
          "local_types": [
            "unary predicate",
            "human"
          ],
          "iri": "Entity-the_unary_predicate_human_in_fig_._2-Mention-1"
        }
      ],
      "relevance": 0.408935546875
    },
    "Entity-citizenof__x__y___-_livesin__x__z___locatedin__z__y_": {
      "node_id": "citizenof__x__y___-_livesin__x__z___locatedin__z__y_",
      "disambiguation_index": 0,
      "label": "citizenOf(x, y) <- livesIn(x, z) ^ locatedIn(z, y)",
      "aliases": [
        "citizenOf(x, y) <- livesIn(x, z) ^ locatedIn(z, y)"
      ],
      "types": [
        "rule",
        "logic formula"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A rule in predicate logic formalism expressing citizen-of relationships between entities based on their location and residence information.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "citizenOf(x, y) <- livesIn(x, z) ^ locatedIn(z, y)",
          "local_types": [
            "rule",
            "logic formula"
          ],
          "iri": "Entity-citizenof__x__y___-_livesin__x__z___locatedin__z__y_-Mention-1"
        }
      ],
      "relevance": 0.40869140625
    },
    "Entity-computing": {
      "node_id": "computing",
      "disambiguation_index": 0,
      "label": "Computing",
      "aliases": [
        "Computing"
      ],
      "types": [
        "computing",
        "journal",
        "field",
        "field of study",
        "discipline",
        "publication"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The field of study or discipline that deals with the design, development, testing, and maintenance of computer systems and software.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-1",
          "local_name": "Computing",
          "local_types": [
            "computing",
            "journal",
            "field",
            "field of study",
            "discipline",
            "publication"
          ],
          "iri": "Entity-computing-Mention-1"
        }
      ],
      "relevance": 0.408447265625
    },
    "Entity-related_work": {
      "node_id": "related_work",
      "disambiguation_index": 0,
      "label": "related work",
      "aliases": [
        "related work"
      ],
      "types": [
        "research",
        "research area",
        "work"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Previous research or studies conducted on a particular topic",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-2",
          "local_name": "related work",
          "local_types": [
            "research",
            "research area",
            "work"
          ],
          "iri": "Entity-related_work-Mention-1"
        }
      ],
      "relevance": 0.408447265625
    },
    "Entity-rank": {
      "node_id": "rank",
      "disambiguation_index": 0,
      "label": "rank",
      "aliases": [
        "rank"
      ],
      "types": [
        "attribute",
        "value"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a value or position in a hierarchical ordering",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-6",
          "local_name": "rank",
          "local_types": [
            "attribute",
            "value"
          ],
          "iri": "Entity-rank-Mention-1"
        }
      ],
      "relevance": 0.408447265625
    },
    "Entity-_x__zi__y__are_entity_variable": {
      "node_id": "_x__zi__y__are_entity_variable",
      "disambiguation_index": 0,
      "label": "{x, zi, y} are entity variables",
      "aliases": [
        "{x, zi, y} are entity variables"
      ],
      "types": [
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of entities that serve as variables in a predicate or formula.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "{x, zi, y} are entity variables",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-_x__zi__y__are_entity_variable-Mention-1"
        }
      ],
      "relevance": 0.407958984375
    },
    "Entity-real_application": {
      "node_id": "real_application",
      "disambiguation_index": 0,
      "label": "real applications",
      "aliases": [
        "real applications"
      ],
      "types": [
        "context"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Practical uses or implementations of a concept or system",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-4",
          "local_name": "real applications",
          "local_types": [
            "context"
          ],
          "iri": "Entity-real_application-Mention-1"
        }
      ],
      "relevance": 0.40771484375
    },
    "Entity-a_song_to_have_at_least_two_producer": {
      "node_id": "a_song_to_have_at_least_two_producer",
      "disambiguation_index": 0,
      "label": "a song to have at least two producers",
      "aliases": [
        "a song to have at least two producers"
      ],
      "types": [
        "rule",
        "constraint",
        "song",
        "producers"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific constraint or shape requirement for songs that specifies the minimum number of producers required.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-4",
          "local_name": "a song to have at least two producers",
          "local_types": [
            "rule",
            "constraint",
            "song",
            "producers"
          ],
          "iri": "Entity-a_song_to_have_at_least_two_producer-Mention-1"
        }
      ],
      "relevance": 0.40771484375
    },
    "Entity-p2__z0__z1_": {
      "node_id": "p2__z0__z1_",
      "disambiguation_index": 0,
      "label": "P2(z0, z1)",
      "aliases": [
        "P2(z0, z1)",
        "P3(z1, z2)"
      ],
      "types": [
        "logical statement",
        "mathematical notation",
        "predicate",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical function or predicate that takes two inputs and returns a logical statement.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "P2(z0, z1)",
          "local_types": [
            "mathematical notation",
            "function",
            "predicate",
            "logical statement"
          ],
          "iri": "Entity-p2__z0__z1_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "P3(z1, z2)",
          "local_types": [
            "mathematical notation",
            "function",
            "predicate",
            "logical statement"
          ],
          "iri": "Entity-p2__z0__z1_-Mention-2"
        }
      ],
      "relevance": 0.407470703125
    },
    "Entity-e_s": {
      "node_id": "e_s",
      "disambiguation_index": 0,
      "label": "e's",
      "aliases": [
        "e's"
      ],
      "types": [
        "variables",
        "mathematical concept",
        "mathematical entities",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical variable or concept",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "e's",
          "local_types": [
            "variables",
            "mathematical entities"
          ],
          "iri": "Entity-e_s-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "e's",
          "local_types": [
            "variable",
            "mathematical concept"
          ],
          "iri": "Entity-e_s-Mention-2"
        }
      ],
      "relevance": 0.407470703125
    },
    "Entity-z_": {
      "node_id": "z_",
      "disambiguation_index": 0,
      "label": "z*",
      "aliases": [
        "z*"
      ],
      "types": [
        "parameter",
        "binding",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A variable or parameter that represents a binding or value",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "z*",
          "local_types": [
            "parameter",
            "binding",
            "variable"
          ],
          "iri": "Entity-z_-Mention-1"
        }
      ],
      "relevance": 0.407470703125
    },
    "Entity-playing_card": {
      "node_id": "playing_card",
      "disambiguation_index": 0,
      "label": "playing cards",
      "aliases": [
        "playing cards"
      ],
      "types": [
        "card game component",
        "physical object",
        "card game element"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of flat, rectangular pieces used to play card games",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-5",
          "local_name": "playing cards",
          "local_types": [
            "card game component",
            "physical object",
            "card game element"
          ],
          "iri": "Entity-playing_card-Mention-1"
        }
      ],
      "relevance": 0.407470703125
    },
    "Entity-each_poker_hand": {
      "node_id": "each_poker_hand",
      "disambiguation_index": 0,
      "label": "Each poker hand",
      "aliases": [
        "Each poker hand"
      ],
      "types": [
        "poker_hand"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of five randomly selected playing cards, each described by its suit and rank, used to evaluate the completeness of an algorithm.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-5",
          "local_name": "Each poker hand",
          "local_types": [
            "poker_hand"
          ],
          "iri": "Entity-each_poker_hand-Mention-1"
        }
      ],
      "relevance": 0.407470703125
    },
    "Entity-p1___z0__z1_": {
      "node_id": "p1___z0__z1_",
      "disambiguation_index": 0,
      "label": "P1'(z0, z1)",
      "aliases": [
        "P1'(z0, z1)"
      ],
      "types": [
        "process",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A process or function that transforms input values (z0, z1) into new outputs.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-4",
          "local_name": "P1'(z0, z1)",
          "local_types": [
            "process",
            "function"
          ],
          "iri": "Entity-p1___z0__z1_-Mention-1"
        }
      ],
      "relevance": 0.4072265625
    },
    "Entity-by_defining_the_function_a_.": {
      "node_id": "by_defining_the_function_a_.",
      "disambiguation_index": 0,
      "label": "by defining the function A.",
      "aliases": [
        "by defining the function A."
      ],
      "types": [
        "notation",
        "computer science"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical or computational representation",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "by defining the function A.",
          "local_types": [
            "notation",
            "computer science"
          ],
          "iri": "Entity-by_defining_the_function_a_.-Mention-1"
        }
      ],
      "relevance": 0.406982421875
    },
    "Entity-the_satisfaction_of_a_less-constrained_shape": {
      "node_id": "the_satisfaction_of_a_less-constrained_shape",
      "disambiguation_index": 0,
      "label": "the satisfaction of a less-constrained shape",
      "aliases": [
        "the satisfaction of a less-constrained shape"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The condition where a more complex shape is satisfied, given that its least constrained form has been met.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "the satisfaction of a less-constrained shape",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-the_satisfaction_of_a_less-constrained_shape-Mention-1"
        }
      ],
      "relevance": 0.406982421875
    },
    "Entity-predicate_argument": {
      "node_id": "predicate_argument",
      "disambiguation_index": 0,
      "label": "predicate arguments",
      "aliases": [
        "predicate arguments"
      ],
      "types": [
        "concept",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The inputs or values associated with a mathematical function, used to determine its output.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "predicate arguments",
          "local_types": [
            "concept",
            "mathematics"
          ],
          "iri": "Entity-predicate_argument-Mention-1"
        }
      ],
      "relevance": 0.40673828125
    },
    "Entity-p0__e1__e2_": {
      "node_id": "p0__e1__e2_",
      "disambiguation_index": 0,
      "label": "P0(e1, e2)",
      "aliases": [
        "P0(e1, e2)"
      ],
      "types": [
        "fact",
        "equation",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical relation or equation that describes an association between two entities.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-4",
          "local_name": "P0(e1, e2)",
          "local_types": [
            "fact",
            "equation",
            "relation"
          ],
          "iri": "Entity-p0__e1__e2_-Mention-1"
        }
      ],
      "relevance": 0.406494140625
    },
    "Entity-one_approach": {
      "node_id": "one_approach",
      "disambiguation_index": 0,
      "label": "One approach",
      "aliases": [
        "One approach"
      ],
      "types": [
        "approach",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or strategy used to accomplish a specific task or achieve a particular goal.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "One approach",
          "local_types": [
            "approach",
            "method"
          ],
          "iri": "Entity-one_approach-Mention-1"
        }
      ],
      "relevance": 0.406494140625
    },
    "Entity-and_mintreesc": {
      "node_id": "and_mintreesc",
      "disambiguation_index": 0,
      "label": "and MinTreeSC",
      "aliases": [
        "and MinTreeSC"
      ],
      "types": [
        "and",
        "minimum tree search complexity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Minimum Tree Search Complexity",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-3",
          "local_name": "and MinTreeSC",
          "local_types": [
            "and",
            "minimum tree search complexity"
          ],
          "iri": "Entity-and_mintreesc-Mention-1"
        }
      ],
      "relevance": 0.406494140625
    },
    "Entity-target_predicate_pt": {
      "node_id": "target_predicate_pt",
      "disambiguation_index": 0,
      "label": "target predicate Pt",
      "aliases": [
        "target predicate Pt"
      ],
      "types": [
        "concept",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept or relation representing an abstract idea or property.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "target predicate Pt",
          "local_types": [
            "concept",
            "predicate"
          ],
          "iri": "Entity-target_predicate_pt-Mention-1"
        }
      ],
      "relevance": 0.40625
    },
    "Entity-application": {
      "node_id": "application",
      "disambiguation_index": 0,
      "label": "applications",
      "aliases": [
        "applications"
      ],
      "types": [
        "program",
        "system software"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Software programs or systems designed to perform specific tasks or functions",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-5-Sentence-4",
          "local_name": "applications",
          "local_types": [
            "program",
            "system software"
          ],
          "iri": "Entity-application-Mention-1"
        }
      ],
      "relevance": 0.406005859375
    },
    "Entity-further": {
      "node_id": "further",
      "disambiguation_index": 0,
      "label": "Further",
      "aliases": [
        "Further"
      ],
      "types": [
        "concept",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point or notation indicating that something follows or continues from what has been previously mentioned.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-4",
          "local_name": "Further",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-further-Mention-1"
        }
      ],
      "relevance": 0.40576171875
    },
    "Entity-feature": {
      "node_id": "feature",
      "disambiguation_index": 0,
      "label": "feature",
      "aliases": [
        "feature",
        "properties",
        "property"
      ],
      "types": [
        "concept",
        "characteristic",
        "feature",
        "property",
        "attribute"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A characteristic or attribute that defines or describes something.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-2",
          "local_name": "feature",
          "local_types": [
            "concept",
            "property"
          ],
          "iri": "Entity-feature-Mention-1"
        },
        {
          "reference": "Section-16-Paragraph-5-Sentence-3",
          "local_name": "property",
          "local_types": [
            "attribute",
            "characteristic"
          ],
          "iri": "Entity-feature-Mention-2"
        },
        {
          "reference": "Section-18-Paragraph-1-Sentence-2",
          "local_name": "properties",
          "local_types": [
            "feature",
            "attribute",
            "characteristic"
          ],
          "iri": "Entity-feature-Mention-3"
        }
      ],
      "relevance": 0.40576171875
    },
    "Entity-predicate_of_the_head": {
      "node_id": "predicate_of_the_head",
      "disambiguation_index": 0,
      "label": "predicate of the head",
      "aliases": [
        "predicate of the head"
      ],
      "types": [
        "syntactic concept",
        "phrase structure",
        "concept",
        "term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A grammatical concept referring to the main verb or action phrase in a sentence, typically describing what is happening to the subject.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-5",
          "local_name": "predicate of the head",
          "local_types": [
            "syntactic concept",
            "phrase structure",
            "concept",
            "term"
          ],
          "iri": "Entity-predicate_of_the_head-Mention-1"
        }
      ],
      "relevance": 0.4052734375
    },
    "Entity-we_have_no_benchmark_with_which_to_compare": {
      "node_id": "we_have_no_benchmark_with_which_to_compare",
      "disambiguation_index": 0,
      "label": "we have no benchmark with which to compare",
      "aliases": [
        "we have no benchmark with which to compare"
      ],
      "types": [
        "comparison"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard or reference point used for evaluating and comparing performance.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-3",
          "local_name": "we have no benchmark with which to compare",
          "local_types": [
            "comparison"
          ],
          "iri": "Entity-we_have_no_benchmark_with_which_to_compare-Mention-1"
        }
      ],
      "relevance": 0.4052734375
    },
    "Entity-if_all_variable": {
      "node_id": "if_all_variable",
      "disambiguation_index": 0,
      "label": "If all variables",
      "aliases": [
        "If all variables"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A condition that states when all variables in an open path rule are closed, the rule itself becomes closed.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-2",
          "local_name": "If all variables",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-if_all_variable-Mention-1"
        }
      ],
      "relevance": 0.405029296875
    },
    "Entity-entity_with_only_a_type_or_class_declaration": {
      "node_id": "entity_with_only_a_type_or_class_declaration",
      "disambiguation_index": 0,
      "label": "entities with only a type or class declaration",
      "aliases": [
        "entities with only a type or class declaration"
      ],
      "types": [
        "category",
        "entity",
        "data entity",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Entities that have only been declared as having a specific type or class, without any additional information.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-2-Sentence-4",
          "local_name": "entities with only a type or class declaration",
          "local_types": [
            "category",
            "entity",
            "data entity",
            "concept"
          ],
          "iri": "Entity-entity_with_only_a_type_or_class_declaration-Mention-1"
        }
      ],
      "relevance": 0.404541015625
    },
    "Entity-in_the_example__the_only_non-zero_element_in_a__pt__is_a__pt___1__3_": {
      "node_id": "in_the_example__the_only_non-zero_element_in_a__pt__is_a__pt___1__3_",
      "disambiguation_index": 0,
      "label": "In the example, the only non-zero element in A(Pt) is A(Pt)[1, 3]",
      "aliases": [
        "In the example, the only non-zero element in A(Pt) is A(Pt)[1, 3]"
      ],
      "types": [
        "example",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entities {e2, e3} that satisfy the body of a rule Pt(x, z0) -> P1(z0, x) ^ P2(z1, y)",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-4",
          "local_name": "In the example, the only non-zero element in A(Pt) is A(Pt)[1, 3]",
          "local_types": [
            "example",
            "notation"
          ],
          "iri": "Entity-in_the_example__the_only_non-zero_element_in_a__pt__is_a__pt___1__3_-Mention-1"
        }
      ],
      "relevance": 0.404296875
    },
    "Entity-car_value": {
      "node_id": "car_value",
      "disambiguation_index": 0,
      "label": "Car values",
      "aliases": [
        "Car values"
      ],
      "types": [
        "data set",
        "attribute"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of numerical attributes representing the monetary value or worth of vehicles.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "Car values",
          "local_types": [
            "data set",
            "attribute"
          ],
          "iri": "Entity-car_value-Mention-1"
        }
      ],
      "relevance": 0.404296875
    },
    "Entity-logical_statement": {
      "node_id": "logical_statement",
      "disambiguation_index": 0,
      "label": "logical statement",
      "aliases": [
        "logical statement"
      ],
      "types": [
        "statement",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formal expression that uses logic to draw conclusions or make assertions about specific conditions, states, or relationships.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "logical statement",
          "local_types": [
            "statement",
            "rule"
          ],
          "iri": "Entity-logical_statement-Mention-1"
        }
      ],
      "relevance": 0.404052734375
    },
    "Entity-let_r_be_a_tree_of_the_above_form_.": {
      "node_id": "let_r_be_a_tree_of_the_above_form_.",
      "disambiguation_index": 0,
      "label": "Let r be a tree of the above form.",
      "aliases": [
        "Let r be a tree of the above form."
      ],
      "types": [
        "statement",
        "mathematical statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical expression or proposition",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-2",
          "local_name": "Let r be a tree of the above form.",
          "local_types": [
            "statement",
            "mathematical statement"
          ],
          "iri": "Entity-let_r_be_a_tree_of_the_above_form_.-Mention-1"
        }
      ],
      "relevance": 0.404052734375
    },
    "Entity-name": {
      "node_id": "name",
      "disambiguation_index": 0,
      "label": "name",
      "aliases": [
        "name"
      ],
      "types": [
        "string",
        "attribute",
        "identifier"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A unique identifier or label assigned to an individual",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "name",
          "local_types": [
            "string",
            "attribute",
            "identifier"
          ],
          "iri": "Entity-name-Mention-1"
        }
      ],
      "relevance": 0.40380859375
    },
    "Entity-let": {
      "node_id": "let",
      "disambiguation_index": 0,
      "label": "Let",
      "aliases": [
        "Let"
      ],
      "types": [
        "notation",
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A grammatical construction used to grant permission or allow something to happen.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "Let",
          "local_types": [
            "notation",
            "statement"
          ],
          "iri": "Entity-let-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "Let",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-let-Mention-2"
        }
      ],
      "relevance": 0.40380859375
    },
    "Entity-a_certain_cardinality_c1": {
      "node_id": "a_certain_cardinality_c1",
      "disambiguation_index": 0,
      "label": "a certain cardinality c1",
      "aliases": [
        "a certain cardinality c1"
      ],
      "types": [
        "cardinality",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value representing the minimum or maximum quantity of something.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "a certain cardinality c1",
          "local_types": [
            "cardinality",
            "parameter"
          ],
          "iri": "Entity-a_certain_cardinality_c1-Mention-1"
        }
      ],
      "relevance": 0.40380859375
    },
    "Entity-the_fact_that_e1_ha_relation_p0_with_e2": {
      "node_id": "the_fact_that_e1_ha_relation_p0_with_e2",
      "disambiguation_index": 0,
      "label": "the fact that e1 has relation P0 with e2",
      "aliases": [
        "the fact that e1 has relation P0 with e2"
      ],
      "types": [
        "fact",
        "relation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A statement indicating the likelihood or probability of a specific relationship between two entities (e1 and e2) based on their embeddings.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-5",
          "local_name": "the fact that e1 has relation P0 with e2",
          "local_types": [
            "fact",
            "relation"
          ],
          "iri": "Entity-the_fact_that_e1_ha_relation_p0_with_e2-Mention-1"
        }
      ],
      "relevance": 0.403564453125
    },
    "Entity-poker_hand": {
      "node_id": "poker_hand",
      "disambiguation_index": 0,
      "label": "poker hand",
      "aliases": [
        "poker hands",
        "poker hand"
      ],
      "types": [
        "concept",
        "game component",
        "hand",
        "data instance",
        "data set",
        "dataset",
        "game"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A combination of five cards dealt to an individual player in a game, typically consisting of one or more specific card combinations.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-5",
          "local_name": "poker hand",
          "local_types": [
            "concept",
            "game component",
            "hand",
            "data instance",
            "game"
          ],
          "iri": "Entity-poker_hand-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-8",
          "local_name": "poker hands",
          "local_types": [
            "data set",
            "concept",
            "dataset"
          ],
          "iri": "Entity-poker_hand-Mention-2"
        }
      ],
      "relevance": 0.403076171875
    },
    "Entity-type": {
      "node_id": "type",
      "disambiguation_index": 0,
      "label": "type",
      "aliases": [
        "type",
        "types"
      ],
      "types": [
        "concept",
        "property",
        "attribute"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A fundamental characteristic or concept that defines a thing's nature, quality, or essence.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-1",
          "local_name": "type",
          "local_types": [
            "attribute",
            "property"
          ],
          "iri": "Entity-type-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-3",
          "local_name": "types",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-type-Mention-2"
        }
      ],
      "relevance": 0.403076171875
    },
    "Entity-entity_that_satisfy_the_head_of_the_rule": {
      "node_id": "entity_that_satisfy_the_head_of_the_rule",
      "disambiguation_index": 0,
      "label": "entities that satisfy the head of the rule",
      "aliases": [
        "entities that satisfy the head of the rule"
      ],
      "types": [
        "concept",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that satisfy the head of a given rule, referring to entities that meet the conditions specified by the rule's head.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "entities that satisfy the head of the rule",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-entity_that_satisfy_the_head_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.40283203125
    },
    "Entity-card": {
      "node_id": "card",
      "disambiguation_index": 0,
      "label": "card",
      "aliases": [
        "card"
      ],
      "types": [
        "playing card"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a small piece of material used for a specific purpose, particularly in games or as a token",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-6",
          "local_name": "card",
          "local_types": [
            "playing card"
          ],
          "iri": "Entity-card-Mention-1"
        }
      ],
      "relevance": 0.402587890625
    },
    "Entity-a_pair_of_entity": {
      "node_id": "a_pair_of_entity",
      "disambiguation_index": 0,
      "label": "A pair of entities",
      "aliases": [
        "A pair of entities",
        "pair of entities"
      ],
      "types": [
        "concept",
        "entities",
        "notation",
        "mathematical concept",
        "mathematical construct",
        "conceptual entity"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Two distinct entities that are considered together or related to each other.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-4",
          "local_name": "A pair of entities",
          "local_types": [
            "concept",
            "mathematical concept",
            "mathematical construct",
            "entities"
          ],
          "iri": "Entity-a_pair_of_entity-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-3-Sentence-4",
          "local_name": "A pair of entities",
          "local_types": [
            "notation",
            "mathematical concept",
            "concept",
            "entities"
          ],
          "iri": "Entity-a_pair_of_entity-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "pair of entities",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-a_pair_of_entity-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "pair of entities",
          "local_types": [
            "conceptual entity"
          ],
          "iri": "Entity-a_pair_of_entity-Mention-4"
        }
      ],
      "relevance": 0.40234375
    },
    "Entity-problem": {
      "node_id": "problem",
      "disambiguation_index": 0,
      "label": "problem",
      "aliases": [
        "problem"
      ],
      "types": [
        "challenge",
        "issue"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A challenge or difficulty that needs to be addressed",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "problem",
          "local_types": [
            "challenge",
            "issue"
          ],
          "iri": "Entity-problem-Mention-1"
        }
      ],
      "relevance": 0.40234375
    },
    "Entity-we_use": {
      "node_id": "we_use",
      "disambiguation_index": 0,
      "label": "We use",
      "aliases": [
        "We use"
      ],
      "types": [
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or technique employed for a specific purpose",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-1",
          "local_name": "We use",
          "local_types": [
            "method"
          ],
          "iri": "Entity-we_use-Mention-1"
        }
      ],
      "relevance": 0.40234375
    },
    "Entity-experiment": {
      "node_id": "experiment",
      "disambiguation_index": 0,
      "label": "experiments",
      "aliases": [
        "experiments",
        "experiment"
      ],
      "types": [
        "scientific study",
        "research study",
        "evaluation process",
        "research activity",
        "experiment",
        "research",
        "study"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic investigation or trial designed to test hypotheses, evaluate phenomena, or develop new knowledge",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "experiments",
          "local_types": [
            "research study"
          ],
          "iri": "Entity-experiment-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-1",
          "local_name": "experiments",
          "local_types": [
            "research study",
            "evaluation process"
          ],
          "iri": "Entity-experiment-Mention-2"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "experiments",
          "local_types": [
            "research study"
          ],
          "iri": "Entity-experiment-Mention-3"
        },
        {
          "reference": "Section-14-Paragraph-5-Sentence-1",
          "local_name": "experiments",
          "local_types": [
            "research activity",
            "scientific study"
          ],
          "iri": "Entity-experiment-Mention-4"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-1",
          "local_name": "experiments",
          "local_types": [
            "research",
            "study"
          ],
          "iri": "Entity-experiment-Mention-5"
        },
        {
          "reference": "Section-16-Paragraph-1-Sentence-2",
          "local_name": "experiments",
          "local_types": [
            "research",
            "experiment",
            "study"
          ],
          "iri": "Entity-experiment-Mention-6"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-1",
          "local_name": "experiment",
          "local_types": [
            "research study",
            "evaluation process"
          ],
          "iri": "Entity-experiment-Mention-7"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-1",
          "local_name": "experiments",
          "local_types": [
            "research study",
            "evaluation process"
          ],
          "iri": "Entity-experiment-Mention-8"
        }
      ],
      "relevance": 0.40185546875
    },
    "Entity-section_3": {
      "node_id": "section_3",
      "disambiguation_index": 0,
      "label": "Section 3",
      "aliases": [
        "Section 3",
        "Section 4"
      ],
      "types": [
        "chapter",
        "part of a document",
        "section"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A chapter or part within a document",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "Section 3",
          "local_types": [
            "part of a document",
            "chapter"
          ],
          "iri": "Entity-section_3-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-2",
          "local_name": "Section 4",
          "local_types": [
            "section",
            "part of a document",
            "chapter"
          ],
          "iri": "Entity-section_3-Mention-2"
        }
      ],
      "relevance": 0.40185546875
    },
    "Entity-predicate_term": {
      "node_id": "predicate_term",
      "disambiguation_index": 0,
      "label": "predicate terms",
      "aliases": [
        "predicate terms"
      ],
      "types": [
        "expression",
        "logical construct"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A term or phrase that expresses a logical relationship between variables.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "predicate terms",
          "local_types": [
            "expression",
            "logical construct"
          ],
          "iri": "Entity-predicate_term-Mention-1"
        }
      ],
      "relevance": 0.40185546875
    },
    "Entity-car__r_": {
      "node_id": "car__r_",
      "disambiguation_index": 0,
      "label": "Car(r)",
      "aliases": [
        "Car(r)"
      ],
      "types": [
        "annotation",
        "concept",
        "constraint",
        "function",
        "predicate"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A type of vehicle with four wheels and an internal combustion engine.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-3",
          "local_name": "Car(r)",
          "local_types": [
            "constraint",
            "function",
            "concept",
            "predicate"
          ],
          "iri": "Entity-car__r_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-8-Sentence-2",
          "local_name": "Car(r)",
          "local_types": [
            "annotation",
            "function"
          ],
          "iri": "Entity-car__r_-Mention-2"
        }
      ],
      "relevance": 0.401611328125
    },
    "Entity-v1": {
      "node_id": "v1",
      "disambiguation_index": 0,
      "label": "V^1",
      "aliases": [
        "V^1"
      ],
      "types": [
        "vector",
        "mathematical object"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a mathematical object representing a vector",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "V^1",
          "local_types": [
            "vector",
            "mathematical object"
          ],
          "iri": "Entity-v1-Mention-1"
        }
      ],
      "relevance": 0.4013671875
    },
    "Entity-sh__mincount": {
      "node_id": "sh__mincount",
      "disambiguation_index": 0,
      "label": "sh: minCount",
      "aliases": [
        "sh: minCount"
      ],
      "types": [
        "property declaration",
        "programming concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A minimum count or threshold value for a particular property or attribute.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-5-Sentence-4",
          "local_name": "sh: minCount",
          "local_types": [
            "property declaration",
            "programming concept"
          ],
          "iri": "Entity-sh__mincount-Mention-1"
        }
      ],
      "relevance": 0.4013671875
    },
    "Entity-five_hundred_poker_hand": {
      "node_id": "five_hundred_poker_hand",
      "disambiguation_index": 0,
      "label": "five hundred poker hands",
      "aliases": [
        "five hundred poker hands"
      ],
      "types": [
        "dataset",
        "poker hand"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A dataset of 500 unique poker hand configurations, each comprising 5 playing cards with attributes such as suit and rank.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-8",
          "local_name": "five hundred poker hands",
          "local_types": [
            "dataset",
            "poker hand"
          ],
          "iri": "Entity-five_hundred_poker_hand-Mention-1"
        }
      ],
      "relevance": 0.4013671875
    },
    "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open": {
      "node_id": "it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open",
      "disambiguation_index": 0,
      "label": "it occurs in at least two distinct predicate terms, such as z0 here, and otherwise it is open",
      "aliases": [
        "it occurs in at least two distinct predicate terms, such as z0 here, and otherwise it is open",
        "it occurs in at least two distinct predicate terms, such as z0 here, and otherwise it is open."
      ],
      "types": [
        "predicate term",
        "description",
        "term"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A variable that satisfies this condition: it occurs in at least two distinct predicate terms.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "it occurs in at least two distinct predicate terms, such as z0 here, and otherwise it is open",
          "local_types": [
            "predicate term",
            "term"
          ],
          "iri": "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "it occurs in at least two distinct predicate terms, such as z0 here, and otherwise it is open.",
          "local_types": [
            "description",
            "predicate term"
          ],
          "iri": "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open-Mention-2"
        }
      ],
      "relevance": 0.401123046875
    },
    "Entity-role__also_called_property_": {
      "node_id": "role__also_called_property_",
      "disambiguation_index": 0,
      "label": "roles (also called properties)",
      "aliases": [
        "roles (also called properties)"
      ],
      "types": [
        "relation",
        "property"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A characteristic or attribute that relates two entities in a specific way.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-3",
          "local_name": "roles (also called properties)",
          "local_types": [
            "relation",
            "property"
          ],
          "iri": "Entity-role__also_called_property_-Mention-1"
        }
      ],
      "relevance": 0.401123046875
    },
    "Entity-the_number_of_entity_that_satisfy_the_body_of_the_rule": {
      "node_id": "the_number_of_entity_that_satisfy_the_body_of_the_rule",
      "disambiguation_index": 0,
      "label": "the number of entities that satisfy the body of the rule",
      "aliases": [
        "the number of entities that satisfy the head of the rule",
        "the number of entities that satisfy the body of the rule"
      ],
      "types": [
        "body_of_rule",
        "head_of_rule",
        "count",
        "entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The total quantity or amount of entities meeting a specified condition.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "the number of entities that satisfy the body of the rule",
          "local_types": [
            "count",
            "entities",
            "body_of_rule"
          ],
          "iri": "Entity-the_number_of_entity_that_satisfy_the_body_of_the_rule-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "the number of entities that satisfy the head of the rule",
          "local_types": [
            "count",
            "entities",
            "head_of_rule"
          ],
          "iri": "Entity-the_number_of_entity_that_satisfy_the_body_of_the_rule-Mention-2"
        }
      ],
      "relevance": 0.400634765625
    },
    "Entity-there_is_scant_previous_research_on_this_topic": {
      "node_id": "there_is_scant_previous_research_on_this_topic",
      "disambiguation_index": 0,
      "label": "There is scant previous research on this topic",
      "aliases": [
        "There is scant previous research on this topic"
      ],
      "types": [
        "statement",
        "research finding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statement indicating a lack of existing studies or findings related to a particular subject",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-7",
          "local_name": "There is scant previous research on this topic",
          "local_types": [
            "statement",
            "research finding"
          ],
          "iri": "Entity-there_is_scant_previous_research_on_this_topic-Mention-1"
        }
      ],
      "relevance": 0.400390625
    },
    "Entity-task": {
      "node_id": "task",
      "disambiguation_index": 0,
      "label": "task",
      "aliases": [
        "task"
      ],
      "types": [
        "problem-solving activity",
        "objective"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A problem-solving activity with a specific objective",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-4",
          "local_name": "task",
          "local_types": [
            "problem-solving activity",
            "objective"
          ],
          "iri": "Entity-task-Mention-1"
        }
      ],
      "relevance": 0.400390625
    },
    "Entity-similarly_accomplished_scientist": {
      "node_id": "similarly_accomplished_scientist",
      "disambiguation_index": 0,
      "label": "similarly accomplished scientists",
      "aliases": [
        "similarly accomplished scientists"
      ],
      "types": [
        "scientists"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Scientists who have achieved similar levels of accomplishment in the field of computer science, with varying degrees of detail and information available about them depending on their country of origin.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "similarly accomplished scientists",
          "local_types": [
            "scientists"
          ],
          "iri": "Entity-similarly_accomplished_scientist-Mention-1"
        }
      ],
      "relevance": 0.400390625
    },
    "Entity-then_(1)": {
      "node_id": "then_(1)",
      "disambiguation_index": 1,
      "label": "Then",
      "aliases": [
        "Then"
      ],
      "types": [
        "event"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating new unary facts from a given predicate and its related facts.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-5",
          "local_name": "Then",
          "local_types": [
            "event"
          ],
          "iri": "Entity-then_(1)-Mention-1"
        }
      ],
      "relevance": 0.400390625
    },
    "Entity-_e1__...__en_": {
      "node_id": "_e1__...__en_",
      "disambiguation_index": 0,
      "label": "{e1, ..., en}",
      "aliases": [
        "{e1, ..., en}"
      ],
      "types": [
        "notation",
        "list of entities",
        "mathematical concept",
        "set notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "{e1, ..., en}",
          "local_types": [
            "notation",
            "list of entities",
            "mathematical concept",
            "set notation"
          ],
          "iri": "Entity-_e1__...__en_-Mention-1"
        }
      ],
      "relevance": 0.400146484375
    },
    "Entity-_e2__e3__satisfies_the_head_with_count_2": {
      "node_id": "_e2__e3__satisfies_the_head_with_count_2",
      "disambiguation_index": 0,
      "label": "{e2, e3} satisfies the head with count 2",
      "aliases": [
        "{e2, e3} satisfies the head with count 2"
      ],
      "types": [
        "conclusion",
        "algorithmic process"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-4",
          "local_name": "{e2, e3} satisfies the head with count 2",
          "local_types": [
            "conclusion",
            "algorithmic process"
          ],
          "iri": "Entity-_e2__e3__satisfies_the_head_with_count_2-Mention-1"
        }
      ],
      "relevance": 0.400146484375
    },
    "Entity-non-zero_element": {
      "node_id": "non-zero_element",
      "disambiguation_index": 0,
      "label": "non-zero element",
      "aliases": [
        "non-zero element"
      ],
      "types": [
        "data point",
        "mathematical concept",
        "element",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A value or quantity that has magnitude, as opposed to zero.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "non-zero element",
          "local_types": [
            "data point",
            "mathematical concept",
            "element",
            "mathematics"
          ],
          "iri": "Entity-non-zero_element-Mention-1"
        }
      ],
      "relevance": 0.39990234375
    },
    "Entity-then_we_produce_new_unary_fact_based_on_the_new_predicate_and_related_fact": {
      "node_id": "then_we_produce_new_unary_fact_based_on_the_new_predicate_and_related_fact",
      "disambiguation_index": 0,
      "label": "Then we produce new unary facts based on the new predicate and related facts",
      "aliases": [
        "Then we produce new unary facts based on the new predicate and related facts"
      ],
      "types": [
        "production",
        "unary fact",
        "related fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of generating new unary fact predicates from existing predicates and their related facts.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-5",
          "local_name": "Then we produce new unary facts based on the new predicate and related facts",
          "local_types": [
            "production",
            "unary fact",
            "related fact"
          ],
          "iri": "Entity-then_we_produce_new_unary_fact_based_on_the_new_predicate_and_related_fact-Mention-1"
        }
      ],
      "relevance": 0.39990234375
    },
    "Entity-50___31___and_56_": {
      "node_id": "50___31___and_56_",
      "disambiguation_index": 0,
      "label": "50%, 31%, and 56%",
      "aliases": [
        "50%, 31%, and 56%"
      ],
      "types": [
        "percentage"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A proportion or percentage",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-3-Sentence-1",
          "local_name": "50%, 31%, and 56%",
          "local_types": [
            "percentage"
          ],
          "iri": "Entity-50___31___and_56_-Mention-1"
        }
      ],
      "relevance": 0.39990234375
    },
    "Entity-pt__x__z0_": {
      "node_id": "pt__x__z0_",
      "disambiguation_index": 0,
      "label": "Pt(x, z0)",
      "aliases": [
        "Pt(x, z0)"
      ],
      "types": [
        "mathematical expression",
        "notation",
        "function",
        "predicate",
        "predicate logic expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical function or predicate that takes two arguments and returns a value",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-2",
          "local_name": "Pt(x, z0)",
          "local_types": [
            "mathematical expression",
            "notation",
            "function",
            "predicate",
            "predicate logic expression"
          ],
          "iri": "Entity-pt__x__z0_-Mention-1"
        }
      ],
      "relevance": 0.399658203125
    },
    "Entity-one_proposal": {
      "node_id": "one_proposal",
      "disambiguation_index": 0,
      "label": "One proposal",
      "aliases": [
        "One proposal"
      ],
      "types": [
        "proposal",
        "concept",
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A proposed concept, idea or plan",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-6-Sentence-1",
          "local_name": "One proposal",
          "local_types": [
            "proposal",
            "concept",
            "idea"
          ],
          "iri": "Entity-one_proposal-Mention-1"
        }
      ],
      "relevance": 0.3994140625
    },
    "Entity-this_paper": {
      "node_id": "this_paper",
      "disambiguation_index": 0,
      "label": "This paper",
      "aliases": [
        "This paper"
      ],
      "types": [
        "research",
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "This paper",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "This paper",
          "local_types": [
            "research",
            "paper"
          ],
          "iri": "Entity-this_paper-Mention-1"
        }
      ],
      "relevance": 0.3994140625
    },
    "Entity-each_hand_is_assigned_to_any_or_all_of_nine_different_rank__including_high_card__one_pair__two_pair__etc_.": {
      "node_id": "each_hand_is_assigned_to_any_or_all_of_nine_different_rank__including_high_card__one_pair__two_pair__etc_.",
      "disambiguation_index": 0,
      "label": "Each hand is assigned to any or all of nine different ranks, including High Card, One Pair, Two Pair, etc.",
      "aliases": [
        "Each hand is assigned to any or all of nine different ranks, including High Card, One Pair, Two Pair, etc."
      ],
      "types": [
        "ranks"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A poker hand ranking system with nine possible rankings, including High Card and various pair combinations.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-7",
          "local_name": "Each hand is assigned to any or all of nine different ranks, including High Card, One Pair, Two Pair, etc.",
          "local_types": [
            "ranks"
          ],
          "iri": "Entity-each_hand_is_assigned_to_any_or_all_of_nine_different_rank__including_high_card__one_pair__two_pair__etc_.-Mention-1"
        }
      ],
      "relevance": 0.399169921875
    },
    "Entity-fullhouse__x_": {
      "node_id": "fullhouse__x_",
      "disambiguation_index": 0,
      "label": "fullHouse(x)",
      "aliases": [
        "fullHouse(x)"
      ],
      "types": [
        "predicate",
        "mathematical function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A unary predicate representing a specific type of poker hand, where x is a particular combination of cards.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-9",
          "local_name": "fullHouse(x)",
          "local_types": [
            "predicate",
            "mathematical function"
          ],
          "iri": "Entity-fullhouse__x_-Mention-1"
        }
      ],
      "relevance": 0.39892578125
    },
    "Entity-this_experiment": {
      "node_id": "this_experiment",
      "disambiguation_index": 0,
      "label": "this experiment",
      "aliases": [
        "this experiment"
      ],
      "types": [
        "experiment",
        "study"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A controlled investigation or study designed to test a hypothesis or gather data.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-1",
          "local_name": "this experiment",
          "local_types": [
            "experiment",
            "study"
          ],
          "iri": "Entity-this_experiment-Mention-1"
        }
      ],
      "relevance": 0.398681640625
    },
    "Entity-language__z3_": {
      "node_id": "language__z3_",
      "disambiguation_index": 0,
      "label": "language(z3)",
      "aliases": [
        "language(z3)"
      ],
      "types": [
        "medium of communication",
        "linguistic system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A specific natural or artificial language used for communication",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "language(z3)",
          "local_types": [
            "medium of communication",
            "linguistic system"
          ],
          "iri": "Entity-language__z3_-Mention-1"
        }
      ],
      "relevance": 0.398193359375
    },
    "Entity-with_e___e1__...__en_": {
      "node_id": "with_e___e1__...__en_",
      "disambiguation_index": 0,
      "label": "with E = {e1, ..., en}",
      "aliases": [
        "with E = {e1, ..., en}"
      ],
      "types": [
        "set theory",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "with E = {e1, ..., en}",
          "local_types": [
            "set theory",
            "mathematics"
          ],
          "iri": "Entity-with_e___e1__...__en_-Mention-1"
        }
      ],
      "relevance": 0.398193359375
    },
    "Entity-e4": {
      "node_id": "e4",
      "disambiguation_index": 0,
      "label": "e4",
      "aliases": [
        "e4"
      ],
      "types": [
        "mathematical entity",
        "entity",
        "variable"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical variable that satisfies certain properties.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-3",
          "local_name": "e4",
          "local_types": [
            "mathematical entity",
            "entity",
            "variable"
          ],
          "iri": "Entity-e4-Mention-1"
        }
      ],
      "relevance": 0.39794921875
    },
    "Entity-distinct_e_s_(1)": {
      "node_id": "distinct_e_s_(1)",
      "disambiguation_index": 1,
      "label": "distinct e's",
      "aliases": [
        "distinct e's"
      ],
      "types": [
        "entity",
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of entities that satisfy the body of a rule, i.e., the count of e' such that there exists e'' with Pt(e'', e').",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "distinct e's",
          "local_types": [
            "entity",
            "variable"
          ],
          "iri": "Entity-distinct_e_s_(1)-Mention-1"
        }
      ],
      "relevance": 0.397705078125
    },
    "Entity-p___p1__...__pm__be_the_set_of_all_predicate_in_f_.": {
      "node_id": "p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "disambiguation_index": 0,
      "label": "P = {P1, ..., Pm} be the set of all predicates in F.",
      "aliases": [
        "P = {P1, ..., Pm} be the set of all predicates in F."
      ],
      "types": [
        "definition",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or set of logical predicate statements.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "P = {P1, ..., Pm} be the set of all predicates in F.",
          "local_types": [
            "definition",
            "logic"
          ],
          "iri": "Entity-p___p1__...__pm__be_the_set_of_all_predicate_in_f_.-Mention-1"
        }
      ],
      "relevance": 0.3974609375
    },
    "Entity-distinct_e_s_by_summing_each_row_of_this_product_to_obtain_the_vector_v1__a__p1___a__p2___...__a__pm__": {
      "node_id": "distinct_e_s_by_summing_each_row_of_this_product_to_obtain_the_vector_v1__a__p1___a__p2___...__a__pm__",
      "disambiguation_index": 0,
      "label": "distinct e's by summing each row of this product to obtain the vector V^1(A(P1)*A(P2)*...*A(Pm))",
      "aliases": [
        "distinct e's by summing each row of this product to obtain the vector V^1(A(P1)*A(P2)*...*A(Pm))"
      ],
      "types": [
        "entities",
        "vector"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entities that satisfy the head of a rule, obtained by summing each row of the matrix product A(P1)*A(P2)*...*A(Pm) and counting non-zero elements.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "distinct e's by summing each row of this product to obtain the vector V^1(A(P1)*A(P2)*...*A(Pm))",
          "local_types": [
            "entities",
            "vector"
          ],
          "iri": "Entity-distinct_e_s_by_summing_each_row_of_this_product_to_obtain_the_vector_v1__a__p1___a__p2___...__a__pm__-Mention-1"
        }
      ],
      "relevance": 0.3974609375
    },
    "Entity-the_denominator_of_iopsc__r_": {
      "node_id": "the_denominator_of_iopsc__r_",
      "disambiguation_index": 0,
      "label": "the denominator of IOPSC(r)",
      "aliases": [
        "the denominator of IOPSC(r)"
      ],
      "types": [
        "denominator",
        "IOPSC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "the denominator of IOPSC(r)",
          "local_types": [
            "denominator",
            "IOPSC"
          ],
          "iri": "Entity-the_denominator_of_iopsc__r_-Mention-1"
        }
      ],
      "relevance": 0.3974609375
    },
    "Entity-a_person_in_a_specific_use_case_need_to_have_a_name__birth_date__and_place_of_birth": {
      "node_id": "a_person_in_a_specific_use_case_need_to_have_a_name__birth_date__and_place_of_birth",
      "disambiguation_index": 0,
      "label": "a person in a specific use case needs to have a name, birth date, and place of birth",
      "aliases": [
        "a person in a specific use case needs to have a name, birth date, and place of birth"
      ],
      "types": [
        "requirement",
        "ontology concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An individual with identifying characteristics",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "a person in a specific use case needs to have a name, birth date, and place of birth",
          "local_types": [
            "requirement",
            "ontology concept"
          ],
          "iri": "Entity-a_person_in_a_specific_use_case_need_to_have_a_name__birth_date__and_place_of_birth-Mention-1"
        }
      ],
      "relevance": 0.397216796875
    },
    "Entity-each_entity_e_i_to_a_vector_e_i_in_rd": {
      "node_id": "each_entity_e_i_to_a_vector_e_i_in_rd",
      "disambiguation_index": 0,
      "label": "each entity e_i to a vector E_i in R^d",
      "aliases": [
        "each entity e_i to a vector E_i in R^d"
      ],
      "types": [
        "entity representation",
        "embedding"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The representation of each entity as a d-dimensional vector, where d is an integer parameter.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-3",
          "local_name": "each entity e_i to a vector E_i in R^d",
          "local_types": [
            "entity representation",
            "embedding"
          ],
          "iri": "Entity-each_entity_e_i_to_a_vector_e_i_in_rd-Mention-1"
        }
      ],
      "relevance": 0.397216796875
    },
    "Entity-we_have_implemented": {
      "node_id": "we_have_implemented",
      "disambiguation_index": 0,
      "label": "We have implemented",
      "aliases": [
        "We have implemented"
      ],
      "types": [
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research project or initiative",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-1",
          "local_name": "We have implemented",
          "local_types": [
            "research"
          ],
          "iri": "Entity-we_have_implemented-Mention-1"
        }
      ],
      "relevance": 0.39697265625
    },
    "Entity-max_rule_length_l": {
      "node_id": "max_rule_length_l",
      "disambiguation_index": 0,
      "label": "max rule length l",
      "aliases": [
        "max rule length l",
        "max rule length"
      ],
      "types": [
        "metric",
        "parameter",
        "length",
        "length measure",
        "measure",
        "rule",
        "constant"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The maximum allowed length of a rule",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-3",
          "local_name": "max rule length l",
          "local_types": [
            "metric",
            "parameter",
            "length",
            "length measure",
            "rule",
            "constant"
          ],
          "iri": "Entity-max_rule_length_l-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-3",
          "local_name": "max rule length",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-max_rule_length_l-Mention-2"
        }
      ],
      "relevance": 0.396728515625
    },
    "Entity-strategy": {
      "node_id": "strategy",
      "disambiguation_index": 0,
      "label": "strategy",
      "aliases": [
        "strategy"
      ],
      "types": [
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A plan or method of action designed to achieve a particular goal",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-8",
          "local_name": "strategy",
          "local_types": [
            "approach"
          ],
          "iri": "Entity-strategy-Mention-1"
        }
      ],
      "relevance": 0.396484375
    },
    "Entity-for_example": {
      "node_id": "for_example",
      "disambiguation_index": 0,
      "label": "For example",
      "aliases": [
        "For example"
      ],
      "types": [
        "phrase",
        "example"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An illustrative instance or case used for explanatory purposes",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "For example",
          "local_types": [
            "phrase",
            "example"
          ],
          "iri": "Entity-for_example-Mention-1"
        }
      ],
      "relevance": 0.396240234375
    },
    "Entity-2.20_ghz": {
      "node_id": "2.20_ghz",
      "disambiguation_index": 0,
      "label": "2.20 GHz",
      "aliases": [
        "2.20 GHz"
      ],
      "types": [
        "speed",
        "frequency"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A frequency or speed of a processor",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-4-Sentence-1",
          "local_name": "2.20 GHz",
          "local_types": [
            "speed",
            "frequency"
          ],
          "iri": "Entity-2.20_ghz-Mention-1"
        }
      ],
      "relevance": 0.396240234375
    },
    "Entity-definition_3": {
      "node_id": "definition_3",
      "disambiguation_index": 0,
      "label": "Definition 3",
      "aliases": [
        "Definition 3"
      ],
      "types": [
        "definition",
        "concept definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept description that outlines a specific idea or principle.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "Definition 3",
          "local_types": [
            "definition",
            "concept definition"
          ],
          "iri": "Entity-definition_3-Mention-1"
        }
      ],
      "relevance": 0.39599609375
    },
    "Entity-3__ek___e__there_exists_e___e__in_e__k-1__and__pi__e__e___or_pi__e___e___": {
      "node_id": "3__ek___e__there_exists_e___e__in_e__k-1__and__pi__e__e___or_pi__e___e___",
      "disambiguation_index": 0,
      "label": "3:   Ek = { e | there exists e': e' in E(k-1) and (Pi(e, e') or Pi(e', e)) }",
      "aliases": [
        "3:   Ek = { e | there exists e': e' in E(k-1) and (Pi(e, e') or Pi(e', e)) }"
      ],
      "types": [
        "code snippet"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A recursive set of entities Ek that exists for each k from 2 to l, where an entity e is included if there exists another entity e' in E(k-1) and either Pi(e, e') or Pi(e', e) holds.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-7",
          "local_name": "3:   Ek = { e | there exists e': e' in E(k-1) and (Pi(e, e') or Pi(e', e)) }",
          "local_types": [
            "code snippet"
          ],
          "iri": "Entity-3__ek___e__there_exists_e___e__in_e__k-1__and__pi__e__e___or_pi__e___e___-Mention-1"
        }
      ],
      "relevance": 0.395751953125
    },
    "Entity-semi-automatic_manner": {
      "node_id": "semi-automatic_manner",
      "disambiguation_index": 0,
      "label": "semi-automatic manner",
      "aliases": [
        "semi-automatic manner"
      ],
      "types": [
        "manner",
        "process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method of performing tasks or processes that combines both manual and automated elements, often involving human oversight and input.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "semi-automatic manner",
          "local_types": [
            "manner",
            "process"
          ],
          "iri": "Entity-semi-automatic_manner-Mention-1"
        }
      ],
      "relevance": 0.395751953125
    },
    "Entity-occupation_such_a_singer_or_entrepreneur": {
      "node_id": "occupation_such_a_singer_or_entrepreneur",
      "disambiguation_index": 0,
      "label": "occupations such as singer or entrepreneur",
      "aliases": [
        "occupations such as singer or entrepreneur"
      ],
      "types": [
        "occupation",
        "singer",
        "entrepreneur"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of unary predicates in Wikidata+UP, including occupations like 'singer' and 'entrepreneur', which are all related to person entities.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "occupations such as singer or entrepreneur",
          "local_types": [
            "occupation",
            "singer",
            "entrepreneur"
          ],
          "iri": "Entity-occupation_such_a_singer_or_entrepreneur-Mention-1"
        }
      ],
      "relevance": 0.3955078125
    },
    "Entity-___e__e____body_r__e__e___and_pt__e__e____": {
      "node_id": "___e__e____body_r__e__e___and_pt__e__e____",
      "disambiguation_index": 0,
      "label": "|{ (e, e') : body_r(e, e') and Pt(e, e') }|",
      "aliases": [
        "|{ (e, e') : body_r(e, e') and Pt(e, e') }|"
      ],
      "types": [
        "expression",
        "mathematical notation",
        "set comprehension"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entity pairs that satisfy both the rule's body and head.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-6",
          "local_name": "|{ (e, e') : body_r(e, e') and Pt(e, e') }|",
          "local_types": [
            "expression",
            "mathematical notation",
            "set comprehension"
          ],
          "iri": "Entity-___e__e____body_r__e__e___and_pt__e__e____-Mention-1"
        }
      ],
      "relevance": 0.39501953125
    },
    "Entity-the_tree_support_and_tree_standard_confidence_of_r_are_given_respectively_by_treesupp__r_____e__there_exists_e__such_that_headr__e__and_pt__e___e___": {
      "node_id": "the_tree_support_and_tree_standard_confidence_of_r_are_given_respectively_by_treesupp__r_____e__there_exists_e__such_that_headr__e__and_pt__e___e___",
      "disambiguation_index": 0,
      "label": "The tree support and tree standard confidence of r are given respectively by Treesupp(r) = |{e : there exists e' such that headr(e) and Pt(e', e)}|",
      "aliases": [
        "The tree support and tree standard confidence of r are given respectively by Treesupp(r) = |{e : there exists e' such that headr(e) and Pt(e', e)}|"
      ],
      "types": [
        "equation",
        "mathematical equation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical equation that defines the tree support and standard confidence of a given entity 'r'.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-5",
          "local_name": "The tree support and tree standard confidence of r are given respectively by Treesupp(r) = |{e : there exists e' such that headr(e) and Pt(e', e)}|",
          "local_types": [
            "equation",
            "mathematical equation"
          ],
          "iri": "Entity-the_tree_support_and_tree_standard_confidence_of_r_are_given_respectively_by_treesupp__r_____e__there_exists_e__such_that_headr__e__and_pt__e___e___-Mention-1"
        }
      ],
      "relevance": 0.39501953125
    },
    "Entity-occupation": {
      "node_id": "occupation",
      "disambiguation_index": 0,
      "label": "occupations",
      "aliases": [
        "occupations"
      ],
      "types": [
        "category",
        "profession",
        "job title"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A category of roles or positions that an individual may hold, often characterized by specific responsibilities and activities.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "occupations",
          "local_types": [
            "category",
            "profession"
          ],
          "iri": "Entity-occupation-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-4",
          "local_name": "occupations",
          "local_types": [
            "job title",
            "profession"
          ],
          "iri": "Entity-occupation-Mention-2"
        }
      ],
      "relevance": 0.39501953125
    },
    "Entity-threshold": {
      "node_id": "threshold",
      "disambiguation_index": 0,
      "label": "threshold",
      "aliases": [
        "threshold",
        "thresholds"
      ],
      "types": [
        "boundary value",
        "value",
        "parameter",
        "standard",
        "limit"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point or value that marks a boundary, limit, or standard beyond which something changes or takes effect.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-4-Sentence-4",
          "local_name": "threshold",
          "local_types": [
            "boundary value",
            "limit"
          ],
          "iri": "Entity-threshold-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-2-Sentence-3",
          "local_name": "thresholds",
          "local_types": [
            "standard",
            "limit"
          ],
          "iri": "Entity-threshold-Mention-2"
        },
        {
          "reference": "Section-15-Paragraph-2-Sentence-4",
          "local_name": "threshold",
          "local_types": [
            "parameter",
            "value"
          ],
          "iri": "Entity-threshold-Mention-3"
        }
      ],
      "relevance": 0.394775390625
    },
    "Entity-uncertainty": {
      "node_id": "uncertainty",
      "disambiguation_index": 0,
      "label": "uncertainty",
      "aliases": [
        "uncertainty"
      ],
      "types": [
        "concept",
        "phenomenon"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A state or condition characterized by lack of clarity, doubtfulness, or unpredictability.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-4-Sentence-3",
          "local_name": "uncertainty",
          "local_types": [
            "concept",
            "phenomenon"
          ],
          "iri": "Entity-uncertainty-Mention-1"
        }
      ],
      "relevance": 0.394775390625
    },
    "Entity-that_join_the_head_of_the_rule_to_it_body": {
      "node_id": "that_join_the_head_of_the_rule_to_it_body",
      "disambiguation_index": 0,
      "label": "that join the head of the rule to its body",
      "aliases": [
        "that join the head of the rule to its body"
      ],
      "types": [
        "relationship"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of entities that satisfy both the head and body of a rule, indicating the connection between them.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-4",
          "local_name": "that join the head of the rule to its body",
          "local_types": [
            "relationship"
          ],
          "iri": "Entity-that_join_the_head_of_the_rule_to_it_body-Mention-1"
        }
      ],
      "relevance": 0.39453125
    },
    "Entity-66_gb_ram": {
      "node_id": "66_gb_ram",
      "disambiguation_index": 0,
      "label": "66 GB RAM",
      "aliases": [
        "66 GB RAM"
      ],
      "types": [
        "resource",
        "memory",
        "memory capacity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A quantity of random access memory (RAM) with a capacity of sixty-six gigabytes.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-4-Sentence-1",
          "local_name": "66 GB RAM",
          "local_types": [
            "resource",
            "memory",
            "memory capacity"
          ],
          "iri": "Entity-66_gb_ram-Mention-1"
        }
      ],
      "relevance": 0.394287109375
    },
    "Entity-presenting": {
      "node_id": "presenting",
      "disambiguation_index": 0,
      "label": "Presenting",
      "aliases": [
        "Presenting"
      ],
      "types": [
        "method",
        "technique",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The act or process of introducing, displaying, or showcasing something.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-6-Sentence-1",
          "local_name": "Presenting",
          "local_types": [
            "method",
            "technique",
            "predicate"
          ],
          "iri": "Entity-presenting-Mention-1"
        }
      ],
      "relevance": 0.394287109375
    },
    "Entity-entity_that_satisfy_target_predicate": {
      "node_id": "entity_that_satisfy_target_predicate",
      "disambiguation_index": 0,
      "label": "entities that satisfy target predicates",
      "aliases": [
        "entities that satisfy target predicates"
      ],
      "types": [
        "entity",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of objects or concepts that meet specific criteria or conditions.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-1-Sentence-2",
          "local_name": "entities that satisfy target predicates",
          "local_types": [
            "entity",
            "predicate"
          ],
          "iri": "Entity-entity_that_satisfy_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.394287109375
    },
    "Entity-the_number": {
      "node_id": "the_number",
      "disambiguation_index": 0,
      "label": "The number",
      "aliases": [
        "The number"
      ],
      "types": [
        "quantity",
        "count"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of entities that satisfy the head of a rule, i.e. the count of e' such that there exists e'' with head_r(e'', e')",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "The number",
          "local_types": [
            "quantity",
            "count"
          ],
          "iri": "Entity-the_number-Mention-1"
        }
      ],
      "relevance": 0.394287109375
    },
    "Entity-experimental_evaluation": {
      "node_id": "experimental_evaluation",
      "disambiguation_index": 0,
      "label": "experimental evaluation",
      "aliases": [
        "experimental evaluation"
      ],
      "types": [
        "research",
        "experiment",
        "study",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic investigation or assessment to test a hypothesis, theory, or concept.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "experimental evaluation",
          "local_types": [
            "research",
            "experiment",
            "study",
            "evaluation"
          ],
          "iri": "Entity-experimental_evaluation-Mention-1"
        }
      ],
      "relevance": 0.39404296875
    },
    "Entity-and_a_body_at_the_tail": {
      "node_id": "and_a_body_at_the_tail",
      "disambiguation_index": 0,
      "label": "and a body at the tail",
      "aliases": [
        "and a body at the tail"
      ],
      "types": [
        "part",
        "component",
        "location",
        "position"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A part or component that refers to the location or position where an entity's body ends, typically indicating the end of a path or sequence.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-4",
          "local_name": "and a body at the tail",
          "local_types": [
            "part",
            "component",
            "location",
            "position"
          ],
          "iri": "Entity-and_a_body_at_the_tail-Mention-1"
        }
      ],
      "relevance": 0.393798828125
    },
    "Entity-entity_associated_with_any_predicate_within_distance_l": {
      "node_id": "entity_associated_with_any_predicate_within_distance_l",
      "disambiguation_index": 0,
      "label": "entities associated with any predicate within distance l",
      "aliases": [
        "entities associated with any predicate within distance l"
      ],
      "types": [
        "entity association"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of entities connected to each other through predicates, where the connection is limited to a specific distance (l) from a target entity or predicate.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-4",
          "local_name": "entities associated with any predicate within distance l",
          "local_types": [
            "entity association"
          ],
          "iri": "Entity-entity_associated_with_any_predicate_within_distance_l-Mention-1"
        }
      ],
      "relevance": 0.393798828125
    },
    "Entity-previous_research": {
      "node_id": "previous_research",
      "disambiguation_index": 0,
      "label": "previous research",
      "aliases": [
        "previous research"
      ],
      "types": [
        "study"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Studies and investigations conducted before the current one",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-7",
          "local_name": "previous research",
          "local_types": [
            "study"
          ],
          "iri": "Entity-previous_research-Mention-1"
        }
      ],
      "relevance": 0.3935546875
    },
    "Entity-capitalof_____": {
      "node_id": "capitalof_____",
      "disambiguation_index": 0,
      "label": "capitalOf(?, ?)",
      "aliases": [
        "capitalOf(?, ?)"
      ],
      "types": [
        "question",
        "geographic location"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A concept that represents the relationship between an entity and its capital city.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-4",
          "local_name": "capitalOf(?, ?)",
          "local_types": [
            "question",
            "geographic location"
          ],
          "iri": "Entity-capitalof_____-Mention-1"
        }
      ],
      "relevance": 0.3935546875
    },
    "Entity-p2___z1__z2_": {
      "node_id": "p2___z1__z2_",
      "disambiguation_index": 0,
      "label": "P2'(z1, z2)",
      "aliases": [
        "P2'(z1, z2)"
      ],
      "types": [
        "process",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A process or function that takes two inputs and produces an outcome.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-4",
          "local_name": "P2'(z1, z2)",
          "local_types": [
            "process",
            "function"
          ],
          "iri": "Entity-p2___z1__z2_-Mention-1"
        }
      ],
      "relevance": 0.39306640625
    },
    "Entity-body": {
      "node_id": "body",
      "disambiguation_index": 0,
      "label": "body",
      "aliases": [
        "body"
      ],
      "types": [
        "part of a rule",
        "part",
        "expression",
        "sub-part",
        "logical construct",
        "formula",
        "component",
        "term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The physical structure or composition that makes up a living organism, or more broadly, any organized system.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "body",
          "local_types": [
            "part of a rule",
            "logical construct"
          ],
          "iri": "Entity-body-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-1",
          "local_name": "body",
          "local_types": [
            "formula",
            "expression",
            "term"
          ],
          "iri": "Entity-body-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-4",
          "local_name": "body",
          "local_types": [
            "part of a rule",
            "sub-part"
          ],
          "iri": "Entity-body-Mention-3"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-6",
          "local_name": "body",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-body-Mention-4"
        }
      ],
      "relevance": 0.392822265625
    },
    "Entity-the_next_step_a_described_below": {
      "node_id": "the_next_step_a_described_below",
      "disambiguation_index": 0,
      "label": "the next step as described below",
      "aliases": [
        "the next step as described below"
      ],
      "types": [
        "step",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A process or action that follows a previous one, used for evaluating or assessing something.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "the next step as described below",
          "local_types": [
            "step",
            "evaluation"
          ],
          "iri": "Entity-the_next_step_a_described_below-Mention-1"
        }
      ],
      "relevance": 0.392822265625
    },
    "Entity-these_predicate_each_have_a_class_a_their_second_argument": {
      "node_id": "these_predicate_each_have_a_class_a_their_second_argument",
      "disambiguation_index": 0,
      "label": "these predicates each have a class as their second argument",
      "aliases": [
        "these predicates each have a class as their second argument"
      ],
      "types": [
        "predicate property"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A predicate with a specific type of relationship to a class.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-8-Sentence-2",
          "local_name": "these predicates each have a class as their second argument",
          "local_types": [
            "predicate property"
          ],
          "iri": "Entity-these_predicate_each_have_a_class_a_their_second_argument-Mention-1"
        }
      ],
      "relevance": 0.392822265625
    },
    "Entity-variant": {
      "node_id": "variant",
      "disambiguation_index": 0,
      "label": "variant",
      "aliases": [
        "variant"
      ],
      "types": [
        "concept",
        "instance"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A distinct or alternative form of something",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-4",
          "local_name": "variant",
          "local_types": [
            "concept",
            "instance"
          ],
          "iri": "Entity-variant-Mention-1"
        }
      ],
      "relevance": 0.392578125
    },
    "Entity-_3_": {
      "node_id": "_3_",
      "disambiguation_index": 0,
      "label": "(3)",
      "aliases": [
        "(3)"
      ],
      "types": [
        "notation",
        "mathematical notation",
        "equation",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical expression or equation",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "(3)",
          "local_types": [
            "notation",
            "expression",
            "mathematical notation",
            "equation"
          ],
          "iri": "Entity-_3_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "(3)",
          "local_types": [
            "equation",
            "mathematical notation"
          ],
          "iri": "Entity-_3_-Mention-2"
        }
      ],
      "relevance": 0.392333984375
    },
    "Entity-literature": {
      "node_id": "literature",
      "disambiguation_index": 0,
      "label": "literature",
      "aliases": [
        "literature"
      ],
      "types": [
        "academic field",
        "research area"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Written works or scholarly publications that contribute to a field of study, research area, or intellectual inquiry.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-7",
          "local_name": "literature",
          "local_types": [
            "academic field",
            "research area"
          ],
          "iri": "Entity-literature-Mention-1"
        }
      ],
      "relevance": 0.39208984375
    },
    "Entity-28": {
      "node_id": "28",
      "disambiguation_index": 0,
      "label": "28",
      "aliases": [
        "28"
      ],
      "types": [
        "number",
        "quantity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of 28 unary predicates used as target predicates in an experiment.",
      "mentions": [
        {
          "reference": "Section-16-Paragraph-3-Sentence-2",
          "local_name": "28",
          "local_types": [
            "number",
            "quantity"
          ],
          "iri": "Entity-28-Mention-1"
        }
      ],
      "relevance": 0.39208984375
    },
    "Entity-pi": {
      "node_id": "pi",
      "disambiguation_index": 0,
      "label": "Pi",
      "aliases": [
        "Pi"
      ],
      "types": [
        "concept",
        "predicate",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The mathematical function that represents the ratio of a circle's circumference to its diameter.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-3",
          "local_name": "Pi",
          "local_types": [
            "concept",
            "predicate",
            "function"
          ],
          "iri": "Entity-pi-Mention-1"
        }
      ],
      "relevance": 0.390625
    },
    "Entity-body_at_the_tail": {
      "node_id": "body_at_the_tail",
      "disambiguation_index": 0,
      "label": "body at the tail",
      "aliases": [
        "body at the tail"
      ],
      "types": [
        "part",
        "component"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A part or component that refers to the rear section of an entity, such as a place or person.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-4",
          "local_name": "body at the tail",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-body_at_the_tail-Mention-1"
        }
      ],
      "relevance": 0.390625
    },
    "Entity-an_identifier_for_an_object_such_a_a_place_or_a_person": {
      "node_id": "an_identifier_for_an_object_such_a_a_place_or_a_person",
      "disambiguation_index": 0,
      "label": "an identifier for an object such as a place or a person",
      "aliases": [
        "an identifier for an object such as a place or a person"
      ],
      "types": [
        "definition",
        "identifier"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A unique label used to represent a location, individual, or thing.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-1",
          "local_name": "an identifier for an object such as a place or a person",
          "local_types": [
            "definition",
            "identifier"
          ],
          "iri": "Entity-an_identifier_for_an_object_such_a_a_place_or_a_person-Mention-1"
        }
      ],
      "relevance": 0.390380859375
    },
    "Entity-p2__z1__z2_": {
      "node_id": "p2__z1__z2_",
      "disambiguation_index": 0,
      "label": "P2(z1, z2)",
      "aliases": [
        "P2(z1,z2)",
        "P2(z1, z2)"
      ],
      "types": [
        "mathematical function",
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function that takes two inputs and returns a value",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-1",
          "local_name": "P2(z1, z2)",
          "local_types": [
            "mathematical function",
            "predicate",
            "function"
          ],
          "iri": "Entity-p2__z1__z2_-Mention-1"
        }
      ],
      "relevance": 0.390380859375
    },
    "Entity-n": {
      "node_id": "n",
      "disambiguation_index": 0,
      "label": "n",
      "aliases": [
        "n"
      ],
      "types": [
        "variable",
        "number"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical expression or quantity",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "n",
          "local_types": [
            "variable",
            "number"
          ],
          "iri": "Entity-n-Mention-1"
        }
      ],
      "relevance": 0.389892578125
    },
    "Entity-_e__e1_": {
      "node_id": "_e__e1_",
      "disambiguation_index": 0,
      "label": "(e, e1)",
      "aliases": [
        "(e, e1)"
      ],
      "types": [
        "pair",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of entities related by a sequence of relationships",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "(e, e1)",
          "local_types": [
            "pair",
            "mathematical concept"
          ],
          "iri": "Entity-_e__e1_-Mention-1"
        }
      ],
      "relevance": 0.389892578125
    },
    "Entity-suit": {
      "node_id": "suit",
      "disambiguation_index": 0,
      "label": "suit",
      "aliases": [
        "suit"
      ],
      "types": [
        "category",
        "attribute"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of four cards with distinct designs or patterns, used to categorize playing cards.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-6",
          "local_name": "suit",
          "local_types": [
            "category",
            "attribute"
          ],
          "iri": "Entity-suit-Mention-1"
        }
      ],
      "relevance": 0.389892578125
    },
    "Entity-the_number_of_entity": {
      "node_id": "the_number_of_entity",
      "disambiguation_index": 0,
      "label": "The number of entities",
      "aliases": [
        "The number of entities"
      ],
      "types": [
        "quantity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of entities that satisfy the body of a rule, i.e., the count of 'e' such that there exists 'e'' with Pt(e'', e').",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "The number of entities",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-the_number_of_entity-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-4",
          "local_name": "The number of entities",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-the_number_of_entity-Mention-2"
        }
      ],
      "relevance": 0.389892578125
    },
    "Entity-it": {
      "node_id": "it",
      "disambiguation_index": 0,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "thing",
        "entity",
        "object"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A generic entity or object that can be anything, such as a physical thing, an abstract concept, or a non-physical entity.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-7",
          "local_name": "It",
          "local_types": [
            "thing",
            "entity",
            "object"
          ],
          "iri": "Entity-it-Mention-1"
        }
      ],
      "relevance": 0.3896484375
    },
    "Entity-we": {
      "node_id": "we",
      "disambiguation_index": 0,
      "label": "We",
      "aliases": [
        "We",
        "we"
      ],
      "types": [
        "researcher",
        "author"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A group of researchers or authors",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-5-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "We",
          "local_types": [
            "researcher",
            "author"
          ],
          "iri": "Entity-we-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "we",
          "local_types": [
            "researcher"
          ],
          "iri": "Entity-we-Mention-3"
        }
      ],
      "relevance": 0.3896484375
    },
    "Entity-p2_1": {
      "node_id": "p2_1",
      "disambiguation_index": 0,
      "label": "P2_1",
      "aliases": [
        "P2_1"
      ],
      "types": [
        "notation",
        "argument",
        "symbol",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "P2_1 refers to a predicate argument that has the same variable as another predicate argument, satisfying certain similarities and properties.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-2",
          "local_name": "P2_1",
          "local_types": [
            "notation",
            "argument",
            "symbol",
            "variable"
          ],
          "iri": "Entity-p2_1-Mention-1"
        }
      ],
      "relevance": 0.3896484375
    },
    "Entity-the_tree": {
      "node_id": "the_tree",
      "disambiguation_index": 0,
      "label": "the trees",
      "aliases": [
        "the trees"
      ],
      "types": [
        "trees"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A group of woody perennial plants with a stem, leaves, and roots.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-2",
          "local_name": "the trees",
          "local_types": [
            "trees"
          ],
          "iri": "Entity-the_tree-Mention-1"
        }
      ],
      "relevance": 0.3896484375
    },
    "Entity-head_r__e__e__": {
      "node_id": "head_r__e__e__",
      "disambiguation_index": 0,
      "label": "head_r(e, e')",
      "aliases": [
        "head_r(e, e')"
      ],
      "types": [
        "notation",
        "expression",
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function or predicate that takes two entities as input and returns a count of their instantiations.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-3",
          "local_name": "head_r(e, e')",
          "local_types": [
            "notation",
            "expression",
            "predicate",
            "function"
          ],
          "iri": "Entity-head_r__e__e__-Mention-1"
        }
      ],
      "relevance": 0.388916015625
    },
    "Entity-a_head": {
      "node_id": "a_head",
      "disambiguation_index": 0,
      "label": "a head",
      "aliases": [
        "a head"
      ],
      "types": [
        "part",
        "component"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A part or component that serves as an identifier for an object such as a place or a person.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-4",
          "local_name": "a head",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-a_head-Mention-1"
        }
      ],
      "relevance": 0.388916015625
    },
    "Entity-definition_1": {
      "node_id": "definition_1",
      "disambiguation_index": 0,
      "label": "Definition 1",
      "aliases": [
        "Definition 1",
        "Definition"
      ],
      "types": [
        "notation",
        "concept",
        "definition"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A formal statement of meaning or explanation",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-1",
          "local_name": "Definition 1",
          "local_types": [
            "concept",
            "definition"
          ],
          "iri": "Entity-definition_1-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "Definition 1",
          "local_types": [
            "notation",
            "concept",
            "definition"
          ],
          "iri": "Entity-definition_1-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-1",
          "local_name": "Definition",
          "local_types": [
            "notation",
            "concept"
          ],
          "iri": "Entity-definition_1-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "Definition",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-definition_1-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-3-Sentence-1",
          "local_name": "Definition",
          "local_types": [
            "notation",
            "concept",
            "definition"
          ],
          "iri": "Entity-definition_1-Mention-5"
        }
      ],
      "relevance": 0.388671875
    },
    "Entity-then_a_set_of_pair_of_entity__e__e1___...___e__eq__satisfies_the_head_of_r__denoted_headr__e__": {
      "node_id": "then_a_set_of_pair_of_entity__e__e1___...___e__eq__satisfies_the_head_of_r__denoted_headr__e__",
      "disambiguation_index": 0,
      "label": "Then a set of pairs of entities (e, e1), ..., (e, eq) satisfies the head of r, denoted headr(e),",
      "aliases": [
        "Then a set of pairs of entities (e, e1), ..., (e, eq) satisfies the head of r, denoted headr(e),"
      ],
      "types": [
        "definition",
        "logical definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of pairs that satisfies a logical definition or head of a relation.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "Then a set of pairs of entities (e, e1), ..., (e, eq) satisfies the head of r, denoted headr(e),",
          "local_types": [
            "definition",
            "logical definition"
          ],
          "iri": "Entity-then_a_set_of_pair_of_entity__e__e1___...___e__eq__satisfies_the_head_of_r__denoted_headr__e__-Mention-1"
        }
      ],
      "relevance": 0.388671875
    },
    "Entity-each_card_is_described_using_two_attribute__suit_and_rank": {
      "node_id": "each_card_is_described_using_two_attribute__suit_and_rank",
      "disambiguation_index": 0,
      "label": "each card is described using two attributes: suit and rank",
      "aliases": [
        "each card is described using two attributes: suit and rank"
      ],
      "types": [
        "attributes"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A characteristic or feature of a playing card.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-6",
          "local_name": "each card is described using two attributes: suit and rank",
          "local_types": [
            "attributes"
          ],
          "iri": "Entity-each_card_is_described_using_two_attribute__suit_and_rank-Mention-1"
        }
      ],
      "relevance": 0.388671875
    },
    "Entity-country__z1_": {
      "node_id": "country__z1_",
      "disambiguation_index": 0,
      "label": "country(z1)",
      "aliases": [
        "country(z1)"
      ],
      "types": [
        "location",
        "geopolitical entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sovereign state with defined borders",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "country(z1)",
          "local_types": [
            "location",
            "geopolitical entity"
          ],
          "iri": "Entity-country__z1_-Mention-1"
        }
      ],
      "relevance": 0.387939453125
    },
    "Entity-_e__e___satisfies_the_body_of_r": {
      "node_id": "_e__e___satisfies_the_body_of_r",
      "disambiguation_index": 0,
      "label": "(e, e') satisfies the body of r",
      "aliases": [
        "(e, e') satisfies the body of r"
      ],
      "types": [
        "relation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A pair of entities (e, e') that satisfies a closed-path rule's body",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "(e, e') satisfies the body of r",
          "local_types": [
            "relation"
          ],
          "iri": "Entity-_e__e___satisfies_the_body_of_r-Mention-1"
        }
      ],
      "relevance": 0.387939453125
    },
    "Entity-_x__y_": {
      "node_id": "_x__y_",
      "disambiguation_index": 0,
      "label": "(x,y)",
      "aliases": [
        "(x,y)"
      ],
      "types": [
        "equation",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical expression representing a point in n-dimensional space defined by a combination of predicates.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-1",
          "local_name": "(x,y)",
          "local_types": [
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-_x__y_-Mention-1"
        }
      ],
      "relevance": 0.38720703125
    },
    "Entity-the_count_of_e_": {
      "node_id": "the_count_of_e_",
      "disambiguation_index": 0,
      "label": "the count of e'",
      "aliases": [
        "the count of e'"
      ],
      "types": [
        "measure",
        "count"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The number of entities that satisfy the head of a rule, i.e., the count of 'e' such that there exists an entity '' with head_r('', ').",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "the count of e'",
          "local_types": [
            "measure",
            "count"
          ],
          "iri": "Entity-the_count_of_e_-Mention-1"
        }
      ],
      "relevance": 0.38720703125
    },
    "Entity-contributor": {
      "node_id": "contributor",
      "disambiguation_index": 0,
      "label": "contributors",
      "aliases": [
        "contributors"
      ],
      "types": [
        "people",
        "users"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Individuals or groups involved in creating, modifying, or maintaining content.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "contributors",
          "local_types": [
            "people",
            "users"
          ],
          "iri": "Entity-contributor-Mention-1"
        }
      ],
      "relevance": 0.38671875
    },
    "Entity-the_number_of_entity_that_join_the_head_of_the_rule_to_it_body": {
      "node_id": "the_number_of_entity_that_join_the_head_of_the_rule_to_it_body",
      "disambiguation_index": 0,
      "label": "the number of entities that join the head of the rule to its body",
      "aliases": [
        "the number of entities that join the head of the rule to its body"
      ],
      "types": [
        "count",
        "entities",
        "head_to_body_join"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The count of entities for which there exist other entities that satisfy the head of the rule and also appear as second arguments in facts matching the body of the rule.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-4",
          "local_name": "the number of entities that join the head of the rule to its body",
          "local_types": [
            "count",
            "entities",
            "head_to_body_join"
          ],
          "iri": "Entity-the_number_of_entity_that_join_the_head_of_the_rule_to_it_body-Mention-1"
        }
      ],
      "relevance": 0.38671875
    },
    "Entity-nine_different_rank": {
      "node_id": "nine_different_rank",
      "disambiguation_index": 0,
      "label": "nine different ranks",
      "aliases": [
        "nine different ranks"
      ],
      "types": [
        "ranks"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The nine different ranks refer to the various poker hands that can be formed with a deck of cards, including High Card, One Pair, Two Pair, and others.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-7",
          "local_name": "nine different ranks",
          "local_types": [
            "ranks"
          ],
          "iri": "Entity-nine_different_rank-Mention-1"
        }
      ],
      "relevance": 0.38671875
    },
    "Entity-we_may_need_a_rule_to_express_that_each_human_ha_at_least_two_parent": {
      "node_id": "we_may_need_a_rule_to_express_that_each_human_ha_at_least_two_parent",
      "disambiguation_index": 0,
      "label": "we may need a rule to express that each human has at least two parents",
      "aliases": [
        "we may need a rule to express that each human has at least two parents"
      ],
      "types": [
        "rule",
        "expression",
        "parent-child relationship",
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A statement expressing that every individual (human) must have at least two parent entities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "we may need a rule to express that each human has at least two parents",
          "local_types": [
            "rule",
            "expression",
            "parent-child relationship",
            "statement"
          ],
          "iri": "Entity-we_may_need_a_rule_to_express_that_each_human_ha_at_least_two_parent-Mention-1"
        }
      ],
      "relevance": 0.386474609375
    },
    "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist": {
      "node_id": "a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "disambiguation_index": 0,
      "label": "a song has an album with a record label, an album with two producers, an album with a genre, and an artist who is a musical artist",
      "aliases": [
        "a song has an album with a record label, an album with two producers, an album with a genre, and an artist who is a musical artist"
      ],
      "types": [
        "album",
        "artist",
        "genre",
        "song",
        "producers",
        "record label",
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A conceptual representation of a song's metadata, including its album, record label, two producers, genre, and artist.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-3",
          "local_name": "a song has an album with a record label, an album with two producers, an album with a genre, and an artist who is a musical artist",
          "local_types": [
            "album",
            "artist",
            "genre",
            "song",
            "producers",
            "record label",
            "example"
          ],
          "iri": "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist-Mention-1"
        }
      ],
      "relevance": 0.386474609375
    },
    "Entity-p1__x__z1_": {
      "node_id": "p1__x__z1_",
      "disambiguation_index": 0,
      "label": "P1( x, z1 )",
      "aliases": [
        "P1(x, z1)",
        "P1( x, z1 )",
        "P1(x,z1)"
      ],
      "types": [
        "mathematical function",
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function that takes one or more inputs and produces an output.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-1",
          "local_name": "P1( x, z1 )",
          "local_types": [
            "mathematical function",
            "predicate",
            "function"
          ],
          "iri": "Entity-p1__x__z1_-Mention-1"
        }
      ],
      "relevance": 0.38623046875
    },
    "Entity-p2__e1__e2_": {
      "node_id": "p2__e1__e2_",
      "disambiguation_index": 0,
      "label": "P2(e1, e2)",
      "aliases": [
        "P2(e1, e2)"
      ],
      "types": [
        "fact",
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A relationship between two entities that represents a fact or statement",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "P2(e1, e2)",
          "local_types": [
            "fact",
            "statement"
          ],
          "iri": "Entity-p2__e1__e2_-Mention-1"
        }
      ],
      "relevance": 0.38623046875
    },
    "Entity-that_are_related_to_the_target_predicate_pt_.": {
      "node_id": "that_are_related_to_the_target_predicate_pt_.",
      "disambiguation_index": 0,
      "label": "that are related to the target predicate Pt.",
      "aliases": [
        "that are related to the target predicate Pt."
      ],
      "types": [
        "predicate",
        "target"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities connected by the target predicate Pt.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "that are related to the target predicate Pt.",
          "local_types": [
            "predicate",
            "target"
          ],
          "iri": "Entity-that_are_related_to_the_target_predicate_pt_.-Mention-1"
        }
      ],
      "relevance": 0.38623046875
    },
    "Entity-predicate_and_entity": {
      "node_id": "predicate_and_entity",
      "disambiguation_index": 0,
      "label": "predicates and entities",
      "aliases": [
        "predicates and entities"
      ],
      "types": [
        "predicate",
        "entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept that represents both the relationships between things (predicates) and the individuals or objects involved in those relationships (entities).",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-5-Sentence-1",
          "local_name": "predicates and entities",
          "local_types": [
            "predicate",
            "entity"
          ],
          "iri": "Entity-predicate_and_entity-Mention-1"
        }
      ],
      "relevance": 0.385986328125
    },
    "Entity-album": {
      "node_id": "album",
      "disambiguation_index": 0,
      "label": "album",
      "aliases": [
        "album"
      ],
      "types": [
        "creative work",
        "music collection",
        "media content",
        "recorded work",
        "recorded music",
        "music release"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A collection of music recordings released in a single package.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-3",
          "local_name": "album",
          "local_types": [
            "creative work",
            "music collection",
            "recorded work",
            "recorded music",
            "music release"
          ],
          "iri": "Entity-album-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-3",
          "local_name": "album",
          "local_types": [
            "recorded work",
            "music release",
            "media content"
          ],
          "iri": "Entity-album-Mention-2"
        }
      ],
      "relevance": 0.3857421875
    },
    "Entity-the_predicate_argument": {
      "node_id": "the_predicate_argument",
      "disambiguation_index": 0,
      "label": "The predicate arguments",
      "aliases": [
        "The predicate arguments"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The set of entities or phrases that are related to a verb or action and help describe its meaning.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "The predicate arguments",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-the_predicate_argument-Mention-1"
        }
      ],
      "relevance": 0.385498046875
    },
    "Entity-the_predicate": {
      "node_id": "the_predicate",
      "disambiguation_index": 0,
      "label": "The predicate",
      "aliases": [
        "The predicate",
        "the composite predicate"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A logical statement or expression that connects entities satisfying a subject predicate to entities forming an object predicate along a path of predicates.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "The predicate",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-the_predicate-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "the composite predicate",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-the_predicate-Mention-2"
        }
      ],
      "relevance": 0.38525390625
    },
    "Entity-depth": {
      "node_id": "depth",
      "disambiguation_index": 0,
      "label": "depth",
      "aliases": [
        "depth"
      ],
      "types": [
        "dimension",
        "measurement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of how far something extends or protrudes",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-3",
          "local_name": "depth",
          "local_types": [
            "dimension",
            "measurement"
          ],
          "iri": "Entity-depth-Mention-1"
        }
      ],
      "relevance": 0.384521484375
    },
    "Entity-concept_or_class_membership": {
      "node_id": "concept_or_class_membership",
      "disambiguation_index": 0,
      "label": "concept or class membership",
      "aliases": [
        "concept or class membership"
      ],
      "types": [
        "class",
        "classification",
        "membership"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A category or group to which an individual belongs",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-1",
          "local_name": "concept or class membership",
          "local_types": [
            "class",
            "classification",
            "membership"
          ],
          "iri": "Entity-concept_or_class_membership-Mention-1"
        }
      ],
      "relevance": 0.384521484375
    },
    "Entity-an_entity": {
      "node_id": "an_entity",
      "disambiguation_index": 0,
      "label": "An entity",
      "aliases": [
        "An entity"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A concept representing an object, such as a place or a person, that serves as an identifier.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-1",
          "local_name": "An entity",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-an_entity-Mention-1"
        }
      ],
      "relevance": 0.384521484375
    },
    "Entity-father__x__z2_": {
      "node_id": "father__x__z2_",
      "disambiguation_index": 0,
      "label": "father(x, z2)",
      "aliases": [
        "father(x, z2)"
      ],
      "types": [
        "family relationship",
        "family relation",
        "kinship",
        "logical expression",
        "technical term",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity referred to by 'father(x, z2)' represents a family relationship between an individual x and their child or children z2.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "father(x, z2)",
          "local_types": [
            "family relation",
            "kinship"
          ],
          "iri": "Entity-father__x__z2_-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "father(x, z2)",
          "local_types": [
            "family relationship",
            "technical term",
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-father__x__z2_-Mention-2"
        }
      ],
      "relevance": 0.384033203125
    },
    "Entity-proportion": {
      "node_id": "proportion",
      "disambiguation_index": 0,
      "label": "proportion",
      "aliases": [
        "proportion"
      ],
      "types": [
        "statistic",
        "measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A quantity expressing part of a whole or total",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-4",
          "local_name": "proportion",
          "local_types": [
            "statistic",
            "measure"
          ],
          "iri": "Entity-proportion-Mention-1"
        }
      ],
      "relevance": 0.384033203125
    },
    "Entity-spouse__x__y___z_child__x__z_": {
      "node_id": "spouse__x__y___z_child__x__z_",
      "disambiguation_index": 0,
      "label": "spouse(x, y) \u2192 \u2203z child(x, z)",
      "aliases": [
        "spouse(x, y) \u2192 \u2203z child(x, z)"
      ],
      "types": [
        "logic",
        "formula"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A logical formula representing the relationship between two individuals (spouse(x, y)) and their child.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-4",
          "local_name": "spouse(x, y) \u2192 \u2203z child(x, z)",
          "local_types": [
            "logic",
            "formula"
          ],
          "iri": "Entity-spouse__x__y___z_child__x__z_-Mention-1"
        }
      ],
      "relevance": 0.383544921875
    },
    "Entity-each": {
      "node_id": "each",
      "disambiguation_index": 0,
      "label": "Each",
      "aliases": [
        "Each"
      ],
      "types": [
        "concept",
        "quantifier",
        "variable",
        "entity",
        "term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A single unit or instance, often used to refer to one member of a group or set.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-4",
          "local_name": "Each",
          "local_types": [
            "entity",
            "concept",
            "term"
          ],
          "iri": "Entity-each-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "Each",
          "local_types": [
            "term",
            "quantifier",
            "variable"
          ],
          "iri": "Entity-each-Mention-2"
        }
      ],
      "relevance": 0.383056640625
    },
    "Entity-ghz": {
      "node_id": "ghz",
      "disambiguation_index": 0,
      "label": "GHz",
      "aliases": [
        "GHz"
      ],
      "types": [
        "unit of measurement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A unit of frequency measurement equivalent to one billion cycles per second.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-4-Sentence-1",
          "local_name": "GHz",
          "local_types": [
            "unit of measurement"
          ],
          "iri": "Entity-ghz-Mention-1"
        }
      ],
      "relevance": 0.382568359375
    },
    "Entity-then_r_satisfies_car__r__if_and_only_if__for_each_entity_e_such_that_pt__e___e__hold": {
      "node_id": "then_r_satisfies_car__r__if_and_only_if__for_each_entity_e_such_that_pt__e___e__hold",
      "disambiguation_index": 0,
      "label": "Then r satisfies Car(r) if and only if, for each entity e such that Pt(e', e) holds",
      "aliases": [
        "Then r satisfies Car(r) if and only if, for each entity e such that Pt(e', e) holds"
      ],
      "types": [
        "mathematical statement",
        "condition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical condition specifying when a particular statement (Car(r)) is satisfied",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-3",
          "local_name": "Then r satisfies Car(r) if and only if, for each entity e such that Pt(e', e) holds",
          "local_types": [
            "mathematical statement",
            "condition"
          ],
          "iri": "Entity-then_r_satisfies_car__r__if_and_only_if__for_each_entity_e_such_that_pt__e___e__hold-Mention-1"
        }
      ],
      "relevance": 0.382080078125
    },
    "Entity-l_atom": {
      "node_id": "l_atom",
      "disambiguation_index": 0,
      "label": "l atoms",
      "aliases": [
        "l atoms"
      ],
      "types": [
        "quantity",
        "number of entities",
        "atom"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A quantity of atomic particles",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "l atoms",
          "local_types": [
            "quantity",
            "number of entities",
            "atom"
          ],
          "iri": "Entity-l_atom-Mention-1"
        }
      ],
      "relevance": 0.382080078125
    },
    "Entity-be_the_set_of_all_entity": {
      "node_id": "be_the_set_of_all_entity",
      "disambiguation_index": 0,
      "label": "be the set of all entities",
      "aliases": [
        "be the set of all entities"
      ],
      "types": [
        "notation",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or aggregate of all possible entities",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "be the set of all entities",
          "local_types": [
            "notation",
            "mathematics"
          ],
          "iri": "Entity-be_the_set_of_all_entity-Mention-1"
        }
      ],
      "relevance": 0.382080078125
    },
    "Entity-five_playing_card": {
      "node_id": "five_playing_card",
      "disambiguation_index": 0,
      "label": "five playing cards",
      "aliases": [
        "five playing cards"
      ],
      "types": [
        "cards"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of five cards randomly selected from a standard deck, each card having two attributes: suit and rank.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-5",
          "local_name": "five playing cards",
          "local_types": [
            "cards"
          ],
          "iri": "Entity-five_playing_card-Mention-1"
        }
      ],
      "relevance": 0.3818359375
    },
    "Entity-there_are_some_exploratory_attempt": {
      "node_id": "there_are_some_exploratory_attempt",
      "disambiguation_index": 0,
      "label": "There are some exploratory attempts",
      "aliases": [
        "There are some exploratory attempts"
      ],
      "types": [
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Explorations or trials conducted for research purposes",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "There are some exploratory attempts",
          "local_types": [
            "research"
          ],
          "iri": "Entity-there_are_some_exploratory_attempt-Mention-1"
        }
      ],
      "relevance": 0.381591796875
    },
    "Entity-for__1_": {
      "node_id": "for__1_",
      "disambiguation_index": 0,
      "label": "For (1)",
      "aliases": [
        "For (1)"
      ],
      "types": [
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical notation or formula",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "For (1)",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-for__1_-Mention-1"
        }
      ],
      "relevance": 0.38134765625
    },
    "Entity-running_time": {
      "node_id": "running_time",
      "disambiguation_index": 0,
      "label": "running times",
      "aliases": [
        "running times",
        "running time"
      ],
      "types": [
        "time measurement",
        "performance metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The duration required to complete a task or process",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-2-Sentence-1",
          "local_name": "running times",
          "local_types": [
            "time measurement",
            "performance metric"
          ],
          "iri": "Entity-running_time-Mention-1"
        },
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "running time",
          "local_types": [
            "time measurement",
            "performance metric"
          ],
          "iri": "Entity-running_time-Mention-2"
        }
      ],
      "relevance": 0.381103515625
    },
    "Entity-human_expert": {
      "node_id": "human_expert",
      "disambiguation_index": 0,
      "label": "human expert",
      "aliases": [
        "human expert"
      ],
      "types": [
        "researcher",
        "person"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An individual with specialized knowledge and experience who provides informed opinions or makes decisions.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-9-Sentence-1",
          "local_name": "human expert",
          "local_types": [
            "researcher",
            "person"
          ],
          "iri": "Entity-human_expert-Mention-1"
        }
      ],
      "relevance": 0.380859375
    },
    "Entity-five_hundred_poker_hand_and_all_fact_related_to_them": {
      "node_id": "five_hundred_poker_hand_and_all_fact_related_to_them",
      "disambiguation_index": 0,
      "label": "five hundred poker hands and all facts related to them",
      "aliases": [
        "five hundred poker hands and all facts related to them"
      ],
      "types": [
        "hands"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of poker hand instances, including relevant details",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-8",
          "local_name": "five hundred poker hands and all facts related to them",
          "local_types": [
            "hands"
          ],
          "iri": "Entity-five_hundred_poker_hand_and_all_fact_related_to_them-Mention-1"
        }
      ],
      "relevance": 0.380859375
    },
    "Entity-__e2____1": {
      "node_id": "__e2____1",
      "disambiguation_index": 0,
      "label": "|{e2}| = 1",
      "aliases": [
        "|{e2}| = 1"
      ],
      "types": [
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The number of entities that satisfy the body of a rule |{e2}| = 1, where e2 is an entity.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-4",
          "local_name": "|{e2}| = 1",
          "local_types": [
            "expression"
          ],
          "iri": "Entity-__e2____1-Mention-1"
        }
      ],
      "relevance": 0.380615234375
    },
    "Entity-child__x__z_": {
      "node_id": "child__x__z_",
      "disambiguation_index": 0,
      "label": "child( x , z )",
      "aliases": [
        "child( x , z )"
      ],
      "types": [
        "relationship",
        "parent-child relationship"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A relationship between an individual (parent or guardian) and their offspring.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-4",
          "local_name": "child( x , z )",
          "local_types": [
            "relationship",
            "parent-child relationship"
          ],
          "iri": "Entity-child__x__z_-Mention-1"
        }
      ],
      "relevance": 0.38037109375
    },
    "Entity-error": {
      "node_id": "error",
      "disambiguation_index": 0,
      "label": "errors",
      "aliases": [
        "errors"
      ],
      "types": [
        "mistakes"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Mistaken or incorrect actions, decisions, or performances",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-4",
          "local_name": "errors",
          "local_types": [
            "mistakes"
          ],
          "iri": "Entity-error-Mention-1"
        }
      ],
      "relevance": 0.380126953125
    },
    "Entity-unary_predicate_of_the_form_p__e_": {
      "node_id": "unary_predicate_of_the_form_p__e_",
      "disambiguation_index": 0,
      "label": "unary predicates of the form P(e)",
      "aliases": [
        "unary predicates of the form P(e)"
      ],
      "types": [
        "term",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A predicate that takes a single argument and returns a truth value",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "unary predicates of the form P(e)",
          "local_types": [
            "term",
            "predicate"
          ],
          "iri": "Entity-unary_predicate_of_the_form_p__e_-Mention-1"
        }
      ],
      "relevance": 0.380126953125
    },
    "Entity-unary_predicate_(1)": {
      "node_id": "unary_predicate_(1)",
      "disambiguation_index": 1,
      "label": "unary predicates",
      "aliases": [
        "unary predicates"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Predicates that take a single argument, either as their head or body.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "unary predicates",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-unary_predicate_(1)-Mention-1"
        }
      ],
      "relevance": 0.3798828125
    },
    "Entity-statistical_likelihood": {
      "node_id": "statistical_likelihood",
      "disambiguation_index": 0,
      "label": "statistical likelihood",
      "aliases": [
        "statistical likelihood"
      ],
      "types": [
        "mathematical concept",
        "probability"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure that represents the probability or frequency with which an event occurs in a given situation.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-4-Sentence-5",
          "local_name": "statistical likelihood",
          "local_types": [
            "mathematical concept",
            "probability"
          ],
          "iri": "Entity-statistical_likelihood-Mention-1"
        }
      ],
      "relevance": 0.37939453125
    },
    "Entity-a_10_hour_limit": {
      "node_id": "a_10_hour_limit",
      "disambiguation_index": 0,
      "label": "A 10 hour limit",
      "aliases": [
        "A 10 hour limit"
      ],
      "types": [
        "time_limit",
        "time constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A time restriction or boundary",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-8",
          "local_name": "A 10 hour limit",
          "local_types": [
            "time_limit",
            "time constraint"
          ],
          "iri": "Entity-a_10_hour_limit-Mention-1"
        }
      ],
      "relevance": 0.379150390625
    },
    "Entity-headr__e_": {
      "node_id": "headr__e_",
      "disambiguation_index": 0,
      "label": "headr(e)",
      "aliases": [
        "headr(e)"
      ],
      "types": [
        "relation",
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The head of a relation that satisfies a set of entity pairs",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "headr(e)",
          "local_types": [
            "relation",
            "predicate",
            "function"
          ],
          "iri": "Entity-headr__e_-Mention-1"
        }
      ],
      "relevance": 0.378662109375
    },
    "Entity-e3": {
      "node_id": "e3",
      "disambiguation_index": 0,
      "label": "e3",
      "aliases": [
        "e3"
      ],
      "types": [
        "mathematical entity",
        "element",
        "variable",
        "entity",
        "set"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The entity e3 refers to a specific instance of an entity that can instantiate z0 and satisfy both P1(x, z0) and P2(z0, z1) ^ P3(z1, z2).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-3",
          "local_name": "e3",
          "local_types": [
            "mathematical entity",
            "entity",
            "variable"
          ],
          "iri": "Entity-e3-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-6",
          "local_name": "e3",
          "local_types": [
            "entity",
            "variable"
          ],
          "iri": "Entity-e3-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "e3",
          "local_types": [
            "entity",
            "variable"
          ],
          "iri": "Entity-e3-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "e3",
          "local_types": [
            "element",
            "set"
          ],
          "iri": "Entity-e3-Mention-4"
        }
      ],
      "relevance": 0.37841796875
    },
    "Entity-entity_x_is_a_song__then_x_is_in_an_album_y_which_ha_a_record_label_z": {
      "node_id": "entity_x_is_a_song__then_x_is_in_an_album_y_which_ha_a_record_label_z",
      "disambiguation_index": 0,
      "label": "entity x is a song, then x is in an album y which has a record label z",
      "aliases": [
        "entity x is a song, then x is in an album y which has a record label z"
      ],
      "types": [
        "logical statement",
        "data relationship"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A specific song with its corresponding information about being part of an album and having a record label.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "entity x is a song, then x is in an album y which has a record label z",
          "local_types": [
            "logical statement",
            "data relationship"
          ],
          "iri": "Entity-entity_x_is_a_song__then_x_is_in_an_album_y_which_ha_a_record_label_z-Mention-1"
        }
      ],
      "relevance": 0.378173828125
    },
    "Entity-deck": {
      "node_id": "deck",
      "disambiguation_index": 0,
      "label": "deck",
      "aliases": [
        "deck"
      ],
      "types": [
        "collection of playing cards",
        "gaming equipment"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of cards or other items, typically used for gaming or entertainment purposes.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-5",
          "local_name": "deck",
          "local_types": [
            "collection of playing cards",
            "gaming equipment"
          ],
          "iri": "Entity-deck-Mention-1"
        }
      ],
      "relevance": 0.378173828125
    },
    "Entity-y_which_ha_a_record_label_z": {
      "node_id": "y_which_ha_a_record_label_z",
      "disambiguation_index": 0,
      "label": "y which has a record label z",
      "aliases": [
        "y which has a record label z"
      ],
      "types": [
        "record_label",
        "label"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A song with its corresponding album and record label information in DBpedia.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "y which has a record label z",
          "local_types": [
            "record_label",
            "label"
          ],
          "iri": "Entity-y_which_ha_a_record_label_z-Mention-1"
        }
      ],
      "relevance": 0.3779296875
    },
    "Entity-each_card": {
      "node_id": "each_card",
      "disambiguation_index": 0,
      "label": "Each card",
      "aliases": [
        "Each card"
      ],
      "types": [
        "card"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A unit of playing cards, characterized by its suit and rank attributes.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-6",
          "local_name": "Each card",
          "local_types": [
            "card"
          ],
          "iri": "Entity-each_card-Mention-1"
        }
      ],
      "relevance": 0.3779296875
    },
    "Entity-next_step": {
      "node_id": "next_step",
      "disambiguation_index": 0,
      "label": "next step",
      "aliases": [
        "next step"
      ],
      "types": [
        "process",
        "procedure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A stage or action that follows a previous one",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "next step",
          "local_types": [
            "process",
            "procedure"
          ],
          "iri": "Entity-next_step-Mention-1"
        }
      ],
      "relevance": 0.37744140625
    },
    "Entity-p1__z0__x_": {
      "node_id": "p1__z0__x_",
      "disambiguation_index": 0,
      "label": "P1(z0, x)",
      "aliases": [
        "P1(z0, x)"
      ],
      "types": [
        "predicate logic expression",
        "notation",
        "mathematical expression",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A predicate logic expression that represents a mathematical function.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-2",
          "local_name": "P1(z0, x)",
          "local_types": [
            "predicate logic expression",
            "notation",
            "mathematical expression",
            "function"
          ],
          "iri": "Entity-p1__z0__x_-Mention-1"
        }
      ],
      "relevance": 0.377197265625
    },
    "Entity-father__x__z2___human__z2_": {
      "node_id": "father__x__z2___human__z2_",
      "disambiguation_index": 0,
      "label": "father(x, z2) ^ human(z2)",
      "aliases": [
        "father(x, z2) ^ human(z2)"
      ],
      "types": [
        "path",
        "family_relationship"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A person who has a biological relationship with an individual x satisfying human(x), where x is also related to another entity z2 that satisfies human(z2)",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "father(x, z2) ^ human(z2)",
          "local_types": [
            "path",
            "family_relationship"
          ],
          "iri": "Entity-father__x__z2___human__z2_-Mention-1"
        }
      ],
      "relevance": 0.377197265625
    },
    "Entity-_e__e___satisfying_the_head": {
      "node_id": "_e__e___satisfying_the_head",
      "disambiguation_index": 0,
      "label": "(e, e') satisfying the head",
      "aliases": [
        "(e, e') satisfying the head"
      ],
      "types": [
        "entities",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of entities related through a semantic connection",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "(e, e') satisfying the head",
          "local_types": [
            "entities",
            "relation"
          ],
          "iri": "Entity-_e__e___satisfying_the_head-Mention-1"
        }
      ],
      "relevance": 0.376708984375
    },
    "Entity-cultural_bias": {
      "node_id": "cultural_bias",
      "disambiguation_index": 0,
      "label": "cultural bias",
      "aliases": [
        "cultural bias"
      ],
      "types": [
        "prejudice",
        "assumption"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A tendency to favor or discriminate against certain groups based on their cultural background, often unconsciously influencing one's thoughts, feelings, and actions.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "cultural bias",
          "local_types": [
            "prejudice",
            "assumption"
          ],
          "iri": "Entity-cultural_bias-Mention-1"
        }
      ],
      "relevance": 0.37646484375
    },
    "Entity-free_variable": {
      "node_id": "free_variable",
      "disambiguation_index": 0,
      "label": "Free variables",
      "aliases": [
        "Free variables"
      ],
      "types": [
        "mathematical concept",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Variables that can take on any value and do not have a specific assignment or restriction.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-3",
          "local_name": "Free variables",
          "local_types": [
            "mathematical concept",
            "variable"
          ],
          "iri": "Entity-free_variable-Mention-1"
        }
      ],
      "relevance": 0.37646484375
    },
    "Entity-head_of_the_rule": {
      "node_id": "head_of_the_rule",
      "disambiguation_index": 0,
      "label": "head of the rule",
      "aliases": [
        "head of the rule"
      ],
      "types": [
        "rule",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The person or entity responsible for governing or overseeing a particular rule",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "head of the rule",
          "local_types": [
            "rule",
            "concept"
          ],
          "iri": "Entity-head_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.376220703125
    },
    "Entity-empty": {
      "node_id": "empty",
      "disambiguation_index": 0,
      "label": "empty",
      "aliases": [
        "empty"
      ],
      "types": [
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A data structure that has no elements or values.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-7",
          "local_name": "empty",
          "local_types": [
            "data structure"
          ],
          "iri": "Entity-empty-Mention-1"
        }
      ],
      "relevance": 0.3759765625
    },
    "Entity-union": {
      "node_id": "union",
      "disambiguation_index": 0,
      "label": "union",
      "aliases": [
        "union"
      ],
      "types": [
        "operation",
        "set operation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set or collection of things, often formed by combining individual elements.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-9",
          "local_name": "union",
          "local_types": [
            "operation",
            "set operation"
          ],
          "iri": "Entity-union-Mention-1"
        }
      ],
      "relevance": 0.3759765625
    },
    "Entity-result": {
      "node_id": "result",
      "disambiguation_index": 0,
      "label": "results",
      "aliases": [
        "results"
      ],
      "types": [
        "research finding",
        "study outcome"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The outcome or finding of an investigation, research study, or experiment.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-2-Sentence-1",
          "local_name": "results",
          "local_types": [
            "research finding",
            "study outcome"
          ],
          "iri": "Entity-result-Mention-1"
        }
      ],
      "relevance": 0.3759765625
    },
    "Entity-record_label": {
      "node_id": "record_label",
      "disambiguation_index": 0,
      "label": "record label",
      "aliases": [
        "record label"
      ],
      "types": [
        "organization",
        "label",
        "organisation",
        "company"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A company or organization that produces, distributes, and promotes music recordings.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-3",
          "local_name": "record label",
          "local_types": [
            "organization",
            "label",
            "organisation",
            "company"
          ],
          "iri": "Entity-record_label-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-3",
          "local_name": "record label",
          "local_types": [
            "company",
            "organization"
          ],
          "iri": "Entity-record_label-Mention-2"
        }
      ],
      "relevance": 0.375732421875
    },
    "Entity-runtime": {
      "node_id": "runtime",
      "disambiguation_index": 0,
      "label": "runtime",
      "aliases": [
        "runtime"
      ],
      "types": [
        "time measurement",
        "performance metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of the duration or time taken to execute a process, program, or operation.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-3-Sentence-1",
          "local_name": "runtime",
          "local_types": [
            "time measurement",
            "performance metric"
          ],
          "iri": "Entity-runtime-Mention-1"
        }
      ],
      "relevance": 0.375244140625
    },
    "Entity-a_deck_with_thirteen_rank_and_four_suit": {
      "node_id": "a_deck_with_thirteen_rank_and_four_suit",
      "disambiguation_index": 0,
      "label": "a deck with thirteen ranks and four suits",
      "aliases": [
        "a deck with thirteen ranks and four suits"
      ],
      "types": [
        "deck",
        "ranks",
        "suits"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A standard deck of 52 cards used to play various card games, including Poker.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-5",
          "local_name": "a deck with thirteen ranks and four suits",
          "local_types": [
            "deck",
            "ranks",
            "suits"
          ],
          "iri": "Entity-a_deck_with_thirteen_rank_and_four_suit-Mention-1"
        }
      ],
      "relevance": 0.375
    },
    "Entity-three_entity__e3__e4__e5_": {
      "node_id": "three_entity__e3__e4__e5_",
      "disambiguation_index": 0,
      "label": "three entities (e3, e4, e5)",
      "aliases": [
        "three entities (e3, e4, e5)"
      ],
      "types": [
        "entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Three entities (e3, e4, e5) that can instantiate z0 and satisfy both P1(x, z0) and P2(z0, z1) ^ P3(z1, z2).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-3",
          "local_name": "three entities (e3, e4, e5)",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-three_entity__e3__e4__e5_-Mention-1"
        }
      ],
      "relevance": 0.37451171875
    },
    "Entity-_e___e_": {
      "node_id": "_e___e_",
      "disambiguation_index": 0,
      "label": "(e', e)",
      "aliases": [
        "(e, e')",
        "(e', e)"
      ],
      "types": [
        "pair",
        "mathematical expression",
        "notation",
        "tuple",
        "variable notation",
        "pair of entities",
        "expression",
        "entity pair"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical expression representing a pair or tuple of values.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-4",
          "local_name": "(e', e)",
          "local_types": [
            "notation",
            "tuple",
            "mathematical expression",
            "expression"
          ],
          "iri": "Entity-_e___e_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "(e', e)",
          "local_types": [
            "pair",
            "expression"
          ],
          "iri": "Entity-_e___e_-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "(e, e')",
          "local_types": [
            "notation",
            "variable notation"
          ],
          "iri": "Entity-_e___e_-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-4",
          "local_name": "(e, e')",
          "local_types": [
            "entity pair",
            "tuple",
            "mathematical expression"
          ],
          "iri": "Entity-_e___e_-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "(e, e')",
          "local_types": [
            "tuple",
            "notation"
          ],
          "iri": "Entity-_e___e_-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-3",
          "local_name": "(e, e')",
          "local_types": [
            "pair of entities",
            "entity pair"
          ],
          "iri": "Entity-_e___e_-Mention-6"
        }
      ],
      "relevance": 0.373779296875
    },
    "Entity-we_(8)": {
      "node_id": "we_(8)",
      "disambiguation_index": 8,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors, referring to themselves collectively.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-1-Sentence-4",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(8)-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-6-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(8)-Mention-2"
        },
        {
          "reference": "Section-16-Paragraph-1-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(8)-Mention-3"
        }
      ],
      "relevance": 0.373779296875
    },
    "Entity-number": {
      "node_id": "number",
      "disambiguation_index": 0,
      "label": "number",
      "aliases": [
        "number"
      ],
      "types": [
        "quantity",
        "count",
        "value"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value representing a quantity or amount",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "number",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-number-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-4",
          "local_name": "number",
          "local_types": [
            "quantity",
            "count"
          ],
          "iri": "Entity-number-Mention-2"
        },
        {
          "reference": "Section-17-Paragraph-1-Sentence-3",
          "local_name": "number",
          "local_types": [
            "quantity",
            "count"
          ],
          "iri": "Entity-number-Mention-3"
        },
        {
          "reference": "Section-17-Paragraph-2-Sentence-3",
          "local_name": "number",
          "local_types": [
            "quantity",
            "value"
          ],
          "iri": "Entity-number-Mention-4"
        }
      ],
      "relevance": 0.37353515625
    },
    "Entity-producer": {
      "node_id": "producer",
      "disambiguation_index": 0,
      "label": "producers",
      "aliases": [
        "producer",
        "producers"
      ],
      "types": [
        "team",
        "people",
        "creative professional",
        "person",
        "personnel",
        "creators"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A group of individuals responsible for creating or overseeing creative content.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "producers",
          "local_types": [
            "team",
            "people",
            "personnel",
            "creators"
          ],
          "iri": "Entity-producer-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-8-Sentence-4",
          "local_name": "producer",
          "local_types": [
            "creative professional",
            "person"
          ],
          "iri": "Entity-producer-Mention-2"
        }
      ],
      "relevance": 0.373291015625
    },
    "Entity-x_is_in_an_album_y": {
      "node_id": "x_is_in_an_album_y",
      "disambiguation_index": 0,
      "label": "x is in an album y",
      "aliases": [
        "x is in an album y"
      ],
      "types": [
        "relationship",
        "album"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A relationship between entities, where x represents a song and y denotes its corresponding album.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "x is in an album y",
          "local_types": [
            "relationship",
            "album"
          ],
          "iri": "Entity-x_is_in_an_album_y-Mention-1"
        }
      ],
      "relevance": 0.373291015625
    },
    "Entity-person": {
      "node_id": "person",
      "disambiguation_index": 0,
      "label": "person",
      "aliases": [
        "person",
        "persons"
      ],
      "types": [
        "human",
        "human being",
        "concept",
        "individual"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An individual with human characteristics",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "person",
          "local_types": [
            "concept",
            "human being",
            "individual"
          ],
          "iri": "Entity-person-Mention-1"
        },
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "persons",
          "local_types": [
            "human",
            "individual"
          ],
          "iri": "Entity-person-Mention-2"
        }
      ],
      "relevance": 0.3720703125
    },
    "Entity-intel": {
      "node_id": "intel",
      "disambiguation_index": 0,
      "label": "Intel",
      "aliases": [
        "Intel"
      ],
      "types": [
        "company"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A well-known American multinational technology company that specializes in designing and manufacturing microprocessors.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-4-Sentence-1",
          "local_name": "Intel",
          "local_types": [
            "company"
          ],
          "iri": "Entity-intel-Mention-1"
        }
      ],
      "relevance": 0.3720703125
    },
    "Entity-centos_8": {
      "node_id": "centos_8",
      "disambiguation_index": 0,
      "label": "CentOS 8",
      "aliases": [
        "CentOS 8"
      ],
      "types": [
        "software",
        "operating system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A Linux-based operating system",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-4-Sentence-1",
          "local_name": "CentOS 8",
          "local_types": [
            "software",
            "operating system"
          ],
          "iri": "Entity-centos_8-Mention-1"
        }
      ],
      "relevance": 0.371826171875
    },
    "Entity-e5": {
      "node_id": "e5",
      "disambiguation_index": 0,
      "label": "e5",
      "aliases": [
        "e5"
      ],
      "types": [
        "mathematical entity",
        "entity",
        "variable"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The entity referred to by mention 'e5' is an instance of a human that can satisfy both predicates P1 and P2.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-3",
          "local_name": "e5",
          "local_types": [
            "mathematical entity",
            "entity",
            "variable"
          ],
          "iri": "Entity-e5-Mention-1"
        }
      ],
      "relevance": 0.371337890625
    },
    "Entity-hence": {
      "node_id": "hence",
      "disambiguation_index": 0,
      "label": "Hence",
      "aliases": [
        "Hence"
      ],
      "types": [
        "introduction"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concluding or explanatory phrase used to summarize a previous statement",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "Hence",
          "local_types": [
            "introduction"
          ],
          "iri": "Entity-hence-Mention-1"
        }
      ],
      "relevance": 0.37060546875
    },
    "Entity-x_and_z_i": {
      "node_id": "x_and_z_i",
      "disambiguation_index": 0,
      "label": "x and z_i",
      "aliases": [
        "x and z_i"
      ],
      "types": [
        "placeholder",
        "mathematical concept",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair consisting of variable 'x' and mathematical concept or entity 'z_i'.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-2",
          "local_name": "x and z_i",
          "local_types": [
            "placeholder",
            "mathematical concept",
            "variable"
          ],
          "iri": "Entity-x_and_z_i-Mention-1"
        }
      ],
      "relevance": 0.370361328125
    },
    "Entity-t": {
      "node_id": "t",
      "disambiguation_index": 0,
      "label": "t",
      "aliases": [
        "t"
      ],
      "types": [
        "variable",
        "symbol"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical variable or symbol used to represent an entity in a logical expression.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "t",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-t-Mention-1"
        }
      ],
      "relevance": 0.370361328125
    },
    "Entity-confidence": {
      "node_id": "confidence",
      "disambiguation_index": 0,
      "label": "confidence",
      "aliases": [
        "confidence"
      ],
      "types": [
        "measure",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or metric used to quantify a level of certainty or trust",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-3",
          "local_name": "confidence",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-confidence-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "confidence",
          "local_types": [
            "measure",
            "metric"
          ],
          "iri": "Entity-confidence-Mention-2"
        },
        {
          "reference": "Section-14-Paragraph-1-Sentence-2",
          "local_name": "confidence",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-confidence-Mention-3"
        }
      ],
      "relevance": 0.3701171875
    },
    "Entity-we_call": {
      "node_id": "we_call",
      "disambiguation_index": 0,
      "label": "We call",
      "aliases": [
        "We call"
      ],
      "types": [
        "author"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A group or collective entity responsible for creating or producing something",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "We call",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_call-Mention-1"
        }
      ],
      "relevance": 0.36962890625
    },
    "Entity-one_pair": {
      "node_id": "one_pair",
      "disambiguation_index": 0,
      "label": "One Pair",
      "aliases": [
        "One Pair",
        "Two Pair"
      ],
      "types": [
        "rank"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A poker hand consisting of two cards with the same rank.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-7",
          "local_name": "One Pair",
          "local_types": [
            "rank"
          ],
          "iri": "Entity-one_pair-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-7",
          "local_name": "Two Pair",
          "local_types": [
            "rank"
          ],
          "iri": "Entity-one_pair-Mention-2"
        }
      ],
      "relevance": 0.369384765625
    },
    "Entity-a_person_in_a_specific_use_case": {
      "node_id": "a_person_in_a_specific_use_case",
      "disambiguation_index": 0,
      "label": "a person in a specific use case",
      "aliases": [
        "a person in a specific use case"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A person with specific characteristics (name, birth date, and place of birth) in a particular context or scenario.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "a person in a specific use case",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-a_person_in_a_specific_use_case-Mention-1"
        }
      ],
      "relevance": 0.369140625
    },
    "Entity-an_entity-free_rule": {
      "node_id": "an_entity-free_rule",
      "disambiguation_index": 0,
      "label": "an entity-free rule",
      "aliases": [
        "an entity-free rule"
      ],
      "types": [
        "rule",
        "entity_free_rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A logical statement that connects entities satisfying the subject argument of a predicate to entities forming the object argument, without involving any specific entity.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-4",
          "local_name": "an entity-free rule",
          "local_types": [
            "rule",
            "entity_free_rule"
          ],
          "iri": "Entity-an_entity-free_rule-Mention-1"
        }
      ],
      "relevance": 0.3681640625
    },
    "Entity-the_set_of_such_entity_is__e2__e3__with_count_2": {
      "node_id": "the_set_of_such_entity_is__e2__e3__with_count_2",
      "disambiguation_index": 0,
      "label": "the set of such entities is {e2, e3} with count 2",
      "aliases": [
        "the set of such entities is {e2, e3} with count 2"
      ],
      "types": [
        "set",
        "entities",
        "count"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "the set of such entities is {e2, e3} with count 2",
          "local_types": [
            "set",
            "entities",
            "count"
          ],
          "iri": "Entity-the_set_of_such_entity_is__e2__e3__with_count_2-Mention-1"
        }
      ],
      "relevance": 0.3681640625
    },
    "Entity-entrepreneur": {
      "node_id": "entrepreneur",
      "disambiguation_index": 0,
      "label": "entrepreneur",
      "aliases": [
        "entrepreneur"
      ],
      "types": [
        "occupation",
        "business role",
        "job title"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person who organizes and operates a business or businesses, often taking on significant financial risk.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "entrepreneur",
          "local_types": [
            "occupation",
            "business role",
            "job title"
          ],
          "iri": "Entity-entrepreneur-Mention-1"
        }
      ],
      "relevance": 0.367431640625
    },
    "Entity-e_is_an_identifier_for_an_object_such_a_a_place_or_a_person_.": {
      "node_id": "e_is_an_identifier_for_an_object_such_a_a_place_or_a_person_.",
      "disambiguation_index": 0,
      "label": "e is an identifier for an object such as a place or a person.",
      "aliases": [
        "e is an identifier for an object such as a place or a person."
      ],
      "types": [
        "definition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A unique identifier representing a location, such as a city or country, or a person.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-1",
          "local_name": "e is an identifier for an object such as a place or a person.",
          "local_types": [
            "definition"
          ],
          "iri": "Entity-e_is_an_identifier_for_an_object_such_a_a_place_or_a_person_.-Mention-1"
        }
      ],
      "relevance": 0.367431640625
    },
    "Entity-such_a_fullhouse__x__where_x_is_a_specific_poker_hand": {
      "node_id": "such_a_fullhouse__x__where_x_is_a_specific_poker_hand",
      "disambiguation_index": 0,
      "label": "such as fullHouse(x) where x is a specific poker hand",
      "aliases": [
        "such as fullHouse(x) where x is a specific poker hand"
      ],
      "types": [
        "example",
        "poker_hand"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A unary predicate representing a type of poker hand, specifically Full House.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-9",
          "local_name": "such as fullHouse(x) where x is a specific poker hand",
          "local_types": [
            "example",
            "poker_hand"
          ],
          "iri": "Entity-such_a_fullhouse__x__where_x_is_a_specific_poker_hand-Mention-1"
        }
      ],
      "relevance": 0.367431640625
    },
    "Entity-conducted_experiment_to_assess_it": {
      "node_id": "conducted_experiment_to_assess_it",
      "disambiguation_index": 0,
      "label": "conducted experiments to assess it",
      "aliases": [
        "conducted experiments to assess it"
      ],
      "types": [
        "experimentation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or approach used for experimentation",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-1-Sentence-1",
          "local_name": "conducted experiments to assess it",
          "local_types": [
            "experimentation"
          ],
          "iri": "Entity-conducted_experiment_to_assess_it-Mention-1"
        }
      ],
      "relevance": 0.3671875
    },
    "Entity-ei": {
      "node_id": "ei",
      "disambiguation_index": 0,
      "label": "Ei",
      "aliases": [
        "Ei"
      ],
      "types": [
        "expression",
        "mathematical variable",
        "variable"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical expression or variable representing a summation from i equals one to L.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-9",
          "local_name": "Ei",
          "local_types": [
            "expression",
            "mathematical variable",
            "variable"
          ],
          "iri": "Entity-ei-Mention-1"
        }
      ],
      "relevance": 0.366943359375
    },
    "Entity-human-expert_evaluation": {
      "node_id": "human-expert_evaluation",
      "disambiguation_index": 0,
      "label": "human-expert evaluation",
      "aliases": [
        "human-expert evaluation"
      ],
      "types": [
        "evaluation method",
        "assessment process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A subjective assessment or judgment made by a trained individual",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-5-Sentence-1",
          "local_name": "human-expert evaluation",
          "local_types": [
            "evaluation method",
            "assessment process"
          ],
          "iri": "Entity-human-expert_evaluation-Mention-1"
        }
      ],
      "relevance": 0.366943359375
    },
    "Entity-genre": {
      "node_id": "genre",
      "disambiguation_index": 0,
      "label": "genre",
      "aliases": [
        "genre"
      ],
      "types": [
        "artistic expression",
        "category",
        "style",
        "music style"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A category or style of artistic expression, particularly in music.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-3",
          "local_name": "genre",
          "local_types": [
            "artistic expression",
            "category",
            "style",
            "music style"
          ],
          "iri": "Entity-genre-Mention-1"
        }
      ],
      "relevance": 0.36669921875
    },
    "Entity-unary_predicate_(2)": {
      "node_id": "unary_predicate_(2)",
      "disambiguation_index": 2,
      "label": "unary predicates",
      "aliases": [
        "unary predicates"
      ],
      "types": [
        "predicate",
        "logic"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "In logic, a unary predicate is a predicate that takes only one argument or entity.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-7-Sentence-3",
          "local_name": "unary predicates",
          "local_types": [
            "predicate",
            "logic"
          ],
          "iri": "Entity-unary_predicate_(2)-Mention-1"
        }
      ],
      "relevance": 0.365478515625
    },
    "Entity-country__z1__z1_": {
      "node_id": "country__z1__z1_",
      "disambiguation_index": 0,
      "label": "country(z1, z1)",
      "aliases": [
        "country(z1, z1)"
      ],
      "types": [
        "location",
        "technical term",
        "predicate",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sovereign nation or territory",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "country(z1, z1)",
          "local_types": [
            "location",
            "technical term",
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-country__z1__z1_-Mention-1"
        }
      ],
      "relevance": 0.365234375
    },
    "Entity-song__x_": {
      "node_id": "song__x_",
      "disambiguation_index": 0,
      "label": "song (x)",
      "aliases": [
        "song (x)"
      ],
      "types": [
        "audio track",
        "track",
        "musical composition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A musical composition with an audio track",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-4",
          "local_name": "song (x)",
          "local_types": [
            "audio track",
            "track",
            "musical composition"
          ],
          "iri": "Entity-song__x_-Mention-1"
        }
      ],
      "relevance": 0.365234375
    },
    "Entity-it_(1)": {
      "node_id": "it_(1)",
      "disambiguation_index": 1,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept of standard confidence",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "It",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-it_(1)-Mention-1"
        }
      ],
      "relevance": 0.365234375
    },
    "Entity-pop_star": {
      "node_id": "pop_star",
      "disambiguation_index": 0,
      "label": "pop stars",
      "aliases": [
        "pop stars"
      ],
      "types": [
        "entertainment industry",
        "category",
        "celebrities",
        "person",
        "entertainment",
        "celebrity",
        "music"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Famous musicians who are known for their chart-topping singles and albums in popular music genres such as pop, rock, hip-hop, electronic dance music, etc.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "pop stars",
          "local_types": [
            "entertainment industry",
            "category",
            "celebrities",
            "person",
            "entertainment",
            "celebrity",
            "music"
          ],
          "iri": "Entity-pop_star-Mention-1"
        }
      ],
      "relevance": 0.3642578125
    },
    "Entity-then": {
      "node_id": "then",
      "disambiguation_index": 0,
      "label": "Then",
      "aliases": [
        "Then"
      ],
      "types": [
        "logical operator"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point of time or a logical operator indicating subsequent events.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-3-Sentence-3",
          "local_name": "Then",
          "local_types": [
            "logical operator"
          ],
          "iri": "Entity-then-Mention-1"
        }
      ],
      "relevance": 0.3642578125
    },
    "Entity-intel_xeon_cpu_e5-2650_v4_at_2.20_ghz__with_66_gb_ram_and_running_centos_8": {
      "node_id": "intel_xeon_cpu_e5-2650_v4_at_2.20_ghz__with_66_gb_ram_and_running_centos_8",
      "disambiguation_index": 0,
      "label": "Intel Xeon CPU E5-2650 v4 at 2.20 GHz, with 66 GB RAM and running CentOS 8",
      "aliases": [
        "Intel Xeon CPU E5-2650 v4 at 2.20 GHz, with 66 GB RAM and running CentOS 8"
      ],
      "types": [
        "hardware specification"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A high-performance server processor",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-4-Sentence-1",
          "local_name": "Intel Xeon CPU E5-2650 v4 at 2.20 GHz, with 66 GB RAM and running CentOS 8",
          "local_types": [
            "hardware specification"
          ],
          "iri": "Entity-intel_xeon_cpu_e5-2650_v4_at_2.20_ghz__with_66_gb_ram_and_running_centos_8-Mention-1"
        }
      ],
      "relevance": 0.36376953125
    },
    "Entity-intel_xeon_cpu_e5-2650_v4": {
      "node_id": "intel_xeon_cpu_e5-2650_v4",
      "disambiguation_index": 0,
      "label": "Intel Xeon CPU E5-2650 v4",
      "aliases": [
        "Xeon CPU E5-2650 v4",
        "Intel Xeon CPU E5-2650 v4"
      ],
      "types": [
        "hardware",
        "processor",
        "computer hardware",
        "product"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A high-performance processor from Intel's Xeon series",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-4-Sentence-1",
          "local_name": "Intel Xeon CPU E5-2650 v4",
          "local_types": [
            "hardware",
            "processor",
            "computer hardware"
          ],
          "iri": "Entity-intel_xeon_cpu_e5-2650_v4-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-4-Sentence-1",
          "local_name": "Xeon CPU E5-2650 v4",
          "local_types": [
            "product",
            "processor"
          ],
          "iri": "Entity-intel_xeon_cpu_e5-2650_v4-Mention-2"
        }
      ],
      "relevance": 0.36328125
    },
    "Entity-a__p1___a__p2_": {
      "node_id": "a__p1___a__p2_",
      "disambiguation_index": 0,
      "label": "A(P1)*A(P2)",
      "aliases": [
        "A(P1)*A(P2)"
      ],
      "types": [
        "equation",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The product of two adjacency matrices representing predicates P1 and P2.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-5",
          "local_name": "A(P1)*A(P2)",
          "local_types": [
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-a__p1___a__p2_-Mention-1"
        }
      ],
      "relevance": 0.363037109375
    },
    "Entity-album_y": {
      "node_id": "album_y",
      "disambiguation_index": 0,
      "label": "album y",
      "aliases": [
        "album y"
      ],
      "types": [
        "creative work",
        "entertainment",
        "collection of songs",
        "release",
        "music",
        "music album"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A music album containing songs, as mentioned in DBpedia.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "album y",
          "local_types": [
            "creative work",
            "entertainment",
            "collection of songs",
            "release",
            "music",
            "music album"
          ],
          "iri": "Entity-album_y-Mention-1"
        }
      ],
      "relevance": 0.36279296875
    },
    "Entity-human": {
      "node_id": "human",
      "disambiguation_index": 0,
      "label": "human",
      "aliases": [
        "human"
      ],
      "types": [
        "concept",
        "class",
        "predicate",
        "person",
        "individual"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A member of the species Homo sapiens, characterized by their capacity for thought, language, and culture.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "human",
          "local_types": [
            "concept",
            "class",
            "predicate"
          ],
          "iri": "Entity-human-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "human",
          "local_types": [
            "person"
          ],
          "iri": "Entity-human-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-8-Sentence-7",
          "local_name": "human",
          "local_types": [
            "person",
            "individual"
          ],
          "iri": "Entity-human-Mention-3"
        }
      ],
      "relevance": 0.36279296875
    },
    "Entity-end": {
      "node_id": "end",
      "disambiguation_index": 0,
      "label": "end",
      "aliases": [
        "end"
      ],
      "types": [
        "loop control",
        "terminus",
        "terminator"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point or stage that marks a termination, conclusion, or completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-10",
          "local_name": "end",
          "local_types": [
            "terminus",
            "terminator"
          ],
          "iri": "Entity-end-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-8",
          "local_name": "end",
          "local_types": [
            "loop control"
          ],
          "iri": "Entity-end-Mention-2"
        }
      ],
      "relevance": 0.36279296875
    },
    "Entity-the_rule_citizenof__x__y___-_livesin__x__z___locatedin__z__y_": {
      "node_id": "the_rule_citizenof__x__y___-_livesin__x__z___locatedin__z__y_",
      "disambiguation_index": 0,
      "label": "the rule citizenOf(x, y) <- livesIn(x, z) ^ locatedIn(z, y)",
      "aliases": [
        "the rule citizenOf(x, y) <- livesIn(x, z) ^ locatedIn(z, y)"
      ],
      "types": [
        "rule",
        "logic"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A rule that infers a person's citizenship based on their place of residence and location.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "the rule citizenOf(x, y) <- livesIn(x, z) ^ locatedIn(z, y)",
          "local_types": [
            "rule",
            "logic"
          ],
          "iri": "Entity-the_rule_citizenof__x__y___-_livesin__x__z___locatedin__z__y_-Mention-1"
        }
      ],
      "relevance": 0.362548828125
    },
    "Entity-record_label_z": {
      "node_id": "record_label_z",
      "disambiguation_index": 0,
      "label": "record label z",
      "aliases": [
        "record label z"
      ],
      "types": [
        "organization",
        "publisher",
        "label",
        "business",
        "entertainment",
        "business entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A company that produces and distributes music recordings.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "record label z",
          "local_types": [
            "organization",
            "publisher",
            "label",
            "business",
            "entertainment",
            "business entity"
          ],
          "iri": "Entity-record_label_z-Mention-1"
        }
      ],
      "relevance": 0.361572265625
    },
    "Entity-the_same_head_and_the_same_body": {
      "node_id": "the_same_head_and_the_same_body",
      "disambiguation_index": 0,
      "label": "the same head and the same body",
      "aliases": [
        "the same head and the same body"
      ],
      "types": [
        "property",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept or entity that shares a common characteristic, such as identity or essence, in both its head and body.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-1",
          "local_name": "the same head and the same body",
          "local_types": [
            "property",
            "relation"
          ],
          "iri": "Entity-the_same_head_and_the_same_body-Mention-1"
        }
      ],
      "relevance": 0.361328125
    },
    "Entity-deck_with_thirteen_rank_and_four_suit": {
      "node_id": "deck_with_thirteen_rank_and_four_suit",
      "disambiguation_index": 0,
      "label": "deck with thirteen ranks and four suits",
      "aliases": [
        "playing cards drawn from a deck with thirteen ranks and four suits",
        "deck with thirteen ranks and four suits"
      ],
      "types": [
        "cards",
        "collection of playing cards",
        "game component"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard set of playing cards",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-5",
          "local_name": "deck with thirteen ranks and four suits",
          "local_types": [
            "game component",
            "collection of playing cards"
          ],
          "iri": "Entity-deck_with_thirteen_rank_and_four_suit-Mention-1"
        },
        {
          "reference": "Section-14-Paragraph-3-Sentence-5",
          "local_name": "playing cards drawn from a deck with thirteen ranks and four suits",
          "local_types": [
            "cards"
          ],
          "iri": "Entity-deck_with_thirteen_rank_and_four_suit-Mention-2"
        }
      ],
      "relevance": 0.3603515625
    },
    "Entity-capitalof": {
      "node_id": "capitalof",
      "disambiguation_index": 0,
      "label": "capitalOf",
      "aliases": [
        "capitalOf"
      ],
      "types": [
        "concept",
        "ontology term",
        "relation",
        "function",
        "query method"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The city or town that serves as the seat of government for a country",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-4",
          "local_name": "capitalOf",
          "local_types": [
            "concept",
            "ontology term",
            "relation",
            "function",
            "query method"
          ],
          "iri": "Entity-capitalof-Mention-1"
        }
      ],
      "relevance": 0.359130859375
    },
    "Entity-nativelanguage": {
      "node_id": "nativelanguage",
      "disambiguation_index": 0,
      "label": "nativeLanguage",
      "aliases": [
        "nativeLanguage"
      ],
      "types": [
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The primary or original language spoken by a person",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "nativeLanguage",
          "local_types": [
            "relation"
          ],
          "iri": "Entity-nativelanguage-Mention-1"
        }
      ],
      "relevance": 0.359130859375
    },
    "Entity-human__x_": {
      "node_id": "human__x_",
      "disambiguation_index": 0,
      "label": "human(x)",
      "aliases": [
        "human( x )",
        "human(x)",
        "human(x, x)"
      ],
      "types": [
        "concept",
        "logical expression",
        "property",
        "technical term",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A member of the species Homo sapiens",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "human(x)",
          "local_types": [
            "concept",
            "property",
            "predicate"
          ],
          "iri": "Entity-human__x_-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "human(x, x)",
          "local_types": [
            "concept",
            "technical term",
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-human__x_-Mention-2"
        }
      ],
      "relevance": 0.35888671875
    },
    "Entity-a_song__x_": {
      "node_id": "a_song__x_",
      "disambiguation_index": 0,
      "label": "a song (x)",
      "aliases": [
        "a song (x)"
      ],
      "types": [
        "song"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific type of musical composition that has one or more producers.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-4",
          "local_name": "a song (x)",
          "local_types": [
            "song"
          ],
          "iri": "Entity-a_song__x_-Mention-1"
        }
      ],
      "relevance": 0.35888671875
    },
    "Entity-the_predicate_of_the_head": {
      "node_id": "the_predicate_of_the_head",
      "disambiguation_index": 0,
      "label": "the predicate of the head",
      "aliases": [
        "the predicate of the head"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The main clause or phrase expressing an action, state, or occurrence.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-5",
          "local_name": "the predicate of the head",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-the_predicate_of_the_head-Mention-1"
        }
      ],
      "relevance": 0.358154296875
    },
    "Entity-be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.": {
      "node_id": "be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "disambiguation_index": 0,
      "label": "be the set of all entities and P = {P1, ..., Pm} be the set of all predicates in F.",
      "aliases": [
        "be the set of all entities and P = {P1, ..., Pm} be the set of all predicates in F."
      ],
      "types": [
        "description",
        "entities",
        "predicates"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of all entities E = {e1, ..., en}",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "be the set of all entities and P = {P1, ..., Pm} be the set of all predicates in F.",
          "local_types": [
            "description",
            "entities",
            "predicates"
          ],
          "iri": "Entity-be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.-Mention-1"
        }
      ],
      "relevance": 0.358154296875
    },
    "Entity-2017": {
      "node_id": "2017",
      "disambiguation_index": 0,
      "label": "2017",
      "aliases": [
        "2017"
      ],
      "types": [
        "date",
        "year"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A year",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "2017",
          "local_types": [
            "date",
            "year"
          ],
          "iri": "Entity-2017-Mention-1"
        }
      ],
      "relevance": 0.3564453125
    },
    "Entity-body_r__e__e__": {
      "node_id": "body_r__e__e__",
      "disambiguation_index": 0,
      "label": "body_r(e, e')",
      "aliases": [
        "body_r(e, e')"
      ],
      "types": [
        "function",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function or expression that relates an input to its corresponding output.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-3",
          "local_name": "body_r(e, e')",
          "local_types": [
            "function",
            "mathematical expression"
          ],
          "iri": "Entity-body_r__e__e__-Mention-1"
        }
      ],
      "relevance": 0.35595703125
    },
    "Entity-human__z2__z2_": {
      "node_id": "human__z2__z2_",
      "disambiguation_index": 0,
      "label": "human(z2, z2)",
      "aliases": [
        "human(z2, z2)"
      ],
      "types": [
        "concept",
        "technical term",
        "predicate",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A member of the species Homo sapiens.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "human(z2, z2)",
          "local_types": [
            "concept",
            "technical term",
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-human__z2__z2_-Mention-1"
        }
      ],
      "relevance": 0.35595703125
    },
    "Entity-an_answer_to_the_former": {
      "node_id": "an_answer_to_the_former",
      "disambiguation_index": 0,
      "label": "an answer to the former",
      "aliases": [
        "an answer to the former"
      ],
      "types": [
        "answer"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The confidence to ask a subsequent completion question based on having an answer to the previous one.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-5",
          "local_name": "an answer to the former",
          "local_types": [
            "answer"
          ],
          "iri": "Entity-an_answer_to_the_former-Mention-1"
        }
      ],
      "relevance": 0.355224609375
    },
    "Entity-phenomenon": {
      "node_id": "phenomenon",
      "disambiguation_index": 0,
      "label": "phenomenon",
      "aliases": [
        "phenomenon"
      ],
      "types": [
        "natural phenomenon",
        "event"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A natural occurrence or event that can be observed in the world",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-5-Sentence-2",
          "local_name": "phenomenon",
          "local_types": [
            "natural phenomenon",
            "event"
          ],
          "iri": "Entity-phenomenon-Mention-1"
        }
      ],
      "relevance": 0.35498046875
    },
    "Entity-manual_mode": {
      "node_id": "manual_mode",
      "disambiguation_index": 0,
      "label": "manual mode",
      "aliases": [
        "manual mode"
      ],
      "types": [
        "mode",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A way or approach to perform an action or process without relying on automated systems.",
      "mentions": [
        {
          "reference": "Section-18-Paragraph-3-Sentence-1",
          "local_name": "manual mode",
          "local_types": [
            "mode",
            "method"
          ],
          "iri": "Entity-manual_mode-Mention-1"
        }
      ],
      "relevance": 0.353515625
    },
    "Entity-we_(5)": {
      "node_id": "we_(5)",
      "disambiguation_index": 5,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of the paper, specifically Pouya Ghiasnezhad Omran, Kerry Taylor, Sergio Rodr\u00edguez M\u00e9ndez, and Armin Haller.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-5",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(5)-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(5)-Mention-2"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(5)-Mention-3"
        },
        {
          "reference": "Section-15-Paragraph-1-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(5)-Mention-4"
        }
      ],
      "relevance": 0.353515625
    },
    "Entity-song": {
      "node_id": "song",
      "disambiguation_index": 0,
      "label": "song",
      "aliases": [
        "song"
      ],
      "types": [
        "audio content",
        "creative work",
        "media content",
        "category",
        "type",
        "musical composition",
        "music genre",
        "entertainment",
        "media",
        "music"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A self-contained piece of music typically performed by singing or playing instruments.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-3",
          "local_name": "song",
          "local_types": [
            "audio content",
            "creative work",
            "musical composition",
            "music"
          ],
          "iri": "Entity-song-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "song",
          "local_types": [
            "music genre",
            "creative work",
            "entertainment",
            "music"
          ],
          "iri": "Entity-song-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "song",
          "local_types": [
            "category",
            "type",
            "entertainment",
            "musical composition",
            "media",
            "music"
          ],
          "iri": "Entity-song-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-4",
          "local_name": "song",
          "local_types": [
            "music genre",
            "audio content"
          ],
          "iri": "Entity-song-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "song",
          "local_types": [
            "music genre",
            "media content"
          ],
          "iri": "Entity-song-Mention-5"
        }
      ],
      "relevance": 0.3515625
    },
    "Entity-birthplace": {
      "node_id": "birthplace",
      "disambiguation_index": 0,
      "label": "birthPlace",
      "aliases": [
        "birthPlace"
      ],
      "types": [
        "concept",
        "ontology term",
        "relation",
        "function",
        "query method"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The place where someone was born",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-4",
          "local_name": "birthPlace",
          "local_types": [
            "concept",
            "ontology term",
            "relation",
            "function",
            "query method"
          ],
          "iri": "Entity-birthplace-Mention-1"
        }
      ],
      "relevance": 0.350341796875
    },
    "Entity-human__z2_": {
      "node_id": "human__z2_",
      "disambiguation_index": 0,
      "label": "human(z2)",
      "aliases": [
        "human(z2)"
      ],
      "types": [
        "predicate",
        "property"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An entity that satisfies the predicate 'human' and has a father who also satisfies the predicate 'human'.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "human(z2)",
          "local_types": [
            "predicate",
            "property"
          ],
          "iri": "Entity-human__z2_-Mention-1"
        }
      ],
      "relevance": 0.349853515625
    },
    "Entity-each_human_ha_at_least_two_parent": {
      "node_id": "each_human_ha_at_least_two_parent",
      "disambiguation_index": 0,
      "label": "each human has at least two parents",
      "aliases": [
        "each human has at least two parents"
      ],
      "types": [
        "human",
        "parent"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The familial relationship between an individual and their caregivers.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "each human has at least two parents",
          "local_types": [
            "human",
            "parent"
          ],
          "iri": "Entity-each_human_ha_at_least_two_parent-Mention-1"
        }
      ],
      "relevance": 0.349853515625
    },
    "Entity-citizenof__x__z1___country__z1_": {
      "node_id": "citizenof__x__z1___country__z1_",
      "disambiguation_index": 0,
      "label": "citizenOf( x, z1 ) ^ country(z1)",
      "aliases": [
        "citizenOf( x, z1 ) ^ country(z1)"
      ],
      "types": [
        "path",
        "nationality"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A citizen of a specific country.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "citizenOf( x, z1 ) ^ country(z1)",
          "local_types": [
            "path",
            "nationality"
          ],
          "iri": "Entity-citizenof__x__z1___country__z1_-Mention-1"
        }
      ],
      "relevance": 0.3486328125
    },
    "Entity-country": {
      "node_id": "country",
      "disambiguation_index": 0,
      "label": "country",
      "aliases": [
        "country"
      ],
      "types": [
        "geopolitical entity",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sovereign nation or territory with its own government",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "country",
          "local_types": [
            "concept",
            "geopolitical entity"
          ],
          "iri": "Entity-country-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "country",
          "local_types": [
            "geopolitical entity"
          ],
          "iri": "Entity-country-Mention-2"
        }
      ],
      "relevance": 0.347900390625
    },
    "Entity-father": {
      "node_id": "father",
      "disambiguation_index": 0,
      "label": "father",
      "aliases": [
        "father"
      ],
      "types": [
        "family relationship",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A male parent or guardian",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "father",
          "local_types": [
            "relation"
          ],
          "iri": "Entity-father-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "father",
          "local_types": [
            "family relationship"
          ],
          "iri": "Entity-father-Mention-2"
        }
      ],
      "relevance": 0.347412109375
    },
    "Entity-birth_date": {
      "node_id": "birth_date",
      "disambiguation_index": 0,
      "label": "birth date",
      "aliases": [
        "birth date"
      ],
      "types": [
        "date",
        "attribute",
        "time stamp",
        "date attribute"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point in time marking an individual's origin or beginning",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "birth date",
          "local_types": [
            "date",
            "attribute",
            "time stamp",
            "date attribute"
          ],
          "iri": "Entity-birth_date-Mention-1"
        }
      ],
      "relevance": 0.346435546875
    },
    "Entity-an_entity_x_is_a_song": {
      "node_id": "an_entity_x_is_a_song",
      "disambiguation_index": 0,
      "label": "an entity x is a song",
      "aliases": [
        "an entity x is a song"
      ],
      "types": [
        "entity",
        "song"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific type of musical composition, characterized by its lyrical and melodic content.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "an entity x is a song",
          "local_types": [
            "entity",
            "song"
          ],
          "iri": "Entity-an_entity_x_is_a_song-Mention-1"
        }
      ],
      "relevance": 0.342041015625
    },
    "Entity-mary": {
      "node_id": "mary",
      "disambiguation_index": 0,
      "label": "Mary",
      "aliases": [
        "Mary"
      ],
      "types": [
        "person",
        "individual"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A person or individual",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "Mary",
          "local_types": [
            "person",
            "individual"
          ],
          "iri": "Entity-mary-Mention-1"
        }
      ],
      "relevance": 0.341796875
    },
    "Entity-we_(1)": {
      "node_id": "we_(1)",
      "disambiguation_index": 1,
      "label": "We",
      "aliases": [
        "We",
        "we"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of this paper",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-4",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-5"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-6"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-3",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-7"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-8"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-4",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-9"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-10"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-11"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-12"
        },
        {
          "reference": "Section-13-Paragraph-7-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-13"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-3",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-14"
        },
        {
          "reference": "Section-14-Paragraph-7-Sentence-4",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-15"
        },
        {
          "reference": "Section-14-Paragraph-8-Sentence-4",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-16"
        },
        {
          "reference": "Section-16-Paragraph-3-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-17"
        }
      ],
      "relevance": 0.34130859375
    },
    "Entity-name__birth_date__and_place_of_birth": {
      "node_id": "name__birth_date__and_place_of_birth",
      "disambiguation_index": 0,
      "label": "name, birth date, and place of birth",
      "aliases": [
        "name, birth date, and place of birth"
      ],
      "types": [
        "attribute"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of identifying characteristics consisting of an individual's name, birthdate, and place of birth.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "name, birth date, and place of birth",
          "local_types": [
            "attribute"
          ],
          "iri": "Entity-name__birth_date__and_place_of_birth-Mention-1"
        }
      ],
      "relevance": 0.34033203125
    },
    "Entity-each_hand": {
      "node_id": "each_hand",
      "disambiguation_index": 0,
      "label": "Each hand",
      "aliases": [
        "Each hand"
      ],
      "types": [
        "hand"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of five playing cards drawn from a deck with thirteen ranks and four suits, used in poker games.",
      "mentions": [
        {
          "reference": "Section-14-Paragraph-3-Sentence-7",
          "local_name": "Each hand",
          "local_types": [
            "hand"
          ],
          "iri": "Entity-each_hand-Mention-1"
        }
      ],
      "relevance": 0.340087890625
    },
    "Entity-trump": {
      "node_id": "trump",
      "disambiguation_index": 0,
      "label": "Trump",
      "aliases": [
        "Trump"
      ],
      "types": [
        "person",
        "public figure",
        "politician"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The 45th President of the United States and former businessman.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-4",
          "local_name": "Trump",
          "local_types": [
            "person",
            "public figure",
            "politician"
          ],
          "iri": "Entity-trump-Mention-1"
        }
      ],
      "relevance": 0.3369140625
    },
    "Entity-singer": {
      "node_id": "singer",
      "disambiguation_index": 0,
      "label": "singer",
      "aliases": [
        "singer"
      ],
      "types": [
        "occupation",
        "job title",
        "personality trait"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person who performs music professionally",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-9-Sentence-3",
          "local_name": "singer",
          "local_types": [
            "occupation",
            "job title",
            "personality trait"
          ],
          "iri": "Entity-singer-Mention-1"
        }
      ],
      "relevance": 0.335205078125
    },
    "Entity-citizenof__x__z1_": {
      "node_id": "citizenof__x__z1_",
      "disambiguation_index": 0,
      "label": "citizenOf( x, z1 )",
      "aliases": [
        "citizenOf( x, z1 )",
        "citizenOf(x, z1)"
      ],
      "types": [
        "association",
        "relationship",
        "relation",
        "logical expression",
        "nationality",
        "technical term",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A person who has a nationality or citizenship from country z1.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "citizenOf( x, z1 )",
          "local_types": [
            "relation",
            "association"
          ],
          "iri": "Entity-citizenof__x__z1_-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "citizenOf( x, z1 )",
          "local_types": [
            "relationship",
            "logical expression",
            "nationality",
            "technical term",
            "predicate"
          ],
          "iri": "Entity-citizenof__x__z1_-Mention-2"
        }
      ],
      "relevance": 0.334716796875
    },
    "Entity-4__end_for": {
      "node_id": "4__end_for",
      "disambiguation_index": 0,
      "label": "4: end for",
      "aliases": [
        "4: end for"
      ],
      "types": [
        "loop construct"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The loop construct",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-8",
          "local_name": "4: end for",
          "local_types": [
            "loop construct"
          ],
          "iri": "Entity-4__end_for-Mention-1"
        }
      ],
      "relevance": 0.334228515625
    },
    "Entity-at_least_one_producer": {
      "node_id": "at_least_one_producer",
      "disambiguation_index": 0,
      "label": "at least one producer",
      "aliases": [
        "at least one producer"
      ],
      "types": [
        "producer"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of entity that produces songs.",
      "mentions": [
        {
          "reference": "Section-15-Paragraph-8-Sentence-4",
          "local_name": "at least one producer",
          "local_types": [
            "producer"
          ],
          "iri": "Entity-at_least_one_producer-Mention-1"
        }
      ],
      "relevance": 0.333984375
    },
    "Entity-we_conclude_in_section_6": {
      "node_id": "we_conclude_in_section_6",
      "disambiguation_index": 0,
      "label": "we conclude in Section 6",
      "aliases": [
        "we conclude in Section 6"
      ],
      "types": [
        "conclusion"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The conclusion drawn from this paper, summarizing its main contributions and findings.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "we conclude in Section 6",
          "local_types": [
            "conclusion"
          ],
          "iri": "Entity-we_conclude_in_section_6-Mention-1"
        }
      ],
      "relevance": 0.332763671875
    },
    "Entity-__empty": {
      "node_id": "__empty",
      "disambiguation_index": 0,
      "label": ":= empty",
      "aliases": [
        ":= empty"
      ],
      "types": [
        "assignment"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The term ':= empty' refers to an assignment, specifically a null or undefined value.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-7",
          "local_name": ":= empty",
          "local_types": [
            "assignment"
          ],
          "iri": "Entity-__empty-Mention-1"
        }
      ],
      "relevance": 0.331298828125
    },
    "Entity-spouse__x__y_": {
      "node_id": "spouse__x__y_",
      "disambiguation_index": 0,
      "label": "spouse(x, y)",
      "aliases": [
        "spouse(x, y)"
      ],
      "types": [
        "relationship",
        "family relationship"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person in a romantic partnership with another individual.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-4",
          "local_name": "spouse(x, y)",
          "local_types": [
            "relationship",
            "family relationship"
          ],
          "iri": "Entity-spouse__x__y_-Mention-1"
        }
      ],
      "relevance": 0.330810546875
    },
    "Entity-citizenof": {
      "node_id": "citizenof",
      "disambiguation_index": 0,
      "label": "citizenOf",
      "aliases": [
        "citizenOf"
      ],
      "types": [
        "relation",
        "rule",
        "relationship"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A relationship indicating that an individual has a nationality or citizenship in a particular country.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "citizenOf",
          "local_types": [
            "relation",
            "rule"
          ],
          "iri": "Entity-citizenof-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "citizenOf",
          "local_types": [
            "relation"
          ],
          "iri": "Entity-citizenof-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "citizenOf",
          "local_types": [
            "relationship"
          ],
          "iri": "Entity-citizenof-Mention-3"
        }
      ],
      "relevance": 0.325927734375
    },
    "Entity-opera_singer": {
      "node_id": "opera_singer",
      "disambiguation_index": 0,
      "label": "opera singers",
      "aliases": [
        "opera singers"
      ],
      "types": [
        "performer",
        "entertainment industry",
        "category",
        "performing arts",
        "entertainment",
        "person",
        "music"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Professional vocalists who specialize in performing classical music compositions, particularly those from the opera repertoire.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "opera singers",
          "local_types": [
            "performer",
            "entertainment industry",
            "category",
            "performing arts",
            "entertainment",
            "person",
            "music"
          ],
          "iri": "Entity-opera_singer-Mention-1"
        }
      ],
      "relevance": 0.321044921875
    },
    "Entity-place_of_birth": {
      "node_id": "place_of_birth",
      "disambiguation_index": 0,
      "label": "place of birth",
      "aliases": [
        "place of birth"
      ],
      "types": [
        "geographic location",
        "location",
        "attribute",
        "location attribute"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The city, town, or village where an individual was born.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "place of birth",
          "local_types": [
            "geographic location",
            "location",
            "attribute",
            "location attribute"
          ],
          "iri": "Entity-place_of_birth-Mention-1"
        }
      ],
      "relevance": 0.3193359375
    },
    "Entity-artist": {
      "node_id": "artist",
      "disambiguation_index": 0,
      "label": "artist",
      "aliases": [
        "artist"
      ],
      "types": [
        "performer",
        "person involved in music creation",
        "musical artist"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person involved in creating music or performing it.",
      "mentions": [
        {
          "reference": "Section-17-Paragraph-4-Sentence-3",
          "local_name": "artist",
          "local_types": [
            "performer",
            "person involved in music creation",
            "musical artist"
          ],
          "iri": "Entity-artist-Mention-1"
        }
      ],
      "relevance": 0.30810546875
    },
    "Entity-country_of_residence": {
      "node_id": "country_of_residence",
      "disambiguation_index": 0,
      "label": "country of residence",
      "aliases": [
        "country of residence"
      ],
      "types": [
        "geographic location",
        "nationality"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sovereign state or territory where an individual has a permanent home",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "country of residence",
          "local_types": [
            "geographic location",
            "nationality"
          ],
          "iri": "Entity-country_of_residence-Mention-1"
        }
      ],
      "relevance": 0.306396484375
    },
    "Entity-their_country_of_residence": {
      "node_id": "their_country_of_residence",
      "disambiguation_index": 0,
      "label": "their country of residence",
      "aliases": [
        "their country of residence"
      ],
      "types": [
        "location"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The place where a person or group resides",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "their country of residence",
          "local_types": [
            "location"
          ],
          "iri": "Entity-their_country_of_residence-Mention-1"
        }
      ],
      "relevance": 0.302490234375
    },
    "Entity-australia": {
      "node_id": "australia",
      "disambiguation_index": 0,
      "label": "Australia",
      "aliases": [
        "Australia"
      ],
      "types": [
        "country",
        "location",
        "nation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A country in Oceania",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "Australia",
          "local_types": [
            "country",
            "location",
            "nation"
          ],
          "iri": "Entity-australia-Mention-1"
        }
      ],
      "relevance": 0.30078125
    },
    "Entity-livesin__mary__canberra__and_locatedin__canberra__australia_": {
      "node_id": "livesin__mary__canberra__and_locatedin__canberra__australia_",
      "disambiguation_index": 0,
      "label": "livesIn(Mary, Canberra) and locatedIn(Canberra, Australia)",
      "aliases": [
        "livesIn(Mary, Canberra) and locatedIn(Canberra, Australia)"
      ],
      "types": [
        "fact",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity referred to by 'livesIn(Mary, Canberra) and locatedIn(Canberra, Australia)' is Mary.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "livesIn(Mary, Canberra) and locatedIn(Canberra, Australia)",
          "local_types": [
            "fact",
            "knowledge graph"
          ],
          "iri": "Entity-livesin__mary__canberra__and_locatedin__canberra__australia_-Mention-1"
        }
      ],
      "relevance": 0.295166015625
    },
    "Entity-we_can_infer_and_assert_the_new_fact__citizenof__mary__australia_": {
      "node_id": "we_can_infer_and_assert_the_new_fact__citizenof__mary__australia_",
      "disambiguation_index": 0,
      "label": "we can infer and assert the new fact: citizenOf(Mary, Australia)",
      "aliases": [
        "we can infer and assert the new fact: citizenOf(Mary, Australia).",
        "we can infer and assert the new fact: citizenOf(Mary, Australia)"
      ],
      "types": [
        "inference",
        "assertion"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity referred to by this mention is Mary, an individual who holds Australian citizenship.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "we can infer and assert the new fact: citizenOf(Mary, Australia)",
          "local_types": [
            "inference",
            "assertion"
          ],
          "iri": "Entity-we_can_infer_and_assert_the_new_fact__citizenof__mary__australia_-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "we can infer and assert the new fact: citizenOf(Mary, Australia).",
          "local_types": [
            "inference",
            "assertion"
          ],
          "iri": "Entity-we_can_infer_and_assert_the_new_fact__citizenof__mary__australia_-Mention-2"
        }
      ],
      "relevance": 0.29296875
    },
    "Entity-canberra": {
      "node_id": "canberra",
      "disambiguation_index": 0,
      "label": "Canberra",
      "aliases": [
        "Canberra"
      ],
      "types": [
        "location",
        "city"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The capital city of Australia",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "Canberra",
          "local_types": [
            "location",
            "city"
          ],
          "iri": "Entity-canberra-Mention-1"
        }
      ],
      "relevance": 0.272705078125
    },
    "Entity-locatedin__canberra__australia_": {
      "node_id": "locatedin__canberra__australia_",
      "disambiguation_index": 0,
      "label": "locatedIn(Canberra, Australia)",
      "aliases": [
        "locatedIn(Canberra, Australia)"
      ],
      "types": [
        "fact",
        "geographic location"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The city of Canberra in Australia",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "locatedIn(Canberra, Australia)",
          "local_types": [
            "fact",
            "geographic location"
          ],
          "iri": "Entity-locatedin__canberra__australia_-Mention-1"
        }
      ],
      "relevance": 0.270263671875
    },
    "Entity-birthplace__trump___": {
      "node_id": "birthplace__trump___",
      "disambiguation_index": 0,
      "label": "birthPlace(Trump, ?)",
      "aliases": [
        "birthPlace(Trump, ?)"
      ],
      "types": [
        "question",
        "biographical information"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The birthplace of Donald Trump",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-8-Sentence-4",
          "local_name": "birthPlace(Trump, ?)",
          "local_types": [
            "question",
            "biographical information"
          ],
          "iri": "Entity-birthplace__trump___-Mention-1"
        }
      ],
      "relevance": 0.26904296875
    },
    "Entity-livesin__mary__canberra_": {
      "node_id": "livesin__mary__canberra_",
      "disambiguation_index": 0,
      "label": "livesIn(Mary, Canberra)",
      "aliases": [
        "livesIn(Mary, Canberra)"
      ],
      "types": [
        "fact",
        "biographical information"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The biographical information that Mary resides in Canberra.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "livesIn(Mary, Canberra)",
          "local_types": [
            "fact",
            "biographical information"
          ],
          "iri": "Entity-livesin__mary__canberra_-Mention-1"
        }
      ],
      "relevance": 0.25927734375
    }
  },
  "summary": "Knowledge Graphs (KGs) have proliferated on the Web since the introduction of knowledge panels to Google search in 2012. KGs are large data-first graph databases with weak inference rules and weakly-constraining data schemes. SHACL, the Shapes Constraint Language, is a W3C recommendation for expressing constraints on graph data as shapes. SHACL shapes serve to validate a KG, to underpin manual KG editing tasks, and to offer insight into KG structure. Often in practice, large KGs have no available shape constraints and so cannot obtain these benefits for ongoing maintenance and extension.\n\nWe introduce Inverse Open Path (IOP) rules, a predicate logic formalism which presents specific shapes in the form of paths over connected entities that are present in a KG. IOP rules express simple shape patterns that can be augmented with minimum cardinality constraints and also used as a building block for more complex shapes, such as trees and other rule patterns. We define formal quality measures for IOP rules and propose a novel method to learn high-quality rules from KGs. We show how to build high-quality tree shapes from the IOP rules. Our learning method, SHACLEARNER, is adapted from a state-of-the-art embedding-based open path rule learner.\n\nWe evaluate SHACLEARNER on some real-world massive KGs, including YAGO2s with 4 million facts, DBpedia 3.8 with 11 million facts, and Wikidata with 8 million facts. The experiments show that our SHACLEARNER can effectively learn informative and intuitive shapes from massive KGs. The shapes are diverse in structural features such as depth and width, and also in quality measures that indicate confidence and generality.\n\nThe paper discusses the importance of knowledge graphs (KGs) and their limitations, particularly with regards to completeness and constraints. It introduces SHACL shapes as a way to express constraints on KG data and proposes a method for learning these shapes from KG data using inverse open path rules. The approach is based on predicate calculus formalism and uses embedding-based rule learner. The mined shapes are augmented with confidence measures to reflect the strength of evidence in the KG.\n\nThis section presents closed path rules and open path rules. An entity is an identifier for an object or person, while a fact (RDF triple) represents relationships between entities via predicates. A knowledge graph consists of entities and facts. Closed-path rules are used in KG rule learning systems to express rules with universal quantification of variables. The support measure counts the number of instances where both body and head are satisfied. Standard confidence measures how frequently the rule is true, while head coverage measures explanatory power.\n\nOPRL defines open path (OP) rules for active knowledge graph completion, which imply the existence of a fact. OP rules have two open variables and are used to assess their quality using open path standard confidence (OPSC), open path head coverage (OPHC).\n\nA Knowledge Graph (KG) can be augmented with type information using schema-free databases like SHACL, which defines constraints for graphs as shapes. Shapes serve two main purposes: validating KG quality and characterising frequent patterns. We focus on property shapes that constrain an argument of a target predicate, such as expressing relationships between entities in Wikidata.\n\nInverse Open Path (IOP) rules are introduced as a converse to OP rules, corresponding to SHACL shapes. IOP rules have a general form and can be used to predict instances of their head predicates. The quality measures for IOP rules include inverse open path support, standard confidence, and head coverage. Annotated IOP rules with cardinality Car express the number of different chains that should exist. A lemma shows that IOPSC is non-increasing with length, which can be useful in rule learning.\n\nSHACLEARNER is an IOP rule learner that adapts OPRL's embedding-based learning to mine annotated rules. It uses sampling, embeddings, and heuristic functions to generate potential rules bounded by maximum length. The algorithm can handle unary predicates and minimum cardinality constraints in the head of the rule. SHACLEARNER also aggregates mined rules into trees for translation to SHACL.\n\nThe Sampling() method reduces a massive knowledge graph (KG) to a smaller subgraph, K', by sampling entities related to a target predicate Pt. This approach helps embedding learners handle large KGs and enables learning IOP rules with up to l atoms.\n\nThe Embeddings() function computes predicate embeddings, as well as subject and object argument embeddings for all predicates in the sampled KG. This is done using RESCAL to embed entities and predicates into vectors or matrices. The scoring function f(e1, P0, e2) = E1^T . P0 . E2 measures the plausibility of a fact that e1 has relation P0 with e2.\n\nPathFinding() generates candidate IOP rules based on predicate embeddings, pruning them using a scoring function heuristic for OP rules. The relationship between logical statements and embedding space properties ensures similar argument embeddings and composite predicates form plausible paths.\n\nThe efficient computation of quality measures (IOPSC and IOPHC) for SHACLearner involves evaluating candidate rules on a small sampled knowledge graph, then downselecting based on their support calculated over the full graph. The paper shows how to efficiently compute these measures using an adjacency matrix representation of the graph.\n\nSHACLearner uses Algorithm 1 to derive SHACL trees from annotated IOP rules, which are used for knowledge graph (KG) completion and validation. The algorithm employs a greedy search to aggregate IOP rules into tree shapes, considering quality measures such as TreeSC. These uncertain shapes can be presented as standard SHACL shapes by ignoring those that fail to satisfy minimum quality thresholds. SHACLearner supports node and property shapes, but has limitations in handling object properties, data type validation, and cardinality expressions.\n\nThe current approaches for learning SHACL shapes from KGs are procedural and lack logical foundations, making them unsuitable for real-world applications. Some methods use semi-automatic or interactive frameworks to define SHACL shapes, but these do not provide a system that discovers patterns from massive KGs. In contrast, our approach uses the KG itself to discover shapes without relying on external modelling artefacts.\n\nWe implemented SHACLEARNER, an algorithm for learning shapes from massive knowledge graphs (KGs). Our experiments show that it can handle real-world KGs like DBpedia and discover diverse shapes. We also demonstrated scalability by handling large KGs including DBpedia with over 11 million facts. The performance of our system shows promise in practice.\n\nThe paper evaluates KG rule-learning methods using established approaches, measuring quantity and quality of distinct rules learned. Rule quality is measured by Inverse open path standard confidence (IOPSC) and Inverse open path head coverage (IOPHC). The SHACLEARNER algorithm shows satisfactory performance in terms of runtime and number of high-quality rules mined from three different KGs: Wikidata, DBPedia, and YAGO2. The distribution of mined rules is presented with respect to IOPSC, IOPHC, cardinality, and length, showing a consistent decrease in quality as these features increase.\n\nSHACLEARNER uses two pruning methods, prior sampling and heuristic pruning, to reduce the search space for IOP rules. We experiment with three variants of SHACLEARNER: (-S+H) without sampling but with heuristic pruning, (+S- H) that samples but doesn't use heuristic pruning, and (-S-H) which does neither. The results show that SHACLEARNER's pruning methods don't miss high-quality rules (IOPSC >= 0.9), but do fail to discover lower-quality rules. Using the complete KG for learning embeddings can harm their quality.\n\nThe results show that aggregating IOP rules into trees reduces runtime by a factor greater than 10 compared to initial IOP mining time. The average number of branches in mined trees ranges from 31% to 56% of the corresponding number of mined rules, with at least 44% of IOP rules pruned due to tree-shaped constraints. A fragment of a 39-branched tree mined from DBpedia is presented as an example.\n\nIn this paper we propose a method to learn SHACL shapes from KGs as a way to describe KG patterns, to validate KGs, and also to support new data entry. For entities that satisfy target predicates, our shapes describe conjunctive paths of constraints over properties, enhanced with minimum cardinality constraints. We reduce the SHACL learning problem to learning a novel kind of rules, Inverse Open Path rules (IOP). We introduce rule quality measures IOP Standard Confidence, IOP Head Coverage, and Cardinality which augment the rules.\n\nIOPSC effectively extends SHACL with shapes, representing the quantified uncertainty of a candidate shape to be selected for interestingness or for KG verification. We also propose a method to aggregate learnt IOP rules in order to discover more complex shapes, that is, trees. The shapes support efficient and interpretable human validation in a depth-first manner and are employed, for example, in an editor called Schimatos for manual knowledge graph completion. The shapes can also be used to complete information triggered by entities with only a type or class declaration by automatically generating dynamic data entry forms.\n\nIn this manual mode, they can also be used more traditionally to complete missing facts for a target predicate, as well as other predicates related to the target, while enabling the acquisition of facts about entities that are entirely missing from the KG. To learn such shapes we adapt an embedding-based Open Path Rule Learner (OPRL) by introducing the following novel components: (1) we propose an IOP rule language that allows us to mine rules with open variables, with one predicate forming the body and a chain of predicates as the head; (2) we introduce cardinality constraints and tree shapes for more expressive patterns; and (3) we propose an efficient method to evaluate IOP rules and trees by exactly computing the quality measures of each rule using fast matrix and vector operations.\n\nOur experiments show that SHACLearner can mine IOP rules of various lengths, cardinalities, and qualities from three massive real-world benchmark KGs including Yago, Wikidata, and DBpedia. Learning shape constraints from schema-free knowledge bases, such as most modern KGs, is a challenging task, beginning with the formalism of constraints that determine the scope of knowledge that can be acquired. The next challenge is designing an efficient learning method, where dealing with uncertainty in the constraints and the learning process adds an extra dimension of challenge but also adds utility. A good learning algorithm should scale gracefully so that discovered constraints are relatively more certain than those that are missed, and SHACLearner establishes a benchmark for this problem.\n\nIn future work, we will validate the shapes we learn with SHACLearner via formal human-expert evaluation and further extend the expressivity of the shapes we can discover. We also propose to redesign the SHACLearner algorithm for a MapReduce implementation to handle extremely massive KGs with tens of billions of facts, such as the most recent version of Wikidata.",
  "triples": [
    [
      "Entity-kg",
      "Predicate-are",
      "Entity-large_data-first_graph_database"
    ],
    [
      "Entity-kg",
      "Predicate-have",
      "Entity-weak_inference_rule"
    ],
    [
      "Entity-w3c_recommendation",
      "Predicate-for_expressing_constraints_on_graph_data_as_shapes",
      "Entity-shape"
    ],
    [
      "Entity-shacl_shape_(1)",
      "Predicate-serve_to_validate_a",
      "Entity-kg"
    ],
    [
      "Entity-shacl_shape_(1)",
      "Predicate-underpin",
      "Entity-manual_kg_editing_task"
    ],
    [
      "Entity-large_kg",
      "Predicate-cannot_obtain",
      "Entity-these_benefit"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "Predicate-introduce",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-we_(1)",
      "Predicate-introduce",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-iop_rule",
      "Predicate-express",
      "Entity-simple_shape_pattern"
    ],
    [
      "Entity-iop_rule",
      "Predicate-augment_with",
      "Entity-minimum_cardinality_constraint"
    ],
    [
      "Entity-we_(1)",
      "Predicate-define_formal_quality_measures_for",
      "Entity-iop_rule"
    ],
    [
      "Entity-we_(1)",
      "Predicate-propose_a_novel_method_to_learn_high-quality_rules_from",
      "Entity-kg"
    ],
    [
      "Entity-we_(1)",
      "Predicate-define",
      "Entity-formal_quality_measure_for_iop_rule"
    ],
    [
      "Entity-iop",
      "Predicate-builds",
      "Entity-tree_shape"
    ],
    [
      "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule",
      "Predicate-shows",
      "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule"
    ],
    [
      "Entity-shaclearner",
      "Predicate-is_adapted_from",
      "Entity-a_state-of-the-art_embedding-based_open_path_rule_learner"
    ],
    [
      "Entity-we_evaluate_shaclearner",
      "Predicate-evaluate",
      "Entity-shaclearner"
    ],
    [
      "Entity-we_evaluate_shaclearner",
      "Predicate-on",
      "Entity-some_real-world_massive_kg"
    ],
    [
      "Entity-the_experiment",
      "Predicate-show_that",
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg"
    ],
    [
      "Entity-our_shaclearner",
      "Predicate-can_effectively_learn",
      "Entity-informative_and_intuitive_shape"
    ],
    [
      "Entity-our_shaclearner",
      "Predicate-learn_from",
      "Entity-massive_kg_(1)"
    ],
    [
      "Entity-the_shape",
      "Predicate-are_diverse_in",
      "Entity-structural_feature_such_a_depth_and_width"
    ],
    [
      "Entity-public_knowledge_graph",
      "Predicate-became_popular_with",
      "Entity-dbpedia"
    ],
    [
      "Entity-public_knowledge_graph",
      "Predicate-became_popular_with",
      "Entity-yago"
    ],
    [
      "Entity-regardless",
      "Predicate-uses",
      "Entity-the_method_that_is_used_to_build_a_kg"
    ],
    [
      "Entity-the_method_that_is_used_to_build_a_kg",
      "Predicate-builds",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-computer_scientist",
      "Predicate-have_different_depths_of_detail_for",
      "Entity-similarly_accomplished_scientist"
    ],
    [
      "Entity-similarly_accomplished_scientist",
      "Predicate-depending_on_their",
      "Entity-country_of_residence"
    ],
    [
      "Entity-kg",
      "Predicate-comes_from",
      "Entity-their_data-first_approach"
    ],
    [
      "Entity-contributor_to_extend_a_kg_in_a_relatively_arbitrary_manner",
      "Predicate-use",
      "Entity-their_data-first_approach"
    ],
    [
      "Entity-relational_database",
      "Predicate-employs",
      "Entity-not-null_and_other_schema-based_constraint"
    ],
    [
      "Entity-large_kg",
      "Predicate-are_populated_by",
      "Entity-automatic_and_semi-automatic_method"
    ],
    [
      "Entity-wikipedia",
      "Predicate-is_a_source_of",
      "Entity-non-structured_source_such_a_wikipedia"
    ],
    [
      "Entity-error",
      "Predicate-can_be_highlighted_for_correction_by_a_careful_application_of",
      "Entity-schema_constraint"
    ],
    [
      "Entity-shacl",
      "Predicate-recommended_by",
      "Entity-the_w3c"
    ],
    [
      "Entity-such_constraint_on_a_kg_a_shape",
      "Predicate-expressed_by",
      "Entity-shacl"
    ],
    [
      "Entity-shacl",
      "Predicate-was_formally_recommended_by",
      "Entity-the_w3c"
    ],
    [
      "Entity-shacl",
      "Predicate-can_be_used_to_express_that",
      "Entity-a_person_in_a_specific_use_case_need_to_have_a_name__birth_date__and_place_of_birth"
    ],
    [
      "Entity-person",
      "Predicate-needs_to_have",
      "Entity-name__birth_date__and_place_of_birth"
    ],
    [
      "Entity-kg",
      "Predicate-guided_by",
      "Entity-the_shape"
    ],
    [
      "Entity-the_shape_(1)",
      "Predicate-used_to_guide",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-the_shape",
      "Predicate-are_used_to_guide_the_population_of",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-shacl_shape_(1)",
      "Predicate-are",
      "Entity-manually_specified"
    ],
    [
      "Entity-multidimensional_relational_database_scheme",
      "Predicate-could_infer",
      "Entity-shape"
    ],
    [
      "Entity-kg_data",
      "Predicate-be_inferred_from",
      "Entity-shape"
    ],
    [
      "Entity-shape",
      "Predicate-could_in_principle_be_inferred_from",
      "Entity-kg_data"
    ],
    [
      "Entity-the_shape",
      "Predicate-can_be_used_for",
      "Entity-subsequent_data_cleaning_or_ongoing_data_entry"
    ],
    [
      "Entity-the_shape",
      "Predicate-characterize_a_KG_and_can_be_used_for",
      "Entity-subsequent_data_cleaning_or_ongoing_data_entry"
    ],
    [
      "Entity-basic_shacl",
      "Predicate-have",
      "Entity-it_advanced_feature"
    ],
    [
      "Entity-the_shape_(1)",
      "Predicate-have",
      "Entity-the_path"
    ],
    [
      "Entity-we",
      "Predicate-learn",
      "Entity-cardinality_constraint"
    ],
    [
      "Entity-we",
      "Predicate-investigate",
      "Entity-the_process_of_constructing_one_kind_of_more_complex_shape__that_is_a_tree__out_of_path"
    ],
    [
      "Entity-we",
      "Predicate-discover",
      "Entity-a_tree"
    ],
    [
      "Entity-an_entity_which_ha_song_a_it_type",
      "Predicate-has",
      "Entity-song"
    ],
    [
      "Entity-we",
      "Predicate-present",
      "Entity-shaclearner"
    ],
    [
      "Entity-shaclearner",
      "Predicate-mines",
      "Entity-shape"
    ],
    [
      "Entity-shaclearner",
      "Predicate-mines_shapes_from",
      "Entity-kg_data"
    ],
    [
      "Entity-we",
      "Predicate-call_them",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-iop_rule",
      "Predicate-learn",
      "Entity-a_state-of-the-art_embedding-based_open_path_rule_learner"
    ],
    [
      "Entity-we",
      "Predicate-adapt",
      "Entity-a_state-of-the-art_embedding-based_open_path_rule_learner"
    ],
    [
      "Entity-we_(3)",
      "Predicate-define",
      "Entity-quality_measure"
    ],
    [
      "Entity-quality_measure",
      "Predicate-express",
      "Entity-the_validity_of_iop_rule_in_a_kg"
    ],
    [
      "Entity-shaclearner",
      "Predicate-uses",
      "Entity-the_mined_iop_rule"
    ],
    [
      "Entity-shaclearner",
      "Predicate-discover",
      "Entity-more_complex_tree_shape"
    ],
    [
      "Entity-iop_rule",
      "Predicate-are_learned_by",
      "Entity-the_mined_iop_rule"
    ],
    [
      "Entity-iop",
      "Predicate-is_a",
      "Entity-shacl_shape"
    ],
    [
      "Entity-each_iop_rule_or_tree",
      "Predicate-can_be_syntactically_rewritten_as",
      "Entity-shacl"
    ],
    [
      "Entity-our_mined_shape",
      "Predicate-are_augmented_with",
      "Entity-a_novel_numerical_confidence_measure"
    ],
    [
      "Entity-the_main_contribution_of_this_paper",
      "Predicate-introduce",
      "Entity-inverse_open_path_rule"
    ],
    [
      "Entity-the_main_contribution_of_this_paper",
      "Predicate-propose",
      "Entity-method_to_aggregate_iop_rule_to_produce_tree_shape"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-describes",
      "Entity-iop_rule"
    ],
    [
      "Entity-embedding-based_method_that_discovers_iop_rule_from_a_kg",
      "Predicate-discovers",
      "Entity-iop_rule"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-includes",
      "Entity-the_formalism_of_iop_rule"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-includes",
      "Entity-embedding-based_method_that_discovers_iop_rule_from_a_kg"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-includes",
      "Entity-the_method_for_aggregating_iop_rule_into_tree"
    ],
    [
      "Entity-we",
      "Predicate-present",
      "Entity-related_work"
    ],
    [
      "Entity-we_(4)",
      "Predicate-discuss",
      "Entity-result_of_an_experimental_evaluation"
    ],
    [
      "Entity-we_conclude_in_section_6",
      "Predicate-conclude",
      "Entity-section_6"
    ],
    [
      "Entity-the_presentation",
      "Predicate-is_adapted_and_extended",
      "Entity-this_section"
    ],
    [
      "Entity-an_entity",
      "Predicate-is",
      "Entity-e"
    ],
    [
      "Entity-an_identifier_for_an_object_such_a_a_place_or_a_person",
      "Predicate-identifies",
      "Entity-e"
    ],
    [
      "Entity-a_fact",
      "Predicate-is",
      "Entity-an_rdf_triple__e__p__e__"
    ],
    [
      "Entity-rdf_triple",
      "Predicate-written_here_as",
      "Entity-p__e__e__"
    ],
    [
      "Entity-a_fact__also_known_a_a_link_",
      "Predicate-means_that_the_subject_entity_e_is_related_to_an_object_entity_e_via_the_binary_predicate_P",
      "Entity-_e__p__e__"
    ],
    [
      "Entity-a_fact",
      "Predicate-is_written_here_as",
      "Entity-p__e__e__"
    ],
    [
      "Entity-we_(1)",
      "Predicate-allow",
      "Entity-unary_predicate_of_the_form_p__e_"
    ],
    [
      "Entity-unary_predicate",
      "Predicate-model_as",
      "Entity-self-loops"
    ],
    [
      "Entity-a_knowledge_graph__kg_",
      "Predicate-is",
      "Entity-_e__f_"
    ],
    [
      "Entity-k_(1)",
      "Predicate-equal_to",
      "Entity-_e__f_"
    ],
    [
      "Entity-e",
      "Predicate-set",
      "Entity-entity"
    ],
    [
      "Entity-f",
      "Predicate-set",
      "Entity-fact"
    ],
    [
      "Entity-kg",
      "Predicate-employ",
      "Entity-rule_learning_system"
    ],
    [
      "Entity-kg_rule_learning_system",
      "Predicate-use",
      "Entity-various_rule_language"
    ],
    [
      "Entity-rlvlr",
      "Predicate-use",
      "Entity-so-called_closed_path__cp__rule"
    ],
    [
      "Entity-scalekb",
      "Predicate-use",
      "Entity-so-called_closed_path__cp__rule"
    ],
    [
      "Entity-each",
      "Predicate-consists_of",
      "Entity-and_a_body_at_the_tail"
    ],
    [
      "Entity-rule",
      "Predicate-is_about",
      "Entity-the_predicate_of_the_head"
    ],
    [
      "Entity-closed-path_rule",
      "Predicate-employ",
      "Entity-various_rule_language"
    ],
    [
      "Entity-pt__x__y_",
      "Predicate-",
      "Entity-p1__x__z1_"
    ],
    [
      "Entity-we_(1)",
      "Predicate-interpret",
      "Entity-these_kind_of_rule"
    ],
    [
      "Entity-these_kind_of_rule",
      "Predicate-with",
      "Entity-universal_quantification_of_all_variable_at_the_outside"
    ],
    [
      "Entity-the_head_of_the_rule",
      "Predicate-instantiates",
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg"
    ],
    [
      "Entity-mary",
      "Predicate-citizenOf",
      "Entity-australia"
    ],
    [
      "Entity-rule",
      "Predicate-generalise_well",
      "Entity-that_is__they_explain_many_fact"
    ],
    [
      "Entity-to_quantify_this_idea",
      "Predicate-recall",
      "Entity-measure"
    ],
    [
      "Entity-measure",
      "Predicate-measure",
      "Entity-head_coverage"
    ],
    [
      "Entity-measure",
      "Predicate-standard",
      "Entity-confidence"
    ],
    [
      "Entity-measure_support",
      "Predicate-used_in",
      "Entity-some_major_approach_to_rule_learning"
    ],
    [
      "Entity-head_coverage_and_standard_confidence",
      "Predicate-are_used_in",
      "Entity-some_major_approach_to_rule_learning"
    ],
    [
      "Entity-definition_1",
      "Predicate-satisfies",
      "Entity-_satisfies__support_"
    ],
    [
      "Entity-cp_rule",
      "Predicate-be",
      "Entity-a_cp_rule_of_the_form__1_"
    ],
    [
      "Entity-suppr",
      "Predicate-",
      "Entity-___e__e____body_r__e__e___and_pt__e__e____"
    ],
    [
      "Entity-definition_1",
      "Predicate-satisfies",
      "Entity-_e___e_"
    ],
    [
      "Entity-let_r_be_a_cp_rule_of_the_form__1_",
      "Predicate-support",
      "Entity-suppr"
    ],
    [
      "Entity-the_rule_is_true",
      "Predicate-is",
      "Entity-of_the_number_of_entity_pair_that_satisfy_the_body_in_the_kg"
    ],
    [
      "Entity-it_(1)",
      "Predicate-is_closely_related_to",
      "Entity-confidence"
    ],
    [
      "Entity-confidence",
      "Predicate-widely_used_in",
      "Entity-association_rule_mining"
    ],
    [
      "Entity-hc",
      "Predicate-measures",
      "Entity-the_explanatory_power_of_the_rule"
    ],
    [
      "Entity-cover",
      "Predicate-is_widely_used_for",
      "Entity-rule_learning"
    ],
    [
      "Entity-it_(2)",
      "Predicate-is_closely_related_to",
      "Entity-cover_which_is_widely_used_for_rule_learning_in_inductive_logic_programming"
    ],
    [
      "Entity-standard_confidence",
      "Predicate-describes",
      "Entity-what_proportion_of_the_inferred_head_instance_are_satisfied_"
    ],
    [
      "Entity-head_coverage",
      "Predicate-measures",
      "Entity-the_explanatory_power_of_the_rule"
    ],
    [
      "Entity-definition_2",
      "Predicate-defines",
      "Entity-_standard_confidence__head_coverage_"
    ],
    [
      "Entity-let",
      "Predicate-be_as_given_in",
      "Entity-definition_1"
    ],
    [
      "Entity-r",
      "Predicate-be",
      "Entity-e"
    ],
    [
      "Entity-e_",
      "Predicate-be",
      "Entity-body_r"
    ],
    [
      "Entity-then_standard_confidence",
      "Predicate-",
      "Entity-sc__r_"
    ],
    [
      "Entity-then_standard_confidence",
      "Predicate-equals",
      "Entity-sc__r___suppr_____e__e____body_r__e__e____"
    ],
    [
      "Entity-pt",
      "Predicate-",
      "Entity-suppr"
    ],
    [
      "Entity-unlike_earlier_work",
      "Predicate-defines",
      "Entity-oprl_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-oprl_for_active_knowledge_graph_completion",
      "Predicate-defines",
      "Entity-open_path__op__rule_of_the_form_"
    ],
    [
      "Entity-we_(1)",
      "Predicate-call",
      "Entity-a_variable_closed"
    ],
    [
      "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open",
      "Predicate-occur",
      "Entity-z0"
    ],
    [
      "Entity-rule",
      "Predicate-are",
      "Entity-variable"
    ],
    [
      "Entity-an_op_rule_(1)",
      "Predicate-has",
      "Entity-two_open_variable__y_and_x"
    ],
    [
      "Entity-an_op_rule_ha_two_open_variable__y_and_x",
      "Predicate-uses",
      "Entity-op_rule"
    ],
    [
      "Entity-op_rule",
      "Predicate-transforms_to",
      "Entity-cp_rule"
    ],
    [
      "Entity-opsc",
      "Predicate-derived_from",
      "Entity-the_closed_path_form"
    ],
    [
      "Entity-ophc",
      "Predicate-derived_from",
      "Entity-the_closed_path_form"
    ],
    [
      "Entity-definition_1",
      "Predicate-defines",
      "Entity-_open_path__opsupp__opsc__ophc_"
    ],
    [
      "Entity-a_pair_of_entity_(2)",
      "Predicate-satisfies",
      "Entity-_e___e_"
    ],
    [
      "Entity-_e___e_",
      "Predicate-denoted",
      "Entity-pt__e___e_"
    ],
    [
      "Entity-op_rule",
      "Predicate-satisfies",
      "Entity-_e___e_"
    ],
    [
      "Entity-ophc",
      "Predicate-",
      "Entity-opsupp__r_"
    ],
    [
      "Entity-a_kg",
      "Predicate-is",
      "Entity-schema-free_database"
    ],
    [
      "Entity-many_kg",
      "Predicate-are_augmented_with",
      "Entity-type_information"
    ],
    [
      "Entity-kg",
      "Predicate-can_be_used_to_understand",
      "Entity-kg_data"
    ],
    [
      "Entity-kg",
      "Predicate-can_also_be_very_helpful_for",
      "Entity-inference_process_on_the_kg"
    ],
    [
      "Entity-many_kg_are_augmented_with_type_information",
      "Predicate-can_be_used_to_understand_and_validate_data",
      "Entity-kg_data"
    ],
    [
      "Entity-many_kg_are_augmented_with_type_information",
      "Predicate-can_also_be_very_helpful_for",
      "Entity-inference_process_on_the_kg"
    ],
    [
      "Entity-w3c",
      "Predicate-introduce",
      "Entity-shacl"
    ],
    [
      "Entity-shacl",
      "Predicate-defines",
      "Entity-constraint"
    ],
    [
      "Entity-shacl",
      "Predicate-for",
      "Entity-graph_a_shape"
    ],
    [
      "Entity-shacl",
      "Predicate-defines_constraints_for_graphs_as_shapes",
      "Entity-graph_a_shape"
    ],
    [
      "Entity-shacl",
      "Predicate-defines",
      "Entity-shacl_defines_constraint_for_graph_a_shape"
    ],
    [
      "Entity-kg",
      "Predicate-can_be_validated_against",
      "Entity-the_shape_(1)"
    ],
    [
      "Entity-kg_can_then_be_validated_against_a_set_of_shape",
      "Predicate-can_be_validated",
      "Entity-the_shape_(1)"
    ],
    [
      "Entity-kg",
      "Predicate-can_then_be_validated_against_a_set_of_shapes",
      "Entity-the_shape_(1)"
    ],
    [
      "Entity-shape",
      "Predicate-validate",
      "Entity-the_quality_of_a_kg"
    ],
    [
      "Entity-shape",
      "Predicate-characterise",
      "Entity-frequent_pattern_in_a_kg"
    ],
    [
      "Entity-fig_._1",
      "Predicate-illustrates",
      "Entity-an_example_of_a_shape_from_wikidata"
    ],
    [
      "Entity-shacl",
      "Predicate-is_extensive_with",
      "Entity-shacl_advanced_feature"
    ],
    [
      "Entity-node_shape",
      "Predicate-constrain",
      "Entity-target_predicate"
    ],
    [
      "Entity-we",
      "Predicate-focus",
      "Entity-property_shape"
    ],
    [
      "Entity-property_shape",
      "Predicate-act_to_constrain",
      "Entity-an_argument_of_the_target_predicate"
    ],
    [
      "Entity-the_shape_express_that_each_entity_x_which_satisfies_human__x__should_satisfy_the_following_path_",
      "Predicate-should_satisfy",
      "Entity-path"
    ],
    [
      "Entity-k-cliques",
      "Predicate-exhibited_in",
      "Entity-kg"
    ],
    [
      "Entity-functional_graph_dependency__fgd_",
      "Predicate-expressed_as",
      "Entity-tree"
    ],
    [
      "Entity-various_formalism",
      "Predicate-proposed",
      "Entity-corresponding_shape"
    ],
    [
      "Entity-cr",
      "Predicate-are_used_for_inferring",
      "Entity-new_fact"
    ],
    [
      "Entity-cr_are_used_for_inferring_new_fact_.",
      "Predicate-are_used",
      "Entity-new_fact"
    ],
    [
      "Entity-fgds",
      "Predicate-define",
      "Entity-constraint"
    ],
    [
      "Entity-constraint",
      "Predicate-like",
      "Entity-the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate"
    ],
    [
      "Entity-fgds_define_constraint_like_the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate_.",
      "Predicate-define",
      "Entity-constraint"
    ],
    [
      "Entity-constraint",
      "Predicate-are_deployed_to_make",
      "Entity-the_kg_consistent"
    ],
    [
      "Entity-these_constraint_are_deployed_to_make_the_kg_consistent_.",
      "Predicate-are_deployed",
      "Entity-the_kg_consistent"
    ],
    [
      "Entity-these_constraint",
      "Predicate-are_deployed_to_make",
      "Entity-the_kg_consistent"
    ],
    [
      "Entity-predicate",
      "Predicate-is_a",
      "Entity-a_sequence_of_predicate"
    ],
    [
      "Entity-we",
      "Predicate-focus_on",
      "Entity-such_path_shape"
    ],
    [
      "Entity-our_shape_learning_system",
      "Predicate-learns_from",
      "Entity-such_path_shape"
    ],
    [
      "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.",
      "Predicate-is_a_sequence_of",
      "Entity-predicate"
    ],
    [
      "Entity-inverse_open_path_rule",
      "Predicate-induced_from",
      "Entity-path"
    ],
    [
      "Entity-rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "Predicate-propose_method_to_mine",
      "Entity-a_kg"
    ],
    [
      "Entity-such_path_shape",
      "Predicate-serve_as",
      "Entity-building_block_for_more_complex_tree"
    ],
    [
      "Entity-the_converse_of_op_rule",
      "Predicate-correspond_to",
      "Entity-shacl_shape"
    ],
    [
      "Entity-inverse_open_path_rule",
      "Predicate-correspond_to",
      "Entity-shacl_shape"
    ],
    [
      "Entity-a_shape",
      "Predicate-can_be_derived_from",
      "Entity-the_following_three_iop_rule"
    ],
    [
      "Entity-iop_rule",
      "Predicate-can_be_derived_from",
      "Entity-a_shape"
    ],
    [
      "Entity-we_(3)",
      "Predicate-omit",
      "Entity-the_quantifier"
    ],
    [
      "Entity-we_(3)",
      "Predicate-writing",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-iop",
      "Predicate-has",
      "Entity-the_body_of_the_rule"
    ],
    [
      "Entity-iop",
      "Predicate-is_Pt_for",
      "Entity-it_head"
    ],
    [
      "Entity-it_head",
      "Predicate-consists_of",
      "Entity-the_sequence_of_predicate_p1__p2__...__pn"
    ],
    [
      "Entity-we_(3)",
      "Predicate-predict",
      "Entity-an_instance_of_the_head"
    ],
    [
      "Entity-iop",
      "Predicate-are_not",
      "Entity-horn"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "Predicate-are_not",
      "Entity-horn"
    ],
    [
      "Entity-to_assess",
      "Predicate-assess",
      "Entity-the_quality_of_iop_rule"
    ],
    [
      "Entity-we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule",
      "Predicate-follows",
      "Entity-iop_rule"
    ],
    [
      "Entity-definition_4",
      "Predicate-defines",
      "Entity-_inverse_open_path__iopsupp__iopsc__iophc_"
    ],
    [
      "Entity-r",
      "Predicate-is_a",
      "Entity-iop_rule_of_the_form__3_"
    ],
    [
      "Entity-a_pair_of_entity",
      "Predicate-satisfies",
      "Entity-the_body_of_r"
    ],
    [
      "Entity-iopsupp",
      "Predicate-",
      "Entity-iophc"
    ],
    [
      "Entity-the_support_for_an_iop_rule",
      "Predicate-is_the_same_as",
      "Entity-corresponding_opsc"
    ],
    [
      "Entity-this_close_relationship",
      "Predicate-helps_us_to_mine_both",
      "Entity-op_and_iop_rule"
    ],
    [
      "Entity-an_op_rule",
      "Predicate-show_the_relationship_between",
      "Entity-it_converse_iop_version"
    ],
    [
      "Entity-an_op_rule",
      "Predicate-has_a_converse_IOP_version",
      "Entity-it_converse_iop_version"
    ],
    [
      "Entity-p1__x__z0_",
      "Predicate--",
      "Entity-p2__z0__z1___p3__z1__z2_"
    ],
    [
      "Entity-_e3__e4__e5_",
      "Predicate-have",
      "Entity-three_entity__e3__e4__e5_"
    ],
    [
      "Entity-_e3__e4__e5_",
      "Predicate-instantiate",
      "Entity-z0"
    ],
    [
      "Entity-_e3__e4__e5_",
      "Predicate-satisfy",
      "Entity-p1__x__z0_"
    ],
    [
      "Entity-_e3__e4__e5_",
      "Predicate-satisfy",
      "Entity-p2__z0__z1___p3__z1__z2_"
    ],
    [
      "Entity-_e1__e2__e3__e4__e5_",
      "Predicate-can_instantiate",
      "Entity-z0"
    ],
    [
      "Entity-we_(3)",
      "Predicate-",
      "Entity-iopsc"
    ],
    [
      "Entity-we_(3)",
      "Predicate-",
      "Entity-iophc"
    ],
    [
      "Entity-we_(3)",
      "Predicate-need",
      "Entity-rule"
    ],
    [
      "Entity-we_(1)",
      "Predicate-introduce",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-an_iop_rule",
      "Predicate-annotated_with_a_cardinality",
      "Entity-car"
    ],
    [
      "Entity-an_iop_rule",
      "Predicate-annotated_with_a_cardinality_Car",
      "Entity-car"
    ],
    [
      "Entity-iopsc",
      "Predicate--",
      "Entity-p1___z0__z1_"
    ],
    [
      "Entity-p1___z0__z1_",
      "Predicate-",
      "Entity-p2___z1__z2_"
    ],
    [
      "Entity-_cardinality_of_an_iop_rule__car_",
      "Predicate-defines",
      "Entity-definition_5"
    ],
    [
      "Entity-definition_5",
      "Predicate-defines",
      "Entity-_cardinality_of_an_iop_rule__car_"
    ],
    [
      "Entity-let_r_(1)",
      "Predicate-be_an_annotated_IOP_rule_of_the_form_4",
      "Entity-iop"
    ],
    [
      "Entity-r",
      "Predicate-have_cardinality_annotation_for",
      "Entity-car__r_"
    ],
    [
      "Entity-for_each_entity_e_such_that_pt__e___e__hold",
      "Predicate-instantiates",
      "Entity-head_r__e__e__"
    ],
    [
      "Entity-rule",
      "Predicate-have",
      "Entity-cardinality"
    ],
    [
      "Entity-a_certain_cardinality_c1",
      "Predicate-have",
      "Entity-iopsc_value"
    ],
    [
      "Entity-lower-cardinality_version_of_that_rule",
      "Predicate-may_have",
      "Entity-the_same_or_higher_iopsc_value"
    ],
    [
      "Entity-a_rule",
      "Predicate-may_have",
      "Entity-a_certain_cardinality_c1"
    ],
    [
      "Entity-lower-cardinality_version_of_that_rule",
      "Predicate-have_the_same_or_higher_IOPSC_values",
      "Entity-iopsc_value"
    ],
    [
      "Entity-let_r_(2)",
      "Predicate-be_an",
      "Entity-iop_rule_of_the_form__3_"
    ],
    [
      "Entity-let_r_be_an_iop_rule_of_the_form__3__.",
      "Predicate-have",
      "Entity-n"
    ],
    [
      "Entity-let_r_(2)",
      "Predicate-be_the_same_rule_shortened_by_removing_the_last_head_predicate.",
      "Entity-r_"
    ],
    [
      "Entity-r",
      "Predicate-has_a_form_of_3",
      "Entity-_3_"
    ],
    [
      "Entity-r_",
      "Predicate-shortened_by_removing_the_last_head_predicate_from_r",
      "Entity-r"
    ],
    [
      "Entity-iopsc__r_",
      "Predicate-",
      "Entity-iopsc__r__"
    ],
    [
      "Entity-iopsc__r_",
      "Predicate-less_than_or_equal_to_IOPSCr",
      "Entity-iopsc__r__"
    ],
    [
      "Entity-this_lemma",
      "Predicate-is_useful_for",
      "Entity-rule_learning"
    ],
    [
      "Entity-algorithm_1",
      "Predicate-is",
      "Entity-shaclearner"
    ],
    [
      "Entity-algorithm_1",
      "Predicate-",
      "Entity-shaclearner"
    ],
    [
      "Entity-kg_k",
      "Predicate-has",
      "Entity-target_predicate_pt"
    ],
    [
      "Entity-parameter",
      "Predicate-have",
      "Entity-max_rule_length_l"
    ],
    [
      "Entity-parameter",
      "Predicate-have",
      "Entity-max_rule_cardinality_mcar"
    ],
    [
      "Entity-parameter",
      "Predicate-have",
      "Entity-miniopsc"
    ],
    [
      "Entity-parameter",
      "Predicate-have",
      "Entity-miniophc"
    ],
    [
      "Entity-parameter",
      "Predicate-have",
      "Entity-and_mintreesc"
    ],
    [
      "Entity-output",
      "Predicate-is",
      "Entity-a_set_of_iop_rule_r_and_tree"
    ],
    [
      "Entity-_p__a_",
      "Predicate-",
      "Entity-embeddings__k__"
    ],
    [
      "Entity-r_",
      "Predicate-",
      "Entity-empty"
    ],
    [
      "Entity-add_pathfinding__k___pt__p__a__k_",
      "Predicate-add",
      "Entity-r"
    ],
    [
      "Entity-r",
      "Predicate-",
      "Entity-ev__r___k__mcar__miniopsc__miniophc_"
    ],
    [
      "Entity-ev__r___k__mcar__miniopsc__miniophc_",
      "Predicate-",
      "Entity-r"
    ],
    [
      "Entity-to_mine",
      "Predicate-start_with",
      "Entity-oprl"
    ],
    [
      "Entity-oprl",
      "Predicate-adapt_its_embedding-based_OP_rule_learning_to_learn",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-to_mine",
      "Predicate-mine",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-to_mine_iop_rule",
      "Predicate-start_with",
      "Entity-oprl"
    ],
    [
      "Entity-we_(1)",
      "Predicate-call",
      "Entity-shaclearner"
    ],
    [
      "Entity-shaclearner__shown_in_algorithm_1",
      "Predicate-shown_in",
      "Entity-algorithm_1"
    ],
    [
      "Entity-sampling__shown_in_algorithm_2",
      "Predicate-prune",
      "Entity-the_entity_and_predicate_that_are_less_relevant_to_the_target_predicate"
    ],
    [
      "Entity-shaclearner",
      "Predicate-uses",
      "Entity-sampling__shown_in_algorithm_2"
    ],
    [
      "Entity-the_sample",
      "Predicate-is_fed_to",
      "Entity-an_embedding_learner"
    ],
    [
      "Entity-rescal",
      "Predicate-in",
      "Entity-embeddings"
    ],
    [
      "Entity-rescal",
      "Predicate-learn_(1)",
      "Entity-embeddings"
    ],
    [
      "Entity-shaclearner",
      "Predicate-uses",
      "Entity-the_computed_embedding_representation_of_predicate_and_entity"
    ],
    [
      "Entity-pathfinding",
      "Predicate-informs",
      "Entity-heuristic_function_that_inform_the_generation_of_iop_rule_bounded_by_a_maximum_length"
    ],
    [
      "Entity-shaclearner",
      "Predicate-inform_the_generation_of_IOP_rules_bounded_by_a_maximum_length",
      "Entity-heuristic_function_that_inform_the_generation_of_iop_rule_bounded_by_a_maximum_length"
    ],
    [
      "Entity-ev",
      "Predicate-produce",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-potential_iop_rule",
      "Predicate-evaluate_annotate_and_filter_in_Ev_to_produce_annotated_IOP_rules",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-a_tree_(1)",
      "Predicate-is_discovered_for_each_argument_of_each_target_predicate_by_aggregating_mined_IOP_rules_in_GreedySearch",
      "Entity-each_argument_of_each_target_predicate"
    ],
    [
      "Entity-shaclearner",
      "Predicate-is_discovered_for_each_argument_of_each_target_predicate_by_aggregating_mined_IOP_rules_in_GreedySearch",
      "Entity-a_tree_is_discovered_for_each_argument_of_each_target_predicate"
    ],
    [
      "Entity-shaclearner",
      "Predicate-is_similar_to",
      "Entity-oprl"
    ],
    [
      "Entity-shaclearner",
      "Predicate-admits",
      "Entity-unary_predicate_(1)"
    ],
    [
      "Entity-oprl",
      "Predicate-cannot_handle",
      "Entity-unary_predicate_(1)"
    ],
    [
      "Entity-shaclearner",
      "Predicate-discover",
      "Entity-iop_rule"
    ],
    [
      "Entity-shaclearner",
      "Predicate-evaluate",
      "Entity-iop_rule"
    ],
    [
      "Entity-shaclearner",
      "Predicate-learn",
      "Entity-the_head_of_the_iop_rule"
    ],
    [
      "Entity-shaclearner",
      "Predicate-differs_from",
      "Entity-oprl_evaluation_module"
    ],
    [
      "Entity-sampling___method",
      "Predicate-computes",
      "Entity-a_fragment_of_the_kg_k_"
    ],
    [
      "Entity-the_sampling___method",
      "Predicate-consisting_of_a_bounded_number_of_entities_that_are_related_to_the_target_predicate_Pt",
      "Entity-k_"
    ],
    [
      "Entity-sampling",
      "Predicate-computes",
      "Entity-a_fragment_of_the_kg_k_"
    ],
    [
      "Entity-embedding_learner",
      "Predicate-cannot_handle",
      "Entity-massive_kg"
    ],
    [
      "Entity-the_sampling___method",
      "Predicate-is_shown_in",
      "Entity-algorithm_2"
    ],
    [
      "Entity-algorithm_2",
      "Predicate-shows",
      "Entity-the_sampling_method__first_introduced"
    ],
    [
      "Entity-iop_rule",
      "Predicate-search_for",
      "Entity-iop_rule_with_up_to_l_atom__including_the_specific_body_target_predicate__pt_"
    ],
    [
      "Entity-iop_rule_with_up_to_l_atom__including_the_specific_body_target_predicate__pt_",
      "Predicate-contains",
      "Entity-the_entity_set_esample_and_corresponding_fact_set_k_"
    ],
    [
      "Entity-predicate",
      "Predicate-are_pruned_in_the_sampling_process_and_no_facts_about_those_predicates_remain",
      "Entity-k_"
    ],
    [
      "Entity-this_simple_approach",
      "Predicate-reduces",
      "Entity-the_size_of_the_problem"
    ],
    [
      "Entity-the_complexity_of_the_sampling_algorithm",
      "Predicate-has_a_value_of",
      "Entity-o__k_"
    ],
    [
      "Entity-the_complexity_of_the_sampling_algorithm",
      "Predicate-is",
      "Entity-o__k_"
    ],
    [
      "Entity-the_sampled_kg",
      "Predicate-is_the_same_as",
      "Entity-the_original_kg"
    ],
    [
      "Entity-real-world_kg",
      "Predicate-are_sparse_with_only_a_very_small_proportion_of",
      "Entity-entity_associated_with_any_predicate_within_distance_l"
    ],
    [
      "Entity-sampled_kg",
      "Predicate-is_far_smaller_than",
      "Entity-original_kg"
    ],
    [
      "Entity-in_practice__the_sampled_kg_is_far_smaller_than_the_original_kg",
      "Predicate-compares_to",
      "Entity-the_original_kg"
    ],
    [
      "Entity-algorithm_2",
      "Predicate-is",
      "Entity-sampling"
    ],
    [
      "Entity-pt",
      "Predicate-target",
      "Entity-predicate"
    ],
    [
      "Entity-parameter",
      "Predicate-has_parameter",
      "Entity-max_rule_length_l"
    ],
    [
      "Entity-parameter",
      "Predicate-max_rule_length",
      "Entity-l"
    ],
    [
      "Entity-k_",
      "Predicate-subgraph_of_the_input_graph",
      "Entity-input_graph"
    ],
    [
      "Entity-e1",
      "Predicate-",
      "Entity-_e__there_exists_e___pt__e__e___or_pt__e___e__"
    ],
    [
      "Entity-_e__there_exists_e___e__in_e__k-1__and__pi__e__e___or_pi__e___e___",
      "Predicate-",
      "Entity-ek"
    ],
    [
      "Entity-5__esample__union__from_i1_to_l__of_ei",
      "Predicate-defines",
      "Entity-esample"
    ],
    [
      "Entity-after_sampling",
      "Predicate-compute",
      "Entity-predicate_embeddings"
    ],
    [
      "Entity-embeddings__",
      "Predicate-compute",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-the_embedding",
      "Predicate-obtained_from",
      "Entity-rescal"
    ],
    [
      "Entity-rescal",
      "Predicate-embeds",
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd"
    ],
    [
      "Entity-rescal",
      "Predicate-embeds",
      "Entity-each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_"
    ],
    [
      "Entity-e1",
      "Predicate-has_relation",
      "Entity-p0"
    ],
    [
      "Entity-e2",
      "Predicate-with",
      "Entity-p0"
    ],
    [
      "Entity-in_embeddings",
      "Predicate-compute",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-to_compute",
      "Predicate-compute",
      "Entity-the_subject__respectively_object__argument_embeddings_of_a_predicate_p_k"
    ],
    [
      "Entity-entity_that_occur_a_the_subject__respectively_object__of_p_k_in_the_kg",
      "Predicate-occur",
      "Entity-p_k"
    ],
    [
      "Entity-predicate",
      "Predicate-compute",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-p_k",
      "Predicate-have",
      "Entity-vector"
    ],
    [
      "Entity-pathfinding",
      "Predicate-produces",
      "Entity-candidate_iop_rule"
    ],
    [
      "Entity-algorithm_1",
      "Predicate-invokes",
      "Entity-pathfinding__"
    ],
    [
      "Entity-pathfinding__",
      "Predicate-produces",
      "Entity-candidate_iop_rule"
    ],
    [
      "Entity-candidate_rule",
      "Predicate-pruned_by",
      "Entity-scoring_function_heuristic_for_op_rule"
    ],
    [
      "Entity-scoring_function_heuristic_for_op_rule",
      "Predicate-prunes",
      "Entity-the_candidate_rule"
    ],
    [
      "Entity-an_iop_rule_(1)",
      "Predicate-acts_to_connect",
      "Entity-entity_satisfying_the_subject_argument_of_the_body_predicate"
    ],
    [
      "Entity-an_iop_rule_(1)",
      "Predicate-acts_to_connect_entities_satisfying_the_subject_argument_of_the_body_predicate",
      "Entity-to_entity_forming_the_object_argument_of_the_last_predicate__p2"
    ],
    [
      "Entity-there_is",
      "Predicate-is_a_relationship_between",
      "Entity-the_logical_statement_of_the_rule"
    ],
    [
      "Entity-the_logical_statement_of_the_rule",
      "Predicate-and",
      "Entity-certain_property_in_the_embedding_space"
    ],
    [
      "Entity-the_logical_statement_of_the_rule",
      "Predicate-is_related_to",
      "Entity-certain_property_in_the_embedding_space"
    ],
    [
      "Entity-p1",
      "Predicate-",
      "Entity-p2_t"
    ],
    [
      "Entity-p2_1",
      "Predicate-",
      "Entity-p2_1"
    ],
    [
      "Entity-p2_t",
      "Predicate-",
      "Entity-p1"
    ],
    [
      "Entity-the_whole_path",
      "Predicate-forms_a",
      "Entity-composite_predicate"
    ],
    [
      "Entity-p___x__t_",
      "Predicate-",
      "Entity-pt__x__y___p1__y__z___p2__z__t_"
    ],
    [
      "Entity-p___x__t_",
      "Predicate-equal_to",
      "Entity-pt__x__y___p1__y__z___p2__z__t_"
    ],
    [
      "Entity-p___x__t_",
      "Predicate-check",
      "Entity-the_plausibility"
    ],
    [
      "Entity-p___x__t_",
      "Predicate-use",
      "Entity-scoring_function"
    ],
    [
      "Entity-the_following",
      "Predicate-will_hold",
      "Entity-1_approx_p1_t_._pt_._p1_._p2_._p2_2"
    ],
    [
      "Entity-two_scoring_function",
      "Predicate-define",
      "Entity-scoring_function"
    ],
    [
      "Entity-all_possible_iop_rule",
      "Predicate-produce",
      "Entity-a_reduced_set_of_candidate_iop_rule"
    ],
    [
      "Entity-two_scoring_function",
      "Predicate-producing",
      "Entity-a_reduced_set_of_candidate_iop_rule"
    ],
    [
      "Entity-candidate_iop_rule",
      "Predicate-are_pruned_by",
      "Entity-scoring_function_heuristic_for_op_rule"
    ],
    [
      "Entity-shaclearner",
      "Predicate-focus_our_attention_on",
      "Entity-the_efficient_matrix-computation"
    ],
    [
      "Entity-shaclearner",
      "Predicate-uses",
      "Entity-the_efficient_matrix-computation"
    ],
    [
      "Entity-shaclearner",
      "Predicate-focuses_on",
      "Entity-the_efficient_matrix-computation"
    ],
    [
      "Entity-algorithm_1",
      "Predicate-evaluates",
      "Entity-candidate_rule"
    ],
    [
      "Entity-ev__",
      "Predicate-first_evaluates",
      "Entity-the_small_sampled_kg"
    ],
    [
      "Entity-ev__",
      "Predicate-evaluates",
      "Entity-candidate_rule"
    ],
    [
      "Entity-iopsc",
      "Predicate-calculated_over",
      "Entity-the_full_kg"
    ],
    [
      "Entity-iophc",
      "Predicate-calculated_over",
      "Entity-the_full_kg"
    ],
    [
      "Entity-they_(1)",
      "Predicate-include",
      "Entity-a_large_number_of_redundant_and_low_quality_rule"
    ],
    [
      "Entity-massive_kg_(2)",
      "Predicate-use",
      "Entity-an_adjacency_matrix_representation_of_the_kg"
    ],
    [
      "Entity-k_",
      "Predicate-represent_as_a_set_of_square_n_x_n_adjacency_matrices_by_defining_the_function_A.",
      "Entity-n_x_n_adjacency_matrix"
    ],
    [
      "Entity-we_(1)",
      "Predicate-represent",
      "Entity-we_represent_k_a_a_set_of_square_n_x_n_adjacency_matrix"
    ],
    [
      "Entity-let",
      "Predicate-define",
      "Entity-we_represent_k_a_a_set_of_square_n_x_n_adjacency_matrix"
    ],
    [
      "Entity-we_(5)",
      "Predicate-illustrate",
      "Entity-the_computation_of_iopsc_and_iophc"
    ],
    [
      "Entity-consider_the_iop_rule_r__pt__x__z0__-__p1__z0__x___p2__z1__y_",
      "Predicate--",
      "Entity-p1__z0__x___p2__z1__y_"
    ],
    [
      "Entity-the_adjacency_matrix",
      "Predicate-are_for",
      "Entity-the_predicate_p1__p2__and_pt"
    ],
    [
      "Entity-a",
      "Predicate-",
      "Entity-a__pt____0_0_0__0_0_0__0_1_1_"
    ],
    [
      "Entity-a__pt_",
      "Predicate-",
      "Entity-a__pt____0_0_0__0_0_0__0_1_1_"
    ],
    [
      "Entity-for_iopsc_and_iophc",
      "Predicate-define",
      "Entity-iopsc"
    ],
    [
      "Entity-for_iopsc_and_iophc",
      "Predicate-define",
      "Entity-iophc"
    ],
    [
      "Entity-entity_that_satisfy_the_head_of_the_rule",
      "Predicate-count",
      "Entity-e_"
    ],
    [
      "Entity-the_number_of_entity_that_join_the_head_of_the_rule_to_it_body",
      "Predicate-is",
      "Entity-count"
    ],
    [
      "Entity-we_(1)",
      "Predicate-find",
      "Entity-distinct_e_s_(1)"
    ],
    [
      "Entity-for__2_",
      "Predicate-are_connected_by",
      "Entity-the_path_p1__p2__...__pm"
    ],
    [
      "Entity-car",
      "Predicate-",
      "Entity-element_with_a_value___car_for_rule_with_cardinality_car"
    ],
    [
      "Entity-car_indicates_a_satisfying_e",
      "Predicate-is",
      "Entity-and_the_number_of_distinct_e_s_is_the_count_of_non-zero_element"
    ],
    [
      "Entity-they_(2)",
      "Predicate-obtain",
      "Entity-distinct_e_s_by_summing_each_row_of_this_product_to_obtain_the_vector_v1__a__p1___a__p2___...__a__pm__"
    ],
    [
      "Entity-the_row_index",
      "Predicate-indicates",
      "Entity-entity_that_satisfy_the_second_argument_of_the_body"
    ],
    [
      "Entity-the_row_index",
      "Predicate-indicates",
      "Entity-entity_that_satisfy_the_first_argument_of_the_head"
    ],
    [
      "Entity-we",
      "Predicate-find",
      "Entity-entity"
    ],
    [
      "Entity-the_entity_satisfying_both_condition",
      "Predicate-satisfying",
      "Entity-condition"
    ],
    [
      "Entity-those_vector",
      "Predicate-multiplication_of",
      "Entity-vector"
    ],
    [
      "Entity-we",
      "Predicate-find",
      "Entity-the_entity_satisfying_both_condition"
    ],
    [
      "Entity-r",
      "Predicate-have",
      "Entity-we_could_have_three_version_of_r__namely_r1__r2__and_r3"
    ],
    [
      "Entity-r2",
      "Predicate-support",
      "Entity-__e2____1"
    ],
    [
      "Entity-quality_measure_that_are_novel_for_shaclearner",
      "Predicate-are_computed_by",
      "Entity-algorithm_1"
    ],
    [
      "Entity-now",
      "Predicate-turn_to",
      "Entity-deriving_shacl_tree"
    ],
    [
      "Entity-algorithm_1",
      "Predicate-have",
      "Entity-line_8_of_algorithm_1"
    ],
    [
      "Entity-annotated_iop_rule",
      "Predicate-are_illustrated_in",
      "Entity-fig_._1"
    ],
    [
      "Entity-shacl",
      "Predicate-deriving_SHACL_trees_from_annotated_IOP_rules",
      "Entity-shacl_tree"
    ],
    [
      "Entity-this_procedure",
      "Predicate-is_used_in",
      "Entity-shaclearner"
    ],
    [
      "Entity-we_(1)",
      "Predicate-use",
      "Entity-a_greedy_search"
    ],
    [
      "Entity-the_iop_rule",
      "Predicate-aggregate",
      "Entity-for_the_subject_argument_and_the_object_argument_of_each_target_predicate"
    ],
    [
      "Entity-human__x_",
      "Predicate--",
      "Entity-citizenof__x__z1_"
    ],
    [
      "Entity-x",
      "Predicate-has",
      "Entity-the_shape_of_fig_._2"
    ],
    [
      "Entity-x",
      "Predicate-has",
      "Entity-language__z3__z3_"
    ],
    [
      "Entity-the_general_form_of_a_tree",
      "Predicate--",
      "Entity-pt__x__z0__(1)"
    ],
    [
      "Entity-z_",
      "Predicate-exists",
      "Entity-y__s"
    ],
    [
      "Entity-general_form",
      "Predicate-is_given_by",
      "Entity-pt__x__z0__(1)"
    ],
    [
      "Entity-it_head_(1)",
      "Predicate-is",
      "Entity-the_sequence_of_path_or_branch__path1__path2__...__pathq"
    ],
    [
      "Entity-all_head_branch",
      "Predicate-join_in_one_shared_variable",
      "Entity-z0"
    ],
    [
      "Entity-the_body_(1)",
      "Predicate-join_in_one_shared_variable",
      "Entity-z0"
    ],
    [
      "Entity-iop",
      "Predicate-follows",
      "Entity-the_quality_of_iop_rule"
    ],
    [
      "Entity-a_set_of_pair_of_entity__e__e1___...___e__eq_",
      "Predicate-denoted_by",
      "Entity-headr__e_"
    ],
    [
      "Entity-r",
      "Predicate-satisfies",
      "Entity-headr__e_"
    ],
    [
      "Entity-e",
      "Predicate-has_head",
      "Entity-headr__e_"
    ],
    [
      "Entity-a_pair_of_entity",
      "Predicate-satisfies",
      "Entity-the_body_of_r_(1)"
    ],
    [
      "Entity-treesupp",
      "Predicate-is_given_by",
      "Entity-the_tree_support_and_tree_standard_confidence_of_r"
    ],
    [
      "Entity-treesc",
      "Predicate-given_by",
      "Entity-the_tree_support_and_tree_standard_confidence_of_r"
    ],
    [
      "Entity-to_learn_(1)",
      "Predicate-employ_a_greedy_search",
      "Entity-greedysearch"
    ],
    [
      "Entity-to_do_so",
      "Predicate-sort",
      "Entity-all_rule_that_bind_the_subject_argument"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-do_the_same_with",
      "Entity-the_rule_that_bind_the_object_argument_of_the_target_predicate"
    ],
    [
      "Entity-shacl",
      "Predicate-can_be_presented_as",
      "Entity-standard_shacl_shape"
    ],
    [
      "Entity-these_uncertain_shape",
      "Predicate-can_be_presented_as",
      "Entity-standard_shacl_shape"
    ],
    [
      "Entity-aside_from_the_cardinality",
      "Predicate-interpreted_as",
      "Entity-shacl_shape_(2)"
    ],
    [
      "Entity-the_body_predicate",
      "Predicate-declared_as",
      "Entity-sh__nodeshape"
    ],
    [
      "Entity-body_predicate",
      "Predicate-declared_as",
      "Entity-sh__nodeshape"
    ],
    [
      "Entity-cardinality_of_a_path",
      "Predicate-is_read_from",
      "Entity-the_annotation_of_the_branch_at_the_terminating_node"
    ],
    [
      "Entity-shaclearner",
      "Predicate-supports",
      "Entity-the_core_of_shacl"
    ],
    [
      "Entity-the_core_of_shacl",
      "Predicate-includes",
      "Entity-node_and_property_shape"
    ],
    [
      "Entity-shaclearner",
      "Predicate-mine",
      "Entity-shacl-sparql"
    ],
    [
      "Entity-shape",
      "Predicate-offer",
      "Entity-kg_documentation"
    ],
    [
      "Entity-shape",
      "Predicate-provide",
      "Entity-a_way_to_validate_a_kg"
    ],
    [
      "Entity-shape",
      "Predicate-offer",
      "Entity-kg_documentation_a_readable_pattern"
    ],
    [
      "Entity-our_novel_tree_shape",
      "Predicate-can_be_used_for",
      "Entity-kg-completion"
    ],
    [
      "Entity-several_method",
      "Predicate-proposed_to_complete",
      "Entity-kg"
    ],
    [
      "Entity-shaclearner",
      "Predicate-generates",
      "Entity-tree_that_can_be_generated_by_shaclearner"
    ],
    [
      "Entity-our_novel_tree_shape",
      "Predicate-provide",
      "Entity-a_way_to_validate_a_kg"
    ],
    [
      "Entity-tree_shape",
      "Predicate-help",
      "Entity-a_human_expert"
    ],
    [
      "Entity-confidence_treescorig",
      "Predicate-is",
      "Entity-a_tree_(2)"
    ],
    [
      "Entity-treescnew",
      "Predicate-",
      "Entity-confidence_treescorig"
    ],
    [
      "Entity-treescorig",
      "Predicate-pruned_to_obtain_simpler_tree_with_higher_confidence_in_the_KG",
      "Entity-treescnew"
    ],
    [
      "Entity-shaclearner",
      "Predicate-deriving_SHACL_trees",
      "Entity-annotated_iop_rule"
    ],
    [
      "Entity-shacl_tree",
      "Predicate-can_be_used_for_KG-completion",
      "Entity-human_expert"
    ],
    [
      "Entity-exploratory_attempt",
      "Predicate-address_learning_SHACL_shapes_from_KGs",
      "Entity-kg"
    ],
    [
      "Entity-exploratory_attempt",
      "Predicate-address",
      "Entity-learning_shacl_shape"
    ],
    [
      "Entity-procedural_method",
      "Predicate-without",
      "Entity-logical_foundation"
    ],
    [
      "Entity-they_(3)",
      "Predicate-are_not_shown_to_be",
      "Entity-scalable_to_handle_real-world_kg"
    ],
    [
      "Entity-procedural_method",
      "Predicate-are_not_shown_to_be_scalable_to_handle_real-world_KGs",
      "Entity-real-world_kg"
    ],
    [
      "Entity-procedural_method",
      "Predicate-lack",
      "Entity-logical_foundation"
    ],
    [
      "Entity-they_(4)",
      "Predicate-work_with",
      "Entity-a_small_amount_of_data"
    ],
    [
      "Entity-approach",
      "Predicate-provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_SHACL_shapes",
      "Entity-shacl_shape"
    ],
    [
      "Entity-another_work",
      "Predicate-defines",
      "Entity-shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use"
    ],
    [
      "Entity-another_work",
      "Predicate-provides_an_interactive_framework_to_define",
      "Entity-shacl_shape"
    ],
    [
      "Entity-a_formalisation",
      "Predicate-gives",
      "Entity-the_approach"
    ],
    [
      "Entity-a_formalisation",
      "Predicate-gives",
      "Entity-formalisation_of_the_approach_is_given__but_there_are_no_shape_quality_measure_that_are_essential_for_large_scale_shape_mining"
    ],
    [
      "Entity-work",
      "Predicate-use",
      "Entity-existing_ontology_for_kg"
    ],
    [
      "Entity-work",
      "Predicate-use",
      "Entity-existing_ontology"
    ],
    [
      "Entity-one_work",
      "Predicate-uses",
      "Entity-two_different_kind_of_knowledge"
    ],
    [
      "Entity-work",
      "Predicate-use",
      "Entity-ontology_constraint_pattern"
    ],
    [
      "Entity-our_work",
      "Predicate-uses_the_KG_itself_to_discover_the_shapes_without_relying_on_external_modelling_artefacts.",
      "Entity-kg"
    ],
    [
      "Entity-our_work",
      "Predicate-uses",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-shacl_shape",
      "Predicate-validate",
      "Entity-rdf_database"
    ],
    [
      "Entity-one_proposal",
      "Predicate-suggests",
      "Entity-extended_validation_framework"
    ],
    [
      "Entity-method",
      "Predicate-proposed_to_detect_which",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-a_set_of_rule_and_shape_are_provided",
      "Predicate-could_be_violated_by_applying_a_rule",
      "Entity-which_shape_could_be_violated_by_applying_a_rule"
    ],
    [
      "Entity-rule_and_shape",
      "Predicate-could_be_violated_by_applying_a_rule",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-there_are_some_attempt",
      "Predicate-provide_logical_foundations_for_the_semantics_of_the",
      "Entity-shacl_language"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "Predicate-presents_the_semantics_of",
      "Entity-recursive_shacl_shape"
    ],
    [
      "Entity-our_work",
      "Predicate-approach",
      "Entity-shacl_semantics"
    ],
    [
      "Entity-our_work",
      "Predicate-in_the_reverse_direction_of",
      "Entity-shacl_semantics"
    ],
    [
      "Entity-we_(1)",
      "Predicate-start_with",
      "Entity-logical_formalism"
    ],
    [
      "Entity-logical_formalism",
      "Predicate-have",
      "Entity-both_well-defined_semantics_and_motivating_use_case"
    ],
    [
      "Entity-both_well-defined_semantics_and_motivating_use_case",
      "Predicate-derive_shapes_that_can_be_trivially_expressed_in_a_fragment_of",
      "Entity-shacl"
    ],
    [
      "Entity-we_(6)",
      "Predicate-have_implemented",
      "Entity-our_shaclearner_based_on_algorithm_1"
    ],
    [
      "Entity-we_(1)",
      "Predicate-conducted",
      "Entity-experiment_to_assess_it"
    ],
    [
      "Entity-the_experiment",
      "Predicate-are_designed_to_prove",
      "Entity-the_effectiveness_of_our_shaclearner"
    ],
    [
      "Entity-our_experiment_are_designed_to_prove_the_effectiveness_of_our_shaclearner_at_capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_",
      "Predicate-prove",
      "Entity-the_effectiveness_of_our_shaclearner"
    ],
    [
      "Entity-proposed_system",
      "Predicate-learn",
      "Entity-shape"
    ],
    [
      "Entity-system",
      "Predicate-can_handle",
      "Entity-task"
    ],
    [
      "Entity-shaclearner",
      "Predicate-is_scalable_so_it_can_handle",
      "Entity-real-world_massive_kg"
    ],
    [
      "Entity-dbpedia_with_over_11_million_fact",
      "Predicate-including",
      "Entity-dbpedia"
    ],
    [
      "Entity-shaclearner",
      "Predicate-can_handle",
      "Entity-real-world_massive_kg"
    ],
    [
      "Entity-shaclearner",
      "Predicate-learn",
      "Entity-several_shape_each_for_various_target_predicate"
    ],
    [
      "Entity-shaclearner",
      "Predicate-with_respect_to",
      "Entity-iopsc_and_iophc"
    ],
    [
      "Entity-shaclearner",
      "Predicate-discover",
      "Entity-shape"
    ],
    [
      "Entity-shaclearner",
      "Predicate-has",
      "Entity-shape_of_varying_complexity_and_diversity_with_respect_to_length_and_cardinality"
    ],
    [
      "Entity-shaclearner",
      "Predicate-discover",
      "Entity-shape_of_varying_complexity_and_diversity_with_respect_to_length_and_cardinality"
    ],
    [
      "Entity-shaclearner",
      "Predicate-discovers",
      "Entity-every_high-quality_rule"
    ],
    [
      "Entity-shaclearner",
      "Predicate-discovers",
      "Entity-more_complex_shape__tree_"
    ],
    [
      "Entity-our_four_benchmark_kg",
      "Predicate-are_described_in",
      "Entity-table_1"
    ],
    [
      "Entity-our_four_benchmark_kg",
      "Predicate-described_in",
      "Entity-table_1"
    ],
    [
      "Entity-three_benchmark",
      "Predicate-are_common",
      "Entity-kg"
    ],
    [
      "Entity-the_fourth",
      "Predicate-is_a_small_synthetic_KG_for",
      "Entity-poker"
    ],
    [
      "Entity-the_fourth",
      "Predicate-is_a_small_synthetic_KG_for_evaluating_the_completeness_of_our_algorithm",
      "Entity-poker"
    ],
    [
      "Entity-poker_kg",
      "Predicate-adapted_from",
      "Entity-classic_version"
    ],
    [
      "Entity-each_poker_hand",
      "Predicate-comprises",
      "Entity-five_playing_card"
    ],
    [
      "Entity-poker_hand",
      "Predicate-drawn_from_a_deck_with_thirteen_ranks_and_four_suits",
      "Entity-deck_with_thirteen_rank_and_four_suit"
    ],
    [
      "Entity-high_card",
      "Predicate-is_assigned_to",
      "Entity-each_hand"
    ],
    [
      "Entity-one_pair",
      "Predicate-is_assigned_to",
      "Entity-each_hand"
    ],
    [
      "Entity-we_(6)",
      "Predicate-generate",
      "Entity-five_hundred_poker_hand_and_all_fact_related_to_them"
    ],
    [
      "Entity-twenty-eight",
      "Predicate-are",
      "Entity-predicate"
    ],
    [
      "Entity-intel_xeon_cpu_e5-2650_v4",
      "Predicate-at",
      "Entity-2.20_ghz"
    ],
    [
      "Entity-intel_xeon_cpu_e5-2650_v4_at_2.20_ghz__with_66_gb_ram_and_running_centos_8",
      "Predicate-has",
      "Entity-66_gb_ram"
    ],
    [
      "Entity-type_predicate_for_experiment",
      "Predicate-transforms",
      "Entity-kg"
    ],
    [
      "Entity-we_(7)",
      "Predicate-require",
      "Entity-a_common_representation_for_this_work"
    ],
    [
      "Entity-we_employ_an_abstract_model",
      "Predicate-uses",
      "Entity-description_logic_ontology"
    ],
    [
      "Entity-class_and_type",
      "Predicate-are_named",
      "Entity-unary_predicate"
    ],
    [
      "Entity-transforming_kg",
      "Predicate-require",
      "Entity-a_common_representation_for_this_work"
    ],
    [
      "Entity-feature",
      "Predicate-is_important_since_learning_partially_instantiated",
      "Entity-shape"
    ],
    [
      "Entity-learning_partially_instantiated_shape",
      "Predicate-can_cause_an_explosion_in",
      "Entity-the_space_of_possible_shape"
    ],
    [
      "Entity-self-loop_link",
      "Predicate-for",
      "Entity-unary_predicate"
    ],
    [
      "Entity-concept_or_class_membership",
      "Predicate-modeled_as",
      "Entity-entity_instance_of_a_binary_fact"
    ],
    [
      "Entity-dbpedia",
      "Predicate-contains",
      "Entity-predicate"
    ],
    [
      "Entity-predicate",
      "Predicate-have",
      "Entity-second_argument"
    ],
    [
      "Entity-new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album",
      "Predicate-make",
      "Entity-we_(1)"
    ],
    [
      "Entity-then_we_produce_new_unary_fact_based_on_the_new_predicate_and_related_fact",
      "Predicate-produce",
      "Entity-new_unary_fact"
    ],
    [
      "Entity-we_(4)",
      "Predicate-use",
      "Entity-the_two_type-like_predicate_from_dbpedia_3.8_and_the_one_from_wikidata"
    ],
    [
      "Entity-predicate",
      "Predicate-have",
      "Entity-class"
    ],
    [
      "Entity-we_(5)",
      "Predicate-follow",
      "Entity-the_established_approach_for_evaluating_kg_rule-learning_method"
    ],
    [
      "Entity-the_established_approach_for_evaluating_kg_rule-learning_method",
      "Predicate-evaluating",
      "Entity-kg_rule-learning_method"
    ],
    [
      "Entity-rule_quality",
      "Predicate-is_measured_by",
      "Entity-inverse_open_path_standard_confidence__iopsc_"
    ],
    [
      "Entity-rule_quality",
      "Predicate-is_measured_by",
      "Entity-inverse_open_path_head_coverage__iophc_"
    ],
    [
      "Entity-we_(5)",
      "Predicate-select",
      "Entity-50_target_predicate"
    ],
    [
      "Entity-yago2s",
      "Predicate-as_target_predicates_of",
      "Entity-binary_predicate"
    ],
    [
      "Entity-yago2s",
      "Predicate-have",
      "Entity-target_predicate"
    ],
    [
      "Entity-a_10_hour_limit",
      "Predicate-set_for",
      "Entity-learning_each_target_predicate"
    ],
    [
      "Entity-iop_rule",
      "Predicate-was_found",
      "Entity-target_predicate"
    ],
    [
      "Entity-table_2",
      "Predicate-shows",
      "Entity-the_number_of_rule__the_average_number_of_quality_iop_rule_found__the_proportion_of_target_predicate_for_which_at_least_one_iop_rule_wa_found__and_the_running_time_in_hour"
    ],
    [
      "Entity-only_high_quality_rule",
      "Predicate-meeting_minimum_quality_thresholds_are_included_in_these_figures",
      "Entity-these_figure"
    ],
    [
      "Entity-these_threshold",
      "Predicate-are",
      "Entity-threshold"
    ],
    [
      "Entity-rule_of_low_quality",
      "Predicate-are_included_as",
      "Entity-these_threshold"
    ],
    [
      "Entity-the_distribution_of_rule_with_respect_to_the_feature__iopsc__iophc__cardinality_and_length",
      "Predicate-illustrates",
      "Entity-rule"
    ],
    [
      "Entity-iopsc_v_length",
      "Predicate-vs",
      "Entity-length"
    ],
    [
      "Entity-the_distribution",
      "Predicate-shows",
      "Entity-the_figure"
    ],
    [
      "Entity-the_left-hand_chart",
      "Predicate-observe",
      "Entity-a_consistent_decrease_in_the_proportion_of_quality_rule"
    ],
    [
      "Entity-the_left-hand_chart",
      "Predicate-observe_a_consistent_decrease_in_the_proportion_of_quality_rules_as",
      "Entity-iopsc"
    ],
    [
      "Entity-iophc",
      "Predicate-showing",
      "Entity-many_relevant_rule_with_many_covered_head_instance"
    ],
    [
      "Entity-right_hand_chart",
      "Predicate-see_a_similar_pattern_for_increasing",
      "Entity-iophc"
    ],
    [
      "Entity-the_majority_of_learned_rule",
      "Predicate-have",
      "Entity-iophc"
    ],
    [
      "Entity-this",
      "Predicate-is_expected_because",
      "Entity-the_statistical_likelihood_of_poor_quality_rule"
    ],
    [
      "Entity-our_pruning_technique",
      "Predicate-prune_away",
      "Entity-lower_quality_rule"
    ],
    [
      "Entity-wikidata",
      "Predicate-comes_second_ahead_of",
      "Entity-yago2s"
    ],
    [
      "Entity-iopsc",
      "Predicate-learns_from",
      "Entity-dbpedia"
    ],
    [
      "Entity-wikidata",
      "Predicate-comes_after",
      "Entity-yago2s"
    ],
    [
      "Entity-the_distribution_(1)",
      "Predicate-shows",
      "Entity-the_largest_proportion_of_rule_ha_a_cardinality_of_1"
    ],
    [
      "Entity-yago2s",
      "Predicate-demonstrates_a_tendency_towards_higher_cardinalities_than",
      "Entity-the_other_kg"
    ],
    [
      "Entity-the_first_rule_(1)",
      "Predicate-indicates",
      "Entity-x_should_belong_to_an_album_that_ha_y_a_record_label"
    ],
    [
      "Entity-the_second_rule",
      "Predicate-requires",
      "Entity-a_song__x__to_have_at_least_one_producer"
    ],
    [
      "Entity-the_third_rule",
      "Predicate-requires",
      "Entity-a_song_to_have_at_least_two_producer"
    ],
    [
      "Entity-a_song__x_",
      "Predicate-has",
      "Entity-at_least_one_producer"
    ],
    [
      "Entity-a_song__x_",
      "Predicate-have",
      "Entity-at_least_one_producer"
    ],
    [
      "Entity-using_rule_found_in_the_experiment",
      "Predicate-found",
      "Entity-rule"
    ],
    [
      "Entity-using_rule_found_in_the_experiment",
      "Predicate-further_illustrate",
      "Entity-the_practical_meaning_of_the_iopsc_and_iophc_quality"
    ],
    [
      "Entity-iopsc",
      "Predicate-determines",
      "Entity-the_confidence_of_a_rule"
    ],
    [
      "Entity-iopsc",
      "Predicate-based_on",
      "Entity-counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg"
    ],
    [
      "Entity-all_unary_predicate",
      "Predicate-are",
      "Entity-occupation_such_a_singer_or_entrepreneur"
    ],
    [
      "Entity-entity_which_have_these_type",
      "Predicate-turn_out_to_be",
      "Entity-person_even_though_there_is_no_explicit_person_type_in_our_kg"
    ],
    [
      "Entity-all_unary_predicate_are_occupation_such_a_singer_or_entrepreneur__so_all_the_entity_which_have_these_type_turn_out_to_be_person_even_though_there_is_no_explicit_person_type_in_our_kg",
      "Predicate-turn_out_to_be",
      "Entity-person"
    ],
    [
      "Entity-occupation",
      "Predicate-have",
      "Entity-iop_rule"
    ],
    [
      "Entity-the_occupation_all_have_very_similar_iop_rule_about_each_of_them_with_high_iopsc_and_low_iophc",
      "Predicate-have",
      "Entity-iop_rule_about_each_of_them"
    ],
    [
      "Entity-iop_rule",
      "Predicate-apply",
      "Entity-one_specific_unary_predicate"
    ],
    [
      "Entity-pathfinding_of_algorithm_1",
      "Predicate-uses",
      "Entity-prior_sampling"
    ],
    [
      "Entity-pruning_method",
      "Predicate-affect",
      "Entity-shaclearner"
    ],
    [
      "Entity-shaclearner_with_regard_to_the_quality_and_quantity_of_learnt_rule",
      "Predicate-conducts",
      "Entity-experiment"
    ],
    [
      "Entity-shaclearner",
      "Predicate-conduct_experiments_to_explore_how_these_two_pruning_methods_affect_with_regard_to_the_quality_and_quantity_of",
      "Entity-learnt_rule"
    ],
    [
      "Entity-shaclearner",
      "Predicate-includes",
      "Entity-heuristic_pruning"
    ],
    [
      "Entity-shaclearner",
      "Predicate-samples",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-shaclearner",
      "Predicate-generates_rules_based_on",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-shaclearner",
      "Predicate-does_not_use",
      "Entity-heuristic_pruning"
    ],
    [
      "Entity-this_method",
      "Predicate-is",
      "Entity-a_brute-force_search"
    ],
    [
      "Entity-sh_(1)",
      "Predicate-has",
      "Entity-shaclearner"
    ],
    [
      "Entity-we_(2)",
      "Predicate-use",
      "Entity-poker_kg"
    ],
    [
      "Entity-the_small_poker_kg",
      "Predicate-handle",
      "Entity-this_experiment"
    ],
    [
      "Entity-we_(2)",
      "Predicate-use",
      "Entity-the_small_poker_kg"
    ],
    [
      "Entity-we_(2)",
      "Predicate-handle",
      "Entity-this_experiment"
    ],
    [
      "Entity-all_28_unary_predicate_a_the_target_predicate",
      "Predicate-are_used_as",
      "Entity-target_predicate"
    ],
    [
      "Entity-the_last_row",
      "Predicate-corresponds_to",
      "Entity-shaclearner_of_algorithm_1"
    ],
    [
      "Entity-the_first_column",
      "Predicate-has",
      "Entity-iopsc"
    ],
    [
      "Entity-for_example_(3)",
      "Predicate-considers",
      "Entity-the_first_column__the_number_of_learnt_rule_with_iopsc_in_range_of__0.1__0.3__"
    ],
    [
      "Entity-the_performance_of_the_shaclearner__-sh_",
      "Predicate-compares_to",
      "Entity-shaclearner__-s-h_"
    ],
    [
      "Entity-shaclearner",
      "Predicate-does_not_miss_any_rules_of",
      "Entity-rule_of_the_highest_quality"
    ],
    [
      "Entity-shaclearner",
      "Predicate-does_not_miss_any",
      "Entity-rule_of_the_highest_quality"
    ],
    [
      "Entity-shaclearner",
      "Predicate-cause_it_to_fail_to_discover_more",
      "Entity-rule_of_lower_quality"
    ],
    [
      "Entity-pruning_method",
      "Predicate-cause_it_to_fail_to_discover_more",
      "Entity-rule_of_lower_quality"
    ],
    [
      "Entity-this_(1)",
      "Predicate-has",
      "Entity-feature"
    ],
    [
      "Entity-pruning_variant",
      "Predicate-do_not_uniformly_increase_in_effectiveness_with_decreasing",
      "Entity-rule_quality"
    ],
    [
      "Entity-this_may_be_because",
      "Predicate-harm",
      "Entity-the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner"
    ],
    [
      "Entity-using_the_complete_kg_for_learning_rule_about_all_target_predicate",
      "Predicate-could_harm",
      "Entity-the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner"
    ],
    [
      "Entity-embeddings",
      "Predicate-arises_from",
      "Entity-sampling_method"
    ],
    [
      "Entity-kg",
      "Predicate-is_customised_for",
      "Entity-target_predicate"
    ],
    [
      "Entity-all_entity",
      "Predicate-are_either_directly_related_to",
      "Entity-the_target_predicate_(1)"
    ],
    [
      "Entity-tree",
      "Predicate-built_based_on",
      "Entity-iop_rule_discovered_in_the_experiment"
    ],
    [
      "Entity-iop_rule",
      "Predicate-discovered_in",
      "Entity-experiment"
    ],
    [
      "Entity-iop_rule",
      "Predicate-used_to_build",
      "Entity-tree"
    ],
    [
      "Entity-we_report",
      "Predicate-report",
      "Entity-the_characteristic_of_discovered_tree"
    ],
    [
      "Entity-we_report",
      "Predicate-showing",
      "Entity-average_treesc_for_each_kg__along_with_the_average_number_of_branch_in_the_tree_and_the_average_tree-building_runtime"
    ],
    [
      "Entity-iop_rule",
      "Predicate-is_lower_than",
      "Entity-the_initial_iop_mining_time"
    ],
    [
      "Entity-the_result",
      "Predicate-show",
      "Entity-the_method_for_aggregating_iop_rule_into_tree"
    ],
    [
      "Entity-rule_learner",
      "Predicate-be_sensitive_to",
      "Entity-the_maximum_length_of_rule"
    ],
    [
      "Entity-number",
      "Predicate-grows_exponentially_with",
      "Entity-the_maximum_number_of_predicate_of_the_rule"
    ],
    [
      "Entity-at_least_44__of_iop_rule_are_pruned",
      "Predicate-prune",
      "Entity-iop_rule"
    ],
    [
      "Entity-iop_rule",
      "Predicate-mined_from",
      "Entity-dbpedia"
    ],
    [
      "Entity-song",
      "Predicate-has_an_album_with_a_record_label",
      "Entity-record_label"
    ],
    [
      "Entity-song",
      "Predicate-has_an_album_with_a_genre",
      "Entity-genre"
    ],
    [
      "Entity-tree_shape",
      "Predicate-require",
      "Entity-unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch"
    ],
    [
      "Entity-we_(9)",
      "Predicate-plan_to_investigate",
      "Entity-this_potential_post-processing_step"
    ],
    [
      "Entity-we_(9)",
      "Predicate-investigate",
      "Entity-future_work"
    ],
    [
      "Entity-method",
      "Predicate-learn_(1)",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-validate",
      "Entity-kg"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-support",
      "Entity-new_data_entry"
    ],
    [
      "Entity-shacl_shape",
      "Predicate-describe",
      "Entity-kg_pattern"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-propose",
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_."
    ],
    [
      "Entity-entity_that_satisfy_target_predicate",
      "Predicate-satisfy",
      "Entity-target_predicate"
    ],
    [
      "Entity-entity_that_satisfy_target_predicate",
      "Predicate-describe",
      "Entity-conjunctive_path_of_constraint_over_property"
    ],
    [
      "Entity-we_(6)",
      "Predicate-reduce",
      "Entity-shacl_learning_problem"
    ],
    [
      "Entity-shacl_learning_problem",
      "Predicate-reduce_to",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-we_(6)",
      "Predicate-introduce",
      "Entity-rule_quality_measure_iop_standard_confidence__iop_head_coverage__and_cardinality_which_augment_the_rule"
    ],
    [
      "Entity-iopsc",
      "Predicate-extends",
      "Entity-shacl"
    ],
    [
      "Entity-candidate_shape",
      "Predicate-to_be_selected_for",
      "Entity-interestingness_or_for_kg_verification"
    ],
    [
      "Entity-we_(10)",
      "Predicate-propose",
      "Entity-a_method"
    ],
    [
      "Entity-iop_rule",
      "Predicate-aggregate",
      "Entity-learnt_iop_rule"
    ],
    [
      "Entity-the_shape_(3)",
      "Predicate-support",
      "Entity-efficient_and_interpretable_human_validation_in_a_depth-first_manner"
    ],
    [
      "Entity-the_shape_(3)",
      "Predicate-are_employed_for",
      "Entity-an_editor_called_schimatos_for_manual_knowledge_graph_completion"
    ],
    [
      "Entity-schimatos",
      "Predicate-employs",
      "Entity-the_shape_(3)"
    ],
    [
      "Entity-entity_with_only_a_type_or_class_declaration",
      "Predicate-triggered_by",
      "Entity-the_shape_(3)"
    ],
    [
      "Entity-the_shape_(3)",
      "Predicate-used_to_complete",
      "Entity-information"
    ],
    [
      "Entity-the_shape_(3)",
      "Predicate-generate",
      "Entity-dynamic_data_entry_form"
    ],
    [
      "Entity-kg",
      "Predicate-is_related_to",
      "Entity-target_predicate"
    ],
    [
      "Entity-kg",
      "Predicate-has_missing_facts_about_entities_that_are_entirely_missing_from",
      "Entity-entity"
    ],
    [
      "Entity-we_(10)",
      "Predicate-introduce",
      "Entity-cardinality_constraint_and_tree_shape"
    ],
    [
      "Entity-learning_shape_constraint",
      "Predicate-determine",
      "Entity-the_scope_of_knowledge_that_can_be_acquired"
    ],
    [
      "Entity-schema-free_knowledge_base",
      "Predicate-is_a_challenging_task_for",
      "Entity-learning_shape_constraint"
    ],
    [
      "Entity-the_next_challenge",
      "Predicate-is",
      "Entity-designing_an_efficient_learning_method"
    ],
    [
      "Entity-shaclearner",
      "Predicate-validate_with",
      "Entity-the_shape_we_learn"
    ],
    [
      "Entity-we_(10)",
      "Predicate-evaluate_via",
      "Entity-formal_human-expert_evaluation"
    ],
    [
      "Entity-we_(10)",
      "Predicate-validate",
      "Entity-the_shape_we_learn"
    ],
    [
      "Entity-we_(10)",
      "Predicate-extend",
      "Entity-the_expressivity_of_the_shape_we_can_discover"
    ],
    [
      "Entity-shaclearner",
      "Predicate-use",
      "Entity-formal_human-expert_evaluation"
    ],
    [
      "Entity-we_also_propose",
      "Predicate-propose_to_redesign",
      "Entity-shaclearner_of_algorithm_1"
    ],
    [
      "Entity-mapreduce_implementation",
      "Predicate-handle",
      "Entity-extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata"
    ],
    [
      "Entity-for_a_mapreduce_implementation",
      "Predicate-handle",
      "Entity-extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata"
    ],
    [
      "Entity-iop_rule",
      "Predicate-augment_the_rules",
      "Entity-rule_quality_measure_iop_standard_confidence__iop_head_coverage__and_cardinality_which_augment_the_rule"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_."
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-can_learn",
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-corresponds",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-derived_from",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-describe",
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_."
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-validate",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-support",
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_."
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-can_be_used_to_express_constraints_on_graph_data_as_shapes_in",
      "Entity-output"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-are_used_to_learn_from_knowledge_graphs_using_the_proposed_algorithm",
      "Entity-output"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-enhance",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-learn_(1)",
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_."
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-validate",
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_."
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-define",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-uses",
      "Entity-open_path_rule_learning_method"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-represent",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-generate",
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_."
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-used_to_support",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-uses",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-relates_to",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-is_closely_related_to",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-supports",
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_."
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-uses",
      "Entity-this_product"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-propose",
      "Entity-this_product"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-propose",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "Predicate-used_as_input_for_generating_IOP_rules",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-can_learn",
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-can_learn",
      "Entity-output"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses_to_express_constraints_on_graph_data_as_shapes_in_SHACL",
      "Entity-output"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-validate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-facilitate",
      "Entity-our_proposed_system"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-provide",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-define",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-use",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-represent",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-validate",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-uses",
      "Entity-our_proposed_system"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-this_product"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-are_learned_by",
      "Entity-this_product"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-propose",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_effectively_learn",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-generate_high-quality",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_effectively_learn",
      "Entity-output"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-validate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-has_at_least_one_IOP_rule",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-represent",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-generate",
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_."
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-uses",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_learn",
      "Entity-this_product"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-propose",
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-introduces",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_learn",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_learn",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-corresponds_to",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-derived_from",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-expresses",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-corresponds_to",
      "Entity-output"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-for_expressing_constraints_on_graph_data_as_shapes",
      "Entity-output"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-can_be_learned_from_knowledge_graphs_using",
      "Entity-output"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-learns",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-validate",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-provide",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-IOP",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-corresponds",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-expresses",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-derive",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-learn",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-correspond_to",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-uses",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-corresponds_to",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-expresses_specific_shapes_in_the_form_of_paths_over_connected_entities_present_in_a_Knowledge_Graph_KG",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-derives_from_an_Inverse_Open_Path_rule",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-corresponds_to",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-derived_from",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-expresses",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-implies_the_existence_of",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-correspond",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-corresponds_to",
      "Entity-this_product"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-derived_from",
      "Entity-this_product"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-expresses",
      "Entity-this_product"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-propose",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-corresponds_to",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-derived_from",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-expresses",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-used_as_input_for",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-validate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-provide",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-define",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-express",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-represent",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-use",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-express",
      "Entity-this_product"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-learn_(1)",
      "Entity-this_product"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-mine",
      "Entity-this_product"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-propose",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-learn",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-derived_from",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-express_constraints_on_graph_data_as",
      "Entity-output"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-validate",
      "Entity-output"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-facilitate",
      "Entity-output"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-provide",
      "Entity-output"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-Inverse_Open_Path_IOP_rule",
      "Entity-output"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-SHACL_shape",
      "Entity-output"
    ],
    [
      "Entity-output",
      "Predicate-represent",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-validate",
      "Entity-output"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-complete",
      "Entity-output"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-generate_SHACL_shapes",
      "Entity-output"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-can_be_learned_from",
      "Entity-output"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-for_expressing_constraints_on_graph_data_as_shapes",
      "Entity-output"
    ],
    [
      "Entity-this_product",
      "Predicate-express_constraints_on_graph_data_as_shapes",
      "Entity-output"
    ],
    [
      "Entity-this_product",
      "Predicate-learn_from_knowledge_graphs_using_SHACLEARNER_algorithm",
      "Entity-output"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-propose",
      "Entity-output"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-learn",
      "Entity-output"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-uses",
      "Entity-output"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-express",
      "Entity-output"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-generate",
      "Entity-output"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-learn",
      "Entity-output"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-mine",
      "Entity-output"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_learn",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-uses",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-enhances",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-can_be_used_to_express_constraints_on_graph_data_as_shapes_in",
      "Entity-output"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-enhances",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-defines",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-is_defined_by",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-uses",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-adapts",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-represents",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-uses",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-uses",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-adapts",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-uses",
      "Entity-this_product"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-learn",
      "Entity-this_product"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-mines",
      "Entity-this_product"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-propose",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-introduces",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-uses",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-address_learning_shacl_shape_from_kg"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_learn",
      "Entity-address_learning_shacl_shape_from_kg"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-corresponds",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-derived_from",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-learn_(1)",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-generate",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-mine",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-uses_to_express_constraints_on_graph_data_as_shapes_in_SHACL",
      "Entity-output"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-uses",
      "Entity-address_learning_shacl_shape_from_kg"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-validate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-provide",
      "Entity-address_learning_shacl_shape_from_kg"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-has_IOP_rule",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-uses",
      "Entity-open_path_rule_learning_method"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-represent",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-use",
      "Entity-address_learning_shacl_shape_from_kg"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-used_in_learning",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-learn",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-mine",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-uses",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-suggest",
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_."
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-learned",
      "Entity-this_product"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-propose",
      "Entity-address_learning_shacl_shape_from_kg"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "Predicate-used_as_input_for_generating_IOP_rules",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-validate",
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_."
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-SHACLEARNER",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-use",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-SHACLEARNER",
      "Entity-this_product"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-propose",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-SHACLEARNER",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-Inverse_Open_Path_IOP_rule",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-open_path_rule_learning_method"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_learn",
      "Entity-open_path_rule_learning_method"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-uses",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-uses_to_express_constraints_on_graph_data_as_shapes_in_SHACL",
      "Entity-output"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-learn_from_knowledge_graphs_using_SHACLEARNER_algorithm",
      "Entity-output"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-validate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-provide",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-defines",
      "Entity-open_path_rule_learning_method"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-is_defined_by",
      "Entity-open_path_rule_learning_method"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-represent",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-uses",
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_."
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-uses",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-uses",
      "Entity-this_product"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-propose",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-introduces",
      "Entity-open_path_rule_learning_method"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-represent",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-validate",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-provide",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-defines",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-is_defined_by",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-uses",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-represents",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-represent",
      "Entity-this_product"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-validate",
      "Entity-this_product"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-propose",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-represent",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_learn",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-corresponds_to",
      "Entity-instantiated_open_path"
    ],
    [
      "Entity-instantiated_open_path",
      "Predicate-derives_from",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-used_in_learning_high-quality_SHACL_shapes",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-express",
      "Entity-output"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-learn",
      "Entity-output"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-uses",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-validate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-provide",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-defines",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-uses",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-is_used_for",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-represent",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-uses",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-present_specific_shapes_in_the_form_of_paths_over_connected_entities",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-used_in_learning_high-quality_SHACL_shapes_from_knowledge_graphs",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-suggest",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-learn_high-quality_SHACL_shapes",
      "Entity-this_product"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-propose",
      "Entity-annotated_iop_rule_(1)"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "Predicate-used_in_learning_high-quality_SHACL_shapes_from_knowledge_graphs",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-uses",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg",
      "Predicate-can_learn",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-correspond",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-express",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-present",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-learn",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-express",
      "Entity-output"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-learn",
      "Entity-output"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-uses",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "Predicate-enhances",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-validate",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-provide",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-predict_instances",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-define_formal_quality_measures",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-learn",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-represent",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-right-hand_tree",
      "Predicate-learns_from",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-use",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-uses",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-propose",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-suggests",
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_."
    ],
    [
      "Entity-this_product",
      "Predicate-learns_from",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-propose",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-introduces",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-used",
      "Entity-inverse_open_path__iop__rule"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-input",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "Predicate-generated_from",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-uses",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-validate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-provide",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-defines",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "Predicate-is_defined_by",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-uses",
      "Entity-shacl_learning_method"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-uses",
      "Entity-this_product"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-learn",
      "Entity-this_product"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-proposes",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-shacl_learning_method",
      "Predicate-generates",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-uses",
      "Entity-our_proposed_system"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-can_learn",
      "Entity-our_shaclearner_can_effectively_learn_informative_and_intuitive_shape_from_massive_kg"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "Predicate-suggest",
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_."
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-validate",
      "Entity-shacl_shape_from_kg"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-express",
      "Entity-output"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-represent",
      "Entity-output"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-uses",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-enhances",
      "Entity-open_path_rule_learner__oprl_"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-express_constraints_on",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-validate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-SHACL_shapes",
      "Entity-the_number_of_tree_for_each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "Predicate-suggests",
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_."
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-represents",
      "Entity-right-hand_tree"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-uses",
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_."
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-uses",
      "Entity-this_product"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-propose",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-suggests",
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_."
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-suggests",
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_."
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "Predicate-uses",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-this_product",
      "Predicate-validate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-facilitate",
      "Entity-this_product"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-provide",
      "Entity-this_product"
    ],
    [
      "Entity-this_product",
      "Predicate-use",
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_."
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-validate",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-facilitate",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-provide",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-uses",
      "Entity-this_paper_(1)"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-expresses",
      "Entity-this_product"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-describes",
      "Entity-this_product"
    ],
    [
      "Entity-to_offer_insight_into_kg_structure",
      "Predicate-validate",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-facilitate",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-provide",
      "Entity-to_offer_insight_into_kg_structure"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "Predicate-generate_SHACL_shapes",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-this_product",
      "Predicate-express_constraints_on",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "Predicate-generate_IOP_rules_for",
      "Entity-this_product"
    ],
    [
      "Entity-this_product",
      "Predicate-learn_SHACL_shapes_from",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-propose",
      "Entity-the_sampled_kg_(1)"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-learn",
      "Entity-the_sampled_kg_(1)"
    ]
  ],
  "triples_typing": [
    [
      "Entity-it_constituent_iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-minimum_quality_threshold",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-human__z2__z2_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-one_proposal_suggests_an_extended_validation_framework_for_the_interaction_between_inference_rule_and_shacl_shape_in_kg_.",
      "skos:broader",
      "Entity-proposal"
    ],
    [
      "Entity-define_schema_information_for_kg_stored_a_an_rdf_graph",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-basic_shacl"
    ],
    [
      "Entity-body_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-yago2s",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-method_to_aggregate_iop_rule_to_produce_tree_shape",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-then_standard_confidence",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-quality_rule",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-the_sampled_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-shacl_learning_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner",
      "skos:broader",
      "Entity-shaclearner"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-standard_shacl_shape",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-rule_to_express_not_only_the_necessity_of_a_chain_of_fact__the_fact_in_the_head_of_the_iop_rule_",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-which_have_at_least_one_hundred_fact",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-e_is_an_identifier_for_an_object_such_a_a_place_or_a_person_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-iop_rule_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_head_of_the_rule_(1)",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-the_validity_of_iop_rule_in_a_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-pt__x__z0__(1)",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-that_can_be_augmented_with_minimum_cardinality_constraint_and_also_used_a_a_building_block_for_more_complex_shape__such_a_tree_and_other_rule_pattern_.",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-variant",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-a_kg_(1)",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-pt__x__y___p1__y__z___p2__z__t_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-sampling__shown_in_algorithm_2",
      "skos:broader",
      "Entity-sampling"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rule_quality",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-poker_hand",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-embeddings___we_additionally_compute_argument_embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-our_shape_describe_conjunctive_path_of_constraint_over_property__enhanced_with_minimum_cardinality_constraint",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-a_reduced_set_of_candidate_iop_rule",
      "skos:broader",
      "Entity-candidate_rule"
    ],
    [
      "Entity-sampling_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-quantifier"
    ],
    [
      "Entity-exists__z1__...__z__n-1___y_",
      "skos:broader",
      "Entity-quantifier"
    ],
    [
      "Entity-capitalof",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_predicate_involved_in_each_rule",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-let_k___e__f__with_e___e1__...__en_",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-a_good_learning_algorithm",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-with_higher_confidence_in_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-definition_6",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-the_example",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-the_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_shape_are_diverse_in_structural_feature_such_a_depth_and_width__and_also_in_quality_measure_that_indicate_confidence_and_generality",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-sample",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-and_head_coverage",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-many_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-confidence_widely_used_in_association_rule_mining",
      "skos:broader",
      "Entity-rule_quality_measure"
    ],
    [
      "Entity-straight_form",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-pruning_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-_e___e__satisfies_the_head_of_r",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-e5",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-the_cardinality",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-human__z2__z2_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-in_other_word__the_cardinality_express_a_lower_bound_on_the_number_of_head_path_that_are_satisfied_in_the_kg_for_every_instantiation_linking_the_body_to_the_head",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-rule_learner_to_the_maximum_length_of_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-large_kg_have_no_available_shape_constraint",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-for_the_subject_argument_and_the_object_argument_of_each_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-definition_5",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-rule_language",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-existing_ontology",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-genre"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-iop_rule_in_greedysearch",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-iop"
    ],
    [
      "Entity-then_a_set_of_pair_of_entity__e__e1___...___e__eq__satisfies_the_head_of_r__denoted_headr__e__",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-ev_to_produce_annotated_iop_rule",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.",
      "skos:broader",
      "Entity-original_input_kg"
    ],
    [
      "Entity-graph_structure_learner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-massive_kg"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-entity_that_satisfy_the_second_argument_of_the_body",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-variant",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-pt__e__e__",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-r_be_an_op_rule_of_the_given_form_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-number_of_quality_rule_mined",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-the_proportion_of_mined_rule_having_the_various_feature_value_is_presented",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-quality_measurement"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-section_6",
      "skos:broader",
      "Entity-this_section"
    ],
    [
      "Entity-entity",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-zi",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_two_type-like_predicate_from_dbpedia_3.8_and_the_one_from_wikidata",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-capitalof",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-sampled_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_sequence_of_predicate_p1__p2__...__pn",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_shape_(3)",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-the_body_and_the_head_are_both_satisfied_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-sequence_of_entity",
      "skos:broader",
      "Entity-sequence"
    ],
    [
      "Entity-and_head_coverage",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-and_human__x__x__-__nativelanguage__x__z3___language__z3__z3_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-our_shaclearner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-distinct_e_s_by_summing_each_row_of_this_product_to_obtain_the_vector_v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-presentation",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-mintreesc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-path",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-scoring_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_system_without_sampling__but_with_the_heuristic_rule_learning_module",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-for__2_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-each_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-classic_version",
      "skos:broader",
      "Entity-related_work"
    ],
    [
      "Entity-kg_k_",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-sh"
    ],
    [
      "Entity-embedding_learner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-shaclearner_of_algorithm_1",
      "skos:broader",
      "Entity-shaclearner"
    ],
    [
      "Entity-the_cardinality",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_unary_predicate_human_in_fig_._2",
      "skos:broader",
      "Entity-unary_predicate_(2)"
    ],
    [
      "Entity-left-hand_chart",
      "skos:broader",
      "Entity-the_figure"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-livesin__mary__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-wikidata_with_8_million_fact",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-x_should_belong_to_an_album_that_ha_y_a_record_label",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-define_schema_information_for_kg_stored_a_an_rdf_graph",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-the_embedding",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-rule_with_cardinality_car",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-ontology_constraint_pattern",
      "skos:broader",
      "Entity-input_ontology"
    ],
    [
      "Entity-we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-sampling___method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-inverse_open_path_rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-pi",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-shacl_semantics"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-rule_and_constraint"
    ],
    [
      "Entity-from_definition_4__iophc__r1___22_and_iopsc__r1___22",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-consisting_of_a_bounded_number_of_entity",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-a_song_to_have_at_least_two_producer",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_subject_and_object_binding_swapped__and_free_variable_are_universally_quantified_at_the_outside_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-shape_could__in_principle__be_inferred_from_kg_data",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-all_predicate_in_the_sampled_k_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-the_class_and_type_information_a_unary_predicate"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-pruning_variant",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-quality_iop_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-then_r",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-learnt_iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-in_order_to_discover_more_complex_shape__that_is__tree_.",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-a_more_complex_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-the_formalism_of_iop_rule",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-correspond_to_shacl_shape"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-the_number_of_missing_rule_increasing_a_quality_decrease",
      "skos:broader",
      "Entity-phenomenon"
    ],
    [
      "Entity-the_shape_we_learn",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-an_embedding_learner",
      "skos:broader",
      "Entity-subject_and_object_argument_embeddings"
    ],
    [
      "Entity-p__i",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-op_rule_are_used_since_they_imply_the_existence_of_a_fact__like_spouse__x__y___z_child__x__z_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-ideal_learner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-inference_process_on_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-path",
      "skos:broader",
      "Entity-sequence"
    ],
    [
      "Entity-using_rule",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-our_experiment_are_designed_to_prove_the_effectiveness_of_our_shaclearner_at_capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-work"
    ],
    [
      "Entity-schema_constraint",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-this_result",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-the_method_for_aggregating_iop_rule_into_tree",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-future_work",
      "skos:broader",
      "Entity-strategy"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-our_unary_predicate_and_fact",
      "skos:broader",
      "Entity-the_class_and_type_information_a_unary_predicate"
    ],
    [
      "Entity-learned_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_logical_statement_of_the_rule",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-pruning_technique",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-it_doe_not_perform_any_kind_of_data_type_validation",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-kg_can_then_be_validated_against_a_set_of_shape",
      "skos:broader",
      "Entity-data_type_validation"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_subject_and_object_binding_swapped__and_free_variable_are_universally_quantified_at_the_outside_.",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-car_indicates_a_satisfying_e",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-pathfinding__",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-based_on_the_new_predicate_and_related_fact",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-in_embeddings",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-future_work",
      "skos:broader",
      "Entity-work"
    ],
    [
      "Entity-_e__e1_",
      "skos:broader",
      "Entity-a_pair_of_entity"
    ],
    [
      "Entity-the_efficient_matrix-computation",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-these_measure",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-these_two_pruning_method",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-iop_rule_of_the_form__3_",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-the_sampling_method__first_introduced",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-p2_1",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-candidate_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-out_of_thirty-five_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-pruning_variant",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-iop_rule_of_the_form__3_",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-such_a_fullhouse__x__where_x_is_a_specific_poker_hand",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-a_pair_of_entity__e__e___satisfies",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-x",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-entity_e_i",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-rescal__in_embeddings",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-s",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-all_fact_related_to_them",
      "skos:broader",
      "Entity-fact_related_to_them"
    ],
    [
      "Entity-average_treesc_for_each_kg__along_with_the_average_number_of_branch_in_the_tree_and_the_average_tree-building_runtime",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-the_computed_embedding_representation_of_predicate_and_entity",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-p__i",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-the_embedding_representation",
      "skos:broader",
      "Entity-subject_and_object_argument_embeddings"
    ],
    [
      "Entity-learning_path",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-variable",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-using_rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-standard_confidence",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-pt__x__z0_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-correspond_to_shacl_shape"
    ],
    [
      "Entity-trump",
      "skos:broader",
      "Entity-person"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-breadth-first_manner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-an_annotated_iop_rule_of_the_form__4_",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-l",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_method_for_aggregating_iop_rule_into_tree",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_cp_rule_of_the_form__1_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-tree",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-dealing_with_uncertainty_in_the_constraint_and_the_learning_process",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-a_common_representation_for_this_work",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iop_rule_express_simple_shape_pattern",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-pt__x__z0__(1)",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-tree_and_other_rule_pattern",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-an_annotated_iop_rule_of_the_form__4_",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-rule_found",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-shacl_language"
    ],
    [
      "Entity-the_quantifier",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-pt__x__y___p1__y__z___p2__z__t_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_logical_statement_of_the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-pathfinding__",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-mined_rule_with_respect_to_their_length",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_efficient_matrix-computation",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-completion_strategy",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-these_measure",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-treescnew",
      "skos:broader",
      "Entity-confidence"
    ],
    [
      "Entity-to_demonstrate",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_sampling_method__first_introduced",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_body_of_the_rule_is_pt__and_it_head_is_the_sequence_of_predicate_p1__p2__...__pn",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-predicate_where_the_second_argument_of_these_predicate_are_type_or_class",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-the_vector_v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-uncertainty",
      "skos:broader",
      "Entity-phenomenon"
    ],
    [
      "Entity-the_predicate_involved_in_each_rule",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-path_of_head_predicate",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-open_path_rule_learner_oprl",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-for_example_(3)",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-using_the_complete_kg_for_learning_rule_about_all_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-property_shape",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-knowledge_panel",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-node_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-our_shape_describe_conjunctive_path_of_constraint_over_property__enhanced_with_minimum_cardinality_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-rule_to_express_not_only_the_necessity_of_a_chain_of_fact__the_fact_in_the_head_of_the_iop_rule_",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-a_cp_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-class_and_type_are_named_unary_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-r_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-such_path_shape",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-nativelanguage__x__z3_",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-an_identifier_for_an_object_such_a_a_place_or_a_person",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-an_iop_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-variable",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-all_entity_in_the_sampled_kg_are_either_directly_related_to_the_target_predicate_or_close_neighbour_of_directly_related_entity_.",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-predicate_of_the_head",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-the_same_head_and_the_same_body",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-name__birth_date__and_place_of_birth",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-max_rule_length_l",
      "skos:broader",
      "Entity-length"
    ],
    [
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd",
      "skos:broader",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-type_predicate"
    ],
    [
      "Entity-the_computation_of_iopsc_and_iophc",
      "skos:broader",
      "Entity-iopsc"
    ],
    [
      "Entity-we_define_formal_quality_measure_for_iop_rule",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-they_(2)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-e3",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-after_sampling",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-mined_rule_with_respect_to_their_length",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-the_distribution_(2)",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-pt__x__y___p1__y__z___p2__z__t_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-pt__e__e__",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-an_adjacency_matrix_representation_of_the_kg",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_quantifier",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-consisting_of_a_bounded_number_of_entity",
      "skos:broader",
      "Entity-number"
    ],
    [
      "Entity-the_embedding",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-_3__we_propose_an_efficient_method_to_evaluate_iop_rule_and_tree_by_exactly_computing_the_quality_measure_of_each_rule_using_fast_matrix_and_vector_operation_.",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity--sh",
      "skos:broader",
      "Entity-pruning_technique"
    ],
    [
      "Entity-shaclearner__shown_in_algorithm_1",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-mined_rule_with_respect_to_their_length",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_sequence_of_predicate_(1)",
      "skos:broader",
      "Entity-sequence"
    ],
    [
      "Entity-the_whole_path",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-to_demonstrate",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-ei__ej",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-the_number_of_distinct_instantiation_of_head_r__e__e___is_at_least_car__r_",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-the_two_type-like_predicate_from_dbpedia_3.8_and_the_one_from_wikidata",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_closed_path_form",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-shacl_language"
    ],
    [
      "Entity-our_shape_learning_system",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-ideal_rule_learner",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-the_sequence_of_predicate_p1__p2__...__pn",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-car1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-threshold_established_in_comparative_work",
      "skos:broader",
      "Entity-work"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-method",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-pruning_technique",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-definition_3",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-for_the_subject_argument_and_the_object_argument_of_each_target_predicate",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-definition_4",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-our_pruning_technique",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_song_ha_at_least_2_producer",
      "skos:broader",
      "Entity-producer"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-sh"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-this_may_be_because_using_the_complete_kg_for_learning_rule_about_all_target_predicate_could_harm_the_quality_of_the_learnt_embeddings_used_in_the_scoring_function_of_shaclearner_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-add_pathfinding__k___pt__p__a__k_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-description_logic_ontology",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-human__z2_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-each_human_ha_at_least_two_parent",
      "skos:broader",
      "Entity-human"
    ],
    [
      "Entity-these_uncertain_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-relative_to_the_first_row",
      "skos:broader",
      "Entity-row"
    ],
    [
      "Entity-the_first_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-sampling__shown_in_algorithm_2",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-kg_data",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-entity_with_only_a_type_or_class_declaration",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-a_greedy_search",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-for_iopsc_and_iophc",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-this_depth-first_questioning_strategy",
      "skos:broader",
      "Entity-strategy"
    ],
    [
      "Entity-the_largest_proportion_of_rule_ha_a_cardinality_of_1",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-open_path_standard_confidence__opsc_",
      "skos:broader",
      "Entity-confidence"
    ],
    [
      "Entity-shaclearner_of_algorithm_1",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-denoted_pt__e___e___if_pt__e___e__is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_computed_embedding_representation_of_predicate_and_entity",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-sh__nodeshape",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-an_editor_called_schimatos_for_manual_knowledge_graph_completion",
      "skos:broader",
      "Entity-schimatos"
    ],
    [
      "Entity-_3__we_propose_an_efficient_method_to_evaluate_iop_rule_and_tree_by_exactly_computing_the_quality_measure_of_each_rule_using_fast_matrix_and_vector_operation_.",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-ontology_constraint_pattern",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-we_may_need_a_rule_to_express_that_each_human_ha_at_least_two_parent",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-sh__property",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-to_entity_forming_the_object_argument_of_the_last_predicate__p2",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-rule_of_low_quality",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-cover",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-entity_instance_of_a_binary_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-these_unary_occupation_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-entity_a_shown_in_previous_heuristic_rule_learner",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-closed-path_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-an_example_of_a_shape_from_wikidata",
      "skos:broader",
      "Entity-wikidata"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-a_common_representation_for_this_work",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-type",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-rule_with_respect_to_the_feature__iopsc__iophc__cardinality_and_length__and_also_iopsc_v_length",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-embedding_learner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_goal_of_pruning_is_to_improve_the_computational_performance_without_missing_high-quality_rule",
      "skos:broader",
      "Entity-pruning_method"
    ],
    [
      "Entity-a_fragment_of_a_39-branched_tree_mined_from_dbpedia_by_aggregating_iop_rule_in_the_experiment",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-a_kg_context"
    ],
    [
      "Entity-unary_predicate",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-functional_graph_dependency__fgd_",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-unary_predicate_of_the_form_p__e_",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-predicate_logic_formalism"
    ],
    [
      "Entity-the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-rdf_database",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-the_number_of_rule_would_increase_since_the_space_of_possible_rule_grows__and_this_is_what_we_see_.",
      "skos:broader",
      "Entity-to_find"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_maximum_number_of_predicate_of_the_rule",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-instantiated_open_path",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-tree_that_can_be_generated_by_shaclearner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-the_method_that_is_used_to_build_a_kg",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-additional_constraint",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-to_demonstrate_the_potential_for_these_kind_of_shape_to_serve_a_building_block_for_more_complex_tree__we_then_propose_a_method_that_build_tree_out_of_mined_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-shacl"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-real-world_massive_knowledge_graph__kg_"
    ],
    [
      "Entity-treescnew",
      "skos:broader",
      "Entity-novel_numerical_confidence_measure"
    ],
    [
      "Entity-our_shaclearner_based_on_algorithm_1",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-a_song_ha_at_least_2_producer",
      "skos:broader",
      "Entity-song"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-each_poker_hand",
      "skos:broader",
      "Entity-poker_hand"
    ],
    [
      "Entity-open_path_rule_learner_oprl",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_space_of_possible_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-the_shacl_core_feature__node_and_property_shape_",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-we_could_have_three_version_of_r__namely_r1__r2__and_r3",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-we_report",
      "skos:broader",
      "Entity-paper_(1)"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-the_general_form_of_an_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-paper_(1)"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-sh"
    ],
    [
      "Entity-we_define_formal_quality_measure_for_iop_rule",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-if_all_variable_of_a_rule_are_closed_then_the_rule_is_closed",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-self-loops",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-an_embedding_learner",
      "skos:broader",
      "Entity-predicate_embeddings"
    ],
    [
      "Entity-each_non-zero_element_indicates_a_satisfying_e",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-they_(3)",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-a_song_ha_at_least_2_producer",
      "skos:broader",
      "Entity-an_entity_x_is_a_song"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-original_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_converse_of_op_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-the_shape_constraint_language__shacl_"
    ],
    [
      "Entity-type_predicate",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-out_of_thirty-five_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_unary_predicate_human_in_fig_._2",
      "skos:broader",
      "Entity-unary_predicate"
    ],
    [
      "Entity-birthplace",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-denoted_pt__e___e___if_pt__e___e__is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-certain_property_in_the_embedding_space",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-we_choose_to_model_type_and_class_with_unary_predicate",
      "skos:broader",
      "Entity-unary_predicate_(1)"
    ],
    [
      "Entity-procedural_method_without_logical_foundation",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_running_time_for_aggregating_iop_rule_into_tree_is_lower_than_the_initial_iop_mining_time_by_a_factor_greater_than_10",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-entity",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-unary_predicate_a_target",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-we_obtain_a_simpler_tree",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-shacl__the_shape_constraint_language"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-an_adjacency_matrix_representation_of_the_kg"
    ],
    [
      "Entity-the_following_three_iop_rule_mined_from_dbpedia_in_the_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-citizenof__x__z1_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-cover",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-treesc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-by_aggregating_mined_iop_rule_in_greedysearch",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-sampling__k__pt_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-their_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-x_and_z_i_are_variable_that_are_instantiated_by_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-genre",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-the_iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-in_comparison_with_the_ideal_rule_learner__shaclearner__-s-h__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_small_poker_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-unary_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-an_entity-free_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_label_of_a_link_in_the_graph",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-entity_with_only_a_type_or_class_declaration",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-prior_sampling",
      "skos:broader",
      "Entity-sampling___method"
    ],
    [
      "Entity-if_all_variable_of_a_rule_are_closed_then_the_rule_is_closed",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-each_argument_of_each_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-feature",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-such_path_shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-head_of_the_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1__",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-semi-automatic_manner__it_provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-such_a_fullhouse__x__where_x_is_a_specific_poker_hand",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-p_k",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-to_compute",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-these_kind_of_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-object_argument",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-the_sample",
      "skos:broader",
      "Entity-sample"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-_e___e__satisfies_the_head_of_r",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-they_(3)",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_sampling___method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-for_iopsc",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-using_the_complete_kg_for_learning_rule_about_all_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-inverse_open_path_support",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-146_rule_with_iopsc_in_range_of__0.1__0.3___17_or_10__fewer_rule_than_the_ideal_learner",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-original_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-the_count_is_1",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-mary",
      "skos:broader",
      "Entity-person"
    ],
    [
      "Entity-the_effectiveness_of_our_shaclearner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-a_frequent_pattern__the_shape_characterize_a_kg_and_can_be_used_for_subsequent_data_cleaning_or_ongoing_data_entry",
      "skos:broader",
      "Entity-type"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-using_the_complete_kg_for_learning_rule_about_all_target_predicate",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-open_path_standard_confidence__opsc_",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-shape_learning_system",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-line_8_of_algorithm_1",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-schema_information"
    ],
    [
      "Entity-for_each_predicate_p_k",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-class_and_type_are_named_unary_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-hc_measure",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-a_sequence_of_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_quantifier",
      "skos:broader",
      "Entity-quantifier"
    ],
    [
      "Entity-their_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-australia",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-a_kg_context"
    ],
    [
      "Entity-and_human__x__x__-__nativelanguage__x__z3___language__z3__z3_",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-breadth-first_manner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-human-kg-completion",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-this_feature",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-node_shape",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-the_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-ev",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-for_example_(3)",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-sampling__shown_in_algorithm_2",
      "skos:broader",
      "Entity-sampling___method"
    ],
    [
      "Entity-_a__pk___k_in_1_.._m_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-scoring_function_heuristic_for_op_rule",
      "skos:broader",
      "Entity-scoring_function"
    ],
    [
      "Entity-for_a_kg_k_with_entity_e_and_fact_f",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-our_novel_tree_shape",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-let_k___e__f__with_e___e1__...__en_",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-feature",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-all_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-yago2s",
      "skos:broader",
      "Entity-benchmark"
    ],
    [
      "Entity-such_path_shape",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-head_of_the_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_method_for_aggregating_iop_rule_into_tree",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-quantifier",
      "skos:broader",
      "Entity-predicate_term"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-rule_learner"
    ],
    [
      "Entity-these_kind_of_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-learning_path",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-_iopsc_is_non-increasing_with_length_",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-person_even_though_there_is_no_explicit_person_type_in_our_kg",
      "skos:broader",
      "Entity-type"
    ],
    [
      "Entity-iop_rule_that_are_learnt_by_ideal__modified_shaclearner__-s-h__with_no_pruning",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-z_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-type",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_intended_data-first_approach_of_kg_application",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-that_build_tree_out_of_mined_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_sampling___method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_performance_of_the_shaclearner__-sh_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-definition_2",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-the_row_index_of_element_with_value___car_of_v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-p2"
    ],
    [
      "Entity-each_tree_we_employ_a_greedy_search__greedysearch",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_experiment_(1)",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-exploratory_attempt",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-yago__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-benchmark_kg"
    ],
    [
      "Entity-it_(2)",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_support_for_an_iop_rule",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-dealing_with_uncertainty_in_the_constraint_and_the_learning_process_add_an_extra_dimension_of_challenge_but_also_add_utility",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rule_to_express_not_only_the_necessity_of_a_chain_of_fact__the_fact_in_the_head_of_the_iop_rule_",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-the_unary_predicate_human_in_fig_._2",
      "skos:broader",
      "Entity-unary_predicate_(1)"
    ],
    [
      "Entity-shape_constraint_language",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-a_variable_closed",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-the_count_of_e_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-ev__",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-all_28_unary_predicate_a_the_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-iopsc_is_non-increasing_with_length",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-hc_measure",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_other_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-with_entity_e_and_fact_f",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-then_a_set_of_pair_of_entity__e__e1___...___e__eq__satisfies_the_head_of_r__denoted_headr__e__",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-human__z2_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-the_body_and_the_head_are_both_satisfied_in_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-a_bounded_number_of_entity_that_are_related_to_the_target_predicate_pt",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-it_converse_iop_version",
      "skos:broader",
      "Entity-iop"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-sc",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-prior_sampling",
      "skos:broader",
      "Entity-pruning_method"
    ],
    [
      "Entity-define_schema_information_for_kg_stored_a_an_rdf_graph",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-search_space",
      "skos:broader",
      "Entity-domain"
    ],
    [
      "Entity-pt_(1)",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-predicting_missing_fact",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-the_formalism_of_iop_rule",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-the_largest_proportion_of_rule_ha_a_cardinality_of_1",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-an_entity_which_ha_song_a_it_type",
      "skos:broader",
      "Entity-a_song__x_"
    ],
    [
      "Entity-x",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-wikidata_with_8_million_fact",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-hole_and_rescal",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-instantiated_open_path",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-an_adjacency_matrix_representation_of_the_kg",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-iop"
    ],
    [
      "Entity-for_example_(2)",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-shaclearner__shown_in_algorithm_1",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-automatic_and_semi-automatic_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-path2",
      "skos:broader",
      "Entity-branch"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-the_embedding"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-type",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-kg_documentation",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-an_entity_which_ha_song_a_it_type",
      "skos:broader",
      "Entity-type"
    ],
    [
      "Entity-to_learn_(1)",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-every_entity-instantiation_of_a_cp_rule_is_also_an_entity-instantiation_of_the_related_op_rule__but_not_vice_versa",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-an_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-at_least_44__of_iop_rule_are_pruned",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-these_unary_occupation_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-sampling___method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-it_(2)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule",
      "skos:broader",
      "Entity-op"
    ],
    [
      "Entity-r_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-detect_which_shape_could_be_violated_by_applying_a_rule",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_sequence_of_path_or_branch__path1__path2__...__pathq",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-data-first_approach",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-e5",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-song",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-kg_automatically_by_predicting_missing_fact",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-algorithm_2",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-it_advanced_feature",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-recursive_shacl_shape"
    ],
    [
      "Entity-entity_e_i",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-certain_property_in_the_embedding_space",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-headr__e_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-to_handle_extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_other_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-sc",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-p1__z0__x_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-occupation_such_a_singer_or_entrepreneur",
      "skos:broader",
      "Entity-entrepreneur"
    ],
    [
      "Entity-massive_kg_(1)",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-max",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-massive_kg"
    ],
    [
      "Entity-this_(1)",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-_e1__e2__e3__e4__e5_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_effectiveness_of_our_shaclearner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rule-learning_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-hole_and_rescal",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-instantiated_open_path",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-p_k",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-these_predicate_each_have_a_class_a_their_second_argument",
      "skos:broader",
      "Entity-type_predicate"
    ],
    [
      "Entity-several_shape_each_for_various_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-path_of_shape_predicate",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-the_row_index_of_element_with_value___car_of_v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-car"
    ],
    [
      "Entity-human__x_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-predicate_argument",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rdf_triple",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-efficient_and_interpretable_human_validation_in_a_depth-first_manner",
      "skos:broader",
      "Entity-data_type_validation"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-correspond_to_shacl_shape"
    ],
    [
      "Entity-language__z3__z3_",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-iop_rule_discovered_in_the_experiment",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-more_complex_shape__tree_",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-p_k",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-citizenof__x__z1_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-the_embedding"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-detect_which_shape_could_be_violated_by_applying_a_rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-suppr",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-z0",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-the_related_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-capitalof",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-dbpedia_contains_predicate_where_the_second_argument_of_these_predicate_are_type_or_class",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-iop_rule_in_greedysearch",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-potential_rule_in_the_search_space",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_full_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-the_head_of_r",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-unary_predicate_that_can_act_a_class_or_type_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-confidence_widely_used_in_association_rule_mining",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-predicate_and_entity_(2)",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-singer",
      "skos:broader",
      "Entity-occupation"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-learning_path",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-definition_4",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-non-zero_element_of_v2__pt_",
      "skos:broader",
      "Entity-pt"
    ],
    [
      "Entity-an_entity_x_is_a_song",
      "skos:broader",
      "Entity-a_song__x_"
    ],
    [
      "Entity-that_can_be_augmented_with_minimum_cardinality_constraint_and_also_used_a_a_building_block_for_more_complex_shape__such_a_tree_and_other_rule_pattern_.",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-iop_rule_that_are_learnt_by_ideal__modified_shaclearner__-s-h__with_no_pruning",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-embeddings__",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-a_large_number_of_redundant_and_low_quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-we_could_have_three_version_of_r__namely_r1__r2__and_r3",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-quality_iop_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-our_experiment_are_designed_to_prove_the_effectiveness_of_our_shaclearner_at_capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_",
      "skos:broader",
      "Entity-this_experiment"
    ],
    [
      "Entity-a__pt_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-using_self-loop_link",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-fact",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_support_for_an_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-this_phenomenon",
      "skos:broader",
      "Entity-phenomenon"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-max_rule_length_l",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-the_largest_proportion_of_rule_ha_a_cardinality_of_1",
      "skos:broader",
      "Entity-proportion"
    ],
    [
      "Entity-_open_path__opsupp__opsc__ophc_",
      "skos:broader",
      "Entity-opsc"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-z1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-it_binary_predicate_a_target",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-each_binary_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-predicate_argument",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_support_for_an_iop_rule",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-all_entity_in_the_sampled_kg_are_either_directly_related_to_the_target_predicate_or_close_neighbour_of_directly_related_entity_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-massive_kg",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-for_an_example_of_tree_shape_learning",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-the_body_of_the_rule_is_pt__and_it_head_is_the_sequence_of_predicate_p1__p2__...__pn",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-closed-path_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-record_label"
    ],
    [
      "Entity-massive_kg_(2)",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-consider_the_iop_rule_r__pt__x__z0__-__p1__z0__x___p2__z1__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-corresponding_opsc",
      "skos:broader",
      "Entity-opsc"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-of_cardinality_expression__only_min_cardinality_is_handled",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-op_rule_are_used_since_they_imply_the_existence_of_a_fact__like_spouse__x__y___z_child__x__z_",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-to_do_so",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_number_of_potential_rule_in_the_search_space_grows_exponentially_with_the_maximum_number_of_predicate_of_the_rule",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-ei__ej",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-dbpedia_contains_predicate_where_the_second_argument_of_these_predicate_are_type_or_class",
      "skos:broader",
      "Entity-type"
    ],
    [
      "Entity-for_each_predicate_p_k",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_tree_that_are_built_based_on_the_iop_rule_discovered_in_the_experiment",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-a",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-a_sequence_of_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_fact_pk__ei__ej_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-_pt_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-define_schema_information_for_kg_stored_a_an_rdf_graph",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-shacl"
    ],
    [
      "Entity-the_class_and_type_information_a_unary_predicate",
      "skos:broader",
      "Entity-unary_predicate_(2)"
    ],
    [
      "Entity-the_number_of_rule__the_average_number_of_quality_iop_rule_found__the_proportion_of_target_predicate_for_which_at_least_one_iop_rule_wa_found__and_the_running_time_in_hour__averaged_over_the_target_.",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-pop_star",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-esample",
      "skos:broader",
      "Entity-sample"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-an_editor_called_schimatos_for_manual_knowledge_graph_completion",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-our_deliberate_selection_of_type-like_unary_predicate_a_target_for_dbpedia_and_wikidata",
      "skos:broader",
      "Entity-wikidata"
    ],
    [
      "Entity-dbpedia",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-rule_and_constraint",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_converse_of_op_rule",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-iop_rule_of_the_form__3_",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-yago2s",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-definition_4",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-shacl_language"
    ],
    [
      "Entity-head",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-unary_occupation_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_sampled_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_path",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-they_are_a_more_general_template_for_more_complex_shape_like_closed_rule_or_tree__which_are_also_path__with_further_restriction__.",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-logical_formalism"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-e_s",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-fact",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-every_high-quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-a_kg_(1)",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-computer_scientist",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-treescnew",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-many_case",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-real-world_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_rule_is_true",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-to_do_so",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-cardinality_of_an_iop_rule__car",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-many_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-they_are_typically_incomplete",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-the_rule_citizenof__x__y___-_livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-all_28_unary_predicate_a_the_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-v2__pt_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-language__z3__z3_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-place_of_birth",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_reduced_set_of_candidate_iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-a_bounded_number_of_entity_that_are_related_to_the_target_predicate_pt",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-more_rule_of_lower_quality",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_fact__also_known_a_a_link_",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-shape_constraint",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-ev",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-with_three_different_car_value_1__2__and_3_respectively",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-closed_path_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-information",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-using_rule_found_in_the_experiment",
      "skos:broader",
      "Entity-this_experiment"
    ],
    [
      "Entity-one_approach",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-suit",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-scalable_to_handle_real-world_kg",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-dbpedia",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-shacl_advanced_feature",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-entity_with_only_a_type_or_class_declaration",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-entity_that_satisfy_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_predicate_p1__p2__and_pt",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-pathfinding_of_algorithm_1",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-correspond_to_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_(2)"
    ],
    [
      "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.",
      "skos:broader",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-occupation_such_a_singer_or_entrepreneur",
      "skos:broader",
      "Entity-singer"
    ],
    [
      "Entity-shaclearner_with_regard_to_the_quality_and_quantity_of_learnt_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-subject_and_object_argument_embeddings",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-they_are_a_more_general_template_for_more_complex_shape_like_closed_rule_or_tree__which_are_also_path__with_further_restriction__.",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule",
      "skos:broader",
      "Entity-tree_shape"
    ],
    [
      "Entity-the_number_of_distinct_e_s_is_the_count_of_non-zero_element",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-sh__mincount_within_the_property_declaration",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-learning",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-target_predicate_pt",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-definition_3",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iopsc_greater_than_or_equal_to_0.1_and_iophc_greater_than_or_equal_to_0.01__threshold_established_in_comparative_work",
      "skos:broader",
      "Entity-benchmark"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-definition_4",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-these_two_pruning_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-z1",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_shape_are_diverse_in_structural_feature_such_a_depth_and_width__and_also_in_quality_measure_that_indicate_confidence_and_generality",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-all_possible_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-basic_shacl"
    ],
    [
      "Entity-variable",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-livesin__mary__canberra_",
      "skos:broader",
      "Entity-name__birth_date__and_place_of_birth"
    ],
    [
      "Entity-tree_shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-p1__y__z_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-closed_rule__cr_",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-tree",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-p0__e1__e2_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-they_can_also_be_used_more_traditionally_to_complete_missing_fact_for_a_target_predicate__a_well_a_other_predicate_related_to_the_target",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_left-hand_tree_in_fig_._3",
      "skos:broader",
      "Entity-the_figure"
    ],
    [
      "Entity-all_possible_iop_rule",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-greedysearch",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-with_higher_confidence_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-head",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-for_example_(2)",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-real-world_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-more_complex_shape__tree_",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-closed_path_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-headr__e_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-subject_and_object_argument_embeddings"
    ],
    [
      "Entity-our_shaclearner_based_on_algorithm_1",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-for_a_kg_k",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_sequence_of_path_or_branch__path1__path2__...__pathq",
      "skos:broader",
      "Entity-sequence"
    ],
    [
      "Entity-variable",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-unary_predicate_(1)",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-designing_an_efficient_learning_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-their_method_for_comparison_purpose",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-entity_with_only_a_type_or_class_declaration",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-person",
      "skos:broader",
      "Entity-human"
    ],
    [
      "Entity-a_sequence_of_predicate",
      "skos:broader",
      "Entity-sequence"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-variable",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-p_k",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-artist",
      "skos:broader",
      "Entity-singer"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-several_shape_each_for_various_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_rule_(3)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-an_embedding_learner",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-e2__e3",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-sh__property",
      "skos:broader",
      "Entity-syntax"
    ],
    [
      "Entity-standard_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-challenge",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-massive_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-_e__p__e__",
      "skos:broader",
      "Entity-syntax"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-human__x_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-locatedin__canberra__australia_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-the_number_of_distinct_e_s_is_the_count_of_non-zero_element",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-rule_learning"
    ],
    [
      "Entity-there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-rule_can_be_further_pruned_by_applying_stricter_quality_threshold_later_on",
      "skos:broader",
      "Entity-pruning_method"
    ],
    [
      "Entity-tree_shape",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-type_information",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-inverse_open_path_head_coverage",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-e4",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rule_instance",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-tree",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-pt",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-dbpedia_contains_predicate_where_the_second_argument_of_these_predicate_are_type_or_class",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-greedysearch",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-sampled_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-entity_that_satisfy_the_second_argument_of_the_body",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-iop_standard_confidence",
      "skos:broader",
      "Entity-rule_quality"
    ],
    [
      "Entity-universal_quantification_of_all_variable_at_the_outside",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-we_choose_to_model_type_and_class_with_unary_predicate",
      "skos:broader",
      "Entity-our_unary_predicate_and_fact"
    ],
    [
      "Entity-all_unary_predicate_are_occupation_such_a_singer_or_entrepreneur__so_all_the_entity_which_have_these_type_turn_out_to_be_person_even_though_there_is_no_explicit_person_type_in_our_kg",
      "skos:broader",
      "Entity-to_find"
    ],
    [
      "Entity-percentage_difference_in_the_number_of_rule_found",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-scalekb",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-p1__z0__x_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-the_shacl_core_feature__node_and_property_shape_",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-the_quality_of_iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-the_majority_of_learned_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_shape_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-op_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-each_have_a_class_a_their_second_argument",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-kg_k_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-inference_rule"
    ],
    [
      "Entity-model_type_and_class",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-shacl__the_shape_constraint_language"
    ],
    [
      "Entity-rule-learning_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-subject_and_object_argument_embeddings"
    ],
    [
      "Entity-property_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-the_performance_of_the_shaclearner__-sh_",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-unary_predicate_(2)",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-our_unary_predicate_and_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-shaclearner__-sh_",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-they_work_with_a_small_amount_of_data",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-human__x_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-cardinality_c1",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-our_shaclearner",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-each_binary_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-hole_and_rescal",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-hc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-_e1__e2__e3_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-only_e2_satisfies_the_rule",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-_e1__e2__e3_",
      "skos:broader",
      "Entity-sequence"
    ],
    [
      "Entity-from_definition_4__iophc__r1___22_and_iopsc__r1___22",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-all_unary_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-inverse_open_path_standard_confidence__iopsc_",
      "skos:broader",
      "Entity-confidence"
    ],
    [
      "Entity-the_entity_and_predicate_that_are_less_relevant_to_the_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-the_tree_suggests_that_if_we_have_an_entity_of_type_song_in_the_kg__then_we_would_expect_to_have_the_associated_fact_too_.",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-shacl_semantics",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-correspond_to_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-semi-automatic_manner__it_provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-for_an_example",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-fgds_define_constraint_like_the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-our_proposed_system",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-a_tree_(2)",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-designing_an_efficient_learning_method",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-a_good_learning_algorithm",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-of_the_number_of_entity_pair_that_satisfy_the_body_in_the_kg",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-each_argument_of_each_target_predicate",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-a_person_in_a_specific_use_case_need_to_have_a_name__birth_date__and_place_of_birth",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-a_song_ha_at_least_2_producer",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-shaclearner_with_regard_to_the_quality_and_quantity_of_learnt_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-_sh_",
      "skos:broader",
      "Entity-rule_learner"
    ],
    [
      "Entity-method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_two_type-like_predicate_from_dbpedia_3.8_and_the_one_from_wikidata",
      "skos:broader",
      "Entity-wikidata"
    ],
    [
      "Entity-be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-poker_hand",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-for_an_example_of_tree_shape_learning",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-definition_1",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-x_and_z_i",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-unary_occupation_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-rule_and_constraint",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-wikidataup",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-in_a_kg_context"
    ],
    [
      "Entity-p__1",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-our_mined_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-entity",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-rule_learner_to_the_maximum_length_of_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-human__x__x__-__citizenof__x__z1___country__z1__z1_",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-closed_rule__cr_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-p___x__t_",
      "skos:broader",
      "Entity-composite_predicate"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-output"
    ],
    [
      "Entity-the_distribution_(1)",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-argument",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-human__x__x__-__citizenof__x__z1___country__z1__z1_",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-iop_rule_in_greedysearch",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-open_path"
    ],
    [
      "Entity-_a__pk___k_in_1_.._m_",
      "skos:broader",
      "Entity-k_"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-paper"
    ],
    [
      "Entity-such_path_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-one_shared_variable__z0",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-formalisation",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-semi-automatic_manner__it_provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-this_feature",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-their_method_for_comparison_purpose",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-to_mine",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-subject_and_object_argument_embeddings",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-with_n___2",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-shaclearner__ev",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-transforming_kg",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_largest_proportion_of_rule_ha_a_cardinality_of_1",
      "skos:broader",
      "Entity-to_find"
    ],
    [
      "Entity-the_subject__respectively_object__argument_embeddings_of_a_predicate_p_k",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-entity_that_satisfy_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_predicate_p1__p2__and_pt",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-presenting_the_class_and_type_information",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_unary_predicate_human_in_fig_._2",
      "skos:broader",
      "Entity-our_unary_predicate_and_fact"
    ],
    [
      "Entity-unary_predicate",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-scoring_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-rule_quality",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-many_case",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-an_example_of_tree_shape_learning",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-tree_shape",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-cardinality_of_a_path",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-livesin__mary__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-shaclearner__-s-h_",
      "skos:broader",
      "Entity-ideal_rule_learner"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-ideal__modified_shaclearner__-s-h_",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-predicate_and_entity_(2)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-e__e_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-k-cliques",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-large_scale_shape_mining"
    ],
    [
      "Entity-prior_sampling",
      "skos:broader",
      "Entity-pruning_technique"
    ],
    [
      "Entity-the_class_and_type_information_a_unary_predicate",
      "skos:broader",
      "Entity-unary_predicate"
    ],
    [
      "Entity-kg_pattern",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-the_head_of_the_rule",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-our_shape_learning_system",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-sampling___method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-inverse_open_path_rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-entity_that_satisfy_the_head_of_the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_knowledge_graph__kg_",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-an_embedding_learner",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-from_definition_4__iophc__r1___22_and_iopsc__r1___22",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-they_can_also_be_used_more_traditionally_to_complete_missing_fact_for_a_target_predicate__a_well_a_other_predicate_related_to_the_target",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_tree_(1)",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-human__x__x__-__father__x__z2___human__z2__z2_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-e_is_an_identifier_for_an_object_such_a_a_place_or_a_person_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-language__z3__z3_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-shape_quality_measure_that_are_essential_for_large_scale_shape_mining",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-this_completion_strategy",
      "skos:broader",
      "Entity-strategy"
    ],
    [
      "Entity-every_entity-instantiation_of_a_cp_rule_is_also_an_entity-instantiation_of_the_related_op_rule__but_not_vice_versa",
      "skos:broader",
      "Entity-op_rule_(1)"
    ],
    [
      "Entity-quality_iop_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_experiment_(1)",
      "skos:broader",
      "Entity-this_experiment"
    ],
    [
      "Entity-iopsc_and_iophc",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-the_full_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_(2)"
    ],
    [
      "Entity-there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-the_same_head_and_the_same_body",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-let_r_be_an_iop_rule_of_the_form__3__.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-pruning_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-our_work__we_use_the_kg_itself_to_discover_the_shape__without_relying_on_external_modelling_artefact_.",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-unary_predicate_(1)",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-definition_6",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-language__z3__z3_",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-the_subject__respectively_object__argument_embeddings_of_a_predicate_p_k",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-sh"
    ],
    [
      "Entity-have_a_variety_of_length_and_cardinality",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-tree_shape",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-algorithm_2",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-three_massive_real-world_benchmark_kg_including_yago__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-k-cliques",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_third_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_song__x_",
      "skos:broader",
      "Entity-song"
    ],
    [
      "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq__are_fact_in_the_kg",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-large_kg_are_typically_populated_by_automatic_and_semi-automatic_method_using_non-structured_source_such_a_wikipedia_that_are_prone_to_error_of_omission_and_commission",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-then_r_satisfies_car__r__if_and_only_if__for_each_entity_e_such_that_pt__e___e__hold",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-manual_kg_editing_task",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-shacl_semantics"
    ],
    [
      "Entity-standard_confidence",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-prior_sampling",
      "skos:broader",
      "Entity-the_sampling_method__first_introduced"
    ],
    [
      "Entity-corresponding_number_of_mined_rule",
      "skos:broader",
      "Entity-mined_rule"
    ],
    [
      "Entity-definition_5",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-shacl"
    ],
    [
      "Entity-the_size_of_the_problem_significantly__a_discussed_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-it_advanced_feature",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-the_statistical_likelihood_of_poor_quality_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_first_row",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-table_2",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-each_element",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_effectiveness_of_our_shaclearner",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-50_target_predicate",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-real-world_kg_model",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-an_example_of_a_shape_from_wikidata",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-rescal__in_embeddings",
      "skos:broader",
      "Entity-embedding_learner"
    ],
    [
      "Entity-a_relational_database_typically_employ_not-null_and_other_schema-based_constraint_that_require_some_attribute_to_be_instantiated_in_a_defined_way_at_all_time",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-path1",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-high_quality_rule_meeting_minimum_quality_threshold_are_included_in_these_figure",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-an_adjacency_matrix_representation_of_the_kg",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-e_",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-embedding",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-pruning_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_full_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-various_formalism",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-a_certain_cardinality_c1",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-the_presentation",
      "skos:broader",
      "Entity-presentation"
    ],
    [
      "Entity-meaning_that_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-language__z3__z3_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-car_value",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-iop_version",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-an_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-p2_t__p1_1_and_p2_1__p2_1_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-entity_that_occur_a_the_subject__respectively_object__of_p_k_in_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-kg_data",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-rule_learner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_formalism",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-the_method_for_aggregating_iop_rule_into_tree",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-shacl_learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-_e__e1___...___e__eq_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-_e__e1___...___e__eq_",
      "skos:broader",
      "Entity-sequence"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-cultural_bias__and_resource_constraint",
      "skos:broader",
      "Entity-resource_constraint"
    ],
    [
      "Entity-three_massive_real-world_benchmark_kg_including_yago__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-existential_variable_in_the_head",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-denoted_pt__e___e___if_pt__e___e__is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-ptq",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-z1",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-entity_that_satisfy_the_first_argument_of_the_head",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-real-world_massive_knowledge_graph__kg_",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-all_unary_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-our_learning_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_sampled_kg_(1)",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-car__r_",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-pathfinding__",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_entity_and_predicate_that_are_less_relevant_to_the_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-kg_rule_learning_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-r1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_class_and_type_information_a_unary_predicate",
      "skos:broader",
      "Entity-unary_predicate_(1)"
    ],
    [
      "Entity-an_instance_of_the_head_(1)",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-the_core_of_shacl",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_small_sampled_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_statistical_likelihood_of_poor_quality_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-node_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-scoring_function_heuristic_for_op_rule",
      "skos:broader",
      "Entity-heuristic"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-predicate_embeddings"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-it_treat_all_property__both_object_and_datatype_property__a_plain_predicate_so_there_is_no_distinction",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-type",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-rule_quality",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-treesupp",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-potential_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-tree",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-human",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-shacl"
    ],
    [
      "Entity-yq",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-universal_quantification_of_all_variable_at_the_outside",
      "skos:broader",
      "Entity-universal_quantification"
    ],
    [
      "Entity-shacl_shape_(1)",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-real-world_kg_model",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-shaclearner__shown_in_algorithm_1",
      "skos:broader",
      "Entity-rule_learner"
    ],
    [
      "Entity-greedysearch",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-a_relational_database_typically_employ_not-null_and_other_schema-based_constraint_that_require_some_attribute_to_be_instantiated_in_a_defined_way_at_all_time",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-28",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-iop_head_coverage",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-e_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-embedding_learner",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-p__1",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-condition",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-miniophc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-formalism",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-human__x__x__-__father__x__z2___human__z2__z2_",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-this_simple_approach",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-iop_version",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-pt__x__z0_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_converse_of_op_rule",
      "skos:broader",
      "Entity-op_rule_(1)"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-this_lemma",
      "skos:broader",
      "Entity-lemma"
    ],
    [
      "Entity-_kg_",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-of_cardinality_expression__only_min_cardinality_is_handled",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-_1_",
      "skos:broader",
      "Entity-number"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-third_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-role__also_called_property_",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-depth-first_a_it_work_through_a_shape_tree",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-x",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-shacl_language"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-logical_formalism",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-original_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-class_and_type",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-car__r_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_shape_(2)",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-body",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-the_closed_path_form",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-about_the_predicate_of_the_head",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-second_argument",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-tree",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rule_quality",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-this_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-an_adjacency_matrix_representation_of_the_kg"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_cp_rule",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-learning_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-p2__z1__z2_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-this_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_next_challenge",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-the_support_for_an_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-the_shape_constraint_language__shacl_"
    ],
    [
      "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-for_a_kg_k",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-kg-completion",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-existential_variable_in_the_head",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_fact_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-informative_and_intuitive_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-pruning_technique",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-iop_rule_of_the_form__3_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-shape_of_varying_complexity_and_diversity_with_respect_to_length_and_cardinality",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_relationship_between_an_op_rule_and_it_converse_iop_version",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-let_r_(2)",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-formalism",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-shacl__the_shape_constraint_language"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-a_deeper__more_complex_tree",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-this_simple_approach",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-add_pathfinding__k___pt__p__a__k_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_entity_satisfying_both_condition",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-then_standard_confidence",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-these_two_pruning_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_time_of_learning",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-in_line_2_embeddings__",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-a_song__x_"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-human__z2__z2_",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-an_adjacency_matrix_representation_of_the_kg",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-the_mined_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-lower_quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-embedding",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-the_fact_pk__ei__ej_",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-for_iopsc",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-class_and_type",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-candidate_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_mined_iop_rule",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-mined_rule_with_respect_to_their_cardinality",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-the_following_three_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-unary_predicate_(2)"
    ],
    [
      "Entity-variable",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-we_choose_to_model_type_and_class_with_unary_predicate",
      "skos:broader",
      "Entity-the_class_and_type_information_a_unary_predicate"
    ],
    [
      "Entity-the_number_of_quality_rule_mined",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-50_target_predicate",
      "skos:broader",
      "Entity-number"
    ],
    [
      "Entity-quality_measure",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-predicate_where_the_second_argument_of_these_predicate_are_type_or_class",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_the_subject_and_object_binding_swapped_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-rescal__in_embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-extended_validation_framework",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_closed_path_form",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-correspond_to_shacl_shape",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-shaclearner__ev",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_body_(1)",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-the_support_of_r",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-the_adjacency_matrix",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-an_annotated_iop_rule_of_the_form__4_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-open_path__op__rule_of_the_form_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-shacl_advanced_feature",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-sequence_of_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-oprl_evaluation_module",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-with_higher_confidence_in_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-both_kind_of_error",
      "skos:broader",
      "Entity-error"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-n",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-this_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-suit",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-rule_learner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-all_unary_predicate_are_occupation_such_a_singer_or_entrepreneur__so_all_the_entity_which_have_these_type_turn_out_to_be_person_even_though_there_is_no_explicit_person_type_in_our_kg",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-output",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-ideal_rule_learner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-for_these_unary_occupation_predicate_there_are_also_some_iop_rule_with_high_iophc_that_apply_only_to_one_specific_unary_predicate",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-definition_1",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-shape_quality_measure",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-v2__pt_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-for_a_kg_k",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-_iopsc_is_non-increasing_with_length_",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-dbpedia",
      "skos:broader",
      "Entity-benchmark"
    ],
    [
      "Entity-the_relationship_between_an_op_rule_and_it_converse_iop_version",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-one_specific_unary_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-a_kg_context"
    ],
    [
      "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq__are_fact_in_the_kg",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-let_k___e__f__with_e___e1__...__en_",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-then_the_rule_is_closed",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-experimental_evaluation",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-birthplace__trump___",
      "skos:broader",
      "Entity-name__birth_date__and_place_of_birth"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-basic_shacl"
    ],
    [
      "Entity-to_demonstrate_the_potential_for_these_kind_of_shape_to_serve_a_building_block_for_more_complex_tree__we_then_propose_a_method_that_build_tree_out_of_mined_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-our_shape_describe_conjunctive_path_of_constraint_over_property__enhanced_with_minimum_cardinality_constraint",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-completion_strategy",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-an_example",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-sc",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-predicate_of_the_head",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-open_path_rule_learner_oprl",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_body_of_the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-using_heuristic_pruning_alone_in__-sh_",
      "skos:broader",
      "Entity-pruning_variant"
    ],
    [
      "Entity-human__z2__z2_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "skos:broader",
      "Entity-link"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-real-world_kg_model",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-iopsc_is_non-increasing_with_length",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-we_use",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-tree__treesupp__treesc",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-quality_rule",
      "skos:broader",
      "Entity-frequent_pattern_in_a_kg"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-inference_rule"
    ],
    [
      "Entity-28",
      "skos:broader",
      "Entity-number"
    ],
    [
      "Entity-shacl_shape_(1)",
      "skos:broader",
      "Entity-shape_constraint"
    ],
    [
      "Entity-new_unary_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-for_example__we_should_have_the_following_similarity_",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-sampled_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-within_a_sh__property_declaration",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-for_each_variant",
      "skos:broader",
      "Entity-variant"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-a_branch",
      "skos:broader",
      "Entity-branch"
    ],
    [
      "Entity-such_a_fullhouse__x__where_x_is_a_specific_poker_hand",
      "skos:broader",
      "Entity-poker_hand"
    ],
    [
      "Entity-path1",
      "skos:broader",
      "Entity-branch"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_other_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_literature_a_existential_rule",
      "skos:broader",
      "Entity-literature"
    ],
    [
      "Entity-knowledge_graph_completion",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-a_pair_of_entity",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-then_a_set_of_pair_of_entity__e__e1___...___e__eq__satisfies_the_head_of_r__denoted_headr__e__",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-and_briefly_discus_the_application_of_such_tree_to_kg_completion",
      "skos:broader",
      "Entity-application"
    ],
    [
      "Entity-path",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_set_of_sampled_entity_for_a_target_predicate_will_be_of_size_2lfe_in_the_worst_case_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_same_head_and_the_same_body_may_have_different_cardinality",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-a_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-sampling__k__pt_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-depth-first_a_it_work_through_a_shape_tree",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-all_possible_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-kg_k_",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-an_example_of_a_shape_from_wikidata",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-syntax"
    ],
    [
      "Entity-a_greedy_search",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-to_prune_the_class_with_few_instance_for_which_learning_may_be_pointless__we_consider_only_our_unary_predicate_which_have_at_least_one_hundred_fact_.",
      "skos:broader",
      "Entity-pruning_method"
    ],
    [
      "Entity--sh",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-method_to_aggregate_iop_rule_to_produce_tree_shape",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-this_completion_strategy_is_depth-first_a_it_work_through_a_shape_tree_.",
      "skos:broader",
      "Entity-strategy"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-correspond_to_shacl_shape"
    ],
    [
      "Entity-weak_inference_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-entrepreneur",
      "skos:broader",
      "Entity-occupation"
    ],
    [
      "Entity-iop_rule_about_each_of_them",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-all_28_unary_predicate_a_the_target_predicate",
      "skos:broader",
      "Entity-target_predicate"
    ],
    [
      "Entity-using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-to_compute",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-p0__e1__e2_",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-to_mine_iop_rule",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-the_shape_(1)",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-_e__rdf__type__p_",
      "skos:broader",
      "Entity-rdf_triple"
    ],
    [
      "Entity-all_binary_predicate_of_yago2s",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-we_propose_a_predicate_calculus_formalism",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-the_pattern",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-the_presentation_of_closed_path_rule_and_open_path_rule",
      "skos:broader",
      "Entity-presentation"
    ],
    [
      "Entity-for_iopsc",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-iopsupp__r_",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-e_i",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-this_paper",
      "skos:broader",
      "Entity-paper_(1)"
    ],
    [
      "Entity-pi",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-kg-completion",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-algorithm",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-we_use",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-hc",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-unary_predicate_a_target",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-iopsc_determines_the_confidence_of_a_rule_based_on_counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-dbpedia_3.8",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-embedding-based_method_that_discovers_iop_rule_from_a_kg",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-line_8_of_algorithm_1",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-corresponding_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-that_are_related_to_the_target_predicate_pt_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-our_pruning_technique",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_pair_of_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_confidence_of_a_rule",
      "skos:broader",
      "Entity-confidence"
    ],
    [
      "Entity-this_sampling",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-locatedin__canberra__australia_",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-tree_shape_for_simplicity_and_easier_interpretation",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-based_on_the_new_predicate_and_related_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-to_handle_extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-vector_e_i_in_rd",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-massive_kg_(1)",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_tree_support_and_tree_standard_confidence_of_r",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-the_second_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-with_iopsc_greater_than_or_equal_to_0.1_and_iophc_greater_than_or_equal_to_0.01",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-a_greedy_search",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-fgds_define_constraint_like_the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-let_k___e__f__with_e___e1__...__en_",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-our_unary_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-these_figure",
      "skos:broader",
      "Entity-the_figure"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-in_line_2_embeddings__",
      "skos:broader",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-what_proportion_of_the_inferred_head_instance_are_satisfied_",
      "skos:broader",
      "Entity-proportion"
    ],
    [
      "Entity-pattern",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-fullhouse",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-support",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-cover_which_is_widely_used_for_rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-rule_quality_measure"
    ],
    [
      "Entity-using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_predicate_argument",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-opera_singer",
      "skos:broader",
      "Entity-person"
    ],
    [
      "Entity-_open_path__opsupp__opsc__ophc_",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-while_enabling_the_acquisition_of_fact_about_entity_that_are_entirely_missing_from_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-definition_5",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-p2_t",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-song",
      "skos:broader",
      "Entity-genre"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-figure",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-shacl_tree",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-cultural_bias__and_resource_constraint",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-inference_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-a_variable_closed",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-human__x__x__-__father__x__z2___human__z2__z2_",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-pi",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_body_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-p2__z1__z2_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_head_of_the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-using_rule_found_in_the_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-a_certain_cardinality_c1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-subject_argument",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-n",
      "skos:broader",
      "Entity-number"
    ],
    [
      "Entity-tree_that_can_be_generated_by_shaclearner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-embedding-based_method_that_discovers_iop_rule_from_a_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-we_observe_an_expected_decrease_with_greater_cardinality_a_they_demand_tighter_restriction_to_be_satisfied",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-real-world_kg_model",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-hc",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-what_proportion_of_the_fact_satisfying_the_head_of_the_rule_could_be_inferred_by_satisfying_the_rule_body_",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-cardinality_constraint",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm_.",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-our_unary_predicate_and_fact",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-dbpedia_3.8",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-song",
      "skos:broader",
      "Entity-type"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-hc_measure",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-shacl_tree",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-then_a_set_of_pair_of_entity__e__e1___...___e__eq__satisfies_the_head_of_r__denoted_headr__e__",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-tree_shape_for_simplicity_and_easier_interpretation",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-pt__x__z0_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-to_assess",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-extended_validation_framework",
      "skos:broader",
      "Entity-data_type_validation"
    ],
    [
      "Entity-standard_confidence",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-their_method_for_comparison_purpose",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-every_path_from_the_target_predicate_terminating_at_a_node_in_the_tree",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-we_employ_an_abstract_model",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-corresponding_number_of_mined_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-although_they_are_not_necessarily_enforced",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-a_deck_with_thirteen_rank_and_four_suit",
      "skos:broader",
      "Entity-suit"
    ],
    [
      "Entity-the_shape_of_fig_._2",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-the_rule_that_bind_the_object_argument_of_the_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-minimum_cardinality_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-presentation",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-definition_5",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-predicate_where_the_second_argument_of_these_predicate_are_type_or_class",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_song_ha_at_least_2_producer",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-conjunctive_path_of_constraint_over_property",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-pathq",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-treescmin",
      "skos:broader",
      "Entity-threshold"
    ],
    [
      "Entity--sh",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-real-world_kg_model",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-closed-path_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-their_cardinality",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-dbpedia",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_atomic_body_(1)",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-rule_with_cardinality_car",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-the_left-hand_tree_in_fig_._3",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-iopsupp",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_approach",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-presenting",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-procedural_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-one_specific_unary_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-e_is_an_identifier_for_an_object_such_a_a_place_or_a_person_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-these_two_pruning_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-the_number",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-n",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rule_quality_measure_iop_standard_confidence__iop_head_coverage__and_cardinality_which_augment_the_rule",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-learned_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-_e__e1___...___e__eq_",
      "skos:broader",
      "Entity-pair"
    ],
    [
      "Entity-and_after_summing_column_and_transposing_we_have_v2__pt____0_1_2__t",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-approach",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-e4",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-association_rule_mining",
      "skos:broader",
      "Entity-rule_mining"
    ],
    [
      "Entity-the_effectiveness_of_our_shaclearner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-more_complex_shape__tree_",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-the_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-the_original_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_established_approach",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-for_a_kg_k_with_entity_e_and_fact_f",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-the_treesc",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-sh"
    ],
    [
      "Entity-definition_6",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-shape_learning_system",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-z2",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-learning_partially_instantiated_shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-for",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-in_which_rule_have_one_body_atom_and_a_chain_of_conjunctive_atom_in_the_head_with_a_specific_variable_binding_pattern",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-threshold",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-_e__e___satisfying_the_head",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-the_shape_(3)"
    ],
    [
      "Entity-the_small_sampled_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-vector_e_i_in_rd",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity--sh",
      "skos:broader",
      "Entity-pruning_variant"
    ],
    [
      "Entity-_e3__e4__e5_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-real-world_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-original_input_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-closed_rule__cr_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-open_path_support",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-livesin__mary__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-a_frequent_pattern__the_shape_characterize_a_kg_and_can_be_used_for_subsequent_data_cleaning_or_ongoing_data_entry",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-definition_5",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-our_algorithm",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_tree_suggests_that_if_we_have_an_entity_of_type_song_in_the_kg__then_we_would_expect_to_have_the_associated_fact_too_.",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-closed-path_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-sh__mincount_within_the_property_declaration",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-unary_predicate"
    ],
    [
      "Entity-the_method_for_aggregating_iop_rule_into_tree",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-logical_formalism_with_both_well-defined_semantics_and_motivating_use_case",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-completion_strategy",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-an_identifier_for_an_object_such_a_a_place_or_a_person",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-learning_path",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-ev_to_produce_annotated_iop_rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-real-world_kg_such_a_those_we_used_in_the_performance_evaluation",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-a_song_to_have_at_least_two_producer",
      "skos:broader",
      "Entity-producer"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-real-world_massive_knowledge_graph__kg_"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iop_rule_that_are_learnt_by_ideal__modified_shaclearner__-s-h__with_no_pruning",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-for_example__a_shape_can_be_derived_from_the_following_three_iop_rule_",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_practical_meaning_of_the_iopsc_and_iophc_quality",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-z0",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-standard_shacl_shape"
    ],
    [
      "Entity-inference_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-an_iop_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-kg_data",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-shex",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-definition_3",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-x_should_belong_to_an_album_that_ha_y_a_record_label",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-definition_4",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-max_rule_length_l",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-learning_partially_instantiated_shape",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-learning_shape_constraint",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-rule_length",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-formal_quality_measure_for_iop_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-ev__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-all_fact_related_to_them",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-ontology_constraint_pattern",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_small_sampled_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-open_path_support",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-to_find",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-each_hand_is_assigned_to_any_or_all_of_nine_different_rank__including_high_card__one_pair__two_pair__etc_.",
      "skos:broader",
      "Entity-rank"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-e_s",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-language",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-large_kg_are_typically_populated_by_automatic_and_semi-automatic_method_using_non-structured_source_such_a_wikipedia_that_are_prone_to_error_of_omission_and_commission",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-although_they_are_not_necessarily_enforced",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-a_deck_with_thirteen_rank_and_four_suit",
      "skos:broader",
      "Entity-rank"
    ],
    [
      "Entity-the_fact_in_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-this_procedure",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_sequence_of_predicate_p1__p2__...__pn",
      "skos:broader",
      "Entity-sequence"
    ],
    [
      "Entity-in_embeddings",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-open_path"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-logical_formalism_with_both_well-defined_semantics_and_motivating_use_case",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-our_unary_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-work",
      "skos:broader",
      "Entity-paper"
    ],
    [
      "Entity-the_tree",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-concept_or_class_membership",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-iop_rule_of_the_form__3_",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-subject_and_object_argument_embeddings",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-knowledge_graph",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-an_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-fullhouse",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-if_all_variable_of_a_rule_are_closed_then_the_rule_is_closed",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-real-world_kg_such_a_those_we_used_in_the_performance_evaluation",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-mintreesc",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-massive_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_predicate_argument",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd",
      "skos:broader",
      "Entity-the_embedding"
    ],
    [
      "Entity-the_practical_meaning_of_the_iopsc_and_iophc_quality",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-it_treat_all_property__both_object_and_datatype_property__a_plain_predicate_so_there_is_no_distinction",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-a_song_to_have_at_least_two_producer",
      "skos:broader",
      "Entity-song"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-predicate_of_the_head",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-an_iop_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-then_r",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-k-cliques",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-open_path_head_coverage__ophc_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-human_knowledge",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-_e___e__satisfies_the_head_of_r",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-this_completion_strategy_is_depth-first_a_it_work_through_a_shape_tree_.",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-z2",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-branch_in_the_mined_tree",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-iop_standard_confidence",
      "skos:broader",
      "Entity-confidence"
    ],
    [
      "Entity-reverse_form",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-the_body_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-a_song_to_have_at_least_two_producer",
      "skos:broader",
      "Entity-an_entity_x_is_a_song"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-human__z2_",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-high_card",
      "skos:broader",
      "Entity-rank"
    ],
    [
      "Entity-in_order_to_discover_more_complex_shape__that_is__tree_.",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-shaclearner__shown_in_algorithm_1",
      "skos:broader",
      "Entity-iop_rule_learner"
    ],
    [
      "Entity-formal_quality_measure_for_iop_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-pruning_variant",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-they_are_a_more_general_template_for_more_complex_shape_like_closed_rule_or_tree__which_are_also_path__with_further_restriction__.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-a_more_complex_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-predicate_and_entity",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-cover_which_is_widely_used_for_rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-rule_quality"
    ],
    [
      "Entity-such_a_k-cliques__closed_rule__cr___that_include_closed_path_rule___functional_graph_dependency__fgd___and_tree_.",
      "skos:broader",
      "Entity-closed_rule"
    ],
    [
      "Entity-to_do_so",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-we_sum_each_column_and_transpose_to_obtain_the_vector_v2__pt_",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq_",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-basic_shacl"
    ],
    [
      "Entity-the_shape_we_learn",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-k__a_subgraph_of_the_input_graph",
      "skos:broader",
      "Entity-subgraph"
    ],
    [
      "Entity-the_shape_constraint_language__shacl_",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-the_building_block_for_expressing_all_of_these_shape_constraint_is_a_sequence_of_predicate",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_first_annotation_value__0.13__present_the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-an_annotated_iop_rule_of_the_form__4_",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-a_song__x__to_have_at_least_one_producer",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-language",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-shaclearner__-sh_",
      "skos:broader",
      "Entity-rule_learning"
    ],
    [
      "Entity-minimum_quality_threshold",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-opera_singer",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-shaclearner_of_algorithm_1",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-z1",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-max_rule_cardinality_mcar",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-this_procedure",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-in_embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-tree",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-the_fact_in_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-learning_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-shacl_shape_(1)",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-and_propose_a_novel_method_to_learn_high-quality_rule_from_kg_.",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-a_set_of_rule_and_shape_are_provided",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-various_rule_language",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-the_left-hand_tree_in_fig_._3",
      "skos:broader",
      "Entity-figure"
    ],
    [
      "Entity-the_rule_that_bind_the_object_argument_of_the_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-unary_predicate_(1)"
    ],
    [
      "Entity-a_novel_method_to_learn_high-quality_rule_from_kg",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-z0",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-validate_kg",
      "skos:broader",
      "Entity-data_type_validation"
    ],
    [
      "Entity-shaclearner__-s-h_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_following_three_iop_rule_mined_from_dbpedia_in_the_experiment",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-many_relevant_rule_with_many_covered_head_instance",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-predicate_of_the_head",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-fgds",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-variable",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-human__x__x__-__father__x__z2___human__z2__z2_",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-so-called_closed_path__cp__rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-entity_that_satisfy_the_first_argument_of_the_head",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-for_a_small_complete_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-the_shape_constraint_language__shacl_"
    ],
    [
      "Entity-large_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e___",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-three_benchmark",
      "skos:broader",
      "Entity-benchmark"
    ],
    [
      "Entity-our_algorithm",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-father__x__z2___human__z2_",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-lower-cardinality_version_of_that_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-tree_that_can_be_generated_by_shaclearner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-for_example",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-all_entity_in_the_sampled_kg_are_either_directly_related_to_the_target_predicate_or_close_neighbour_of_directly_related_entity_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-kg-completion",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-_s-h_",
      "skos:broader",
      "Entity-rule_learner"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-predicate_logic_formalism"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-selecting_a_low_threshold",
      "skos:broader",
      "Entity-threshold"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-shacl__the_shape_constraint_language"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-schema_information_(1)"
    ],
    [
      "Entity-that_satisfy_the_body_of_the_rule",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-presenting",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_(2)"
    ],
    [
      "Entity-the_building_block_for_expressing_all_of_these_shape_constraint_is_a_sequence_of_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-after_sampling",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-using_heuristic_pruning_alone_in__-sh_",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-op_rule_(1)"
    ],
    [
      "Entity-y_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-presenting",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_established_approach_for_evaluating_kg_rule-learning_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-wikidataup",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-expected_decrease",
      "skos:broader",
      "Entity-phenomenon"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-basic_shacl"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-large_scale_shape_mining",
      "skos:broader",
      "Entity-domain"
    ],
    [
      "Entity-confidence_treescorig",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_same_head_and_the_same_body_may_have_different_cardinality",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-cover",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-this_tree",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-tree_and_other_rule_pattern",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-proportion",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-p2",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-producer",
      "skos:broader",
      "Entity-person"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-a_novel_method_to_learn_high-quality_rule_from_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-nativelanguage__x__z3_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-depth-first_questioning_strategy",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-strategy",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-so-called_closed_path__cp__rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-unary_predicate_of_the_form_p__e_",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-in_real_application",
      "skos:broader",
      "Entity-application"
    ],
    [
      "Entity-further",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-p1__e__e1_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-for_a_small_complete_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-association_rule_mining",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-certain_property",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-our_shape_describe_conjunctive_path_of_constraint_over_property__enhanced_with_minimum_cardinality_constraint"
    ],
    [
      "Entity-the_formalism_of_constraint",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-p1__y__z_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-closed_rule__cr_",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-rule_quality",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-greedysearch",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-self-loop_link",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-dealing_with_uncertainty_in_the_constraint_and_the_learning_process",
      "skos:broader",
      "Entity-uncertainty"
    ],
    [
      "Entity-for_each_entity_e_such_that_pt__e___e__hold",
      "skos:broader",
      "Entity-universal_quantification"
    ],
    [
      "Entity-tree",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-sampling__shown_in_algorithm_2",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-prior_sampling",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_mined_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-potential_rule_in_the_search_space",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-in_comparison_with_the_ideal_rule_learner__shaclearner__-s-h__",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-rule_language"
    ],
    [
      "Entity-definition_2",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-after_sampling",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-scalekb",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-open_path_rule_learner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-yago2s",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-distinct_e_s_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-several_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-e3",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-human_knowledge",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-iop_standard_confidence",
      "skos:broader",
      "Entity-novel_numerical_confidence_measure"
    ],
    [
      "Entity-shaclearner__ev",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-entity_a_shown_in_previous_heuristic_rule_learner",
      "skos:broader",
      "Entity-related_work"
    ],
    [
      "Entity-cover",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_pair_of_entity__e__e___satisfies",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-shape_learning_system",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_body_of_r",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-experimental_evaluation",
      "skos:broader",
      "Entity-this_experiment"
    ],
    [
      "Entity-pruning_variant",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-to_prune_the_class_with_few_instance_for_which_learning_may_be_pointless__we_consider_only_our_unary_predicate_which_have_at_least_one_hundred_fact_.",
      "skos:broader",
      "Entity-pruning_technique"
    ],
    [
      "Entity-iop_standard_confidence",
      "skos:broader",
      "Entity-rule_quality_measure"
    ],
    [
      "Entity-while_enabling_the_acquisition_of_fact_about_entity_that_are_entirely_missing_from_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-we_sum_each_column_and_transpose_to_obtain_the_vector_v2__pt_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_rule_that_bind_the_object_argument_of_the_target_predicate",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-hc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-producer"
    ],
    [
      "Entity-for_example__a_shape_can_be_derived_from_the_following_three_iop_rule_",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-structural_feature_such_a_depth_and_width",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-a_set_of_iop_rule_r_and_tree",
      "skos:broader",
      "Entity-iop"
    ],
    [
      "Entity-country",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_method_that_is_used_to_build_a_kg",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-have_a_variety_of_length_and_cardinality",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-our_shaclearner_based_on_algorithm_1",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-rule_quality_measure_iop_standard_confidence__iop_head_coverage__and_cardinality_which_augment_the_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-these_constraint_are_deployed_to_make_the_kg_consistent_.",
      "skos:broader",
      "Entity-application"
    ],
    [
      "Entity-self-loop_link",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-we_find_distinct_e_s",
      "skos:broader",
      "Entity-to_find"
    ],
    [
      "Entity-the_method_for_aggregating_iop_rule_into_tree",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-sampling__shown_in_algorithm_2",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-our_mined_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-sh__nodeshape",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-potential_rule_in_the_search_space",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-head",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-shacl_tree",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-kg-completion",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-shaclearner_with_regard_to_the_quality_and_quantity_of_learnt_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-element_with_a_value___car_for_rule_with_cardinality_car",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-tree_and_other_rule_pattern",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-to_handle_extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-these_uncertain_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-all_possible_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-let_r_be_an_op_rule_of_the_given_form_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-kg_rule-learning_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-x_is_in_an_album_y",
      "skos:broader",
      "Entity-album"
    ],
    [
      "Entity-massive_kg_(1)",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-annotated_with_a_cardinality_car",
      "skos:broader",
      "Entity-cardinality_constraint"
    ],
    [
      "Entity-three_massive_real-world_benchmark_kg_including_yago__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-real-world_kg_model",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-146_rule_with_iopsc_in_range_of__0.1__0.3___17_or_10__fewer_rule_than_the_ideal_learner",
      "skos:broader",
      "Entity-iopsc"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-the_same_or_higher_iopsc_value",
      "skos:broader",
      "Entity-iopsc"
    ],
    [
      "Entity-the_predicate_of_the_head",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-open_path_standard_confidence",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-the_embedding"
    ],
    [
      "Entity-shape",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-closed_rule__cr_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-such_path_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-sh"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_row_index_of_element_with_value___car_of_v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-p1"
    ],
    [
      "Entity-the_performance_of_the_shaclearner__-sh_",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_paper",
      "skos:broader",
      "Entity-paper_(1)"
    ],
    [
      "Entity-ev__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-shaclearner__-sh_",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-while_enabling_the_acquisition_of_fact_about_entity_that_are_entirely_missing_from_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-unlike_cp_rule__op_rule_do_not_necessarily_form_a_loop",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-predicate_and_entity",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_tree_support_and_tree_standard_confidence_of_r",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-the_quality_of_a_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-real-world_kg_model",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-predicate_logic_formalism",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-song"
    ],
    [
      "Entity-country",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_method_that_is_used_to_build_a_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-shacl_semantics"
    ],
    [
      "Entity-entity_that_occur_a_the_subject__respectively_object__of_p_k_in_the_kg",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-sampling__",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd",
      "skos:broader",
      "Entity-subject_and_object_argument_embeddings"
    ],
    [
      "Entity-z2",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-their_method_for_comparison_purpose",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-our_shaclearner_based_on_algorithm_1",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-kg_documentation_a_readable_pattern",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-type_information",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-rule_quality_measure_iop_standard_confidence__iop_head_coverage__and_cardinality_which_augment_the_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-confidence_widely_used_in_association_rule_mining",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-more_rule_of_lower_quality",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-kg_or_it_reverse_with_subject_and_object_binding_swapped",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-type_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-an_entity_x_is_a_song"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-the_occupation_all_have_very_similar_iop_rule_about_each_of_them_with_high_iopsc_and_low_iophc",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-_inverse_open_path__iopsupp__iopsc__iophc_",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-our_mined_shape",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-shacl_tree",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-branch_cardinality",
      "skos:broader",
      "Entity-number"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-k___e__f_",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-p1__x__z0___-_p2__z0__z1___p3__z1__z2_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-class",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-kg_rule-learning_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-all_entity_in_the_sampled_kg_are_either_directly_related_to_the_target_predicate_or_close_neighbour_of_directly_related_entity_.",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-car__r_",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-third_rule",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-the_better_quality_of_embeddings_extracted_from_the_sampled_kg_arises_from_our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate",
      "skos:broader",
      "Entity-to_find"
    ],
    [
      "Entity-quality_iop_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-entity_that_occur_a_the_subject__respectively_object__of_p_k_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-discovered_tree",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-poor_quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-if_all_variable",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-shacl_learning_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-using_the_complete_kg_for_learning_rule_about_all_target_predicate",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-association_rule_mining",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-the_original_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-formalism",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-we_then_propose_a_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-v1__p1__p2_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-car_is_an_integer___1",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-section_3",
      "skos:broader",
      "Entity-section_2"
    ],
    [
      "Entity-real-world_massive_knowledge_graph__kg_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-benchmark"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-by_aggregating_mined_iop_rule_in_greedysearch",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-pt",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-property_shape",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-iop_rule_annotated_with_cardinality_constraint",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "skos:broader",
      "Entity-paper_(1)"
    ],
    [
      "Entity-for_a_concrete_example",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-input_ontology",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-standard_confidence__sc__and_head_coverage__hc_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-to_handle_extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata",
      "skos:broader",
      "Entity-wikidata"
    ],
    [
      "Entity-rank",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-original_input_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-p0",
      "skos:broader",
      "Entity-scoring_function"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-z0",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-an_annotated_iop_rule_of_the_form__4_",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-based_on_the_new_predicate_and_related_fact",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_quality_of_a_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-manual_knowledge_graph_completion",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-entity_that_occur_a_the_subject__respectively_object__of_p_k_in_the_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-the_number_of_entity_pair_that_satisfy_the_body_in_the_kg",
      "skos:broader",
      "Entity-the_fact_in_the_kg"
    ],
    [
      "Entity-maximum_length_of_rule",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-this_paper",
      "skos:broader",
      "Entity-paper"
    ],
    [
      "Entity-an_op_rule_ha_two_open_variable__y_and_x",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-v2__pt__(1)",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-the_proportion_of_rule_consequent_instance_that_are_justified_by_target_predicate_instance_in_the_kg",
      "skos:broader",
      "Entity-proportion"
    ],
    [
      "Entity-the_time_of_learning",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-with_entity_e_and_fact_f",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-and_the_number_of_distinct_e_s_is_the_count_of_non-zero_element",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-human__x_",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-more_rule_of_lower_quality",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-human",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-shacl_defines_constraint_for_graph_a_shape",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-role__also_called_property_",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-of_the_number_of_entity_pair_that_satisfy_the_body_in_the_kg",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-every_entity-instantiation_of_a_cp_rule_is_also_an_entity-instantiation_of_the_related_op_rule__but_not_vice_versa",
      "skos:broader",
      "Entity-op"
    ],
    [
      "Entity-_inverse_open_path__iopsupp__iopsc__iophc_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-inverse_open_path_rule"
    ],
    [
      "Entity-an_argument_of_the_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-shape",
      "skos:broader",
      "Entity-schema_information"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-a_kg_for_valid_reason"
    ],
    [
      "Entity-p2",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-it_component__p___x__t_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-a_pair_of_entity_(2)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-z",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-p2__z0__z1_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-_kg_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-nativelanguage__x__z3_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-whole_path",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-shacl_learning_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-using_the_complete_kg_for_learning_rule_about_all_target_predicate",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-rule_learning_system",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-pk",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-the_embedding_representation",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-_x__zi__y__are_entity_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-z2",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-the_original_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-pt___x__z0_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-entity_which_have_these_type",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-validate_a_kg",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-treesc",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-open_path_standard_confidence__opsc_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-various_feature_value",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-our_four_benchmark_kg",
      "skos:broader",
      "Entity-benchmark"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-sampling_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_non-recursive_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-we_propose_a_predicate_calculus_formalism",
      "skos:broader",
      "Entity-proposal"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-original_input_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-the_entity_satisfying_both_condition",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-rule_learner"
    ],
    [
      "Entity-a_fact__also_known_a_a_link_",
      "skos:broader",
      "Entity-link"
    ],
    [
      "Entity-shape",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-iop_head_coverage",
      "skos:broader",
      "Entity-head_coverage"
    ],
    [
      "Entity-human__x__x__-__citizenof__x__z1___country__z1__z1_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-in_the_worst_case__the_sampled_kg_is_the_same_a_the_original_kg__but_real-world_kg_are_sparse_with_only_a_very_small_proportion_of_entity_associated_with_any_predicate_within_distance_l_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-for_a_kg_k_with_entity_e_and_fact_f",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_original_predicate_and_fact_in_the_kg_a_well_a_extending_it_with_our_new_one",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-max_rule_cardinality_mcar",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-closed_path_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-manual_mode",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-automatic_and_semi-automatic_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-existing_ontology_for_kg",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-shaclearner__-sh_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-open_path_head_coverage_of_r",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-object_argument",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-subject_and_object_argument_embeddings",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-all_head_branch",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-nativelanguage__x__z3_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-z0",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-correspond_to_shacl_shape",
      "skos:broader",
      "Entity-standard_shacl_shape"
    ],
    [
      "Entity-ontology",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-generality",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-sampling___method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-a_song_to_have_at_least_two_producer",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-contributor_to_extend_a_kg_in_a_relatively_arbitrary_manner",
      "skos:broader",
      "Entity-contributor"
    ],
    [
      "Entity-rule_learning_system",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-denoted_pt__e___e___if_pt__e___e__is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-shacl"
    ],
    [
      "Entity-fgds_define_constraint_like_the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate_.",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg_such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e____are_fact_in_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-an_identifier_for_an_object_such_a_a_place_or_a_person"
    ],
    [
      "Entity-open_path_head_coverage_of_r",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-p1__y__z_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-p___x__t___pt__x__y___p1__y__z___p2__z__t_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-rule_with_respect_to_the_feature__iopsc__iophc__cardinality_and_length__and_also_iopsc_v_length",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-connected_by_closed_intermediate_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-lemma",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_figure",
      "skos:broader",
      "Entity-figure"
    ],
    [
      "Entity-shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-functional_graph_dependency__fgd_",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-a_small_amount_of_data",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-their_syntax",
      "skos:broader",
      "Entity-syntax"
    ],
    [
      "Entity-body_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-ev",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-iopsupp__r_",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-iopsc_and_iophc_belong_to__0__1__and_denote_the_quality_of_the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-yago2s_with_4_million_fact",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_distribution_(2)",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-class",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-sh__nodeshape",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-any_instantiated_open_path",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-correspond_to_shacl_shape"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-it_internal_knowledge_graph",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-unlike_cp_rule__op_rule_do_not_necessarily_form_a_loop",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-future_work",
      "skos:broader",
      "Entity-proposal"
    ],
    [
      "Entity-an_entity_which_ha_song_a_it_type",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-learning_partially_instantiated_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-schema_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-an_embedding_learner",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-rule_of_lower_quality",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-manual_mode",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-automatic_and_semi-automatic_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-this_potential_post-processing_step",
      "skos:broader",
      "Entity-potential_post-processing_step"
    ],
    [
      "Entity-we_follow_a_style_of_quality_measure_similar_to_those_used_for_op_rule",
      "skos:broader",
      "Entity-op_rule_(1)"
    ],
    [
      "Entity-non-structured_source_such_a_wikipedia",
      "skos:broader",
      "Entity-wikipedia"
    ],
    [
      "Entity-a_bounded_number_of_entity_that_are_related_to_the_target_predicate_pt",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-predicate_and_entity"
    ],
    [
      "Entity-the_predicate_of_the_head",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-the_shape_constraint_language__shacl_"
    ],
    [
      "Entity-person",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-it_(3)",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-p2_t__p1_1_and_p2_1__p2_1_.",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-p0",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-entity_x_is_a_song__then_x_is_in_an_album_y_which_ha_a_record_label_z",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-whole_path",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-entity_with_only_a_type_or_class_declaration",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-iopsupp__r__(1)",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-sampling___method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-p2",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-our_shape_describe_conjunctive_path_of_constraint_over_property__enhanced_with_minimum_cardinality_constraint",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-the_path",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-massive_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-fig_._1",
      "skos:broader",
      "Entity-the_figure"
    ],
    [
      "Entity-logical_formalism",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-we_observe_an_expected_decrease_with_greater_cardinality_a_they_demand_tighter_restriction_to_be_satisfied",
      "skos:broader",
      "Entity-to_find"
    ],
    [
      "Entity-one_pair",
      "skos:broader",
      "Entity-rank"
    ],
    [
      "Entity-lemma",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-the_converse_of_op_rule",
      "skos:broader",
      "Entity-op"
    ],
    [
      "Entity-large_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-human__x_",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-a__pt____0_0_0__0_0_0__0_1_1_",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-e5",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-lemma",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-embeddings___we_additionally_compute_argument_embeddings",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-rdf",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-the_same_head_and_the_same_body_may_have_different_cardinality",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-a_kg_context"
    ],
    [
      "Entity-embeddings__",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open",
      "skos:broader",
      "Entity-predicate_of_the_head"
    ],
    [
      "Entity-p1__y__z_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_state-of-the-art_embedding-based_open_path_rule_learner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-our_deliberate_selection_of_type-like_unary_predicate_a_target_for_dbpedia_and_wikidata",
      "skos:broader",
      "Entity-dbpedia"
    ],
    [
      "Entity-these_threshold",
      "skos:broader",
      "Entity-threshold"
    ],
    [
      "Entity-space_of_possible_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-type_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-iopsc_determines_the_confidence_of_a_rule_based_on_counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-predicate_calculus",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-yago2s_with_4_million_fact",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-learning_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-unlike_cp_rule__op_rule_do_not_necessarily_form_a_loop",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-it_internal_knowledge_graph",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-the_support_for_an_iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-it_constituent_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-zi",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-meaning_that_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-the_count_is_1",
      "skos:broader",
      "Entity-output"
    ],
    [
      "Entity-it_constituent_iop_rule",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-name"
    ],
    [
      "Entity-person",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-each_entity_e_i_to_a_vector_e_i_in_rd",
      "skos:broader",
      "Entity-predicate_embeddings"
    ],
    [
      "Entity-shacl_tree",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-the_number_of_entity_pair_that_satisfy_the_body_in_the_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-then_standard_confidence",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_distribution",
      "skos:broader",
      "Entity-distribution"
    ],
    [
      "Entity-a_non-recursive_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-shacl_language"
    ],
    [
      "Entity-minimum_cardinality_constraint",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-the__i__j__-th_element_a__pk___i__j_",
      "skos:broader",
      "Entity-pk"
    ],
    [
      "Entity-rdf_database",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-rdf__type",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-the_path",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_head_of_the_rule_(1)",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-the_shape_constraint_language__shacl_"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-then_iopsc__r____iopsc__r__",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-logical_formalism",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-_1__we_propose_an_iop_rule_language_that_allows_u_to_mine_rule_with_open_variable__with_one_predicate_forming_the_body_and_a_chain_of_predicate_a_the_head_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_related_op_rule",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-basic_shacl"
    ],
    [
      "Entity-a_song_ha_at_least_2_producer",
      "skos:broader",
      "Entity-a_song__x_"
    ],
    [
      "Entity-the_validation_of_rdf_database",
      "skos:broader",
      "Entity-data_type_validation"
    ],
    [
      "Entity-entity_that_satisfy_the_head_of_the_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open",
      "skos:broader",
      "Entity-type_predicate"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-our_unary_predicate_and_fact"
    ],
    [
      "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-human__x_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-e_s",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_shape_(3)",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-the_head_of_the_rule_(1)",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-the_atomic_body",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-large_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-fact",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-inference_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-scalekb",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-cardinality_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-embeddings__",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-an_entity_x_is_a_song",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-three_very_different_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-dbpedia_3.8",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-deck_with_thirteen_rank_and_four_suit",
      "skos:broader",
      "Entity-card"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-paper"
    ],
    [
      "Entity-space_of_possible_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-human",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-formal_quality_measure_for_iop_rule",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-subject_and_object_argument_embeddings",
      "skos:broader",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-a_pair_of_entity_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-our_novel_tree_shape",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-an_iop_rule",
      "skos:broader",
      "Entity-iop"
    ],
    [
      "Entity-our_shaclearner_based_on_algorithm_1",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-this_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-cardinality_constraint_and_tree_shape",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-node_shape",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-_e__e1___...___e__eq_",
      "skos:broader",
      "Entity-a_pair_of_entity"
    ],
    [
      "Entity-head",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-an_argument_of_the_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-poker_hand",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-it",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-genre",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-rule_learner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-for_a_concrete_example",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-the_embedding_representation",
      "skos:broader",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-t",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-it_component__p___x__t_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_example",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-p2__z0__z1_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-the_quality_of_iop_rule",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-wikidataup",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-fgds_define_constraint_like_the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-sh",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-whole_path",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-an_op_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-unary_occupation_predicate",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-pt__x__z0__(1)",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-learning_path",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-pop_star",
      "skos:broader",
      "Entity-person"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-pt___x__z0_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-treescnew",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-model_type_and_class",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-occupation",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-treesupp",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-a_rule_are_closed",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_distribution_of_mined_rule",
      "skos:broader",
      "Entity-distribution"
    ],
    [
      "Entity-a_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open",
      "skos:broader",
      "Entity-the_predicate_argument"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-standard_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-greedysearch",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-semi-automatic_manner__it_provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-existential_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-kg_k",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-entity_that_satisfy_the_head_of_the_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_target_predicate_(1)",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-the_shape_(3)"
    ],
    [
      "Entity-sh__path",
      "skos:broader",
      "Entity-syntax"
    ],
    [
      "Entity-p__e__e__",
      "skos:broader",
      "Entity-binary_predicate"
    ],
    [
      "Entity-all_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-iop_rule_language",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-one_approach",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-conducted_experiment_to_assess_it",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-the_confidence_of_a_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a__p1____0_1_0__1_0_1__0_0_0_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-z1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-body",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-two_benchmark",
      "skos:broader",
      "Entity-benchmark"
    ],
    [
      "Entity-extremely_massive_kg_with_ten_of_billion_of_fact__such_a_the_most_recent_version_of_wikidata",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-k_(1)"
    ],
    [
      "Entity-deriving_shacl_tree",
      "skos:broader",
      "Entity-shape_tree"
    ],
    [
      "Entity-ontology_constraint_pattern",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-such_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-number",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-all_fact_related_to_them",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-hole_and_rescal",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-union__from_i1_to_l__of_ei",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-p2__e1__e2_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-head",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-p2__z0__z1_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-cardinality_of_a_path",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-depth-first_a_it_work_through_a_shape_tree",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-these_two_pruning_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-inverse_open_path_standard_confidence",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-related_work",
      "skos:broader",
      "Entity-work"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-shacl_shape_(1)",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-dbpedia_contains_predicate_where_the_second_argument_of_these_predicate_are_type_or_class",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-all_possible_iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-tree",
      "skos:broader",
      "Entity-phenomenon"
    ],
    [
      "Entity-for_each_entity_e_such_that_pt__e___e__hold",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e___",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-candidate_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-pt__x__y_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album",
      "skos:broader",
      "Entity-album"
    ],
    [
      "Entity-pt___x__z0_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-unary_occupation_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-treescnew",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-shacl_learning_method",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-shacl_learning_method",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-model_type_and_class",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_formalism_of_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-p___x__t___pt__x__y___p1__y__z___p2__z__t_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-whole_path",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-body_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-however__the_performance_of_our_system_show_that_it_can_handle_the_task_satisfactorily_and_can_be_applied_in_practice",
      "skos:broader",
      "Entity-application"
    ],
    [
      "Entity-simple_shape_pattern",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.",
      "skos:broader",
      "Entity-syntax"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-pt",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-class",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-one_approach",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-pruning_variant",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-such_a_k-cliques__closed_rule__cr___that_include_closed_path_rule___functional_graph_dependency__fgd___and_tree_.",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-learnt_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-designing_an_efficient_learning_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-graph_a_shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-kg-completion",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-sampling_method",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-lemma_1",
      "skos:broader",
      "Entity-lemma"
    ],
    [
      "Entity-inverse_open_path_support",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-these_figure",
      "skos:broader",
      "Entity-figure"
    ],
    [
      "Entity-additional_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_the_subject_and_object_binding_swapped_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-learnt_iop_rule",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-kg_or_it_reverse_with_subject_and_object_binding_swapped",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-p2__z0__z1___p3__z1__z2_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_mined_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-pt",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-e_is_an_identifier_for_an_object_such_a_a_place_or_a_person_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-schema_information_(1)",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-the_set_of_sampled_entity_for_a_target_predicate_will_be_of_size_2lfe_in_the_worst_case_.",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-let_r_(1)",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-using_rule",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-p0",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-v1",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-these_two_pruning_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-shaclearner_of_algorithm_1",
      "skos:broader",
      "Entity-an_identifier_for_an_object_such_a_a_place_or_a_person"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-p2__z1__y_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-entity_that_satisfy_target_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-algorithm_2",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-binary_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-p1__e__e1_",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-structural_feature_such_a_depth_and_width",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-define_schema_information_for_kg_stored_a_an_rdf_graph",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-the_shape_we_learn",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-sampling__shown_in_algorithm_2",
      "skos:broader",
      "Entity-the_sampling_method__first_introduced"
    ],
    [
      "Entity-fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-cardinality_constraint_and_tree_shape",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-high_quality_rule_meeting_minimum_quality_threshold_are_included_in_these_figure",
      "skos:broader",
      "Entity-threshold"
    ],
    [
      "Entity-their_cardinality",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-card",
      "skos:broader",
      "Entity-playing_card"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg_.",
      "skos:broader",
      "Entity-the_fact_in_the_kg"
    ],
    [
      "Entity-iop_rule_in_greedysearch",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_efficient_matrix-computation",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-all_binary_predicate_of_yago2s",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-whole_path",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-another_work",
      "skos:broader",
      "Entity-paper_(1)"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-our_novel_tree_shape",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-p1__p2__...__pm",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-shacl_semantics",
      "skos:broader",
      "Entity-semantics"
    ],
    [
      "Entity-the_sampling_method__first_introduced",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-iop_head_coverage",
      "skos:broader",
      "Entity-rule_quality"
    ],
    [
      "Entity-closed_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-designing_an_efficient_learning_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_two_type-like_predicate_from_dbpedia_3.8_and_the_one_from_wikidata",
      "skos:broader",
      "Entity-dbpedia"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-ideal__modified_shaclearner__-s-h_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-and_the_number_of_distinct_e_s_is_the_count_of_non-zero_element",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-the_computation_of_iopsc_and_iophc",
      "skos:broader",
      "Entity-iophc"
    ],
    [
      "Entity-iopsc_and_iophc",
      "skos:broader",
      "Entity-quality_measurement"
    ],
    [
      "Entity-definition_5",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-that_are_related_to_the_target_predicate_pt_.",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_size_of_the_problem",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-class",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-a_sequence_of_predicate_(1)",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-a__pt____0_0_0__0_0_0__0_1_1_",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-kg_or_it_reverse_with_subject_and_object_binding_swapped",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-new_unary_fact",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-subject_and_object_argument_embeddings",
      "skos:broader",
      "Entity-the_embedding"
    ],
    [
      "Entity-ev",
      "skos:broader",
      "Entity-person"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-standard_shacl_shape"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-country__z1__z1_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-real-world_kg_such_a_those_we_used_in_the_performance_evaluation",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-sh"
    ],
    [
      "Entity-the_validity_of_iop_rule_in_a_kg",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-_sh_",
      "skos:broader",
      "Entity-shaclearner"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-hc_measure_the_explanatory_power_of_the_rule",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-prior_sampling",
      "skos:broader",
      "Entity-sampling"
    ],
    [
      "Entity-a_deck_with_thirteen_rank_and_four_suit",
      "skos:broader",
      "Entity-deck"
    ],
    [
      "Entity-entity_that_occur_a_the_subject__respectively_object__of_p_k_in_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-length",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-correspond_to_shacl_shape"
    ],
    [
      "Entity-unifying_some_variable_that_occur_in_predicate_that_occur_in_multiple_branch",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-learnt_rule"
    ],
    [
      "Entity-our_proposed_system",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_shape_we_learn",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-_e__f___where_e_is_a_set_of_entity_and_f_is_a_set_of_fact",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-inverse_open_path_rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-shacl_semantics"
    ],
    [
      "Entity-learning_path",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-rule_pt__x__y__-__p1__y__z___p2__z__t_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-real-world_massive_knowledge_graph__kg_",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-_e___e_",
      "skos:broader",
      "Entity-pair"
    ],
    [
      "Entity-an_entity_which_ha_song_a_it_type",
      "skos:broader",
      "Entity-song"
    ],
    [
      "Entity-pt",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-the_intended_data-first_approach_of_kg_application",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-to_demonstrate",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-k___e__f_",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-formalisation_of_the_approach_is_given__but_there_are_no_shape_quality_measure_that_are_essential_for_large_scale_shape_mining",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-free_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-rule_language"
    ],
    [
      "Entity-a_knowledge_graph__kg_",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-treescorig",
      "skos:broader",
      "Entity-confidence"
    ],
    [
      "Entity-e4",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-the_first_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-quality_iop_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-type_predicate_for_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-the_entity_and_predicate_that_are_less_relevant_to_the_target_predicate",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-defined_threshold__treescmin_",
      "skos:broader",
      "Entity-threshold"
    ],
    [
      "Entity-an_entity_which_ha_song_a_it_type",
      "skos:broader",
      "Entity-an_entity_x_is_a_song"
    ],
    [
      "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.",
      "skos:broader",
      "Entity-subject_and_object_argument_embeddings"
    ],
    [
      "Entity-such_constraint_on_a_kg_a_shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-conjunctive_path_of_constraint_over_property",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-an_entity",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-shaclearner_of_algorithm_1",
      "skos:broader",
      "Entity-name"
    ],
    [
      "Entity-open_path_head_coverage_of_r",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-path",
      "skos:broader",
      "Entity-computing"
    ],
    [
      "Entity-rule_to_express_not_only_the_necessity_of_a_chain_of_fact__the_fact_in_the_head_of_the_iop_rule_",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-human__x__x__-__citizenof__x__z1___country__z1__z1_",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity--sh",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-twenty-eight",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-iop_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-class",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-let_r_be_an_annotated_iop_rule_of_the_form__4_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-an_op_rule_ha_two_open_variable__y_and_x",
      "skos:broader",
      "Entity-op_rule_(1)"
    ],
    [
      "Entity-investigate_the_application_of_shacl_shape_to_the_validation_of_rdf_database",
      "skos:broader",
      "Entity-data_type_validation"
    ],
    [
      "Entity-a_knowledge_graph__kg_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-property_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-the_number_of_entity_that_join_the_head_of_the_rule_to_it_body",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-father__x__z2_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-such_constraint_on_a_kg_a_shape",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-consider_the_iop_rule_r__pt__x__z0__-__p1__z0__x___p2__z1__y_",
      "skos:broader",
      "Entity-iop"
    ],
    [
      "Entity-graph_a_shape",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-p2_t__p1_1_and_p2_1__p2_1_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-human__z2_",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-_kg_",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-let_r_be_a_cp_rule_of_the_form__1_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-song",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-every_entity-instantiation_of_a_cp_rule_is_also_an_entity-instantiation_of_the_related_op_rule__but_not_vice_versa",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-our_proposed_system",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the__i__j__-th_element_a__pk___i__j_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-the_target_predicate_(1)",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-transforming_kg",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-learning_path",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-_3__we_propose_an_efficient_method_to_evaluate_iop_rule_and_tree_by_exactly_computing_the_quality_measure_of_each_rule_using_fast_matrix_and_vector_operation_.",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-iopsc_determines_the_confidence_of_a_rule_based_on_counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-p1__p2__...__pn",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-p1__z0__z1_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-embedding_learner"
    ],
    [
      "Entity-all_predicate_in_the_sampled_k_",
      "skos:broader",
      "Entity-sampling"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-v1__p1__p2_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-presenting_the_class_and_type_information",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-_e2__e3_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-e3",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-_2__we_introduce_cardinality_constraint_and_tree_shape_for_more_expressive_pattern_",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-the_expressivity_of_the_shape_we_can_discover",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-maximum_number_of_predicate",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-schema_information_(1)",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-the_paper",
      "skos:broader",
      "Entity-paper"
    ],
    [
      "Entity-an_argument_of_the_target_predicate",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-the_entity_and_predicate_that_are_less_relevant_to_the_target_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-breadth-first_manner",
      "skos:broader",
      "Entity-strategy"
    ],
    [
      "Entity-pop_star",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-second_argument",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-such_constraint_on_a_kg_a_shape",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_kg_for_valid_reason",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-new_fact",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-wikidataup",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-right-hand_tree",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-inverse_open_path_rule"
    ],
    [
      "Entity-section_6",
      "skos:broader",
      "Entity-section_2"
    ],
    [
      "Entity-for_(2)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_space_of_possible_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-record_label"
    ],
    [
      "Entity-shape_of_varying_complexity_and_diversity_with_respect_to_length_and_cardinality",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-pt__e__e__",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-a_song_ha_at_least_2_producer",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-our_unary_predicate_and_fact",
      "skos:broader",
      "Entity-unary_predicate_(2)"
    ],
    [
      "Entity-pt__x__y_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_number_of_rule__the_average_number_of_quality_iop_rule_found__the_proportion_of_target_predicate_for_which_at_least_one_iop_rule_wa_found__and_the_running_time_in_hour__averaged_over_the_target_.",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-_-s-h_",
      "skos:broader",
      "Entity-shaclearner"
    ],
    [
      "Entity-various_feature_value",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-shex",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-treesupp",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-atomic_body",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-they_can_also_be_used_more_traditionally_to_complete_missing_fact_for_a_target_predicate__a_well_a_other_predicate_related_to_the_target",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-a_kg_context"
    ],
    [
      "Entity-pathfinding_of_algorithm_1",
      "skos:broader",
      "Entity-pathfinding"
    ],
    [
      "Entity-weak_inference_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_occupation_all_have_very_similar_iop_rule_about_each_of_them_with_high_iopsc_and_low_iophc",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-self-loops",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-greedysearch",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-inference_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-an_entity_x_is_a_song",
      "skos:broader",
      "Entity-song"
    ],
    [
      "Entity-schema_information",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-universal_variable_in_the_body",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-for_a_small_complete_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-unary_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-pt",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-transforming_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_necessity_of_a_chain_of_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-inference_process_on_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_quality_of_a_kg",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-50_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-distinct_e_s_by_summing_each_row_of_this_product_to_obtain_the_vector_v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-such_a_k-cliques__closed_rule__cr___that_include_closed_path_rule___functional_graph_dependency__fgd___and_tree_.",
      "skos:broader",
      "Entity-k-cliques"
    ],
    [
      "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm_.",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-it_head_(1)",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-presenting_the_class_and_type_information",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_person_in_a_specific_use_case",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-x_and_z_i_are_variable_that_are_instantiated_by_entity",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_expressivity_of_the_shape_we_can_discover",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-algorithm_2",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-p2__z0__z1___p3__z1__z2_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-schema_information_(1)"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output_is_difficult_to_compare_with_the_iop_rule_which_we_use_in_this_paper",
      "skos:broader",
      "Entity-paper"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg_.",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-a_method_to_learn_shacl_shape_from_kg_a_a_way_to_describe_kg_pattern__to_validate_kg__and_also_to_support_new_data_entry_.",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-and_secondly_in_it_reverse_form__where_the_subject_argument_serf_to_connect_",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-a_frequent_pattern__the_shape_characterize_a_kg_and_can_be_used_for_subsequent_data_cleaning_or_ongoing_data_entry",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-a_kg_for_valid_reason",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-each_have_a_class_a_their_second_argument",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-rule_and_constraint"
    ],
    [
      "Entity-z2",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-certain_property_in_the_embedding_space",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-pt__x__y_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-an_op_rule_ha_two_open_variable__y_and_x",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-binary_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-in_line_2_embeddings__",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-a_fragment_of_a_39-branched_tree_mined_from_dbpedia_by_aggregating_iop_rule_in_the_experiment",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-the_effectiveness_of_our_shaclearner",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-rule_learner_to_the_maximum_length_of_rule",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-role__also_called_property__are_named_binary_predicate",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-ptq",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-open_path_head_coverage__ophc_",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-atomic_body",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-they_can_also_be_used_more_traditionally_to_complete_missing_fact_for_a_target_predicate__a_well_a_other_predicate_related_to_the_target",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-treescorig",
      "skos:broader",
      "Entity-novel_numerical_confidence_measure"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_set_of_such_entity_is__e2__e3__with_count_2",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-they_(3)",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-schema-free_database"
    ],
    [
      "Entity-dbpedia",
      "skos:broader",
      "Entity-some_real-world_massive_kg"
    ],
    [
      "Entity-existing_ontology",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-pt__e___e_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-interestingness_or_for_kg_verification",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-three_very_different_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_unary_predicate_human_in_fig_._2",
      "skos:broader",
      "Entity-the_class_and_type_information_a_unary_predicate"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-p2__z0__z1___p3__z1__z2_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-z_",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-inverse_open_path_standard_confidence__iopsc_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-inverse_open_path_standard_confidence",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-in_a_kg_context"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-the_shape_constraint_language__shacl_"
    ],
    [
      "Entity-subject_and_object_argument_embeddings",
      "skos:broader",
      "Entity-object_argument_embeddings"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-opsupp__r_",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-twenty-eight",
      "skos:broader",
      "Entity-number"
    ],
    [
      "Entity-a_sequence_of_predicate_(1)",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-z0",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-in_the_example__the_only_non-zero_element_in_a__pt__is_a__pt___1__3_",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-pruning_method",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-tree",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-their_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-the_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-dbpedia",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-doe_not_uniformly_increase_in_effectiveness_with_decreasing_rule_quality",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-country__z1__z1_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-any_instantiated_open_path_in_a_kg",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-_x__zi__y_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-denoted_pt__e___e___if_pt__e___e__is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-computer_scientist",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-shacl__the_shape_constraint_language"
    ],
    [
      "Entity-the_number_of_entity_that_join_the_head_of_the_rule_to_it_body",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-the_iop_rule",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-shaclearner_of_algorithm_1",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-our_learning_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-p2__z1__y_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-add_pathfinding__k___pt__p__a__k_",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-_2__we_introduce_cardinality_constraint_and_tree_shape_for_more_expressive_pattern_",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-a_set_of_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-with_entity_e_and_fact_f",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-the_effectiveness_of_our_shaclearner",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_pair_of_entity__e__e___satisfies",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-an_identifier_for_an_object_such_a_a_place_or_a_person",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-shacl_learning",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-pt__x__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-scalekb",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-graph_structure_learner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-rule_of_the_highest_quality",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-one_proposal",
      "skos:broader",
      "Entity-proposal"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-we_define_formal_quality_measure_for_iop_rule",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_sampling___method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-ideal_rule_learner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_related_op_rule",
      "skos:broader",
      "Entity-op_rule_(1)"
    ],
    [
      "Entity-meaning_that_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-every_entity-instantiation_of_a_cp_rule_is_also_an_entity-instantiation_of_the_related_op_rule__but_not_vice_versa",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-suit",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-our_algorithm",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-rule_and_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-designing_an_efficient_learning_method",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-inverse_open_path_standard_confidence",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-our_shaclearner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_goal_of_pruning_is_to_improve_the_computational_performance_without_missing_high-quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-shacl"
    ],
    [
      "Entity-three_very_different_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-the_maximum_length_of_rule",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-several_shape_each_for_various_target_predicate",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-country__z1__z1_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-p2__z0__z1___p3__z1__z2_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_number_of_entity_that_satisfy_the_body_of_the_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-embedding_learner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-and_human__x__x__-__nativelanguage__x__z3___language__z3__z3_",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-father__x__z2_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-triple_format",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-our_learning_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-iopsupp",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-some_real-world_massive_kg"
    ],
    [
      "Entity-schema_constraint",
      "skos:broader",
      "Entity-data_type_validation"
    ],
    [
      "Entity-and_human__x__x__-__nativelanguage__x__z3___language__z3__z3_",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-to_demonstrate_the_potential_for_these_kind_of_shape_to_serve_a_building_block_for_more_complex_tree__we_then_propose_a_method_that_build_tree_out_of_mined_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.",
      "skos:broader",
      "Entity-predicate_embeddings"
    ],
    [
      "Entity-rule_of_lower_quality",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-tree__treesupp__treesc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-op"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-for_a_mapreduce_implementation",
      "skos:broader",
      "Entity-mapreduce_implementation"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_novel_method_to_learn_high-quality_rule_from_kg",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-rule_of_the_highest_quality",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_tree_support_and_tree_standard_confidence_of_r",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-it_constituent_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-k_(1)",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-the_quality_of_a_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-they_work_with_a_small_amount_of_data",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-a_fragment_of_the_kg_k_",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-shape_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_fact_in_the_kg",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-human__x__x__-__citizenof__x__z1___country__z1__z1_",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-every_entity-instantiation_of_a_cp_rule_is_also_an_entity-instantiation_of_the_related_op_rule__but_not_vice_versa",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-they_generalise_well__that_is__they_explain_many_fact",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-method_to_aggregate_iop_rule_to_produce_tree_shape",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-learnt_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-iop_rule_that_are_learnt_by_ideal__modified_shaclearner__-s-h__with_no_pruning",
      "skos:broader",
      "Entity-shaclearner"
    ],
    [
      "Entity-shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-the_building_block",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-this_feature_is_important_since_learning_partially_instantiated_shape_can_cause_an_explosion_in_the_space_of_possible_shape",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-r1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-hc",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-ideal_learner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-prior_sampling",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_head_of_the_rule_(1)",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-sampling__k__pt_",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-confidence_widely_used_in_association_rule_mining",
      "skos:broader",
      "Entity-rule_quality"
    ],
    [
      "Entity-it_occurs_in_at_least_two_distinct_predicate_term__such_a_z0_here__and_otherwise_it_is_open",
      "skos:broader",
      "Entity-predicate_term"
    ],
    [
      "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_subject_and_object_binding_swapped__and_free_variable_are_universally_quantified_at_the_outside_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-a_small_amount_of_data",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-father__x__z2_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-the_mined_iop_rule",
      "skos:broader",
      "Entity-an_iop_rule"
    ],
    [
      "Entity-we_choose_to_model_type_and_class_with_unary_predicate",
      "skos:broader",
      "Entity-unary_predicate"
    ],
    [
      "Entity-self-loops",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-ontology_constraint_pattern",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-an_example_of_tree_shape_learning",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-presentation"
    ],
    [
      "Entity-three_entity__e3__e4__e5_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-this_completion_strategy_is_depth-first_a_it_work_through_a_shape_tree_.",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-new_predicate_from_fact_in_the_form__where_x_is_the_name_of_an_album",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-p3",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-certain_property_in_the_embedding_space",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-the_third_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-hole_and_rescal",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-both_kind_of_error_can_be_highlighted_for_correction_by_a_careful_application_of_schema_constraint",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-cover",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-head_r__e__e__",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-they_are_typically_incomplete",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-unary_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-iopsc_determines_the_confidence_of_a_rule_based_on_counting_the_proportion_of_target_predicate_instance_for_which_the_rule_hold_true_in_the_kg",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-p1__p2__...__pn",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-iop_rule_with_up_to_l_atom__including_the_specific_body_target_predicate__pt_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-then_we_produce_new_unary_fact_based_on_the_new_predicate_and_related_fact",
      "skos:broader",
      "Entity-our_unary_predicate_and_fact"
    ],
    [
      "Entity-the_set_of_such_entity_is__e2__e3__with_count_2",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-pruning_variant",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-logical_formalism"
    ],
    [
      "Entity-body_r",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_shape_(2)",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-in_line_2_embeddings__",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-we_sum_each_column_and_transpose_to_obtain_the_vector_v2__pt_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-50_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-kg-completion",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-it_low_iopsc",
      "skos:broader",
      "Entity-iopsc"
    ],
    [
      "Entity-our_sampling_method_that_creates_a_kg_that_is_customised_for_the_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-pruning_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-x",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-the_representation_formalism_they_use_for_their_output",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_set_of_rule_and_shape_are_provided",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-human__x_",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-uncertainty",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-an_example",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-a_non-recursive_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rescal__in_embeddings",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-_-s-h_",
      "skos:broader",
      "Entity-iop_rule_learner"
    ],
    [
      "Entity-closed_path_rule",
      "skos:broader",
      "Entity-rule_language"
    ],
    [
      "Entity-the_distribution_(1)",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-a_tree_is_discovered_for_each_argument_of_each_target_predicate",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.",
      "skos:broader",
      "Entity-presentation"
    ],
    [
      "Entity-detect_which_shape_could_be_violated_by_applying_a_rule",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-a_fragment_of_the_kg_k_",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-each_element_with_value___car_indicates_a_satisfying_e__and_the_count_of_distinct_e_s_is_the_count_of_non-zero_element_in_that_vector",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-line_8_of_algorithm_1",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-capturing_shape_with_varying_confidence__length__and_cardinality_from_various_real-world_massive_knowledge_graph__kg_",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-the_building_block",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-feature",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-shacl_shape_(2)"
    ],
    [
      "Entity-entity_that_satisfy_the_first_argument_of_the_head",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-both_well-defined_semantics_and_motivating_use_case",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-the_rule_(2)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-path2",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-graph_structure_learner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-shacl_semantics"
    ],
    [
      "Entity-the_largest_proportion_of_rule_ha_a_cardinality_of_1",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-breadth-first_manner",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_converse_of_op_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-citizenof__x__y___-_livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-occupation_such_a_singer_or_entrepreneur",
      "skos:broader",
      "Entity-occupation"
    ],
    [
      "Entity-ptq",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-all_predicate_in_the_sampled_k_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a__pt____0_0_0__0_0_0__0_1_1_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-a_kg_for_valid_reason"
    ],
    [
      "Entity-for_example__we_should_have_the_following_similarity_",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-e5",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-each_card_is_described_using_two_attribute__suit_and_rank",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-the_subject_argument_of_the_body_predicate",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-measure_support",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-using_self-loop_link",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-both_kind_of_error_can_be_highlighted_for_correction_by_a_careful_application_of_schema_constraint",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-predicate_p_k",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-our_shaclearner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-paper_(1)"
    ],
    [
      "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm_.",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-nativelanguage__x__z3___language__z3_",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-the_small_poker_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-treescnew",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-a_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_tree_support_and_tree_standard_confidence_of_r",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-our_unary_predicate_and_fact",
      "skos:broader",
      "Entity-unary_predicate"
    ],
    [
      "Entity-the_head_of_the_rule_(1)",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-all_binary_predicate_of_yago2s",
      "skos:broader",
      "Entity-yago2s"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-threshold"
    ],
    [
      "Entity-p2__e1__e2_",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-experiment_to_assess_it",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-kg_k_"
    ],
    [
      "Entity-uncertainty",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-birth_date",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-cr",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-define_schema_information_for_kg_stored_a_an_rdf_graph",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-for_a_kg_k_with_entity_e_and_fact_f",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-the_object_argument_of_the_last_predicate",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-the_original_predicate_and_fact_in_the_kg_a_well_a_extending_it_with_our_new_one",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-a_path_is_a_sequence_of_predicate_connected_by_closed_intermediate_variable_but_terminating_with_open_variable_at_both_end_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-then_a_set_of_pair_of_entity__e__e1___...___e__eq__satisfies_the_head_of_r__denoted_headr__e__",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-the_number_of_entity_that_satisfy_the_body_of_the_rule",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-this_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-each_p__i_is_either_a_predicate_in_the_kg_or_it_reverse_with_subject_and_object_binding_swapped__and_free_variable_are_universally_quantified_at_the_outside_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-to_compute",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-generality",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-based_on_the_new_predicate_and_related_fact",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-inverse_open_path_head_coverage_of_r",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-a_knowledge_graph__kg_",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-livesin__mary__canberra_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-ideal__modified_shaclearner__-s-h_",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-nativelanguage__x__z3_",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-maximum_number_of_predicate",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-suppr",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-inverse_open_path_head_coverage__iophc_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-to_entity_forming_the_object_argument_of_the_last_predicate__p2",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-kg_rule-learning_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-such_constraint_on_a_kg_a_shape",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-data",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-learnt_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-with_iopsc_greater_than_or_equal_to_0.9",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-shacl_semantics"
    ],
    [
      "Entity-hc",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-in_the_example__the_only_non-zero_element_in_a__pt__is_a__pt___1__3_",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-an_adjacency_matrix_representation_of_the_kg",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-association_rule_mining",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-shacl_learning"
    ],
    [
      "Entity-what_proportion_of_the_fact_satisfying_the_head_of_the_rule_could_be_inferred_by_satisfying_the_rule_body_",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-shaclearner__shown_in_algorithm_1",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg_such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e____are_fact_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-_e__f___where_e_is_a_set_of_entity_and_f_is_a_set_of_fact",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-ideal_learner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-it",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-unary_predicate_of_the_form_p__e_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-this_sampling",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-a_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_intended_data-first_approach_of_kg_application",
      "skos:broader",
      "Entity-data-first_approach"
    ],
    [
      "Entity-every_path_from_the_target_predicate_terminating_at_a_node_in_the_tree",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-yago2s_with_4_million_fact",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-increasing_iophc",
      "skos:broader",
      "Entity-phenomenon"
    ],
    [
      "Entity-open_path_rule_learner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_fact_that_e1_ha_relation_p0_with_e2",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-name",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-benchmark"
    ],
    [
      "Entity-potential_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-learned_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-it_internal_knowledge_graph",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-heuristic_function_that_inform_the_generation_of_iop_rule_bounded_by_a_maximum_length",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-cr",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-target_predicate_pt",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-a_kg_context",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-our_pruning_technique",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1__",
      "skos:broader",
      "Entity-sequence"
    ],
    [
      "Entity-_open_path__opsupp__opsc__ophc_",
      "skos:broader",
      "Entity-opsupp"
    ],
    [
      "Entity-each_iop_rule_or_tree",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-benchmark_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-inverse_open_path_head_coverage_of_r",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-occupation",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-the_satisfaction_of_a_less-constrained_shape",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-op_rule_are_used_since_they_imply_the_existence_of_a_fact__like_spouse__x__y___z_child__x__z_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-p___x__t_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-_1__we_propose_an_iop_rule_language_that_allows_u_to_mine_rule_with_open_variable__with_one_predicate_forming_the_body_and_a_chain_of_predicate_a_the_head_",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-each_have_a_class_a_their_second_argument",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-an_ideal_iop_rule_learner",
      "skos:broader",
      "Entity-rule_learner"
    ],
    [
      "Entity-a_greedy_search",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-one_proposal",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-those_vector",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-shacl_shape_from_kg",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-branch",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-such_constraint_on_a_kg_a_shape",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-rescal__in_embeddings",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-shacl_learning_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-hc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-and_briefly_discus_the_application_of_such_tree_to_kg_completion",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-a_formalisation",
      "skos:broader",
      "Entity-formalisation"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-shacl_shape"
    ],
    [
      "Entity-definition_4",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-resource_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-a_variable_closed",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-a_kg_context"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_body_and_the_head_are_both_satisfied_in_the_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-minimum_quality_threshold",
      "skos:broader",
      "Entity-threshold"
    ],
    [
      "Entity-this_sampling",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-at_least_one_producer",
      "skos:broader",
      "Entity-producer"
    ],
    [
      "Entity-pathq",
      "skos:broader",
      "Entity-branch"
    ],
    [
      "Entity-potential_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-to_assess",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-heuristic_function_that_inform_the_generation_of_iop_rule_bounded_by_a_maximum_length",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-treescorig",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-sampling_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-head_of_the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-iophc",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-another_work",
      "skos:broader",
      "Entity-paper"
    ],
    [
      "Entity-a_reduced_set_of_candidate_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-whether_collaboratively_or_individually__manually_or_automatically",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-potential_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-wikidata_with_8_million_fact",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-livesin__mary__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-support",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-heuristic_function_that_inform_the_generation_of_iop_rule_bounded_by_a_maximum_length",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-table_2",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-these_kind_of_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-our_unary_predicate_and_fact",
      "skos:broader",
      "Entity-unary_predicate_(1)"
    ],
    [
      "Entity-learning_path",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-type_predicate_for_experiment",
      "skos:broader",
      "Entity-this_experiment"
    ],
    [
      "Entity-a_fact",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-property_shape"
    ],
    [
      "Entity-miniopsc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-a_reduced_set_of_candidate_iop_rule",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-head_coverage",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-our_shape_learning_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-an_instance_of_the_head",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-confidence",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-rdf__type",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-pt",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-p3",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-number_of_quality_rule_mined",
      "skos:broader",
      "Entity-output"
    ],
    [
      "Entity-each_card",
      "skos:broader",
      "Entity-card"
    ],
    [
      "Entity-for_the_example",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-we_could_have_three_version_of_r__namely_r1__r2__and_r3",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_proportion_of_mined_rule_having_the_various_feature_value_is_presented",
      "skos:broader",
      "Entity-output"
    ],
    [
      "Entity-annotated_iop_rule_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-head_r__e__e__",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-one_proposal",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-shaclearner__-sh_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-our_shape_describe_conjunctive_path_of_constraint_over_property__enhanced_with_minimum_cardinality_constraint",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-iop_rule_with_up_to_l_atom__including_the_specific_body_target_predicate__pt_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-add_pathfinding__k___pt__p__a__k_",
      "skos:broader",
      "Entity-pathfinding"
    ],
    [
      "Entity-branch",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-benchmark"
    ],
    [
      "Entity-learning",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-subgraph"
    ],
    [
      "Entity-rule_induced_from_path_that_have_a_straightforward_interpretation_a_shape",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-e4",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-iop_rule_discovered_in_the_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-the_body_and_the_head_are_both_satisfied_in_the_kg",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-cr_are_used_for_inferring_new_fact_.",
      "skos:broader",
      "Entity-application"
    ],
    [
      "Entity-procedural_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-universal_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-next_step",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-learning_partially_instantiated_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-to_assess",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-their_method_for_comparison_purpose",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-universal_variable_in_the_body",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-treesc",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-shacl_language"
    ],
    [
      "Entity-livesin__mary__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-classic_version",
      "skos:broader",
      "Entity-earlier_work"
    ],
    [
      "Entity-a_fact",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-there_is_a_relationship_between_the_logical_statement_of_the_rule_and_certain_property_in_the_embedding_space_.",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-fig_._1",
      "skos:broader",
      "Entity-figure"
    ],
    [
      "Entity-it_head",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-a_fact__also_known_a_a_link_",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-manual_mode",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-shacl_learning_method",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-note_that",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-suppr",
      "skos:broader",
      "Entity-number"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-this_completion_strategy_is_depth-first_a_it_work_through_a_shape_tree_.",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-our_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-the_last_row",
      "skos:broader",
      "Entity-row"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-for_a_kg_k_with_entity_e_and_fact_f"
    ],
    [
      "Entity-the_shape_of_fig_._2",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-person_even_though_there_is_no_explicit_person_type_in_our_kg",
      "skos:broader",
      "Entity-person"
    ],
    [
      "Entity-predicate_p_k",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-the_semantics_of_the_shacl_language",
      "skos:broader",
      "Entity-shacl"
    ],
    [
      "Entity-once_in_the_straight_form__where_the_object_argument_of_the_predicate_is_the_common_variable_to_connect_the_head_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-large_kg_have_no_available_shape_constraint",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-the_matrix_a__pt_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-sh__nodeshape",
      "skos:broader",
      "Entity-input_ontology"
    ],
    [
      "Entity-kg_k",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-for_example_(1)",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-our_pruning_technique",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-further",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-free_variable_are_universally_quantified_at_the_outside",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-z2",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-sh__property",
      "skos:broader",
      "Entity-input_ontology"
    ],
    [
      "Entity-procedural_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-quality_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-fgds",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-next_step",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-pt__e__e__",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-nativelanguage__x__z3___language__z3_",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-once_in_the_straight_form__where_the_object_argument_of_the_predicate_is_the_common_variable_to_connect_the_head_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-quality_measure_that_are_novel_for_shaclearner",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-shape_we_learn",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-in_line_2_embeddings__",
      "skos:broader",
      "Entity-subject_and_object_argument_embeddings"
    ],
    [
      "Entity-a_greedy_search",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-k_(1)"
    ],
    [
      "Entity-in_order_to_discover_more_complex_shape__that_is__tree_.",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-only_e2_satisfies_the_rule",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-entity",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-kg_itself"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-album_y",
      "skos:broader",
      "Entity-album"
    ],
    [
      "Entity-for_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_quality_of_iop_rule",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-the_body_of_the_rule_is_pt__and_it_head_is_the_sequence_of_predicate_p1__p2__...__pn",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-ev",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-input_ontology",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-quality_measurement"
    ],
    [
      "Entity-to_entity_forming_the_object_argument_of_the_last_predicate__p2",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-the_quality_of_iop_rule",
      "skos:broader",
      "Entity-iop_rule"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-the_shape_constraint_language__shacl_"
    ],
    [
      "Entity-shape",
      "skos:broader",
      "Entity-existing_ontology"
    ],
    [
      "Entity-rescal_to_embed_each_entity_e_i_to_a_vector_e_i_in_rd_and_each_predicate_p_k_to_a_matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-their_data-first_approach",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-iop"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_necessity_of_a_chain_of_fact",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-matrix_p_k_in_r__d_x_d_",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-_e___e_",
      "skos:broader",
      "Entity-a_pair_of_entity"
    ],
    [
      "Entity-the_shape",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-the_shape_constraint_language",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-predicate_p_k",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-p3",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-distinct_e_s_(1)",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-to_find",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-basic_shacl",
      "skos:broader",
      "Entity-shacl__the_shape_constraint_language"
    ],
    [
      "Entity-the_first_annotation_value__0.13__present_the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-a_non-recursive_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-shaclearner_of_algorithm_1",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-that_build_tree_out_of_mined_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-iop_rule_with_up_to_l_atom__including_the_specific_body_target_predicate__pt_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-unary_predicate_of_the_form_p__e_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-human-kg-completion",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-each_tree_we_employ_a_greedy_search__greedysearch",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-n_x_n_adjacency_matrix",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-birthplace",
      "skos:broader",
      "Entity-input_ontology"
    ],
    [
      "Entity-the_annotation_of_the_branch_at_the_terminating_node",
      "skos:broader",
      "Entity-branch"
    ],
    [
      "Entity-consisting_of_a_bounded_number_of_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-property_shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-each_argument_of_each_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-quality_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-target_predicate_pt",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-semi-automatic_manner__it_provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_shacl_shape",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-fgds",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-an_identifier_for_an_object_such_a_a_place_or_a_person",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-shape_we_learn",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-mined_rule_with_respect_to_their_cardinality",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-p2_t",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-ev",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-various_length__cardinality__and_quality",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-we_define_formal_quality_measure_for_iop_rule",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-for_an_example",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-p___x__t_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-kg_automatically_by_predicting_missing_fact",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-the_adjacency_matrix",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-shape_learning_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-that_have_the_same_variable_in_the_rule_should_have_similar_argument_embeddings_.",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-new_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_distribution_of_mined_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-this_tree_can_be_read_a_saying_that_a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-now",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-mined_rule_with_respect_to_their_length",
      "skos:broader",
      "Entity-length"
    ],
    [
      "Entity-cardinality_of_an_iop_rule__car",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-_e__e1_",
      "skos:broader",
      "Entity-pair"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_sc_of_the_tree_and_the_subsequent_value_at_the_beginning_of_each_branch_indicate_the_branch_cardinality",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-the_rule_(1)",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-to_find",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-treesc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-p1__x__z1_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-an_expected_decrease_with_greater_cardinality_a_they_demand_tighter_restriction_to_be_satisfied",
      "skos:broader",
      "Entity-phenomenon"
    ],
    [
      "Entity-standard_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_(2)"
    ],
    [
      "Entity-shacl__the_shape_constraint_language",
      "skos:broader",
      "Entity-language"
    ],
    [
      "Entity-human-kg-completion",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-in_comparison_with_the_ideal_rule_learner__shaclearner__-s-h__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_subject__respectively_object__argument_embeddings_of_a_predicate_p_k",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-we_introduce_inverse_open_path__iop__rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_occupation",
      "skos:broader",
      "Entity-occupation"
    ],
    [
      "Entity-annotated_iop_rule",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-open_path_rule_learner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-p1__x__z0_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-property_shape",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-inverse_open_path_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-five_playing_card",
      "skos:broader",
      "Entity-card"
    ],
    [
      "Entity-a_novel_numerical_confidence_measure",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-section_3",
      "skos:broader",
      "Entity-this_section"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-the_denominator_of_iopsc__r_",
      "skos:broader",
      "Entity-iopsc"
    ],
    [
      "Entity-fact_related_to_them",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-p__1",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-pt_(1)",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-scalekb",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-an_embedding_learner",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-the_shape",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-hole_and_rescal",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-_s-h_",
      "skos:broader",
      "Entity-shaclearner"
    ],
    [
      "Entity-target_predicate_pt",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-ideal_rule_learner",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-correspond_to_shacl_shape"
    ],
    [
      "Entity-be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-tree_shape",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-rule-learning_method",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-at_least_44__of_iop_rule_are_pruned",
      "skos:broader",
      "Entity-pruning_method"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-car_value",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-the_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg_.",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-inverse_open_path_standard_confidence",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-rule_quality_measure"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-schema-free_knowledge_base"
    ],
    [
      "Entity-now",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-hc",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_rule_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_state-of-the-art_embedding-based_open_path_rule_learner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_explanatory_power_of_the_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-such_constraint_on_a_kg_a_shape",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-and_human__x__x__-__nativelanguage__x__z3___language__z3__z3_",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-k___e__f_",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-this_feature_is_important_since_learning_partially_instantiated_shape_can_cause_an_explosion_in_the_space_of_possible_shape",
      "skos:broader",
      "Entity-feature_value"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_with_different_complexity__including_nested_pattern_that_are_similar_to_the_tree_that_we_use"
    ],
    [
      "Entity-a_human_expert",
      "skos:broader",
      "Entity-person"
    ],
    [
      "Entity-using_heuristic_pruning_alone_in__-sh_",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-presenting",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-for_the_example",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-the_established_approach_for_evaluating_kg_rule-learning_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-treescmin",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-unary_predicate_that_can_act_a_class_or_type_constraint",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-all_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-nine_different_rank",
      "skos:broader",
      "Entity-rank"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-some_real-world_massive_kg"
    ],
    [
      "Entity-predicate_and_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-pruning_method",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-constraint",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_head_of_the_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-treescmin_parameter",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-not-null_and_other_schema-based_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-the_performance_of_the_shaclearner__-sh_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-that_build_tree_out_of_mined_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-this_section",
      "skos:broader",
      "Entity-section_2"
    ],
    [
      "Entity-shaclearner__-sh_",
      "skos:broader",
      "Entity-rule_learning_system"
    ],
    [
      "Entity-an_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-each_tree_we_employ_a_greedy_search__greedysearch",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_set_of_rule_and_shape_are_provided",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-additional_head_predicate_are_included",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-five_hundred_poker_hand",
      "skos:broader",
      "Entity-poker_hand"
    ],
    [
      "Entity-citizenof",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_path_p1__p2__...__pm",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-shacl_learning",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-these_constraint",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-cover_which_is_widely_used_for_rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-for_a_mapreduce_implementation",
      "skos:broader",
      "Entity-mapreduce"
    ],
    [
      "Entity-every_entity-instantiation",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-each_non-zero_element_indicates_a_satisfying_e",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-we_represent_k_a_a_set_of_square_n_x_n_adjacency_matrix",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-once_in_the_straight_form__where_the_object_argument_of_the_predicate_is_the_common_variable_to_connect_the_head_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-sh"
    ],
    [
      "Entity-closed-path_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-doe_not_uniformly_increase_in_effectiveness_with_decreasing_rule_quality",
      "skos:broader",
      "Entity-to_find"
    ],
    [
      "Entity-the_explanatory_power_of_the_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_knowledge_graph__kg_",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-using_heuristic_pruning_alone_in__-sh_",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-presenting",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-our_novel_tree_shape",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-e_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_established_approach_for_evaluating_kg_rule-learning_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-head_coverage",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iop_rule_express_simple_shape_pattern",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-fullhouse__x_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-from_definition_4__iophc__r1___22_and_iopsc__r1___22",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-shacl_semantics"
    ],
    [
      "Entity-several_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-iopsc_value",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-element_with_a_value___car_for_rule_with_cardinality_car",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-candidate_shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-rule_found",
      "skos:broader",
      "Entity-to_find"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-a__pt__(1)",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-the_power_of_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_kg_for_valid_reason",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-ideal__modified_shaclearner__-s-h_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_original_predicate_and_fact_in_the_kg_a_well_a_extending_it_with_our_new_one",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-horn",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-graph_database"
    ],
    [
      "Entity-embedding_learner",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-benchmark_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-for_example_(1)",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-embedding_learner"
    ],
    [
      "Entity-alternative_formalism",
      "skos:broader",
      "Entity-formalism"
    ],
    [
      "Entity-confidence_treescorig",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-163_rule_learnt_by_ideal_rule_learner__shaclearner__-s-h__",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-car__r_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-a_the_iopsc_increase",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_common_representation_for_this_work_that_clearly_distinguishes_entity_and_predicate",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iop_head_coverage",
      "skos:broader",
      "Entity-rule_quality_measure"
    ],
    [
      "Entity-formalisation",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-a_predicate_logic_formalism_which_present_specific_shape_in_the_form_of_path_over_connected_entity_that_are_present_in_a_kg_.",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-a_kg_context"
    ],
    [
      "Entity-novel_tree_shape",
      "skos:broader",
      "Entity-tree_shape"
    ],
    [
      "Entity-quality_measure_that_are_novel_for_shaclearner",
      "skos:broader",
      "Entity-shaclearner"
    ],
    [
      "Entity-this_tree_can_be_read_a_saying_that_a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-the_body_of_r_(1)",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-in_line_2_embeddings__",
      "skos:broader",
      "Entity-predicate_embeddings"
    ],
    [
      "Entity-the_quality_of_a_kg",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-x_should_belong_to_an_album_that_ha_y_a_record_label",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-it_doe_not_perform_any_kind_of_data_type_validation",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-composite_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-shacl_learning_problem",
      "skos:broader",
      "Entity-shacl__the_shape_constraint_language"
    ],
    [
      "Entity-shacl_semantics",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-cover_which_is_widely_used_for_rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-we_represent_k_a_a_set_of_square_n_x_n_adjacency_matrix",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-within_a_sh__property_declaration",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-citizenof__x__z1___country__z1_",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__e__n-1__in_the_kg_such_that_all_of__p1__e__e1___p2__e1__e2___...__pn__e__n-1___e____are_fact_in_the_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-predicate_and_entity_(2)",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_class_and_type_information_a_unary_predicate",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-inference_process_on_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-free_variable_are_universally_quantified_at_the_outside",
      "skos:broader",
      "Entity-universal_quantification"
    ],
    [
      "Entity-fact_related_to_them",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-the_size_of_the_problem_significantly__a_discussed_.",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-branch_in_the_mined_tree",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-kg-completion",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-k___e__f_",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-schema_information"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-the_row_index_of_element_with_value___car_of_v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-v1"
    ],
    [
      "Entity-head_coverage",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_first_row",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-iop_standard_confidence",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-certain_property_in_the_embedding_space",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-union__from_i1_to_l__of_ei",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-in_which_rule_have_one_body_atom_and_a_chain_of_conjunctive_atom_in_the_head_with_a_specific_variable_binding_pattern",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.",
      "skos:broader",
      "Entity-triple_format"
    ],
    [
      "Entity-informative_and_intuitive_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-p2_1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-several_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-candidate_shape",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-subject_and_object_argument_embeddings",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-experiment_to_assess_it",
      "skos:broader",
      "Entity-this_experiment"
    ],
    [
      "Entity-converse",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-capitalof",
      "skos:broader",
      "Entity-input_ontology"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-yago2s__wikidata__and_dbpedia",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-to_entity_forming_the_object_argument_of_the_last_predicate__p2",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-characteristic_of_discovered_tree",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-use_existing_ontology_for_kg_to_generate_shacl_shape_.",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-the_fact_in_the_kg",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-an_embedding_learner",
      "skos:broader",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-role__also_called_property__are_named_binary_predicate",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-entity_satisfying_the_subject_argument_of_the_body_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_embedding_representation",
      "skos:broader",
      "Entity-embedding_space"
    ],
    [
      "Entity-shacl_learning",
      "skos:broader",
      "Entity-learning_method"
    ],
    [
      "Entity-horn",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-it_binary_predicate_a_target",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-length",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-we_will_typically_retain_and_action_only_the_highest_quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-pathfinding_of_algorithm_1",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-benchmark_kg",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-shacl_learning_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_body_of_the_rule_is_pt__and_it_head_is_the_sequence_of_predicate_p1__p2__...__pn",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-iop",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-this_simple_approach",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-entity_instance_of_a_binary_fact",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-each_kg_is_defined_by_the_number_of_target_predicate_for_which_we_have_at_least_one_iop_rule",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-inference_rule"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-e3",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-open_path_rule_learning_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-learnt_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-predicate_logic_formalism"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-quality_measure_that_indicate_confidence_and_generality",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-to_find_distinct_e_s",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-p1__x__z1_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-existing_ontology_for_kg",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-type_predicate_for_experiment",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-between_op_and_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_interaction_between_inference_rule_and_shacl_shape_in_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-the_subject__respectively_object__argument_embeddings_of_a_predicate_p_k",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-sampling__",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-formalisation",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-an_op_rule_ha_two_open_variable__y_and_x",
      "skos:broader",
      "Entity-op"
    ],
    [
      "Entity-sampling_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-and_the_number_of_distinct_e_s_is_the_count_of_non-zero_element",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-dbpedia",
      "skos:broader",
      "Entity-real-world_massive_knowledge_graph__kg_"
    ],
    [
      "Entity-human_expert",
      "skos:broader",
      "Entity-person"
    ],
    [
      "Entity-car_indicates_a_satisfying_e",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-p1__x__z0_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-z1",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-two_open_variable__y_and_x",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-the_following_three_iop_rule_mined_from_dbpedia_in_the_experiment",
      "skos:broader",
      "Entity-this_experiment"
    ],
    [
      "Entity-kg-completion",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-derive_shape_that_can_be_trivially_expressed_in_a_fragment_of_shacl",
      "skos:broader",
      "Entity-shacl__the_shape_constraint_language"
    ],
    [
      "Entity-knowledge_panel",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-rescal__in_embeddings",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-what_proportion_of_the_fact_satisfying_the_head_of_the_rule_could_be_inferred_by_satisfying_the_rule_body_",
      "skos:broader",
      "Entity-proportion"
    ],
    [
      "Entity-livesin__mary__canberra_",
      "skos:broader",
      "Entity-a_fact"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-op_and_iop_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-mined_tree",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-a_song__x__to_have_at_least_one_producer",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-pt_(1)",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-exists__z1__...__z__n-1___y_",
      "skos:broader",
      "Entity-universal_quantification"
    ],
    [
      "Entity-shape_quality_measure",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-converse",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-building_block_for_more_complex_tree",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-human__z2__z2_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-correspond_to_shacl_shape"
    ],
    [
      "Entity-that_can_be_augmented_with_minimum_cardinality_constraint_and_also_used_a_a_building_block_for_more_complex_shape__such_a_tree_and_other_rule_pattern_.",
      "skos:broader",
      "Entity-shape"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-we_then_propose_a_method",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-subject_argument",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_kg_itself",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-closed-path_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-birthplace",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-the_shape_are_used_to_guide_the_population_of_a_kg",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-concept_or_class_membership",
      "skos:broader",
      "Entity-class"
    ],
    [
      "Entity-the_approach_is_given",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-esample",
      "skos:broader",
      "Entity-through_an_example"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-open_path"
    ],
    [
      "Entity-we_report",
      "skos:broader",
      "Entity-paper"
    ],
    [
      "Entity-and_propose_a_novel_method_to_learn_high-quality_rule_from_kg_.",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-shaclearner",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-in_the_worst_case__the_sampled_kg_is_the_same_a_the_original_kg__but_real-world_kg_are_sparse_with_only_a_very_small_proportion_of_entity_associated_with_any_predicate_within_distance_l_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-language__z3__z3_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-their_method",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-shacl_shape",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-the_kg_itself"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-sampling__",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-unary_predicate_may__but_are_not_limited_to__represent_class_assertion_expressed_in_an_rdf_triple_a__e__rdf__type__p__where_p_is_a_class_or_a_datatype_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-album"
    ],
    [
      "Entity-it_(1)",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-p1__x__z0_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-unary_predicate_that_can_act_a_class_or_type_constraint",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_song_to_have_at_least_two_producer",
      "skos:broader",
      "Entity-a_song__x_"
    ],
    [
      "Entity-meaning_that_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-shaclearner_with_regard_to_the_quality_and_quantity_of_learnt_rule",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-p1__z0__z1_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-car",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-rule_quality"
    ],
    [
      "Entity-a_common_representation_for_this_work_that_clearly_distinguishes_entity_and_predicate",
      "skos:broader",
      "Entity-the_embedding_representation"
    ],
    [
      "Entity-a_high-scoring_candidate_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-we_show_how_to_build_high-quality_tree_shape_from_the_iop_rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-rule_and_shape",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-pt",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-w3c_recommendation"
    ],
    [
      "Entity-about_the_predicate_of_the_head",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-inverse_open_path",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-path_shape",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-for_the_subject_argument_and_the_object_argument_of_each_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity--sh",
      "skos:broader",
      "Entity-pruning_method"
    ],
    [
      "Entity-predicate_and_entity_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-entity_that_satisfy_the_second_argument_of_the_body",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-all_rule_that_bind_the_subject_argument",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-semantics",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-a_song_ha_an_album_with_a_record_label__an_album_with_two_producer__an_album_with_a_genre__and_an_artist_who_is_a_musical_artist",
      "skos:broader",
      "Entity-artist"
    ],
    [
      "Entity-we_then_propose_a_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_pair__e__e___satisfying_the_head_are_connected_by_the_path_p1__p2__...__pm",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-additional_head_predicate_are_included",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-human",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-validate_a_kg",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-the_shape_(1)",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-s",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-real-world_massive_knowledge_graph__kg_"
    ],
    [
      "Entity-birthplace",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-a_kg_context"
    ],
    [
      "Entity-this_(1)",
      "skos:broader",
      "Entity-certain_property"
    ],
    [
      "Entity-learned_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_object_argument_of_the_last_predicate",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-conjunctive_path_of_constraint_over_property",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-each_element",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-ev",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-citizenof__x__z1_",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-yago",
      "skos:broader",
      "Entity-a_kg_(1)"
    ],
    [
      "Entity-the_class_and_type_information_a_unary_predicate",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-a_state-of-the-art_embedding-based_open_path_rule_learner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-type_information",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-a_reduced_set_of_candidate_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-open_path_rule_learner__oprl_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-they_can_also_be_used_more_traditionally_to_complete_missing_fact_for_a_target_predicate__a_well_a_other_predicate_related_to_the_target",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-entity_with_only_a_type_or_class_declaration",
      "skos:broader",
      "Entity-data"
    ],
    [
      "Entity-existential_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-closed_rule__cr_",
      "skos:broader",
      "Entity-constraint"
    ],
    [
      "Entity-they_generalise_well__that_is__they_explain_many_fact",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-most_modern_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-these_measure",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-sh__nodeshape_and_the_path_of_head_predicate_a_nested_sh__path_declaration_within_a_sh__property_declaration",
      "skos:broader",
      "Entity-shacl_language"
    ],
    [
      "Entity-rule_to_express_not_only_the_necessity_of_a_chain_of_fact__the_fact_in_the_head_of_the_iop_rule_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-it_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-to_learn_(1)",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-fullhouse__x_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-max_rule_length_l",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-corresponding_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-a_fragment_of_the_kg_k_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-_open_path__opsupp__opsc__ophc_",
      "skos:broader",
      "Entity-ophc"
    ],
    [
      "Entity-we_use",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-kg_k",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-algorithm",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_row_index_of_element_with_value___car_of_v1__a__p1___a__p2___...__a__pm__",
      "skos:broader",
      "Entity-a"
    ],
    [
      "Entity-the_shape_constraint_language",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-variable",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-iop_rule_discovered_in_the_experiment",
      "skos:broader",
      "Entity-this_experiment"
    ],
    [
      "Entity-human_knowledge",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-pathfinding_of_algorithm_1",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_good_learning_algorithm",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-shacl",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-one_that_present_the_semantics_of_recursive_shacl_shape",
      "skos:broader",
      "Entity-standard_shacl_shape"
    ],
    [
      "Entity-each_target_predicate",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-learning_method",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-branch_in_the_mined_tree",
      "skos:broader",
      "Entity-kg_data"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-correspond_to_shacl_shape",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-car__r_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-our_pruning_technique",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-we_choose_to_model_type_and_class_with_unary_predicate",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-path_shape",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-semantics",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_fact_that_e1_ha_relation_p0_with_e2",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_support_for_an_iop_rule_is_the_same_a_the_corresponding_opsc",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-subject_and_object_argument_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-rule_learner_to_the_maximum_length_of_rule",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-an_embedding_learner",
      "skos:broader",
      "Entity-the_embedding"
    ],
    [
      "Entity-human",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-validate_a_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a__pk_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-pi",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-fgds_define_constraint_like_the_type_of_entity_in_the_domain_and_range_of_predicate__or_the_number_of_entity_to_which_an_entity_can_be_related_by_a_specific_predicate_.",
      "skos:broader",
      "Entity-definition_3"
    ],
    [
      "Entity-composite_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_greedy_search",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-entity_a_shown_in_previous_heuristic_rule_learner",
      "skos:broader",
      "Entity-earlier_work"
    ],
    [
      "Entity-once_in_the_straight_form__where_the_object_argument_of_the_predicate_is_the_common_variable_to_connect_the_head_",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-the_count_of_e_",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-p1__e__e1___p2__e1__e2___...__pt__e__q-1____eq_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-the_embedding_representation",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-massive_kg_(2)",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_core_of_shacl",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iopsc",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-definition_6",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-using_self-loop_link_for_unary_predicate_is_convenient_syntactic_sugar_to_keep_the_presentation_in_the_triple_format__a_for_the_original_input_kg_.",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-ei",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-path_of_shape_predicate",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-if_there_exist_entity_e1__...__en1_in_the_kg_such_that_p1__e__e1___p2__e1__e2___...__pn__en1__e___are_fact_in_the_kg_.",
      "skos:broader",
      "Entity-_kg_"
    ],
    [
      "Entity-our_shaclearner_based_on_algorithm_1",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-an_editor_called_schimatos_for_manual_knowledge_graph_completion",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-heuristic_function",
      "skos:broader",
      "Entity-heuristic"
    ],
    [
      "Entity-pt__e___e_",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-opera_singer",
      "skos:broader",
      "Entity-class_and_type"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-then_the_rule_is_closed",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-shacl_core",
      "skos:broader",
      "Entity-ontology"
    ],
    [
      "Entity-ideal_rule_learner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-both_well-defined_semantics_and_motivating_use_case",
      "skos:broader",
      "Entity-feature"
    ],
    [
      "Entity-e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1__",
      "skos:broader",
      "Entity-sequence_of_entity"
    ],
    [
      "Entity-address_learning_shacl_shape_from_kg",
      "skos:broader",
      "Entity-shacl_shape_(2)"
    ],
    [
      "Entity-we_define_formal_quality_measure_for_iop_rule",
      "skos:broader",
      "Entity-quality_measure"
    ],
    [
      "Entity-several_shape_each_for_various_target_predicate",
      "skos:broader",
      "Entity-shacl_shape_(1)"
    ],
    [
      "Entity-yago2s",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-the_shape_constraint_language",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-domain"
    ],
    [
      "Entity-frequent_pattern_in_a_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-inverse_open_path_support",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-shaclearner__ev",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-body_predicate",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-only_high_quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-p__i",
      "skos:broader",
      "Entity-the_predicate"
    ],
    [
      "Entity-when_car1",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-unary_predicate_(2)",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_sampled_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-embedding-based_method_that_discovers_iop_rule_from_a_kg",
      "skos:broader",
      "Entity-approach"
    ],
    [
      "Entity-evaluating_kg_rule-learning_method",
      "skos:broader",
      "Entity-task"
    ],
    [
      "Entity-the_related_op_rule",
      "skos:broader",
      "Entity-op"
    ],
    [
      "Entity-scoring_function",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-but_a_straightforward_variable_unification_transforms_an_op_rule_to_a_cp_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-iop_rule_(1)",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-satisfies_the_head_of_r",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-car1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-treescmin",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-a_kg_(1)",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_unary_predicate_human_in_fig_._2",
      "skos:broader",
      "Entity-human"
    ],
    [
      "Entity-the_embedding_representation",
      "skos:broader",
      "Entity-the_embedding"
    ],
    [
      "Entity-a_expected__a_they_have_the_least_stringent_requirement_to_be_met_in_the_kg",
      "skos:broader",
      "Entity-real-world_massive_knowledge_graph__kg_"
    ],
    [
      "Entity-that_can_be_augmented_with_minimum_cardinality_constraint_and_also_used_a_a_building_block_for_more_complex_shape__such_a_tree_and_other_rule_pattern_.",
      "skos:broader",
      "Entity-tree"
    ],
    [
      "Entity-type_predicate_for_experiment",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-embeddings___we_additionally_compute_argument_embeddings",
      "skos:broader",
      "Entity-procedure"
    ],
    [
      "Entity-problem",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-iopsupp",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-tree__treesupp__treesc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-sampling___method",
      "skos:broader",
      "Entity-algorithm_2"
    ],
    [
      "Entity-iop_rule",
      "skos:broader",
      "Entity-representation"
    ],
    [
      "Entity-massive_kg_(2)",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-many_kg",
      "skos:broader",
      "Entity-a_tree"
    ],
    [
      "Entity-the_quality_of_iop_rule",
      "skos:broader",
      "Entity-we_introduce_inverse_open_path__iop__rule"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-t"
    ],
    [
      "Entity-a_tree_(1)",
      "skos:broader",
      "Entity-an_entity"
    ],
    [
      "Entity-dbpedia",
      "skos:broader",
      "Entity-massive_kg"
    ],
    [
      "Entity-we_choose_to_model_type_and_class_with_unary_predicate",
      "skos:broader",
      "Entity-unary_predicate_(2)"
    ],
    [
      "Entity-the_small_poker_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-object_argument",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-union__from_i1_to_l__of_ei",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-if_there_exist_sequence_of_entity_e1__...__e__n-1___e1___...__e__m-1___e1q__e__q-1___in_the_kg",
      "skos:broader",
      "Entity-logical_statement"
    ],
    [
      "Entity-kg-completion",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-embedding",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-the_literature_a_existential_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-human__x__x__-__father__x__z2___human__z2__z2_",
      "skos:broader",
      "Entity-iop_rule_(1)"
    ],
    [
      "Entity-an_editor_called_schimatos_for_manual_knowledge_graph_completion",
      "skos:broader",
      "Entity-a_knowledge_graph__kg_"
    ],
    [
      "Entity-all_rule_that_bind_the_subject_argument",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-a_rule_are_closed",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-for_iopsc",
      "skos:broader",
      "Entity-an_entity"
    ]
  ],
  "predicates": {
    "Predicate-are": {
      "label": "are",
      "description": "Indicates a relationship of equivalence or classification between two entities. The predicate 'are' suggests that the subject and object share common characteristics, properties, or attributes.",
      "disambiguation_index": 0
    },
    "Predicate-have": {
      "label": "have",
      "description": "The predicate 'have' indicates a relationship of possession or association between the subject and object. It suggests that the subject has control over, owns, or is connected to the object in some way.",
      "disambiguation_index": 0
    },
    "Predicate-for_expressing_constraints_on_graph_data_as_shapes": {
      "label": "for expressing constraints on graph data as shapes",
      "description": "This predicate connects a subject to an object that represents a set of rules or restrictions governing the structure and organization of graph data. The subject can be any entity, such as a standard, recommendation, or framework, while the object refers to a specific way of expressing constraints on graph data using shapes.",
      "disambiguation_index": 0
    },
    "Predicate-serve_to_validate_a": {
      "label": "serve to validate a",
      "description": "To serve as a means of verifying or confirming the correctness or accuracy of something (the object), typically through some form of evaluation, inspection, or testing. This predicate indicates that the subject has a role in ensuring the validity or truthfulness of the object.",
      "disambiguation_index": 0
    },
    "Predicate-underpin": {
      "label": "underpin",
      "description": "To underpin means to establish a foundation or basis for something else, often implying a deeper level of understanding, structure, or organization. In this sense, it connects the subject (e.g., SHACL shapes) with the object (e.g., manual KG editing tasks), suggesting that the former provides a underlying framework or principles that guide or inform the latter.",
      "disambiguation_index": 0
    },
    "Predicate-cannot_obtain": {
      "label": "cannot obtain",
      "description": "The predicate 'cannot obtain' indicates that there exists a barrier or obstacle preventing the subject from acquiring or achieving the object. It suggests a lack of access, availability, or feasibility between the subject and the object.",
      "disambiguation_index": 0
    },
    "Predicate-introduce": {
      "label": "introduce",
      "description": "To introduce means to bring into notice or awareness something new, such as an idea, concept, method, or entity. It implies a formal or informal presentation of the object, making it accessible and understandable to others.",
      "disambiguation_index": 0
    },
    "Predicate-express": {
      "label": "express",
      "description": "To express a predicate that represents the act of conveying or representing information through a specific form or pattern. This connection implies a mapping from one domain to another, where the subject (IOP rules) provides the underlying structure and the object (simple shape patterns) serves as the representation or manifestation of this structure.",
      "disambiguation_index": 0
    },
    "Predicate-augment_with": {
      "label": "augment with",
      "description": "The predicate 'augment with' indicates a relationship where the subject (a set of rules or guidelines) is enriched or expanded by incorporating additional information, concepts, or constraints specified by the object. This augmentation process enhances the original subject's scope, complexity, or expressiveness.",
      "disambiguation_index": 0
    },
    "Predicate-define_formal_quality_measures_for": {
      "label": "define formal quality measures for",
      "description": "To establish a set of standardized criteria or metrics that evaluate and quantify the level of formality, precision, or adherence to specific standards or guidelines for a given domain, process, or system.",
      "disambiguation_index": 0
    },
    "Predicate-propose_a_novel_method_to_learn_high-quality_rules_from": {
      "label": "propose a novel method to learn high-quality rules from",
      "description": "To introduce or suggest a new approach for extracting valuable patterns or relationships from a given dataset or knowledge source.",
      "disambiguation_index": 0
    },
    "Predicate-define": {
      "label": "define",
      "description": "To establish or clarify the meaning of something by specifying its essential characteristics, boundaries, or scope. The predicate 'define' connects the subject to a concept or entity that requires clarification, and links it to an object that provides the definition.",
      "disambiguation_index": 0
    },
    "Predicate-builds": {
      "label": "builds",
      "description": "The predicate 'builds' indicates the act of creating or constructing something from existing materials or components. It implies a sense of intentional design and assembly, often resulting in a tangible outcome that can be perceived or experienced.",
      "disambiguation_index": 0
    },
    "Predicate-shows": {
      "label": "shows",
      "description": "The predicate 'shows' indicates that the subject presents or demonstrates something about the object. It implies a relationship of exposition, illustration, or demonstration between the subject and the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_adapted_from": {
      "label": "is adapted from",
      "description": "The predicate 'is adapted from' indicates that the subject has been modified or derived from a specific source, concept, or approach represented by the object. This relationship suggests a connection between the subject and the object as a foundation, inspiration, or basis for its development.",
      "disambiguation_index": 0
    },
    "Predicate-evaluate": {
      "label": "evaluate",
      "description": "To evaluate means to assess or judge something based on certain criteria or standards. The subject of this predicate is responsible for making a judgment about the object, which can be an idea, concept, thing, person, etc., and forming an opinion or conclusion.",
      "disambiguation_index": 0
    },
    "Predicate-on": {
      "label": "on",
      "description": "The predicate 'on' indicates a relationship of evaluation or assessment between the subject and object. It suggests that the subject (e.g., an algorithm, model, or process) is being used to assess or evaluate something about the object (e.g., data, system, or phenomenon).",
      "disambiguation_index": 0
    },
    "Predicate-show_that": {
      "label": "show that",
      "description": "To demonstrate or prove something through evidence or demonstration. This predicate indicates a causal relationship between the subject (the entity providing the evidence) and the object (the conclusion or outcome being demonstrated), implying that the subject's actions, results, or findings support or confirm the truth of the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_effectively_learn": {
      "label": "can effectively learn",
      "description": "The predicate 'can effectively learn' indicates that a subject has the ability to acquire knowledge or skills from an object, which provides learning opportunities. This connection implies that the subject can absorb and utilize information presented by the object, resulting in effective understanding or mastery.",
      "disambiguation_index": 0
    },
    "Predicate-learn_from": {
      "label": "learn from",
      "description": "To acquire knowledge or understanding by drawing upon and processing information contained within a source. The subject learns to recognize patterns, make connections, and apply insights from the object, which serves as a repository of expertise.",
      "disambiguation_index": 0
    },
    "Predicate-are_diverse_in": {
      "label": "are diverse in",
      "description": "This predicate indicates that the subject exhibits a range of characteristics or properties within the scope defined by the object. The object serves as a framework or category, and the subject's diversity refers to its varying manifestations or expressions within this context.",
      "disambiguation_index": 0
    },
    "Predicate-became_popular_with": {
      "label": "became popular with",
      "description": "Indicates a relationship where the subject gained widespread acceptance or recognition due to its association with the object. This predicate suggests that the subject's popularity increased as a result of being linked, related, or connected to the object.",
      "disambiguation_index": 0
    },
    "Predicate-uses": {
      "label": "uses",
      "description": "The predicate 'uses' indicates a relationship of utilization or employment between the subject and object. It suggests that the subject makes use of, relies on, or employs the object to achieve some purpose or goal.",
      "disambiguation_index": 0
    },
    "Predicate-have_different_depths_of_detail_for": {
      "label": "have different depths of detail for",
      "description": "This predicate indicates that the subject has varying levels or degrees of information, analysis, or understanding about the object. It suggests a range of perspectives, nuances, or insights that distinguish one level from another.",
      "disambiguation_index": 0
    },
    "Predicate-depending_on_their": {
      "label": "depending on their",
      "description": "The predicate 'depending on their' indicates a relationship where the subject's characteristics or attributes are influenced by some aspect related to them. The object represents this influencing factor, which shapes the subject's properties or behaviors.",
      "disambiguation_index": 0
    },
    "Predicate-comes_from": {
      "label": "comes from",
      "description": "Indicates a source or origin of something. The predicate 'comes from' suggests that the subject has its roots, foundation, or starting point in the object.",
      "disambiguation_index": 0
    },
    "Predicate-use": {
      "label": "use",
      "description": "To employ or apply something (typically an idea, method, or resource) for a specific purpose or goal.",
      "disambiguation_index": 0
    },
    "Predicate-employs": {
      "label": "employs",
      "description": "The predicate 'employs' indicates a relationship where the subject entity uses or utilizes the object entity to achieve its goals, perform tasks, or operate effectively. In this context, the subject entity has control over and manages the use of the object entity.",
      "disambiguation_index": 0
    },
    "Predicate-are_populated_by": {
      "label": "are populated by",
      "description": "The predicate 'are populated by' indicates a relationship between the subject (a set of entities or knowledge graphs) and the object (methods used to create, maintain, or update these entities), suggesting that the methods are responsible for generating, maintaining, or updating the content within the subject.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_source_of": {
      "label": "is a source of",
      "description": "The predicate 'is a source of' indicates that the subject provides or offers information, resources, or inspiration to the object. It implies a relationship where the subject serves as an origin or starting point for the object, which may be seeking knowledge, guidance, or creative stimulation.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_highlighted_for_correction_by_a_careful_application_of": {
      "label": "can be highlighted for correction by a careful application of",
      "description": "This predicate indicates that the subject (e.g. errors) has flaws or imperfections that can be identified and corrected through a deliberate and meticulous process of applying specific guidelines, rules, or standards (i.e., schema constraints). The object represents the means by which these corrections are made possible.",
      "disambiguation_index": 0
    },
    "Predicate-recommended_by": {
      "label": "recommended by",
      "description": "Indicates that a subject has been endorsed or supported by an object, implying a level of trustworthiness, credibility, or authority. The relationship suggests that the subject's quality, validity, or relevance have been evaluated and found satisfactory according to the standards or guidelines established by the object.",
      "disambiguation_index": 0
    },
    "Predicate-expressed_by": {
      "label": "expressed by",
      "description": "The predicate 'expressed by' indicates that the subject represents or conveys its meaning through the object. In other words, it specifies a medium, language, or framework used to convey information about the subject.",
      "disambiguation_index": 0
    },
    "Predicate-was_formally_recommended_by": {
      "label": "was formally recommended by",
      "description": "Indicates that a subject has been officially endorsed or supported by an object in a formal manner, implying a level of authority and credibility.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_to_express_that": {
      "label": "can be used to express that",
      "description": "This predicate indicates that the subject (a schema or language) can be employed to convey or represent the meaning specified in the object. In other words, it suggests a relationship between the subject's capabilities and the semantic content expressed by the object.",
      "disambiguation_index": 0
    },
    "Predicate-needs_to_have": {
      "label": "needs to have",
      "description": "The predicate 'needs to have' indicates a requirement or necessity for the subject (in this case, a person) to possess or acquire certain information or attributes specified by the object. The connection between the subject and object implies that the subject lacks these characteristics currently but is expected to obtain them in order to fulfill some condition or meet specific criteria.",
      "disambiguation_index": 0
    },
    "Predicate-guided_by": {
      "label": "guided by",
      "description": "The predicate 'guided by' indicates that the subject (in this case, KGs) relies on or follows a particular principle, framework, or set of rules represented by the object (here, The shapes). This relationship suggests that the subject's behavior, decision-making process, or overall approach is influenced and shaped by the guidance provided by the object.",
      "disambiguation_index": 0
    },
    "Predicate-used_to_guide": {
      "label": "used to guide",
      "description": "This predicate indicates that the subject (shapes) plays a role in directing or controlling the object (a KG), possibly by providing structure, organization, or direction. The relationship suggests an intentional or deliberate connection between the shapes and the knowledge graph.",
      "disambiguation_index": 0
    },
    "Predicate-are_used_to_guide_the_population_of": {
      "label": "are used to guide the population of",
      "description": "This predicate indicates that the subject (shapes) plays a role in directing or controlling the object (a KG), which refers to a group or collection of entities. The phrase suggests that the shapes serve as some kind of guidance, framework, or structure for organizing and managing the population within the KG.",
      "disambiguation_index": 0
    },
    "Predicate-could_infer": {
      "label": "could infer",
      "description": "The predicate 'could infer' indicates that the subject has the ability to deduce or derive information about the object through logical reasoning, analysis, or interpretation. It implies a causal relationship between the subject and the object, where the subject's capabilities enable it to arrive at conclusions or insights related to the object.",
      "disambiguation_index": 0
    },
    "Predicate-be_inferred_from": {
      "label": "be inferred from",
      "description": "The predicate 'be inferred from' indicates that the subject has its meaning or properties derived or deduced from the object. In general, it suggests a relationship where the subject's characteristics are indirectly determined by the information provided by the object.",
      "disambiguation_index": 0
    },
    "Predicate-could_in_principle_be_inferred_from": {
      "label": "could, in principle, be inferred from",
      "description": "This predicate indicates that there exists a logical or theoretical possibility to derive or deduce information about the subject based on the object. In other words, it suggests that given sufficient knowledge and reasoning capabilities, one could potentially infer details about the subject from the provided context or data.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_for": {
      "label": "can be used for",
      "description": "This predicate indicates a functional relationship between the subject and object, suggesting that the subject has a purpose or application related to the object. It implies that the subject can be employed, utilized, or applied for a specific task, process, or activity described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-characterize_a_KG_and_can_be_used_for": {
      "label": "characterize a KG and can be used for",
      "description": "This predicate connects the subject to an object that describes how the subject contributes to or facilitates a specific process or activity. The characterization implies a functional relationship between the subject and the described use, highlighting its role in achieving a particular goal or outcome.",
      "disambiguation_index": 0
    },
    "Predicate-learn": {
      "label": "learn",
      "description": "To learn a predicate means to acquire knowledge or understanding about the object. The subject of the triple represents the entity that acquires this knowledge or understanding, and the learning process connects them in a causal relationship.",
      "disambiguation_index": 0
    },
    "Predicate-investigate": {
      "label": "investigate",
      "description": "To investigate means to engage in systematic and thorough examination or inquiry into something, typically with the goal of gaining understanding, uncovering information, or verifying facts. The subject is actively seeking knowledge or insight about the object, which can be a phenomenon, process, situation, or concept.",
      "disambiguation_index": 0
    },
    "Predicate-discover": {
      "label": "discover",
      "description": "To discover means to gain new knowledge or understanding about something previously unknown or unfamiliar. The subject of the sentence has an epistemic relationship with the object, where they come to know or comprehend it for the first time.",
      "disambiguation_index": 0
    },
    "Predicate-has": {
      "label": "has",
      "description": "The predicate 'has' indicates a relationship of possession or classification between the subject and object. It suggests that the subject entity possesses or categorizes itself with respect to the object, which can be an attribute, property, type, or characteristic.",
      "disambiguation_index": 0
    },
    "Predicate-present": {
      "label": "present",
      "description": "The predicate 'present' indicates a state of being or existence, connecting the subject to an object that represents something currently available, accessible, or existing. It implies a sense of availability, relevance, or significance.",
      "disambiguation_index": 0
    },
    "Predicate-mines": {
      "label": "mines",
      "description": "The predicate 'mines' indicates a relationship where the subject (e.g. SHACLEARNER) extracts or derives information from the object (e.g. Shapes), possibly through analysis, interpretation, or categorization.",
      "disambiguation_index": 0
    },
    "Predicate-mines_shapes_from": {
      "label": "mines shapes from",
      "description": "The predicate 'mines shapes from' indicates that the subject extracts or derives shape information from a given object. This connection implies that the subject is an entity capable of processing and analyzing data, whereas the object provides the source material for this process.",
      "disambiguation_index": 0
    },
    "Predicate-call_them": {
      "label": "call them",
      "description": "The predicate 'call them' indicates a naming or labeling relationship between the subject and object. It suggests that the subject (in this case, 'We') assigns a specific name or term to describe the object (the inverse open path IOP rules). This connection implies a sense of classification, categorization, or identification.",
      "disambiguation_index": 0
    },
    "Predicate-adapt": {
      "label": "adapt",
      "description": "To modify or adjust something to fit a particular context, situation, or requirement. This predicate indicates that the subject takes an object and transforms it into a new form that suits its needs.",
      "disambiguation_index": 0
    },
    "Predicate-are_learned_by": {
      "label": "are learned by",
      "description": "The predicate 'are learned by' indicates a relationship where knowledge or information (subject) is acquired through some process or means (object), implying that there was no prior understanding of the subject matter.",
      "disambiguation_index": 0
    },
    "Predicate-is_a": {
      "label": "is a",
      "description": "The predicate 'is a' establishes an instance-of relationship between the subject and object. It indicates that the subject is a specific example or member of the category, class, or type denoted by the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_syntactically_rewritten_as": {
      "label": "can be syntactically rewritten as",
      "description": "This predicate indicates that a given subject (e.g., an IOP rule or tree) has equivalent structural representations with respect to its syntactic organization. The object of this predicate represents another formalism, syntax, or notation system that can be used interchangeably to describe the same information as the subject.",
      "disambiguation_index": 0
    },
    "Predicate-are_augmented_with": {
      "label": "are augmented with",
      "description": "The predicate 'are augmented with' indicates that the subject (in this case, Our mined shapes) has been enriched or enhanced by the object (a novel numerical confidence measure), resulting in a new entity or attribute that provides additional information about the original subject.",
      "disambiguation_index": 0
    },
    "Predicate-propose": {
      "label": "propose",
      "description": "To propose means to suggest or put forward a plan, idea, or solution as a potential approach or methodology for achieving something. The predicate 'propose' establishes a relationship between the subject and object by indicating that the former presents or recommends the latter as a viable option.",
      "disambiguation_index": 0
    },
    "Predicate-describes": {
      "label": "describes",
      "description": "The predicate 'describes' indicates a relationship where the subject provides an explanation or definition of the object. It implies that the subject has a comprehensive understanding of the object and can articulate its key characteristics, properties, or features.",
      "disambiguation_index": 0
    },
    "Predicate-discovers": {
      "label": "discovers",
      "description": "To discover means to uncover or identify something previously unknown or hidden. The predicate 'discovers' indicates that the subject has found or revealed information about the object, often through investigation, exploration, or analysis.",
      "disambiguation_index": 0
    },
    "Predicate-includes": {
      "label": "includes",
      "description": "The predicate 'includes' indicates that the subject concept encompasses or contains the object concept as a part or aspect. It suggests a relationship where the subject has the object within its scope, definition, or framework.",
      "disambiguation_index": 0
    },
    "Predicate-discuss": {
      "label": "discuss",
      "description": "To engage in a conversation or exchange ideas about something, typically with the intention to explore, analyze, and understand its significance, implications, or meaning.",
      "disambiguation_index": 0
    },
    "Predicate-conclude": {
      "label": "conclude",
      "description": "To predicate 'conclude' indicates that the subject has reached a final judgment or decision about the object. The conclusion may be based on evidence, reasoning, or other forms of argumentation. In general, this predicate establishes a connection between the subject and the object by stating that the subject's understanding or perspective is now complete.",
      "disambiguation_index": 0
    },
    "Predicate-is_adapted_and_extended": {
      "label": "is adapted and extended",
      "description": "This predicate indicates that a subject (such as an idea, concept, or content) has been modified to better fit its intended purpose or audience. The adaptation and extension may involve reorganizing, refining, or adding new information to make it more effective, relevant, or engaging for the target group.",
      "disambiguation_index": 0
    },
    "Predicate-is": {
      "label": "is",
      "description": "The predicate 'is' connects the subject to a property or characteristic that defines its identity, essence, or nature. It establishes an equivalence relationship between the subject and object, indicating that they share a common attribute or quality.",
      "disambiguation_index": 0
    },
    "Predicate-identifies": {
      "label": "identifies",
      "description": "The predicate 'identifies' connects the subject to the object by indicating that the subject serves as a means of recognizing or distinguishing the object. This can be done through various methods, such as assigning an identifier code, providing a unique name, or describing characteristics that make the object distinct.",
      "disambiguation_index": 0
    },
    "Predicate-written_here_as": {
      "label": "written here as",
      "description": "The predicate 'written here as' indicates a relationship between an RDF triple and its representation or notation. It connects the subject (RDF triple) to the object (P(e, e')), which represents the formalized expression of the triple's meaning.",
      "disambiguation_index": 0
    },
    "Predicate-means_that_the_subject_entity_e_is_related_to_an_object_entity_e_via_the_binary_predicate_P": {
      "label": "means that the subject entity e is related to an object entity e' via the binary predicate P",
      "description": "This predicate indicates a relationship between two entities (subject and object) that is mediated by a specific property or characteristic (binary predicate P). The subject entity 'e' has some connection, association, or attribute to the object entity 'e'' via this binary predicate P.",
      "disambiguation_index": 0
    },
    "Predicate-is_written_here_as": {
      "label": "is written here as",
      "description": "This predicate indicates that a representation or expression of something (the subject) corresponds to another form or description (the object). The connection between the subject and object is one of equivalence, where the subject's meaning or content is reflected in the object. In general, this predicate establishes an association between two forms of representation, suggesting that they convey similar information.",
      "disambiguation_index": 0
    },
    "Predicate-allow": {
      "label": "allow",
      "description": "The predicate 'allow' indicates permission or consent given by the subject to perform an action described by a unary predicate. The object represents the set of actions that are permitted, which can be thought of as a scope within which the allowed behavior applies.",
      "disambiguation_index": 0
    },
    "Predicate-model_as": {
      "label": "model as",
      "description": "The predicate 'model as' indicates a relationship where the subject represents or approximates the object. This connection suggests that the subject serves as an abstraction, simplification, or approximation of the object's characteristics, properties, or behavior.",
      "disambiguation_index": 0
    },
    "Predicate-equal_to": {
      "label": "equal to",
      "description": "The predicate 'equal to' indicates a relationship of equivalence or similarity between the subject and object. It suggests that both entities share identical properties, characteristics, or values, thereby establishing an equivalence or sameness.",
      "disambiguation_index": 0
    },
    "Predicate-set": {
      "label": "set",
      "description": "The predicate 'set' establishes a relationship between the subject and object by indicating that the subject has defined or determined the scope of the object. This can imply a sense of categorization, classification, or assignment.",
      "disambiguation_index": 0
    },
    "Predicate-employ": {
      "label": "employ",
      "description": "To employ means to utilize or make use of something (e.g. a system, technology, process) for a specific purpose or function, often with the intention of achieving certain goals or outcomes.",
      "disambiguation_index": 0
    },
    "Predicate-consists_of": {
      "label": "consists of",
      "description": "The predicate 'consists of' indicates that the subject is composed or made up of one or more parts, which are specified by the object. It implies a relationship of containment or membership between the subject and its constituent parts.",
      "disambiguation_index": 0
    },
    "Predicate-is_about": {
      "label": "is about",
      "description": "The 'is about' predicate indicates a relationship between its subject and object where the subject provides context or scope for understanding the meaning or content of the object. In general, it suggests that the subject is relevant to, pertains to, or has bearing on the object.",
      "disambiguation_index": 0
    },
    "Predicate-": {
      "label": "^",
      "description": "The '^' predicate represents a connection or relationship between the subject and object. It indicates that there exists some kind of association, correspondence, or equivalence between the two entities described by the subject (Pt) and object (P1).",
      "disambiguation_index": 0
    },
    "Predicate-interpret": {
      "label": "interpret",
      "description": "To interpret means to understand or explain the meaning of something, often involving a process of analysis, consideration, and possibly creative thinking. The subject performs this cognitive activity on the object, which can be a text, rule, sign, symbol, or any other entity that requires comprehension.",
      "disambiguation_index": 0
    },
    "Predicate-with": {
      "label": "with",
      "description": "The predicate 'with' indicates a relationship between two entities where one entity (the subject) possesses or accompanies another entity (the object), often implying a sense of association, accompaniment, or qualification. This connection can be physical, abstract, or metaphorical.",
      "disambiguation_index": 0
    },
    "Predicate-instantiates": {
      "label": "instantiates",
      "description": "The predicate 'instantiates' indicates a relationship between two entities where one entity (the subject) represents or embodies another entity (the object), often resulting in a specific instance of the latter. This connection implies that the subject has characteristics, properties, or attributes that are reflective of the object.",
      "disambiguation_index": 0
    },
    "Predicate-citizenOf": {
      "label": "citizenOf",
      "description": "Indicates a person's nationality or country of origin, establishing an affiliation between the subject and the object. This predicate represents a fundamental aspect of human identity, connecting individuals to their place of birth, residence, or cultural heritage.",
      "disambiguation_index": 0
    },
    "Predicate-generalise_well": {
      "label": "generalise well",
      "description": "To generalise well means to form a comprehensive and accurate concept or principle from specific instances or data, often revealing underlying patterns or relationships that can be applied more broadly.",
      "disambiguation_index": 0
    },
    "Predicate-recall": {
      "label": "recall",
      "description": "The predicate 'recall' indicates a retrieval or bringing to mind of information, concepts, or experiences from memory. It implies that the subject has previously encountered or learned something and is now drawing upon this prior knowledge to connect with the object.",
      "disambiguation_index": 0
    },
    "Predicate-measure": {
      "label": "measure",
      "description": "To measure means to determine the quantity or extent of something by comparing it to a standard unit or scale. The predicate 'measure' establishes a relationship between the subject and object, indicating that the subject (e.g., measures) has determined the magnitude or dimension of the object (e.g., head coverage).",
      "disambiguation_index": 0
    },
    "Predicate-standard": {
      "label": "standard",
      "description": "The 'standard' predicate indicates a reference point or benchmark against which something (the subject) can be evaluated or compared. It establishes a common framework for measuring the quality, accuracy, or reliability of an attribute (object), such as confidence.",
      "disambiguation_index": 0
    },
    "Predicate-used_in": {
      "label": "used in",
      "description": "The predicate 'used in' indicates a relationship where the subject (a measure or method of providing support) serves as a means for achieving or implementing the object (some major approaches to rule learning). In general, this predicate suggests that the subject provides the necessary framework, tools, or resources for realizing the object's purpose.",
      "disambiguation_index": 0
    },
    "Predicate-are_used_in": {
      "label": "are used in",
      "description": "The predicate 'are used in' indicates a relationship between the subject (a concept or method) and the object (an application domain or context), suggesting that the former is employed, applied, or relevant to the latter.",
      "disambiguation_index": 0
    },
    "Predicate-satisfies": {
      "label": "satisfies",
      "description": "The predicate 'satisfies' indicates a relationship where the subject provides or meets the requirements specified by the object. In general, it suggests that the subject's properties, characteristics, or conditions align with or fulfill what is expected or demanded by the object.",
      "disambiguation_index": 0
    },
    "Predicate-be": {
      "label": "be",
      "description": "The predicate 'be' connects the subject and object by indicating a state or relationship between them. It can express identity, existence, possession, location, time, or other types of relationships.",
      "disambiguation_index": 0
    },
    "Predicate-support": {
      "label": "support",
      "description": "The predicate 'support' indicates that the subject provides sustenance or backing to the object, often in a context where the object requires assistance or maintenance. This connection implies a relationship of aid, encouragement, or reinforcement between the subject and object.",
      "disambiguation_index": 0
    },
    "Predicate-is_closely_related_to": {
      "label": "is closely related to",
      "description": "Indicates a connection or association between two concepts where one concept has a significant influence on the other. This predicate suggests that there exists an intimate relationship between the subject and object, implying a high degree of correlation, similarity, or interdependence.",
      "disambiguation_index": 0
    },
    "Predicate-widely_used_in": {
      "label": "widely used in",
      "description": "The predicate 'widely used in' indicates a relationship between an entity (the subject) and its application or domain where it is commonly employed. It suggests that the subject has significant relevance, popularity, or adoption within the specified context.",
      "disambiguation_index": 0
    },
    "Predicate-measures": {
      "label": "measures",
      "description": "The predicate 'measures' indicates a relationship where the subject (e.g. HC) evaluates or quantifies the object (e.g. the explanatory power of the rule), often in terms of its magnitude, extent, or effectiveness.",
      "disambiguation_index": 0
    },
    "Predicate-is_widely_used_for": {
      "label": "is widely used for",
      "description": "This predicate indicates that a subject (e.g., tool, concept, or method) has a specific purpose or application domain where it is commonly employed. The object represents this particular use case, highlighting how the subject is utilized to achieve a certain goal or outcome.",
      "disambiguation_index": 0
    },
    "Predicate-defines": {
      "label": "defines",
      "description": "The predicate 'defines' establishes a relationship between its subject and object, indicating that the subject provides a clear or precise explanation of what the object represents. This connection implies a sense of clarity, precision, and understanding, suggesting that the subject has provided a meaningful description or interpretation of the object's meaning.",
      "disambiguation_index": 0
    },
    "Predicate-be_as_given_in": {
      "label": "be as given in",
      "description": "The predicate 'be as given in' indicates a relationship where the subject (a definition or concept) is defined by or based on the object (a source or reference), which provides the foundation, context, or authority for the subject's meaning.",
      "disambiguation_index": 0
    },
    "Predicate-equals": {
      "label": "equals",
      "description": "The 'equals' predicate establishes a relationship between two entities or values by indicating that they have identical characteristics, properties, or definitions. It connects the subject and object by stating that their respective meanings are equivalent.",
      "disambiguation_index": 0
    },
    "Predicate-call": {
      "label": "call",
      "description": "The predicate 'call' represents the act of designating or assigning a value to something. It connects the subject (the entity performing the action) with an object that can be a variable, function, or concept, indicating that the subject is referring to or defining the object.",
      "disambiguation_index": 0
    },
    "Predicate-occur": {
      "label": "occur",
      "description": "The 'occur' predicate indicates that an event or situation happens at a specific point in time or space, connecting the subject to its context. It implies a relationship between the subject and object, suggesting that the object is where or when something takes place.",
      "disambiguation_index": 0
    },
    "Predicate-transforms_to": {
      "label": "transforms to",
      "description": "The predicate 'transforms to' indicates a relationship where the subject (in this case, OP rules) changes its form or structure into something new, resulting in the object (CP rules). This transformation can involve various forms of modification, such as simplification, generalization, or reorganization. The predicate highlights that there is an intentional change from one set of rules to another.",
      "disambiguation_index": 0
    },
    "Predicate-derived_from": {
      "label": "derived from",
      "description": "The predicate 'derived from' indicates a relationship between the subject and object where the subject originates or has its basis in the object. This can imply a causal, historical, or conceptual connection between the two entities.",
      "disambiguation_index": 0
    },
    "Predicate-denoted": {
      "label": "denoted",
      "description": "The predicate 'denoted' indicates a relationship between two entities where one entity (the subject) represents or stands for another entity (the object). This connection implies that the subject serves as a symbol, representation, or proxy for the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_to_understand": {
      "label": "can be used to understand",
      "description": "This predicate indicates that the subject (e.g., a knowledge graph or dataset) provides insight into or facilitates comprehension of the object (e.g., specific data). The connection between the subject and object suggests that the former serves as a tool, framework, or resource for grasping the meaning or significance of the latter.",
      "disambiguation_index": 0
    },
    "Predicate-can_also_be_very_helpful_for": {
      "label": "can also be very helpful for",
      "description": "This predicate indicates that the subject has a potential utility or benefit in facilitating or supporting the object. The relationship suggests that the subject can contribute to achieving a goal, solving a problem, or enhancing an outcome related to the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_to_understand_and_validate_data": {
      "label": "can be used to understand and validate data",
      "description": "This predicate indicates that a subject (e.g., knowledge graph, dataset, or tool) provides a means of interpreting and verifying the accuracy of given data. It implies that the subject's capabilities enable users to gain insight into the meaning and reliability of the object (data), potentially leading to informed decisions or further analysis.",
      "disambiguation_index": 0
    },
    "Predicate-for": {
      "label": "for",
      "description": "The predicate 'for' indicates a relationship of purpose or application. It connects the subject to an object that serves as a target or goal, describing what something (the subject) is used for, intended for, or applicable to.",
      "disambiguation_index": 0
    },
    "Predicate-defines_constraints_for_graphs_as_shapes": {
      "label": "defines constraints for graphs as shapes",
      "description": "Establishes a relationship between a subject (e.g., a schema or language) and an object (e.g., graph structures), indicating that the subject provides constraints on how to represent shapes within those graphs, thereby governing their structure and organization.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_validated_against": {
      "label": "can be validated against",
      "description": "This predicate indicates that a subject (e.g., knowledge graphs) has its structure or content checked for consistency and accuracy by comparing it to an object (e.g., shapes), which serves as a reference standard. The validation process ensures that the subject conforms to certain rules, patterns, or expectations defined in the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_validated": {
      "label": "can be validated",
      "description": "The predicate 'can be validated' indicates that there exists a process or mechanism by which the subject (KGs) can be verified, confirmed, or proven to match with the object (a set of shapes). This implies a potential for evaluation, assessment, or testing against specific criteria or standards.",
      "disambiguation_index": 0
    },
    "Predicate-can_then_be_validated_against_a_set_of_shapes": {
      "label": "can then be validated against a set of shapes",
      "description": "This predicate indicates that the subject has its correctness or accuracy determined by comparing it to a collection of predefined shapes. In other words, the subject's validity can be established through a process of matching and verification against these shapes.",
      "disambiguation_index": 0
    },
    "Predicate-validate": {
      "label": "validate",
      "description": "To validate means to confirm or verify the accuracy, correctness, or authenticity of something. It implies checking or testing an object's properties, characteristics, or standards against certain criteria or expectations, and determining whether it meets those requirements.",
      "disambiguation_index": 0
    },
    "Predicate-characterise": {
      "label": "characterise",
      "description": "To characterise means to identify or describe the essential features, properties, or characteristics of something. It implies defining or outlining the key aspects that distinguish one thing from another.",
      "disambiguation_index": 0
    },
    "Predicate-illustrates": {
      "label": "illustrates",
      "description": "The predicate 'illustrates' indicates that the subject represents or exemplifies the object, often providing a concrete representation or visualization of an abstract concept, idea, or principle.",
      "disambiguation_index": 0
    },
    "Predicate-is_extensive_with": {
      "label": "is extensive with",
      "description": "The predicate 'is extensive with' indicates a relationship between two entities where one entity (the subject) has comprehensive coverage or scope of another entity (the object), suggesting that the subject encompasses, includes, or is related to all aspects or features of the object.",
      "disambiguation_index": 0
    },
    "Predicate-constrain": {
      "label": "constrain",
      "description": "To constrain means to impose a limiting or controlling influence on the object, shaping its possibilities or outcomes in some way. The subject of the constraint exercises control over the object's behavior, properties, or values, effectively defining boundaries within which the object must operate.",
      "disambiguation_index": 0
    },
    "Predicate-focus": {
      "label": "focus",
      "description": "To focus means to concentrate one's attention or effort on a specific aspect, characteristic, or feature of something. The predicate 'focus' connects the subject with an object that represents a particular attribute, quality, or property, highlighting its significance and importance.",
      "disambiguation_index": 0
    },
    "Predicate-act_to_constrain": {
      "label": "act to constrain",
      "description": "The 'act to constrain' predicate indicates a relationship where the subject (e.g. property shapes) exercises control or limitation over the object (e.g. an argument of the target predicate), potentially influencing its behavior, scope, or interpretation.",
      "disambiguation_index": 0
    },
    "Predicate-should_satisfy": {
      "label": "should satisfy",
      "description": "The predicate 'should satisfy' indicates a conditional relationship between the subject and object. It implies that if the subject meets certain criteria or conditions (as specified by the preceding phrase), then it should conform to, meet, or fulfill the requirements described in the object.",
      "disambiguation_index": 0
    },
    "Predicate-exhibited_in": {
      "label": "exhibited in",
      "description": "The predicate 'exhibited in' indicates a relationship where the subject (e.g., k-cliques) demonstrates or displays its characteristics, properties, or features within the context of the object (e.g., KGs). This connection suggests that the subject's inherent qualities are observable and can be understood by examining the object.",
      "disambiguation_index": 0
    },
    "Predicate-expressed_as": {
      "label": "expressed as",
      "description": "The predicate 'expressed as' indicates a relationship where the subject (a concept or representation) is represented or conveyed through the object (another form of expression), often implying a transformation, simplification, or abstraction from the original to the new form.",
      "disambiguation_index": 0
    },
    "Predicate-proposed": {
      "label": "proposed",
      "description": "To propose a predicate means to introduce or suggest an idea, concept, or solution that connects two entities (subject and object), implying a relationship of correspondence, equivalence, or analogy between them. The proposed connection highlights a potential link or mapping between the subject's characteristics and the object's properties.",
      "disambiguation_index": 0
    },
    "Predicate-are_used_for_inferring": {
      "label": "are used for inferring",
      "description": "The predicate 'are used for inferring' indicates a relationship where the subject (e.g., CRs) employs or utilizes something to draw conclusions, make predictions, or derive new information. The object (e.g., new facts) represents the outcome of this inferential process.",
      "disambiguation_index": 0
    },
    "Predicate-are_used": {
      "label": "are used",
      "description": "The predicate 'are used' indicates a relationship where the subject (in this case, CRs) employs or utilizes something to achieve a specific purpose or function. The object represents what is being utilized by the subject.",
      "disambiguation_index": 0
    },
    "Predicate-like": {
      "label": "like",
      "description": "The 'like' predicate indicates a similarity or analogy between two concepts. It connects the subject and object by suggesting that they share common characteristics, properties, or attributes.",
      "disambiguation_index": 0
    },
    "Predicate-are_deployed_to_make": {
      "label": "are deployed to make",
      "description": "The predicate 'are deployed to make' indicates a purpose or intention for which something (the subject) is being utilized. It suggests that the subject has been allocated, assigned, or directed towards achieving a specific goal or outcome (the object).",
      "disambiguation_index": 0
    },
    "Predicate-are_deployed": {
      "label": "are deployed",
      "description": "To indicate that a resource or mechanism is utilized or put into operation for a specific purpose. The predicate 'are deployed' suggests that the subject's constraints are being used to achieve the object, which represents the desired outcome.",
      "disambiguation_index": 0
    },
    "Predicate-focus_on": {
      "label": "focus on",
      "description": "To focus on means to concentrate one's attention or effort on a particular aspect, characteristic, or feature of something. This predicate establishes a relationship between the subject and object, indicating that the subject directs its attention towards the specified quality, attribute, or property of the object.",
      "disambiguation_index": 0
    },
    "Predicate-learns_from": {
      "label": "learns from",
      "description": "The predicate 'learns from' indicates that the subject acquires knowledge or understanding by drawing inspiration, guidance, or insight from the object. This connection implies a causal relationship where the subject's learning process is influenced or informed by the characteristics, patterns, or principles present in the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_sequence_of": {
      "label": "is a sequence of",
      "description": "The predicate 'is a sequence of' establishes a relationship between two entities where one entity (the subject) consists of multiple instances or elements that are connected and ordered in some way, with each element being an instance of another entity type (the object).",
      "disambiguation_index": 0
    },
    "Predicate-induced_from": {
      "label": "induced from",
      "description": "The predicate 'induced from' indicates a relationship where the subject (a set of rules or principles) gives rise to or originates from the object (an outcome, result, or consequence). This connection suggests that the subject has led to or caused the existence of the object.",
      "disambiguation_index": 0
    },
    "Predicate-propose_method_to_mine": {
      "label": "propose method to mine",
      "description": "To suggest or recommend an approach for extracting knowledge (mining) from a given dataset or domain (A KG), typically based on specific rules or patterns induced from paths that have a straightforward interpretation as shapes.",
      "disambiguation_index": 0
    },
    "Predicate-serve_as": {
      "label": "serve as",
      "description": "The predicate 'serve as' indicates a functional relationship between the subject and object, suggesting that the subject has a specific role or purpose with respect to the object. In this sense, it implies a kind of equivalence or correspondence between the two entities, where the subject is seen as fulfilling some need or function for the object.",
      "disambiguation_index": 0
    },
    "Predicate-correspond_to": {
      "label": "correspond to",
      "description": "The predicate 'correspond to' indicates a relationship where the subject represents or maps to specific concepts or structures defined by the object. This connection implies that there exists an equivalence, similarity, or analogy between the two entities.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_derived_from": {
      "label": "can be derived from",
      "description": "The predicate 'can be derived from' indicates a relationship between the subject and object where the subject's properties or characteristics are inferred or generated through some process, method, or set of rules specified by the object. In other words, the object provides the means to obtain or compute the subject's attributes.",
      "disambiguation_index": 0
    },
    "Predicate-omit": {
      "label": "omit",
      "description": "The predicate 'omit' indicates that the subject intentionally leaves out or excludes the object from consideration, attention, or inclusion. It implies a deliberate act of exclusion or neglect.",
      "disambiguation_index": 0
    },
    "Predicate-writing": {
      "label": "writing",
      "description": "The predicate 'writing' represents the act of creating written content or recording information through a medium such as text, paper, computer, etc. It indicates that the subject is engaged in the process of producing written material, which can take various forms and purposes.",
      "disambiguation_index": 0
    },
    "Predicate-is_Pt_for": {
      "label": "is Pt for",
      "description": "The predicate 'is Pt for' indicates a relationship between the subject and object where the subject (a part-of-speech tagger) identifies or assigns a specific meaning to its head, which is typically an entity or concept. This connection represents a classification or categorization of the head by the subject.",
      "disambiguation_index": 0
    },
    "Predicate-predict": {
      "label": "predict",
      "description": "To predict means to form a conjecture or estimate about something based on available information and reasoning. The predicate 'predict' connects the subject (the entity making the prediction) with the object (what is being predicted), indicating that the subject has formed an expectation or forecast about the future state of affairs described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_not": {
      "label": "are not",
      "description": "The predicate 'are not' indicates a negation or denial of some property, quality, or characteristic between the subject and object. It suggests that there is no correspondence, similarity, or equivalence between them.",
      "disambiguation_index": 0
    },
    "Predicate-assess": {
      "label": "assess",
      "description": "The predicate 'assess' connects a subject (typically an entity or agent capable of evaluation) to an object (the thing being evaluated), indicating that the subject evaluates, judges, or determines the quality, value, or significance of the object.",
      "disambiguation_index": 0
    },
    "Predicate-follows": {
      "label": "follows",
      "description": "The predicate 'follows' indicates that there exists a relationship between two entities or concepts where one entity or concept is derived from, based on, or consistent with another. It suggests a logical connection or succession, implying that the subject has adopted, adhered to, or been guided by the principles, rules, or standards represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_the_same_as": {
      "label": "is the same as",
      "description": "The predicate 'is the same as' indicates a relationship of equivalence or identity between the subject and object. It suggests that both entities share the same characteristics, properties, or meaning, implying a one-to-one correspondence.",
      "disambiguation_index": 0
    },
    "Predicate-helps_us_to_mine_both": {
      "label": "helps us to mine both",
      "description": "The predicate 'helps us to mine both' indicates a connection between the subject (a concept or relationship) and the object (rules), suggesting that this subject facilitates access, understanding, or utilization of both OP and IOP rules.",
      "disambiguation_index": 0
    },
    "Predicate-show_the_relationship_between": {
      "label": "show the relationship between",
      "description": "To indicate a connection or correspondence between two entities, highlighting their similarities and/or differences.",
      "disambiguation_index": 0
    },
    "Predicate-has_a_converse_IOP_version": {
      "label": "has a converse IOP version",
      "description": "The predicate 'has a converse IOP version' indicates that there exists an inverse or reversed form of the subject's property (IOP), which is represented by the object. This relationship suggests that the subject and object are connected through their respective properties, with the former having its corresponding inverted property.",
      "disambiguation_index": 0
    },
    "Predicate--": {
      "label": "<-",
      "description": "The '<-' predicate represents a directional relationship between two predicates, indicating that the subject of one predicate is connected to or transformed into the object of another. It implies a causal or explanatory link between the two predicates.",
      "disambiguation_index": 0
    },
    "Predicate-instantiate": {
      "label": "instantiate",
      "description": "To instantiate means to bring into existence or reality a concept, idea, or abstract entity by making it concrete and tangible. It implies creating an instance of something that was previously only theoretical or hypothetical, thereby giving it a specific form or identity.",
      "disambiguation_index": 0
    },
    "Predicate-satisfy": {
      "label": "satisfy",
      "description": "The predicate 'satisfy' indicates that the subject (a proposition or a condition) meets or fulfills the requirements specified by the object. In general, it establishes a connection between the subject and the object, implying that the subject's properties or characteristics align with those described in the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_instantiate": {
      "label": "can instantiate",
      "description": "The predicate 'can instantiate' connects a subject (a concept or entity) to an object (an instance or exemplar), indicating that the subject has the ability or capacity to be instantiated as, or conform to, the characteristics of the object.",
      "disambiguation_index": 0
    },
    "Predicate-need": {
      "label": "need",
      "description": "The predicate 'need' indicates a state of requirement or necessity between the subject and object. It implies that the subject lacks something specified by the object, which must be obtained or fulfilled to achieve a desired outcome.",
      "disambiguation_index": 0
    },
    "Predicate-annotated_with_a_cardinality": {
      "label": "annotated with a cardinality",
      "description": "The predicate 'annotated with a cardinality' indicates that the subject (in this case, an IOP rule) has been associated or labeled with information about its quantity or scope, as represented by the object (Car). This connection suggests that the subject's properties or characteristics are being quantified or bounded in some way.",
      "disambiguation_index": 0
    },
    "Predicate-annotated_with_a_cardinality_Car": {
      "label": "annotated with a cardinality Car",
      "description": "This predicate indicates that the subject (e.g., an IOP rule) has been associated or labeled with a specific cardinality value represented by 'Car', which provides additional information about the quantity or scope of the subject. The connection between the subject and object is one of attribution, where the subject's properties are described in terms of the cardinality specified.",
      "disambiguation_index": 0
    },
    "Predicate-be_an_annotated_IOP_rule_of_the_form_4": {
      "label": "be an annotated IOP rule of the form (4)",
      "description": "This predicate connects a subject (typically a variable or expression representing an Intermediate-Output Pattern) to its object, which is an annotated rule of the form (4). The predicate indicates that the subject corresponds to this specific type of IOP rule.",
      "disambiguation_index": 0
    },
    "Predicate-have_cardinality_annotation_for": {
      "label": "have cardinality annotation for",
      "description": "The predicate 'have cardinality annotation for' indicates a relationship between an entity (subject) and its corresponding cardinality annotation (object), where the subject has or possesses the specified cardinality annotation.",
      "disambiguation_index": 0
    },
    "Predicate-may_have": {
      "label": "may have",
      "description": "Indicates a potential relationship between the subject and object, suggesting that the subject might possess or be associated with the characteristics described by the object. The predicate 'may have' implies a possibility or likelihood of the subject having the specified attributes.",
      "disambiguation_index": 0
    },
    "Predicate-have_the_same_or_higher_IOPSC_values": {
      "label": "have the same or higher IOPSC values",
      "description": "This predicate indicates a relationship where the subject and object are compared based on their respective IOPSC value magnitudes. The predicate suggests that the subject's IOPSC value is either equal to or greater than the object's, implying some kind of similarity or dominance in terms of intensity or strength.",
      "disambiguation_index": 0
    },
    "Predicate-be_an": {
      "label": "be an",
      "description": "The predicate 'be an' indicates a classification or categorization relationship between the subject and object. It suggests that the subject has a specific property, characteristic, or nature described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-be_the_same_rule_shortened_by_removing_the_last_head_predicate.": {
      "label": "be the same rule shortened by removing the last head predicate.",
      "description": "This predicate connects a subject (a rule) to an object (another rule), indicating that they share a commonality in being rules with one less head predicate. The connection highlights the similarity between two rules, emphasizing their reduced complexity.",
      "disambiguation_index": 0
    },
    "Predicate-has_a_form_of_3": {
      "label": "has a form of (3)",
      "description": "The predicate 'has a form of (3)' indicates that the subject bears some relationship to a specific grammatical structure or pattern, specifically one with three elements. This connection implies that the subject has an inherent organization or arrangement that can be described using this particular structural template.",
      "disambiguation_index": 0
    },
    "Predicate-shortened_by_removing_the_last_head_predicate_from_r": {
      "label": "shortened by removing the last head predicate from r",
      "description": "This predicate describes a relationship between two linguistic structures (subject and object), where the subject has undergone modification to remove its final constituent, resulting in the creation of the object. The connection between the subject and object lies in their shared underlying structure, with the subject being transformed into the object through this process.",
      "disambiguation_index": 0
    },
    "Predicate-less_than_or_equal_to_IOPSCr": {
      "label": "less than or equal to IOPSC(r')",
      "description": "This predicate indicates that the subject and object are identical, as they both represent instances of International Organization for Psychosocial Services' (IOPSC) rating scale. The comparison suggests a sense of equivalence or similarity between the two entities.",
      "disambiguation_index": 0
    },
    "Predicate-is_useful_for": {
      "label": "is useful for",
      "description": "The predicate 'is useful for' indicates a functional relationship between its subject and object. It suggests that the subject has some inherent property or quality that makes it suitable, effective, or beneficial for achieving or accomplishing something represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-add": {
      "label": "add",
      "description": "The 'add' predicate represents an operation that combines or integrates two entities (subject and object) to form a new whole. It indicates a process of augmentation, extension, or combination, resulting in a modified state or entity.",
      "disambiguation_index": 0
    },
    "Predicate-start_with": {
      "label": "start with",
      "description": "The predicate 'start with' indicates a relationship where the subject begins or initiates something described by the object. This can imply an order of operations, a sequence of events, or a foundation for further action.",
      "disambiguation_index": 0
    },
    "Predicate-adapt_its_embedding-based_OP_rule_learning_to_learn": {
      "label": "adapt its embedding-based OP rule learning to learn",
      "description": "To modify or adjust a process of learning from embedded representations and operational principles (OPs) based on learned rules, so that it can learn new information.",
      "disambiguation_index": 0
    },
    "Predicate-mine": {
      "label": "mine",
      "description": "The predicate 'mine' indicates a claim of ownership or possession over something. It establishes a relationship between the subject and object, suggesting that the subject has control, authority, or responsibility for the object.",
      "disambiguation_index": 0
    },
    "Predicate-shown_in": {
      "label": "shown in",
      "description": "The predicate 'shown in' indicates a relationship between an entity (the subject) and a context or framework that provides insight into its nature, functionality, or implementation. The object of this predicate typically represents a structured representation, such as an algorithm, diagram, or protocol, which serves as the backdrop for understanding the subject.",
      "disambiguation_index": 0
    },
    "Predicate-prune": {
      "label": "prune",
      "description": "To remove or eliminate parts of something, typically to improve its quality, efficiency, or clarity by reducing unnecessary elements.",
      "disambiguation_index": 0
    },
    "Predicate-is_fed_to": {
      "label": "is fed to",
      "description": "Indicates that the subject is used as input or provided data for a process or system denoted by the object. The predicate 'is fed to' suggests a one-way flow of information, where the subject is being utilized or processed by the object.",
      "disambiguation_index": 0
    },
    "Predicate-in": {
      "label": "in",
      "description": "The predicate 'in' indicates a part-whole or containment relationship between the subject and object. It suggests that the subject is embedded within or contained by the object.",
      "disambiguation_index": 0
    },
    "Predicate-learn_(1)": {
      "label": "learn",
      "description": "To acquire knowledge or understanding of a concept, skill, or information through study, practice, or experience.",
      "disambiguation_index": 1
    },
    "Predicate-informs": {
      "label": "informs",
      "description": "The predicate 'informs' indicates that the subject provides information or insight to the object. It suggests a causal relationship where the subject's knowledge, data, or understanding influences or shapes the object in some way.",
      "disambiguation_index": 0
    },
    "Predicate-inform_the_generation_of_IOP_rules_bounded_by_a_maximum_length": {
      "label": "inform the generation of IOP rules bounded by a maximum length",
      "description": "This predicate indicates the process of generating a set of Intermediate Optimization Problems (IOP) rules with a predetermined maximum length, and providing information about these generated IOP rules to inform subsequent decision-making processes.",
      "disambiguation_index": 0
    },
    "Predicate-produce": {
      "label": "produce",
      "description": "To produce a predicate connects its subject to an object by indicating that the subject has created or brought into existence something described by the object. This can include generating, creating, manufacturing, or producing tangible or intangible entities such as objects, rules, ideas, or concepts.",
      "disambiguation_index": 0
    },
    "Predicate-evaluate_annotate_and_filter_in_Ev_to_produce_annotated_IOP_rules": {
      "label": "evaluate, annotate, and filter in Ev to produce annotated IOP rules",
      "description": "This predicate represents a process of analyzing and refining potential input/output (I/O) rules by evaluating their relevance, annotating them with relevant information, filtering out those that do not meet certain criteria, and ultimately producing annotated IOP rules. The connection between the subject and object is one of transformation, where the subject (potential IOP rules) undergoes a series of evaluations, annotations, and filters to produce the resulting object (annotated IOP rules).",
      "disambiguation_index": 0
    },
    "Predicate-is_discovered_for_each_argument_of_each_target_predicate_by_aggregating_mined_IOP_rules_in_GreedySearch": {
      "label": "is discovered for each argument of each target predicate by aggregating mined IOP rules in GreedySearch",
      "description": "This predicate connects a subject to an object by indicating that the subject's arguments are related to the object through mined IOP rules aggregated using GreedySearch. The connection highlights the discovery of patterns or relationships between the subject and its arguments, which in turn relate to the target predicate.",
      "disambiguation_index": 0
    },
    "Predicate-is_similar_to": {
      "label": "is similar to",
      "description": "Indicates a relationship of likeness or analogy between two entities. This predicate suggests that the subject and object share common characteristics, properties, or features that make them comparable.",
      "disambiguation_index": 0
    },
    "Predicate-admits": {
      "label": "admits",
      "description": "The predicate 'admits' indicates that the subject acknowledges or concedes to the existence of the object. It implies a sense of acceptance, permission, or validation.",
      "disambiguation_index": 0
    },
    "Predicate-cannot_handle": {
      "label": "cannot handle",
      "description": "The predicate 'cannot handle' indicates that the subject lacks the ability or capacity to manage, process, or deal with the object. It suggests a limitation or deficiency on the part of the subject in handling or coping with the object's characteristics, properties, or demands.",
      "disambiguation_index": 0
    },
    "Predicate-differs_from": {
      "label": "differs from",
      "description": "The predicate 'differs from' indicates a relationship of distinction or non-identity between two entities. It suggests that the subject and object are distinct concepts, processes, or things that do not share common characteristics, properties, or attributes.",
      "disambiguation_index": 0
    },
    "Predicate-computes": {
      "label": "computes",
      "description": "The predicate 'computes' indicates that the subject performs some calculation or processing to derive the object. The computation may involve manipulating data, applying algorithms, or using logical rules to generate a result.",
      "disambiguation_index": 0
    },
    "Predicate-consisting_of_a_bounded_number_of_entities_that_are_related_to_the_target_predicate_Pt": {
      "label": "consisting of a bounded number of entities that are related to the target predicate Pt",
      "description": "This predicate indicates that the subject consists of a finite and well-defined set of entities that have some connection or relationship with the object (target predicate Pt). The bounded number of entities can be thought of as a collection, group, or subset that shares a common characteristic or property related to the target predicate.",
      "disambiguation_index": 0
    },
    "Predicate-is_shown_in": {
      "label": "is shown in",
      "description": "Indicates a relationship where the subject (a concept or process) is demonstrated or exemplified by the object (typically an algorithm, procedure, or method).",
      "disambiguation_index": 0
    },
    "Predicate-search_for": {
      "label": "search for",
      "description": "The 'search for' predicate indicates a seeking or inquiry process that connects the subject (IOP rules) with an object (IOP rules with up to l atoms including the specific body target predicate, Pt). It implies a search or exploration of possibilities within the realm defined by the subject's characteristics, aiming to find or identify something matching the specified criteria.",
      "disambiguation_index": 0
    },
    "Predicate-contains": {
      "label": "contains",
      "description": "The 'contains' predicate indicates a relationship of inclusion or membership between two entities. It suggests that the subject (IOP rules with up to l atoms) has some aspect, characteristic, or component that is represented by the object (the entity set Esample and corresponding fact set K'). This connection implies that the subject encompasses or comprises part(s) of the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_pruned_in_the_sampling_process_and_no_facts_about_those_predicates_remain": {
      "label": "are pruned in the sampling process and no facts about those predicates remain",
      "description": "This predicate indicates that a set of linguistic constructs (the subject) undergoes a filtering or reduction process during data collection, resulting in the loss of all relevant information about those constructs. The object represents the outcome of this pruning operation.",
      "disambiguation_index": 0
    },
    "Predicate-reduces": {
      "label": "reduces",
      "description": "The predicate 'reduces' indicates a relationship where the subject has an effect on the object by making it smaller or more manageable in some way. It implies a transformation from a larger to a smaller form, often resulting in increased efficiency, simplicity, or clarity.",
      "disambiguation_index": 0
    },
    "Predicate-has_a_value_of": {
      "label": "has a value of",
      "description": "The predicate 'has a value of' indicates that the subject represents or embodies some specific quantity, magnitude, or measurement, which is equivalent to or described by the object. In other words, it specifies the numerical or qualitative value associated with the subject.",
      "disambiguation_index": 0
    },
    "Predicate-are_sparse_with_only_a_very_small_proportion_of": {
      "label": "are sparse with only a very small proportion of",
      "description": "This predicate indicates that there exists an uneven distribution between the subject and object, where the majority of elements are not part of a relationship or association with each other. The proportion mentioned suggests a significant imbalance, implying that only a small fraction of entities have any connection to predicates within a certain distance.",
      "disambiguation_index": 0
    },
    "Predicate-is_far_smaller_than": {
      "label": "is far smaller than",
      "description": "This predicate indicates a significant difference in size or magnitude between two entities. It suggests that the subject entity has a much reduced scope, extent, or quantity compared to the object entity.",
      "disambiguation_index": 0
    },
    "Predicate-compares_to": {
      "label": "compares to",
      "description": "The predicate 'compares to' indicates a relationship of similarity or equivalence between two entities (subject and object), suggesting that they share common characteristics, properties, or attributes.",
      "disambiguation_index": 0
    },
    "Predicate-target": {
      "label": "target",
      "description": "The predicate 'target' indicates that the subject (Pt) has a specific objective or goal in relation to the object ('predicates'), which can be understood as a set of rules, principles, or guidelines.",
      "disambiguation_index": 0
    },
    "Predicate-has_parameter": {
      "label": "has parameter",
      "description": "The predicate 'has parameter' indicates a relationship between the subject and object where the subject possesses or contains one or more parameters. This connection implies that the subject has some inherent characteristic, attribute, or property defined by the object.",
      "disambiguation_index": 0
    },
    "Predicate-max_rule_length": {
      "label": "max rule length",
      "description": "The predicate 'max rule length' represents a relationship between the subject and object that indicates the maximum allowed length of rules or constraints. It connects the subject (e.g., Parameters) to the object (e.g., l), specifying an upper bound for the complexity or size of rules.",
      "disambiguation_index": 0
    },
    "Predicate-subgraph_of_the_input_graph": {
      "label": "subgraph of the input graph",
      "description": "The predicate 'subgraph of the input graph' indicates a relationship between two graphs where one (the subject) is a subset or part of another (the object), specifically, it represents an induced substructure within the larger structure.",
      "disambiguation_index": 0
    },
    "Predicate-compute": {
      "label": "compute",
      "description": "To process or generate information based on given data or inputs, often using algorithms and mathematical operations to produce a desired output.",
      "disambiguation_index": 0
    },
    "Predicate-obtained_from": {
      "label": "obtained from",
      "description": "Indicates that the subject has its origin or source in the object. The predicate 'obtained from' suggests a causal relationship between the subject and the object, implying that the subject's existence, properties, or characteristics are derived from or influenced by the object.",
      "disambiguation_index": 0
    },
    "Predicate-embeds": {
      "label": "embeds",
      "description": "The predicate 'embeds' represents an operation that maps or assigns entities or concepts to specific representations, typically numerical vectors. This process establishes a correspondence between abstract entities and their corresponding embeddings in a high-dimensional space.",
      "disambiguation_index": 0
    },
    "Predicate-has_relation": {
      "label": "has relation",
      "description": "The predicate 'has relation' indicates a connection or association between two entities (subject and object), suggesting that there exists some kind of relationship, similarity, or correspondence between them.",
      "disambiguation_index": 0
    },
    "Predicate-produces": {
      "label": "produces",
      "description": "The predicate 'produces' indicates a relationship where the subject entity generates or creates the object entity. This can imply a process of generation, creation, or derivation, suggesting that the subject has some role in bringing forth or forming the object.",
      "disambiguation_index": 0
    },
    "Predicate-invokes": {
      "label": "invokes",
      "description": "The predicate 'invokes' indicates that the subject (in this case, an algorithm) triggers or initiates the execution of a specific process or function represented by the object. This connection implies a causal relationship between the two entities, where the subject's action leads to the activation or utilization of the object.",
      "disambiguation_index": 0
    },
    "Predicate-pruned_by": {
      "label": "pruned by",
      "description": "The predicate 'pruned by' indicates a relationship where the subject (e.g., candidate rules) has been reduced or filtered based on some criteria specified by the object (e.g., scoring function heuristic for OP rules). The connection between the subject and object suggests that the object's characteristics, properties, or values have influenced the reduction process of the subject.",
      "disambiguation_index": 0
    },
    "Predicate-prunes": {
      "label": "prunes",
      "description": "The predicate 'prunes' indicates a process of removing or eliminating elements from a set or collection (the object), typically based on certain criteria or conditions, as determined by the subject. In this context, the subject provides the rules or guidelines for pruning, and the resulting pruned output is the reduced or filtered version of the original set.",
      "disambiguation_index": 0
    },
    "Predicate-acts_to_connect": {
      "label": "acts to connect",
      "description": "The 'acts to connect' predicate indicates a relationship where the subject (an entity or concept) performs an action that links or relates two or more entities, concepts, or ideas represented by the object. This connection can be established through various means such as association, classification, categorization, or binding.",
      "disambiguation_index": 0
    },
    "Predicate-acts_to_connect_entities_satisfying_the_subject_argument_of_the_body_predicate": {
      "label": "acts to connect entities satisfying the subject argument of the body predicate",
      "description": "This predicate describes an action that connects or relates entities that satisfy a specific condition defined by the subject argument of another predicate (the body predicate). The connection established by this predicate links these entities to others forming the object argument of yet another predicate, effectively creating a chain of relationships between them.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_relationship_between": {
      "label": "is a relationship between",
      "description": "This predicate establishes a connection or association between two entities (subject and object), indicating that they share some kind of logical or conceptual link. The relationship described can be abstract, concrete, causal, hierarchical, or any other type of connection.",
      "disambiguation_index": 0
    },
    "Predicate-and": {
      "label": "and",
      "description": "The predicate 'and' connects two entities or concepts by indicating a relationship of conjunction, unity, or equivalence. It suggests that the subject and object share commonalities, properties, or characteristics, forming a cohesive whole.",
      "disambiguation_index": 0
    },
    "Predicate-is_related_to": {
      "label": "is related to",
      "description": "The predicate 'is related to' indicates a connection or association between two entities (subject and object), suggesting that there exists some meaningful relationship, similarity, or correspondence between them. This relationship can be based on various aspects such as semantic meaning, syntactic structure, contextual information, or other relevant factors.",
      "disambiguation_index": 0
    },
    "Predicate-forms_a": {
      "label": "forms a",
      "description": "Indicates that the subject contributes to or structures the object into a cohesive unit, often implying a sense of organization, composition, or synthesis.",
      "disambiguation_index": 0
    },
    "Predicate-check": {
      "label": "check",
      "description": "The predicate 'check' indicates a process of verifying or examining the truthfulness or validity of something (the object). It implies a critical evaluation or assessment to determine whether the subject's claim, assumption, or expectation aligns with reality. In this sense, it connects the subject and object by establishing a relationship between what is claimed or assumed and its actual state.",
      "disambiguation_index": 0
    },
    "Predicate-will_hold": {
      "label": "will hold",
      "description": "The predicate 'will hold' indicates a future state of affairs where some condition or property (object) will be maintained, sustained, or persisted by the subject. It implies a sense of continuity and stability between the current moment and a point in time ahead.",
      "disambiguation_index": 0
    },
    "Predicate-producing": {
      "label": "producing",
      "description": "The predicate 'producing' indicates that the subject is responsible for generating or creating the object. It implies a causal relationship between the subject and the object, where the subject's actions or processes result in the creation of the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_pruned_by": {
      "label": "are pruned by",
      "description": "The predicate 'are pruned by' indicates a relationship where the subject (a set of candidate IOP rules) has its elements reduced or filtered based on some criteria defined by the object (scoring function heuristic for OP rules). In general, this predicate represents an operation that removes or eliminates certain items from consideration, resulting in a refined or more focused subset.",
      "disambiguation_index": 0
    },
    "Predicate-focus_our_attention_on": {
      "label": "focus our attention on",
      "description": "To 'focus our attention on' means to direct one's mental resources and cognitive effort towards a specific entity or concept, highlighting its importance, relevance, or significance. This predicate establishes a connection between the subject (the agent of focus) and the object (the thing being focused upon), indicating that the subject is actively engaging with and prioritizing the object.",
      "disambiguation_index": 0
    },
    "Predicate-focuses_on": {
      "label": "focuses on",
      "description": "The predicate 'focuses on' indicates that the subject has a primary attention or emphasis towards the object. It suggests that the subject's actions, efforts, or resources are directed at understanding, analyzing, or working with the object in some way.",
      "disambiguation_index": 0
    },
    "Predicate-evaluates": {
      "label": "evaluates",
      "description": "The predicate 'evaluates' indicates that the subject (in this case, an algorithm or a process) assesses or judges the quality, validity, or relevance of the object (candidate rules), often with the goal of making decisions, identifying patterns, or determining suitability.",
      "disambiguation_index": 0
    },
    "Predicate-first_evaluates": {
      "label": "first evaluates",
      "description": "The predicate 'first evaluates' indicates a process of initial assessment or examination that connects the subject (e.g., Ev()) to an object (e.g., the small sampled KG), suggesting that the subject's primary function is to assess, judge, or determine the quality or value of the object.",
      "disambiguation_index": 0
    },
    "Predicate-calculated_over": {
      "label": "calculated over",
      "description": "The predicate 'calculated over' indicates that a calculation or computation was performed on some entity (the object), resulting in an outcome related to the subject. The subject and object are connected by the fact that the calculation was done with respect to, or based on, the information contained within the object.",
      "disambiguation_index": 0
    },
    "Predicate-include": {
      "label": "include",
      "description": "The predicate 'include' indicates that the subject has or comprises the object. It suggests a relationship where the subject contains, encompasses, or possesses the qualities, characteristics, or elements described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-represent_as_a_set_of_square_n_x_n_adjacency_matrices_by_defining_the_function_A.": {
      "label": "represent as a set of square n x n adjacency matrices by defining the function A.",
      "description": "This predicate represents a transformation that maps an object (the subject) into a specific representation, namely a set of square n x n adjacency matrices. The function A defines the mapping from the original object to this new representation.",
      "disambiguation_index": 0
    },
    "Predicate-represent": {
      "label": "represent",
      "description": "To represent means to express or depict something (the object) through a particular form, medium, or interpretation. The predicate 'represent' establishes an equivalence between the subject and the way they are described by the object, conveying that the subject embodies or exemplifies the characteristics or essence of what is represented.",
      "disambiguation_index": 0
    },
    "Predicate-illustrate": {
      "label": "illustrate",
      "description": "To illustrate means to clarify or make clear through visual representation, explanation, or demonstration. The predicate 'illustrate' connects the subject (the entity performing the action of illustration) with the object (what is being explained or demonstrated), indicating that the subject's purpose is to provide a clearer understanding of the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_for": {
      "label": "are for",
      "description": "Indicates a purpose or intended use relationship between the subject (adjacency matrices in this case) and object (predicates P1, P2, ..., Pt), suggesting that the adjacency matrices are designed to serve or facilitate these predicates.",
      "disambiguation_index": 0
    },
    "Predicate-count": {
      "label": "count",
      "description": "The predicate 'count' establishes a relationship between entities and their quantity or frequency. It connects the subject (the entities) to the object (a numerical value), indicating that the number of instances specified by the subject matches the count.",
      "disambiguation_index": 0
    },
    "Predicate-find": {
      "label": "find",
      "description": "The predicate 'find' indicates a process of discovery or detection, where the subject (agent) actively seeks out and identifies the object. This connection implies that the subject has some level of control over the search process and may employ various methods to locate the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_connected_by": {
      "label": "are connected by",
      "description": "The predicate 'are connected by' indicates a relationship between two entities (subject and object) where they share a common thread or link. This connection can be physical, logical, temporal, causal, or any other type of association that binds them together.",
      "disambiguation_index": 0
    },
    "Predicate-obtain": {
      "label": "obtain",
      "description": "The predicate 'obtain' indicates a process of acquiring or securing something, often as the result of an action or calculation. It implies that the subject has successfully gained access to or derived the object through some means, which may involve manipulation, computation, or other forms of processing.",
      "disambiguation_index": 0
    },
    "Predicate-indicates": {
      "label": "indicates",
      "description": "Indicates connects a subject to an object by suggesting or pointing out a relationship between them. It implies that the subject has some characteristic, property, or feature in common with the entities described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-satisfying": {
      "label": "satisfying",
      "description": "The predicate 'satisfying' indicates a relationship where the subject meets or fulfills the requirements specified by the object. It implies that the subject has properties, characteristics, or conditions that align with or match those described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-multiplication_of": {
      "label": "multiplication of",
      "description": "The predicate 'multiplication of' indicates a process of combining or scaling two entities (subject and object), resulting in a new entity that represents their product. This connection implies an algebraic operation, where the subject and object are combined to produce a new quantity with properties derived from those of its components.",
      "disambiguation_index": 0
    },
    "Predicate-are_computed_by": {
      "label": "are computed by",
      "description": "Indicates a relationship where some entity (subject) has its values or results determined through a specific process or method (object).",
      "disambiguation_index": 0
    },
    "Predicate-turn_to": {
      "label": "turn to",
      "description": "To 'turn to' means to shift one's attention or focus towards something, often implying a change of direction or perspective. This predicate connects the subject with an action that involves redirecting their efforts or consideration towards the object, which can be a process, concept, or activity.",
      "disambiguation_index": 0
    },
    "Predicate-are_illustrated_in": {
      "label": "are illustrated in",
      "description": "The predicate 'are illustrated in' indicates a relationship where the subject (in this case, annotated IOP rules) provides visual representations or examples that are contained within the object (Fig. 1). The predicate suggests that the subject's concepts or ideas are depicted or shown through the illustrations found in the object.",
      "disambiguation_index": 0
    },
    "Predicate-deriving_SHACL_trees_from_annotated_IOP_rules": {
      "label": "deriving SHACL trees from annotated IOP rules",
      "description": "This predicate represents a process of generating or constructing Semantic Web Association Language (SHACL) trees based on input provided by annotated Integration Object Pattern (IOP) rules. The connection between the subject and object lies in the transformation of IOP-annotated information into SHACL tree structures, enabling the creation of semantic models that can be used for data validation, constraint definition, or other purposes.",
      "disambiguation_index": 0
    },
    "Predicate-is_used_in": {
      "label": "is used in",
      "description": "The predicate 'is used in' indicates a relationship between an entity (the subject) and its context or environment where it operates. The object represents this context, which can be a physical space, a system, a tool, or any other setting where the subject is employed.",
      "disambiguation_index": 0
    },
    "Predicate-aggregate": {
      "label": "aggregate",
      "description": "The 'aggregate' predicate connects two arguments (subject and object), indicating that a collection or summary is formed from the relationships between them. This connection implies a higher-level abstraction, where individual elements are grouped together to convey a meaningful whole.",
      "disambiguation_index": 0
    },
    "Predicate-exists": {
      "label": "exists",
      "description": "The predicate 'exists' indicates that the subject (z*) has a presence or reality in some context, which can be related to the object(s) (y*s). This connection suggests that the existence of z* is somehow tied to or dependent on y*, implying a relationship between the two.",
      "disambiguation_index": 0
    },
    "Predicate-is_given_by": {
      "label": "is given by",
      "description": "The predicate 'is given by' indicates a relationship where the subject provides or offers something to another entity (the object), which is typically characterized as being defined, specified, or determined by the subject. In this sense, the subject serves as the source of information or authority that defines or explains the nature of the object.",
      "disambiguation_index": 0
    },
    "Predicate-join_in_one_shared_variable": {
      "label": "join in one shared variable",
      "description": "The predicate 'join in one shared variable' indicates a connection between the subject and object where multiple entities or concepts are unified under a single representation or entity. This unification allows for a common understanding, integration, or coordination among these entities.",
      "disambiguation_index": 0
    },
    "Predicate-denoted_by": {
      "label": "denoted by",
      "description": "The predicate 'denoted by' establishes a relationship between its subject and object, indicating that the subject represents or corresponds to the meaning conveyed by the object. In this sense, it connects the abstract concept represented by the subject with the concrete representation provided by the object.",
      "disambiguation_index": 0
    },
    "Predicate-has_head": {
      "label": "has head",
      "description": "The predicate 'has head' indicates a relationship between an entity (subject) and its corresponding heading or title. It suggests that the subject has, possesses, or is associated with the object as its primary identifier or summary.",
      "disambiguation_index": 0
    },
    "Predicate-given_by": {
      "label": "given by",
      "description": "The predicate 'given by' indicates a relationship where the subject (e.g. TreeSC) has its definition or specification provided by the object (e.g. The tree support and tree standard confidence of r). This suggests that the subject's meaning, characteristics, or properties are determined or derived from the information contained in the object.",
      "disambiguation_index": 0
    },
    "Predicate-employ_a_greedy_search": {
      "label": "employ a greedy search",
      "description": "The predicate 'employ a greedy search' indicates that an algorithm or method (subject) uses a specific approach to find the optimal solution by iteratively selecting the most promising option until it reaches a satisfactory outcome, often without considering all possible alternatives. This process is characterized by its focus on exploiting local optima and neglecting potential better solutions.",
      "disambiguation_index": 0
    },
    "Predicate-sort": {
      "label": "sort",
      "description": "The predicate 'sort' connects the subject and object by indicating a process of organizing or categorizing entities according to specific criteria. It implies a transformation from an unordered state to one where elements are grouped, prioritized, or arranged in a meaningful way.",
      "disambiguation_index": 0
    },
    "Predicate-do_the_same_with": {
      "label": "do the same with",
      "description": "This predicate indicates a relationship where the subject is expected to conform or follow the pattern, principles, or guidelines specified by the object. The connection between the subject and object suggests an analogy or similarity, implying that the subject should adopt similar behavior or characteristics as described in the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_presented_as": {
      "label": "can be presented as",
      "description": "The predicate 'can be presented as' indicates a relationship between two entities where one entity (the subject) has the ability to be represented or expressed in terms of another entity (the object). This implies that there exists a common representation, standardization, or framework that allows for the subject to be conveyed or understood through the lens of the object.",
      "disambiguation_index": 0
    },
    "Predicate-interpreted_as": {
      "label": "interpreted as",
      "description": "The predicate 'interpreted as' indicates a mapping or correspondence between two concepts. It suggests that one concept (the subject) can be understood or represented in terms of another concept (the object). This relationship implies a level of abstraction, where the subject's meaning or significance is clarified by its connection to the object.",
      "disambiguation_index": 0
    },
    "Predicate-declared_as": {
      "label": "declared as",
      "description": "Indicates a specification or definition of something (the subject), which serves to identify its characteristics, properties, or nature. The predicate 'declared as' establishes an equivalence between the subject and the object, implying that the subject conforms to or embodies the description provided by the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_read_from": {
      "label": "is read from",
      "description": "The predicate 'is read from' indicates that the subject has its meaning or significance derived from the object. It suggests a relationship where the subject is interpreted, understood, or determined by reference to the object.",
      "disambiguation_index": 0
    },
    "Predicate-supports": {
      "label": "supports",
      "description": "The predicate 'supports' indicates a relationship where the subject provides foundation, backing, or justification for the object. It suggests that the subject plays a role in upholding, maintaining, or validating the existence or significance of the object.",
      "disambiguation_index": 0
    },
    "Predicate-offer": {
      "label": "offer",
      "description": "To offer means to present or make available something (typically an idea, resource, or service) to someone else for their consideration, acceptance, or use. This predicate establishes a connection between the subject and object by indicating that the subject provides access to or presents the object as a potential solution, opportunity, or benefit.",
      "disambiguation_index": 0
    },
    "Predicate-provide": {
      "label": "provide",
      "description": "To provide means to offer or make available something that enables or facilitates the achievement of an objective. It implies a connection between the subject and object, where the subject offers or provides what is necessary for the object to fulfill its purpose.",
      "disambiguation_index": 0
    },
    "Predicate-proposed_to_complete": {
      "label": "proposed to complete",
      "description": "The predicate 'proposed to complete' indicates that a subject (e.g., several methods) has suggested or intended to finish or accomplish an object (e.g., KGs), implying a plan, intention, or suggestion for achieving completion.",
      "disambiguation_index": 0
    },
    "Predicate-generates": {
      "label": "generates",
      "description": "The predicate 'generates' indicates a relationship where the subject (a system or entity) produces or creates something new, such as an instance, example, or representation of the object. The generated item can be a tangible outcome, like data or content, or an intangible one, like a concept or idea.",
      "disambiguation_index": 0
    },
    "Predicate-help": {
      "label": "help",
      "description": "The predicate 'help' indicates that one entity (the subject) receives assistance or guidance from another entity (the object), often to overcome challenges, achieve a goal, or gain understanding. The connection between the subject and object implies a relationship of dependence, where the subject relies on the expertise, knowledge, or support provided by the object.",
      "disambiguation_index": 0
    },
    "Predicate-pruned_to_obtain_simpler_tree_with_higher_confidence_in_the_KG": {
      "label": "pruned to obtain simpler tree with higher confidence in the KG",
      "description": "The predicate 'pruned to obtain simpler tree with higher confidence in the KG' indicates a transformation process that refines or simplifies the subject (TreeSCorig), resulting in an improved representation of knowledge graph entities, as represented by the object (TreeSCnew).",
      "disambiguation_index": 0
    },
    "Predicate-deriving_SHACL_trees": {
      "label": "deriving SHACL trees",
      "description": "The predicate 'deriving SHACL trees' represents a process of generating or constructing Shape Constraint Language (SHACL) trees from given input data, using specific rules and algorithms. This connection links the subject to the object by indicating that the subject is responsible for creating or deriving these SHACL trees based on the provided annotated IOP rules.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_for_KG-completion": {
      "label": "can be used for KG-completion",
      "description": "Indicates that a subject entity or concept has the capability to contribute to the process of completing knowledge graphs (KGs), potentially by providing structured data, rules, or guidelines for KG construction and maintenance.",
      "disambiguation_index": 0
    },
    "Predicate-address_learning_SHACL_shapes_from_KGs": {
      "label": "address learning SHACL shapes from KGs",
      "description": "This predicate describes the process of deriving or generating Semantic Web Association Language (SHACL) shapes from Knowledge Graphs (KGs). It indicates a connection between exploratory attempts and KGs, suggesting that SHACL shapes are being extracted or constructed based on information present within these knowledge graphs.",
      "disambiguation_index": 0
    },
    "Predicate-address": {
      "label": "address",
      "description": "To direct or orient oneself towards a specific topic, concept, or goal. This predicate indicates that the subject is focusing its attention and efforts on understanding or engaging with the object.",
      "disambiguation_index": 0
    },
    "Predicate-without": {
      "label": "without",
      "description": "The predicate 'without' indicates a relationship of exclusion or absence between the subject and object. It suggests that the subject does not rely on, utilize, or incorporate the object as part of its nature, function, or operation.",
      "disambiguation_index": 0
    },
    "Predicate-are_not_shown_to_be": {
      "label": "are not shown to be",
      "description": "Indicates a lack of demonstration or evidence that something has a particular property or characteristic. The predicate suggests that there is no empirical support or proof to substantiate the subject's possession of the object, implying a negative relationship between them.",
      "disambiguation_index": 0
    },
    "Predicate-are_not_shown_to_be_scalable_to_handle_real-world_KGs": {
      "label": "are not shown to be scalable to handle real-world KGs",
      "description": "This predicate indicates that a particular approach or method (subject) lacks evidence of being able to efficiently process and manage large-scale knowledge graphs (real-world KGs), making it unsuitable for practical applications.",
      "disambiguation_index": 0
    },
    "Predicate-lack": {
      "label": "lack",
      "description": "The predicate 'lack' indicates a relationship where the subject lacks or is deficient in some aspect or quality described by the object. In this sense, it implies an absence or insufficiency of something that would be expected to exist or be present.",
      "disambiguation_index": 0
    },
    "Predicate-work_with": {
      "label": "work with",
      "description": "The predicate 'work with' indicates an intentional and collaborative relationship between the subject and object. It suggests that the subject engages in some activity or process together with, or utilizing, the object to achieve a common goal or outcome.",
      "disambiguation_index": 0
    },
    "Predicate-provides_a_sample_of_data_to_an_off-the-shelf_graph_structure_learner_and_provides_the_output_in_an_interactive_interface_for_a_human_user_to_create_SHACL_shapes": {
      "label": "provides a sample of data to an off-the-shelf graph structure learner and provides the output in an interactive interface for a human user to create SHACL shapes",
      "description": "This predicate connects the subject (approach or other relevant entities) with the object (SHACL shapes), indicating that the approach provides a sample of data to an off-the-shelf graph structure learner, which in turn enables human users to create SHACL shapes through an interactive interface. The predicate highlights the role of providing data and facilitating shape creation as part of the overall process.",
      "disambiguation_index": 0
    },
    "Predicate-provides_an_interactive_framework_to_define": {
      "label": "provides an interactive framework to define",
      "description": "This predicate indicates that a subject offers or enables the creation of a specific type of definition through an interactive interface. The object represents the entity being defined, and the interaction framework provides a means to shape, structure, or refine this definition.",
      "disambiguation_index": 0
    },
    "Predicate-gives": {
      "label": "gives",
      "description": "The predicate 'gives' indicates a transfer of possession or control from the subject to the object. It implies that the subject has authority over the object and is providing it, sharing it, or offering it in some way.",
      "disambiguation_index": 0
    },
    "Predicate-uses_the_KG_itself_to_discover_the_shapes_without_relying_on_external_modelling_artefacts.": {
      "label": "uses the KG itself to discover the shapes, without relying on external modelling artefacts.",
      "description": "This predicate indicates that the subject entity employs its own knowledge graph (KG) as a means of discovering or identifying shapes, rather than utilizing external models or representations.",
      "disambiguation_index": 0
    },
    "Predicate-suggests": {
      "label": "suggests",
      "description": "Indicates a relationship where the subject proposes or recommends an idea, concept, or approach that can be used to achieve a particular goal or solve a problem. The predicate 'suggests' implies a causal connection between the subject and object, suggesting that the former is offering a possible solution or direction for consideration.",
      "disambiguation_index": 0
    },
    "Predicate-proposed_to_detect_which": {
      "label": "proposed to detect which",
      "description": "This predicate indicates that a method or approach aims to identify or determine which specific instances of something (represented by the object) possess certain characteristics or meet particular criteria. The subject, being the method, proposes to detect or recognize these instances based on their properties.",
      "disambiguation_index": 0
    },
    "Predicate-could_be_violated_by_applying_a_rule": {
      "label": "could be violated by applying a rule",
      "description": "This predicate indicates that there exists a potential relationship between the subject and object such that if a specific rule is applied to the subject, it may result in a violation or non-compliance with certain constraints or expectations. The connection between the subject and object highlights the possibility of an inconsistency or mismatch when applying rules to the subject.",
      "disambiguation_index": 0
    },
    "Predicate-provide_logical_foundations_for_the_semantics_of_the": {
      "label": "provide logical foundations for the semantics of the",
      "description": "To establish a theoretical basis or underlying principles that explain and justify the meaning or interpretation of something (the object), providing logical foundations for its semantic properties.",
      "disambiguation_index": 0
    },
    "Predicate-presents_the_semantics_of": {
      "label": "presents the semantics of",
      "description": "This predicate indicates a relationship between its subject and object where the subject provides an explanation or interpretation of the meaning behind the object. The subject can be seen as a source that clarifies, defines, or formalizes the semantics (meaning) of the object.",
      "disambiguation_index": 0
    },
    "Predicate-approach": {
      "label": "approach",
      "description": "To approach means to move towards or get closer to something (conceptual or physical), often with a sense of intentionality and consideration. It implies a deliberate effort to engage, understand, or utilize the object, which can be an idea, concept, methodology, or technology.",
      "disambiguation_index": 0
    },
    "Predicate-in_the_reverse_direction_of": {
      "label": "in the reverse direction of",
      "description": "This predicate indicates a relationship where the subject's concept or process moves backwards towards the object, often implying reversal, undoing, or negation. The connection between the subject and object suggests an inverse or opposite direction of movement, influence, or impact.",
      "disambiguation_index": 0
    },
    "Predicate-derive_shapes_that_can_be_trivially_expressed_in_a_fragment_of": {
      "label": "derive shapes that can be trivially expressed in a fragment of",
      "description": "This predicate indicates that the subject (a set of rules or constraints) generates shapes that are straightforward to express using a specific language or framework (the object). The connection between the subject and object lies in the ability of the former to produce representations that can be easily formulated within the latter's syntax.",
      "disambiguation_index": 0
    },
    "Predicate-have_implemented": {
      "label": "have implemented",
      "description": "To indicate that a subject has successfully integrated or put into practice an object, often as part of a larger project or initiative. This predicate implies a sense of completion and realization.",
      "disambiguation_index": 0
    },
    "Predicate-conducted": {
      "label": "conducted",
      "description": "To conduct something means to take charge of its execution or implementation, often involving planning, organization, and supervision. The subject performs an action that involves guiding, directing, or overseeing the object's development, testing, or operation.",
      "disambiguation_index": 0
    },
    "Predicate-are_designed_to_prove": {
      "label": "are designed to prove",
      "description": "This predicate indicates that the subject (experiments in this case) have a purpose or intention to demonstrate or validate the truthfulness of something, which is described by the object. In general, it suggests a deliberate attempt to provide evidence or confirmation for a particular claim or hypothesis.",
      "disambiguation_index": 0
    },
    "Predicate-prove": {
      "label": "prove",
      "description": "To demonstrate or show that something is true by providing evidence and logical reasoning. The predicate 'prove' indicates a process of verification or confirmation, where the subject (e.g., experiments) provides sufficient grounds to support the truthfulness of the object (e.g., effectiveness).",
      "disambiguation_index": 0
    },
    "Predicate-can_handle": {
      "label": "can handle",
      "description": "The predicate 'can handle' indicates that the subject has the capability or ability to manage, process, or execute the object. It suggests a relationship of competence and proficiency between the subject and the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_scalable_so_it_can_handle": {
      "label": "is scalable so it can handle",
      "description": "This predicate indicates that a system or entity (subject) has the capability to accommodate and process large amounts of data or complexity (object), making it suitable for handling complex tasks, managing vast quantities of information, or scaling up its operations as needed.",
      "disambiguation_index": 0
    },
    "Predicate-including": {
      "label": "including",
      "description": "The predicate 'including' indicates that the subject encompasses or contains information about the object. It suggests a relationship of totality, where the subject's scope or range includes aspects or instances related to the object.",
      "disambiguation_index": 0
    },
    "Predicate-with_respect_to": {
      "label": "with respect to",
      "description": "The predicate 'with respect to' indicates a relationship between the subject (a concept or entity) and the object (another concept, entity, or set of entities), where the subject's properties, characteristics, or attributes are being considered relative to the object. This connection implies that the subject is being evaluated, compared, or analyzed in some way with respect to the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_described_in": {
      "label": "are described in",
      "description": "The predicate 'are described in' indicates a relationship where the subject (a set of entities or concepts) has its characteristics, features, or properties documented or presented in the object (typically a table, figure, or section).",
      "disambiguation_index": 0
    },
    "Predicate-described_in": {
      "label": "described in",
      "description": "The predicate 'described in' indicates a relationship between an entity (subject) and a source or medium that provides information about it. It suggests that the subject's characteristics, properties, or features are documented or presented within the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_common": {
      "label": "are common",
      "description": "Indicates a relationship of shared occurrence or prevalence between two entities. The predicate 'are common' suggests that there exists a significant overlap or co-occurrence between the subject and object, implying a connection through frequency, popularity, or widespread presence.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_small_synthetic_KG_for": {
      "label": "is a small synthetic KG for",
      "description": "This predicate indicates that the subject represents or refers to a specific domain or topic (the object), and it has been represented using a small-scale synthetic knowledge graph. The connection between the subject and object is one of representation, where the subject serves as an identifier for the concept or entity described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_small_synthetic_KG_for_evaluating_the_completeness_of_our_algorithm": {
      "label": "is a small synthetic KG for evaluating the completeness of our algorithm",
      "description": "This predicate describes an entity as a small-scale artificial knowledge graph designed to assess the thoroughness of a specific algorithm. It establishes a connection between the subject and object by indicating that the former is a type of KG used for evaluating the completeness of the latter.",
      "disambiguation_index": 0
    },
    "Predicate-adapted_from": {
      "label": "adapted from",
      "description": "Indicates that a subject (e.g., Poker KG) has been modified or transformed to derive its current form from another source or original entity (the object, e.g., classic version). The predicate 'adapted from' highlights the relationship between the subject and the object as one of transformation, modification, or inspiration.",
      "disambiguation_index": 0
    },
    "Predicate-comprises": {
      "label": "comprises",
      "description": "The predicate 'comprises' indicates that the subject consists of or contains one or more instances of the object. It implies a whole-part relationship between the subject and the object, where the subject encompasses or includes multiple parts or components represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-drawn_from_a_deck_with_thirteen_ranks_and_four_suits": {
      "label": "drawn from a deck with thirteen ranks and four suits",
      "description": "The predicate 'drawn from a deck with thirteen ranks and four suits' indicates that the subject (e.g. poker hand, card, etc.) has been randomly selected or taken from the object (the deck), which represents a collection of cards with specific characteristics (thirteen ranks and four suits). This connection implies a process of extraction or selection, where the subject is derived from the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_assigned_to": {
      "label": "is assigned to",
      "description": "The predicate 'is assigned to' indicates a relationship where the subject (a person or entity) has been allocated or designated for a specific purpose or role, as defined by the object. This connection implies a sense of responsibility, duty, or accountability between the two entities.",
      "disambiguation_index": 0
    },
    "Predicate-generate": {
      "label": "generate",
      "description": "To generate means to create or produce something new, often through a process of formation, development, or transformation. The predicate 'generate' connects the subject and object by indicating that the subject is responsible for bringing into existence or creating the object, which can be an idea, concept, data set, or physical entity.",
      "disambiguation_index": 0
    },
    "Predicate-at": {
      "label": "at",
      "description": "The predicate 'at' indicates a spatial or temporal relationship between the subject and object, suggesting that the subject exists or operates within the scope defined by the object. In general, it implies proximity, location, or timing.",
      "disambiguation_index": 0
    },
    "Predicate-transforms": {
      "label": "transforms",
      "description": "Transforms refers to a process of converting or reorganizing one thing into another. It indicates that the subject takes some input (or data) and changes it into something new, often with a specific purpose or goal in mind. The object represents the resulting form or structure after this transformation has taken place.",
      "disambiguation_index": 0
    },
    "Predicate-require": {
      "label": "require",
      "description": "To 'require' means to necessitate or demand something from someone or something else. It implies that there is an inherent need or necessity for the object, which must be fulfilled or satisfied. In this sense, the predicate connects the subject with a necessary condition or prerequisite, highlighting the importance of fulfilling the requirement.",
      "disambiguation_index": 0
    },
    "Predicate-are_named": {
      "label": "are named",
      "description": "The predicate 'are named' establishes a relationship between the subject (a collection of classes and types) and object (Unary predicates), indicating that the former are categorized or referred to by the latter, potentially highlighting their classification or type.",
      "disambiguation_index": 0
    },
    "Predicate-is_important_since_learning_partially_instantiated": {
      "label": "is important since learning partially instantiated",
      "description": "This predicate indicates that the subject has a crucial relationship with the object due to its partial instantiation during the process of learning. It suggests that the subject plays a vital role in understanding or describing the object, and this importance arises from the incomplete nature of the learning experience.",
      "disambiguation_index": 0
    },
    "Predicate-can_cause_an_explosion_in": {
      "label": "can cause an explosion in",
      "description": "The predicate 'can cause an explosion in' indicates a causal relationship between the subject and object, suggesting that the actions or processes described by the subject can lead to a sudden and significant change or transformation within the scope defined by the object. This predicate implies a potential for disruption or upheaval within the specified domain.",
      "disambiguation_index": 0
    },
    "Predicate-modeled_as": {
      "label": "modeled as",
      "description": "The predicate 'modeled as' indicates that the subject (a concept or class membership) has its underlying structure or essence represented by, or analogous to, the object (entity instances of a binary fact). This connection suggests an abstract representation or mapping between the two entities.",
      "disambiguation_index": 0
    },
    "Predicate-make": {
      "label": "make",
      "description": "The predicate 'make' indicates a relationship between the subject and object, suggesting that the subject is responsible for creating or producing something. This can include physical objects, ideas, decisions, or even actions.",
      "disambiguation_index": 0
    },
    "Predicate-follow": {
      "label": "follow",
      "description": "To indicate that one entity (the subject) adopts or adheres to a particular course of action, principle, or guideline specified by another entity (the object).",
      "disambiguation_index": 0
    },
    "Predicate-evaluating": {
      "label": "evaluating",
      "description": "The predicate 'evaluating' indicates a process of assessing or judging the quality, effectiveness, or accuracy of something (the object), often with respect to specific criteria or standards. It implies a critical examination and evaluation of the object's characteristics, properties, or performance.",
      "disambiguation_index": 0
    },
    "Predicate-is_measured_by": {
      "label": "is measured by",
      "description": "The predicate 'is measured by' indicates a relationship where the subject (e.g., rule quality) is evaluated or assessed using the object (e.g., Inverse open path standard confidence  (IOPSC)) as a reference point, metric, or framework. This connection implies that the subject's value or status is determined through comparison with or against the characteristics defined by the object.",
      "disambiguation_index": 0
    },
    "Predicate-select": {
      "label": "select",
      "description": "The predicate 'select' indicates a deliberate or intentional choice made by the subject to focus on or prioritize the object. It implies that the subject has considered multiple options and has chosen one (or more) as being relevant, important, or worthy of attention.",
      "disambiguation_index": 0
    },
    "Predicate-as_target_predicates_of": {
      "label": "as target predicates of",
      "description": "This predicate indicates that the subject has a set of target predicates that are related to or characterized by the object. The connection between the subject and object is one of categorization, where the subject's target predicates fall under the broader category defined by the object.",
      "disambiguation_index": 0
    },
    "Predicate-set_for": {
      "label": "set for",
      "description": "The 'set for' predicate indicates a specific purpose or goal that something (the subject) serves or is intended to achieve. It establishes a connection between the subject and object, suggesting that the subject's existence or function is directed towards accomplishing or facilitating the object.",
      "disambiguation_index": 0
    },
    "Predicate-was_found": {
      "label": "was found",
      "description": "Indicates that a search or investigation led to the discovery of something previously unknown or unexplored. The subject (e.g., IOP rules) represents the entity conducting the search, and the object (e.g., target predicate) represents what was discovered as a result.",
      "disambiguation_index": 0
    },
    "Predicate-meeting_minimum_quality_thresholds_are_included_in_these_figures": {
      "label": "meeting minimum quality thresholds are included in these figures",
      "description": "This predicate indicates that a set of entities (represented by 'these figures') contains only those elements that meet certain minimum quality standards. The subject specifies the criteria for what constitutes high-quality items, and the object refers to the collection or repository where these qualified items are stored.",
      "disambiguation_index": 0
    },
    "Predicate-are_included_as": {
      "label": "are included as",
      "description": "The predicate 'are included as' indicates a relationship where the subject (e.g. rules of low quality) has its contents or scope encompassed by, or considered part of, the object (e.g. These thresholds). This connection suggests that the subject is somehow subsumed under or categorized within the broader context defined by the object.",
      "disambiguation_index": 0
    },
    "Predicate-vs": {
      "label": "vs",
      "description": "The predicate 'vs' represents a relationship of similarity or equivalence between two entities (subject and object), indicating that they share common characteristics or properties.",
      "disambiguation_index": 0
    },
    "Predicate-observe": {
      "label": "observe",
      "description": "To observe means to perceive or notice something about an object or phenomenon, often with attention and intention. The predicate 'observe' establishes a connection between the subject (the entity doing the observing) and the object (what is being observed), implying that the subject has taken note of some characteristic, pattern, or change in the object.",
      "disambiguation_index": 0
    },
    "Predicate-observe_a_consistent_decrease_in_the_proportion_of_quality_rules_as": {
      "label": "observe a consistent decrease in the proportion of quality rules as",
      "description": "The predicate 'observe a consistent decrease in the proportion of quality rules as' indicates that there has been a steady decline in the adherence to certain standards or guidelines over time, with the subject being the entity responsible for monitoring this trend and the object representing the metric used to quantify this change.",
      "disambiguation_index": 0
    },
    "Predicate-showing": {
      "label": "showing",
      "description": "The predicate 'showing' indicates a relationship where the subject (e.g. IOPHC) presents or displays information, concepts, or rules to others, often with the intention of illustrating or demonstrating something about the object (e.g. many relevant rules with many covered head instances).",
      "disambiguation_index": 0
    },
    "Predicate-see_a_similar_pattern_for_increasing": {
      "label": "see a similar pattern for increasing",
      "description": "This predicate indicates that there exists an analogous or comparable trend or progression between two entities (subject and object), where the subject exhibits a pattern of increasing values, quantities, or intensity. The predicate highlights the similarity in this growth or development.",
      "disambiguation_index": 0
    },
    "Predicate-is_expected_because": {
      "label": "is expected because",
      "description": "The predicate 'is expected because' indicates a causal relationship between the subject and object. It suggests that the state or condition described by the subject is anticipated to occur due to, or as a result of, the reason specified in the object.",
      "disambiguation_index": 0
    },
    "Predicate-prune_away": {
      "label": "prune away",
      "description": "To remove or eliminate something (typically of lesser value or significance), often as part of a process to improve or refine. The subject performs an action that results in the removal or elimination of the object, which may be considered inferior or unnecessary.",
      "disambiguation_index": 0
    },
    "Predicate-comes_second_ahead_of": {
      "label": "comes second ahead of",
      "description": "Indicates that the subject entity ranks as the second most prominent or authoritative source for information about the object entity, implying a hierarchical relationship where the subject comes after the first and before other sources.",
      "disambiguation_index": 0
    },
    "Predicate-comes_after": {
      "label": "comes after",
      "description": "Indicates a chronological or sequential relationship between two entities, where one entity follows another in time. This predicate connects the subject and object by implying that the subject occurs subsequent to the occurrence of the object.",
      "disambiguation_index": 0
    },
    "Predicate-demonstrates_a_tendency_towards_higher_cardinalities_than": {
      "label": "demonstrates a tendency towards higher cardinalities than",
      "description": "This predicate indicates that the subject has a statistical inclination or pattern to exhibit larger quantities (cardinalities) compared to the object. It suggests an inherent tendency for the subject's cardinality to be greater than, or at least not smaller than, the one exhibited by the object.",
      "disambiguation_index": 0
    },
    "Predicate-requires": {
      "label": "requires",
      "description": "Indicates that something (the subject) demands or necessitates the presence of certain characteristics, conditions, or properties (the object), which are essential for its existence, functioning, or fulfillment.",
      "disambiguation_index": 0
    },
    "Predicate-found": {
      "label": "found",
      "description": "The predicate 'found' indicates that the subject has discovered or identified something about the object. It suggests a connection between the subject's knowledge or understanding and the object being described, implying that the subject has uncovered or recognized some aspect of the object.",
      "disambiguation_index": 0
    },
    "Predicate-further_illustrate": {
      "label": "further illustrate",
      "description": "To further illustrate connects a subject (typically an explanation or description) to an object (usually a concept or idea), emphasizing the clarity, precision, or comprehensibility of the latter by providing additional supporting details, examples, or analogies.",
      "disambiguation_index": 0
    },
    "Predicate-determines": {
      "label": "determines",
      "description": "The predicate 'determines' indicates that the subject has an influence or control over the object, shaping its value, nature, or outcome. It implies a causal relationship between the two entities, where the subject's presence, action, or property affects the state of the object.",
      "disambiguation_index": 0
    },
    "Predicate-based_on": {
      "label": "based on",
      "description": "Indicates that a conclusion or decision is derived from a specified source or foundation. The subject relies on the object to support its claim, inference, or judgment.",
      "disambiguation_index": 0
    },
    "Predicate-turn_out_to_be": {
      "label": "turn out to be",
      "description": "The predicate 'turn out to be' indicates a surprising or unexpected discovery that reveals an inherent property or characteristic of the subject, which was previously unknown or unclear. It suggests that despite initial appearances or categorizations, the subject ultimately exhibits qualities or features that align with the object.",
      "disambiguation_index": 0
    },
    "Predicate-apply": {
      "label": "apply",
      "description": "The 'apply' predicate indicates that a set of rules or principles (subject) are being used to impose or enforce some constraint or property on an object, which can be a specific unary predicate. This connection implies a causal relationship between the subject and object, where the application of the rules leads to the resulting state or behavior described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-affect": {
      "label": "affect",
      "description": "The predicate 'affect' indicates a relationship where the subject has an impact or influence on the object. This can be interpreted as causing changes, modifying, shaping, or having consequences for the object.",
      "disambiguation_index": 0
    },
    "Predicate-conducts": {
      "label": "conducts",
      "description": "The predicate 'conducts' indicates that the subject performs or leads an action or process involving experimentation, investigation, or testing. The object represents a specific instance of this activity, such as experiments, trials, or tests.",
      "disambiguation_index": 0
    },
    "Predicate-conduct_experiments_to_explore_how_these_two_pruning_methods_affect_with_regard_to_the_quality_and_quantity_of": {
      "label": "conduct experiments to explore how these two pruning methods affect with regard to the quality and quantity of",
      "description": "This predicate describes an action where a subject (e.g., researcher, scientist, or learner) conducts experiments to investigate how two pruning methods impact the quality and quantity of something. The object represents the aspect being studied, such as learnt rules in the example provided.",
      "disambiguation_index": 0
    },
    "Predicate-samples": {
      "label": "samples",
      "description": "The predicate 'samples' indicates that a subset of data or instances has been selected from a larger dataset or population for analysis, study, or evaluation. It implies a relationship between the subject and object where the subject (e.g., SHACLEARNER) is associated with the process of sampling, resulting in the selection of specific instances represented by the object (e.g., the sampled KG).",
      "disambiguation_index": 0
    },
    "Predicate-generates_rules_based_on": {
      "label": "generates rules based on",
      "description": "The predicate 'generates rules based on' indicates that the subject (an entity or system) creates a set of rules or guidelines using information from the object. The relationship suggests that the subject derives its understanding, principles, or decision-making criteria from the object's characteristics, patterns, or structures.",
      "disambiguation_index": 0
    },
    "Predicate-does_not_use": {
      "label": "does not use",
      "description": "The predicate 'does not use' indicates a relationship where the subject entity (e.g., SHACLEARNER) lacks or abstains from utilizing the object concept (e.g., heuristic pruning), suggesting an absence of interaction, application, or reliance on that particular method or technique.",
      "disambiguation_index": 0
    },
    "Predicate-handle": {
      "label": "handle",
      "description": "To 'handle' something means to take control of or manage it, often implying a sense of responsibility and agency. In general, the predicate 'handle' connects the subject (the entity taking action) with the object (the thing being managed), indicating that the subject is actively involved in directing or overseeing the object's fate.",
      "disambiguation_index": 0
    },
    "Predicate-are_used_as": {
      "label": "are used as",
      "description": "The 'are used as' predicate indicates a relationship between two concepts where one concept (the subject) serves or functions in place of another concept (the object), often implying equivalence, substitution, or analogy.",
      "disambiguation_index": 0
    },
    "Predicate-corresponds_to": {
      "label": "corresponds to",
      "description": "Indicates a relationship where the subject represents or maps to the object. This predicate suggests an equivalence or correspondence between the two entities, implying that they share some common characteristics, properties, or meanings.",
      "disambiguation_index": 0
    },
    "Predicate-considers": {
      "label": "considers",
      "description": "The predicate 'considers' indicates that the subject has a thought process or opinion about the object, suggesting evaluation, contemplation, or examination of the object's significance, relevance, or importance.",
      "disambiguation_index": 0
    },
    "Predicate-does_not_miss_any_rules_of": {
      "label": "does not miss any rules of",
      "description": "The predicate 'does not miss any rules of' indicates a relationship where the subject (e.g. SHACLEARNER) has complete knowledge or adherence to all rules specified by the object (e.g. rules of the highest quality). It implies that the subject does not omit, neglect, or disregard any rule in its understanding or application.",
      "disambiguation_index": 0
    },
    "Predicate-does_not_miss_any": {
      "label": "does not miss any",
      "description": "The predicate 'does not miss any' indicates that the subject has a comprehensive and thorough understanding or grasp of the object. It suggests that the subject is able to comprehend, absorb, or incorporate all aspects of the object without omission or neglect.",
      "disambiguation_index": 0
    },
    "Predicate-cause_it_to_fail_to_discover_more": {
      "label": "cause it to fail to discover more",
      "description": "This predicate indicates that the subject's attempt or effort to discover more information is hindered or obstructed by the object. The object may be a factor, condition, or circumstance that prevents the subject from uncovering new insights or knowledge.",
      "disambiguation_index": 0
    },
    "Predicate-do_not_uniformly_increase_in_effectiveness_with_decreasing": {
      "label": "do not uniformly increase in effectiveness with decreasing",
      "description": "This predicate indicates that there is no direct correlation between a decrease in [subject] and an improvement in [object]. In other words, as [subject] decreases, its effectiveness does not uniformly increase with respect to [object].",
      "disambiguation_index": 0
    },
    "Predicate-harm": {
      "label": "harm",
      "description": "To cause or result in damage, loss, or deterioration to something. The predicate 'harm' indicates a negative impact on the object, often implying a decrease in quality, value, or well-being.",
      "disambiguation_index": 0
    },
    "Predicate-could_harm": {
      "label": "could harm",
      "description": "Indicates a potential negative impact or adverse effect on something (the object), which may be caused by, related to, or resulting from an action, situation, or entity (the subject).",
      "disambiguation_index": 0
    },
    "Predicate-arises_from": {
      "label": "arises from",
      "description": "The predicate 'arises from' indicates a causal or explanatory relationship between the subject and object. It suggests that the subject (e.g., Embeddings, in this case) has its existence, properties, or behavior determined by or resulting from the object (e.g., sampling method). In general, it implies a dependency or origin of the subject's characteristics with respect to the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_customised_for": {
      "label": "is customised for",
      "description": "The predicate 'is customised for' indicates a relationship where the subject (in this case, KGs) has been tailored or adapted to meet specific requirements or needs of the object (target predicate). This connection suggests that the subject is designed with a particular purpose or audience in mind.",
      "disambiguation_index": 0
    },
    "Predicate-are_either_directly_related_to": {
      "label": "are either directly related to",
      "description": "This predicate indicates a connection or association between the subject and object. It suggests that there exists at least one direct link or relationship between them, which can be of various types (e.g., semantic, syntactic, pragmatic). The phrase 'either directly related to' implies an inclusive sense, encompassing both explicit and implicit connections.",
      "disambiguation_index": 0
    },
    "Predicate-built_based_on": {
      "label": "built based on",
      "description": "The predicate 'built based on' indicates that the subject was constructed or developed using the object as a foundation, guideline, or reference. The connection between the subject and object suggests a relationship of reliance, inspiration, or adherence to specific principles, rules, or patterns.",
      "disambiguation_index": 0
    },
    "Predicate-discovered_in": {
      "label": "discovered in",
      "description": "The predicate 'discovered in' indicates a relationship where something (the subject) was found or identified within a specific context or environment (the object). This connection suggests that the discovery of the subject occurred as a result of investigation, exploration, or experimentation within the specified setting.",
      "disambiguation_index": 0
    },
    "Predicate-used_to_build": {
      "label": "used to build",
      "description": "The predicate 'used to build' indicates a historical or past purpose of creating something. It suggests that the subject (e.g., IOP rules) was employed, designed, or intended for constructing or assembling the object (e.g., tree). This connection implies a causal relationship between the subject and the object, where the subject's existence or properties contributed to the creation or formation of the object.",
      "disambiguation_index": 0
    },
    "Predicate-report": {
      "label": "report",
      "description": "To report means to convey or communicate information about something, often in a formal or official manner. The subject reports on the object, providing an account or description of its characteristics, features, or findings.",
      "disambiguation_index": 0
    },
    "Predicate-is_lower_than": {
      "label": "is lower than",
      "description": "The predicate 'is lower than' indicates a relationship of comparative magnitude between two entities. It suggests that the subject has a value or measure that is less than, inferior to, or below the level of the object.",
      "disambiguation_index": 0
    },
    "Predicate-show": {
      "label": "show",
      "description": "To indicate or demonstrate something to someone else's understanding. The predicate 'show' connects the subject (the thing being demonstrated) with the object (what is being demonstrated), implying a visual, tangible, or comprehensible representation of the latter.",
      "disambiguation_index": 0
    },
    "Predicate-be_sensitive_to": {
      "label": "be sensitive to",
      "description": "The predicate 'be sensitive to' indicates that the subject has a heightened awareness or responsiveness to changes in or variations within the object. This relationship suggests that the subject's behavior, performance, or decision-making process is influenced by the characteristics or properties of the object.",
      "disambiguation_index": 0
    },
    "Predicate-grows_exponentially_with": {
      "label": "grows exponentially with",
      "description": "The predicate 'grows exponentially with' indicates a relationship between two quantities where one quantity (the subject) increases in value at an accelerating rate, proportional to another quantity (the object). This relationship suggests that the growth of the subject is influenced by or dependent on the magnitude of the object.",
      "disambiguation_index": 0
    },
    "Predicate-mined_from": {
      "label": "mined from",
      "description": "The predicate 'mined from' indicates that the subject has been obtained or derived from the object. It suggests a process of extraction, selection, or generation where the subject's content or characteristics are drawn from the object.",
      "disambiguation_index": 0
    },
    "Predicate-has_an_album_with_a_record_label": {
      "label": "has an album with a record label",
      "description": "This predicate indicates that the subject (e.g. song) is associated with or affiliated to a specific record label through the release of an album. The object represents the record label, which may be responsible for producing, distributing, and promoting the album.",
      "disambiguation_index": 0
    },
    "Predicate-has_an_album_with_a_genre": {
      "label": "has an album with a genre",
      "description": "The predicate 'has an album with a genre' indicates that the subject (e.g. song) possesses or is associated with an album that features music categorized under a specific genre, connecting the subject to its musical characteristics.",
      "disambiguation_index": 0
    },
    "Predicate-plan_to_investigate": {
      "label": "plan to investigate",
      "description": "To indicate a deliberate intention or decision by the subject to gather information about or explore the object. The predicate 'plan to investigate' implies that the subject has made a conscious choice to examine, analyze, or scrutinize the object further.",
      "disambiguation_index": 0
    },
    "Predicate-describe": {
      "label": "describe",
      "description": "To describe a subject with respect to an object means to establish a connection between them by conveying information about the nature or characteristics of the subject that relate to, are represented by, or can be inferred from the object. This predicate enables the creation of semantic relationships between entities and concepts.",
      "disambiguation_index": 0
    },
    "Predicate-reduce": {
      "label": "reduce",
      "description": "To reduce means to decrease or diminish something's complexity, size, or intensity. It implies a transformation from a more complex or larger state to a simpler or smaller one.",
      "disambiguation_index": 0
    },
    "Predicate-reduce_to": {
      "label": "reduce to",
      "description": "To indicate that a complex or abstract concept can be simplified or explained by breaking it down into more fundamental or concrete components, often involving a transformation or mapping from one representation to another.",
      "disambiguation_index": 0
    },
    "Predicate-extends": {
      "label": "extends",
      "description": "The predicate 'extends' indicates a relationship of inheritance or expansion between two entities. It suggests that the subject entity builds upon, incorporates, or adds to the features, properties, or characteristics defined by the object entity.",
      "disambiguation_index": 0
    },
    "Predicate-to_be_selected_for": {
      "label": "to be selected for",
      "description": "The predicate 'to be selected for' indicates a relationship where the subject (e.g. candidate shape) has been chosen or deemed suitable based on certain criteria, which are represented by the object (e.g. interestingness or for KG verification). This connection implies that the subject meets some standards or exhibits specific characteristics that make it eligible or desirable according to the specified evaluation metrics.",
      "disambiguation_index": 0
    },
    "Predicate-are_employed_for": {
      "label": "are employed for",
      "description": "Indicates a purpose or function that something (the subject) serves or fulfills. The predicate 'are employed for' establishes a relationship between the subject and object, suggesting that the subject's existence, properties, or capabilities are utilized to achieve some specific goal or objective.",
      "disambiguation_index": 0
    },
    "Predicate-triggered_by": {
      "label": "triggered by",
      "description": "The predicate 'triggered by' indicates that the subject (entities with only a type or class declaration) has some kind of causal relationship or stimulus-response connection to the object (The shapes). It suggests that the existence, behavior, or properties of the entities are influenced or brought about in some way by The shapes.",
      "disambiguation_index": 0
    },
    "Predicate-used_to_complete": {
      "label": "used to complete",
      "description": "This predicate indicates that the subject has a purpose or function of providing completeness or fulfillment with respect to the object. It suggests a relationship where the subject's existence, properties, or characteristics are intended to bring about a sense of completion or satisfaction.",
      "disambiguation_index": 0
    },
    "Predicate-has_missing_facts_about_entities_that_are_entirely_missing_from": {
      "label": "has missing facts about entities that are entirely missing from",
      "description": "This predicate indicates a relationship between a knowledge source (subject) and a set of entities (object), where the subject lacks information about these entities. The connection between the subject and object highlights that the subject has gaps or missing facts regarding the existence, properties, or relationships of the entities.",
      "disambiguation_index": 0
    },
    "Predicate-determine": {
      "label": "determine",
      "description": "To determine means to establish or fix a boundary, limit, or extent in relation to something. It implies setting parameters or defining what falls within a particular scope, often involving the identification of boundaries, limits, or criteria that define what can be acquired, understood, or achieved.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_challenging_task_for": {
      "label": "is a challenging task for",
      "description": "This predicate indicates that the subject represents an area or domain where mastering the object requires significant effort, skill, and/or expertise. The relationship suggests a sense of difficulty, complexity, or uncertainty involved in achieving proficiency with respect to the object.",
      "disambiguation_index": 0
    },
    "Predicate-validate_with": {
      "label": "validate with",
      "description": "To validate something 'with' means to confirm or verify its accuracy, relevance, or correctness by comparing it against a standard, reference point, or established criteria. This predicate establishes a connection between the subject and object, indicating that the subject's validity or truthfulness is being checked using the information provided in the object.",
      "disambiguation_index": 0
    },
    "Predicate-evaluate_via": {
      "label": "evaluate via",
      "description": "The predicate 'evaluate via' indicates a method or approach used to assess or judge something. It connects the subject (the entity performing the evaluation) with the object (the means by which they are evaluating), highlighting the specific mechanism, framework, or process employed for making an assessment.",
      "disambiguation_index": 0
    },
    "Predicate-extend": {
      "label": "extend",
      "description": "To extend means to increase or expand something's scope, range, or capacity. It implies a growth or development that connects the subject with the object in terms of size, complexity, or expressiveness.",
      "disambiguation_index": 0
    },
    "Predicate-propose_to_redesign": {
      "label": "propose to redesign",
      "description": "To suggest or intend to restructure or reimagine something (the object), often with a goal of improving its functionality, efficiency, or overall performance.",
      "disambiguation_index": 0
    },
    "Predicate-augment_the_rules": {
      "label": "augment the rules",
      "description": "To augment the rules means to modify or expand them in a way that enhances their effectiveness, accuracy, or comprehensiveness. This predicate connects the subject (rules) with the object (rule quality measures), indicating that the modification or expansion of the rules is intended to improve the overall performance or reliability of those measures.",
      "disambiguation_index": 0
    },
    "Predicate-can_learn": {
      "label": "can learn",
      "description": "The predicate 'can learn' indicates that a subject has the ability to acquire knowledge, skills or understanding through experience, study, instruction, or practice. It implies a capacity for cognitive development and improvement.",
      "disambiguation_index": 0
    },
    "Predicate-corresponds": {
      "label": "corresponds",
      "description": "Indicates that there exists an equivalence or similarity between two concepts, where one concept (the subject) serves as a representation or manifestation of another concept (the object).",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_to_express_constraints_on_graph_data_as_shapes_in": {
      "label": "can be used to express constraints on graph data as shapes in",
      "description": "This predicate indicates that a given entity or method can impose structural restrictions or patterns onto graph-structured data by representing them as shapes. In this context, 'shapes' refer to predefined constraints or templates that define how specific elements within the graph should be organized and related.",
      "disambiguation_index": 0
    },
    "Predicate-are_used_to_learn_from_knowledge_graphs_using_the_proposed_algorithm": {
      "label": "are used to learn from knowledge graphs using the proposed algorithm",
      "description": "This predicate indicates that a particular entity or method employs an algorithmic approach to extract insights and gain understanding from structured data represented in the form of knowledge graphs.",
      "disambiguation_index": 0
    },
    "Predicate-enhance": {
      "label": "enhance",
      "description": "To improve or increase the capabilities, functionality, or effectiveness of something (the subject) by adding new features, tools, or techniques to it.",
      "disambiguation_index": 0
    },
    "Predicate-used_to_support": {
      "label": "used to support",
      "description": "The predicate 'used to support' indicates a relationship where something (the subject) serves as a means or mechanism for facilitating or enabling another thing (the object). It suggests that the subject provides resources, tools, or methods necessary for achieving a particular goal or outcome.",
      "disambiguation_index": 0
    },
    "Predicate-relates_to": {
      "label": "relates to",
      "description": "The predicate 'relates to' indicates a connection or association between two concepts, where one concept (the subject) has some relevance, similarity, or correspondence with another concept (the object).",
      "disambiguation_index": 0
    },
    "Predicate-used_as_input_for_generating_IOP_rules": {
      "label": "used_as_input_for_generating_IOP_rules",
      "description": "The predicate 'used_as_input_for_generating_IOP_rules' indicates that the subject provides input for generating rules in an Integrated Ontology Pattern (IOP), which are used to reason about and manipulate data.",
      "disambiguation_index": 0
    },
    "Predicate-uses_to_express_constraints_on_graph_data_as_shapes_in_SHACL": {
      "label": "uses to express constraints on graph data as shapes in SHACL",
      "description": "This predicate connects a subject (e.g., an ontology or a knowledge base) with its ability to represent and enforce constraints on graph-structured data using shapes defined in SHACL. The object represents the outcome of this process, which may include shape definitions, constraint rules, or other forms of data validation.",
      "disambiguation_index": 0
    },
    "Predicate-facilitate": {
      "label": "facilitate",
      "description": "To facilitate means to make something easier or more efficient by providing support, resources, or tools. It implies creating an environment that enables the subject (e.g., a system) to operate effectively and achieve its intended purpose.",
      "disambiguation_index": 0
    },
    "Predicate-generate_high-quality": {
      "label": "generate high-quality",
      "description": "To produce or create something that meets a standard of excellence, precision, and effectiveness. This predicate indicates that the subject has produced an object that possesses high-quality characteristics, such as accuracy, relevance, or usefulness.",
      "disambiguation_index": 0
    },
    "Predicate-has_at_least_one_IOP_rule": {
      "label": "has at least one IOP rule",
      "description": "Indicates that a subject has at least one Inverse Of Predicate (IOP) rule, establishing a connection between the subject and an object by specifying a predicate with which it interacts or relates.",
      "disambiguation_index": 0
    },
    "Predicate-introduces": {
      "label": "introduces",
      "description": "Introduces indicates a causal relationship between the subject (a person, entity, or concept) and the object (an idea, theory, methodology, etc.), suggesting that the subject brings forth, presents, or makes known the object to others.",
      "disambiguation_index": 0
    },
    "Predicate-expresses": {
      "label": "expresses",
      "description": "To express means to convey or represent a concept, idea, or structure through a specific form or medium. In this context, it indicates that the subject (SHACL shapes from KGs) embodies or instantiates the object (instantiated open path), making its essence or characteristics apparent.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_learned_from_knowledge_graphs_using": {
      "label": "can be learned from knowledge graphs using",
      "description": "This predicate indicates that a subject entity or concept can be inferred, derived, or understood by leveraging information and relationships stored within knowledge graphs. The object represents the outcome or result of this learning process.",
      "disambiguation_index": 0
    },
    "Predicate-learns": {
      "label": "learns",
      "description": "The predicate 'learns' indicates that the subject acquires or obtains knowledge, understanding, or skill from the object. The connection between the subject and object suggests a process of gaining insight, comprehension, or proficiency through exposure to or interaction with the object.",
      "disambiguation_index": 0
    },
    "Predicate-IOP": {
      "label": "IOP",
      "description": "The predicate 'IOP' represents a connection between two entities where an instance or occurrence of something (open path) has been defined by the presence of at least one rule, indicating that there exists a relationship or pattern between them.",
      "disambiguation_index": 0
    },
    "Predicate-derive": {
      "label": "derive",
      "description": "To derive means to obtain or generate something new from a given source or foundation. In this sense, the predicate 'derive' indicates that the subject (a method, concept, or process) produces or yields an object as a result of its application, manipulation, or transformation.",
      "disambiguation_index": 0
    },
    "Predicate-expresses_specific_shapes_in_the_form_of_paths_over_connected_entities_present_in_a_Knowledge_Graph_KG": {
      "label": "expresses specific shapes in the form of paths over connected entities present in a Knowledge Graph (KG)",
      "description": "This predicate connects the subject to an object by describing how the subject represents specific shapes or patterns as pathways that traverse connected entities within a knowledge graph. The connection between the subject and object highlights the way in which the subject's representations are structured around relationships between entities, enabling the identification of meaningful paths and patterns.",
      "disambiguation_index": 0
    },
    "Predicate-derives_from_an_Inverse_Open_Path_rule": {
      "label": "derives from an Inverse Open Path rule",
      "description": "This predicate indicates that a given concept or entity (subject) has its origin or foundation rooted in one of the rules governing inverse open paths. The object represents an instantiated manifestation of such a rule, which serves as the underlying principle for understanding the subject's nature.",
      "disambiguation_index": 0
    },
    "Predicate-implies_the_existence_of": {
      "label": "implies_the_existence_of",
      "description": "The predicate 'implies_the_existence_of' indicates that the existence of something (represented by the object) can be logically inferred or deduced from the application, use, or implementation of a particular concept, method, or approach (represented by the subject).",
      "disambiguation_index": 0
    },
    "Predicate-correspond": {
      "label": "correspond",
      "description": "To 'correspond' means to have a relationship of equivalence or similarity with something. It implies that the subject has a matching or analogous quality, property, or concept with the object, often in terms of structure, pattern, or representation.",
      "disambiguation_index": 0
    },
    "Predicate-used_as_input_for": {
      "label": "used_as_input_for",
      "description": "The predicate 'used_as_input_for' indicates that the subject (an instantiated open path) serves as input or a source for processing or analysis by the object (the sampled KG). This connection suggests that the subject provides data, information, or context that is used to inform or guide the actions of the object.",
      "disambiguation_index": 0
    },
    "Predicate-express_constraints_on_graph_data_as": {
      "label": "express constraints on graph data as",
      "description": "This predicate describes a process of translating or representing constraints imposed on graph-structured data into a specific form. It connects the subject (e.g., SHACL shapes from KGs) that defines the constraints with an object (e.g., Output) that represents the resulting representation, allowing for the application and interpretation of those constraints.",
      "disambiguation_index": 0
    },
    "Predicate-Inverse_Open_Path_IOP_rule": {
      "label": "Inverse Open Path (IOP) rule",
      "description": "The Inverse Open Path (IOP) rule predicate represents a connection between the subject and object by indicating that there exists at least one inverse open path from the target predicates to the output, which defines or influences the number of trees for each knowledge graph.",
      "disambiguation_index": 0
    },
    "Predicate-SHACL_shape": {
      "label": "SHACL shape",
      "description": "The predicate 'SHACL shape' defines a structural relationship between its subject and object. It represents the application of Shape Constraint Language (SHACL) rules to define or constrain the structure of data, which can be used for validation, querying, or other purposes.",
      "disambiguation_index": 0
    },
    "Predicate-complete": {
      "label": "complete",
      "description": "The predicate 'complete' indicates that the subject has reached a state of fulfillment or termination with respect to the object. It suggests a sense of finality, totality, or perfection between the subject and the object.",
      "disambiguation_index": 0
    },
    "Predicate-generate_SHACL_shapes": {
      "label": "generate SHACL shapes",
      "description": "To generate SHACL shapes means to create a set of constraints or rules that define the structure and relationships within data. This process connects existing ontologies for knowledge graphs (KGs) with the resulting output, which can be used to validate and refine KGs.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_learned_from": {
      "label": "can be learned from",
      "description": "The predicate 'can be learned from' indicates that the subject (a concept or entity) provides a source of knowledge or information that can be used to acquire understanding, skills, or expertise about the object. In general, this relationship suggests that the subject serves as an educational resource or authority for learning about the topic denoted by the object.",
      "disambiguation_index": 0
    },
    "Predicate-express_constraints_on_graph_data_as_shapes": {
      "label": "express constraints on graph data as shapes",
      "description": "To express constraints on graph data as shapes means to define and represent limitations or rules that govern the structure and relationships within a graphical representation. This predicate connects the subject, which may be an entity, concept, or dataset, with its corresponding output, potentially visualized as shapes in a graph. The connection implies establishing boundaries, patterns, or constraints on how data is organized and interconnected to convey meaningful information.",
      "disambiguation_index": 0
    },
    "Predicate-learn_from_knowledge_graphs_using_SHACLEARNER_algorithm": {
      "label": "learn from knowledge graphs using SHACLEARNER algorithm",
      "description": "To derive insights or conclusions by processing and analyzing data stored within a knowledge graph utilizing the SHACLEARNER algorithm.",
      "disambiguation_index": 0
    },
    "Predicate-enhances": {
      "label": "enhances",
      "description": "The predicate 'enhances' indicates a relationship where the subject (a system or process) improves or amplifies the quality, effectiveness, or value of the object. This enhancement can be seen as an augmentation, refinement, or strengthening of the object's properties or capabilities.",
      "disambiguation_index": 0
    },
    "Predicate-is_defined_by": {
      "label": "is defined by",
      "description": "The predicate 'is defined by' indicates a relationship where the subject's meaning or scope is determined or specified by the object. In other words, it suggests that the subject's definition or boundaries are established through some connection to the object.",
      "disambiguation_index": 0
    },
    "Predicate-adapts": {
      "label": "adapts",
      "description": "The predicate 'adapts' indicates that the subject entity modifies or adjusts its behavior to accommodate or fit with the object entity, often implying a process of adjustment, modification, or optimization.",
      "disambiguation_index": 0
    },
    "Predicate-represents": {
      "label": "represents",
      "description": "The predicate 'represents' indicates a conceptual or symbolic connection between the subject and object. It suggests that the subject (e.g., Open Path Rule Learner  OPRL) serves as an embodiment, model, or proxy for the concept or idea represented by the object (e.g., right-hand tree). This connection can be based on various forms of representation, such as analogy, metaphor, abstraction, or simplification.",
      "disambiguation_index": 0
    },
    "Predicate-has_IOP_rule": {
      "label": "has IOP rule",
      "description": "Indicates that a subject defines or specifies an Intermediate Ontology Pattern (IOP) rule, which connects the subject to its object by establishing a relationship between them. The IOP rule serves as a governing principle for understanding how the subject relates to its object.",
      "disambiguation_index": 0
    },
    "Predicate-used_in_learning": {
      "label": "used in learning",
      "description": "Indicates that a particular resource or concept (object) plays a role in facilitating or supporting the process of learning. The subject represents an activity, method, or approach used to learn something new, and this predicate connects it to the object as a means by which knowledge is acquired.",
      "disambiguation_index": 0
    },
    "Predicate-suggest": {
      "label": "suggest",
      "description": "To propose or recommend something as a possible solution, idea, or course of action.",
      "disambiguation_index": 0
    },
    "Predicate-learned": {
      "label": "learned",
      "description": "To learn means to acquire knowledge or understanding through study, experience, or instruction. The predicate 'learned' indicates that the subject has acquired new information, skills, or insights from the object, which serves as a source of learning.",
      "disambiguation_index": 0
    },
    "Predicate-SHACLEARNER": {
      "label": "SHACLEARNER",
      "description": "SHACLEARNER connects a subject with an object by providing insights or offering explanations about the relationship between them. It suggests that there exists at least one intermediate representation (IOP rule) that facilitates understanding of the structure or organization of the subject, which in turn provides insight into the object.",
      "disambiguation_index": 0
    },
    "Predicate-derives_from": {
      "label": "derives_from",
      "description": "The predicate 'derives_from' indicates a relationship between two entities where one entity (the subject) has its origin or foundation from another entity (the object). This implies that the subject's existence, properties, or behavior are rooted in or influenced by the characteristics of the object. In general, this predicate suggests an ontological connection between the subject and object.",
      "disambiguation_index": 0
    },
    "Predicate-used_in_learning_high-quality_SHACL_shapes": {
      "label": "used in learning high-quality SHACL shapes",
      "description": "Indicates that a given entity (subject) plays a role in the process of generating or refining high-quality Shapes Constraint Language (SHACL) shapes, which are used to validate and describe data from Knowledge Graphs.",
      "disambiguation_index": 0
    },
    "Predicate-is_used_for": {
      "label": "is used for",
      "description": "The predicate 'is used for' indicates a purpose or function that something (the subject) serves. It describes how the subject is employed to achieve a particular goal, outcome, or objective, which is represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-present_specific_shapes_in_the_form_of_paths_over_connected_entities": {
      "label": "present specific shapes in the form of paths over connected entities",
      "description": "This predicate represents a mapping between abstract concepts and visual representations. It takes as input a set of connected entities (e.g., nodes in a graph or vertices on a surface) and presents specific shapes that can be traversed along paths connecting these entities, effectively creating a spatial layout for the given data.",
      "disambiguation_index": 0
    },
    "Predicate-used_in_learning_high-quality_SHACL_shapes_from_knowledge_graphs": {
      "label": "used in learning high-quality SHACL shapes from knowledge graphs",
      "description": "This predicate indicates that a particular technique or approach was employed to derive high-quality Shapes Constraint Language (SHACL) shapes from knowledge graphs. It highlights the role of the subject in facilitating the learning process, which ultimately yields SHACL shapes with exceptional quality.",
      "disambiguation_index": 0
    },
    "Predicate-learn_high-quality_SHACL_shapes": {
      "label": "learn high-quality SHACL shapes",
      "description": "To derive or acquire advanced and precise constraints for Semantic Web data using the Shapes Constraint Language (SHACL), which enables the definition of complex shape patterns to validate and refine data quality.",
      "disambiguation_index": 0
    },
    "Predicate-predict_instances": {
      "label": "predict instances",
      "description": "To predict instances means to generate or forecast specific occurrences, events, or values based on existing patterns, rules, or relationships. This predicate connects the subject (rules, methods, or systems) with the object (the number of predicted instances), indicating that the subject is capable of producing predictions about the object's magnitude or quantity.",
      "disambiguation_index": 0
    },
    "Predicate-define_formal_quality_measures": {
      "label": "define formal quality measures",
      "description": "To 'define formal quality measures' means to establish a set of quantifiable standards or metrics that formally describe the characteristics, attributes, or properties of something. This predicate connects the subject (a concept, process, or entity) with an object (typically a numerical value, ratio, or threshold), indicating how the subject's qualities are measured and evaluated.",
      "disambiguation_index": 0
    },
    "Predicate-used": {
      "label": "used",
      "description": "The predicate 'used' indicates that a set of rules or guidelines has been employed to achieve some purpose or effect. It suggests a relationship where one entity (the subject) utilizes another entity (the object) as a means to accomplish something, often implying a sense of efficiency, effectiveness, or optimization.",
      "disambiguation_index": 0
    },
    "Predicate-input": {
      "label": "input",
      "description": "The 'input' predicate represents a relationship where the subject provides or supplies information to the object. This connection indicates that the subject's content, data, or rules are being used as input for processing, analysis, or computation by the object.",
      "disambiguation_index": 0
    },
    "Predicate-generated_from": {
      "label": "generated from",
      "description": "The predicate 'generated from' indicates a relationship between the subject and object where the subject is derived or produced as a result of processing or transforming the object. This can imply various forms of data generation, such as rule-based transformations, statistical models, or other computational processes that yield new information based on existing knowledge.",
      "disambiguation_index": 0
    },
    "Predicate-proposes": {
      "label": "proposes",
      "description": "To propose means to suggest or recommend something, typically as a solution or idea. The predicate 'proposes' indicates that the subject (in this case, SHACL learning method) presents or advocates for the object (this paper), implying endorsement, support, or recommendation.",
      "disambiguation_index": 0
    },
    "Predicate-express_constraints_on": {
      "label": "express constraints on",
      "description": "To 'express constraints on' means to impose or outline specific limitations, boundaries, or rules that govern the relationship between two entities, concepts, or systems. This predicate indicates a sense of regulation, control, or definition that shapes the interaction or structure between the subject and object.",
      "disambiguation_index": 0
    },
    "Predicate-SHACL_shapes": {
      "label": "SHACL shapes",
      "description": "",
      "disambiguation_index": 0
    },
    "Predicate-generate_IOP_rules_for": {
      "label": "generate IOP rules for",
      "description": "To create or derive inference-oriented production (IOP) rules from a given subject entity that are applicable to an object entity. This predicate represents the process of generating logical connections between entities, enabling reasoning and inference capabilities.",
      "disambiguation_index": 0
    },
    "Predicate-learn_SHACL_shapes_from": {
      "label": "learn SHACL shapes from",
      "description": "To 'learn SHACL shapes from' means to acquire knowledge or understanding of Semantic Web Architecture and Constraints Language (SHACL) shape definitions by referencing a specific source, such as a Knowledge Graph (KG), dataset, or other structured data repository. This predicate indicates that the subject is acquiring information about SHACL shapes through learning from the object, which provides the context for defining these shapes.",
      "disambiguation_index": 0
    },
    "skos:broader": {
      "label": "has a broader term",
      "description": "The predicate 'has a broader term' indicates that the subject (a concept or entity) is related to its object (another concept or entity) through a hierarchical relationship, where the subject has a more specific or detailed representation than the object. In other words, the subject encompasses or includes the object as part of a larger category.",
      "disambiguation_index": 0
    }
  }
}