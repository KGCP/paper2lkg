{
  "iri": "Paper-Active_knowledge_graph_completion",
  "title": "Active knowledge graph completion",
  "authors": [
    "Pouya Ghiasnezhad Omran",
    "Kerry Taylor",
    "Sergio Rodriguez Mendez",
    "Armin Haller"
  ],
  "keywords": [
    "Existential rule learning",
    "Knowledge graph completion",
    "Rule learning",
    "Knowledge graph"
  ],
  "sections": [
    {
      "iri": "Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-1-Sentence-1",
              "text": "Enterprise and public Knowledge Graphs (KGs) are known to be incomplete."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-2",
              "text": "Methods for automatic completion, sometimes by rule learning, scale well."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-3",
              "text": "While previous rule-based methods learn closed (non-existential) rules, we introduce Open Path (OP) rules that are constrained existential rules."
            },
            {
              "iri": "Section-1-Paragraph-1-Sentence-4",
              "text": "We present a novel algorithm, OPRL, for learning OP rules."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-2-Sentence-1",
              "text": "Closed rules complete a KG by answering queries of unclear origin, usually derived from a holdback test set in experimental settings."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-2",
              "text": "However, OP rules can generate relevant queries for KG completion."
            },
            {
              "iri": "Section-1-Paragraph-2-Sentence-3",
              "text": "OPRL generates queries even when there is no closed rule to answer the query, or when the correct answer is a missing entity that is not present in the KG."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-3-Sentence-1",
              "text": "For OPRL to scale well, we propose a novel embedding-based fitness function to efficiently estimate rule quality."
            },
            {
              "iri": "Section-1-Paragraph-3-Sentence-2",
              "text": "Additionally, we introduce a novel, efficient vector computation to formally assess rule quality."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-4-Sentence-1",
              "text": "We evaluate OPRL using adaptations of Freebase, YAGO2, Wikidata, and a synthetic Poker KG."
            },
            {
              "iri": "Section-1-Paragraph-4-Sentence-2",
              "text": "We find that OPRL mines hundreds of accurate rules from massive KGs with up to 8 M facts."
            },
            {
              "iri": "Section-1-Paragraph-4-Sentence-3",
              "text": "The OP rules generate queries with precision as high as 98% and recall of 62% on a complete KG, demonstrating the first solution for active knowledge graph completion."
            }
          ]
        },
        {
          "iri": "Section-1-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-1-Paragraph-5-Sentence-1",
              "text": "Crown Copyright 2022 Published by Elsevier Inc."
            },
            {
              "iri": "Section-1-Paragraph-5-Sentence-2",
              "text": "This is an open access article under the"
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-2",
      "subtitle": "Introduction",
      "paragraphs": [
        {
          "iri": "Section-2-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-1-Sentence-1",
              "text": "Knowledge Graphs (KGs) are a convenient technology to model and store massive quantities of weakly-structured data."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-2",
              "text": "The power of KGs arises from a data-first approach."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-3",
              "text": "They allow information to be added in a relatively arbitrary manner as structural constraints are few; unlike, for example, relational databases where type, not-null, and key constraints abound to enforce a kind of completeness."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-4",
              "text": "However, the intended scope of KGs is usually poorly defined and they fail to record relevant entities, as well as relevant relationships for the entities they do record."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-5",
              "text": "This is just like in Wikipedia, where some topics are more richly covered than others."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-6",
              "text": "Even for the same topic area, say movie actors for instance, we have much better coverage for the movies produced in some countries than we do for others."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-7",
              "text": "KGs are often (semi-) automatically built from unstructured sources such as Wikipedia articles."
            },
            {
              "iri": "Section-2-Paragraph-1-Sentence-8",
              "text": "The building methods are prone to asserting some erroneous facts, while missing some others."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-2-Sentence-1",
              "text": "Techniques have been developed for knowledge graph completion and rule learning to curate KGs automatically."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-2",
              "text": "In these approaches, models, often expressed as logical rules or vector embeddings, are learnt from a given KG."
            },
            {
              "iri": "Section-2-Paragraph-2-Sentence-3",
              "text": "The models are then used for curating tasks including link prediction that predict missing facts about extant entities."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-3-Sentence-1",
              "text": "Rule learning methods for KGs consider Closed (non-existential) rules which are used to predict a fact that instantiates the triple at the head of the rule."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-2",
              "text": "For example, consider a rule defining a relationship between citizenship and the residence of a person, citizenOf(x, y) livesIn(x, z) ^ locatedIn(z, y)."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-3",
              "text": "Using this rule, someone's citizenship can be inferred from facts about a person's city of residence and the nation in which that city is located."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-4",
              "text": "In Closed rules all head variables occur in the body of the rule and all variables appear at least twice."
            },
            {
              "iri": "Section-2-Paragraph-3-Sentence-5",
              "text": "Thus, there can be no variable quantified existentially in the head of the rule."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-4-Sentence-1",
              "text": "Closed rules enable inference of specific facts that, if true, are missing from the KG."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-2",
              "text": "They draw attention to a potential missing fact only if the fact is able to be inferred by the learnt rule."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-3",
              "text": "KG completion in this way predicts answers for known unknowns."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-4",
              "text": "In this paper we consider, for the first time, the problem of rule-based knowledge graph completion that guides the discovery of unknown unknowns."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-5",
              "text": "Generally, in knowledge graph completion, a specific missing fact is predicted."
            },
            {
              "iri": "Section-2-Paragraph-4-Sentence-6",
              "text": "In contrast, we predict the existence of missing facts even when an entity involved in the missing fact may be absent from the KG."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-5-Sentence-1",
              "text": "We propose learning open path rules (OP) from which we infer open-ended questions (e.g. citizenOf(Ann, ?)) instead of facts (e.g. citizenOf(Ann, Australia))."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-2",
              "text": "Traditional knowledge graph completion is then done by answering the actively generated questions."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-3",
              "text": "The proposed OP rule formalism is a fragment of the language of existential rules which is expressive enough to adduce queries yet suitable for our scalable embedding-based rule mining system."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-4",
              "text": "OP rules provide evidence that a fact is missing even when there is evidence for only one entity of the pair, and a question is generated accordingly."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-5",
              "text": "The queries adduced from OP rules identify that a new fact is needed when the answer is not known."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-6",
              "text": "The answer might be an entity already present in the KG, or absent from it."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-7",
              "text": "In the latter case, a query could be posed to a user engaged in a curating task or to a Web question-answering engine."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-8",
              "text": "In particular, an answer to the question could introduce new entities to the KG, and by this the approach addresses a previously unstudied direction in knowledge graph completion, that is missing entities."
            },
            {
              "iri": "Section-2-Paragraph-5-Sentence-9",
              "text": "The process of OP rule learning and adducing queries from OP rules is not an alternative to link prediction; it complements traditional link prediction by providing relevant queries to link predictors and can, for the first time, make knowledge graph completion fully automatic."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-6-Sentence-1",
              "text": "For example, consider the OP rule, citizenOf(x, y) studiesIn(x, z)."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-2",
              "text": "This rule implies that if we know an entity x studies in an institute z, then x is a citizen of somewhere (y)."
            },
            {
              "iri": "Section-2-Paragraph-6-Sentence-3",
              "text": "If the body of this rule is instantiated like studiesIn(Sam, ANU) we can infer the query citizenOf(Sam, ?)."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-7-Sentence-1",
              "text": "Our work addresses a long-standing gap in traditional link prediction systems that use the KG to propose missing facts, but need to be seeded with queries about potential missing facts."
            },
            {
              "iri": "Section-2-Paragraph-7-Sentence-2",
              "text": "Conventionally, for evaluating link predictors, these queries are trivially generated from test facts that are held out from the KG in the hope that a high-performing predictor will rediscover the held-out (and thereby missing) facts."
            },
            {
              "iri": "Section-2-Paragraph-7-Sentence-3",
              "text": "However, once a link predictor is deployed over a working KG, test facts cannot be held out, and re-discovery of held-out facts is unproductive, so whence does a query arise to drive the link predictor?"
            },
            {
              "iri": "Section-2-Paragraph-7-Sentence-4",
              "text": "We propose that the queries we derive from our OP rules can be used to generate the queries that link predictors need to repair working KGs."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-8-Sentence-1",
              "text": "Arbitrary queries are of little use; queries need to be relevant in order to be useful."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-2",
              "text": "For example, consider the fact presidentOf(Obama, USA), held back from training data for a link predictor."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-3",
              "text": "Conventionally, this known-missing fact is used to generate the following two relevant queries presidentOf(?, USA) and presidentOf(Obama, ?)."
            },
            {
              "iri": "Section-2-Paragraph-8-Sentence-4",
              "text": "Instead when a link predictor is asked an irrelevant query like presidentOf(Celine Dion, ?), it will try to rank a set of entities (countries) to answer this query even though no correct answer exists either inside or outside the KG."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-9-Sentence-1",
              "text": "In summary, by learning OP rules to derive queries we address the following problems in traditional knowledge graph completion:"
            },
            {
              "iri": "Section-2-Paragraph-9-Sentence-2",
              "text": "Identifying a missing fact even when there is no pattern (such as a closed rule) that fully instantiates the fact in the KG;"
            },
            {
              "iri": "Section-2-Paragraph-9-Sentence-3",
              "text": "Generating relevant queries that can serve as input to link predictors to complete the KG (which is feasible when the correct answer is an entity extant in the KG); and"
            },
            {
              "iri": "Section-2-Paragraph-9-Sentence-4",
              "text": "Generating queries that can introduce missing entities into the KG (although this requires answer sources beyond current link predictors)."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-10-Sentence-1",
              "text": "The contributions of this paper are as follows, greatly extending early explorations published in."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-2",
              "text": "We present a novel method for learning open path rules from a KG."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-3",
              "text": "These are existential rules with a different form to the usual closed path rules that are conventionally used for knowledge graph completion tasks."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-4",
              "text": "We propose an algorithm, OPRL, for learning these rules, including novel fitness criteria for discarding poor rules early, and efficient vector computation of formal quality criteria."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-5",
              "text": "We show that, together with KG sampling, our algorithm is effective over very large KGs."
            },
            {
              "iri": "Section-2-Paragraph-10-Sentence-6",
              "text": "As such, we introduce a first solution to the problem of active knowledge graph completion (AKGC), where we aim, instead of suggesting missing facts, to ask the best questions to complete a KG."
            }
          ]
        },
        {
          "iri": "Section-2-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-2-Paragraph-11-Sentence-1",
              "text": "The rest of the paper is structured as follows."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-2",
              "text": "After presenting some foundations in Section 2, we describe our target language for learning in Section 3, including the formalism of OP rules."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-3",
              "text": "Section 4 proposes the OP rule learning method OPRL that includes a novel embedding-based heuristic function and evaluation method."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-4",
              "text": "Section 5 presents the process for generating relevant queries derived from the learnt OP rules."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-5",
              "text": "In Section 6 we formalise the new quality notion of query relevance and discuss the results of a range of experiments with our novel OPRL."
            },
            {
              "iri": "Section-2-Paragraph-11-Sentence-6",
              "text": "In Section 7, we present the work in the literature related to link prediction and active knowledge graph completion."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-3",
      "subtitle": "Background",
      "paragraphs": [
        {
          "iri": "Section-3-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-1-Sentence-1",
              "text": "2.1 Rule-Based KG Completion"
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-2",
              "text": "An entity e is an identifier for an object such as a place or a person, and a fact (also known as a link) is an RDF triple (e, P, e'), whereby the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-3",
              "text": "Here we write facts in the form P(e, e')."
            },
            {
              "iri": "Section-3-Paragraph-1-Sentence-4",
              "text": "A knowledge graph (KG) is a pair K = (E, F) where F is a set of facts and E is the set of entities that exist in the facts F."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-2-Sentence-1",
              "text": "Rule learning systems employ a rule language to express rules."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-2",
              "text": "RLVLR and ScaleKB use so-called closed path (CP) rules that are a kind of closed rule with no free variables."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-3",
              "text": "Each consists of two parts, a head at the front of the implication arrow and a body at the tail."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-4",
              "text": "The rule forms a closed path, or single unbroken loop of links between the variables."
            },
            {
              "iri": "Section-3-Paragraph-2-Sentence-5",
              "text": "It has the following general form, where P_h is the single predicate of the head, and P_1, ..., P_n (for n >= 1) are predicates of the body and x, y, z_1, ..., z_{n-1} are variables in the rule."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-3-Sentence-1",
              "text": "We interpret this kind of rule with universal quantification of all variables at the outside, and so we can infer a fact that instantiates the head of the rule by finding an instantiation of the body of the rule in the KG."
            },
            {
              "iri": "Section-3-Paragraph-3-Sentence-2",
              "text": "For example, from the rule citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y), if we have the facts in the KG, livesIn(Bronte, Canberra) and locatedIn(Canberra, Australia), then we can infer and assert the following new fact in the KG, citizenOf(Bronte, Australia)."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-4-Sentence-1",
              "text": "Rules are considered more useful if they generalise well, that is, they explain many facts."
            },
            {
              "iri": "Section-3-Paragraph-4-Sentence-2",
              "text": "To quantify this idea, we recall measures support, head coverage, and standard confidence that are used in some major approaches to rule learning."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-5-Sentence-1",
              "text": "Definition 1 (satisfies, support)."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-2",
              "text": "Let r be a CP rule of the form given earlier."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-3",
              "text": "A pair of entities (e, e') satisfies the body of r, denoted body_r(e, e'), if there exist entities e_1, ..., e_{n-1} in the KG such that all of {P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')} are facts in the KG."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-4",
              "text": "Further, (e, e') satisfies the head of r, denoted P_h(e, e'), if P_h(e, e') is a fact in the KG."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-5",
              "text": "In other words, a pair of entities satisfies both the body and the head of a CP rule if the rule, instantiated by those entities, holds true in the KG."
            },
            {
              "iri": "Section-3-Paragraph-5-Sentence-6",
              "text": "Then the support of r counts the head (target) instances for which the rule body and head are both satisfied in the KG."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-6-Sentence-1",
              "text": "Definition 2 (Standard confidence (SC), head coverage (HC))."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-2",
              "text": "SC describes how frequently the rule is true, i.e., of the ways that the body is satisfied in the KG, the proportion of the inferred head instances that are also satisfied."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-3",
              "text": "It is closely related to confidence widely used in association rule mining."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-4",
              "text": "On the other hand, HC measures the explanatory power of the rule, i.e., the proportion of the facts satisfying the head of the rule that can be inferred by satisfying the rule body."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-5",
              "text": "It is closely related to coverage widely used for rule learning in inductive logic programming."
            },
            {
              "iri": "Section-3-Paragraph-6-Sentence-6",
              "text": "A rule that has both 100% HC and SC explains every fact in the KG that is an instance of its head and is redundant with respect to the KG."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-7-Sentence-1",
              "text": "Representation Learning for KG Completion"
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-2",
              "text": "Representation learning methods have been developed to model KGs for tasks such as link prediction, entity resolution, and link-based clustering."
            },
            {
              "iri": "Section-3-Paragraph-7-Sentence-3",
              "text": "The two key phases in representation learning are (1) embedding the entities and predicates of a given KG into a latent space, and (2) reconstructing the KG based on the learned embeddings to predict new facts."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-8-Sentence-1",
              "text": "The KG is embedded into a low-dimensional vector space of latent, unnamed features not present in the KG vocabulary."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-2",
              "text": "The plausibility of a fact is defined by a scoring function over the embedded representations of its predicate and entities."
            },
            {
              "iri": "Section-3-Paragraph-8-Sentence-3",
              "text": "Learning and operating on latent representations benefits from the use of unobserved but intrinsic properties of entities and their relations."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-9-Sentence-1",
              "text": "Various methods have been proposed to construct embeddings."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-2",
              "text": "Two main categories are translation-based embeddings and compositional embeddings."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-3",
              "text": "The translation-based embeddings represent predicates as vectors and use an additive calculus for scoring."
            },
            {
              "iri": "Section-3-Paragraph-9-Sentence-4",
              "text": "The compositional embeddings represent predicates as weight matrices and use a product calculus for scoring."
            }
          ]
        },
        {
          "iri": "Section-3-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-3-Paragraph-10-Sentence-1",
              "text": "We use embeddings learned by RESCAL for our novel heuristic function for mining OP rules."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-2",
              "text": "RESCAL is a compositional-based embedding learner."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-3",
              "text": "It embeds each entity e_i by a vector e_i \u2208 \u211d^d and each predicate P_k by a matrix P_k \u2208 \u211d^{d\u00d7d}, where \u211d is the set of real numbers and d is an integer."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-4",
              "text": "d is a parameter to the learner specifying the dimensionality of the latent feature space."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-5",
              "text": "RESCAL learns the two sets of embeddings, vectors {e_i} and matrices {P_k}, by minimizing a loss function defined over the product of the entity and predicate embeddings."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-6",
              "text": "RESCAL captures rich interactions amongst entities and predicates because it learns a larger number of more finely-targeted weight parameters than methods which embed the predicates into vectors."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-7",
              "text": "RESCAL embeddings are also larger and simpler than those in more recent embedding-based link predictors such as HOLE and TuckER."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-8",
              "text": "The compactness of the latter embeddings is useful for link prediction but counter-productive for our purposes where we use embeddings in a heuristic function."
            },
            {
              "iri": "Section-3-Paragraph-10-Sentence-9",
              "text": "Furthermore, RESCAL has empirically demonstrated strength when used in a heuristic for mining logical axioms as we need here."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-4",
      "subtitle": "Rules with Free Variables for Active Knowledge Graph Completion",
      "paragraphs": [
        {
          "iri": "Section-4-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-1-Sentence-1",
              "text": "Unlike earlier work in rule mining for KG completion, for our active knowledge graph completion task we mine open path (OP) rules of the following form:"
            },
            {
              "iri": "Section-4-Paragraph-1-Sentence-2",
              "text": "P_t(x, z_0) \u2190 P_1(z_0, z_1) \u2227 P_2(z_1, z_2) \u2227 ... \u2227 P_n(z_{n-1}, y)."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-2-Sentence-1",
              "text": "Each P_i and P_t are predicates in the KG and each of {x, z_i, y} are variables; x and y are free while the z_i are bound."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-3-Sentence-1",
              "text": "Unlike CP rules, OP rules do not necessarily form a looping path over variables, but can have a more linear shape."
            },
            {
              "iri": "Section-4-Paragraph-3-Sentence-2",
              "text": "From an OP rule, two CP rules are logical consequences: one for each unification of free variable y with a variable of the head P_t."
            },
            {
              "iri": "Section-4-Paragraph-3-Sentence-3",
              "text": "However, the OP rule is not a consequence of any CP rule; OP rules are strictly more expressive than CP rules."
            },
            {
              "iri": "Section-4-Paragraph-3-Sentence-4",
              "text": "While every instantiation of a CP rule is also an instantiation of a corresponding OP rule, OP rules admit instantiations that cannot be instantiations of any CP rule."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-4-Sentence-1",
              "text": "From an instantiation of the body of an OP rule, we cannot infer a fact, but only a question."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-2",
              "text": "For example, the following OP rule, citizenOf(x, t) \u2190 livesIn(x, z), states that if an entity, x, lives in z, then that entity is a citizen of somewhere (t)."
            },
            {
              "iri": "Section-4-Paragraph-4-Sentence-3",
              "text": "By instantiating the body of this rule as follows, livesIn(Bronte, Canberra), we could infer the query, citizenOf(Bronte, ?)."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-5-Sentence-1",
              "text": "To assess the quality of our mined open path rules, we introduce open path standard confidence (OPSC) and open path head coverage (OPHC) derived from the closed path forms (Definition 2)."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-6-Sentence-1",
              "text": "Definition 3 (open path: OPsupp, OPSC, OPHC)."
            },
            {
              "iri": "Section-4-Paragraph-6-Sentence-2",
              "text": "Let r be an OP rule of the form given earlier."
            },
            {
              "iri": "Section-4-Paragraph-6-Sentence-3",
              "text": "Let r, e, e', e_i, body_r, P_t be as given in Definition 1 but adapted straightforwardly to the open path rule case."
            },
            {
              "iri": "Section-4-Paragraph-6-Sentence-4",
              "text": "Then a pair of entities (e, e') satisfies the body of r, denoted body_r(e, e'), if there exist entities e_1, ..., e_{n-1} in the KG such that P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') are facts in the KG."
            },
            {
              "iri": "Section-4-Paragraph-6-Sentence-5",
              "text": "A pair (e', e) satisfies the head of r, denoted P_t(e', e), if P_t(e', e) is a fact in the KG."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-7-Sentence-1",
              "text": "The open path support, open path standard confidence, and open path head coverage of r are given respectively by the KG."
            },
            {
              "iri": "Section-4-Paragraph-7-Sentence-2",
              "text": "Then the support degree of r is defined as:"
            },
            {
              "iri": "Section-4-Paragraph-7-Sentence-3",
              "text": "OPsupp(r) = |{e : \u2203e', e' s.t. body_r(e, e') and P_t(e', e)}|."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-8-Sentence-1",
              "text": "OPSC(r) = OPsupp(r) / |{e: \u2203e' s.t. body_r(e, e')}|."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-9-Sentence-1",
              "text": "OPHC(r) = OPsupp(r) / |{e: \u2203e' s.t. P_t(e', e)}|."
            }
          ]
        },
        {
          "iri": "Section-4-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-4-Paragraph-10-Sentence-1",
              "text": "For example, consider the OP rule, P_1(x, z_0) \u2190 P_2(z_0, z_1) \u2227 P_3(z_1, y)."
            },
            {
              "iri": "Section-4-Paragraph-10-Sentence-2",
              "text": "Assume we have 3 entities ({e_3, e_4, e_5}) which can instantiate z_0 to satisfy both P_1(x, z_0) and P_2(z_0, z_1) \u2227 P_3(z_1, y)."
            },
            {
              "iri": "Section-4-Paragraph-10-Sentence-3",
              "text": "Assume the number of entities that can instantiate z_0 to satisfy the head part is 5 ({e_1, e_2, e_3, e_4, e_5}) and the number of entities that can instantiate z_0 to satisfy the body part is 7 ({e_3, e_4, e_5, e_6, e_7, e_8, e_9})."
            },
            {
              "iri": "Section-4-Paragraph-10-Sentence-4",
              "text": "Hence, we have for this rule, OPsupp = 3, OPSC = 3/7 and OPHC = 3/5."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-5",
      "subtitle": "OP Rule Learning",
      "paragraphs": [
        {
          "iri": "Section-5-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-1-Sentence-1",
              "text": "Our objective is to mine a KG for high-quality OP rules about a specific target predicate in the head, P."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-2",
              "text": "While we adhere to the architecture of RLVLR that learns CP rules, we propose the following novelties for mining OP rules: (i) a novel fitness function which can estimate the quality of an OP rule based on the embedding representations of its predicates; and (ii) a novel vector computation which allows the system to evaluate the OP rules against a massive KG to compute quality measures, OPSC and OPHC."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-3",
              "text": "Our OP rule miner, OPRL, is summarised in Algorithm 1."
            },
            {
              "iri": "Section-5-Paragraph-1-Sentence-4",
              "text": "It takes user parameters for the maximum length of rules and the least acceptable OPSC and OPHC scores."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-2-Sentence-1",
              "text": "Algorithm 1: OPRL"
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-2",
              "text": "Input: a KG K, a target predicate P."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-3",
              "text": "Parameter: a max rule length l, MinOPSC and MinOPHC."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-4",
              "text": "Output: a set of OP rules R."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-5",
              "text": "K' := Sampling(K, P)."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-6",
              "text": "(P, A) := Embeddings(K')."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-7",
              "text": "R' := \u2205."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-8",
              "text": "For 2 \u2264 k \u2264 l do."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-9",
              "text": "Add PathFinding(K', P_t, P, A, k) to R'."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-10",
              "text": "End for."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-11",
              "text": "Add IncPathFinding(K', P_t, P, A, k, R') to R'."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-12",
              "text": "R := Evaluation(R', K)."
            },
            {
              "iri": "Section-5-Paragraph-2-Sentence-13",
              "text": "Return R."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-3-Sentence-1",
              "text": "First, we reduce the KG size because existing embedding-based methods cannot handle vast KGs."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-2",
              "text": "For instance, RESCAL is unable to handle YAGO2."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-3",
              "text": "We use the sampling algorithm, Sampling(), proposed in RLVLR to build a reduced KG."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-4",
              "text": "This means that embeddings are computed only for entities that are relevant to a target predicate."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-5",
              "text": "In more detail, Sampling() computes a fragment of the KG (K') consisting of a bounded number of entities that are related to the target predicate (i.e., P_t)."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-6",
              "text": "The method initializes a set of entities by considering a number of entities which are involved in the target predicate."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-7",
              "text": "For example, if we have P_t(e1, e2) as a fact, then our set of entities includes e1 and e2."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-8",
              "text": "Then, the method extends the set of entities by adding entities that are related to the existing entities in the set via any predicates, like adding e3 if we have some P_i(e3, e1) as a fact."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-9",
              "text": "This last step iterates a number of times based on the maximum length of target rules."
            },
            {
              "iri": "Section-5-Paragraph-3-Sentence-10",
              "text": "After the set of entities is obtained, all facts (i.e., links) between these entities form the reduced KG, K'."
            }
          ]
        },
        {
          "iri": "Section-5-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-5-Paragraph-4-Sentence-1",
              "text": "We then compute embedding models to construct a fitness function to rapidly estimate a rule's quality, and so significantly improve scalability."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-2",
              "text": "Embeddings() obtains the embeddings for predicates and arguments in the sample KG."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-3",
              "text": "Existing representation learners such as RESCAL usually compute embeddings for entities and predicates."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-4",
              "text": "Instead, we use the method proposed in RLVLR, extending RESCAL, to additionally compute argument embeddings that are derived from entity embeddings."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-5",
              "text": "RESCAL embeds each entity e_j to a vector E_j \u2208 R^d and each predicate P_i to a 2D array P_i \u2208 R^(d\u00d7d) where d is an integer parameter of RESCAL and R is the set of real numbers."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-6",
              "text": "For each given fact P_1(e0, e1), the following scoring function is defined: f(e0, P1, e1) = E_0^T \u00b7 P1 \u00b7 E1."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-7",
              "text": "The scoring function specifies the plausibility of the fact that e0 is connected to e1 via predicate P1."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-8",
              "text": "After computing embeddings, in shortest-first order, we exhaustively generate OP rules for a target predicate P_i and its inverse P_i^-1 in PathFinding()."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-9",
              "text": "The inverse is defined as \u2200e, e' P_i^-1(e', e) = P_i(e, e')."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-10",
              "text": "Since the target predicate is fixed, generating an OP rule is reduced to generating a path to comprise the body, i.e., a sequence of predicates P1', P2', ..., Pn' with required OP rule variable patterns."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-11",
              "text": "We apply the proposed fitness function to each rule on generation to rapidly discard poor performers."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-12",
              "text": "In IncPathFinding(), we create additional candidate rules by extending some top-ranked candidates."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-13",
              "text": "We learn new short OP rules for the rightmost predicate using PathFinding()."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-14",
              "text": "If we find a good rule about that predicate, then we extend the original rule by appending the new body to the original tail, and we keep both the original and extended rules."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-15",
              "text": "For example, consider that PathFinding() generated the rule: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, y)."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-16",
              "text": "In IncPathFinding(), the rule is extended to: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, z3) \u2227 P5(z3, y) if PathFinding() also generates P4(x, z0) \u2190 P5(z0, y)."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-17",
              "text": "We then use a redundancy elimination method to make sure there is no repetition in all the mined rules and then evaluate candidate rules by OPSC and OPHC in Evaluate()."
            },
            {
              "iri": "Section-5-Paragraph-4-Sentence-18",
              "text": "We use efficient matrix and vector multiplication for evaluation, which is crucial for scalability."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-6",
      "subtitle": "OP Rule Learning: Rule Quality Estimation using Embeddings",
      "paragraphs": [
        {
          "iri": "Section-6-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-1-Sentence-1",
              "text": "Since the number of potential rules generated in PathFinding() is enormous, we rapidly filter out candidates of low quality."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-2",
              "text": "For this purpose, the quality is estimated by either of two fitness functions: co-occurrence or open path, both of which are derived from embedding representations."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-3",
              "text": "The former uses entity embeddings alone, while the latter incorporates predicate embeddings as well."
            },
            {
              "iri": "Section-6-Paragraph-1-Sentence-4",
              "text": "We use RESCAL to compute both."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-2-Sentence-1",
              "text": "Co-occurrence Fitness Function."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-2",
              "text": "Each instance of an OP rule connects its head and body via a shared entity in place of z0, so an OP rule tends to have high OPsupp (and so high OPSC and OPHC) if the entities which satisfy the second argument of P_t have a large intersection with the entities that satisfy the first argument of P_t."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-3",
              "text": "When predicate pairs associate similar entities this way, this induces a latent-feature relationship between the predicates that we call co-occurrence."
            },
            {
              "iri": "Section-6-Paragraph-2-Sentence-4",
              "text": "For instance, the two predicates liveIn(e'', e) and locatedIn(e', e') may co-occur because in both cases e is often a city."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-3-Sentence-1",
              "text": "Based on this observation, a co-occurrence fitness function for mining CP rules is defined using argument embeddings in RLVLR, and we adapt it here."
            },
            {
              "iri": "Section-6-Paragraph-3-Sentence-2",
              "text": "RLVLR also defines a similarity fitness function that is not applicable here because it relies on the head predicate to share a large number of entities with the body in both argument positions (i.e., one with the first argument of the first body predicate and the other with the last argument of the last body predicate)."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-4-Sentence-1",
              "text": "Since CP rules have no free variables, searching for good CP rules is computationally easier than for OP rules where there are many more satisfying facts."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-2",
              "text": "In CP rules, the head and body present similar concepts so the RLVLR algorithm can use a similarity scoring function."
            },
            {
              "iri": "Section-6-Paragraph-4-Sentence-3",
              "text": "For OP rules, there is no holistic similarity between the head and body."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-5-Sentence-1",
              "text": "For example, consider the following CP rule: isCitizenOf(x,y) \u2190 isBornIn(x,z) \u2227 locatedIn(z,y), where the head and body present similar relations between the pair of entities (x,y)."
            },
            {
              "iri": "Section-6-Paragraph-5-Sentence-2",
              "text": "On the other hand, in an OP rule like citizenOf(x,t) \u2190 marriedTo(x,z) \u2227 parentOf(z,y), there is no holistic similarity, and the head relates different pairs of entities (x,t) to the pairs connected via the body of the same rule (x,y), so we cannot expect the pairs to be similar."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-6-Sentence-1",
              "text": "For argument embeddings, each predicate has a subject argument in the first position and an object argument in the second position."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-2",
              "text": "Each argument's embedding is a vector obtained by averaging the embeddings of all the entities in the argument position."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-3",
              "text": "For entity e, we write its embedding vector as e."
            },
            {
              "iri": "Section-6-Paragraph-6-Sentence-4",
              "text": "For predicate P, we write its embedding matrix as P, also called a weight matrix."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-7-Sentence-1",
              "text": "Definition 4 (argument embedding). Let K = (E, F) be a KG."
            },
            {
              "iri": "Section-6-Paragraph-7-Sentence-2",
              "text": "The argument embeddings of the subject and object arguments of a predicate P are vectors defined respectively as:"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-8-Sentence-1",
              "text": "P(1) = (1/n) \u2211 s_e * e for e in S_p, and P(2) = (1/n) \u2211 o_e * e for e in O_p."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-9-Sentence-1",
              "text": "Here, n is the number of facts in the KG."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-2",
              "text": "S_p and O_p are the sets of entities occurring as subjects and objects of P, respectively."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-3",
              "text": "More precisely, S_p = {e | \u2203e' such that P(e, e') \u2208 F} and O_p = {e' | \u2203e such that P(e, e') \u2208 F}."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-4",
              "text": "The terms s_e and o_e represent the number of times an entity e occurs as a subject and an object of P in K respectively."
            },
            {
              "iri": "Section-6-Paragraph-9-Sentence-5",
              "text": "More precisely, s_e = |{e' such that P(e, e') \u2208 F}| and o_e = |{e' such that P(e', e) \u2208 F}|."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-10-Sentence-1",
              "text": "Now the co-occurrence fitness function for CP rules used in RLVLR is modified for the OP case."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-2",
              "text": "In an OP rule of the form (2), the co-occurrences of z_0 as the object argument of P_t and subject argument of P_1, and z_i (1 \u2264 i \u2264 n - 1) as the object argument of P_i and subject argument of P_{i+1}, motivates us to highly value rules with the properties:"
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-3",
              "text": "P(2)_t \u2248 P(1)_1, and P(2)_i \u2248 P(1)_{i+1} (1 \u2264 i \u2264 n - 1)."
            },
            {
              "iri": "Section-6-Paragraph-10-Sentence-4",
              "text": "Pairwise local fitness functions are defined accordingly."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-11-Sentence-1",
              "text": "Definition 5 (local co-occurrence fitness). Let r be an OP rule of the form (2)."
            },
            {
              "iri": "Section-6-Paragraph-11-Sentence-2",
              "text": "Then:"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-12",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-12-Sentence-1",
              "text": "f^0_loc (P_t, P_1) = sim(P(2)_t , P(1)_1)"
            },
            {
              "iri": "Section-6-Paragraph-12-Sentence-2",
              "text": "f^i_loc (P_i, P_{i+1}) = sim(P(2)_i , P(1)_{i+1}) for 1 \u2264 i \u2264 n - 1."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-13",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-13-Sentence-1",
              "text": "The similarity function sim is defined by the Frobenius norm, i.e., for two matrices M_1 and M_2:"
            },
            {
              "iri": "Section-6-Paragraph-13-Sentence-2",
              "text": "sim(M_1, M_2) = exp(-||M_1 - M_2||_F)."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-14",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-14-Sentence-1",
              "text": "Co-occurrence for the whole rule can then be obtained by aggregating the pairwise local occurrences as follows."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-15",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-15-Sentence-1",
              "text": "Definition 6 (co-occurrence fitness). Let r be an open path rule of the form (2)."
            },
            {
              "iri": "Section-6-Paragraph-15-Sentence-2",
              "text": "Then:"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-16",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-16-Sentence-1",
              "text": "f_coo (r) = f^0_loc (P_t, P_1) + \u2211_{i=1}^{n-1} f^i_loc (P_i, P_{i+1})."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-17",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-17-Sentence-1",
              "text": "By using argument embeddings built from entity embeddings, the co-occurrence captures the weight of connections of sequential entities along the path."
            },
            {
              "iri": "Section-6-Paragraph-17-Sentence-2",
              "text": "Next, we introduce an alternative quality estimation function that uses both entity and predicate embeddings, called open path fitness, f_op (.)."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-18",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-18-Sentence-1",
              "text": "4.1.2. Open Path Fitness Function"
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-2",
              "text": "An OP rule acts to connect entities satisfying the subject argument of the head predicate, P_t, to entities forming the object argument of the tail predicate, P_n, along a path of entities that satisfy a chain of predicates in the rule."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-3",
              "text": "The product of the predicate embeddings along the path acts as a low-dimensional representation of the latent features of a path that connects its endpoints, and therefore represents the overall rule from the perspective of the predicates."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-4",
              "text": "However, to anchor the rule, we also need to account for the entities that satisfy the free variables at the endpoints, as does the RESCAL evaluation function for a single predicate."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-5",
              "text": "Conveniently, our argument embeddings for the subject argument of P_t and the object argument of P_n give us what we need by averaging the embeddings of all the entities at the endpoints."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-6",
              "text": "Based on this observation, we propose the open path fitness function to estimate the rule quality."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-7",
              "text": "Definition 7 (open path fitness)."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-8",
              "text": "Let r be an OP rule of the form (2)."
            },
            {
              "iri": "Section-6-Paragraph-18-Sentence-9",
              "text": "Then the open path fitness for r is defined by the product:"
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-19",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-19-Sentence-1",
              "text": "f_op (r) = P(1)^T P_t P_1 P_2 ... P_n P(2)_n."
            }
          ]
        },
        {
          "iri": "Section-6-Paragraph-20",
          "sentences": [
            {
              "iri": "Section-6-Paragraph-20-Sentence-1",
              "text": "There is no clear reason to prefer either of the fitness functions, f_op(.) or f_coo(.), over the other, although the first focuses on entities and the second on predicates."
            },
            {
              "iri": "Section-6-Paragraph-20-Sentence-2",
              "text": "Experimentally, we find that they complement each other, and that a hybrid approach is preferable (see Table 3)."
            },
            {
              "iri": "Section-6-Paragraph-20-Sentence-3",
              "text": "In the hybrid setting, we use both fitness functions to pick the top candidate rules."
            },
            {
              "iri": "Section-6-Paragraph-20-Sentence-4",
              "text": "Hence, for each fitness function, based on fitness values of rules, we pick up only the top t% of rules, where t% is a learning system parameter that is going to be tuned."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-7",
      "subtitle": "OP Rule Learning: Evaluating Potential Rules through Matrices and Vectors",
      "paragraphs": [
        {
          "iri": "Section-7-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-1-Sentence-1",
              "text": "Now we are ready to explain the evaluation method, Evaluation() in Algorithm 1."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-2",
              "text": "We assess the candidate rules based on the sampled KG first for efficiency, then pick the rules with OPsupp(r) \u2265 1."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-3",
              "text": "These rules also may include a significant number of obsolete and low-quality rules, so we perform a second collection based on the two metrics, OPSC and OPHC, assessed over the whole KG."
            },
            {
              "iri": "Section-7-Paragraph-1-Sentence-4",
              "text": "We show in the following how to efficiently compute the measures using an adjacency matrix representation of the KG."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-2-Sentence-1",
              "text": "To compute OPSC and OPHC, a method is required to check the satisfiability of body atoms of all candidate rules."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-2",
              "text": "In other words, we need to find all KG facts that can trigger a candidate rule."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-3",
              "text": "Let KG, K = (E,F) with E= {e1,...,en} be the set of all entities and P = {P1,...,Pm} be the set of all predicates in F."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-4",
              "text": "Like RESCAL, we represent K as a set of square n \u00d7 n adjacency matrices by defining the function A."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-5",
              "text": "Specifically, the (i, j)th element A(Pk)[i,j] = 1 if the fact Pk(ei, ej) is in F; and 0 otherwise."
            },
            {
              "iri": "Section-7-Paragraph-2-Sentence-6",
              "text": "Thus, A(Pk) is a matrix of binary values and the set {A(Pk) : k \u2208 {1,...,m}} represents K."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-3-Sentence-1",
              "text": "We illustrate the method for computing OPSC and OPHC through an example."
            },
            {
              "iri": "Section-7-Paragraph-3-Sentence-2",
              "text": "Consider the OP rule: r: P1(x,z0) \u2190 P2(z0,z1) \u2227 P3(z1,y) and KG."
            },
            {
              "iri": "Section-7-Paragraph-3-Sentence-3",
              "text": "E = {e1,e2,e3} and F = {P1(e1,e2), P1(e2,e1), P1(e2,e3), P1(e3,e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-4-Sentence-1",
              "text": "For OPSC and OPHC, we need to calculate:"
            },
            {
              "iri": "Section-7-Paragraph-4-Sentence-2",
              "text": "(1) The number of entities that satisfy the head of the rule in the second argument position."
            },
            {
              "iri": "Section-7-Paragraph-4-Sentence-3",
              "text": "(2) The number of entities that satisfy the body of a rule in the first argument position."
            },
            {
              "iri": "Section-7-Paragraph-4-Sentence-4",
              "text": "(3) The number of entities that join the head of a rule to its body."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-5-Sentence-1",
              "text": "For (1), to find distinct entities, we sum each column of the adjacency matrix and transpose to obtain the vector v(2)(P1)."
            },
            {
              "iri": "Section-7-Paragraph-5-Sentence-2",
              "text": "Each non-zero element of this vector indicates a satisfying entity, and the number of distinct entities is given by counting the number of non-zero elements in it."
            },
            {
              "iri": "Section-7-Paragraph-5-Sentence-3",
              "text": "Formally, the satisfying entities are {ei : \u2211j A(P1)[i,j] > 0 and 1 \u2264 j \u2264 n}, and the cardinality is the number we need."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-6-Sentence-1",
              "text": "For (2), the pairs (e, e') satisfying the body are connected by the path P1, P2, ..., Pm."
            },
            {
              "iri": "Section-7-Paragraph-6-Sentence-2",
              "text": "This can be obtained directly from the matrix product B = A(P1) A(P2) ... A(Pm), with elements having a non-zero value."
            },
            {
              "iri": "Section-7-Paragraph-6-Sentence-3",
              "text": "To find distinct entities, we sum each row corresponding to each value for the first argument to obtain the vector v(1)(B)."
            },
            {
              "iri": "Section-7-Paragraph-6-Sentence-4",
              "text": "Each non-zero element of this vector indicates a satisfying entity, and the number of distinct entities is given by counting the number of non-zero elements in v(1)(B)."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-7-Sentence-1",
              "text": "For the example, we have:"
            },
            {
              "iri": "Section-7-Paragraph-7-Sentence-2",
              "text": "B = A(P1) A(P2) = | 0 0 2 | | 0 2 1 | | 1 0 0 |."
            },
            {
              "iri": "Section-7-Paragraph-7-Sentence-3",
              "text": "v(1)(B) = | 0 | | 3 | | 1 |."
            },
            {
              "iri": "Section-7-Paragraph-7-Sentence-4",
              "text": "With satisfying entities e2 and e3 and a count of 2."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-8-Sentence-1",
              "text": "Computing (3) is now straightforward."
            },
            {
              "iri": "Section-7-Paragraph-8-Sentence-2",
              "text": "We have that the row index of non-zero elements of v(2)(P1) indicate entities that satisfy the second argument of the head."
            },
            {
              "iri": "Section-7-Paragraph-8-Sentence-3",
              "text": "Similarly, the row index of non-zero elements of v(1)(B) indicate entities that satisfy the first argument of the body."
            },
            {
              "iri": "Section-7-Paragraph-8-Sentence-4",
              "text": "Therefore, we can find the entities that satisfy both of these conditions by pairwise multiplication."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-9-Sentence-1",
              "text": "The entities we need are {ei : (v(2)(P1)[i] \u00d7 v(1)(A(P1) A(P2) ... A(Pm))[i]) > 0 and 1 \u2264 i \u2264 n}."
            },
            {
              "iri": "Section-7-Paragraph-9-Sentence-2",
              "text": "The count is the cardinality of this set."
            },
            {
              "iri": "Section-7-Paragraph-9-Sentence-3",
              "text": "For the example, we have only e3 in the set with a count of 1."
            },
            {
              "iri": "Section-7-Paragraph-9-Sentence-4",
              "text": "Hence, OPsupp(r) = 1."
            },
            {
              "iri": "Section-7-Paragraph-9-Sentence-5",
              "text": "From (1) and (2), we can easily obtain OPHC(r) = 1/1 and OPSC(r) = 1/2."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-10-Sentence-1",
              "text": "Minimum thresholds for OPSC and OPHC are supplied to Algorithm 1 at runtime, and Evaluation() discards failing rules."
            },
            {
              "iri": "Section-7-Paragraph-10-Sentence-2",
              "text": "The remaining rules are the final result of the algorithm."
            }
          ]
        },
        {
          "iri": "Section-7-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-7-Paragraph-11-Sentence-1",
              "text": "In summary, we introduce the following novel components to mine OP rules from KGs:"
            },
            {
              "iri": "Section-7-Paragraph-11-Sentence-2",
              "text": "1. Proposing OP rules: We propose a fragment of function-free Horn rules that allows us to mine rules with free variables while keeping the complexity of the learning phase manageable."
            },
            {
              "iri": "Section-7-Paragraph-11-Sentence-3",
              "text": "2. Learning OP rules based on an embedding representation: We introduce a novel method to rapidly estimate the quality of each candidate rule for early pruning, based on its embedding representation."
            },
            {
              "iri": "Section-7-Paragraph-11-Sentence-4",
              "text": "3. Evaluating OP rules: We propose an efficient method to exactly compute the quality of each rule by matrix and vector operations."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-8",
      "subtitle": "Generating relevant queries for Active Knowledge Graph Completion",
      "paragraphs": [
        {
          "iri": "Section-8-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-1-Sentence-1",
              "text": "As discussed, we can now mine OP rules with measurable qualities from KGs."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-2",
              "text": "In this section, we show how the mined rules can be used for AKGC."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-3",
              "text": "We use OP rules to generate relevant questions which can be posed to an oracle or a human expert, just as for other active learning settings."
            },
            {
              "iri": "Section-8-Paragraph-1-Sentence-4",
              "text": "In our case, an automated link predictor makes a convenient oracle."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-2-Sentence-1",
              "text": "Given predicate P, the AKGC task is to generate queries of the form P(?, e') and P(e, ?) for entities e and e' occurring in the KG."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-2",
              "text": "To find relevant queries, we implement an inference module that derives queries from KG facts together with OP rules found by Algorithm 1."
            },
            {
              "iri": "Section-8-Paragraph-2-Sentence-3",
              "text": "We first use OPRL to learn OP rules about P in the head and then use the rules to induce queries of the form P(?, e') and P(e, ?)."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-3-Sentence-1",
              "text": "For an OP rule of the form (2), if an instance of the rule body such as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') exists in the KG, then the existence of an instance of the head with one free variable, viz the query P_t(?, e), can be induced with a quantifiable confidence."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-4-Sentence-1",
              "text": "We define the confidence degree (CD) of such a query to be the maximum OPSC of all the rules inducing the query, thereby giving no weight to redundant rules that induce the same query."
            },
            {
              "iri": "Section-8-Paragraph-4-Sentence-2",
              "text": "Formally, the CD of q is defined as follows for a query q = P(?, e') or q = P(e, ?) and the collection of rules R that can induce q from the given KG:"
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-5-Sentence-1",
              "text": "CD(q) = max(OPSC(r))"
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-6-Sentence-1",
              "text": "In this way, we go beyond link prediction to infer relevant queries for missing links, that is, Active KGC."
            },
            {
              "iri": "Section-8-Paragraph-6-Sentence-2",
              "text": "Conventionally, a link predictor is given a query derived from the hold-out test data to predict facts, and then uses the test data to evaluate its prediction performance."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-7-Sentence-1",
              "text": "This begs the question, whence does the query arise in an industrial application of a link prediction model?"
            },
            {
              "iri": "Section-8-Paragraph-7-Sentence-2",
              "text": "You have a KG and a high-performing link-predicting model built for the KG, but do you continue to hold out facts from your KG in order to generate queries that predict those same facts: facts that are missing only because you need them to generate queries?"
            },
            {
              "iri": "Section-8-Paragraph-7-Sentence-3",
              "text": "Or do you instead generate every possible query with no indication of comparative value to the KG?"
            },
            {
              "iri": "Section-8-Paragraph-7-Sentence-4",
              "text": "Or do you generate queries with a preference given to those with a higher probability in the KG?"
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-8-Sentence-1",
              "text": "For AKGC, we need only a named predicate (or all predicates) and use OP rules mined over training data to induce the most relevant queries over the full KB."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-9-Sentence-1",
              "text": "For example, assume we have the following facts about the target predicate, P_1 in the test data:"
            },
            {
              "iri": "Section-8-Paragraph-9-Sentence-2",
              "text": "{P_1(e_1, e_2), P_1(e_1, e_3), P_1(e_4, e_5), P_1(e_8, e_7), P_1(e_9, e_7)}."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-10-Sentence-1",
              "text": "Possible queries about this set of facts are: {P_1(e_1, ?), P_1(?, e_2), P_1(?, e_3), P_1(e_4, ?), P_1(?, e_5), P_1(e_8, ?), P_1(e_9, ?), P_1(?, e_7)}."
            }
          ]
        },
        {
          "iri": "Section-8-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-8-Paragraph-11-Sentence-1",
              "text": "While link predictors try to answer this set of queries, in our AGKGC we mine OP rules to predict the queries themselves."
            },
            {
              "iri": "Section-8-Paragraph-11-Sentence-2",
              "text": "The number of induced queries is upper-bounded by twice the number of facts since different facts (P_1(e_8, e_7) and P_1(e_9, e_7)) can derive the same query (P_1(?, e_7))."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-9",
      "subtitle": "Experiments",
      "paragraphs": [
        {
          "iri": "Section-9-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-1-Sentence-1",
              "text": "We conducted two sets of experiments to evaluate OPRL."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-2-Sentence-1",
              "text": "Knowledge graph completion approaches are usually evaluated by link prediction, for which relevant questions are provided by human experimenters."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-2",
              "text": "The link predictors answer each query with a sequence of ranked entities."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-3",
              "text": "In this paper, we are concerned with asking relevant questions rather than answering such questions."
            },
            {
              "iri": "Section-9-Paragraph-2-Sentence-4",
              "text": "Our generated queries can be used in combination with a link predictor to infer new facts, but we do not use any specific link predictor to answer our questions in this paper."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-3-Sentence-1",
              "text": "This is because link predictors vary in performance and are not designed to answer a query with one correct answer, but instead a ranked sequence of answers where the top-ranked alone is not considered significant."
            },
            {
              "iri": "Section-9-Paragraph-3-Sentence-2",
              "text": "To evaluate our system, we assume a perfect link predictor that can answer any question with a correct answer when such an answer exists."
            },
            {
              "iri": "Section-9-Paragraph-3-Sentence-3",
              "text": "By this, the problem of knowledge graph completion is reduced to the problem of finding relevant questions."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-4-Sentence-1",
              "text": "We can evaluate the relevancy of a question based on the test facts."
            },
            {
              "iri": "Section-9-Paragraph-4-Sentence-2",
              "text": "If we have the answer to a question in the test set, it means the question is relevant because it uncovers some missing fact, and if we have a perfect link predictor, the question can be fed to it, and the missing fact can be retrieved."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-5-Sentence-1",
              "text": "Since our proposed system is the first method to learn rules to generate relevant questions automatically, we have no benchmark solution with which to compare."
            },
            {
              "iri": "Section-9-Paragraph-5-Sentence-2",
              "text": "We construct two baselines with which to compare: a probabilistic-based query generator and a rule-based link predictor whose output is modified to produce questions."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-6-Sentence-1",
              "text": "In our experiments, we demonstrate:"
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-7-Sentence-1",
              "text": "1. OPRL can mine quality OP rules from a range of KGs."
            },
            {
              "iri": "Section-9-Paragraph-7-Sentence-2",
              "text": "OPRL can mine massive KGs in a reasonable time."
            },
            {
              "iri": "Section-9-Paragraph-7-Sentence-3",
              "text": "Our novel hybrid fitness function outperforms the fitness function adapted from RLVLR."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-8-Sentence-1",
              "text": "2. Queries generated from OPRL's rules are relevant with good recall and precision in multiple KGs."
            },
            {
              "iri": "Section-9-Paragraph-8-Sentence-2",
              "text": "They far outperform a probabilistic baseline."
            },
            {
              "iri": "Section-9-Paragraph-8-Sentence-3",
              "text": "They also outperform queries generated by a modified leading-edge link predictor."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-9-Sentence-1",
              "text": "We conducted experiments over the four benchmark datasets given in Table 1."
            },
            {
              "iri": "Section-9-Paragraph-9-Sentence-2",
              "text": "FB15K SELECTED (which we call FB15KSE) is derived from Freebase and is widely adopted for link prediction."
            },
            {
              "iri": "Section-9-Paragraph-9-Sentence-3",
              "text": "YAGO2 core is often used for rule mining."
            },
            {
              "iri": "Section-9-Paragraph-9-Sentence-4",
              "text": "Wikidata is a multilingual, collaboratively-created KG to manage the factual information of a popular online encyclopedia."
            },
            {
              "iri": "Section-9-Paragraph-9-Sentence-5",
              "text": "We use a copy dated December 2014 provided in AMIE+."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-10-Sentence-1",
              "text": "Poker is a synthetic dataset adapted by the authors from the classic version to be a correct and complete KG for experiments."
            },
            {
              "iri": "Section-9-Paragraph-10-Sentence-2",
              "text": "Each poker hand consists of 5 playing cards drawn from a reduced deck with 6 ranks and 2 suits."
            },
            {
              "iri": "Section-9-Paragraph-10-Sentence-3",
              "text": "Each card is described using two attributes (suit and rank), for a total of 10 predictive attributes."
            },
            {
              "iri": "Section-9-Paragraph-10-Sentence-4",
              "text": "There is one Class attribute that describes the 'Poker Hand'."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-11",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-11-Sentence-1",
              "text": "All experiments were conducted on an Intel Xeon CPU E5-4620v2 @ 2.60 GHz, 66 GB RAM, and running CentOS 7."
            },
            {
              "iri": "Section-9-Paragraph-11-Sentence-2",
              "text": "For sampling, we use similar parameters to those proposed in RLVLR."
            },
            {
              "iri": "Section-9-Paragraph-11-Sentence-3",
              "text": "We set the maximum size of each sample to 800 entities."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-12",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-12-Sentence-1",
              "text": "We use RESCAL to generate embeddings with the vector size set to 100."
            },
            {
              "iri": "Section-9-Paragraph-12-Sentence-2",
              "text": "We retain the top 10% of the OP rules according to the fitness function."
            },
            {
              "iri": "Section-9-Paragraph-12-Sentence-3",
              "text": "The number of possible rules grows significantly with increasing length, as does the runtime for mining."
            }
          ]
        },
        {
          "iri": "Section-9-Paragraph-13",
          "sentences": [
            {
              "iri": "Section-9-Paragraph-13-Sentence-1",
              "text": "We use a maximum rule length of 4 for PathFinding() and we allow the extension to 6 by IncPathFinding()."
            },
            {
              "iri": "Section-9-Paragraph-13-Sentence-2",
              "text": "These parameters are the optimum obtained by tuning."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-10",
      "subtitle": "Experiments: OP Rule Learning",
      "paragraphs": [
        {
          "iri": "Section-10-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-1-Sentence-1",
              "text": "First, we assess how well OPRL finds high quality rules."
            },
            {
              "iri": "Section-10-Paragraph-1-Sentence-2",
              "text": "We are not aware of other OP rule learners with which to compare, but we do compare the performance of fitness functions proposed for OPRL."
            },
            {
              "iri": "Section-10-Paragraph-1-Sentence-3",
              "text": "The quality of rules is reported based on their OPSC/OPHC scores calculated against the full benchmark KGs, not only the samples."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-2-Sentence-1",
              "text": "Later, we will use the mined rules for generating queries, so we need some hold-out facts for query evaluation."
            },
            {
              "iri": "Section-10-Paragraph-2-Sentence-2",
              "text": "For FB15KSE, test and training sets are available."
            },
            {
              "iri": "Section-10-Paragraph-2-Sentence-3",
              "text": "For Poker and YAGO2 core, we can find no previously prepared data, so we randomly partition 90% for training and 10% for testing."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-3-Sentence-1",
              "text": "Table 2 shows the average numbers of quality rules mined for all predicates in the respective KGs."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-2",
              "text": "Wikidata is an exception: only 50 randomly selected predicates are targeted."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-3",
              "text": "Table 2 shows run times in hours, averaged over the targets."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-4",
              "text": "Similarly, only rules with quality OPSC > 0.1 and OPHC > 0.01 are included."
            },
            {
              "iri": "Section-10-Paragraph-3-Sentence-5",
              "text": "The average number of accurate rules, i.e., the rules with OPSC > 0.8, are given as #Arules."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-4-Sentence-1",
              "text": "Figure 1 shows the distribution of mined rules by OPSC and length."
            },
            {
              "iri": "Section-10-Paragraph-4-Sentence-2",
              "text": "We can see that OPRL can learn plausible rules over popular benchmark KGs of over eight million facts and four million entities in less than two hours."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-5-Sentence-1",
              "text": "For illustration, we present the following two OP rules which are mined from Wikidata, with their OPSC and OPHC values respectively."
            },
            {
              "iri": "Section-10-Paragraph-5-Sentence-2",
              "text": "The first rule states that if the spouse of a person (z) is known, it is likely that the place of birth of that person is also known."
            },
            {
              "iri": "Section-10-Paragraph-5-Sentence-3",
              "text": "Thus, if the body of each rule is instantiated but there is no fact to fully instantiate the head of the rule, a relevant query is induced."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-6-Sentence-1",
              "text": "The second rule states that if there is a region (z) in a country (w) that is known to the KG and the continent of that country (y) is also known, it is likely that the region\u2019s highest point (x) is known."
            },
            {
              "iri": "Section-10-Paragraph-6-Sentence-2",
              "text": "The third rule states that if there is a TV program (z) that has a participant (w) that has an occupation (y), then it is likely that the presenter of the program (x) is known."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-7-Sentence-1",
              "text": "0.50, 0.02 placeOfBirth(z, x) \u2190 spouse(z, y)."
            },
            {
              "iri": "Section-10-Paragraph-7-Sentence-2",
              "text": "0.19, 0.45 highestPoint(z, x) \u2190 country\u207b\u00b9(z, w) \u2227 continent(w, y)."
            },
            {
              "iri": "Section-10-Paragraph-7-Sentence-3",
              "text": "0.59, 0.15 presenter(z, x) \u2190 participant(z, w) \u2227 occupation(w, y)."
            }
          ]
        },
        {
          "iri": "Section-10-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-10-Paragraph-8-Sentence-1",
              "text": "We conducted an experiment to assess the utility of our fitness functions, using random.org to select 20 random predicates from FB15KSE."
            },
            {
              "iri": "Section-10-Paragraph-8-Sentence-2",
              "text": "The results summarized in Table 3 show that a hybrid fitness function that combines both f_co(.) and f_op(.) is capable of mining more quality rules than either of these functions individually."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-11",
      "subtitle": "Experiments: Query Generation for Active Knowledge Graph Completion",
      "paragraphs": [
        {
          "iri": "Section-11-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-1-Sentence-1",
              "text": "Our second set of experiments assesses the relevance of queries induced from OPRL-mined rules."
            },
            {
              "iri": "Section-11-Paragraph-1-Sentence-2",
              "text": "For this purpose, we consider that a query with an answer present in the test set is a relevant query, having previously filtered out queries that can be answered from the training set."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-2-Sentence-1",
              "text": "In the absence of any comparative system for query generation, we developed three baseline query sets of the same cardinality as those generated from OPRL, called Prand."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-2",
              "text": "Prand queries are generated by first selecting a bag of predicates, with each selected randomly with probability of its proportion in the test set."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-3",
              "text": "Then, for half of the instances of each predicate, a subject (respectively object) entity is assigned by random selection of an entity with probability of its proportion as a subject (respectively object) of any predicate in the test set."
            },
            {
              "iri": "Section-11-Paragraph-2-Sentence-4",
              "text": "The object (respectively subject) position is free (denoted '?')."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-3-Sentence-1",
              "text": "We assess relevance over three KGs but not Wikidata because there are no public test and train sets, and the baseline query generator Prand cannot handle the massive size."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-4-Sentence-1",
              "text": "Table 4 shows average precision, recall, and F1, where a query is counted as true if it has an instance fact in the test data and false otherwise."
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-2",
              "text": "The queries were induced by OPRL rules learned over the training data with quality thresholds OPSC > 0.8 and OPHC > 0.01."
            },
            {
              "iri": "Section-11-Paragraph-4-Sentence-3",
              "text": "We see that OPRL's performance exceeds Prand on FB15KSE, YAGO2 core, and Poker by factors of approximately 6, 2, and 9, respectively."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-5-Sentence-1",
              "text": "We suspect that YAGO2 induces fewer rules and has much weaker performance because it has significantly fewer repeatable patterns."
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-2",
              "text": "This could be because it is quite correctly weakly structured or because it has significantly more missing facts."
            },
            {
              "iri": "Section-11-Paragraph-5-Sentence-3",
              "text": "If the latter, then the validity of our test set is questionable because genuinely missing facts will be treated as false instead of true, thereby incorrectly punishing precision and recall."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-6",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-6-Sentence-1",
              "text": "Supporting this explanation, we see that for synthetic Poker, which is naturally highly structured, and where all the missing facts are present in the test set, we have very close to 100% precision and excellent recall."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-2",
              "text": "Very high precision means our queries are highly relevant as they ask questions for which the answer facts are missing from the training set."
            },
            {
              "iri": "Section-11-Paragraph-6-Sentence-3",
              "text": "Still, even for Poker, recall shows that there are relevant queries that were not generated, possibly due to the limitations of our OP language or to useful rules being discarded by the fitting function or the OPSC/OPHC thresholds."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-7",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-7-Sentence-1",
              "text": "Next, we consider the sensitivity of the performance of OPRL queries to the OPSC threshold by varying it from 0.1 to 1, learning the previously selected predicates for FB15KSE (Table 3)."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-2",
              "text": "In Figure 2, we see that increasing OPSC has the expected behavior of decreasing recall as poorer rules get through, and increasing precision as more missing facts are found."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-3",
              "text": "Observing a sharp anomaly where the OPSC threshold is 0.9, we suspect it might be caused by the incompleteness of FB15KSE (i.e., the generated queries may be valid but there is no answer in the test set)."
            },
            {
              "iri": "Section-11-Paragraph-7-Sentence-4",
              "text": "We repeated the experiment on the complete Poker KG and the anomaly is indeed absent as expected."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-8",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-8-Sentence-1",
              "text": "Finally, we compare OPRL queries with the state-of-the-art rule-based link predictor, RLvLR."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-2",
              "text": "Rule learners predict facts, not queries, so we cannot compare them directly."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-3",
              "text": "Instead, we translate each fact generated by RLvLR to two queries, by freeing the subject and object entities respectively."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-4",
              "text": "However, while generating facts, RLvLR uses a Noisy-OR operator to aggregate high-performing rules about a target predicate."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-5",
              "text": "This aggregation is not compatible with the query generation task where only the top prediction matters."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-6",
              "text": "Consequently, experiments show that RLvLR with Noisy-OR performs very poorly for query generation."
            },
            {
              "iri": "Section-11-Paragraph-8-Sentence-7",
              "text": "To more fairly compare, we changed the aggregation in RLvLR to use a Max operator instead of Noisy-OR and call this RLvLR*."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-9",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-9-Sentence-1",
              "text": "We used 20 randomly selected predicates from FB15KSE in the query generation task."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-2",
              "text": "Since RLvLR* and OPRL use the very similar minimum SC and minimum OPSC respectively, we use a ROC (Receiver Operating Characteristic) curve to compare the outputs of the two systems."
            },
            {
              "iri": "Section-11-Paragraph-9-Sentence-3",
              "text": "We plot the query performance of OPRL and RLvLR* as ROC curves in Figure 3 using minimum OPSC and minimum SC parameters as the ordering criteria."
            }
          ]
        },
        {
          "iri": "Section-11-Paragraph-10",
          "sentences": [
            {
              "iri": "Section-11-Paragraph-10-Sentence-1",
              "text": "For OPRL, we vary the minimum OPSC from 1 to 0.5 in 4 decrements and get a False Positive Rate of almost 50%."
            },
            {
              "iri": "Section-11-Paragraph-10-Sentence-2",
              "text": "For RLvLR*, we vary SC from 1 to 0.1 (the minimum and default) in 4 decrements to achieve the same False Positive Rate."
            },
            {
              "iri": "Section-11-Paragraph-10-Sentence-3",
              "text": "Since SC and OPSC are similar measures, we say OPRL finds higher-confidence queries than RLvLR* does."
            },
            {
              "iri": "Section-11-Paragraph-10-Sentence-4",
              "text": "In Figure 3, the partial area under the curve (AUC) of RLvLR* is 0.23 while the partial AUC of OPRL is 0.30, showing OPRL outperforms RLvLR* on query generation by 30%."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-12",
      "subtitle": "Related Work and Discussion",
      "paragraphs": [
        {
          "iri": "Section-12-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-1-Sentence-1",
              "text": "Previous work in rule learning from a KG is closely related to ours, but it is generally focused on Closed rules."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-2",
              "text": "As discussed, Closed rules are less expressive than our OP rules and have a different application."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-3",
              "text": "While OP rule learners aim to generate new facts, we aim to generate relevant queries for new facts."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-4",
              "text": "There are some preliminary attempts towards learning existential rules from knowledge graphs."
            },
            {
              "iri": "Section-12-Paragraph-1-Sentence-5",
              "text": "In this short paper, the authors outline several directions for future research to handle existential rule learning, although they do not propose a learning system."
            }
          ]
        },
        {
          "iri": "Section-12-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-12-Paragraph-2-Sentence-1",
              "text": "We are unaware of any previous approach which produces relevant queries for link predictors in the knowledge graph completion process."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-2",
              "text": "However, CHAI filters facts before supplying them to a link predictor, aiming to improve the prediction by focusing its attention on the more probable facts and discarding irrelevant ones."
            },
            {
              "iri": "Section-12-Paragraph-2-Sentence-3",
              "text": "It does not generate queries as OPRL does, and is highly dependent on the initial set of facts which it aims to filter."
            }
          ]
        }
      ]
    },
    {
      "iri": "Section-13",
      "subtitle": "Conclusion",
      "paragraphs": [
        {
          "iri": "Section-13-Paragraph-1",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-1-Sentence-1",
              "text": "In this paper, we proposed a method for learning rules with free variables from Knowledge Graphs (KGs)."
            },
            {
              "iri": "Section-13-Paragraph-1-Sentence-2",
              "text": "Such rules can be used to generate queries soliciting missing facts."
            },
            {
              "iri": "Section-13-Paragraph-1-Sentence-3",
              "text": "Notably, the queries could be fed to link predictors, enabling a fully automated framework for KG completion."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-2",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-2-Sentence-1",
              "text": "We introduced the following novel components:"
            },
            {
              "iri": "Section-13-Paragraph-2-Sentence-2",
              "text": "(1) We propose OP rules, a fragment of function-free Horn rules, which allows us to mine rules with free variables while keeping the complexity of the learning phase manageable."
            },
            {
              "iri": "Section-13-Paragraph-2-Sentence-3",
              "text": "(2) We introduced a novel method to estimate the quality of each candidate rule based on its embedding representation."
            },
            {
              "iri": "Section-13-Paragraph-2-Sentence-4",
              "text": "(3) We proposed an efficient method to evaluate OP rules by exactly computing the quality of each rule using matrix and vector operations."
            },
            {
              "iri": "Section-13-Paragraph-2-Sentence-5",
              "text": "(4) We showed how OP rules can be used to generate highly relevant queries for missing links, introducing the first work on active knowledge graph completion."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-3",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-3-Sentence-1",
              "text": "Our experiments show that OPRL can learn rules for KGs with varying sizes and degrees of incompleteness."
            },
            {
              "iri": "Section-13-Paragraph-3-Sentence-2",
              "text": "We demonstrate the usefulness of the mined rules by applying them to three different KGs to infer relevant queries."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-4",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-4-Sentence-1",
              "text": "Our proposed method outperforms the baselines and shows its strength, especially in the complete KG, Poker, with 0.98 precision."
            }
          ]
        },
        {
          "iri": "Section-13-Paragraph-5",
          "sentences": [
            {
              "iri": "Section-13-Paragraph-5-Sentence-1",
              "text": "There remain some intriguing challenges for future work."
            },
            {
              "iri": "Section-13-Paragraph-5-Sentence-2",
              "text": "We plan to extend OPRL to learn rules with more complex shapes, such as stars, and with numerical attributes."
            },
            {
              "iri": "Section-13-Paragraph-5-Sentence-3",
              "text": "We plan to pair OPRL with a link predictor to form a unified framework for fully automated KG completion."
            },
            {
              "iri": "Section-13-Paragraph-5-Sentence-4",
              "text": "We will also trial OPRL in a setting for human-curated maintenance on an enterprise KG."
            }
          ]
        }
      ]
    }
  ],
  "times": [
    0.00041866302490234375,
    1009.633807182312,
    1450.4946465492249,
    1432.1472861766815,
    3.5941460132598877,
    0.00480341911315918,
    0.009716510772705078,
    2046.4053258895874,
    7025.750606536865,
    62.19096612930298,
    273.00031328201294,
    0.92197585105896,
    0.03131461143493652,
    1979.7009344100952,
    169.47376418113708,
    1.069873332977295,
    42.89164853096008,
    45.150797843933105,
    1317.9462690353394,
    592.41259598732,
    803.3893232345581,
    102.2750792503357,
    845.9786884784698,
    67.70104336738586,
    0.055878639221191406,
    1.0035724639892578
  ],
  "nodes": {
    "Entity-novel_method_for_learning_open_path_rule_from_a_kg": {
      "node_id": "novel_method_for_learning_open_path_rule_from_a_kg",
      "disambiguation_index": 0,
      "label": "novel method for learning open path rules from a KG",
      "aliases": [
        "We propose",
        "the work",
        "novel method for learning open path rules from a KG"
      ],
      "types": [
        "research methodology",
        "research",
        "proposal",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A novel algorithm, OPRL, for learning Open Path (OP) rules from a Knowledge Graph (KG), which enables inference of missing facts and generation of relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-2",
          "local_name": "novel method for learning open path rules from a KG",
          "local_types": [
            "algorithm",
            "research methodology"
          ],
          "iri": "Entity-novel_method_for_learning_open_path_rule_from_a_kg-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-4",
          "local_name": "We propose",
          "local_types": [
            "research",
            "proposal"
          ],
          "iri": "Entity-novel_method_for_learning_open_path_rule_from_a_kg-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-6",
          "local_name": "the work",
          "local_types": [
            "research"
          ],
          "iri": "Entity-novel_method_for_learning_open_path_rule_from_a_kg-Mention-3"
        }
      ],
      "relevance": 0.8515625
    },
    "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness": {
      "node_id": "oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "disambiguation_index": 0,
      "label": "OPRL can learn rules for KGs with varying sizes and degrees of incompleteness",
      "aliases": [
        "OPRL can learn rules for KGs with varying sizes and degrees of incompleteness"
      ],
      "types": [
        "knowledge graph",
        "methodology",
        "rule learning"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm, Open Path Rule Learner (OPRL), capable of learning constrained existential rules (Open Path rules) for knowledge graphs with varying sizes and degrees of incompleteness.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "OPRL can learn rules for KGs with varying sizes and degrees of incompleteness",
          "local_types": [
            "knowledge graph",
            "methodology",
            "rule learning"
          ],
          "iri": "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness-Mention-1"
        }
      ],
      "relevance": 0.8095703125
    },
    "Entity-any_previous_approach": {
      "node_id": "any_previous_approach",
      "disambiguation_index": 0,
      "label": "any previous approach",
      "aliases": [
        "any previous approach"
      ],
      "types": [
        "approach",
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Previous research methods focused on learning closed rules for completing knowledge graphs, whereas this paper introduces Open Path (OP) rules and proposes OPRL algorithm for generating relevant queries for link predictors in the KG completion process.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "any previous approach",
          "local_types": [
            "approach",
            "research"
          ],
          "iri": "Entity-any_previous_approach-Mention-1"
        }
      ],
      "relevance": 0.80712890625
    },
    "Entity-an_example": {
      "node_id": "an_example",
      "disambiguation_index": 0,
      "label": "an example",
      "aliases": [
        "an example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The novel algorithm, OPRL, used to learn Open Path (OP) rules from a Knowledge Graph (KG), which generates queries even when there is no closed rule or the correct answer is not present in the KG.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-1",
          "local_name": "an example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-an_example-Mention-1"
        }
      ],
      "relevance": 0.8037109375
    },
    "Entity-poker_kg": {
      "node_id": "poker_kg",
      "disambiguation_index": 0,
      "label": "Poker KG",
      "aliases": [
        "Poker KG"
      ],
      "types": [
        "dataset",
        "concept",
        "KG",
        "knowledge graph",
        "data set",
        "knowledge base"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A synthetic knowledge graph used in experiments for evaluating the performance of OPRL, an algorithm for learning open-path rules for completing incomplete knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "Poker KG",
          "local_types": [
            "dataset",
            "KG",
            "concept",
            "knowledge graph"
          ],
          "iri": "Entity-poker_kg-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-4-Sentence-1",
          "local_name": "Poker KG",
          "local_types": [
            "knowledge graph",
            "knowledge base",
            "dataset",
            "data set"
          ],
          "iri": "Entity-poker_kg-Mention-2"
        }
      ],
      "relevance": 0.79638671875
    },
    "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion": {
      "node_id": "pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "disambiguation_index": 0,
      "label": "pair OPRL with a link predictor to form a unified framework for fully automated KG completion",
      "aliases": [
        "pair OPRL with a link predictor to form a unified framework for fully automated KG completion"
      ],
      "types": [
        "framework",
        "KG completion"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A method that learns rules with free variables from Knowledge Graphs (KGs) and uses them to generate queries soliciting missing facts, enabling a unified framework for fully automated KG completion.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-3",
          "local_name": "pair OPRL with a link predictor to form a unified framework for fully automated KG completion",
          "local_types": [
            "framework",
            "KG completion"
          ],
          "iri": "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion-Mention-1"
        }
      ],
      "relevance": 0.79052734375
    },
    "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg": {
      "node_id": "we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "disambiguation_index": 0,
      "label": "We evaluate OPRL using adaptations of Freebase, YAGO2, Wikidata, and a synthetic Poker KG",
      "aliases": [
        "We evaluate OPRL using adaptations of Freebase, YAGO2, Wikidata, and a synthetic Poker KG"
      ],
      "types": [
        "Evaluation",
        "Method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning Open Path rules in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-1",
          "local_name": "We evaluate OPRL using adaptations of Freebase, YAGO2, Wikidata, and a synthetic Poker KG",
          "local_types": [
            "Evaluation",
            "Method"
          ],
          "iri": "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg-Mention-1"
        }
      ],
      "relevance": 0.7900390625
    },
    "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_": {
      "node_id": "to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "disambiguation_index": 0,
      "label": "to the problem of active knowledge graph completion (AKGC)",
      "aliases": [
        "to the problem of active knowledge graph completion (AKGC)"
      ],
      "types": [
        "problem",
        "knowledge graph",
        "AKGC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept or problem referred to by 'to the problem of active knowledge graph completion (AKGC)' refers to the novel approach and algorithm OPRL for learning open path rules from a Knowledge Graph, which enables asking relevant questions to complete the KG instead of suggesting missing facts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "to the problem of active knowledge graph completion (AKGC)",
          "local_types": [
            "problem",
            "knowledge graph",
            "AKGC"
          ],
          "iri": "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_-Mention-1"
        }
      ],
      "relevance": 0.7880859375
    },
    "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion": {
      "node_id": "the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "The OP rules generate queries with precision as high as 98% and recall of 62% on a complete KG, demonstrating the first solution for active knowledge graph completion",
      "aliases": [
        "The OP rules generate queries with precision as high as 98% and recall of 62% on a complete KG, demonstrating the first solution for active knowledge graph completion"
      ],
      "types": [
        "Research",
        "Method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning Open Path (OP) rules, which generate queries with precision as high as 98% and recall of 62% on complete knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "The OP rules generate queries with precision as high as 98% and recall of 62% on a complete KG, demonstrating the first solution for active knowledge graph completion",
          "local_types": [
            "Research",
            "Method"
          ],
          "iri": "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.78564453125
    },
    "Entity-op_rule_from_a_range_of_kg": {
      "node_id": "op_rule_from_a_range_of_kg",
      "disambiguation_index": 0,
      "label": "OP rules from a range of KGs",
      "aliases": [
        "OP rules from a range of KGs"
      ],
      "types": [
        "rule",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning Open Path (OP) rules that are constrained existential rules, used to generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-7-Sentence-1",
          "local_name": "OP rules from a range of KGs",
          "local_types": [
            "rule",
            "knowledge graph"
          ],
          "iri": "Entity-op_rule_from_a_range_of_kg-Mention-1"
        }
      ],
      "relevance": 0.78466796875
    },
    "Entity-answer_fact": {
      "node_id": "answer_fact",
      "disambiguation_index": 0,
      "label": "answer facts",
      "aliases": [
        "answer facts"
      ],
      "types": [
        "information",
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The novel algorithm OPRL that learns Open Path rules to generate relevant queries for knowledge graph completion, even when there is no closed rule or when the correct answer is a missing entity.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "answer facts",
          "local_types": [
            "information",
            "data"
          ],
          "iri": "Entity-answer_fact-Mention-1"
        }
      ],
      "relevance": 0.783203125
    },
    "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule": {
      "node_id": "we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "disambiguation_index": 0,
      "label": "we present a novel algorithm, OPRL, for learning OP rules",
      "aliases": [
        "we present a novel algorithm, OPRL, for learning OP rules",
        "OPRL to learn rules with more complex shapes, such as stars, and with numerical attributes"
      ],
      "types": [
        "Entity",
        "Algorithm",
        "rule learning",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning Open Path (OP) rules in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "we present a novel algorithm, OPRL, for learning OP rules",
          "local_types": [
            "Entity",
            "Algorithm",
            "algorithm"
          ],
          "iri": "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-2",
          "local_name": "OPRL to learn rules with more complex shapes, such as stars, and with numerical attributes",
          "local_types": [
            "algorithm",
            "rule learning"
          ],
          "iri": "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule-Mention-2"
        }
      ],
      "relevance": 0.77978515625
    },
    "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality": {
      "node_id": "for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "disambiguation_index": 0,
      "label": "For OPRL to scale well, we propose a novel embedding-based fitness function to efficiently estimate rule quality",
      "aliases": [
        "For OPRL to scale well, we propose a novel embedding-based fitness function to efficiently estimate rule quality"
      ],
      "types": [
        "Research",
        "Method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A proposed algorithm for learning Open Path rules in knowledge graph completion",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "For OPRL to scale well, we propose a novel embedding-based fitness function to efficiently estimate rule quality",
          "local_types": [
            "Research",
            "Method"
          ],
          "iri": "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality-Mention-1"
        }
      ],
      "relevance": 0.779296875
    },
    "Entity-our_algorithm_is_effective_over_very_large_kg": {
      "node_id": "our_algorithm_is_effective_over_very_large_kg",
      "disambiguation_index": 0,
      "label": "our algorithm is effective over very large KGs",
      "aliases": [
        "our algorithm is effective over very large KGs"
      ],
      "types": [
        "evaluation",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The novel OPRL algorithm for learning open path rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-5",
          "local_name": "our algorithm is effective over very large KGs",
          "local_types": [
            "evaluation",
            "knowledge graph"
          ],
          "iri": "Entity-our_algorithm_is_effective_over_very_large_kg-Mention-1"
        }
      ],
      "relevance": 0.77880859375
    },
    "Entity-this_paper_(2)": {
      "node_id": "this_paper_(2)",
      "disambiguation_index": 2,
      "label": "this paper",
      "aliases": [
        "this paper"
      ],
      "types": [
        "research",
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "This paper proposes a method called OPRL (Open Path Rule Learning) that learns constrained existential rules, also known as Open Path rules, to complete Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "this paper",
          "local_types": [
            "research",
            "paper"
          ],
          "iri": "Entity-this_paper_(2)-Mention-1"
        }
      ],
      "relevance": 0.7763671875
    },
    "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion": {
      "node_id": "op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "OP rules can be used to generate highly relevant queries for missing links, introducing the first work on active knowledge graph completion",
      "aliases": [
        "OP rules can be used to generate highly relevant queries for missing links, introducing the first work on active knowledge graph completion"
      ],
      "types": [
        "application"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "OPRL algorithm that learns Open Path (OP) rules constrained existential rules for generating highly relevant queries to complete missing links in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-5",
          "local_name": "OP rules can be used to generate highly relevant queries for missing links, introducing the first work on active knowledge graph completion",
          "local_types": [
            "application"
          ],
          "iri": "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.7734375
    },
    "Entity-rule_mining_for_kg_completion": {
      "node_id": "rule_mining_for_kg_completion",
      "disambiguation_index": 0,
      "label": "rule mining for KG completion",
      "aliases": [
        "rule mining for KG completion"
      ],
      "types": [
        "research",
        "task",
        "mining"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of discovering and extracting patterns or relationships from a Knowledge Graph (KG) to complete missing information, using Open Path (OP) rules that are constrained existential rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "rule mining for KG completion",
          "local_types": [
            "research",
            "task",
            "mining"
          ],
          "iri": "Entity-rule_mining_for_kg_completion-Mention-1"
        }
      ],
      "relevance": 0.7685546875
    },
    "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg": {
      "node_id": "we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "disambiguation_index": 0,
      "label": "we can now mine OP rules with measurable qualities from KGs",
      "aliases": [
        "we can now mine OP rules with measurable qualities from KGs"
      ],
      "types": [
        "method",
        "research",
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The ability to learn Open Path (OP) rules with quantifiable qualities from Knowledge Graphs (KGs), allowing for the generation of relevant queries and active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "we can now mine OP rules with measurable qualities from KGs",
          "local_types": [
            "method",
            "research",
            "methodology"
          ],
          "iri": "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg-Mention-1"
        }
      ],
      "relevance": 0.76708984375
    },
    "Entity-oprl_find_high_quality_rule": {
      "node_id": "oprl_find_high_quality_rule",
      "disambiguation_index": 0,
      "label": "OPRL finds high quality rules",
      "aliases": [
        "OPRL finds high quality rules"
      ],
      "types": [
        "system",
        "rule discovery system"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "OPRL is a novel algorithm for learning Open Path (constrained existential) rules that can generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "OPRL finds high quality rules",
          "local_types": [
            "system",
            "rule discovery system"
          ],
          "iri": "Entity-oprl_find_high_quality_rule-Mention-1"
        }
      ],
      "relevance": 0.76708984375
    },
    "Entity-op_rule_can_generate_relevant_query_for_kg_completion": {
      "node_id": "op_rule_can_generate_relevant_query_for_kg_completion",
      "disambiguation_index": 0,
      "label": "OP rules can generate relevant queries for KG completion",
      "aliases": [
        "OP rules can generate relevant queries for KG completion"
      ],
      "types": [
        "Knowledge Graph Completion",
        "Entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of constrained existential rule used in knowledge graph completion, characterized by its ability to generate relevant queries for completing incomplete Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "OP rules can generate relevant queries for KG completion",
          "local_types": [
            "Knowledge Graph Completion",
            "Entity"
          ],
          "iri": "Entity-op_rule_can_generate_relevant_query_for_kg_completion-Mention-1"
        }
      ],
      "relevance": 0.76513671875
    },
    "Entity-by_learning_op_rule_to_derive_query": {
      "node_id": "by_learning_op_rule_to_derive_query",
      "disambiguation_index": 0,
      "label": "by learning OP rules to derive queries",
      "aliases": [
        "by learning OP rules to derive queries"
      ],
      "types": [
        "method",
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of deriving queries from Open Path (OP) rules learned from a Knowledge Graph (KG), which enables active KG completion by predicting missing facts and introducing new entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-1",
          "local_name": "by learning OP rules to derive queries",
          "local_types": [
            "method",
            "query"
          ],
          "iri": "Entity-by_learning_op_rule_to_derive_query-Mention-1"
        }
      ],
      "relevance": 0.7646484375
    },
    "Entity-the_contribution": {
      "node_id": "the_contribution",
      "disambiguation_index": 0,
      "label": "The contributions",
      "aliases": [
        "The contributions"
      ],
      "types": [
        "contribution"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The novel method for learning open path rules from a Knowledge Graph (KG) and the algorithm OPRL that includes a novel embedding-based heuristic function and evaluation method.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-1",
          "local_name": "The contributions",
          "local_types": [
            "contribution"
          ],
          "iri": "Entity-the_contribution-Mention-1"
        }
      ],
      "relevance": 0.76220703125
    },
    "Entity-a_product_calculus_for_scoring": {
      "node_id": "a_product_calculus_for_scoring",
      "disambiguation_index": 0,
      "label": "a product calculus for scoring",
      "aliases": [
        "a product calculus for scoring"
      ],
      "types": [
        "product calculus",
        "scoring method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm, OPRL, that learns constrained existential rules (Open Path rules) to complete knowledge graphs by generating relevant queries even when there is no closed rule or missing entity.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "a product calculus for scoring",
          "local_types": [
            "product calculus",
            "scoring method"
          ],
          "iri": "Entity-a_product_calculus_for_scoring-Mention-1"
        }
      ],
      "relevance": 0.76220703125
    },
    "Entity-our_experiment_(1)": {
      "node_id": "our_experiment_(1)",
      "disambiguation_index": 1,
      "label": "Our experiments",
      "aliases": [
        "Our experiments"
      ],
      "types": [
        "study",
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The description refers to a series of experimental trials conducted using our proposed method, Open Path Rule Learning (OPRL), which learns rules for completing Knowledge Graphs with varying sizes and degrees of incompleteness.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "Our experiments",
          "local_types": [
            "study",
            "research"
          ],
          "iri": "Entity-our_experiment_(1)-Mention-1"
        }
      ],
      "relevance": 0.76220703125
    },
    "Entity-query_induced_from_oprl-mined_rule": {
      "node_id": "query_induced_from_oprl-mined_rule",
      "disambiguation_index": 0,
      "label": "queries induced from OPRL-mined rules",
      "aliases": [
        "queries induced from OPRL-mined rules"
      ],
      "types": [
        "query",
        "rule-based"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Queries generated by Open Path (OP) rule learning algorithm, OPRL, for knowledge graph completion",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "queries induced from OPRL-mined rules",
          "local_types": [
            "query",
            "rule-based"
          ],
          "iri": "Entity-query_induced_from_oprl-mined_rule-Mention-1"
        }
      ],
      "relevance": 0.76025390625
    },
    "Entity-three_kg": {
      "node_id": "three_kg",
      "disambiguation_index": 0,
      "label": "three KGs",
      "aliases": [
        "three KGs"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Three datasets of knowledge graphs (KGs) used for evaluating the relevance of queries generated by OPRL, a novel algorithm for learning constrained existential rules.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "three KGs",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-three_kg-Mention-1"
        }
      ],
      "relevance": 0.7578125
    },
    "Entity-oprl": {
      "node_id": "oprl",
      "disambiguation_index": 0,
      "label": "OPRL",
      "aliases": [
        "OPRL",
        "For OPRL"
      ],
      "types": [
        "rule-based system",
        "rule language",
        "approach",
        "measure",
        "framework",
        "representation language",
        "research program",
        "acronym",
        "system",
        "research area",
        "rule-based language",
        "resource",
        "software",
        "technology",
        "tool",
        "organization",
        "model",
        "rule learning system",
        "ontology",
        "resource library",
        "machine learning model",
        "research",
        "method",
        "query",
        "methodology",
        "rule miner",
        "product",
        "rule",
        "computational framework",
        "notation",
        "ontology-based reasoning language",
        "knowledge representation language",
        "query language",
        "artificial intelligence technique",
        "rule learner",
        "dataset",
        "optimization problem",
        "project",
        "rule-based language processing",
        "algorithm",
        "algorithm name",
        "technique"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning Open Path (OP) rules in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "OPRL",
          "local_types": [
            "method",
            "tool",
            "technique",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "software",
            "tool",
            "rule language",
            "ontology",
            "algorithm",
            "system",
            "ontology-based reasoning language"
          ],
          "iri": "Entity-oprl-Mention-2"
        },
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "tool",
            "organization",
            "project",
            "framework",
            "research program",
            "algorithm",
            "system"
          ],
          "iri": "Entity-oprl-Mention-3"
        },
        {
          "reference": "Section-1-Paragraph-4-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "tool",
            "dataset",
            "ontology",
            "project",
            "resource",
            "algorithm",
            "method",
            "system",
            "knowledge representation language"
          ],
          "iri": "Entity-oprl-Mention-4"
        },
        {
          "reference": "Section-1-Paragraph-4-Sentence-2",
          "local_name": "OPRL",
          "local_types": [
            "method",
            "software",
            "tool",
            "system"
          ],
          "iri": "Entity-oprl-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-4",
          "local_name": "OPRL",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-7"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-5",
          "local_name": "OPRL",
          "local_types": [
            "methodology",
            "tool",
            "approach",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-8"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "rule miner",
            "software",
            "algorithm",
            "algorithm name",
            "system"
          ],
          "iri": "Entity-oprl-Mention-9"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "methodology",
            "ontology",
            "framework",
            "representation language",
            "algorithm",
            "notation",
            "system",
            "acronym"
          ],
          "iri": "Entity-oprl-Mention-10"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "methodology",
            "software",
            "tool",
            "ontology",
            "representation language",
            "algorithm",
            "method"
          ],
          "iri": "Entity-oprl-Mention-11"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "technology",
            "tool",
            "ontology",
            "product",
            "algorithm",
            "method",
            "system"
          ],
          "iri": "Entity-oprl-Mention-12"
        },
        {
          "reference": "Section-9-Paragraph-7-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "software",
            "tool",
            "algorithm",
            "method",
            "system"
          ],
          "iri": "Entity-oprl-Mention-13"
        },
        {
          "reference": "Section-9-Paragraph-7-Sentence-2",
          "local_name": "OPRL",
          "local_types": [
            "method",
            "software",
            "tool"
          ],
          "iri": "Entity-oprl-Mention-14"
        },
        {
          "reference": "Section-9-Paragraph-8-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "ontology",
            "framework",
            "algorithm",
            "method",
            "system",
            "rule-based language"
          ],
          "iri": "Entity-oprl-Mention-15"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "tool",
            "rule learner",
            "ontology",
            "rule-based language processing",
            "algorithm",
            "system"
          ],
          "iri": "Entity-oprl-Mention-16"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "OPRL",
          "local_types": [
            "tool",
            "rule learner",
            "model",
            "rule learning system",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-17"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "OPRL",
          "local_types": [
            "rule-based system",
            "rule",
            "algorithm",
            "method",
            "system"
          ],
          "iri": "Entity-oprl-Mention-18"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "model",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-19"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "tool",
            "algorithm",
            "method",
            "system",
            "query"
          ],
          "iri": "Entity-oprl-Mention-20"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "query language",
            "ontology",
            "framework",
            "algorithm",
            "method",
            "system",
            "query"
          ],
          "iri": "Entity-oprl-Mention-21"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "OPRL",
          "local_types": [
            "method",
            "machine learning model",
            "system",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-22"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "model",
            "method",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-23"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "model",
            "ontology",
            "project",
            "algorithm",
            "acronym",
            "method",
            "system",
            "resource"
          ],
          "iri": "Entity-oprl-Mention-24"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "OPRL",
          "local_types": [
            "model",
            "machine learning model",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-25"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "query language",
            "ontology",
            "system"
          ],
          "iri": "Entity-oprl-Mention-26"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "artificial intelligence technique",
            "rule learning system",
            "computational framework",
            "algorithm",
            "method"
          ],
          "iri": "Entity-oprl-Mention-27"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-2",
          "local_name": "OPRL",
          "local_types": [
            "artificial intelligence technique",
            "tool",
            "rule language",
            "ontology",
            "computational framework",
            "algorithm",
            "knowledge representation language"
          ],
          "iri": "Entity-oprl-Mention-28"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "ontology",
            "resource"
          ],
          "iri": "Entity-oprl-Mention-29"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-4",
          "local_name": "OPRL",
          "local_types": [
            "ontology",
            "resource"
          ],
          "iri": "Entity-oprl-Mention-30"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "OPRL",
          "local_types": [
            "optimization problem",
            "research area"
          ],
          "iri": "Entity-oprl-Mention-31"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "OPRL",
          "local_types": [
            "dataset",
            "resource library",
            "ontology",
            "algorithm",
            "method",
            "system",
            "knowledge representation language"
          ],
          "iri": "Entity-oprl-Mention-32"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-3",
          "local_name": "OPRL",
          "local_types": [
            "method",
            "measure",
            "algorithm"
          ],
          "iri": "Entity-oprl-Mention-33"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "For OPRL",
          "local_types": [
            "research"
          ],
          "iri": "Entity-oprl-Mention-34"
        }
      ],
      "relevance": 0.7548828125
    },
    "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62_": {
      "node_id": "the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62_",
      "disambiguation_index": 0,
      "label": "The OP rules generate queries with precision as high as 98% and recall of 62%",
      "aliases": [
        "The OP rules generate queries with precision as high as 98% and recall of 62%"
      ],
      "types": [
        "evaluation metrics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel algorithm introduced in this paper for learning Open Path (OP) rules, which are constrained existential rules used for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "The OP rules generate queries with precision as high as 98% and recall of 62%",
          "local_types": [
            "evaluation metrics"
          ],
          "iri": "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62_-Mention-1"
        }
      ],
      "relevance": 0.75439453125
    },
    "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.": {
      "node_id": "hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.",
      "disambiguation_index": 0,
      "label": "hundreds of accurate rules from massive KGs with up to 8 M facts.",
      "aliases": [
        "hundreds of accurate rules from massive KGs with up to 8 M facts.",
        "hundreds of accurate rules from massive KGs with up to 8 M facts"
      ],
      "types": [
        "Entity",
        "Result",
        "rules",
        "facts"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel algorithm, Open Path Rule Learner (OPRL), that mines hundreds of accurate rules from massive knowledge graphs with up to 8 million facts.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-2",
          "local_name": "hundreds of accurate rules from massive KGs with up to 8 M facts.",
          "local_types": [
            "Result",
            "Entity"
          ],
          "iri": "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-4-Sentence-2",
          "local_name": "hundreds of accurate rules from massive KGs with up to 8 M facts",
          "local_types": [
            "rules",
            "facts"
          ],
          "iri": "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.-Mention-2"
        }
      ],
      "relevance": 0.75390625
    },
    "Entity-a_novel_method": {
      "node_id": "a_novel_method",
      "disambiguation_index": 0,
      "label": "a novel method",
      "aliases": [
        "a novel method",
        "OPRL does"
      ],
      "types": [
        "method",
        "research",
        "technology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm, OPRL, for learning constrained existential rules (Open Path rules) that generate relevant queries to complete a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-2",
          "local_name": "a novel method",
          "local_types": [
            "method",
            "research"
          ],
          "iri": "Entity-a_novel_method-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-3",
          "local_name": "OPRL does",
          "local_types": [
            "technology",
            "method"
          ],
          "iri": "Entity-a_novel_method-Mention-2"
        }
      ],
      "relevance": 0.7529296875
    },
    "Entity-the_query_were_induced_by_oprl_rule_learned_over_the_training_data_with_quality_threshold_opsc__0.8_and_ophc__0.01": {
      "node_id": "the_query_were_induced_by_oprl_rule_learned_over_the_training_data_with_quality_threshold_opsc__0.8_and_ophc__0.01",
      "disambiguation_index": 0,
      "label": "the queries were induced by OPRL rules learned over the training data with quality thresholds OPSC > 0.8 and OPHC > 0.01",
      "aliases": [
        "the queries were induced by OPRL rules learned over the training data with quality thresholds OPSC > 0.8 and OPHC > 0.01"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The methodology used for generating relevant queries in knowledge graph completion, which involves learning Open Path (OP) rules from training data with specific quality threshold constraints.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "the queries were induced by OPRL rules learned over the training data with quality thresholds OPSC > 0.8 and OPHC > 0.01",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-the_query_were_induced_by_oprl_rule_learned_over_the_training_data_with_quality_threshold_opsc__0.8_and_ophc__0.01-Mention-1"
        }
      ],
      "relevance": 0.751953125
    },
    "Entity-high-quality_op_rule": {
      "node_id": "high-quality_op_rule",
      "disambiguation_index": 0,
      "label": "high-quality OP rules",
      "aliases": [
        "high-quality OP rules",
        "OPRL's rules"
      ],
      "types": [
        "knowledge base",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of high-quality Open Path (OP) rules mined from a knowledge graph using the OPRL algorithm, which learns constrained existential rules for completing and querying large-scale knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "high-quality OP rules",
          "local_types": [
            "rule set",
            "knowledge base"
          ],
          "iri": "Entity-high-quality_op_rule-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-8-Sentence-1",
          "local_name": "OPRL's rules",
          "local_types": [
            "rule set"
          ],
          "iri": "Entity-high-quality_op_rule-Mention-2"
        }
      ],
      "relevance": 0.75048828125
    },
    "Entity-the_op_rule_learning_method_oprl": {
      "node_id": "the_op_rule_learning_method_oprl",
      "disambiguation_index": 0,
      "label": "the OP rule learning method OPRL",
      "aliases": [
        "the OP rule learning method OPRL"
      ],
      "types": [
        "method",
        "rule learning"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The Open Path (OP) Rule Learning Method, referred to as OPRL, is an algorithm for learning constrained existential rules from a given Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-3",
          "local_name": "the OP rule learning method OPRL",
          "local_types": [
            "method",
            "rule learning"
          ],
          "iri": "Entity-the_op_rule_learning_method_oprl-Mention-1"
        }
      ],
      "relevance": 0.74853515625
    },
    "Entity-a_range_of_kg": {
      "node_id": "a_range_of_kg",
      "disambiguation_index": 0,
      "label": "a range of KGs",
      "aliases": [
        "a range of KGs"
      ],
      "types": [
        "data source"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of Knowledge Graphs (KGs) used for evaluating the performance of Open Path Rule Learning (OPRL) algorithm.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-7-Sentence-1",
          "local_name": "a range of KGs",
          "local_types": [
            "data source"
          ],
          "iri": "Entity-a_range_of_kg-Mention-1"
        }
      ],
      "relevance": 0.74462890625
    },
    "Entity-popular_benchmark_kg": {
      "node_id": "popular_benchmark_kg",
      "disambiguation_index": 0,
      "label": "popular benchmark KGs",
      "aliases": [
        "popular benchmark KGs"
      ],
      "types": [
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of well-known knowledge graphs used as benchmarks for evaluating the performance of OPRL, a novel algorithm for learning open-path rules.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "popular benchmark KGs",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-popular_benchmark_kg-Mention-1"
        }
      ],
      "relevance": 0.7412109375
    },
    "Entity-oprl_outperforms_rlvlr__on_query_generation_by_30_": {
      "node_id": "oprl_outperforms_rlvlr__on_query_generation_by_30_",
      "disambiguation_index": 0,
      "label": "OPRL outperforms RLvLR* on query generation by 30%",
      "aliases": [
        "OPRL outperforms RLvLR* on query generation by 30%"
      ],
      "types": [
        "comparison"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The OPRL algorithm, which learns open-path rules for knowledge graph completion, generates queries with higher precision and recall compared to the RLvLR* method, achieving a performance difference of 30%.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "OPRL outperforms RLvLR* on query generation by 30%",
          "local_types": [
            "comparison"
          ],
          "iri": "Entity-oprl_outperforms_rlvlr__on_query_generation_by_30_-Mention-1"
        }
      ],
      "relevance": 0.740234375
    },
    "Entity-freebase__yago2__wikidata__and_a_synthetic_poker_kg": {
      "node_id": "freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "disambiguation_index": 0,
      "label": "Freebase, YAGO2, Wikidata, and a synthetic Poker KG",
      "aliases": [
        "Freebase, YAGO2, Wikidata, and a synthetic Poker KG"
      ],
      "types": [
        "dataset",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of knowledge graph datasets used for evaluating an algorithm (OPRL) for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-1",
          "local_name": "Freebase, YAGO2, Wikidata, and a synthetic Poker KG",
          "local_types": [
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-freebase__yago2__wikidata__and_a_synthetic_poker_kg-Mention-1"
        }
      ],
      "relevance": 0.73779296875
    },
    "Entity-fewer_rule_and_ha_much_weaker_performance_because_it_ha_significantly_fewer_repeatable_pattern": {
      "node_id": "fewer_rule_and_ha_much_weaker_performance_because_it_ha_significantly_fewer_repeatable_pattern",
      "disambiguation_index": 0,
      "label": "fewer rules and has much weaker performance because it has significantly fewer repeatable patterns",
      "aliases": [
        "fewer rules and has much weaker performance because it has significantly fewer repeatable patterns"
      ],
      "types": [
        "performance"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The learning of Open Path (OP) rules by OPRL, which generates queries even when there are no closed rules to answer them or when the correct answer is a missing entity not present in the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "fewer rules and has much weaker performance because it has significantly fewer repeatable patterns",
          "local_types": [
            "performance"
          ],
          "iri": "Entity-fewer_rule_and_ha_much_weaker_performance_because_it_ha_significantly_fewer_repeatable_pattern-Mention-1"
        }
      ],
      "relevance": 0.73681640625
    },
    "Entity-the_full_benchmark_kg": {
      "node_id": "the_full_benchmark_kg",
      "disambiguation_index": 0,
      "label": "the full benchmark KGs",
      "aliases": [
        "the full benchmark KGs"
      ],
      "types": [
        "dataset",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of comprehensive knowledge graphs used as benchmarks for evaluating the quality and accuracy of rules mined by OPRL, including adaptations of Freebase, YAGO2, Wikidata, and a synthetic Poker KG.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "the full benchmark KGs",
          "local_types": [
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-the_full_benchmark_kg-Mention-1"
        }
      ],
      "relevance": 0.7353515625
    },
    "Entity-to_mine_op_rule_from_kg": {
      "node_id": "to_mine_op_rule_from_kg",
      "disambiguation_index": 0,
      "label": "to mine OP rules from KGs",
      "aliases": [
        "to mine OP rules from KGs"
      ],
      "types": [
        "methodology",
        "mining technique"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of extracting Open Path (OP) rules from Knowledge Graphs (KGs), which involves learning constrained existential rules that can generate relevant queries for KG completion.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-1",
          "local_name": "to mine OP rules from KGs",
          "local_types": [
            "methodology",
            "mining technique"
          ],
          "iri": "Entity-to_mine_op_rule_from_kg-Mention-1"
        }
      ],
      "relevance": 0.7314453125
    },
    "Entity-oprl_generates_query_even_when_there_is_no_closed_rule_to_answer_the_query__or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg_.": {
      "node_id": "oprl_generates_query_even_when_there_is_no_closed_rule_to_answer_the_query__or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg_.",
      "disambiguation_index": 0,
      "label": "OPRL generates queries even when there is no closed rule to answer the query, or when the correct answer is a missing entity that is not present in the KG.",
      "aliases": [
        "OPRL generates queries even when there is no closed rule to answer the query, or when the correct answer is a missing entity that is not present in the KG."
      ],
      "types": [
        "Algorithm",
        "Method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "OPRL: an algorithm that generates queries even when there is no closed rule to answer the query, or when the correct answer is a missing entity not present in the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "OPRL generates queries even when there is no closed rule to answer the query, or when the correct answer is a missing entity that is not present in the KG.",
          "local_types": [
            "Algorithm",
            "Method"
          ],
          "iri": "Entity-oprl_generates_query_even_when_there_is_no_closed_rule_to_answer_the_query__or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg_.-Mention-1"
        }
      ],
      "relevance": 0.73095703125
    },
    "Entity-complete_kg__poker": {
      "node_id": "complete_kg__poker",
      "disambiguation_index": 0,
      "label": "complete KG, Poker",
      "aliases": [
        "complete KG, Poker"
      ],
      "types": [
        "dataset",
        "evaluation metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The 'complete KG, Poker' refers to a synthetic Knowledge Graph used for evaluating the proposed method OPRL's performance in terms of precision (0.98) and recall.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "complete KG, Poker",
          "local_types": [
            "dataset",
            "evaluation metric"
          ],
          "iri": "Entity-complete_kg__poker-Mention-1"
        }
      ],
      "relevance": 0.72998046875
    },
    "Entity-link_prediction_and_active_knowledge_graph_completion": {
      "node_id": "link_prediction_and_active_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "link prediction and active knowledge graph completion",
      "aliases": [
        "link prediction and active knowledge graph completion"
      ],
      "types": [
        "topic",
        "field"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of learning open path rules from a Knowledge Graph (KG) for predicting missing facts and generating relevant queries, which complements traditional link prediction by providing questions to complete the KG.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-6",
          "local_name": "link prediction and active knowledge graph completion",
          "local_types": [
            "topic",
            "field"
          ],
          "iri": "Entity-link_prediction_and_active_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.72998046875
    },
    "Entity-open_path__op__rule": {
      "node_id": "open_path__op__rule",
      "disambiguation_index": 0,
      "label": "Open Path (OP) rules",
      "aliases": [
        "Open Path (OP) rules",
        "open path (OP) rules of the following form",
        "open path (OP) rules"
      ],
      "types": [
        "methodology",
        "knowledge representation",
        "concept",
        "pattern",
        "rule",
        "rule system",
        "algorithm",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Constrained existential rules used in knowledge graph completion to generate relevant queries and complete incomplete Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "Open Path (OP) rules",
          "local_types": [
            "methodology",
            "rule system",
            "knowledge representation",
            "algorithm"
          ],
          "iri": "Entity-open_path__op__rule-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "open path (OP) rules",
          "local_types": [
            "rule set",
            "pattern"
          ],
          "iri": "Entity-open_path__op__rule-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "open path (OP) rules of the following form",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-open_path__op__rule-Mention-3"
        }
      ],
      "relevance": 0.72900390625
    },
    "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_": {
      "node_id": "a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "disambiguation_index": 0,
      "label": "a method for learning rules with free variables from Knowledge Graphs (KGs)",
      "aliases": [
        "a method for learning rules with free variables from Knowledge Graphs (KGs)"
      ],
      "types": [
        "method",
        "knowledge graph",
        "rule",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning constrained existential rules (Open Path rules) that can generate relevant queries for missing links in incomplete Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "a method for learning rules with free variables from Knowledge Graphs (KGs)",
          "local_types": [
            "method",
            "knowledge graph",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_-Mention-1"
        }
      ],
      "relevance": 0.72900390625
    },
    "Entity-query_from_op_rule": {
      "node_id": "query_from_op_rule",
      "disambiguation_index": 0,
      "label": "queries from OP rules",
      "aliases": [
        "the queries we derive from our OP rules",
        "queries from OP rules"
      ],
      "types": [
        "queries",
        "input data",
        "OP rules",
        "data set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The queries generated by learning open path (OP) rules, which are existential rules used for active knowledge graph completion and identifying missing entities in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-9",
          "local_name": "queries from OP rules",
          "local_types": [
            "data set",
            "input data"
          ],
          "iri": "Entity-query_from_op_rule-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-4",
          "local_name": "the queries we derive from our OP rules",
          "local_types": [
            "queries",
            "OP rules"
          ],
          "iri": "Entity-query_from_op_rule-Mention-2"
        }
      ],
      "relevance": 0.72705078125
    },
    "Entity-trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg": {
      "node_id": "trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "disambiguation_index": 0,
      "label": "trial OPRL in a setting for human-curated maintenance on an enterprise KG",
      "aliases": [
        "trial OPRL in a setting for human-curated maintenance on an enterprise KG"
      ],
      "types": [
        "experiment",
        "maintenance",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A trial of the Open Path Rule Learning (OPRL) algorithm in a setting for human-curated maintenance on an enterprise Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-4",
          "local_name": "trial OPRL in a setting for human-curated maintenance on an enterprise KG",
          "local_types": [
            "experiment",
            "maintenance",
            "knowledge graph"
          ],
          "iri": "Entity-trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg-Mention-1"
        }
      ],
      "relevance": 0.7255859375
    },
    "Entity-we_propose_an_algorithm": {
      "node_id": "we_propose_an_algorithm",
      "disambiguation_index": 0,
      "label": "We propose an algorithm",
      "aliases": [
        "We propose an algorithm"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The proposed algorithm (OPRL) for learning open path rules from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-4",
          "local_name": "We propose an algorithm",
          "local_types": [
            "research"
          ],
          "iri": "Entity-we_propose_an_algorithm-Mention-1"
        }
      ],
      "relevance": 0.72412109375
    },
    "Entity-link_predictor_to_complete_the_kg": {
      "node_id": "link_predictor_to_complete_the_kg",
      "disambiguation_index": 0,
      "label": "link predictors to complete the KG",
      "aliases": [
        "link predictors to complete the KG"
      ],
      "types": [
        "process",
        "KG completion"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of using learned open path rules to generate relevant queries that can be used as input to link prediction algorithms to automatically complete and expand knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-3",
          "local_name": "link predictors to complete the KG",
          "local_types": [
            "process",
            "KG completion"
          ],
          "iri": "Entity-link_predictor_to_complete_the_kg-Mention-1"
        }
      ],
      "relevance": 0.72314453125
    },
    "Entity-for_learning_op_rule": {
      "node_id": "for_learning_op_rule",
      "disambiguation_index": 0,
      "label": "for learning OP rules",
      "aliases": [
        "for learning OP rules",
        "Learning OP rules"
      ],
      "types": [
        "method",
        "purpose",
        "rule",
        "learning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm designed to learn Open Path (OP) rules, which are constrained existential rules used for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "for learning OP rules",
          "local_types": [
            "purpose",
            "learning"
          ],
          "iri": "Entity-for_learning_op_rule-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-3",
          "local_name": "Learning OP rules",
          "local_types": [
            "method",
            "rule"
          ],
          "iri": "Entity-for_learning_op_rule-Mention-2"
        }
      ],
      "relevance": 0.7216796875
    },
    "Entity-op_rule_from_kg": {
      "node_id": "op_rule_from_kg",
      "disambiguation_index": 0,
      "label": "OP rules from KGs",
      "aliases": [
        "OP rules from KGs"
      ],
      "types": [
        "rule",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of constrained existential rule learned from knowledge graphs (KGs) for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-1",
          "local_name": "OP rules from KGs",
          "local_types": [
            "rule",
            "knowledge graph"
          ],
          "iri": "Entity-op_rule_from_kg-Mention-1"
        }
      ],
      "relevance": 0.720703125
    },
    "Entity-learning_open_path_rule_from_a_kg": {
      "node_id": "learning_open_path_rule_from_a_kg",
      "disambiguation_index": 0,
      "label": "learning open path rules from a KG",
      "aliases": [
        "learning open path rules from a KG"
      ],
      "types": [
        "technique",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of learning open path rules from a Knowledge Graph, which are existential rules that generate relevant queries to complete the graph and introduce missing entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-2",
          "local_name": "learning open path rules from a KG",
          "local_types": [
            "technique",
            "knowledge graph"
          ],
          "iri": "Entity-learning_open_path_rule_from_a_kg-Mention-1"
        }
      ],
      "relevance": 0.72021484375
    },
    "Entity-the_following_novel_component": {
      "node_id": "the_following_novel_component",
      "disambiguation_index": 0,
      "label": "the following novel components",
      "aliases": [
        "the following novel components"
      ],
      "types": [
        "component",
        "novel component"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Novel algorithmic components for mining Open Path (OP) rules from Knowledge Graphs (KGs), including proposing OP rules, learning OP rules based on an embedding representation, and evaluating OP rules using matrix and vector operations.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-1",
          "local_name": "the following novel components",
          "local_types": [
            "component",
            "novel component"
          ],
          "iri": "Entity-the_following_novel_component-Mention-1"
        }
      ],
      "relevance": 0.71875
    },
    "Entity-a_kg": {
      "node_id": "a_kg",
      "disambiguation_index": 0,
      "label": "a KG",
      "aliases": [
        "a KG"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A Knowledge Graph (KG) is an enterprise or public graph database known to be incomplete, requiring automatic completion methods such as rule learning.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "a KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-a_kg-Mention-1"
        }
      ],
      "relevance": 0.71826171875
    },
    "Entity-and_we_keep_both_the_original_and_extended_rule": {
      "node_id": "and_we_keep_both_the_original_and_extended_rule",
      "disambiguation_index": 0,
      "label": "and we keep both the original and extended rules",
      "aliases": [
        "and we keep both the original and extended rules"
      ],
      "types": [
        "policy",
        "rule management"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of OP (Open Path) rules mined from a Knowledge Graph using the OPRL algorithm.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-14",
          "local_name": "and we keep both the original and extended rules",
          "local_types": [
            "policy",
            "rule management"
          ],
          "iri": "Entity-and_we_keep_both_the_original_and_extended_rule-Mention-1"
        }
      ],
      "relevance": 0.71728515625
    },
    "Entity-our_agkgc": {
      "node_id": "our_agkgc",
      "disambiguation_index": 0,
      "label": "our AGKGC",
      "aliases": [
        "our AGKGC"
      ],
      "types": [
        "algorithm",
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The Active Knowledge Graph Completion (AKGC) system that uses Open Path (OP) rules mined from a knowledge graph to generate relevant questions for missing links.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-1",
          "local_name": "our AGKGC",
          "local_types": [
            "algorithm",
            "system"
          ],
          "iri": "Entity-our_agkgc-Mention-1"
        }
      ],
      "relevance": 0.71630859375
    },
    "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.": {
      "node_id": "embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "disambiguation_index": 0,
      "label": "Embeddings() obtains the embeddings for predicates and arguments in the sample KG.",
      "aliases": [
        "Embeddings() obtains the embeddings for predicates and arguments in the sample KG."
      ],
      "types": [
        "method",
        "embeddings",
        "predicates",
        "arguments",
        "sample KG"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A method used by OPRL (Open Path Rule Learner) to compute embedding models, which construct a fitness function to rapidly estimate rule quality and improve scalability.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "Embeddings() obtains the embeddings for predicates and arguments in the sample KG.",
          "local_types": [
            "method",
            "embeddings",
            "predicates",
            "arguments",
            "sample KG"
          ],
          "iri": "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.-Mention-1"
        }
      ],
      "relevance": 0.71484375
    },
    "Entity-new_short_op_rule": {
      "node_id": "new_short_op_rule",
      "disambiguation_index": 0,
      "label": "new short OP rules",
      "aliases": [
        "new short OP rules"
      ],
      "types": [
        "rule",
        "OP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Novel, constrained existential rules learned by the Open Path Rule Learner (OPRL) algorithm for completing knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-13",
          "local_name": "new short OP rules",
          "local_types": [
            "rule",
            "OP rule"
          ],
          "iri": "Entity-new_short_op_rule-Mention-1"
        }
      ],
      "relevance": 0.71484375
    },
    "Entity-for_akgc__we_need_only_a_named_predicate__or_all_predicate__and_use_op_rule_mined_over_training_data_to_induce_the_most_relevant_query_over_the_full_kb": {
      "node_id": "for_akgc__we_need_only_a_named_predicate__or_all_predicate__and_use_op_rule_mined_over_training_data_to_induce_the_most_relevant_query_over_the_full_kb",
      "disambiguation_index": 0,
      "label": "For AKGC, we need only a named predicate (or all predicates) and use OP rules mined over training data to induce the most relevant queries over the full KB",
      "aliases": [
        "For AKGC, we need only a named predicate (or all predicates) and use OP rules mined over training data to induce the most relevant queries over the full KB"
      ],
      "types": [
        "methodology",
        "AKGC"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The methodology for Active Knowledge Graph Completion (AKGC), which involves inducing relevant queries from Open Path (OP) rules mined over training data.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "For AKGC, we need only a named predicate (or all predicates) and use OP rules mined over training data to induce the most relevant queries over the full KB",
          "local_types": [
            "methodology",
            "AKGC"
          ],
          "iri": "Entity-for_akgc__we_need_only_a_named_predicate__or_all_predicate__and_use_op_rule_mined_over_training_data_to_induce_the_most_relevant_query_over_the_full_kb-Mention-1"
        }
      ],
      "relevance": 0.71435546875
    },
    "Entity-in_this_section__we_show_how_the_mined_rule_can_be_used_for_akgc": {
      "node_id": "in_this_section__we_show_how_the_mined_rule_can_be_used_for_akgc",
      "disambiguation_index": 0,
      "label": "In this section, we show how the mined rules can be used for AKGC",
      "aliases": [
        "In this section, we show how the mined rules can be used for AKGC"
      ],
      "types": [
        "section",
        "application",
        "AKGC"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of using mined Open Path (OP) rules for Active Knowledge Graph Completion (AKGC), which involves generating relevant questions from KG facts and OP rules.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "In this section, we show how the mined rules can be used for AKGC",
          "local_types": [
            "section",
            "application",
            "AKGC"
          ],
          "iri": "Entity-in_this_section__we_show_how_the_mined_rule_can_be_used_for_akgc-Mention-1"
        }
      ],
      "relevance": 0.7119140625
    },
    "Entity-to_mine_a_kg_for_high-quality_op_rule_about_a_specific_target_predicate_in_the_head__p_.": {
      "node_id": "to_mine_a_kg_for_high-quality_op_rule_about_a_specific_target_predicate_in_the_head__p_.",
      "disambiguation_index": 0,
      "label": "to mine a KG for high-quality OP rules about a specific target predicate in the head, P.",
      "aliases": [
        "to mine a KG for high-quality OP rules about a specific target predicate in the head, P."
      ],
      "types": [
        "goal",
        "knowledge graph mining",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of automatically discovering and extracting accurate Open Path (OP) rules from a knowledge graph (KG), focusing on a particular target predicate P at the head of each rule.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "to mine a KG for high-quality OP rules about a specific target predicate in the head, P.",
          "local_types": [
            "goal",
            "knowledge graph mining",
            "predicate"
          ],
          "iri": "Entity-to_mine_a_kg_for_high-quality_op_rule_about_a_specific_target_predicate_in_the_head__p_.-Mention-1"
        }
      ],
      "relevance": 0.7109375
    },
    "Entity-plausible_rule": {
      "node_id": "plausible_rule",
      "disambiguation_index": 0,
      "label": "plausible rules",
      "aliases": [
        "plausible rules"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Rules learned by Open Path Rule Learner (OPRL) that are considered likely to be true or accurate, used for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "plausible rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-plausible_rule-Mention-1"
        }
      ],
      "relevance": 0.70947265625
    },
    "Entity-open_path__op__rule_that_are_constrained_existential_rule": {
      "node_id": "open_path__op__rule_that_are_constrained_existential_rule",
      "disambiguation_index": 0,
      "label": "Open Path (OP) rules that are constrained existential rules",
      "aliases": [
        "Open Path (OP) rules that are constrained existential rules",
        "open path (OP) rules of the following form:"
      ],
      "types": [
        "form",
        "Entity",
        "rules",
        "Knowledge Graph Rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of knowledge graph rule that can generate relevant queries even when there is no closed rule to answer the query or when the correct answer is a missing entity not present in the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "Open Path (OP) rules that are constrained existential rules",
          "local_types": [
            "Knowledge Graph Rule",
            "Entity"
          ],
          "iri": "Entity-open_path__op__rule_that_are_constrained_existential_rule-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "open path (OP) rules of the following form:",
          "local_types": [
            "rules",
            "form"
          ],
          "iri": "Entity-open_path__op__rule_that_are_constrained_existential_rule-Mention-2"
        }
      ],
      "relevance": 0.708984375
    },
    "Entity-evaluating_op_rule__we_propose_an_efficient_method_to_exactly_compute_the_quality_of_each_rule_by_matrix_and_vector_operation_.": {
      "node_id": "evaluating_op_rule__we_propose_an_efficient_method_to_exactly_compute_the_quality_of_each_rule_by_matrix_and_vector_operation_.",
      "disambiguation_index": 0,
      "label": "Evaluating OP rules: We propose an efficient method to exactly compute the quality of each rule by matrix and vector operations.",
      "aliases": [
        "Evaluating OP rules: We propose an efficient method to exactly compute the quality of each rule by matrix and vector operations."
      ],
      "types": [
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The novel algorithm, OPRL, for learning Open Path (OP) rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-4",
          "local_name": "Evaluating OP rules: We propose an efficient method to exactly compute the quality of each rule by matrix and vector operations.",
          "local_types": [
            "evaluation"
          ],
          "iri": "Entity-evaluating_op_rule__we_propose_an_efficient_method_to_exactly_compute_the_quality_of_each_rule_by_matrix_and_vector_operation_.-Mention-1"
        }
      ],
      "relevance": 0.70751953125
    },
    "Entity-oprl_can_learn_plausible_rule_over_popular_benchmark_kg_of_over_eight_million_fact_and_four_million_entity_in_less_than_two_hour": {
      "node_id": "oprl_can_learn_plausible_rule_over_popular_benchmark_kg_of_over_eight_million_fact_and_four_million_entity_in_less_than_two_hour",
      "disambiguation_index": 0,
      "label": "OPRL can learn plausible rules over popular benchmark KGs of over eight million facts and four million entities in less than two hours",
      "aliases": [
        "OPRL can learn plausible rules over popular benchmark KGs of over eight million facts and four million entities in less than two hours"
      ],
      "types": [
        "algorithm",
        "learning process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A machine learning algorithm for inducing logical rules from large knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "OPRL can learn plausible rules over popular benchmark KGs of over eight million facts and four million entities in less than two hours",
          "local_types": [
            "algorithm",
            "learning process"
          ],
          "iri": "Entity-oprl_can_learn_plausible_rule_over_popular_benchmark_kg_of_over_eight_million_fact_and_four_million_entity_in_less_than_two_hour-Mention-1"
        }
      ],
      "relevance": 0.70751953125
    },
    "Entity-closed_rule_complete_a_kg_by_answering_query_of_unclear_origin__usually_derived_from_a_holdback_test_set_in_experimental_setting_.": {
      "node_id": "closed_rule_complete_a_kg_by_answering_query_of_unclear_origin__usually_derived_from_a_holdback_test_set_in_experimental_setting_.",
      "disambiguation_index": 0,
      "label": "Closed rules complete a KG by answering queries of unclear origin, usually derived from a holdback test set in experimental settings.",
      "aliases": [
        "Closed rules complete a KG by answering queries of unclear origin, usually derived from a holdback test set in experimental settings."
      ],
      "types": [
        "Method",
        "Research"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A method for completing knowledge graphs by answering queries of unclear origin, typically derived from holdback test sets in experimental settings.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "Closed rules complete a KG by answering queries of unclear origin, usually derived from a holdback test set in experimental settings.",
          "local_types": [
            "Method",
            "Research"
          ],
          "iri": "Entity-closed_rule_complete_a_kg_by_answering_query_of_unclear_origin__usually_derived_from_a_holdback_test_set_in_experimental_setting_.-Mention-1"
        }
      ],
      "relevance": 0.70654296875
    },
    "Entity-table_2_show_the_average_number_of_quality_rule_mined_for_all_predicate_in_the_respective_kg_.": {
      "node_id": "table_2_show_the_average_number_of_quality_rule_mined_for_all_predicate_in_the_respective_kg_.",
      "disambiguation_index": 0,
      "label": "Table 2 shows the average numbers of quality rules mined for all predicates in the respective KGs.",
      "aliases": [
        "Table 2 shows the average numbers of quality rules mined for all predicates in the respective KGs."
      ],
      "types": [
        "table"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A table presenting the average number of high-quality rules mined from various knowledge graphs (KGs) using the OPRL algorithm, with metrics including rule count and run times.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "Table 2 shows the average numbers of quality rules mined for all predicates in the respective KGs.",
          "local_types": [
            "table"
          ],
          "iri": "Entity-table_2_show_the_average_number_of_quality_rule_mined_for_all_predicate_in_the_respective_kg_.-Mention-1"
        }
      ],
      "relevance": 0.70654296875
    },
    "Entity-the_op_rule": {
      "node_id": "the_op_rule",
      "disambiguation_index": 0,
      "label": "The OP rules",
      "aliases": [
        "The OP rules"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of constrained existential rules used to generate relevant queries for Knowledge Graph (KG) completion.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "The OP rules",
          "local_types": [
            "method"
          ],
          "iri": "Entity-the_op_rule-Mention-1"
        }
      ],
      "relevance": 0.7060546875
    },
    "Entity-op_rule": {
      "node_id": "op_rule",
      "disambiguation_index": 0,
      "label": "OP rule",
      "aliases": [
        "the OP rule",
        "For an OP rule",
        "From an OP rule",
        "OP rule",
        "OP rules"
      ],
      "types": [
        "rule-based system",
        "mathematical concept",
        "query generation method",
        "concept",
        "computational process",
        "rule type",
        "rules",
        "computational model",
        "conceptual framework",
        "knowledge base",
        "rule set",
        "logic formulas",
        "algorithmic concept",
        "algorithmic approach",
        "logic",
        "open path rules",
        "logical statements",
        "programming construct",
        "ontology",
        "patterns",
        "pattern",
        "logical construct",
        "method",
        "type of rule",
        "methodology",
        "notation system",
        "operation",
        "computational rule",
        "ruleset",
        "knowledge graph",
        "rule",
        "rule system",
        "notation",
        "logical statement",
        "operations",
        "algorithmic rule",
        "computational method",
        "logic rules",
        "formalism",
        "artificial intelligence technique",
        "ontology pattern",
        "OP",
        "knowledge representation",
        "algorithm component",
        "optimization problem",
        "logical axioms",
        "rule-based formalism",
        "Open rule",
        "algorithm",
        "artificial intelligence",
        "computational logic rule",
        "logical consequence",
        "data structure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A constrained existential rule that generates relevant queries for knowledge graph completion and can produce instantiations that cannot be inferred by closed path rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-1",
          "local_name": "OP rule",
          "local_types": [
            "notation",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "patterns",
            "concept",
            "optimization problem",
            "pattern",
            "rules",
            "rule",
            "computational logic rule",
            "open path rules"
          ],
          "iri": "Entity-op_rule-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "OP rule",
          "local_types": [
            "logical statements",
            "logic rules",
            "mathematical concept",
            "rules",
            "rule",
            "notation",
            "logic formulas"
          ],
          "iri": "Entity-op_rule-Mention-3"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "OP rules",
          "local_types": [
            "method",
            "rule set",
            "rule-based system",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-4"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-5"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-2",
          "local_name": "OP rules",
          "local_types": [
            "methodology",
            "artificial intelligence technique",
            "concept",
            "rule",
            "rule system",
            "algorithm",
            "method",
            "computational method"
          ],
          "iri": "Entity-op_rule-Mention-6"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-5",
          "local_name": "OP rules",
          "local_types": [
            "rule-based system",
            "concept",
            "rule",
            "algorithm",
            "method"
          ],
          "iri": "Entity-op_rule-Mention-7"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "OP rules",
          "local_types": [
            "rule-based system"
          ],
          "iri": "Entity-op_rule-Mention-8"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "OP rules",
          "local_types": [
            "Open rule",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-9"
        },
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "OP rules",
          "local_types": [
            "algorithm",
            "rule-based system"
          ],
          "iri": "Entity-op_rule-Mention-10"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "OP rules",
          "local_types": [
            "knowledge representation",
            "data structure"
          ],
          "iri": "Entity-op_rule-Mention-11"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-4",
          "local_name": "OP rules",
          "local_types": [
            "ontology",
            "rule set",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-12"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "OP rules",
          "local_types": [
            "ontology",
            "rule set",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-13"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-1",
          "local_name": "OP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-14"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-4",
          "local_name": "OP rules",
          "local_types": [
            "rule set",
            "rules",
            "computational method",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-15"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "rule-based system",
            "concept",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-16"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-2",
          "local_name": "OP rules",
          "local_types": [
            "formalism",
            "rule-based system",
            "rule-based formalism",
            "rules",
            "computational model"
          ],
          "iri": "Entity-op_rule-Mention-17"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "optimization problem",
            "rules",
            "rule-based system",
            "logical axioms"
          ],
          "iri": "Entity-op_rule-Mention-18"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "rule",
            "rule set",
            "rule-based system",
            "logical consequence"
          ],
          "iri": "Entity-op_rule-Mention-19"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-2",
          "local_name": "OP rule",
          "local_types": [
            "mathematical concept",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-20"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-3",
          "local_name": "OP rule",
          "local_types": [
            "rules",
            "concept",
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-21"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-4",
          "local_name": "OP rule",
          "local_types": [
            "rule",
            "optimization problem"
          ],
          "iri": "Entity-op_rule-Mention-22"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "OP rule",
          "local_types": [
            "concept",
            "rule",
            "logic",
            "logical construct"
          ],
          "iri": "Entity-op_rule-Mention-23"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "OP rule",
          "local_types": [
            "rule",
            "logical statement"
          ],
          "iri": "Entity-op_rule-Mention-24"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-2",
          "local_name": "OP rule",
          "local_types": [
            "concept",
            "notation system"
          ],
          "iri": "Entity-op_rule-Mention-25"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "logical statements",
            "rules",
            "patterns",
            "knowledge representation"
          ],
          "iri": "Entity-op_rule-Mention-26"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "OP rules",
          "local_types": [
            "rule set",
            "knowledge base"
          ],
          "iri": "Entity-op_rule-Mention-27"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-4",
          "local_name": "OP rules",
          "local_types": [
            "logical statements",
            "knowledge representation"
          ],
          "iri": "Entity-op_rule-Mention-28"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-8",
          "local_name": "OP rules",
          "local_types": [
            "logical statements",
            "rule-based system",
            "knowledge representation"
          ],
          "iri": "Entity-op_rule-Mention-29"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-10",
          "local_name": "OP rule",
          "local_types": [
            "rule",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-30"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "OP rule",
          "local_types": [
            "rule-based system",
            "ontology",
            "patterns",
            "concept",
            "pattern",
            "rules",
            "rule",
            "computational model",
            "open path rules"
          ],
          "iri": "Entity-op_rule-Mention-31"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-3",
          "local_name": "OP rules",
          "local_types": [
            "rule set",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-32"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "OP rules",
          "local_types": [
            "concept",
            "patterns",
            "pattern",
            "rules",
            "rule",
            "open path rules"
          ],
          "iri": "Entity-op_rule-Mention-33"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "OP rule",
          "local_types": [
            "patterns",
            "pattern",
            "rules",
            "rule",
            "notation",
            "open path rules"
          ],
          "iri": "Entity-op_rule-Mention-34"
        },
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "OP rule",
          "local_types": [
            "rule-based system",
            "patterns",
            "computational process",
            "pattern",
            "rules",
            "algorithm",
            "open path rules"
          ],
          "iri": "Entity-op_rule-Mention-35"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "OP rule",
          "local_types": [
            "ontology pattern",
            "patterns",
            "pattern",
            "rules",
            "rule",
            "algorithm",
            "open path rules"
          ],
          "iri": "Entity-op_rule-Mention-36"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-8",
          "local_name": "OP rule",
          "local_types": [
            "operation",
            "programming construct"
          ],
          "iri": "Entity-op_rule-Mention-37"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "logic rules",
            "logical statements",
            "concept",
            "pattern",
            "rules",
            "rule",
            "logic formulas"
          ],
          "iri": "Entity-op_rule-Mention-38"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-3",
          "local_name": "OP rules",
          "local_types": [
            "rules",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-39"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-4",
          "local_name": "OP rules",
          "local_types": [
            "rule set",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-40"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "concept",
            "pattern",
            "knowledge graph",
            "rules",
            "rule",
            "algorithm",
            "method"
          ],
          "iri": "Entity-op_rule-Mention-41"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "OP rules",
          "local_types": [
            "concept",
            "rules",
            "rule",
            "algorithm",
            "method",
            "logic",
            "operations"
          ],
          "iri": "Entity-op_rule-Mention-42"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "OP rules",
          "local_types": [
            "rule-based system",
            "knowledge representation"
          ],
          "iri": "Entity-op_rule-Mention-43"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "OP rule",
          "local_types": [
            "method",
            "concept",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-44"
        },
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "rule-based system",
            "knowledge representation",
            "concept",
            "algorithm",
            "method"
          ],
          "iri": "Entity-op_rule-Mention-45"
        },
        {
          "reference": "Section-8-Paragraph-11-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "rule-based system",
            "knowledge representation",
            "ontology",
            "concept",
            "conceptual framework",
            "rules",
            "rule",
            "algorithm",
            "method"
          ],
          "iri": "Entity-op_rule-Mention-46"
        },
        {
          "reference": "Section-9-Paragraph-7-Sentence-1",
          "local_name": "OP rules",
          "local_types": [
            "knowledge base",
            "rule set",
            "algorithmic rule"
          ],
          "iri": "Entity-op_rule-Mention-47"
        },
        {
          "reference": "Section-9-Paragraph-12-Sentence-2",
          "local_name": "OP rules",
          "local_types": [
            "ruleset",
            "algorithm component",
            "algorithm",
            "rule set",
            "algorithmic rule"
          ],
          "iri": "Entity-op_rule-Mention-48"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-2",
          "local_name": "OP rules",
          "local_types": [
            "computational rule",
            "algorithmic concept",
            "query generation method",
            "concept",
            "rule type",
            "rules",
            "artificial intelligence",
            "rule set",
            "algorithmic approach",
            "computational method",
            "type of rule"
          ],
          "iri": "Entity-op_rule-Mention-49"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-4",
          "local_name": "OP rules",
          "local_types": [
            "concept",
            "rules",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-op_rule-Mention-50"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-2",
          "local_name": "From an OP rule",
          "local_types": [
            "rule",
            "OP"
          ],
          "iri": "Entity-op_rule-Mention-51"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-3",
          "local_name": "the OP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-52"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "For an OP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-op_rule-Mention-53"
        }
      ],
      "relevance": 0.70458984375
    },
    "Entity-we_introduce_open_path__op__rule_that_are_constrained_existential_rule_.": {
      "node_id": "we_introduce_open_path__op__rule_that_are_constrained_existential_rule_.",
      "disambiguation_index": 0,
      "label": "We introduce Open Path (OP) rules that are constrained existential rules.",
      "aliases": [
        "We introduce Open Path (OP) rules that are constrained existential rules."
      ],
      "types": [
        "Research",
        "Method",
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of rule used in knowledge graph completion that is constrained to existentially quantify variables, introduced as part of the Open Path (OP) rules.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "We introduce Open Path (OP) rules that are constrained existential rules.",
          "local_types": [
            "Research",
            "Method",
            "statement"
          ],
          "iri": "Entity-we_introduce_open_path__op__rule_that_are_constrained_existential_rule_.-Mention-1"
        }
      ],
      "relevance": 0.70361328125
    },
    "Entity-open_path": {
      "node_id": "open_path",
      "disambiguation_index": 0,
      "label": "Open Path",
      "aliases": [
        "open path",
        "Open Path"
      ],
      "types": [
        "computational problem",
        "rule-based method",
        "rule",
        "pathfinding algorithm",
        "fitness function",
        "method",
        "graph theory concept",
        "computational method"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Constrained existential rules used in knowledge graph completion to generate relevant queries and complete incomplete Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "Open Path",
          "local_types": [
            "method",
            "rule-based method",
            "rule"
          ],
          "iri": "Entity-open_path-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "open path",
          "local_types": [
            "computational problem",
            "pathfinding algorithm",
            "fitness function",
            "graph theory concept",
            "computational method"
          ],
          "iri": "Entity-open_path-Mention-2"
        }
      ],
      "relevance": 0.703125
    },
    "Entity-our_novel_oprl": {
      "node_id": "our_novel_oprl",
      "disambiguation_index": 0,
      "label": "our novel OPRL",
      "aliases": [
        "our novel OPRL"
      ],
      "types": [
        "product",
        "OPRL"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Our novel OPRL refers to an algorithm for learning open path rules from a knowledge graph, which generates queries that can be used to complete the graph and introduce missing entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-5",
          "local_name": "our novel OPRL",
          "local_types": [
            "product",
            "OPRL"
          ],
          "iri": "Entity-our_novel_oprl-Mention-1"
        }
      ],
      "relevance": 0.70263671875
    },
    "Entity-incpathfinding": {
      "node_id": "incpathfinding",
      "disambiguation_index": 0,
      "label": "IncPathFinding",
      "aliases": [
        "IncPathFinding"
      ],
      "types": [
        "method",
        "function",
        "extension",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning Open Path (OP) rules that generates queries even when there is no closed rule or when the correct answer is a missing entity not present in the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "IncPathFinding",
          "local_types": [
            "function",
            "algorithm"
          ],
          "iri": "Entity-incpathfinding-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-12",
          "local_name": "IncPathFinding",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-incpathfinding-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "IncPathFinding",
          "local_types": [
            "function",
            "algorithm"
          ],
          "iri": "Entity-incpathfinding-Mention-3"
        },
        {
          "reference": "Section-9-Paragraph-13-Sentence-1",
          "local_name": "IncPathFinding",
          "local_types": [
            "function",
            "extension",
            "algorithm"
          ],
          "iri": "Entity-incpathfinding-Mention-4"
        }
      ],
      "relevance": 0.7021484375
    },
    "Entity-f_op__.__(1)": {
      "node_id": "f_op__.__(1)",
      "disambiguation_index": 1,
      "label": "f_op(.)",
      "aliases": [
        "f_op(.)"
      ],
      "types": [
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm for learning constrained existential rules (Open Path rules) in knowledge graphs, which generates relevant queries even when there is no closed rule to answer a query or when the correct answer is a missing entity not present in the graph.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "f_op(.)",
          "local_types": [
            "function"
          ],
          "iri": "Entity-f_op__.__(1)-Mention-1"
        }
      ],
      "relevance": 0.7021484375
    },
    "Entity-oprl_to_learn_op_rule_about_p_in_the_head": {
      "node_id": "oprl_to_learn_op_rule_about_p_in_the_head",
      "disambiguation_index": 0,
      "label": "OPRL to learn OP rules about P in the head",
      "aliases": [
        "OPRL to learn OP rules about P in the head"
      ],
      "types": [
        "method",
        "rule learning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method for learning open-path (OP) rules from a knowledge graph about a specific predicate P in order to generate relevant questions or queries.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "OPRL to learn OP rules about P in the head",
          "local_types": [
            "method",
            "rule learning"
          ],
          "iri": "Entity-oprl_to_learn_op_rule_about_p_in_the_head-Mention-1"
        }
      ],
      "relevance": 0.70166015625
    },
    "Entity-curate_kg_automatically": {
      "node_id": "curate_kg_automatically",
      "disambiguation_index": 0,
      "label": "curate KGs automatically",
      "aliases": [
        "curate KGs automatically"
      ],
      "types": [
        "process"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of automatically generating queries from open path rules learned from a Knowledge Graph (KG) to complete the KG by predicting missing facts or introducing new entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "curate KGs automatically",
          "local_types": [
            "process"
          ],
          "iri": "Entity-curate_kg_automatically-Mention-1"
        }
      ],
      "relevance": 0.7001953125
    },
    "Entity-we_(6)": {
      "node_id": "we_(6)",
      "disambiguation_index": 6,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors, referring to themselves as 'we', are discussing their novel algorithm (OPRL) for learning Open Path rules from Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-4-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-3"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-4"
        },
        {
          "reference": "Section-9-Paragraph-11-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-5"
        },
        {
          "reference": "Section-9-Paragraph-13-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-6"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(6)-Mention-7"
        }
      ],
      "relevance": 0.69921875
    },
    "Entity-the_first_method_to_learn_rule_to_generate_relevant_question_automatically": {
      "node_id": "the_first_method_to_learn_rule_to_generate_relevant_question_automatically",
      "disambiguation_index": 0,
      "label": "the first method to learn rules to generate relevant questions automatically",
      "aliases": [
        "the first method to learn rules to generate relevant questions automatically"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The proposed system, which learns Open Path (OP) rules for generating relevant queries in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-1",
          "local_name": "the first method to learn rules to generate relevant questions automatically",
          "local_types": [
            "method"
          ],
          "iri": "Entity-the_first_method_to_learn_rule_to_generate_relevant_question_automatically-Mention-1"
        }
      ],
      "relevance": 0.69921875
    },
    "Entity-representation_learning_for_kg_completion": {
      "node_id": "representation_learning_for_kg_completion",
      "disambiguation_index": 0,
      "label": "Representation Learning for KG Completion",
      "aliases": [
        "Representation Learning for KG Completion"
      ],
      "types": [
        "representation learning method",
        "approach",
        "paper",
        "knowledge graph embedding",
        "research",
        "method",
        "title"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A machine learning approach that learns representations of entities and relationships in a knowledge graph to facilitate completion tasks.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-1",
          "local_name": "Representation Learning for KG Completion",
          "local_types": [
            "representation learning method",
            "approach",
            "paper",
            "knowledge graph embedding",
            "research",
            "method",
            "title"
          ],
          "iri": "Entity-representation_learning_for_kg_completion-Mention-1"
        }
      ],
      "relevance": 0.6982421875
    },
    "Entity-op_rule_to_derive_query": {
      "node_id": "op_rule_to_derive_query",
      "disambiguation_index": 0,
      "label": "OP rules to derive queries",
      "aliases": [
        "OP rules to derive queries"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A methodology for learning constrained existential rules, also known as Open Path (OP) rules, which are used to generate relevant questions or queries from incomplete knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-1",
          "local_name": "OP rules to derive queries",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-op_rule_to_derive_query-Mention-1"
        }
      ],
      "relevance": 0.697265625
    },
    "Entity-rule-based_kg_completion": {
      "node_id": "rule-based_kg_completion",
      "disambiguation_index": 0,
      "label": "Rule-Based KG Completion",
      "aliases": [
        "Rule-Based KG Completion"
      ],
      "types": [
        "method",
        "methodology",
        "approach",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or approach for completing knowledge graphs using predefined rules.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "Rule-Based KG Completion",
          "local_types": [
            "method",
            "methodology",
            "approach",
            "algorithm"
          ],
          "iri": "Entity-rule-based_kg_completion-Mention-1"
        }
      ],
      "relevance": 0.697265625
    },
    "Entity-a_given_kg": {
      "node_id": "a_given_kg",
      "disambiguation_index": 0,
      "label": "a given KG",
      "aliases": [
        "a given KG"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific Knowledge Graph (KG) used for learning open path rules and generating relevant queries to complete the KG.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "a given KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-a_given_kg-Mention-1"
        }
      ],
      "relevance": 0.697265625
    },
    "Entity-we_demonstrate": {
      "node_id": "we_demonstrate",
      "disambiguation_index": 0,
      "label": "we demonstrate",
      "aliases": [
        "we demonstrate"
      ],
      "types": [
        "action"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The ability of OPRL to mine quality Open Path rules from a range of knowledge graphs and generate relevant queries with good recall and precision.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-6-Sentence-1",
          "local_name": "we demonstrate",
          "local_types": [
            "action"
          ],
          "iri": "Entity-we_demonstrate-Mention-1"
        }
      ],
      "relevance": 0.6962890625
    },
    "Entity-the_mined_rule_(1)": {
      "node_id": "the_mined_rule_(1)",
      "disambiguation_index": 1,
      "label": "the mined rules",
      "aliases": [
        "the mined rules"
      ],
      "types": [
        "rule",
        "mined rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of OP (Open Path) rules learned by Algorithm 1 from a knowledge graph to generate relevant queries for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "the mined rules",
          "local_types": [
            "rule",
            "mined rule"
          ],
          "iri": "Entity-the_mined_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.6953125
    },
    "Entity-open_path_rule__op_": {
      "node_id": "open_path_rule__op_",
      "disambiguation_index": 0,
      "label": "open path rules (OP)",
      "aliases": [
        "open path rules (OP)",
        "OP rules",
        "these rules",
        "quality OP rules"
      ],
      "types": [
        "op_rule",
        "concept",
        "rules",
        "rule",
        "algorithm",
        "rule formalism",
        "rule_type"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Open Path Rules (OP) are a type of constrained existential rules used for learning and generating open-ended questions from knowledge graphs to guide discovery of unknown entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "open path rules (OP)",
          "local_types": [
            "op_rule",
            "concept",
            "rule",
            "algorithm",
            "rule formalism",
            "rule_type"
          ],
          "iri": "Entity-open_path_rule__op_-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-9",
          "local_name": "OP rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-open_path_rule__op_-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-4",
          "local_name": "these rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-open_path_rule__op_-Mention-3"
        },
        {
          "reference": "Section-9-Paragraph-7-Sentence-1",
          "local_name": "quality OP rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-open_path_rule__op_-Mention-4"
        }
      ],
      "relevance": 0.69482421875
    },
    "Entity-to_ask_the_best_question_to_complete_a_kg_.": {
      "node_id": "to_ask_the_best_question_to_complete_a_kg_.",
      "disambiguation_index": 0,
      "label": "to ask the best questions to complete a KG.",
      "aliases": [
        "to ask the best questions to complete a KG."
      ],
      "types": [
        "methodology",
        "KG"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process or method of generating relevant queries from learned open path rules to guide knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "to ask the best questions to complete a KG.",
          "local_types": [
            "methodology",
            "KG"
          ],
          "iri": "Entity-to_ask_the_best_question_to_complete_a_kg_.-Mention-1"
        }
      ],
      "relevance": 0.69482421875
    },
    "Entity-the_mined_rule_(2)": {
      "node_id": "the_mined_rule_(2)",
      "disambiguation_index": 2,
      "label": "the mined rules",
      "aliases": [
        "the mined rules"
      ],
      "types": [
        "mined rule",
        "rules",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of rules with free variables learned from Knowledge Graphs (KGs) that can be used to generate highly relevant queries for missing links, enabling active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "the mined rules",
          "local_types": [
            "mined rule",
            "rules",
            "rule"
          ],
          "iri": "Entity-the_mined_rule_(2)-Mention-1"
        }
      ],
      "relevance": 0.6943359375
    },
    "Entity-they_(3)": {
      "node_id": "they_(3)",
      "disambiguation_index": 3,
      "label": "They",
      "aliases": [
        "They"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The queries generated from OPRL's rules, which are constrained existential rules that can generate relevant questions for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-8-Sentence-2",
          "local_name": "They",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-they_(3)-Mention-1"
        }
      ],
      "relevance": 0.693359375
    },
    "Entity-the_process_of_op_rule_learning": {
      "node_id": "the_process_of_op_rule_learning",
      "disambiguation_index": 0,
      "label": "The process of OP rule learning",
      "aliases": [
        "The process of OP rule learning"
      ],
      "types": [
        "process"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel method for discovering open-path rules from a knowledge graph, which generates relevant queries to complete the graph and introduce missing entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-9",
          "local_name": "The process of OP rule learning",
          "local_types": [
            "process"
          ],
          "iri": "Entity-the_process_of_op_rule_learning-Mention-1"
        }
      ],
      "relevance": 0.69287109375
    },
    "Entity-the_rule_is_extended_to_": {
      "node_id": "the_rule_is_extended_to_",
      "disambiguation_index": 0,
      "label": "the rule is extended to:",
      "aliases": [
        "the rule is extended to:"
      ],
      "types": [
        "rule",
        "extension"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning constrained existential rules (OP rules) that can generate relevant queries even when there is no closed rule to answer a query or when the correct answer is a missing entity not present in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "the rule is extended to:",
          "local_types": [
            "rule",
            "extension"
          ],
          "iri": "Entity-the_rule_is_extended_to_-Mention-1"
        }
      ],
      "relevance": 0.69287109375
    },
    "Entity-the_building_method": {
      "node_id": "the_building_method",
      "disambiguation_index": 0,
      "label": "The building methods",
      "aliases": [
        "The building methods"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Methods for automatically completing Knowledge Graphs (KGs) by learning rules that generate relevant queries and predict the existence of missing entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-8",
          "local_name": "The building methods",
          "local_types": [
            "method"
          ],
          "iri": "Entity-the_building_method-Mention-1"
        }
      ],
      "relevance": 0.6923828125
    },
    "Entity-learnt_op_rule": {
      "node_id": "learnt_op_rule",
      "disambiguation_index": 0,
      "label": "learnt OP rules",
      "aliases": [
        "learnt OP rules"
      ],
      "types": [
        "rule set",
        "knowledge base"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The algorithm, OPRL, that learns Open Path (OP) rules.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-4",
          "local_name": "learnt OP rules",
          "local_types": [
            "rule set",
            "knowledge base"
          ],
          "iri": "Entity-learnt_op_rule-Mention-1"
        }
      ],
      "relevance": 0.69189453125
    },
    "Entity-this_mean_that_embeddings_are_computed_only_for_entity_that_are_relevant_to_a_target_predicate_.": {
      "node_id": "this_mean_that_embeddings_are_computed_only_for_entity_that_are_relevant_to_a_target_predicate_.",
      "disambiguation_index": 0,
      "label": "This means that embeddings are computed only for entities that are relevant to a target predicate.",
      "aliases": [
        "This means that embeddings are computed only for entities that are relevant to a target predicate."
      ],
      "types": [
        "description",
        "constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The sampling algorithm used in OPRL to reduce the Knowledge Graph size, which computes a fragment of the KG consisting of a bounded number of entities related to the target predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "This means that embeddings are computed only for entities that are relevant to a target predicate.",
          "local_types": [
            "description",
            "constraint"
          ],
          "iri": "Entity-this_mean_that_embeddings_are_computed_only_for_entity_that_are_relevant_to_a_target_predicate_.-Mention-1"
        }
      ],
      "relevance": 0.69189453125
    },
    "Entity-op_rule_learner": {
      "node_id": "op_rule_learner",
      "disambiguation_index": 0,
      "label": "OP rule learners",
      "aliases": [
        "OP rule learners"
      ],
      "types": [
        "machine learning model",
        "machine learning",
        "approach",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The novel algorithm OPRL (Open Path Rule Learner) that learns Open Path rules constrained existential rules.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "OP rule learners",
          "local_types": [
            "algorithm",
            "machine learning model"
          ],
          "iri": "Entity-op_rule_learner-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "OP rule learners",
          "local_types": [
            "machine learning",
            "approach",
            "algorithm"
          ],
          "iri": "Entity-op_rule_learner-Mention-2"
        }
      ],
      "relevance": 0.69189453125
    },
    "Entity-up_to_8_m_fact": {
      "node_id": "up_to_8_m_fact",
      "disambiguation_index": 0,
      "label": "up to 8 M facts",
      "aliases": [
        "up to 8 M facts"
      ],
      "types": [
        "facts"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of facts present in massive Knowledge Graphs that can be mined by OPRL, an algorithm capable of learning Open Path rules.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-2",
          "local_name": "up to 8 M facts",
          "local_types": [
            "facts"
          ],
          "iri": "Entity-up_to_8_m_fact-Mention-1"
        }
      ],
      "relevance": 0.69189453125
    },
    "Entity-we_first": {
      "node_id": "we_first",
      "disambiguation_index": 0,
      "label": "We first",
      "aliases": [
        "We first"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of using Open Path (OP) rules learned by OPRL algorithm to generate relevant questions about a predicate in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "We first",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_first-Mention-1"
        }
      ],
      "relevance": 0.69189453125
    },
    "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc": {
      "node_id": "a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "disambiguation_index": 0,
      "label": "a novel vector computation which allows the system to evaluate the OP rules against a massive KG to compute quality measures, OPSC and OPHC",
      "aliases": [
        "a novel vector computation which allows the system to evaluate the OP rules against a massive KG to compute quality measures, OPSC and OPHC"
      ],
      "types": [
        "methodology",
        "KG",
        "vector computation",
        "system",
        "quality measures"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A methodology for evaluating Open Path (OP) rules against a massive Knowledge Graph (KG) to compute quality measures, including OPSC and OPHC.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "a novel vector computation which allows the system to evaluate the OP rules against a massive KG to compute quality measures, OPSC and OPHC",
          "local_types": [
            "methodology",
            "KG",
            "vector computation",
            "system",
            "quality measures"
          ],
          "iri": "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc-Mention-1"
        }
      ],
      "relevance": 0.69140625
    },
    "Entity-open_path_rule": {
      "node_id": "open_path_rule",
      "disambiguation_index": 0,
      "label": "open path rules",
      "aliases": [
        "open path rules"
      ],
      "types": [
        "mined data",
        "knowledge representation",
        "concept",
        "rule type",
        "algorithm",
        "logical construct",
        "method",
        "rule set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Open path rules are a type of existential rule that constrain queries for knowledge graph completion by predicting missing entities and facts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "open path rules",
          "local_types": [
            "rule set",
            "knowledge representation"
          ],
          "iri": "Entity-open_path_rule-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "open path rules",
          "local_types": [
            "mined data",
            "concept",
            "rule type",
            "algorithm",
            "logical construct",
            "method"
          ],
          "iri": "Entity-open_path_rule-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-3",
          "local_name": "open path rules",
          "local_types": [
            "rule type",
            "concept",
            "logical construct",
            "algorithm"
          ],
          "iri": "Entity-open_path_rule-Mention-3"
        }
      ],
      "relevance": 0.69091796875
    },
    "Entity-open_path_fitness": {
      "node_id": "open_path_fitness",
      "disambiguation_index": 0,
      "label": "open path fitness",
      "aliases": [
        "open path fitness"
      ],
      "types": [
        "quality estimation function",
        "function",
        "mathematical concept",
        "concept",
        "algorithmic process",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning constrained existential rules (Open Path rules) to complete a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-17-Sentence-2",
          "local_name": "open path fitness",
          "local_types": [
            "function",
            "quality estimation function",
            "algorithmic process",
            "concept",
            "algorithm"
          ],
          "iri": "Entity-open_path_fitness-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-9",
          "local_name": "open path fitness",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-open_path_fitness-Mention-2"
        }
      ],
      "relevance": 0.68896484375
    },
    "Entity-the_first_work_on_active_knowledge_graph_completion": {
      "node_id": "the_first_work_on_active_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "the first work on active knowledge graph completion",
      "aliases": [
        "the first work on active knowledge graph completion"
      ],
      "types": [
        "research",
        "work"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The pioneering research that introduced a method for learning rules with free variables from Knowledge Graphs (KGs) to generate highly relevant queries for missing links, marking the first work on active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-5",
          "local_name": "the first work on active knowledge graph completion",
          "local_types": [
            "research",
            "work"
          ],
          "iri": "Entity-the_first_work_on_active_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.6884765625
    },
    "Entity-let_r_be_an_op_rule_of_the_form_given_earlier_.": {
      "node_id": "let_r_be_an_op_rule_of_the_form_given_earlier_.",
      "disambiguation_index": 0,
      "label": "Let r be an OP rule of the form given earlier.",
      "aliases": [
        "r be an OP rule of the form given earlier",
        "Let r be an OP rule of the form given earlier.",
        "r be an OP rule of the form given earlier."
      ],
      "types": [
        "rule_form",
        "OP_rule",
        "OP rule",
        "rule",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An open path (OP) rule, a constrained existential rule that can generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-2",
          "local_name": "Let r be an OP rule of the form given earlier.",
          "local_types": [
            "OP_rule",
            "rule_form"
          ],
          "iri": "Entity-let_r_be_an_op_rule_of_the_form_given_earlier_.-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-2",
          "local_name": "r be an OP rule of the form given earlier",
          "local_types": [
            "rule",
            "notation"
          ],
          "iri": "Entity-let_r_be_an_op_rule_of_the_form_given_earlier_.-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-2",
          "local_name": "r be an OP rule of the form given earlier.",
          "local_types": [
            "rule",
            "OP rule"
          ],
          "iri": "Entity-let_r_be_an_op_rule_of_the_form_given_earlier_.-Mention-3"
        }
      ],
      "relevance": 0.68798828125
    },
    "Entity-_open_path__opsupp__opsc__ophc_": {
      "node_id": "_open_path__opsupp__opsc__ophc_",
      "disambiguation_index": 0,
      "label": "(open path: OPsupp, OPSC, OPHC)",
      "aliases": [
        "(open path: OPsupp, OPSC, OPHC)"
      ],
      "types": [
        "path",
        "OPsupp",
        "OPSC",
        "OPHC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of rule that can generate relevant queries for knowledge graph completion and has a more linear shape than closed path rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-1",
          "local_name": "(open path: OPsupp, OPSC, OPHC)",
          "local_types": [
            "path",
            "OPsupp",
            "OPSC",
            "OPHC"
          ],
          "iri": "Entity-_open_path__opsupp__opsc__ophc_-Mention-1"
        }
      ],
      "relevance": 0.68798828125
    },
    "Entity-assessed_over_the_whole_kg": {
      "node_id": "assessed_over_the_whole_kg",
      "disambiguation_index": 0,
      "label": "assessed over the whole KG",
      "aliases": [
        "assessed over the whole KG"
      ],
      "types": [
        "KG",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality assessment of candidate rules using metrics OPSC (OP rule support) and OPHC (OP rule head coverage), evaluated based on the entire knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "assessed over the whole KG",
          "local_types": [
            "KG",
            "knowledge graph"
          ],
          "iri": "Entity-assessed_over_the_whole_kg-Mention-1"
        }
      ],
      "relevance": 0.68798828125
    },
    "Entity-rlvlr__and_oprl": {
      "node_id": "rlvlr__and_oprl",
      "disambiguation_index": 0,
      "label": "RLvLR* and OPRL",
      "aliases": [
        "RLvLR* and OPRL"
      ],
      "types": [
        "system",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The RLvLR* and OPRL algorithm for learning constrained existential rules that generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "RLvLR* and OPRL",
          "local_types": [
            "system",
            "algorithm"
          ],
          "iri": "Entity-rlvlr__and_oprl-Mention-1"
        }
      ],
      "relevance": 0.6875
    },
    "Entity-high_quality_rule": {
      "node_id": "high_quality_rule",
      "disambiguation_index": 0,
      "label": "high quality rules",
      "aliases": [
        "high quality rules"
      ],
      "types": [
        "rules",
        "knowledge base"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity 'high quality rules' refers to a set of Open Path (OP) rules learned by the OPRL algorithm, which are constrained existential rules that can generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "high quality rules",
          "local_types": [
            "rules",
            "knowledge base"
          ],
          "iri": "Entity-high_quality_rule-Mention-1"
        }
      ],
      "relevance": 0.68701171875
    },
    "Entity-for_op_rule": {
      "node_id": "for_op_rule",
      "disambiguation_index": 0,
      "label": "For OP rules",
      "aliases": [
        "For OP rules"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A fitness function used to estimate the quality of Open Path (OP) rules in knowledge graph completion, which takes into account the product of predicate embeddings along the path and the entities that satisfy free variables at the endpoints.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-3",
          "local_name": "For OP rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-for_op_rule-Mention-1"
        }
      ],
      "relevance": 0.6865234375
    },
    "Entity-p4__z2__y_": {
      "node_id": "p4__z2__y_",
      "disambiguation_index": 0,
      "label": "P4(z2, y)",
      "aliases": [
        "P4(z2, y)"
      ],
      "types": [
        "function",
        "logical rule",
        "predicate",
        "rule",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A logical rule or predicate in the knowledge graph completion algorithm OPRL, representing an existential rule about entities z2 and y",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-15",
          "local_name": "P4(z2, y)",
          "local_types": [
            "function",
            "logical rule",
            "predicate",
            "rule",
            "mathematical expression"
          ],
          "iri": "Entity-p4__z2__y_-Mention-1"
        }
      ],
      "relevance": 0.685546875
    },
    "Entity-novelty_for_mining_op_rule": {
      "node_id": "novelty_for_mining_op_rule",
      "disambiguation_index": 0,
      "label": "novelties for mining OP rules",
      "aliases": [
        "novelties for mining OP rules"
      ],
      "types": [
        "innovation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Novelties for mining Open Path (OP) rules, including a novel fitness function that estimates the quality of an OP rule based on predicate embedding representations and a novel vector computation to evaluate OP rules against massive Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "novelties for mining OP rules",
          "local_types": [
            "innovation"
          ],
          "iri": "Entity-novelty_for_mining_op_rule-Mention-1"
        }
      ],
      "relevance": 0.6845703125
    },
    "Entity-all_the_mined_rule": {
      "node_id": "all_the_mined_rule",
      "disambiguation_index": 0,
      "label": "all the mined rules",
      "aliases": [
        "all the mined rules"
      ],
      "types": [
        "rules",
        "data"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of constrained existential rules (OP rules) learned from a massive knowledge graph using the Open Path Rule Learner (OPRL) algorithm.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "all the mined rules",
          "local_types": [
            "rules",
            "data"
          ],
          "iri": "Entity-all_the_mined_rule-Mention-1"
        }
      ],
      "relevance": 0.6845703125
    },
    "Entity-we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1": {
      "node_id": "we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1",
      "disambiguation_index": 0,
      "label": "we implement an inference module that derives queries from KG facts together with OP rules found by Algorithm 1",
      "aliases": [
        "we implement an inference module that derives queries from KG facts together with OP rules found by Algorithm 1",
        "an inference module that derives queries from KG facts together with OP rules found by Algorithm 1"
      ],
      "types": [
        "inference",
        "algorithm",
        "module"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An inference module that derives queries from Knowledge Graph (KG) facts and Open Path (OP) rules found by Algorithm 1.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "we implement an inference module that derives queries from KG facts together with OP rules found by Algorithm 1",
          "local_types": [
            "module",
            "inference",
            "algorithm"
          ],
          "iri": "Entity-we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "an inference module that derives queries from KG facts together with OP rules found by Algorithm 1",
          "local_types": [
            "module",
            "algorithm"
          ],
          "iri": "Entity-we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1-Mention-2"
        }
      ],
      "relevance": 0.68408203125
    },
    "Entity-and_use_op_rule_mined_over_training_data_to_induce_the_most_relevant_query_over_the_full_kb": {
      "node_id": "and_use_op_rule_mined_over_training_data_to_induce_the_most_relevant_query_over_the_full_kb",
      "disambiguation_index": 0,
      "label": "and use OP rules mined over training data to induce the most relevant queries over the full KB",
      "aliases": [
        "and use OP rules mined over training data to induce the most relevant queries over the full KB"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A methodology for inducing the most relevant queries from a knowledge graph using Open Path (OP) rules mined over training data.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "and use OP rules mined over training data to induce the most relevant queries over the full KB",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-and_use_op_rule_mined_over_training_data_to_induce_the_most_relevant_query_over_the_full_kb-Mention-1"
        }
      ],
      "relevance": 0.68408203125
    },
    "Entity-for_r": {
      "node_id": "for_r",
      "disambiguation_index": 0,
      "label": "for r",
      "aliases": [
        "for r"
      ],
      "types": [
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The 'For R' term likely refers to an Open Path (OP) rule in the context of knowledge graph completion, specifically used as input for the OPRL algorithm.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-9",
          "local_name": "for r",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-for_r-Mention-1"
        }
      ],
      "relevance": 0.68408203125
    },
    "Entity-a_fully_automated_framework_for_kg_completion": {
      "node_id": "a_fully_automated_framework_for_kg_completion",
      "disambiguation_index": 0,
      "label": "a fully automated framework for KG completion",
      "aliases": [
        "a fully automated framework for KG completion"
      ],
      "types": [
        "information system",
        "KG completion",
        "framework",
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A system that uses learned rules with free variables to generate queries and predict missing links in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "a fully automated framework for KG completion",
          "local_types": [
            "information system",
            "KG completion",
            "framework",
            "system"
          ],
          "iri": "Entity-a_fully_automated_framework_for_kg_completion-Mention-1"
        }
      ],
      "relevance": 0.68408203125
    },
    "Entity-after_computing_embeddings": {
      "node_id": "after_computing_embeddings",
      "disambiguation_index": 0,
      "label": "After computing embeddings",
      "aliases": [
        "After computing embeddings"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating Open Path (OP) rules by computing embeddings representations of predicates and arguments in a sample Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-8",
          "local_name": "After computing embeddings",
          "local_types": [
            "method"
          ],
          "iri": "Entity-after_computing_embeddings-Mention-1"
        }
      ],
      "relevance": 0.68310546875
    },
    "Entity-op_rule_mined_over_training_data": {
      "node_id": "op_rule_mined_over_training_data",
      "disambiguation_index": 0,
      "label": "OP rules mined over training data",
      "aliases": [
        "OP rules mined over training data"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "OP rules learned from training data used for active knowledge graph completion by generating relevant questions that can be posed to an oracle or human expert.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "OP rules mined over training data",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-op_rule_mined_over_training_data-Mention-1"
        }
      ],
      "relevance": 0.6826171875
    },
    "Entity-the_architecture_of_rlvlr_that_learns_cp_rule": {
      "node_id": "the_architecture_of_rlvlr_that_learns_cp_rule",
      "disambiguation_index": 0,
      "label": "the architecture of RLVLR that learns CP rules",
      "aliases": [
        "the architecture of RLVLR that learns CP rules"
      ],
      "types": [
        "architecture",
        "RLVLR",
        "CP rules"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The architecture of RLVLR that learns CP rules refers to an algorithm for learning Open Path (OP) rules from a knowledge graph, which adheres to the original architecture of RLVLR but introduces novelties such as a novel fitness function and vector computation for estimating OP rule quality.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "the architecture of RLVLR that learns CP rules",
          "local_types": [
            "architecture",
            "RLVLR",
            "CP rules"
          ],
          "iri": "Entity-the_architecture_of_rlvlr_that_learns_cp_rule-Mention-1"
        }
      ],
      "relevance": 0.68212890625
    },
    "Entity-a_method_is_required_to_check_the_satisfiability_of_body_atom_of_all_candidate_rule": {
      "node_id": "a_method_is_required_to_check_the_satisfiability_of_body_atom_of_all_candidate_rule",
      "disambiguation_index": 0,
      "label": "a method is required to check the satisfiability of body atoms of all candidate rules",
      "aliases": [
        "a method is required to check the satisfiability of body atoms of all candidate rules"
      ],
      "types": [
        "rule",
        "requirement",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithmic approach for efficiently evaluating the quality of Open Path (OP) rules in Knowledge Graphs, which involves checking the satisfiability of their body atoms.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-1",
          "local_name": "a method is required to check the satisfiability of body atoms of all candidate rules",
          "local_types": [
            "rule",
            "requirement",
            "algorithm"
          ],
          "iri": "Entity-a_method_is_required_to_check_the_satisfiability_of_body_atom_of_all_candidate_rule-Mention-1"
        }
      ],
      "relevance": 0.68212890625
    },
    "Entity-to_find_relevant_query__we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1": {
      "node_id": "to_find_relevant_query__we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1",
      "disambiguation_index": 0,
      "label": "To find relevant queries, we implement an inference module that derives queries from KG facts together with OP rules found by Algorithm 1",
      "aliases": [
        "To find relevant queries, we implement an inference module that derives queries from KG facts together with OP rules found by Algorithm 1"
      ],
      "types": [
        "methodology",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An inference module used to derive queries from knowledge graph (KG) facts and open path (OP) rules learned by Algorithm 1, for finding relevant queries.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "To find relevant queries, we implement an inference module that derives queries from KG facts together with OP rules found by Algorithm 1",
          "local_types": [
            "methodology",
            "algorithm"
          ],
          "iri": "Entity-to_find_relevant_query__we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1-Mention-1"
        }
      ],
      "relevance": 0.681640625
    },
    "Entity-the_satisfying_entity": {
      "node_id": "the_satisfying_entity",
      "disambiguation_index": 0,
      "label": "the satisfying entities",
      "aliases": [
        "the satisfying entities"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of distinct entities in the knowledge graph (KG) that satisfy the head of an Open Path rule, calculated by summing each column of the adjacency matrix and counting non-zero elements.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-3",
          "local_name": "the satisfying entities",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_satisfying_entity-Mention-1"
        }
      ],
      "relevance": 0.681640625
    },
    "Entity-op_rule_learning": {
      "node_id": "op_rule_learning",
      "disambiguation_index": 0,
      "label": "OP rule learning",
      "aliases": [
        "OP rule learning"
      ],
      "types": [
        "process",
        "method",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A machine learning process or method that involves learning rules from data and using them to generate queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-9",
          "local_name": "OP rule learning",
          "local_types": [
            "process",
            "method",
            "algorithm"
          ],
          "iri": "Entity-op_rule_learning-Mention-1"
        }
      ],
      "relevance": 0.68115234375
    },
    "Entity-op_rule__r__p1__x__z0___p2__z0__z1___p3__z1__y_": {
      "node_id": "op_rule__r__p1__x__z0___p2__z0__z1___p3__z1__y_",
      "disambiguation_index": 0,
      "label": "OP rule: r: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, y)",
      "aliases": [
        "OP rule: r: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, y)"
      ],
      "types": [
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A specific OP (Open Path) rule in an algorithm for learning constrained existential rules from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "OP rule: r: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, y)",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-op_rule__r__p1__x__z0___p2__z0__z1___p3__z1__y_-Mention-1"
        }
      ],
      "relevance": 0.6806640625
    },
    "Entity-we_repeated_the_experiment_on_the_complete_poker_kg_and_the_anomaly_is_indeed_absent_a_expected": {
      "node_id": "we_repeated_the_experiment_on_the_complete_poker_kg_and_the_anomaly_is_indeed_absent_a_expected",
      "disambiguation_index": 0,
      "label": "We repeated the experiment on the complete Poker KG and the anomaly is indeed absent as expected",
      "aliases": [
        "We repeated the experiment on the complete Poker KG and the anomaly is indeed absent as expected"
      ],
      "types": [
        "experiment repetition",
        "result confirmation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The synthetic Poker Knowledge Graph, used in an experiment to assess the performance of OPRL queries.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "We repeated the experiment on the complete Poker KG and the anomaly is indeed absent as expected",
          "local_types": [
            "experiment repetition",
            "result confirmation"
          ],
          "iri": "Entity-we_repeated_the_experiment_on_the_complete_poker_kg_and_the_anomaly_is_indeed_absent_a_expected-Mention-1"
        }
      ],
      "relevance": 0.6806640625
    },
    "Entity-mining_more_quality_rule_than_either_of_these_function_individually": {
      "node_id": "mining_more_quality_rule_than_either_of_these_function_individually",
      "disambiguation_index": 0,
      "label": "mining more quality rules than either of these functions individually",
      "aliases": [
        "mining more quality rules than either of these functions individually"
      ],
      "types": [
        "rule mining"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The OPRL algorithm for learning Open Path (OP) rules.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "mining more quality rules than either of these functions individually",
          "local_types": [
            "rule mining"
          ],
          "iri": "Entity-mining_more_quality_rule_than_either_of_these_function_individually-Mention-1"
        }
      ],
      "relevance": 0.68017578125
    },
    "Entity-query_even_when_there_is_no_closed_rule_to_answer_the_query": {
      "node_id": "query_even_when_there_is_no_closed_rule_to_answer_the_query",
      "disambiguation_index": 0,
      "label": "queries even when there is no closed rule to answer the query",
      "aliases": [
        "queries even when there is no closed rule to answer the query"
      ],
      "types": [
        "query",
        "search"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The ability of OPRL to generate queries, including those without a corresponding closed rule or where the correct answer is not present in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "queries even when there is no closed rule to answer the query",
          "local_types": [
            "query",
            "search"
          ],
          "iri": "Entity-query_even_when_there_is_no_closed_rule_to_answer_the_query-Mention-1"
        }
      ],
      "relevance": 0.6796875
    },
    "Entity-knowledge_graph_completion_and_rule_learning": {
      "node_id": "knowledge_graph_completion_and_rule_learning",
      "disambiguation_index": 0,
      "label": "knowledge graph completion and rule learning",
      "aliases": [
        "knowledge graph completion and rule learning"
      ],
      "types": [
        "method",
        "methodology",
        "approach"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of learning rules that can generate open-ended questions about missing facts in a knowledge graph, which are then used for completing the graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "knowledge graph completion and rule learning",
          "local_types": [
            "method",
            "methodology",
            "approach"
          ],
          "iri": "Entity-knowledge_graph_completion_and_rule_learning-Mention-1"
        }
      ],
      "relevance": 0.67919921875
    },
    "Entity-method_for_automatic_completion__sometimes_by_rule_learning__scale_well_.": {
      "node_id": "method_for_automatic_completion__sometimes_by_rule_learning__scale_well_.",
      "disambiguation_index": 0,
      "label": "Methods for automatic completion, sometimes by rule learning, scale well.",
      "aliases": [
        "Methods for automatic completion, sometimes by rule learning, scale well."
      ],
      "types": [
        "Method",
        "Research"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The methods for automatically completing knowledge graphs using rule learning.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "Methods for automatic completion, sometimes by rule learning, scale well.",
          "local_types": [
            "Method",
            "Research"
          ],
          "iri": "Entity-method_for_automatic_completion__sometimes_by_rule_learning__scale_well_.-Mention-1"
        }
      ],
      "relevance": 0.6787109375
    },
    "Entity-our_experiment": {
      "node_id": "our_experiment",
      "disambiguation_index": 0,
      "label": "our experiments",
      "aliases": [
        "our experiments"
      ],
      "types": [
        "experiment"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The description of 'our experiments' refers to a set of evaluations conducted on the OPRL algorithm for learning Open Path rules and generating relevant queries for knowledge graph completion, using various benchmark datasets including Freebase, YAGO2, Wikidata, and Poker.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-6-Sentence-1",
          "local_name": "our experiments",
          "local_types": [
            "experiment"
          ],
          "iri": "Entity-our_experiment-Mention-1"
        }
      ],
      "relevance": 0.67822265625
    },
    "Entity-rule_with_more_complex_shape": {
      "node_id": "rule_with_more_complex_shape",
      "disambiguation_index": 0,
      "label": "rules with more complex shapes",
      "aliases": [
        "rules with more complex shapes"
      ],
      "types": [
        "pattern",
        "structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "OPRL algorithm components for learning existential rules from Knowledge Graphs",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-2",
          "local_name": "rules with more complex shapes",
          "local_types": [
            "pattern",
            "structure"
          ],
          "iri": "Entity-rule_with_more_complex_shape-Mention-1"
        }
      ],
      "relevance": 0.67724609375
    },
    "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown": {
      "node_id": "kg_completion_in_this_way_predicts_answer_for_known_unknown",
      "disambiguation_index": 0,
      "label": "KG completion in this way predicts answers for known unknowns",
      "aliases": [
        "KG completion in this way predicts answers for known unknowns"
      ],
      "types": [
        "methodology",
        "knowledge graph completion"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or approach used to complete knowledge graphs by predicting answers for entities with existing relationships.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "KG completion in this way predicts answers for known unknowns",
          "local_types": [
            "methodology",
            "knowledge graph completion"
          ],
          "iri": "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown-Mention-1"
        }
      ],
      "relevance": 0.6767578125
    },
    "Entity-we_mine_open_path__op__rule_of_the_following_form_": {
      "node_id": "we_mine_open_path__op__rule_of_the_following_form_",
      "disambiguation_index": 0,
      "label": "we mine open path (OP) rules of the following form:",
      "aliases": [
        "we mine open path (OP) rules of the following form:"
      ],
      "types": [
        "rule_form"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Open Path (OP) rules that are constrained existential rules used in the process of learning and mining knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "we mine open path (OP) rules of the following form:",
          "local_types": [
            "rule_form"
          ],
          "iri": "Entity-we_mine_open_path__op__rule_of_the_following_form_-Mention-1"
        }
      ],
      "relevance": 0.67626953125
    },
    "Entity-a_discussed": {
      "node_id": "a_discussed",
      "disambiguation_index": 0,
      "label": "As discussed",
      "aliases": [
        "As discussed"
      ],
      "types": [
        "background"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The ability to mine Open Path (OP) rules with measurable qualities from Knowledge Graphs (KGs)",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "As discussed",
          "local_types": [
            "background"
          ],
          "iri": "Entity-a_discussed-Mention-1"
        }
      ],
      "relevance": 0.67626953125
    },
    "Entity-section_5_present_the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule": {
      "node_id": "section_5_present_the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "disambiguation_index": 0,
      "label": "Section 5 presents the process for generating relevant queries derived from the learnt OP rules",
      "aliases": [
        "Section 5 presents the process for generating relevant queries derived from the learnt OP rules"
      ],
      "types": [
        "section",
        "part-of-paper",
        "process",
        "query-generation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of learning open path (OP) rules and deriving relevant queries to complete a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-4",
          "local_name": "Section 5 presents the process for generating relevant queries derived from the learnt OP rules",
          "local_types": [
            "section",
            "part-of-paper",
            "process",
            "query-generation"
          ],
          "iri": "Entity-section_5_present_the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule-Mention-1"
        }
      ],
      "relevance": 0.67578125
    },
    "Entity-novel_method_to_estimate_the_quality_of_each_candidate_rule_based_on_it_embedding_representation": {
      "node_id": "novel_method_to_estimate_the_quality_of_each_candidate_rule_based_on_it_embedding_representation",
      "disambiguation_index": 0,
      "label": "novel method to estimate the quality of each candidate rule based on its embedding representation",
      "aliases": [
        "novel method to estimate the quality of each candidate rule based on its embedding representation"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel algorithm for estimating the quality of each candidate rule in Knowledge Graphs (KGs) based on its embedding representation.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-3",
          "local_name": "novel method to estimate the quality of each candidate rule based on its embedding representation",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-novel_method_to_estimate_the_quality_of_each_candidate_rule_based_on_it_embedding_representation-Mention-1"
        }
      ],
      "relevance": 0.67578125
    },
    "Entity-hundred_of_accurate_rule": {
      "node_id": "hundred_of_accurate_rule",
      "disambiguation_index": 0,
      "label": "hundreds of accurate rules",
      "aliases": [
        "hundreds of accurate rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of OPRL-generated rules that accurately complete knowledge graphs, comprising hundreds of instances.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-2",
          "local_name": "hundreds of accurate rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-hundred_of_accurate_rule-Mention-1"
        }
      ],
      "relevance": 0.67578125
    },
    "Entity-the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule": {
      "node_id": "the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "disambiguation_index": 0,
      "label": "the process for generating relevant queries derived from the learnt OP rules",
      "aliases": [
        "the process for generating relevant queries derived from the learnt OP rules"
      ],
      "types": [
        "process",
        "query generation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of deriving relevant questions or queries from learned Open Path (OP) rules, which are used to guide knowledge graph completion and identify missing entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-4",
          "local_name": "the process for generating relevant queries derived from the learnt OP rules",
          "local_types": [
            "process",
            "query generation"
          ],
          "iri": "Entity-the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule-Mention-1"
        }
      ],
      "relevance": 0.67529296875
    },
    "Entity-the_method": {
      "node_id": "the_method",
      "disambiguation_index": 0,
      "label": "The method",
      "aliases": [
        "The method"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm for learning constrained existential rules (Open Path rules) from massive knowledge graphs, which initializes a set of entities by considering the number of entities involved in a target predicate and then generates OP rules using embeddings-based fitness function.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-6",
          "local_name": "The method",
          "local_types": [
            "method"
          ],
          "iri": "Entity-the_method-Mention-1"
        }
      ],
      "relevance": 0.6748046875
    },
    "Entity-section_4_proposes_the_op_rule_learning_method_oprl_that_includes_a_novel_embedding-based_heuristic_function_and_evaluation_method": {
      "node_id": "section_4_proposes_the_op_rule_learning_method_oprl_that_includes_a_novel_embedding-based_heuristic_function_and_evaluation_method",
      "disambiguation_index": 0,
      "label": "Section 4 proposes the OP rule learning method OPRL that includes a novel embedding-based heuristic function and evaluation method",
      "aliases": [
        "Section 4 proposes the OP rule learning method OPRL that includes a novel embedding-based heuristic function and evaluation method"
      ],
      "types": [
        "section",
        "part-of-paper",
        "methodology",
        "research-method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The OP rule learning method, OPRL",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-3",
          "local_name": "Section 4 proposes the OP rule learning method OPRL that includes a novel embedding-based heuristic function and evaluation method",
          "local_types": [
            "section",
            "part-of-paper",
            "methodology",
            "research-method"
          ],
          "iri": "Entity-section_4_proposes_the_op_rule_learning_method_oprl_that_includes_a_novel_embedding-based_heuristic_function_and_evaluation_method-Mention-1"
        }
      ],
      "relevance": 0.673828125
    },
    "Entity-generating_relevant_query": {
      "node_id": "generating_relevant_query",
      "disambiguation_index": 0,
      "label": "Generating relevant queries",
      "aliases": [
        "Generating relevant queries"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of deriving questions from Open Path rules that can be used as input to link predictors to complete a Knowledge Graph, which is feasible when the correct answer is an entity already present in the KG.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-3",
          "local_name": "Generating relevant queries",
          "local_types": [
            "query"
          ],
          "iri": "Entity-generating_relevant_query-Mention-1"
        }
      ],
      "relevance": 0.673828125
    },
    "Entity-the_final_result_of_the_algorithm": {
      "node_id": "the_final_result_of_the_algorithm",
      "disambiguation_index": 0,
      "label": "the final result of the algorithm",
      "aliases": [
        "the final result of the algorithm"
      ],
      "types": [
        "result",
        "algorithmic output"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of accurate OP rules mined from massive knowledge graphs with up to 8 million facts, which generate queries with precision as high as 98% and recall of 62% on a complete KG.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-10-Sentence-2",
          "local_name": "the final result of the algorithm",
          "local_types": [
            "result",
            "algorithmic output"
          ],
          "iri": "Entity-the_final_result_of_the_algorithm-Mention-1"
        }
      ],
      "relevance": 0.6728515625
    },
    "Entity-the_average_number_of_quality_rule_mined_for_all_predicate_in_the_respective_kg": {
      "node_id": "the_average_number_of_quality_rule_mined_for_all_predicate_in_the_respective_kg",
      "disambiguation_index": 0,
      "label": "the average numbers of quality rules mined for all predicates in the respective KGs",
      "aliases": [
        "the average numbers of quality rules mined for all predicates in the respective KGs"
      ],
      "types": [
        "data",
        "statistics"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The table shows the average number of high-quality rules learned by OPRL for each predicate across various knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "the average numbers of quality rules mined for all predicates in the respective KGs",
          "local_types": [
            "data",
            "statistics"
          ],
          "iri": "Entity-the_average_number_of_quality_rule_mined_for_all_predicate_in_the_respective_kg-Mention-1"
        }
      ],
      "relevance": 0.6728515625
    },
    "Entity-p_t__e1__e2_": {
      "node_id": "p_t__e1__e2_",
      "disambiguation_index": 0,
      "label": "P_t(e1, e2)",
      "aliases": [
        "P_t(e1, e2)"
      ],
      "types": [
        "fact",
        "relation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm for learning constrained existential rules (Open Path rules) from massive knowledge graphs to complete missing facts.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-7",
          "local_name": "P_t(e1, e2)",
          "local_types": [
            "fact",
            "relation"
          ],
          "iri": "Entity-p_t__e1__e2_-Mention-1"
        }
      ],
      "relevance": 0.67236328125
    },
    "Entity-opsc_and_ophc_(1)": {
      "node_id": "opsc_and_ophc_(1)",
      "disambiguation_index": 1,
      "label": "OPSC and OPHC",
      "aliases": [
        "OPSC and OPHC"
      ],
      "types": [
        "concept",
        "acronym"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Metrics used to evaluate the quality of Open Path (OP) rules in knowledge graph completion, measuring the number of entities satisfying the head of the rule, the body of a rule, and those that join the head to its body.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-1",
          "local_name": "OPSC and OPHC",
          "local_types": [
            "concept",
            "acronym"
          ],
          "iri": "Entity-opsc_and_ophc_(1)-Mention-1"
        }
      ],
      "relevance": 0.671875
    },
    "Entity-the_first_solution_for_active_knowledge_graph_completion": {
      "node_id": "the_first_solution_for_active_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "the first solution for active knowledge graph completion",
      "aliases": [
        "the first solution for active knowledge graph completion"
      ],
      "types": [
        "research finding"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm that learns constrained existential rules to generate relevant queries for completing incomplete Knowledge Graphs with high precision and recall.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "the first solution for active knowledge graph completion",
          "local_types": [
            "research finding"
          ],
          "iri": "Entity-the_first_solution_for_active_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.67138671875
    },
    "Entity-we_introduce": {
      "node_id": "we_introduce",
      "disambiguation_index": 0,
      "label": "we introduce",
      "aliases": [
        "we introduce"
      ],
      "types": [
        "action",
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm for learning open path rules from a knowledge graph that enables active knowledge graph completion by asking relevant queries.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "we introduce",
          "local_types": [
            "action",
            "research"
          ],
          "iri": "Entity-we_introduce-Mention-1"
        }
      ],
      "relevance": 0.67138671875
    },
    "Entity-this_(2)": {
      "node_id": "this_(2)",
      "disambiguation_index": 2,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The reduced Knowledge Graph (KG) size, used in OPRL algorithm",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "This",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-this_(2)-Mention-1"
        }
      ],
      "relevance": 0.67138671875
    },
    "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation": {
      "node_id": "two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "disambiguation_index": 0,
      "label": "two fitness functions: co-occurrence or open path, both of which are derived from embedding representations",
      "aliases": [
        "two fitness functions: co-occurrence or open path, both of which are derived from embedding representations"
      ],
      "types": [
        "fitness function",
        "co-occurrence",
        "open path",
        "embedding representation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Two quality estimation methods used in OPRL algorithm for learning Open Path rules, namely Co-Occurrence Fitness Function and Open Path Fitness Function, both based on entity and predicate embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "two fitness functions: co-occurrence or open path, both of which are derived from embedding representations",
          "local_types": [
            "fitness function",
            "co-occurrence",
            "open path",
            "embedding representation"
          ],
          "iri": "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation-Mention-1"
        }
      ],
      "relevance": 0.6708984375
    },
    "Entity-f_op__._": {
      "node_id": "f_op__._",
      "disambiguation_index": 0,
      "label": "f_op(.)",
      "aliases": [
        "f_op(.)"
      ],
      "types": [
        "function",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The open path fitness function for estimating the quality of an Open Path rule in knowledge graph completion, which uses both predicate and argument embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-1",
          "local_name": "f_op(.)",
          "local_types": [
            "function",
            "algorithm"
          ],
          "iri": "Entity-f_op__._-Mention-1"
        }
      ],
      "relevance": 0.669921875
    },
    "Entity-query_adduced_from_op_rule": {
      "node_id": "query_adduced_from_op_rule",
      "disambiguation_index": 0,
      "label": "queries adduced from OP rules",
      "aliases": [
        "queries adduced from OP rules"
      ],
      "types": [
        "query set",
        "question list"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Relevant questions generated by learning open path (OP) rules to identify missing facts and introduce new entities into a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "queries adduced from OP rules",
          "local_types": [
            "query set",
            "question list"
          ],
          "iri": "Entity-query_adduced_from_op_rule-Mention-1"
        }
      ],
      "relevance": 0.66943359375
    },
    "Entity-a_novel_embedding-based_fitness_function": {
      "node_id": "a_novel_embedding-based_fitness_function",
      "disambiguation_index": 0,
      "label": "a novel embedding-based fitness function",
      "aliases": [
        "a novel embedding-based fitness function",
        "the proposed fitness function"
      ],
      "types": [
        "fitness function",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A mathematical formula used in OPRL algorithm for estimating the quality of learned Open Path rules, leveraging embeddings to efficiently evaluate rule performance.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "a novel embedding-based fitness function",
          "local_types": [
            "algorithm",
            "fitness function"
          ],
          "iri": "Entity-a_novel_embedding-based_fitness_function-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-11",
          "local_name": "the proposed fitness function",
          "local_types": [
            "algorithm",
            "fitness function"
          ],
          "iri": "Entity-a_novel_embedding-based_fitness_function-Mention-2"
        }
      ],
      "relevance": 0.66943359375
    },
    "Entity-two_set_of_experiment": {
      "node_id": "two_set_of_experiment",
      "disambiguation_index": 0,
      "label": "two sets of experiments",
      "aliases": [
        "two sets of experiments"
      ],
      "types": [
        "study",
        "experiment"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Two sets of experiments: evaluations of Open Path Rule Learner (OPRL) for learning open path rules and generating relevant queries from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "two sets of experiments",
          "local_types": [
            "study",
            "experiment"
          ],
          "iri": "Entity-two_set_of_experiment-Mention-1"
        }
      ],
      "relevance": 0.66943359375
    },
    "Entity-run_time_in_hour__averaged_over_the_target": {
      "node_id": "run_time_in_hour__averaged_over_the_target",
      "disambiguation_index": 0,
      "label": "run times in hours, averaged over the targets",
      "aliases": [
        "run times in hours, averaged over the targets"
      ],
      "types": [
        "data",
        "runtime"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The average time taken by OPRL (Open Path Rule Learner) algorithm to mine rules from massive knowledge graphs with up to 8 million facts.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-3",
          "local_name": "run times in hours, averaged over the targets",
          "local_types": [
            "data",
            "runtime"
          ],
          "iri": "Entity-run_time_in_hour__averaged_over_the_target-Mention-1"
        }
      ],
      "relevance": 0.66943359375
    },
    "Entity-mine_a_kg": {
      "node_id": "mine_a_kg",
      "disambiguation_index": 0,
      "label": "mine a KG",
      "aliases": [
        "mine a KG"
      ],
      "types": [
        "process",
        "operation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of automatically generating high-quality Open Path (OP) rules from a Knowledge Graph (KG), specifically for a target predicate P.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "mine a KG",
          "local_types": [
            "process",
            "operation"
          ],
          "iri": "Entity-mine_a_kg-Mention-1"
        }
      ],
      "relevance": 0.6689453125
    },
    "Entity-each_rule_on_generation_to_rapidly_discard_poor_performer": {
      "node_id": "each_rule_on_generation_to_rapidly_discard_poor_performer",
      "disambiguation_index": 0,
      "label": "each rule on generation to rapidly discard poor performers",
      "aliases": [
        "each rule on generation to rapidly discard poor performers"
      ],
      "types": [
        "rule",
        "performer"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel approach used in OPRL (Open Path Rule Learning) algorithm to evaluate and filter out low-quality rules during their generation process, ensuring efficient mining of high-accuracy Open Path rules from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-11",
          "local_name": "each rule on generation to rapidly discard poor performers",
          "local_types": [
            "rule",
            "performer"
          ],
          "iri": "Entity-each_rule_on_generation_to_rapidly_discard_poor_performer-Mention-1"
        }
      ],
      "relevance": 0.66845703125
    },
    "Entity-knowledge_graph_completion": {
      "node_id": "knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "knowledge graph completion",
      "aliases": [
        "knowledge graph completion",
        "knowledge graph completion process",
        "Knowledge graph completion"
      ],
      "types": [
        "process",
        "research area",
        "task",
        "challenge",
        "problem",
        "completion",
        "concept",
        "field of study",
        "data processing task",
        "information retrieval problem",
        "computational process",
        "data processing technique",
        "algorithm",
        "data integration task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of inferring missing information or relationships within a knowledge graph, typically using algorithms and techniques such as rule learning.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "knowledge graph completion",
          "local_types": [
            "task",
            "data processing technique",
            "algorithm"
          ],
          "iri": "Entity-knowledge_graph_completion-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-9",
          "local_name": "knowledge graph completion",
          "local_types": [
            "process",
            "task",
            "completion"
          ],
          "iri": "Entity-knowledge_graph_completion-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-1",
          "local_name": "knowledge graph completion",
          "local_types": [
            "task",
            "problem"
          ],
          "iri": "Entity-knowledge_graph_completion-Mention-3"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "Knowledge graph completion",
          "local_types": [
            "research area",
            "field of study"
          ],
          "iri": "Entity-knowledge_graph_completion-Mention-4"
        },
        {
          "reference": "Section-9-Paragraph-3-Sentence-3",
          "local_name": "knowledge graph completion",
          "local_types": [
            "task",
            "challenge",
            "problem",
            "completion",
            "research area"
          ],
          "iri": "Entity-knowledge_graph_completion-Mention-5"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-5",
          "local_name": "knowledge graph completion",
          "local_types": [
            "data integration task",
            "concept",
            "information retrieval problem",
            "task"
          ],
          "iri": "Entity-knowledge_graph_completion-Mention-6"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "knowledge graph completion process",
          "local_types": [
            "process",
            "data processing task",
            "task",
            "computational process"
          ],
          "iri": "Entity-knowledge_graph_completion-Mention-7"
        }
      ],
      "relevance": 0.66796875
    },
    "Entity-r_be_an_op_rule_of_the_form__2_": {
      "node_id": "r_be_an_op_rule_of_the_form__2_",
      "disambiguation_index": 0,
      "label": "r be an OP rule of the form (2)",
      "aliases": [
        "r be an OP rule of the form (2)",
        "Let r be an OP rule of the form (2)"
      ],
      "types": [
        "rule",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An open path rule, specifically one in the format of '(2)', which is a type of mathematical concept used for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "r be an OP rule of the form (2)",
          "local_types": [
            "rule",
            "mathematical concept"
          ],
          "iri": "Entity-r_be_an_op_rule_of_the_form__2_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "Let r be an OP rule of the form (2)",
          "local_types": [
            "rule",
            "mathematical concept"
          ],
          "iri": "Entity-r_be_an_op_rule_of_the_form__2_-Mention-2"
        }
      ],
      "relevance": 0.66748046875
    },
    "Entity-generate_query_of_the_form_p____e___and_p__e___": {
      "node_id": "generate_query_of_the_form_p____e___and_p__e___",
      "disambiguation_index": 0,
      "label": "generate queries of the form P(?, e') and P(e, ?)",
      "aliases": [
        "generate queries of the form P(?, e') and P(e, ?)"
      ],
      "types": [
        "query",
        "generation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of generating questions about missing links in a knowledge graph (KG) using Open Path rules mined from the KG's predicate facts.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "generate queries of the form P(?, e') and P(e, ?)",
          "local_types": [
            "query",
            "generation"
          ],
          "iri": "Entity-generate_query_of_the_form_p____e___and_p__e___-Mention-1"
        }
      ],
      "relevance": 0.66748046875
    },
    "Entity-our_proposed_system": {
      "node_id": "our_proposed_system",
      "disambiguation_index": 0,
      "label": "our proposed system",
      "aliases": [
        "our proposed system"
      ],
      "types": [
        "method",
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm for learning Open Path rules, capable of generating relevant questions automatically and mining quality OP rules from massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-1",
          "local_name": "our proposed system",
          "local_types": [
            "method",
            "system"
          ],
          "iri": "Entity-our_proposed_system-Mention-1"
        }
      ],
      "relevance": 0.66650390625
    },
    "Entity-for_oprl": {
      "node_id": "for_oprl",
      "disambiguation_index": 0,
      "label": "For OPRL",
      "aliases": [
        "For OPRL"
      ],
      "types": [
        "project"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The algorithm proposed for learning Open Path rules, designed to scale well and efficiently estimate rule quality.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "For OPRL",
          "local_types": [
            "project"
          ],
          "iri": "Entity-for_oprl-Mention-1"
        }
      ],
      "relevance": 0.666015625
    },
    "Entity-an_op_rule": {
      "node_id": "an_op_rule",
      "disambiguation_index": 0,
      "label": "an OP rule",
      "aliases": [
        "an OP rule"
      ],
      "types": [
        "rule",
        "OP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A rule in an Open Path (OP) knowledge graph completion framework, constrained existential rules that connect entities satisfying a subject predicate to entities forming the object argument of another predicate along a path.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "an OP rule",
          "local_types": [
            "rule",
            "OP rule"
          ],
          "iri": "Entity-an_op_rule-Mention-1"
        }
      ],
      "relevance": 0.666015625
    },
    "Entity-fully_automated_kg_completion": {
      "node_id": "fully_automated_kg_completion",
      "disambiguation_index": 0,
      "label": "fully automated KG completion",
      "aliases": [
        "unified framework for fully automated KG completion",
        "fully automated KG completion"
      ],
      "types": [
        "process",
        "methodology",
        "task",
        "approach",
        "completion"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of automatically completing knowledge graphs by filling gaps and adding new information.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-3",
          "local_name": "fully automated KG completion",
          "local_types": [
            "process",
            "task",
            "completion"
          ],
          "iri": "Entity-fully_automated_kg_completion-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-3",
          "local_name": "unified framework for fully automated KG completion",
          "local_types": [
            "approach",
            "methodology"
          ],
          "iri": "Entity-fully_automated_kg_completion-Mention-2"
        }
      ],
      "relevance": 0.66552734375
    },
    "Entity-let_r_be_an_open_path_rule_of_the_form__2__.": {
      "node_id": "let_r_be_an_open_path_rule_of_the_form__2__.",
      "disambiguation_index": 0,
      "label": "Let r be an open path rule of the form (2).",
      "aliases": [
        "Let r be an open path rule of the form (2)."
      ],
      "types": [
        "rule",
        "mathematical concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An open path rule, specifically one in the format of equation (2), which is used for estimating the quality or fitness of rules learned through OPRL algorithm.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-15-Sentence-1",
          "local_name": "Let r be an open path rule of the form (2).",
          "local_types": [
            "rule",
            "mathematical concept"
          ],
          "iri": "Entity-let_r_be_an_open_path_rule_of_the_form__2__.-Mention-1"
        }
      ],
      "relevance": 0.66552734375
    },
    "Entity-f_co__._": {
      "node_id": "f_co__._",
      "disambiguation_index": 0,
      "label": "f_co(.)",
      "aliases": [
        "f_co(.)"
      ],
      "types": [
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel embedding-based fitness function used to efficiently estimate rule quality in Open Path (OP) rule learning for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "f_co(.)",
          "local_types": [
            "function"
          ],
          "iri": "Entity-f_co__._-Mention-1"
        }
      ],
      "relevance": 0.66552734375
    },
    "Entity-there_remain": {
      "node_id": "there_remain",
      "disambiguation_index": 0,
      "label": "There remain",
      "aliases": [
        "There remain"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Future research directions and potential applications of the proposed method OPRL, including learning rules with more complex shapes or numerical attributes, integrating a link predictor, and human-curated maintenance on an enterprise Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "There remain",
          "local_types": [
            "research"
          ],
          "iri": "Entity-there_remain-Mention-1"
        }
      ],
      "relevance": 0.6650390625
    },
    "Entity-op_case": {
      "node_id": "op_case",
      "disambiguation_index": 0,
      "label": "OP case",
      "aliases": [
        "OP case",
        "the OP case"
      ],
      "types": [
        "problem formulation",
        "operation",
        "optimization problem",
        "problem-solving context",
        "operational scenario",
        "case"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The Open Path (OP) case, which involves learning constrained existential rules that connect entities along a path in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "OP case",
          "local_types": [
            "problem formulation",
            "operation",
            "optimization problem",
            "problem-solving context",
            "operational scenario",
            "case"
          ],
          "iri": "Entity-op_case-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "the OP case",
          "local_types": [
            "case"
          ],
          "iri": "Entity-op_case-Mention-2"
        }
      ],
      "relevance": 0.66455078125
    },
    "Entity-our_question_in_this_paper": {
      "node_id": "our_question_in_this_paper",
      "disambiguation_index": 0,
      "label": "our questions in this paper",
      "aliases": [
        "our questions in this paper"
      ],
      "types": [
        "questions",
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of questions that are being asked or generated by the OPRL algorithm for knowledge graph completion purposes.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-4",
          "local_name": "our questions in this paper",
          "local_types": [
            "questions",
            "paper"
          ],
          "iri": "Entity-our_question_in_this_paper-Mention-1"
        }
      ],
      "relevance": 0.66455078125
    },
    "Entity-we_(9)": {
      "node_id": "we_(9)",
      "disambiguation_index": 9,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of this paper, proposing an approach for learning rules with free variables from Knowledge Graphs (KGs) and using them to generate queries soliciting missing facts.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(9)-Mention-1"
        }
      ],
      "relevance": 0.6640625
    },
    "Entity-on_the_other_hand__in_an_op_rule_like_citizenof__x__t___marriedto__x__z___parentof__z__y_": {
      "node_id": "on_the_other_hand__in_an_op_rule_like_citizenof__x__t___marriedto__x__z___parentof__z__y_",
      "disambiguation_index": 0,
      "label": "On the other hand, in an OP rule like citizenOf(x,t) \u2190 marriedTo(x,z) \u2227 parentOf(z,y)",
      "aliases": [
        "On the other hand, in an OP rule like citizenOf(x,t) \u2190 marriedTo(x,z) \u2227 parentOf(z,y)",
        "in an OP rule like citizenOf(x, t) \u2190 marriedTo(x, z) \u2227 parentOf(z, y)"
      ],
      "types": [
        "rule",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An example of Open Path (OP) rules used for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "On the other hand, in an OP rule like citizenOf(x,t) \u2190 marriedTo(x,z) \u2227 parentOf(z,y)",
          "local_types": [
            "rule",
            "logic"
          ],
          "iri": "Entity-on_the_other_hand__in_an_op_rule_like_citizenof__x__t___marriedto__x__z___parentof__z__y_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "in an OP rule like citizenOf(x, t) \u2190 marriedTo(x, z) \u2227 parentOf(z, y)",
          "local_types": [
            "rule",
            "logic"
          ],
          "iri": "Entity-on_the_other_hand__in_an_op_rule_like_citizenof__x__t___marriedto__x__z___parentof__z__y_-Mention-2"
        }
      ],
      "relevance": 0.66357421875
    },
    "Entity-a__p1__a__p2_": {
      "node_id": "a__p1__a__p2_",
      "disambiguation_index": 0,
      "label": "A(P1) A(P2)",
      "aliases": [
        "A(P1) A(P2)"
      ],
      "types": [
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A constrained existential rule that completes a knowledge graph by generating relevant queries when there is no closed rule to answer the query or when the correct answer is a missing entity not present in the KG.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-2",
          "local_name": "A(P1) A(P2)",
          "local_types": [
            "expression"
          ],
          "iri": "Entity-a__p1__a__p2_-Mention-1"
        }
      ],
      "relevance": 0.66259765625
    },
    "Entity-the_performance_of_oprl_query": {
      "node_id": "the_performance_of_oprl_query",
      "disambiguation_index": 0,
      "label": "the performance of OPRL queries",
      "aliases": [
        "the performance of OPRL queries"
      ],
      "types": [
        "performance",
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The performance of OPRL queries refers to the evaluation metrics (precision, recall, and F1-score) of the queries generated by Open Path Rule Learning (OPRL) algorithm.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "the performance of OPRL queries",
          "local_types": [
            "performance",
            "query"
          ],
          "iri": "Entity-the_performance_of_oprl_query-Mention-1"
        }
      ],
      "relevance": 0.662109375
    },
    "Entity-to_find_distinct_entity__we_sum_each_row_corresponding_to_each_value_for_the_first_argument_to_obtain_the_vector_v__1___b_": {
      "node_id": "to_find_distinct_entity__we_sum_each_row_corresponding_to_each_value_for_the_first_argument_to_obtain_the_vector_v__1___b_",
      "disambiguation_index": 0,
      "label": "To find distinct entities, we sum each row corresponding to each value for the first argument to obtain the vector v(1)(B)",
      "aliases": [
        "To find distinct entities, we sum each row corresponding to each value for the first argument to obtain the vector v(1)(B)"
      ],
      "types": [
        "algorithm",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A method used in evaluating OP rules from Knowledge Graphs by computing a vector representing the number of distinct entities that satisfy the body of a rule",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-3",
          "local_name": "To find distinct entities, we sum each row corresponding to each value for the first argument to obtain the vector v(1)(B)",
          "local_types": [
            "algorithm",
            "mathematics"
          ],
          "iri": "Entity-to_find_distinct_entity__we_sum_each_row_corresponding_to_each_value_for_the_first_argument_to_obtain_the_vector_v__1___b_-Mention-1"
        }
      ],
      "relevance": 0.6611328125
    },
    "Entity-in_closed_rule": {
      "node_id": "in_closed_rule",
      "disambiguation_index": 0,
      "label": "In Closed rules",
      "aliases": [
        "In Closed rules"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of logical rule that completes a knowledge graph by predicting missing facts or generating relevant queries, where head variables occur in the body of the rule and all variables appear at least twice.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "In Closed rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-in_closed_rule-Mention-1"
        }
      ],
      "relevance": 0.66064453125
    },
    "Entity-a_novel_method_for_learning_open_path_rule_from_a_kg": {
      "node_id": "a_novel_method_for_learning_open_path_rule_from_a_kg",
      "disambiguation_index": 0,
      "label": "a novel method for learning open path rules from a KG",
      "aliases": [
        "a novel method for learning open path rules from a KG"
      ],
      "types": [
        "methodology",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology for extracting or generating rules that describe paths of relationships within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-2",
          "local_name": "a novel method for learning open path rules from a KG",
          "local_types": [
            "methodology",
            "knowledge graph"
          ],
          "iri": "Entity-a_novel_method_for_learning_open_path_rule_from_a_kg-Mention-1"
        }
      ],
      "relevance": 0.65966796875
    },
    "Entity-kg_completion": {
      "node_id": "kg_completion",
      "disambiguation_index": 0,
      "label": "KG completion",
      "aliases": [
        "KG completion",
        "KG Completion"
      ],
      "types": [
        "process",
        "task",
        "knowledge graph task",
        "problem",
        "completion",
        "information retrieval",
        "knowledge graph",
        "completion method",
        "problem solving",
        "method",
        "information system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of completing or filling gaps in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "KG completion",
          "local_types": [
            "task",
            "knowledge graph task",
            "completion",
            "information retrieval",
            "knowledge graph"
          ],
          "iri": "Entity-kg_completion-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "KG completion",
          "local_types": [
            "knowledge graph",
            "completion method",
            "method"
          ],
          "iri": "Entity-kg_completion-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "KG Completion",
          "local_types": [
            "process",
            "task"
          ],
          "iri": "Entity-kg_completion-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-1",
          "local_name": "KG Completion",
          "local_types": [
            "problem",
            "information retrieval",
            "task",
            "knowledge graph task"
          ],
          "iri": "Entity-kg_completion-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "KG completion",
          "local_types": [
            "problem",
            "task",
            "problem solving"
          ],
          "iri": "Entity-kg_completion-Mention-5"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "KG completion",
          "local_types": [
            "knowledge graph",
            "information system"
          ],
          "iri": "Entity-kg_completion-Mention-6"
        }
      ],
      "relevance": 0.6591796875
    },
    "Entity-oprl_s_performance": {
      "node_id": "oprl_s_performance",
      "disambiguation_index": 0,
      "label": "OPRL's performance",
      "aliases": [
        "OPRL's performance"
      ],
      "types": [
        "performance"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The performance metrics for OPRL's query generation algorithm on three knowledge graphs (FB15KSE, YAGO2 core, and Poker)",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-3",
          "local_name": "OPRL's performance",
          "local_types": [
            "performance"
          ],
          "iri": "Entity-oprl_s_performance-Mention-1"
        }
      ],
      "relevance": 0.6591796875
    },
    "Entity-reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact": {
      "node_id": "reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact",
      "disambiguation_index": 0,
      "label": "reconstructing the KG based on the learned embeddings to predict new facts",
      "aliases": [
        "reconstructing the KG based on the learned embeddings to predict new facts"
      ],
      "types": [
        "phase",
        "step"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of constructing a knowledge graph (KG) using learned embeddings to make predictions about new facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "reconstructing the KG based on the learned embeddings to predict new facts",
          "local_types": [
            "phase",
            "step"
          ],
          "iri": "Entity-reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact-Mention-1"
        }
      ],
      "relevance": 0.65869140625
    },
    "Entity-we_can_find_no_previously_prepared_data__so_we_randomly_partition_90__for_training_and_10__for_testing_.": {
      "node_id": "we_can_find_no_previously_prepared_data__so_we_randomly_partition_90__for_training_and_10__for_testing_.",
      "disambiguation_index": 0,
      "label": "we can find no previously prepared data, so we randomly partition 90% for training and 10% for testing.",
      "aliases": [
        "we can find no previously prepared data, so we randomly partition 90% for training and 10% for testing."
      ],
      "types": [
        "data",
        "partitioning"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The dataset used to train and test OPRL's ability to learn Open Path rules from Poker and YAGO2 core Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-3",
          "local_name": "we can find no previously prepared data, so we randomly partition 90% for training and 10% for testing.",
          "local_types": [
            "data",
            "partitioning"
          ],
          "iri": "Entity-we_can_find_no_previously_prepared_data__so_we_randomly_partition_90__for_training_and_10__for_testing_.-Mention-1"
        }
      ],
      "relevance": 0.65869140625
    },
    "Entity-by_rule_learning": {
      "node_id": "by_rule_learning",
      "disambiguation_index": 0,
      "label": "by rule learning",
      "aliases": [
        "by rule learning"
      ],
      "types": [
        "technique"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A technique used in knowledge graph completion methods for automatically generating rules to complete incomplete Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "by rule learning",
          "local_types": [
            "technique"
          ],
          "iri": "Entity-by_rule_learning-Mention-1"
        }
      ],
      "relevance": 0.65869140625
    },
    "Entity-the_problem_of_rule-based_knowledge_graph_completion": {
      "node_id": "the_problem_of_rule-based_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "the problem of rule-based knowledge graph completion",
      "aliases": [
        "the problem of rule-based knowledge graph completion"
      ],
      "types": [
        "problem",
        "knowledge graph completion"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept refers to a challenge or issue related to completing a knowledge graph using rules, where the goal is not only to predict missing facts but also to identify unknown entities that are absent from the graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-4",
          "local_name": "the problem of rule-based knowledge graph completion",
          "local_types": [
            "problem",
            "knowledge graph completion"
          ],
          "iri": "Entity-the_problem_of_rule-based_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.65869140625
    },
    "Entity-for_akgc": {
      "node_id": "for_akgc",
      "disambiguation_index": 0,
      "label": "For AKGC",
      "aliases": [
        "For AKGC"
      ],
      "types": [
        "research",
        "context"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of generating relevant questions about a named predicate or multiple predicates using Open Path (OP) rules mined from training data to infer missing links in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "For AKGC",
          "local_types": [
            "research",
            "context"
          ],
          "iri": "Entity-for_akgc-Mention-1"
        }
      ],
      "relevance": 0.65869140625
    },
    "Entity-high-performing_rule": {
      "node_id": "high-performing_rule",
      "disambiguation_index": 0,
      "label": "high-performing rules",
      "aliases": [
        "high-performing rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "High-performing rules refer to rules that are constrained existential and used for learning Open Path (OP) rules, which can generate relevant queries even when there is no closed rule or missing entity present in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "high-performing rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-high-performing_rule-Mention-1"
        }
      ],
      "relevance": 0.65869140625
    },
    "Entity-our_second_set_of_experiment": {
      "node_id": "our_second_set_of_experiment",
      "disambiguation_index": 0,
      "label": "Our second set of experiments",
      "aliases": [
        "Our second set of experiments"
      ],
      "types": [
        "research",
        "experiment"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A series of experiments that evaluate the relevance of queries generated by Open Path (OP) rules learned using the OP Rule Learning (OPRL) algorithm.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "Our second set of experiments",
          "local_types": [
            "research",
            "experiment"
          ],
          "iri": "Entity-our_second_set_of_experiment-Mention-1"
        }
      ],
      "relevance": 0.658203125
    },
    "Entity-entity_e_1__...__e___n-1__in_the_kg": {
      "node_id": "entity_e_1__...__e___n-1__in_the_kg",
      "disambiguation_index": 0,
      "label": "entities e_1, ..., e_{n-1} in the KG",
      "aliases": [
        "entities e_1, ..., e_{n-1} in the KG"
      ],
      "types": [
        "list of entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of entities that can be used to instantiate an open path rule, which generates queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "entities e_1, ..., e_{n-1} in the KG",
          "local_types": [
            "list of entities"
          ],
          "iri": "Entity-entity_e_1__...__e___n-1__in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.65625
    },
    "Entity-a_novel_algorithm": {
      "node_id": "a_novel_algorithm",
      "disambiguation_index": 0,
      "label": "a novel algorithm",
      "aliases": [
        "a novel algorithm"
      ],
      "types": [
        "algorithm",
        "novel"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A machine learning model that learns constrained existential rules (Open Path rules) to complete knowledge graphs by generating relevant queries.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "a novel algorithm",
          "local_types": [
            "algorithm",
            "novel"
          ],
          "iri": "Entity-a_novel_algorithm-Mention-1"
        }
      ],
      "relevance": 0.65576171875
    },
    "Entity-e_2": {
      "node_id": "e_2",
      "disambiguation_index": 0,
      "label": "e_2",
      "aliases": [
        "e_2"
      ],
      "types": [
        "variable",
        "argument",
        "entity",
        "object",
        "unknown entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An OP rule that generates queries about predicate P and entities in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "e_2",
          "local_types": [
            "entity",
            "object"
          ],
          "iri": "Entity-e_2-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "e_2",
          "local_types": [
            "variable",
            "argument",
            "entity",
            "object"
          ],
          "iri": "Entity-e_2-Mention-2"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "e_2",
          "local_types": [
            "object",
            "variable",
            "entity",
            "unknown entity"
          ],
          "iri": "Entity-e_2-Mention-3"
        }
      ],
      "relevance": 0.6533203125
    },
    "Entity-specific_fact_that__if_true__are_missing_from_the_kg": {
      "node_id": "specific_fact_that__if_true__are_missing_from_the_kg",
      "disambiguation_index": 0,
      "label": "specific facts that, if true, are missing from the KG",
      "aliases": [
        "specific facts that, if true, are missing from the KG"
      ],
      "types": [
        "fact",
        "knowledge graph entity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Missing facts in a Knowledge Graph (KG) that can be inferred by Closed rules",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "specific facts that, if true, are missing from the KG",
          "local_types": [
            "fact",
            "knowledge graph entity"
          ],
          "iri": "Entity-specific_fact_that__if_true__are_missing_from_the_kg-Mention-1"
        }
      ],
      "relevance": 0.6533203125
    },
    "Entity-to_compute_opsc_and_ophc": {
      "node_id": "to_compute_opsc_and_ophc",
      "disambiguation_index": 0,
      "label": "To compute OPSC and OPHC",
      "aliases": [
        "To compute OPSC and OPHC"
      ],
      "types": [
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A method for evaluating the quality of Open Path (OP) rules in knowledge graph completion by checking the satisfiability of body atoms.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-1",
          "local_name": "To compute OPSC and OPHC",
          "local_types": [
            "method"
          ],
          "iri": "Entity-to_compute_opsc_and_ophc-Mention-1"
        }
      ],
      "relevance": 0.65283203125
    },
    "Entity-for_example_(1)": {
      "node_id": "for_example_(1)",
      "disambiguation_index": 1,
      "label": "For example",
      "aliases": [
        "For example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific example of a rule-based knowledge graph completion process that demonstrates how to generate queries even when there is no closed rule or missing entity in the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "For example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_example_(1)-Mention-1"
        }
      ],
      "relevance": 0.65283203125
    },
    "Entity-if_we_have_the_fact_in_the_kg": {
      "node_id": "if_we_have_the_fact_in_the_kg",
      "disambiguation_index": 0,
      "label": "if we have the facts in the KG",
      "aliases": [
        "if we have the facts in the KG"
      ],
      "types": [
        "facts",
        "KG"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific instance of a closed existential rule that completes a knowledge graph by inferring a new fact from existing facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "if we have the facts in the KG",
          "local_types": [
            "facts",
            "KG"
          ],
          "iri": "Entity-if_we_have_the_fact_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.65283203125
    },
    "Entity-rule_learning_method_for_kg": {
      "node_id": "rule_learning_method_for_kg",
      "disambiguation_index": 0,
      "label": "Rule learning methods for KGs",
      "aliases": [
        "Rule learning methods for KGs"
      ],
      "types": [
        "method",
        "methodology",
        "research area"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of techniques or approaches for learning and applying logical rules in Knowledge Graphs (KGs) to make predictions about facts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "Rule learning methods for KGs",
          "local_types": [
            "method",
            "methodology",
            "research area"
          ],
          "iri": "Entity-rule_learning_method_for_kg-Mention-1"
        }
      ],
      "relevance": 0.65234375
    },
    "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg": {
      "node_id": "the_embeddings_for_predicate_and_argument_in_the_sample_kg",
      "disambiguation_index": 0,
      "label": "the embeddings for predicates and arguments in the sample KG",
      "aliases": [
        "the embeddings for predicates and arguments in the sample KG"
      ],
      "types": [
        "data",
        "embeddings"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of vector representations computed for predicates, arguments, or entities within a reduced Knowledge Graph (KG) used to estimate rule quality.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "the embeddings for predicates and arguments in the sample KG",
          "local_types": [
            "data",
            "embeddings"
          ],
          "iri": "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg-Mention-1"
        }
      ],
      "relevance": 0.65185546875
    },
    "Entity-our_active_knowledge_graph_completion_task": {
      "node_id": "our_active_knowledge_graph_completion_task",
      "disambiguation_index": 0,
      "label": "our active knowledge graph completion task",
      "aliases": [
        "our active knowledge graph completion task"
      ],
      "types": [
        "knowledge graph",
        "project",
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of automatically generating and learning constrained existential rules to complete a Knowledge Graph by answering unclear queries or generating relevant questions.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "our active knowledge graph completion task",
          "local_types": [
            "knowledge graph",
            "project",
            "task"
          ],
          "iri": "Entity-our_active_knowledge_graph_completion_task-Mention-1"
        }
      ],
      "relevance": 0.6513671875
    },
    "Entity-our_query_are_highly_relevant": {
      "node_id": "our_query_are_highly_relevant",
      "disambiguation_index": 0,
      "label": "our queries are highly relevant",
      "aliases": [
        "our queries are highly relevant"
      ],
      "types": [
        "query",
        "relevance"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The queries generated by OPRL rules that have not been answered by the training data, indicating a high degree of relevance to completing the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "our queries are highly relevant",
          "local_types": [
            "query",
            "relevance"
          ],
          "iri": "Entity-our_query_are_highly_relevant-Mention-1"
        }
      ],
      "relevance": 0.6513671875
    },
    "Entity-rlvlr_and_scalekb": {
      "node_id": "rlvlr_and_scalekb",
      "disambiguation_index": 0,
      "label": "RLVLR and ScaleKB",
      "aliases": [
        "RLVLR and ScaleKB"
      ],
      "types": [
        "software",
        "tool",
        "knowledge graph completion tools",
        "rule learning systems",
        "software systems",
        "rule learning algorithms"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of knowledge graph completion tools, specifically RLVLR and ScaleKB, which employ closed path (CP) rules that are a kind of closed rule with no free variables.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "RLVLR and ScaleKB",
          "local_types": [
            "software",
            "tool",
            "knowledge graph completion tools",
            "rule learning systems",
            "software systems",
            "rule learning algorithms"
          ],
          "iri": "Entity-rlvlr_and_scalekb-Mention-1"
        }
      ],
      "relevance": 0.65087890625
    },
    "Entity-the_quality_of_rule": {
      "node_id": "the_quality_of_rule",
      "disambiguation_index": 0,
      "label": "The quality of rules",
      "aliases": [
        "The quality of rules"
      ],
      "types": [
        "quality"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A measure of how well OPRL finds high-quality Open Path (OP) rules, calculated using OPSC/OPHC scores against full benchmark Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "The quality of rules",
          "local_types": [
            "quality"
          ],
          "iri": "Entity-the_quality_of_rule-Mention-1"
        }
      ],
      "relevance": 0.65087890625
    },
    "Entity-the_distribution_of_mined_rule_by_opsc_and_length": {
      "node_id": "the_distribution_of_mined_rule_by_opsc_and_length",
      "disambiguation_index": 0,
      "label": "the distribution of mined rules by OPSC and length",
      "aliases": [
        "the distribution of mined rules by OPSC and length"
      ],
      "types": [
        "data_distribution",
        "rules",
        "distribution"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A graphical representation showing the number of mined rules plotted against their quality scores (OPSC) and lengths, illustrating the performance of the OPRL algorithm in learning high-quality rules from large knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "the distribution of mined rules by OPSC and length",
          "local_types": [
            "data_distribution",
            "rules",
            "distribution"
          ],
          "iri": "Entity-the_distribution_of_mined_rule_by_opsc_and_length-Mention-1"
        }
      ],
      "relevance": 0.65087890625
    },
    "Entity-oprl_to_learn_op_rule_about_p_in_the_head_and_then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___": {
      "node_id": "oprl_to_learn_op_rule_about_p_in_the_head_and_then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___",
      "disambiguation_index": 0,
      "label": "OPRL to learn OP rules about P in the head and then use the rules to induce queries of the form P(?, e') and P(e, ?)",
      "aliases": [
        "OPRL to learn OP rules about P in the head and then use the rules to induce queries of the form P(?, e') and P(e, ?)"
      ],
      "types": [
        "tool",
        "learning",
        "rules"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A tool that learns rules about a concept or property (P) in its head and uses those rules to generate queries.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "OPRL to learn OP rules about P in the head and then use the rules to induce queries of the form P(?, e') and P(e, ?)",
          "local_types": [
            "tool",
            "learning",
            "rules"
          ],
          "iri": "Entity-oprl_to_learn_op_rule_about_p_in_the_head_and_then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___-Mention-1"
        }
      ],
      "relevance": 0.650390625
    },
    "Entity-still": {
      "node_id": "still",
      "disambiguation_index": 0,
      "label": "Still",
      "aliases": [
        "Still"
      ],
      "types": [
        "phrase"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept that refers to relevant queries generated from Open Path (OP) rules learned over training data, which are constrained existential rules for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "Still",
          "local_types": [
            "phrase"
          ],
          "iri": "Entity-still-Mention-1"
        }
      ],
      "relevance": 0.64990234375
    },
    "Entity-our_op_language": {
      "node_id": "our_op_language",
      "disambiguation_index": 0,
      "label": "our OP language",
      "aliases": [
        "our OP language"
      ],
      "types": [
        "language model",
        "OP language"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The Open Path (OP) language, a type of constrained existential rule used for learning and generating queries to complete knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "our OP language",
          "local_types": [
            "language model",
            "OP language"
          ],
          "iri": "Entity-our_op_language-Mention-1"
        }
      ],
      "relevance": 0.64990234375
    },
    "Entity-the_fitness_function__f_op__.__or_f_coo__.___over_the_other": {
      "node_id": "the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "disambiguation_index": 0,
      "label": "the fitness functions, f_op(.) or f_coo(.), over the other",
      "aliases": [
        "the fitness functions, f_op(.) or f_coo(.), over the other"
      ],
      "types": [
        "fitness function",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The two alternative quality estimation functions used in OPRL for evaluating and ranking open path rules: co-occurrence (f_coo(.)) based on predicate embeddings and local co-occurrences along a rule's path, and open path (f_op(.)) using both entity and predicate embeddings to represent the latent features of a path connecting its endpoints.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-1",
          "local_name": "the fitness functions, f_op(.) or f_coo(.), over the other",
          "local_types": [
            "fitness function",
            "algorithm"
          ],
          "iri": "Entity-the_fitness_function__f_op__.__or_f_coo__.___over_the_other-Mention-1"
        }
      ],
      "relevance": 0.6494140625
    },
    "Entity-fitness_function_adapted_from_rlvlr": {
      "node_id": "fitness_function_adapted_from_rlvlr",
      "disambiguation_index": 0,
      "label": "fitness function adapted from RLVLR",
      "aliases": [
        "fitness function adapted from RLVLR"
      ],
      "types": [
        "algorithm",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A mathematical concept and algorithm used to estimate rule quality for learning Open Path rules, which are constrained existential rules that generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-7-Sentence-3",
          "local_name": "fitness function adapted from RLVLR",
          "local_types": [
            "algorithm",
            "mathematical concept"
          ],
          "iri": "Entity-fitness_function_adapted_from_rlvlr-Mention-1"
        }
      ],
      "relevance": 0.6494140625
    },
    "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation": {
      "node_id": "efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation",
      "disambiguation_index": 0,
      "label": "efficient method to evaluate OP rules by exactly computing the quality of each rule using matrix and vector operations",
      "aliases": [
        "an efficient method",
        "an efficient method to exactly compute the quality of each rule by matrix and vector operations",
        "efficient method to evaluate OP rules by exactly computing the quality of each rule using matrix and vector operations"
      ],
      "types": [
        "methodology",
        "approach",
        "computational approach",
        "algorithm",
        "method",
        "computational complexity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A novel methodology for evaluating Open Path (OP) rules, which computes the quality of each rule using matrix and vector operations.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-4",
          "local_name": "efficient method to evaluate OP rules by exactly computing the quality of each rule using matrix and vector operations",
          "local_types": [
            "methodology",
            "computational complexity"
          ],
          "iri": "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-4",
          "local_name": "an efficient method to exactly compute the quality of each rule by matrix and vector operations",
          "local_types": [
            "method",
            "algorithm",
            "computational approach"
          ],
          "iri": "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation-Mention-2"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-4",
          "local_name": "an efficient method",
          "local_types": [
            "method",
            "approach"
          ],
          "iri": "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation-Mention-3"
        }
      ],
      "relevance": 0.6494140625
    },
    "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg": {
      "node_id": "for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "disambiguation_index": 0,
      "label": "For an OP rule of the form (2), if an instance of the rule body such as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') exists in the KG",
      "aliases": [
        "For an OP rule of the form (2), if an instance of the rule body such as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') exists in the KG"
      ],
      "types": [
        "rule",
        "KG"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A rule that exists in a knowledge graph (KG) and has instances of its body",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "For an OP rule of the form (2), if an instance of the rule body such as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') exists in the KG",
          "local_types": [
            "rule",
            "KG"
          ],
          "iri": "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.6484375
    },
    "Entity-in_this_way__we_go_beyond_link_prediction_to_infer_relevant_query_for_missing_link__that_is__active_kgc": {
      "node_id": "in_this_way__we_go_beyond_link_prediction_to_infer_relevant_query_for_missing_link__that_is__active_kgc",
      "disambiguation_index": 0,
      "label": "In this way, we go beyond link prediction to infer relevant queries for missing links, that is, Active KGC",
      "aliases": [
        "In this way, we go beyond link prediction to infer relevant queries for missing links, that is, Active KGC",
        "we go beyond link prediction to infer relevant queries for missing links, that is, Active KGC."
      ],
      "types": [
        "methodology",
        "research",
        "approach",
        "Active KGC"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Active Knowledge Graph Completion (AKGC) method used to generate relevant questions or queries for missing links in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-6-Sentence-1",
          "local_name": "In this way, we go beyond link prediction to infer relevant queries for missing links, that is, Active KGC",
          "local_types": [
            "research",
            "methodology"
          ],
          "iri": "Entity-in_this_way__we_go_beyond_link_prediction_to_infer_relevant_query_for_missing_link__that_is__active_kgc-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-6-Sentence-1",
          "local_name": "we go beyond link prediction to infer relevant queries for missing links, that is, Active KGC.",
          "local_types": [
            "research",
            "approach",
            "Active KGC"
          ],
          "iri": "Entity-in_this_way__we_go_beyond_link_prediction_to_infer_relevant_query_for_missing_link__that_is__active_kgc-Mention-2"
        }
      ],
      "relevance": 0.64794921875
    },
    "Entity-to_rapidly_estimate_a_rule_s_quality": {
      "node_id": "to_rapidly_estimate_a_rule_s_quality",
      "disambiguation_index": 0,
      "label": "to rapidly estimate a rule's quality",
      "aliases": [
        "to rapidly estimate a rule's quality"
      ],
      "types": [
        "evaluation",
        "quality assessment"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm for learning constrained existential rules (Open Path rules) that can generate relevant queries for knowledge graph completion",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "to rapidly estimate a rule's quality",
          "local_types": [
            "evaluation",
            "quality assessment"
          ],
          "iri": "Entity-to_rapidly_estimate_a_rule_s_quality-Mention-1"
        }
      ],
      "relevance": 0.64794921875
    },
    "Entity-a_maximum_rule_length_of_4": {
      "node_id": "a_maximum_rule_length_of_4",
      "disambiguation_index": 0,
      "label": "a maximum rule length of 4",
      "aliases": [
        "a maximum rule length of 4"
      ],
      "types": [
        "parameter",
        "length"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The maximum allowed length of rules generated during knowledge graph completion using OPRL's algorithm.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-1",
          "local_name": "a maximum rule length of 4",
          "local_types": [
            "parameter",
            "length"
          ],
          "iri": "Entity-a_maximum_rule_length_of_4-Mention-1"
        }
      ],
      "relevance": 0.64794921875
    },
    "Entity-rlvlr": {
      "node_id": "rlvlr",
      "disambiguation_index": 0,
      "label": "RLVLR",
      "aliases": [
        "RLvLR",
        "RLVLR"
      ],
      "types": [
        "study",
        "machine learning",
        "rule-based link predictor",
        "approach",
        "framework",
        "system",
        "research area",
        "link predictor",
        "software",
        "tool",
        "software system",
        "predictor",
        "model",
        "paper",
        "machine learning model",
        "reference",
        "method",
        "fitness_function",
        "methodology",
        "research framework",
        "publication",
        "architecture",
        "machine learning algorithm",
        "research project",
        "research paper",
        "algorithm",
        "artificial intelligence",
        "language model",
        "academic work"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A system or framework for learning existential rules from knowledge graphs, used to complete incomplete KGs.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "RLVLR",
          "local_types": [
            "software",
            "tool",
            "software system",
            "algorithm",
            "system"
          ],
          "iri": "Entity-rlvlr-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "RLVLR",
          "local_types": [
            "architecture",
            "system",
            "algorithm"
          ],
          "iri": "Entity-rlvlr-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "RLVLR",
          "local_types": [
            "paper",
            "publication",
            "research paper",
            "architecture",
            "reference",
            "algorithm",
            "system"
          ],
          "iri": "Entity-rlvlr-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-4",
          "local_name": "RLVLR",
          "local_types": [
            "approach",
            "paper",
            "architecture",
            "algorithm",
            "method",
            "system"
          ],
          "iri": "Entity-rlvlr-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "RLVLR",
          "local_types": [
            "research project",
            "algorithm",
            "artificial intelligence",
            "language model",
            "system",
            "academic work"
          ],
          "iri": "Entity-rlvlr-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-3-Sentence-2",
          "local_name": "RLVLR",
          "local_types": [
            "model",
            "system",
            "framework",
            "algorithm"
          ],
          "iri": "Entity-rlvlr-Mention-6"
        },
        {
          "reference": "Section-9-Paragraph-7-Sentence-3",
          "local_name": "RLVLR",
          "local_types": [
            "fitness_function",
            "software",
            "algorithm"
          ],
          "iri": "Entity-rlvlr-Mention-7"
        },
        {
          "reference": "Section-9-Paragraph-11-Sentence-2",
          "local_name": "RLVLR",
          "local_types": [
            "study",
            "paper",
            "research paper",
            "algorithm",
            "academic work"
          ],
          "iri": "Entity-rlvlr-Mention-8"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-1",
          "local_name": "RLvLR",
          "local_types": [
            "link predictor",
            "tool",
            "predictor",
            "rule-based link predictor",
            "algorithm",
            "method",
            "system"
          ],
          "iri": "Entity-rlvlr-Mention-9"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "RLvLR",
          "local_types": [
            "model",
            "algorithm"
          ],
          "iri": "Entity-rlvlr-Mention-10"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "RLvLR",
          "local_types": [
            "machine learning model",
            "system",
            "algorithm"
          ],
          "iri": "Entity-rlvlr-Mention-11"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-6",
          "local_name": "RLvLR",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-rlvlr-Mention-12"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-7",
          "local_name": "RLvLR",
          "local_types": [
            "method",
            "methodology",
            "machine learning",
            "algorithm"
          ],
          "iri": "Entity-rlvlr-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "RLVLR",
          "local_types": [
            "methodology",
            "research framework",
            "algorithm",
            "machine learning algorithm",
            "research area"
          ],
          "iri": "Entity-rlvlr-Mention-14"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "RLvLR",
          "local_types": [
            "method",
            "system",
            "algorithm"
          ],
          "iri": "Entity-rlvlr-Mention-15"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-2",
          "local_name": "RLvLR",
          "local_types": [
            "method",
            "system",
            "algorithm"
          ],
          "iri": "Entity-rlvlr-Mention-16"
        }
      ],
      "relevance": 0.6474609375
    },
    "Entity-the_following_op_rule": {
      "node_id": "the_following_op_rule",
      "disambiguation_index": 0,
      "label": "the following OP rule",
      "aliases": [
        "our OP rules",
        "the following OP rule"
      ],
      "types": [
        "OP rule",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An OP rule that is constrained existential rules and can generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "the following OP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_following_op_rule-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-2",
          "local_name": "our OP rules",
          "local_types": [
            "OP rule"
          ],
          "iri": "Entity-the_following_op_rule-Mention-2"
        }
      ],
      "relevance": 0.6474609375
    },
    "Entity-_p__a____embeddings__k___.": {
      "node_id": "_p__a____embeddings__k___.",
      "disambiguation_index": 0,
      "label": "(P, A) := Embeddings(K').",
      "aliases": [
        "(P, A) := Embeddings(K')."
      ],
      "types": [
        "equation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The embeddings of predicates and arguments in a reduced knowledge graph (K') for use in estimating the quality of open path rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-6",
          "local_name": "(P, A) := Embeddings(K').",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-_p__a____embeddings__k___.-Mention-1"
        }
      ],
      "relevance": 0.64697265625
    },
    "Entity-a_novel_method_(1)": {
      "node_id": "a_novel_method_(1)",
      "disambiguation_index": 1,
      "label": "a novel method",
      "aliases": [
        "a novel method"
      ],
      "types": [
        "method",
        "novel_method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm for learning constrained existential rules from Knowledge Graphs, used for generating queries and completing missing links.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-3",
          "local_name": "a novel method",
          "local_types": [
            "method",
            "novel_method"
          ],
          "iri": "Entity-a_novel_method_(1)-Mention-1"
        }
      ],
      "relevance": 0.646484375
    },
    "Entity-p3__z1__y_": {
      "node_id": "p3__z1__y_",
      "disambiguation_index": 0,
      "label": "P3(z1, y)",
      "aliases": [
        "P3(z1, y)"
      ],
      "types": [
        "predicate",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The predicate representing an existential rule in the knowledge graph completion algorithm OPRL.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "P3(z1, y)",
          "local_types": [
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-p3__z1__y_-Mention-1"
        }
      ],
      "relevance": 0.64599609375
    },
    "Entity-closed_path_form": {
      "node_id": "closed_path_form",
      "disambiguation_index": 0,
      "label": "closed path forms",
      "aliases": [
        "closed path forms"
      ],
      "types": [
        "notation",
        "conceptual framework",
        "concept",
        "mathematical structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A conceptual framework or mathematical structure that represents a type of rule used for knowledge graph completion, characterized by its ability to generate queries and complete the graph even when there is no closed rule to answer the query.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "closed path forms",
          "local_types": [
            "notation",
            "conceptual framework",
            "concept",
            "mathematical structure"
          ],
          "iri": "Entity-closed_path_form-Mention-1"
        }
      ],
      "relevance": 0.6455078125
    },
    "Entity-in_the_absence_of_any_comparative_system_for_query_generation": {
      "node_id": "in_the_absence_of_any_comparative_system_for_query_generation",
      "disambiguation_index": 0,
      "label": "In the absence of any comparative system for query generation",
      "aliases": [
        "In the absence of any comparative system for query generation"
      ],
      "types": [
        "research",
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of baseline queries used to compare with queries generated by OPRL (Open Path Rule Learning) for query generation",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "In the absence of any comparative system for query generation",
          "local_types": [
            "research",
            "query"
          ],
          "iri": "Entity-in_the_absence_of_any_comparative_system_for_query_generation-Mention-1"
        }
      ],
      "relevance": 0.6455078125
    },
    "Entity-identifying_a_missing_fact_even_when_there_is_no_pattern__such_a_a_closed_rule__that_fully_instantiates_the_fact_in_the_kg_": {
      "node_id": "identifying_a_missing_fact_even_when_there_is_no_pattern__such_a_a_closed_rule__that_fully_instantiates_the_fact_in_the_kg_",
      "disambiguation_index": 0,
      "label": "Identifying a missing fact even when there is no pattern (such as a closed rule) that fully instantiates the fact in the KG;",
      "aliases": [
        "Identifying a missing fact even when there is no pattern (such as a closed rule) that fully instantiates the fact in the KG;"
      ],
      "types": [
        "problem"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The problem of identifying missing facts even when there is no pattern (such as a closed rule) that fully instantiates the fact in the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-2",
          "local_name": "Identifying a missing fact even when there is no pattern (such as a closed rule) that fully instantiates the fact in the KG;",
          "local_types": [
            "problem"
          ],
          "iri": "Entity-identifying_a_missing_fact_even_when_there_is_no_pattern__such_a_a_closed_rule__that_fully_instantiates_the_fact_in_the_kg_-Mention-1"
        }
      ],
      "relevance": 0.64501953125
    },
    "Entity-problem_of_active_knowledge_graph_completion__akgc_": {
      "node_id": "problem_of_active_knowledge_graph_completion__akgc_",
      "disambiguation_index": 0,
      "label": "problem of active knowledge graph completion (AKGC)",
      "aliases": [
        "problem of active knowledge graph completion (AKGC)",
        "active knowledge graph completion (AKGC)"
      ],
      "types": [
        "research problem",
        "computational problem",
        "challenge",
        "research challenge"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The problem of actively completing a knowledge graph by generating relevant queries that can introduce new entities or predict existing ones.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "problem of active knowledge graph completion (AKGC)",
          "local_types": [
            "challenge",
            "research problem"
          ],
          "iri": "Entity-problem_of_active_knowledge_graph_completion__akgc_-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "active knowledge graph completion (AKGC)",
          "local_types": [
            "computational problem",
            "research challenge"
          ],
          "iri": "Entity-problem_of_active_knowledge_graph_completion__akgc_-Mention-2"
        }
      ],
      "relevance": 0.64501953125
    },
    "Entity-pairwise_local_fitness_function": {
      "node_id": "pairwise_local_fitness_function",
      "disambiguation_index": 0,
      "label": "Pairwise local fitness functions",
      "aliases": [
        "Pairwise local fitness functions"
      ],
      "types": [
        "mathematical concept",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of mathematical concepts used to estimate the quality of Open Path rules in knowledge graph completion, based on the similarity between predicate embeddings and their corresponding argument entities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "Pairwise local fitness functions",
          "local_types": [
            "mathematical concept",
            "algorithm"
          ],
          "iri": "Entity-pairwise_local_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.64453125
    },
    "Entity-we_(10)": {
      "node_id": "we_(10)",
      "disambiguation_index": 10,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of this paper, referring to themselves as 'we', plan to extend and apply their proposed method OPRL in a setting for human-curated maintenance on an enterprise Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-4",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(10)-Mention-1"
        }
      ],
      "relevance": 0.64404296875
    },
    "Entity-existing_embedding-based_method": {
      "node_id": "existing_embedding-based_method",
      "disambiguation_index": 0,
      "label": "existing embedding-based methods",
      "aliases": [
        "existing embedding-based methods"
      ],
      "types": [
        "approach",
        "technique"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Existing approaches for learning and evaluating Open Path rules in knowledge graphs, which rely on computing embeddings of entities and predicates.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-1",
          "local_name": "existing embedding-based methods",
          "local_types": [
            "approach",
            "technique"
          ],
          "iri": "Entity-existing_embedding-based_method-Mention-1"
        }
      ],
      "relevance": 0.64306640625
    },
    "Entity-novel_embedding-based_heuristic_function": {
      "node_id": "novel_embedding-based_heuristic_function",
      "disambiguation_index": 0,
      "label": "novel embedding-based heuristic function",
      "aliases": [
        "a novel embedding-based heuristic function",
        "novel embedding-based heuristic function"
      ],
      "types": [
        "heuristic",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A novel algorithm for learning open path rules from a knowledge graph, which uses an embedding-based fitness function to efficiently estimate rule quality.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-3",
          "local_name": "novel embedding-based heuristic function",
          "local_types": [
            "function",
            "heuristic"
          ],
          "iri": "Entity-novel_embedding-based_heuristic_function-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-3",
          "local_name": "a novel embedding-based heuristic function",
          "local_types": [
            "function",
            "heuristic"
          ],
          "iri": "Entity-novel_embedding-based_heuristic_function-Mention-2"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-state-of-the-art_rule-based_link_predictor": {
      "node_id": "state-of-the-art_rule-based_link_predictor",
      "disambiguation_index": 0,
      "label": "state-of-the-art rule-based link predictor",
      "aliases": [
        "state-of-the-art rule-based link predictor"
      ],
      "types": [
        "algorithm",
        "predictor"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning open path rules that can generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-1",
          "local_name": "state-of-the-art rule-based link predictor",
          "local_types": [
            "algorithm",
            "predictor"
          ],
          "iri": "Entity-state-of-the-art_rule-based_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-even_when_there_is_no_pattern__such_a_a_closed_rule__that_fully_instantiates_the_fact_in_the_kg_": {
      "node_id": "even_when_there_is_no_pattern__such_a_a_closed_rule__that_fully_instantiates_the_fact_in_the_kg_",
      "disambiguation_index": 0,
      "label": "even when there is no pattern (such as a closed rule) that fully instantiates the fact in the KG;",
      "aliases": [
        "even when there is no pattern (such as a closed rule) that fully instantiates the fact in the KG;"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The condition where knowledge graph completion requires generating queries even when there is no existing pattern or rule to predict missing facts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-2",
          "local_name": "even when there is no pattern (such as a closed rule) that fully instantiates the fact in the KG;",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-even_when_there_is_no_pattern__such_a_a_closed_rule__that_fully_instantiates_the_fact_in_the_kg_-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-our_novel_heuristic_function_for_mining_op_rule": {
      "node_id": "our_novel_heuristic_function_for_mining_op_rule",
      "disambiguation_index": 0,
      "label": "our novel heuristic function for mining OP rules",
      "aliases": [
        "our novel heuristic function for mining OP rules"
      ],
      "types": [
        "function",
        "heuristic_function",
        "heuristic",
        "mining_method",
        "mining"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm, specifically a heuristic function, designed to mine Open Path (OP) rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-1",
          "local_name": "our novel heuristic function for mining OP rules",
          "local_types": [
            "function",
            "heuristic_function",
            "heuristic",
            "mining_method",
            "mining"
          ],
          "iri": "Entity-our_novel_heuristic_function_for_mining_op_rule-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-the_method_(1)": {
      "node_id": "the_method_(1)",
      "disambiguation_index": 1,
      "label": "the method",
      "aliases": [
        "the method"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The method refers to an algorithm for mining open-path rules from a knowledge graph, which involves sampling the KG, computing embeddings of predicates and arguments, generating OP rules, evaluating their quality using fitness functions, and eliminating redundancy.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-8",
          "local_name": "the method",
          "local_types": [
            "method"
          ],
          "iri": "Entity-the_method_(1)-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-this_section": {
      "node_id": "this_section",
      "disambiguation_index": 0,
      "label": "this section",
      "aliases": [
        "this section"
      ],
      "types": [
        "section"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The section where OP rules are shown to be used for Active Knowledge Graph Completion (AKGC) by generating relevant questions which can be posed to an oracle or a human expert.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "this section",
          "local_types": [
            "section"
          ],
          "iri": "Entity-this_section-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-existential_rule_with_a_different_form_to_the_usual_closed_path_rule_that_are_conventionally_used_for_knowledge_graph_completion_task": {
      "node_id": "existential_rule_with_a_different_form_to_the_usual_closed_path_rule_that_are_conventionally_used_for_knowledge_graph_completion_task",
      "disambiguation_index": 0,
      "label": "existential rules with a different form to the usual closed path rules that are conventionally used for knowledge graph completion tasks",
      "aliases": [
        "existential rules with a different form to the usual closed path rules that are conventionally used for knowledge graph completion tasks"
      ],
      "types": [
        "rule",
        "mathematical concept",
        "computational technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Existential rules with a different form from conventional closed-path rules, designed for knowledge graph completion tasks.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-3",
          "local_name": "existential rules with a different form to the usual closed path rules that are conventionally used for knowledge graph completion tasks",
          "local_types": [
            "rule",
            "mathematical concept",
            "computational technique"
          ],
          "iri": "Entity-existential_rule_with_a_different_form_to_the_usual_closed_path_rule_that_are_conventionally_used_for_knowledge_graph_completion_task-Mention-1"
        }
      ],
      "relevance": 0.6416015625
    },
    "Entity-for_poker_and_yago2_core": {
      "node_id": "for_poker_and_yago2_core",
      "disambiguation_index": 0,
      "label": "For Poker and YAGO2 core",
      "aliases": [
        "For Poker and YAGO2 core"
      ],
      "types": [
        "domain",
        "Poker domain",
        "YAGO2 core domain"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The dataset used to evaluate OPRL's performance on knowledge graph completion tasks, consisting of Poker and YAGO2 core domains.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-3",
          "local_name": "For Poker and YAGO2 core",
          "local_types": [
            "domain",
            "Poker domain",
            "YAGO2 core domain"
          ],
          "iri": "Entity-for_poker_and_yago2_core-Mention-1"
        }
      ],
      "relevance": 0.6416015625
    },
    "Entity-rule_learning_from_a_kg": {
      "node_id": "rule_learning_from_a_kg",
      "disambiguation_index": 0,
      "label": "rule learning from a KG",
      "aliases": [
        "rule learning from a KG"
      ],
      "types": [
        "methodology",
        "knowledge graph application",
        "machine learning technique",
        "topic",
        "knowledge graph",
        "knowledge discovery process",
        "knowledge discovery",
        "artificial intelligence",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of acquiring knowledge or insights by discovering patterns and relationships in data stored within a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "rule learning from a KG",
          "local_types": [
            "methodology",
            "knowledge graph application",
            "machine learning technique",
            "topic",
            "knowledge graph",
            "knowledge discovery process",
            "knowledge discovery",
            "artificial intelligence",
            "technique"
          ],
          "iri": "Entity-rule_learning_from_a_kg-Mention-1"
        }
      ],
      "relevance": 0.6416015625
    },
    "Entity-active_kgc": {
      "node_id": "active_kgc",
      "disambiguation_index": 0,
      "label": "Active KGC",
      "aliases": [
        "Active KGC"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A method or algorithm for actively generating relevant queries from knowledge graphs (KGs) to infer missing links, going beyond traditional link prediction.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-6-Sentence-1",
          "local_name": "Active KGC",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-active_kgc-Mention-1"
        }
      ],
      "relevance": 0.64111328125
    },
    "Entity-p____e___and_p__e___": {
      "node_id": "p____e___and_p__e___",
      "disambiguation_index": 0,
      "label": "P(?, e') and P(e, ?)",
      "aliases": [
        "P(?, e') and P(e, ?)"
      ],
      "types": [
        "query",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Active Knowledge Graph Completion (AKGC) task for predicate P, which involves generating queries of the form P(?, e') and P(e, ?) for entities e and e' occurring in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "P(?, e') and P(e, ?)",
          "local_types": [
            "query",
            "expression"
          ],
          "iri": "Entity-p____e___and_p__e___-Mention-1"
        }
      ],
      "relevance": 0.64111328125
    },
    "Entity-pathfinding___(1)": {
      "node_id": "pathfinding___(1)",
      "disambiguation_index": 1,
      "label": "PathFinding()",
      "aliases": [
        "PathFinding()"
      ],
      "types": [
        "algorithm",
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A function used in the Open Path Rule Learning (OPRL) algorithm for generating OP rules by exhaustively searching for paths comprising sequences of predicates with required patterns, and applying a fitness function to rapidly discard poor performers.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-13",
          "local_name": "PathFinding()",
          "local_types": [
            "algorithm",
            "function"
          ],
          "iri": "Entity-pathfinding___(1)-Mention-1"
        }
      ],
      "relevance": 0.640625
    },
    "Entity-open_path_(1)": {
      "node_id": "open_path_(1)",
      "disambiguation_index": 1,
      "label": "Open Path",
      "aliases": [
        "Open Path"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A constrained existential rule in knowledge graph completion that connects entities satisfying the subject argument of the head predicate to entities forming the object argument of the tail predicate along a path of entities that satisfy a chain of predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-1",
          "local_name": "Open Path",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-open_path_(1)-Mention-1"
        }
      ],
      "relevance": 0.640625
    },
    "Entity-p1__x__z0___p2__z0__z1___p3__z1__z2___p4__z2__z3___p5__z3__y_": {
      "node_id": "p1__x__z0___p2__z0__z1___p3__z1__z2___p4__z2__z3___p5__z3__y_",
      "disambiguation_index": 0,
      "label": "P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, z3) \u2227 P5(z3, y)",
      "aliases": [
        "P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, z3) \u2227 P5(z3, y)"
      ],
      "types": [
        "logic formula",
        "production rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A production rule used to generate OP rules for knowledge graph completion",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, z2) \u2227 P4(z2, z3) \u2227 P5(z3, y)",
          "local_types": [
            "logic formula",
            "production rule"
          ],
          "iri": "Entity-p1__x__z0___p2__z0__z1___p3__z1__z2___p4__z2__z3___p5__z3__y_-Mention-1"
        }
      ],
      "relevance": 0.64013671875
    },
    "Entity-let_r": {
      "node_id": "let_r",
      "disambiguation_index": 0,
      "label": "Let r",
      "aliases": [
        "Let r"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A notation representing an Open Path (OP) rule, which is a constrained existential rule used in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-8",
          "local_name": "Let r",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-let_r-Mention-1"
        }
      ],
      "relevance": 0.64013671875
    },
    "Entity-our_algorithm": {
      "node_id": "our_algorithm",
      "disambiguation_index": 0,
      "label": "our algorithm",
      "aliases": [
        "our algorithm"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel method for learning open path rules from a knowledge graph, including a novel embedding-based heuristic function and evaluation method.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-5",
          "local_name": "our algorithm",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-our_algorithm-Mention-1"
        }
      ],
      "relevance": 0.6396484375
    },
    "Entity-we_propose_learning_open_path_rule__op__from_which_we_infer": {
      "node_id": "we_propose_learning_open_path_rule__op__from_which_we_infer",
      "disambiguation_index": 0,
      "label": "We propose learning open path rules (OP) from which we infer",
      "aliases": [
        "We propose learning open path rules (OP) from which we infer"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Open path rules (OP) that are constrained existential rules used to infer open-ended questions about missing entities or facts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "We propose learning open path rules (OP) from which we infer",
          "local_types": [
            "research"
          ],
          "iri": "Entity-we_propose_learning_open_path_rule__op__from_which_we_infer-Mention-1"
        }
      ],
      "relevance": 0.63916015625
    },
    "Entity-open_path_fitness_function": {
      "node_id": "open_path_fitness_function",
      "disambiguation_index": 0,
      "label": "Open Path Fitness Function",
      "aliases": [
        "Open Path Fitness Function",
        "open path fitness function"
      ],
      "types": [
        "evaluation metric",
        "function",
        "mathematical concept",
        "fitness function",
        "mathematical function",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A mathematical function that estimates the quality of an open path rule by considering both predicate embeddings and argument embeddings, used to evaluate the fitness of rules in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-1",
          "local_name": "Open Path Fitness Function",
          "local_types": [
            "evaluation metric",
            "function",
            "fitness function",
            "mathematical function",
            "algorithm"
          ],
          "iri": "Entity-open_path_fitness_function-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-6",
          "local_name": "open path fitness function",
          "local_types": [
            "algorithm",
            "mathematical concept"
          ],
          "iri": "Entity-open_path_fitness_function-Mention-2"
        }
      ],
      "relevance": 0.63818359375
    },
    "Entity-given_predicate_p__the_akgc_task_is_to_generate_query_of_the_form_p____e___and_p__e___": {
      "node_id": "given_predicate_p__the_akgc_task_is_to_generate_query_of_the_form_p____e___and_p__e___",
      "disambiguation_index": 0,
      "label": "Given predicate P, the AKGC task is to generate queries of the form P(?, e') and P(e, ?)",
      "aliases": [
        "Given predicate P, the AKGC task is to generate queries of the form P(?, e') and P(e, ?)"
      ],
      "types": [
        "task",
        "query"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Active Knowledge Graph Completion (AKGC) task that generates queries of the form P(?, e') and P(e, ?) for entities e and e' occurring in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "Given predicate P, the AKGC task is to generate queries of the form P(?, e') and P(e, ?)",
          "local_types": [
            "task",
            "query"
          ],
          "iri": "Entity-given_predicate_p__the_akgc_task_is_to_generate_query_of_the_form_p____e___and_p__e___-Mention-1"
        }
      ],
      "relevance": 0.63818359375
    },
    "Entity-the_top_10__of_the_op_rule_according_to_the_fitness_function": {
      "node_id": "the_top_10__of_the_op_rule_according_to_the_fitness_function",
      "disambiguation_index": 0,
      "label": "the top 10% of the OP rules according to the fitness function",
      "aliases": [
        "the top 10% of the OP rules according to the fitness function"
      ],
      "types": [
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The best-performing Open Path (OP) rules learned by the algorithm, selected based on their quality as determined by a novel embedding-based fitness function.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-2",
          "local_name": "the top 10% of the OP rules according to the fitness function",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_top_10__of_the_op_rule_according_to_the_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.63818359375
    },
    "Entity-based_on_the_sampled_kg_first_for_efficiency": {
      "node_id": "based_on_the_sampled_kg_first_for_efficiency",
      "disambiguation_index": 0,
      "label": "based on the sampled KG first for efficiency",
      "aliases": [
        "based on the sampled KG first for efficiency"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The methodology of evaluating candidate knowledge graph (KG) completion rules based on their quality and efficiency, where a sampled KG is used first to filter out low-quality rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "based on the sampled KG first for efficiency",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-based_on_the_sampled_kg_first_for_efficiency-Mention-1"
        }
      ],
      "relevance": 0.63818359375
    },
    "Entity-other_op_rule_learner_with_which_to_compare": {
      "node_id": "other_op_rule_learner_with_which_to_compare",
      "disambiguation_index": 0,
      "label": "other OP rule learners with which to compare",
      "aliases": [
        "other OP rule learners with which to compare"
      ],
      "types": [
        "OPRL",
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Other Open Path (OP) rule learning algorithms or methods that can be used as a basis for comparison with OP Rule Learners (OPRL)",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "other OP rule learners with which to compare",
          "local_types": [
            "OPRL",
            "research"
          ],
          "iri": "Entity-other_op_rule_learner_with_which_to_compare-Mention-1"
        }
      ],
      "relevance": 0.63818359375
    },
    "Entity-let_r_be_a_cp_rule_of_the_form_given_earlier_.": {
      "node_id": "let_r_be_a_cp_rule_of_the_form_given_earlier_.",
      "disambiguation_index": 0,
      "label": "Let r be a CP rule of the form given earlier.",
      "aliases": [
        "Let r be a CP rule of the form given earlier."
      ],
      "types": [
        "notation",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A closed path (CP) rule with no free variables, consisting of two parts: a head and a body, used for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "Let r be a CP rule of the form given earlier.",
          "local_types": [
            "notation",
            "rule"
          ],
          "iri": "Entity-let_r_be_a_cp_rule_of_the_form_given_earlier_.-Mention-1"
        }
      ],
      "relevance": 0.6376953125
    },
    "Entity-rule_with_free_variable": {
      "node_id": "rule_with_free_variable",
      "disambiguation_index": 0,
      "label": "rules with free variables",
      "aliases": [
        "rules with free variables"
      ],
      "types": [
        "variable",
        "mathematical construct",
        "rule",
        "computational method",
        "algorithm",
        "algorithmic concept",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Existential rules that can be used to generate queries soliciting missing facts in Knowledge Graphs, allowing for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "rules with free variables",
          "local_types": [
            "variable",
            "mathematical construct",
            "rule",
            "algorithm",
            "logic",
            "algorithmic concept",
            "computational method"
          ],
          "iri": "Entity-rule_with_free_variable-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-2",
          "local_name": "rules with free variables",
          "local_types": [
            "algorithmic concept",
            "mathematical construct"
          ],
          "iri": "Entity-rule_with_free_variable-Mention-2"
        }
      ],
      "relevance": 0.6376953125
    },
    "Entity-the_kg_to_propose_missing_fact": {
      "node_id": "the_kg_to_propose_missing_fact",
      "disambiguation_index": 0,
      "label": "the KG to propose missing facts",
      "aliases": [
        "the KG to propose missing facts"
      ],
      "types": [
        "knowledge graph",
        "database",
        "technique"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A technique or system used by knowledge graph completion methods to generate relevant questions or queries that can help complete a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "the KG to propose missing facts",
          "local_types": [
            "knowledge graph",
            "database",
            "technique"
          ],
          "iri": "Entity-the_kg_to_propose_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.6376953125
    },
    "Entity-proposing_op_rule": {
      "node_id": "proposing_op_rule",
      "disambiguation_index": 0,
      "label": "Proposing OP rules",
      "aliases": [
        "Proposing OP rules"
      ],
      "types": [
        "proposition",
        "methodology",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The proposal of Open Path (OP) rules, a fragment of function-free Horn rules that allows for mining rules with free variables while maintaining manageable complexity during the learning phase.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-2",
          "local_name": "Proposing OP rules",
          "local_types": [
            "proposition",
            "methodology",
            "rule"
          ],
          "iri": "Entity-proposing_op_rule-Mention-1"
        }
      ],
      "relevance": 0.6376953125
    },
    "Entity-logical_rule_or_vector_embeddings": {
      "node_id": "logical_rule_or_vector_embeddings",
      "disambiguation_index": 0,
      "label": "logical rules or vector embeddings",
      "aliases": [
        "logical rules or vector embeddings"
      ],
      "types": [
        "embedding",
        "rule",
        "representation",
        "representation method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Logical rules or vector embeddings refer to the methods used for learning and representing knowledge graph completion models.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "logical rules or vector embeddings",
          "local_types": [
            "embedding",
            "rule",
            "representation",
            "representation method"
          ],
          "iri": "Entity-logical_rule_or_vector_embeddings-Mention-1"
        }
      ],
      "relevance": 0.63720703125
    },
    "Entity-akgc_task": {
      "node_id": "akgc_task",
      "disambiguation_index": 0,
      "label": "AKGC task",
      "aliases": [
        "AKGC task",
        "AKGC"
      ],
      "types": [
        "task",
        "active knowledge grounding",
        "concept",
        "problem",
        "academic discipline",
        "framework",
        "algorithm",
        "method",
        "research area",
        "computational method"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The AKGC task is an active knowledge graph completion problem that involves generating queries of the form P(?, e') and P(e, ?) for entities e and e' occurring in the Knowledge Graph (KG), given a predicate P.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "AKGC task",
          "local_types": [
            "task",
            "concept",
            "academic discipline",
            "algorithm",
            "research area"
          ],
          "iri": "Entity-akgc_task-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "AKGC",
          "local_types": [
            "task",
            "problem",
            "concept",
            "framework",
            "algorithm",
            "method"
          ],
          "iri": "Entity-akgc_task-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "AKGC",
          "local_types": [
            "problem",
            "task"
          ],
          "iri": "Entity-akgc_task-Mention-3"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "AKGC",
          "local_types": [
            "task",
            "active knowledge grounding",
            "problem",
            "algorithm",
            "method",
            "computational method"
          ],
          "iri": "Entity-akgc_task-Mention-4"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "AKGC",
          "local_types": [
            "task",
            "problem"
          ],
          "iri": "Entity-akgc_task-Mention-5"
        }
      ],
      "relevance": 0.6357421875
    },
    "Entity-evaluation__r___k_": {
      "node_id": "evaluation__r___k_",
      "disambiguation_index": 0,
      "label": "Evaluation(R', K)",
      "aliases": [
        "Evaluation(R', K)"
      ],
      "types": [
        "evaluation function",
        "evaluation metric",
        "function",
        "function call"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of evaluating a set of OP rules (R') against a knowledge graph (K) to determine their quality and relevance.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-12",
          "local_name": "Evaluation(R', K)",
          "local_types": [
            "evaluation function",
            "evaluation metric",
            "function",
            "function call"
          ],
          "iri": "Entity-evaluation__r___k_-Mention-1"
        }
      ],
      "relevance": 0.6357421875
    },
    "Entity-the_relevance_of_query_induced_from_oprl-mined_rule": {
      "node_id": "the_relevance_of_query_induced_from_oprl-mined_rule",
      "disambiguation_index": 0,
      "label": "the relevance of queries induced from OPRL-mined rules",
      "aliases": [
        "the relevance of queries induced from OPRL-mined rules"
      ],
      "types": [
        "query",
        "relevance"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept refers to the evaluation and assessment of the importance or significance of questions generated by learning Open Path (OP) rules using the OPRL algorithm, where a query with an answer present in the test set is considered relevant.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "the relevance of queries induced from OPRL-mined rules",
          "local_types": [
            "query",
            "relevance"
          ],
          "iri": "Entity-the_relevance_of_query_induced_from_oprl-mined_rule-Mention-1"
        }
      ],
      "relevance": 0.6357421875
    },
    "Entity-constrained_existential_rule": {
      "node_id": "constrained_existential_rule",
      "disambiguation_index": 0,
      "label": "constrained existential rules",
      "aliases": [
        "constrained existential rules"
      ],
      "types": [
        "rule type"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of rule in knowledge graph completion that can generate relevant queries even when there is no closed rule to answer the query or when the correct answer is a missing entity not present in the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "constrained existential rules",
          "local_types": [
            "rule type"
          ],
          "iri": "Entity-constrained_existential_rule-Mention-1"
        }
      ],
      "relevance": 0.63525390625
    },
    "Entity-two_query": {
      "node_id": "two_query",
      "disambiguation_index": 0,
      "label": "two queries",
      "aliases": [
        "two queries"
      ],
      "types": [
        "queries"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Two queries refer to a pair of questions that are induced from OPRL-mined rules for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "two queries",
          "local_types": [
            "queries"
          ],
          "iri": "Entity-two_query-Mention-1"
        }
      ],
      "relevance": 0.63525390625
    },
    "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg": {
      "node_id": "in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "disambiguation_index": 0,
      "label": "In contrast, we predict the existence of missing facts even when an entity involved in the missing fact may be absent from the KG",
      "aliases": [
        "In contrast, we predict the existence of missing facts even when an entity involved in the missing fact may be absent from the KG"
      ],
      "types": [
        "approach",
        "knowledge graph completion"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The approach or method for predicting the existence of missing facts in a knowledge graph, including entities that are not present in the graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-6",
          "local_name": "In contrast, we predict the existence of missing facts even when an entity involved in the missing fact may be absent from the KG",
          "local_types": [
            "approach",
            "knowledge graph completion"
          ],
          "iri": "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg-Mention-1"
        }
      ],
      "relevance": 0.634765625
    },
    "Entity-language_of_existential_rule": {
      "node_id": "language_of_existential_rule",
      "disambiguation_index": 0,
      "label": "language of existential rules",
      "aliases": [
        "language of existential rules",
        "the language of existential rules"
      ],
      "types": [
        "natural language processing",
        "existential rules",
        "computational linguistics",
        "language"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A formal language framework used in knowledge graph completion, enabling the learning and application of open path rules for generating relevant queries about missing facts or entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "language of existential rules",
          "local_types": [
            "natural language processing",
            "computational linguistics"
          ],
          "iri": "Entity-language_of_existential_rule-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "the language of existential rules",
          "local_types": [
            "language",
            "existential rules"
          ],
          "iri": "Entity-language_of_existential_rule-Mention-2"
        }
      ],
      "relevance": 0.634765625
    },
    "Entity-learning_op_rule_based_on_an_embedding_representation": {
      "node_id": "learning_op_rule_based_on_an_embedding_representation",
      "disambiguation_index": 0,
      "label": "Learning OP rules based on an embedding representation",
      "aliases": [
        "Learning OP rules based on an embedding representation"
      ],
      "types": [
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A machine learning approach that learns rules using operational patterns (OP) and relies on an embedding representation.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-3",
          "local_name": "Learning OP rules based on an embedding representation",
          "local_types": [
            "approach"
          ],
          "iri": "Entity-learning_op_rule_based_on_an_embedding_representation-Mention-1"
        }
      ],
      "relevance": 0.634765625
    },
    "Entity-then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___": {
      "node_id": "then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___",
      "disambiguation_index": 0,
      "label": "then use the rules to induce queries of the form P(?, e') and P(e, ?)",
      "aliases": [
        "then use the rules to induce queries of the form P(?, e') and P(e, ?)"
      ],
      "types": [
        "query induction",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of generating relevant questions about entities in a knowledge graph using open-path rules learned from training data.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "then use the rules to induce queries of the form P(?, e') and P(e, ?)",
          "local_types": [
            "query induction",
            "algorithm"
          ],
          "iri": "Entity-then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___-Mention-1"
        }
      ],
      "relevance": 0.634765625
    },
    "Entity-the_following_novel_component_(1)": {
      "node_id": "the_following_novel_component_(1)",
      "disambiguation_index": 1,
      "label": "the following novel components",
      "aliases": [
        "the following novel components"
      ],
      "types": [
        "components",
        "novel_components"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of newly proposed rule types, OP rules, and methods for estimating their quality and evaluating them efficiently, which enable active knowledge graph completion by generating highly relevant queries.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "the following novel components",
          "local_types": [
            "components",
            "novel_components"
          ],
          "iri": "Entity-the_following_novel_component_(1)-Mention-1"
        }
      ],
      "relevance": 0.634765625
    },
    "Entity-scale_well": {
      "node_id": "scale_well",
      "disambiguation_index": 0,
      "label": "scale well",
      "aliases": [
        "scale well"
      ],
      "types": [
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The ability of methods for automatic knowledge graph completion, including those involving rule learning, to efficiently and effectively handle large-scale data sets.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "scale well",
          "local_types": [
            "property"
          ],
          "iri": "Entity-scale_well-Mention-1"
        }
      ],
      "relevance": 0.63427734375
    },
    "Entity-the_head_of_the_rule_by_finding_an_instantiation_of_the_body_of_the_rule_in_the_kg": {
      "node_id": "the_head_of_the_rule_by_finding_an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "disambiguation_index": 0,
      "label": "the head of the rule by finding an instantiation of the body of the rule in the KG",
      "aliases": [
        "the head of the rule by finding an instantiation of the body of the rule in the KG"
      ],
      "types": [
        "instantiation",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The inferred fact that satisfies the conclusion part (head) of a closed path rule, obtained by instantiating the variables with entities from the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "the head of the rule by finding an instantiation of the body of the rule in the KG",
          "local_types": [
            "instantiation",
            "rule"
          ],
          "iri": "Entity-the_head_of_the_rule_by_finding_an_instantiation_of_the_body_of_the_rule_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.6337890625
    },
    "Entity-the_top_10__of_the_op_rule": {
      "node_id": "the_top_10__of_the_op_rule",
      "disambiguation_index": 0,
      "label": "the top 10% of the OP rules",
      "aliases": [
        "the top 10% of the OP rules"
      ],
      "types": [
        "rule",
        "percentage"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The top 10% of Open Path (OP) rules mined by the algorithm, ranked based on their quality as determined by a novel embedding-based fitness function.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-2",
          "local_name": "the top 10% of the OP rules",
          "local_types": [
            "rule",
            "percentage"
          ],
          "iri": "Entity-the_top_10__of_the_op_rule-Mention-1"
        }
      ],
      "relevance": 0.6337890625
    },
    "Entity-additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.": {
      "node_id": "additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.",
      "disambiguation_index": 0,
      "label": "Additionally, we introduce a novel, efficient vector computation to formally assess rule quality.",
      "aliases": [
        "a novel, efficient vector computation to formally assess rule quality",
        "Additionally, we introduce a novel, efficient vector computation to formally assess rule quality."
      ],
      "types": [
        "methodology",
        "Entity",
        "Algorithm",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel and efficient algorithm for assessing the quality of rules in knowledge graph completion",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "Additionally, we introduce a novel, efficient vector computation to formally assess rule quality.",
          "local_types": [
            "Algorithm",
            "Entity"
          ],
          "iri": "Entity-additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "a novel, efficient vector computation to formally assess rule quality",
          "local_types": [
            "methodology",
            "algorithm"
          ],
          "iri": "Entity-additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.-Mention-2"
        }
      ],
      "relevance": 0.63232421875
    },
    "Entity-the_problem_of_active_knowledge_graph_completion__akgc_": {
      "node_id": "the_problem_of_active_knowledge_graph_completion__akgc_",
      "disambiguation_index": 0,
      "label": "the problem of active knowledge graph completion (AKGC)",
      "aliases": [
        "the problem of active knowledge graph completion (AKGC)"
      ],
      "types": [
        "problem"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The problem of actively generating queries for knowledge graph completion (AKGC) that can introduce new entities into the incomplete knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "the problem of active knowledge graph completion (AKGC)",
          "local_types": [
            "problem"
          ],
          "iri": "Entity-the_problem_of_active_knowledge_graph_completion__akgc_-Mention-1"
        }
      ],
      "relevance": 0.63134765625
    },
    "Entity-the_usual_closed_path_rule": {
      "node_id": "the_usual_closed_path_rule",
      "disambiguation_index": 0,
      "label": "the usual closed path rules",
      "aliases": [
        "the usual closed path rules"
      ],
      "types": [
        "rule",
        "path rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The 'usual closed path rules' refer to conventional, non-existential rules used for knowledge graph completion tasks.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-3",
          "local_name": "the usual closed path rules",
          "local_types": [
            "rule",
            "path rule"
          ],
          "iri": "Entity-the_usual_closed_path_rule-Mention-1"
        }
      ],
      "relevance": 0.63134765625
    },
    "Entity-it_(3)": {
      "node_id": "it_(3)",
      "disambiguation_index": 3,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "statement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The algorithm OPRL, which takes user parameters for maximum rule length and least acceptable Open Path (OP) scoring function (OPSC) and overall performance heuristic criterion (OPHC) scores.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "It",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-it_(3)-Mention-1"
        }
      ],
      "relevance": 0.63134765625
    },
    "Entity-prand_on_fb15kse__yago2_core__and_poker": {
      "node_id": "prand_on_fb15kse__yago2_core__and_poker",
      "disambiguation_index": 0,
      "label": "Prand on FB15KSE, YAGO2 core, and Poker",
      "aliases": [
        "Prand on FB15KSE, YAGO2 core, and Poker"
      ],
      "types": [
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A query generation system that learns constrained existential rules for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-3",
          "local_name": "Prand on FB15KSE, YAGO2 core, and Poker",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-prand_on_fb15kse__yago2_core__and_poker-Mention-1"
        }
      ],
      "relevance": 0.63134765625
    },
    "Entity-even_for_poker__recall_show_that_there_are_relevant_query_that_were_not_generated": {
      "node_id": "even_for_poker__recall_show_that_there_are_relevant_query_that_were_not_generated",
      "disambiguation_index": 0,
      "label": "even for Poker, recall shows that there are relevant queries that were not generated",
      "aliases": [
        "even for Poker, recall shows that there are relevant queries that were not generated"
      ],
      "types": [
        "recall",
        "query_generation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The recall metric, specifically in the context of Poker Knowledge Graph completion, which shows that there are relevant queries that were not generated by OPRL.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "even for Poker, recall shows that there are relevant queries that were not generated",
          "local_types": [
            "recall",
            "query_generation"
          ],
          "iri": "Entity-even_for_poker__recall_show_that_there_are_relevant_query_that_were_not_generated-Mention-1"
        }
      ],
      "relevance": 0.630859375
    },
    "Entity-that_can_introduce_missing_entity_into_the_kg": {
      "node_id": "that_can_introduce_missing_entity_into_the_kg",
      "disambiguation_index": 0,
      "label": "that can introduce missing entities into the KG",
      "aliases": [
        "that can introduce missing entities into the KG"
      ],
      "types": [
        "entity introduction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method or algorithm for introducing new, previously unknown entities into a knowledge graph (KG) by generating queries that can be answered with these missing entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-4",
          "local_name": "that can introduce missing entities into the KG",
          "local_types": [
            "entity introduction"
          ],
          "iri": "Entity-that_can_introduce_missing_entity_into_the_kg-Mention-1"
        }
      ],
      "relevance": 0.630859375
    },
    "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_": {
      "node_id": "a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "disambiguation_index": 0,
      "label": "a novel fitness function which can estimate the quality of an OP rule based on the embedding representations of its predicates;",
      "aliases": [
        "a novel fitness function which can estimate the quality of an OP rule based on the embedding representations of its predicates;",
        "novel fitness function which can estimate the quality of an OP rule based on the embedding representations of its predicates",
        "a fitness function",
        "a novel fitness function which can estimate the quality of an OP rule based on the embedding representations of its predicates"
      ],
      "types": [
        "embedding representations",
        "function",
        "predicate",
        "OP rule",
        "concept",
        "fitness function",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A fitness function that estimates the quality of an Open Path (OP) rule based on the embedding representations of its predicates.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "a novel fitness function which can estimate the quality of an OP rule based on the embedding representations of its predicates;",
          "local_types": [
            "fitness function",
            "OP rule",
            "embedding representations"
          ],
          "iri": "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "novel fitness function which can estimate the quality of an OP rule based on the embedding representations of its predicates",
          "local_types": [
            "fitness function",
            "OP rule",
            "predicate"
          ],
          "iri": "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "a novel fitness function which can estimate the quality of an OP rule based on the embedding representations of its predicates",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "a fitness function",
          "local_types": [
            "concept",
            "function",
            "algorithm"
          ],
          "iri": "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_-Mention-4"
        }
      ],
      "relevance": 0.63037109375
    },
    "Entity-the_method_for_computing_opsc_and_ophc": {
      "node_id": "the_method_for_computing_opsc_and_ophc",
      "disambiguation_index": 0,
      "label": "the method for computing OPSC and OPHC",
      "aliases": [
        "the method for computing OPSC and OPHC"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithmic approach to efficiently compute Open Path Support (OPSC) and Overall Path Hit Count (OPHC) measures for evaluating candidate rules in the context of active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-1",
          "local_name": "the method for computing OPSC and OPHC",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-the_method_for_computing_opsc_and_ophc-Mention-1"
        }
      ],
      "relevance": 0.6298828125
    },
    "Entity-next": {
      "node_id": "next",
      "disambiguation_index": 0,
      "label": "Next",
      "aliases": [
        "Next"
      ],
      "types": [
        "introduction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The 'Next' term refers to a novel algorithm (OPRL) for learning Open Path rules that are constrained existential rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-17-Sentence-2",
          "local_name": "Next",
          "local_types": [
            "introduction"
          ],
          "iri": "Entity-next-Mention-1"
        }
      ],
      "relevance": 0.62939453125
    },
    "Entity-a_probabilistic_baseline": {
      "node_id": "a_probabilistic_baseline",
      "disambiguation_index": 0,
      "label": "a probabilistic baseline",
      "aliases": [
        "a probabilistic baseline"
      ],
      "types": [
        "baseline"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A statistical method that generates queries for knowledge graph completion, serving as a comparison benchmark to evaluate the performance of OPRL's rule-based query generation.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-8-Sentence-2",
          "local_name": "a probabilistic baseline",
          "local_types": [
            "baseline"
          ],
          "iri": "Entity-a_probabilistic_baseline-Mention-1"
        }
      ],
      "relevance": 0.62841796875
    },
    "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.": {
      "node_id": "_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "disambiguation_index": 0,
      "label": "(1) embedding the entities and predicates of a given KG into a latent space, and (2) reconstructing the KG based on the learned embeddings to predict new facts.",
      "aliases": [
        "(1) embedding the entities and predicates of a given KG into a latent space, and (2) reconstructing the KG based on the learned embeddings to predict new facts."
      ],
      "types": [
        "embedding",
        "reconstruction"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of transforming entities and predicates from a knowledge graph (KG) into a latent space, followed by using these learned representations to make predictions about new KG facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "(1) embedding the entities and predicates of a given KG into a latent space, and (2) reconstructing the KG based on the learned embeddings to predict new facts.",
          "local_types": [
            "embedding",
            "reconstruction"
          ],
          "iri": "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.-Mention-1"
        }
      ],
      "relevance": 0.6279296875
    },
    "Entity-a_correct_and_complete_kg_for_experiment": {
      "node_id": "a_correct_and_complete_kg_for_experiment",
      "disambiguation_index": 0,
      "label": "a correct and complete KG for experiments",
      "aliases": [
        "a correct and complete KG for experiments"
      ],
      "types": [
        "knowledge graph",
        "experiment"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Poker dataset, a synthetic knowledge graph designed as a correct and complete KG for experimentation purposes.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-1",
          "local_name": "a correct and complete KG for experiments",
          "local_types": [
            "knowledge graph",
            "experiment"
          ],
          "iri": "Entity-a_correct_and_complete_kg_for_experiment-Mention-1"
        }
      ],
      "relevance": 0.62744140625
    },
    "Entity-the_complexity_of_the_learning_phase_manageable": {
      "node_id": "the_complexity_of_the_learning_phase_manageable",
      "disambiguation_index": 0,
      "label": "the complexity of the learning phase manageable",
      "aliases": [
        "the complexity of the learning phase manageable"
      ],
      "types": [
        "complexity",
        "learning"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept refers to the level of difficulty or intricacy involved in the process of learning Open Path (OP) rules from Knowledge Graphs, which needs to be manageable for efficient rule mining.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-2",
          "local_name": "the complexity of the learning phase manageable",
          "local_types": [
            "complexity",
            "learning"
          ],
          "iri": "Entity-the_complexity_of_the_learning_phase_manageable-Mention-1"
        }
      ],
      "relevance": 0.626953125
    },
    "Entity-next__we_consider_the_sensitivity_of_the_performance_of_oprl_query_to_the_opsc_threshold_by_varying_it_from_0.1_to_1__learning_the_previously_selected_predicate_for_fb15kse__table_3_": {
      "node_id": "next__we_consider_the_sensitivity_of_the_performance_of_oprl_query_to_the_opsc_threshold_by_varying_it_from_0.1_to_1__learning_the_previously_selected_predicate_for_fb15kse__table_3_",
      "disambiguation_index": 0,
      "label": "Next, we consider the sensitivity of the performance of OPRL queries to the OPSC threshold by varying it from 0.1 to 1, learning the previously selected predicates for FB15KSE (Table 3)",
      "aliases": [
        "Next, we consider the sensitivity of the performance of OPRL queries to the OPSC threshold by varying it from 0.1 to 1, learning the previously selected predicates for FB15KSE (Table 3)"
      ],
      "types": [
        "algorithmic evaluation",
        "threshold tuning"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The experiment evaluating the impact of varying the Open Path Score Confidence (OPSC) threshold on the performance of OPRL-generated queries in the context of Facebook Knowledge Graph Sequence (FB15KSE), as presented in Table 3.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "Next, we consider the sensitivity of the performance of OPRL queries to the OPSC threshold by varying it from 0.1 to 1, learning the previously selected predicates for FB15KSE (Table 3)",
          "local_types": [
            "algorithmic evaluation",
            "threshold tuning"
          ],
          "iri": "Entity-next__we_consider_the_sensitivity_of_the_performance_of_oprl_query_to_the_opsc_threshold_by_varying_it_from_0.1_to_1__learning_the_previously_selected_predicate_for_fb15kse__table_3_-Mention-1"
        }
      ],
      "relevance": 0.62646484375
    },
    "Entity-how_to_efficiently_compute_the_measure": {
      "node_id": "how_to_efficiently_compute_the_measure",
      "disambiguation_index": 0,
      "label": "how to efficiently compute the measures",
      "aliases": [
        "how to efficiently compute the measures"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method for computing OPSC and OPHC, two metrics used to evaluate candidate rules in active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "how to efficiently compute the measures",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-how_to_efficiently_compute_the_measure-Mention-1"
        }
      ],
      "relevance": 0.6259765625
    },
    "Entity-a_high-performing_link-predicting_model_built_for_the_kg": {
      "node_id": "a_high-performing_link-predicting_model_built_for_the_kg",
      "disambiguation_index": 0,
      "label": "a high-performing link-predicting model built for the KG",
      "aliases": [
        "a high-performing link-predicting model built for the KG"
      ],
      "types": [
        "model",
        "artificial intelligence",
        "link predictor",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A high-performing link-predicting model built for the Knowledge Graph, used as an oracle or automated query generator in Active Knowledge Graph Completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-2",
          "local_name": "a high-performing link-predicting model built for the KG",
          "local_types": [
            "model",
            "artificial intelligence",
            "link predictor",
            "algorithm"
          ],
          "iri": "Entity-a_high-performing_link-predicting_model_built_for_the_kg-Mention-1"
        }
      ],
      "relevance": 0.62548828125
    },
    "Entity-ophc": {
      "node_id": "ophc",
      "disambiguation_index": 0,
      "label": "OPHC",
      "aliases": [
        "OPHC"
      ],
      "types": [
        "knowledge graph component",
        "evaluation metric",
        "term",
        "mathematical concept",
        "hypergraph clustering",
        "pathway",
        "open path",
        "concept",
        "measure",
        "quality threshold",
        "acronym",
        "head",
        "equation",
        "organization",
        "standard",
        "threshold value",
        "method",
        "evaluation method",
        "ontology path",
        "notation",
        "threshold",
        "mathematical expression",
        "computational method",
        "indicator",
        "parameter",
        "abbreviation",
        "performance indicator",
        "metric"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The open path head coverage metric, which measures the proportion of entities that can instantiate the head part of an open path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-9-Sentence-1",
          "local_name": "OPHC",
          "local_types": [
            "mathematical concept",
            "measure",
            "metric",
            "notation",
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-ophc-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-10-Sentence-4",
          "local_name": "OPHC",
          "local_types": [
            "term",
            "parameter",
            "abbreviation",
            "measure",
            "metric"
          ],
          "iri": "Entity-ophc-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-10-Sentence-1",
          "local_name": "OPHC",
          "local_types": [
            "standard",
            "abbreviation",
            "threshold",
            "organization"
          ],
          "iri": "Entity-ophc-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "OPHC",
          "local_types": [
            "abbreviation",
            "evaluation method",
            "measure",
            "metric",
            "acronym"
          ],
          "iri": "Entity-ophc-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-1",
          "local_name": "OPHC",
          "local_types": [
            "knowledge graph component",
            "pathway",
            "open path",
            "concept",
            "measure",
            "ontology path",
            "metric",
            "notation"
          ],
          "iri": "Entity-ophc-Mention-5"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "OPHC",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-ophc-Mention-6"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "OPHC",
          "local_types": [
            "hypergraph clustering",
            "computational method"
          ],
          "iri": "Entity-ophc-Mention-7"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "OPHC",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-ophc-Mention-8"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-1",
          "local_name": "OPHC",
          "local_types": [
            "indicator",
            "term",
            "performance indicator",
            "metric",
            "acronym"
          ],
          "iri": "Entity-ophc-Mention-9"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-1",
          "local_name": "OPHC",
          "local_types": [
            "method",
            "indicator",
            "concept",
            "metric"
          ],
          "iri": "Entity-ophc-Mention-10"
        },
        {
          "reference": "Section-7-Paragraph-4-Sentence-1",
          "local_name": "OPHC",
          "local_types": [
            "head",
            "organization",
            "acronym"
          ],
          "iri": "Entity-ophc-Mention-11"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-4",
          "local_name": "OPHC",
          "local_types": [
            "metric",
            "performance indicator"
          ],
          "iri": "Entity-ophc-Mention-12"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "OPHC",
          "local_types": [
            "threshold value",
            "evaluation metric",
            "quality threshold"
          ],
          "iri": "Entity-ophc-Mention-13"
        }
      ],
      "relevance": 0.62451171875
    },
    "Entity-rlvlr_algorithm": {
      "node_id": "rlvlr_algorithm",
      "disambiguation_index": 0,
      "label": "RLVLR algorithm",
      "aliases": [
        "RLVLR algorithm"
      ],
      "types": [
        "machine learning",
        "RLVLR",
        "computational method",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A machine learning algorithm used for mining CP rules, which learns closed (non-existential) rules by defining a similarity scoring function based on argument embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "RLVLR algorithm",
          "local_types": [
            "machine learning",
            "RLVLR",
            "computational method",
            "algorithm"
          ],
          "iri": "Entity-rlvlr_algorithm-Mention-1"
        }
      ],
      "relevance": 0.62451171875
    },
    "Entity-where_t__is_a_learning_system_parameter_that_is_going_to_be_tuned": {
      "node_id": "where_t__is_a_learning_system_parameter_that_is_going_to_be_tuned",
      "disambiguation_index": 0,
      "label": "where t% is a learning system parameter that is going to be tuned",
      "aliases": [
        "where t% is a learning system parameter that is going to be tuned"
      ],
      "types": [
        "parameter",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The percentage of high-quality OP rules to consider for further processing in the knowledge graph completion algorithm.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-4",
          "local_name": "where t% is a learning system parameter that is going to be tuned",
          "local_types": [
            "parameter",
            "variable"
          ],
          "iri": "Entity-where_t__is_a_learning_system_parameter_that_is_going_to_be_tuned-Mention-1"
        }
      ],
      "relevance": 0.62451171875
    },
    "Entity-opscophc_score": {
      "node_id": "opscophc_score",
      "disambiguation_index": 0,
      "label": "OPSC/OPHC scores",
      "aliases": [
        "OPSC/OPHC scores"
      ],
      "types": [
        "scores",
        "score",
        "evaluation metrics",
        "evaluation score",
        "evaluation method",
        "quality metric",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Evaluation metrics used to assess the quality of Open Path (OP) rules mined by OPRL, calculated against full benchmark Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "OPSC/OPHC scores",
          "local_types": [
            "scores",
            "score",
            "evaluation metrics",
            "evaluation score",
            "evaluation method",
            "quality metric",
            "metric"
          ],
          "iri": "Entity-opscophc_score-Mention-1"
        }
      ],
      "relevance": 0.62451171875
    },
    "Entity-induce_the_most_relevant_query_over_the_full_kb": {
      "node_id": "induce_the_most_relevant_query_over_the_full_kb",
      "disambiguation_index": 0,
      "label": "induce the most relevant queries over the full KB",
      "aliases": [
        "induce the most relevant queries over the full KB"
      ],
      "types": [
        "goal"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating questions that are likely to be answered by an oracle or human expert, using Open Path rules mined from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "induce the most relevant queries over the full KB",
          "local_types": [
            "goal"
          ],
          "iri": "Entity-induce_the_most_relevant_query_over_the_full_kb-Mention-1"
        }
      ],
      "relevance": 0.62451171875
    },
    "Entity-very_large_kg": {
      "node_id": "very_large_kg",
      "disambiguation_index": 0,
      "label": "very large KGs",
      "aliases": [
        "very large KGs"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Massive knowledge graphs containing thousands or millions of facts and entities, which are often incomplete and require automatic completion methods to curate them.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-5",
          "local_name": "very large KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-very_large_kg-Mention-1"
        }
      ],
      "relevance": 0.6240234375
    },
    "Entity-the_open_path_fitness": {
      "node_id": "the_open_path_fitness",
      "disambiguation_index": 0,
      "label": "the open path fitness",
      "aliases": [
        "the open path fitness",
        "(r)"
      ],
      "types": [
        "concept",
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The Open Path Fitness function estimates the quality of an OP rule by computing the product of predicate embeddings along the path, anchored to entities satisfying free variables at endpoints.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-9",
          "local_name": "the open path fitness",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_open_path_fitness-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "(r)",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-the_open_path_fitness-Mention-2"
        }
      ],
      "relevance": 0.6240234375
    },
    "Entity-knowledge_graph__kg_": {
      "node_id": "knowledge_graph__kg_",
      "disambiguation_index": 0,
      "label": "Knowledge Graphs (KGs)",
      "aliases": [
        "Knowledge Graphs (KGs)"
      ],
      "types": [
        "technology",
        "concept",
        "data model"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A Knowledge Graph (KG) refers to a technology that models and stores large amounts of weakly-structured data, allowing for the addition of information with few structural constraints.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graphs (KGs)",
          "local_types": [
            "technology",
            "concept",
            "data model"
          ],
          "iri": "Entity-knowledge_graph__kg_-Mention-1"
        }
      ],
      "relevance": 0.62353515625
    },
    "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg": {
      "node_id": "then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "disambiguation_index": 0,
      "label": "then we can infer and assert the following new fact in the KG",
      "aliases": [
        "then we can infer and assert the following new fact in the KG"
      ],
      "types": [
        "inference",
        "assertion",
        "KG"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of drawing a logical conclusion from existing facts in a knowledge graph (KG) based on an existential rule, resulting in the addition of a new fact to the KG.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "then we can infer and assert the following new fact in the KG",
          "local_types": [
            "inference",
            "assertion",
            "KG"
          ],
          "iri": "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.62353515625
    },
    "Entity-p_1__z_0__z_1_": {
      "node_id": "p_1__z_0__z_1_",
      "disambiguation_index": 0,
      "label": "P_1(z_0, z_1)",
      "aliases": [
        "P_2(z_1, z_2)",
        "P_1(z_0, z_1)"
      ],
      "types": [
        "function",
        "mathematical function"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A mathematical function that represents a constrained existential rule for knowledge graph completion, used to generate queries and complete incomplete knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P_1(z_0, z_1)",
          "local_types": [
            "function",
            "mathematical function"
          ],
          "iri": "Entity-p_1__z_0__z_1_-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P_2(z_1, z_2)",
          "local_types": [
            "function",
            "mathematical function"
          ],
          "iri": "Entity-p_1__z_0__z_1_-Mention-2"
        }
      ],
      "relevance": 0.62353515625
    },
    "Entity-r__p1__x__z0___p2__z0__z1___p3__z1__y_": {
      "node_id": "r__p1__x__z0___p2__z0__z1___p3__z1__y_",
      "disambiguation_index": 0,
      "label": "r: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, y)",
      "aliases": [
        "r: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, y)"
      ],
      "types": [
        "logic",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A logic rule that completes a knowledge graph by answering queries of unclear origin.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "r: P1(x, z0) \u2190 P2(z0, z1) \u2227 P3(z1, y)",
          "local_types": [
            "logic",
            "rule"
          ],
          "iri": "Entity-r__p1__x__z0___p2__z0__z1___p3__z1__y_-Mention-1"
        }
      ],
      "relevance": 0.62353515625
    },
    "Entity-the_rightmost_predicate": {
      "node_id": "the_rightmost_predicate",
      "disambiguation_index": 0,
      "label": "the rightmost predicate",
      "aliases": [
        "the rightmost predicate"
      ],
      "types": [
        "predicate",
        "rightmost predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel rule in a set of Open Path (OP) rules that completes a knowledge graph by generating relevant queries when there is no closed rule to answer the query or when the correct answer is a missing entity not present in the graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-13",
          "local_name": "the rightmost predicate",
          "local_types": [
            "predicate",
            "rightmost predicate"
          ],
          "iri": "Entity-the_rightmost_predicate-Mention-1"
        }
      ],
      "relevance": 0.623046875
    },
    "Entity-full_benchmark_kg": {
      "node_id": "full_benchmark_kg",
      "disambiguation_index": 0,
      "label": "full benchmark KGs",
      "aliases": [
        "full benchmark KGs",
        "benchmark KGs"
      ],
      "types": [
        "knowledge graph",
        "data repository",
        "dataset",
        "repository"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A comprehensive collection of knowledge graph data used as a standard reference point to evaluate and compare the performance of various rules or models.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "full benchmark KGs",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-full_benchmark_kg-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "benchmark KGs",
          "local_types": [
            "knowledge graph",
            "data repository",
            "dataset"
          ],
          "iri": "Entity-full_benchmark_kg-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "benchmark KGs",
          "local_types": [
            "knowledge graph",
            "data repository",
            "dataset",
            "repository"
          ],
          "iri": "Entity-full_benchmark_kg-Mention-3"
        }
      ],
      "relevance": 0.62255859375
    },
    "Entity-the_formalism_of_op_rule": {
      "node_id": "the_formalism_of_op_rule",
      "disambiguation_index": 0,
      "label": "the formalism of OP rules",
      "aliases": [
        "the formalism of OP rules"
      ],
      "types": [
        "formalism",
        "rule set",
        "linguistic concept",
        "OP-rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept refers to a novel linguistic framework that constrains existential rules and enables the generation of relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-2",
          "local_name": "the formalism of OP rules",
          "local_types": [
            "formalism",
            "rule set",
            "linguistic concept",
            "OP-rules"
          ],
          "iri": "Entity-the_formalism_of_op_rule-Mention-1"
        }
      ],
      "relevance": 0.62255859375
    },
    "Entity-add_incpathfinding__k___p_t__p__a__k__r__": {
      "node_id": "add_incpathfinding__k___p_t__p__a__k__r__",
      "disambiguation_index": 0,
      "label": "Add IncPathFinding(K', P_t, P, A, k, R')",
      "aliases": [
        "Add IncPathFinding(K', P_t, P, A, k, R')"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm that extends a previously generated OP rule by appending new body predicates and learning short rules for rightmost predicates.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "Add IncPathFinding(K', P_t, P, A, k, R')",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-add_incpathfinding__k___p_t__p__a__k__r__-Mention-1"
        }
      ],
      "relevance": 0.62255859375
    },
    "Entity-we_reduce_the_kg_size_because_existing_embedding-based_method_can_not_handle_vast_kg_.": {
      "node_id": "we_reduce_the_kg_size_because_existing_embedding-based_method_can_not_handle_vast_kg_.",
      "disambiguation_index": 0,
      "label": "we reduce the KG size because existing embedding-based methods cannot handle vast KGs.",
      "aliases": [
        "we reduce the KG size because existing embedding-based methods cannot handle vast KGs."
      ],
      "types": [
        "method",
        "challenge"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of reducing the Knowledge Graph (KG) size",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-1",
          "local_name": "we reduce the KG size because existing embedding-based methods cannot handle vast KGs.",
          "local_types": [
            "method",
            "challenge"
          ],
          "iri": "Entity-we_reduce_the_kg_size_because_existing_embedding-based_method_can_not_handle_vast_kg_.-Mention-1"
        }
      ],
      "relevance": 0.6220703125
    },
    "Entity-conventionally_used_for_knowledge_graph_completion_task": {
      "node_id": "conventionally_used_for_knowledge_graph_completion_task",
      "disambiguation_index": 0,
      "label": "conventionally used for knowledge graph completion tasks",
      "aliases": [
        "conventionally used for knowledge graph completion tasks"
      ],
      "types": [
        "task",
        "completion task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Existential rules with a different form to the usual closed path rules, conventionally used for knowledge graph completion tasks.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-3",
          "local_name": "conventionally used for knowledge graph completion tasks",
          "local_types": [
            "task",
            "completion task"
          ],
          "iri": "Entity-conventionally_used_for_knowledge_graph_completion_task-Mention-1"
        }
      ],
      "relevance": 0.6220703125
    },
    "Entity-we_assess_(1)": {
      "node_id": "we_assess_(1)",
      "disambiguation_index": 1,
      "label": "we assess",
      "aliases": [
        "we assess"
      ],
      "types": [
        "action",
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The performance evaluation of Open Path Rule Learner (OPRL) in finding high-quality rules.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "we assess",
          "local_types": [
            "action",
            "evaluation"
          ],
          "iri": "Entity-we_assess_(1)-Mention-1"
        }
      ],
      "relevance": 0.6220703125
    },
    "Entity-open_path_head_coverage_of_r": {
      "node_id": "open_path_head_coverage_of_r",
      "disambiguation_index": 0,
      "label": "open path head coverage of r",
      "aliases": [
        "open path head coverage of r"
      ],
      "types": [
        "property",
        "attribute",
        "parameter",
        "model parameter",
        "measurement"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The measure of the proportion of entities in the knowledge graph that satisfy the head predicate P_t given an open path rule R, indicating the extent to which the rule's conclusion is supported by the data.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-7-Sentence-1",
          "local_name": "open path head coverage of r",
          "local_types": [
            "property",
            "attribute",
            "parameter",
            "model parameter",
            "measurement"
          ],
          "iri": "Entity-open_path_head_coverage_of_r-Mention-1"
        }
      ],
      "relevance": 0.62158203125
    },
    "Entity-op_language": {
      "node_id": "op_language",
      "disambiguation_index": 0,
      "label": "OP language",
      "aliases": [
        "OP language"
      ],
      "types": [
        "natural language processing",
        "programming language",
        "language model"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel programming language and natural language processing framework for generating relevant queries from incomplete knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "OP language",
          "local_types": [
            "natural language processing",
            "programming language",
            "language model"
          ],
          "iri": "Entity-op_language-Mention-1"
        }
      ],
      "relevance": 0.62158203125
    },
    "Entity-the_two_metric__opsc_and_ophc": {
      "node_id": "the_two_metric__opsc_and_ophc",
      "disambiguation_index": 0,
      "label": "the two metrics, OPSC and OPHC",
      "aliases": [
        "the two metrics, OPSC and OPHC"
      ],
      "types": [
        "metrics",
        "OPSC",
        "OPHC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Two quality metrics used to evaluate candidate rules for Open Path (OP) rule learning from Knowledge Graphs",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "the two metrics, OPSC and OPHC",
          "local_types": [
            "metrics",
            "OPSC",
            "OPHC"
          ],
          "iri": "Entity-the_two_metric__opsc_and_ophc-Mention-1"
        }
      ],
      "relevance": 0.62158203125
    },
    "Entity-those_proposed_in_rlvlr": {
      "node_id": "those_proposed_in_rlvlr",
      "disambiguation_index": 0,
      "label": "those proposed in RLVLR",
      "aliases": [
        "those proposed in RLVLR"
      ],
      "types": [
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The novel embedding-based fitness function and vector computation used for estimating rule quality in the OPRL algorithm.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-2",
          "local_name": "those proposed in RLVLR",
          "local_types": [
            "paper"
          ],
          "iri": "Entity-those_proposed_in_rlvlr-Mention-1"
        }
      ],
      "relevance": 0.62109375
    },
    "Entity-average_precision__recall__and_f1": {
      "node_id": "average_precision__recall__and_f1",
      "disambiguation_index": 0,
      "label": "average precision, recall, and F1",
      "aliases": [
        "average precision, recall, and F1"
      ],
      "types": [
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of metrics used to evaluate the quality of queries generated by OPRL for knowledge graph completion, including precision, recall, and F1 score.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "average precision, recall, and F1",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-average_precision__recall__and_f1-Mention-1"
        }
      ],
      "relevance": 0.62109375
    },
    "Entity-and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b_": {
      "node_id": "and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b_",
      "disambiguation_index": 0,
      "label": "and the number of distinct entities is given by counting the number of non-zero elements in v(1)(B)",
      "aliases": [
        "and the number of distinct entities is given by counting the number of non-zero elements in v(1)(B)"
      ],
      "types": [
        "conclusion",
        "counting"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The vector representation of the set of all predicates (P) in the knowledge graph (KG), used for computing the quality metrics OPSC and OPHC.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-4",
          "local_name": "and the number of distinct entities is given by counting the number of non-zero elements in v(1)(B)",
          "local_types": [
            "conclusion",
            "counting"
          ],
          "iri": "Entity-and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b_-Mention-1"
        }
      ],
      "relevance": 0.62060546875
    },
    "Entity-let_r__e__e___e_i__body_r__p_t_be_a_given_in_definition_1_but_adapted_straightforwardly_to_the_open_path_rule_case": {
      "node_id": "let_r__e__e___e_i__body_r__p_t_be_a_given_in_definition_1_but_adapted_straightforwardly_to_the_open_path_rule_case",
      "disambiguation_index": 0,
      "label": "Let r, e, e', e_i, body_r, P_t be as given in Definition 1 but adapted straightforwardly to the open path rule case",
      "aliases": [
        "Let r, e, e', e_i, body_r, P_t be as given in Definition 1 but adapted straightforwardly to the open path rule case"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of variables and predicates used to define an open path rule for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-3",
          "local_name": "Let r, e, e', e_i, body_r, P_t be as given in Definition 1 but adapted straightforwardly to the open path rule case",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-let_r__e__e___e_i__body_r__p_t_be_a_given_in_definition_1_but_adapted_straightforwardly_to_the_open_path_rule_case-Mention-1"
        }
      ],
      "relevance": 0.62060546875
    },
    "Entity-this_rule_(1)": {
      "node_id": "this_rule_(1)",
      "disambiguation_index": 1,
      "label": "this rule",
      "aliases": [
        "this rule"
      ],
      "types": [
        "rule",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The open path (OP) rule of the form P_t(x, z_0) \u2190 P_1(z_0, z_1) \u2227 P_2(z_1, z_2) \u2227 ... \u2227 P_n(z_{n-1}, y), where each P_i and P_t are predicates in the Knowledge Graph (KG) and each of {x, z_i, y} are variables; x and y are free while the z_i are bound.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-4",
          "local_name": "this rule",
          "local_types": [
            "rule",
            "concept"
          ],
          "iri": "Entity-this_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.62060546875
    },
    "Entity-the_akgc_task": {
      "node_id": "the_akgc_task",
      "disambiguation_index": 0,
      "label": "the AKGC task",
      "aliases": [
        "the AKGC task"
      ],
      "types": [
        "task",
        "AKGC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of generating queries about missing links in a knowledge graph, taking into account predicate information and using open-path rules mined from training data.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "the AKGC task",
          "local_types": [
            "task",
            "AKGC"
          ],
          "iri": "Entity-the_akgc_task-Mention-1"
        }
      ],
      "relevance": 0.62060546875
    },
    "Entity-let_r__e__e___e_i__body_r__p_t": {
      "node_id": "let_r__e__e___e_i__body_r__p_t",
      "disambiguation_index": 0,
      "label": "Let r, e, e', e_i, body_r, P_t",
      "aliases": [
        "Let r, e, e', e_i, body_r, P_t"
      ],
      "types": [
        "notation",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of variables and predicates used in defining an open path rule for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-3",
          "local_name": "Let r, e, e', e_i, body_r, P_t",
          "local_types": [
            "notation",
            "mathematical expression"
          ],
          "iri": "Entity-let_r__e__e___e_i__body_r__p_t-Mention-1"
        }
      ],
      "relevance": 0.6201171875
    },
    "Entity-some_top-ranked_candidate": {
      "node_id": "some_top-ranked_candidate",
      "disambiguation_index": 0,
      "label": "some top-ranked candidates",
      "aliases": [
        "some top-ranked candidates"
      ],
      "types": [
        "candidates"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "High-quality OP (Open Path) rules about a specific target predicate P, mined from a massive knowledge graph K",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-12",
          "local_name": "some top-ranked candidates",
          "local_types": [
            "candidates"
          ],
          "iri": "Entity-some_top-ranked_candidate-Mention-1"
        }
      ],
      "relevance": 0.6201171875
    },
    "Entity-the_whole_rule": {
      "node_id": "the_whole_rule",
      "disambiguation_index": 0,
      "label": "the whole rule",
      "aliases": [
        "the whole rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The co-occurrence fitness function for an open path (OP) rule, which aggregates the pairwise local occurrences along the OP rule and captures the weight of connections between sequential entities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-14-Sentence-1",
          "local_name": "the whole rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_whole_rule-Mention-1"
        }
      ],
      "relevance": 0.6201171875
    },
    "Entity-we_(5)": {
      "node_id": "we_(5)",
      "disambiguation_index": 5,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors, referring to themselves as 'we', are discussing their algorithm for learning Open Path rules from Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(5)-Mention-1"
        }
      ],
      "relevance": 0.6201171875
    },
    "Entity-scalekb": {
      "node_id": "scalekb",
      "disambiguation_index": 0,
      "label": "ScaleKB",
      "aliases": [
        "ScaleKB"
      ],
      "types": [
        "software",
        "database",
        "tool",
        "knowledge base",
        "system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "ScaleKB: A system or tool for learning and using closed-path (CP) rules, which are a type of logical axiom used to complete knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "ScaleKB",
          "local_types": [
            "software",
            "database",
            "tool",
            "knowledge base",
            "system"
          ],
          "iri": "Entity-scalekb-Mention-1"
        }
      ],
      "relevance": 0.61962890625
    },
    "Entity-novel": {
      "node_id": "novel",
      "disambiguation_index": 0,
      "label": "novel",
      "aliases": [
        "novel"
      ],
      "types": [
        "concept",
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A new and original algorithm for learning constrained existential rules in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "novel",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-novel-Mention-1"
        }
      ],
      "relevance": 0.61962890625
    },
    "Entity-agkgc": {
      "node_id": "agkgc",
      "disambiguation_index": 0,
      "label": "AGKGC",
      "aliases": [
        "AGKGC"
      ],
      "types": [
        "method",
        "framework",
        "system",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Active Knowledge Graph Completion (AGKGC) framework",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-1",
          "local_name": "AGKGC",
          "local_types": [
            "method",
            "framework",
            "system",
            "algorithm"
          ],
          "iri": "Entity-agkgc-Mention-1"
        }
      ],
      "relevance": 0.61962890625
    },
    "Entity-opsc_and_ophc_(2)": {
      "node_id": "opsc_and_ophc_(2)",
      "disambiguation_index": 2,
      "label": "OPSC and OPHC",
      "aliases": [
        "OPSC and OPHC"
      ],
      "types": [
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "OPSC (Open Path Support) and OPHC (Open Path Head Count) are metrics used to evaluate the quality of candidate Open Path rules mined from Knowledge Graphs, measuring the number of entities that satisfy the head or body of a rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-10-Sentence-1",
          "local_name": "OPSC and OPHC",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-opsc_and_ophc_(2)-Mention-1"
        }
      ],
      "relevance": 0.61962890625
    },
    "Entity-the_experiment": {
      "node_id": "the_experiment",
      "disambiguation_index": 0,
      "label": "the experiment",
      "aliases": [
        "the experiment"
      ],
      "types": [
        "experiment"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The second set of experiments assessing the relevance of queries induced from OPRL-mined rules, which evaluates query generation performance on three KGs (FB15KSE, YAGO2 core, and Poker) by comparing average precision, recall, and F1 scores.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "the experiment",
          "local_types": [
            "experiment"
          ],
          "iri": "Entity-the_experiment-Mention-1"
        }
      ],
      "relevance": 0.61962890625
    },
    "Entity-of_the_way_that_the_body_is_satisfied_in_the_kg": {
      "node_id": "of_the_way_that_the_body_is_satisfied_in_the_kg",
      "disambiguation_index": 0,
      "label": "of the ways that the body is satisfied in the KG",
      "aliases": [
        "of the ways that the body is satisfied in the KG"
      ],
      "types": [
        "description",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure quantifying how frequently a rule is true, defined as the proportion of inferred head instances that are also satisfied when the rule body is instantiated within the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "of the ways that the body is satisfied in the KG",
          "local_types": [
            "description",
            "knowledge graph"
          ],
          "iri": "Entity-of_the_way_that_the_body_is_satisfied_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.619140625
    },
    "Entity-to_find_relevant_query": {
      "node_id": "to_find_relevant_query",
      "disambiguation_index": 0,
      "label": "To find relevant queries",
      "aliases": [
        "To find relevant queries"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating questions or queries related to a knowledge graph, using open path rules mined over training data.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "To find relevant queries",
          "local_types": [
            "task"
          ],
          "iri": "Entity-to_find_relevant_query-Mention-1"
        }
      ],
      "relevance": 0.619140625
    },
    "Entity-rlvlr__doe": {
      "node_id": "rlvlr__doe",
      "disambiguation_index": 0,
      "label": "RLvLR* does",
      "aliases": [
        "RLvLR* does"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The method that generates relevant queries for knowledge graph completion by learning constrained existential rules.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-3",
          "local_name": "RLvLR* does",
          "local_types": [
            "method"
          ],
          "iri": "Entity-rlvlr__doe-Mention-1"
        }
      ],
      "relevance": 0.619140625
    },
    "Entity-previous_work_in_rule_learning_from_a_kg": {
      "node_id": "previous_work_in_rule_learning_from_a_kg",
      "disambiguation_index": 0,
      "label": "Previous work in rule learning from a KG",
      "aliases": [
        "Previous work in rule learning from a KG"
      ],
      "types": [
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Research efforts that have explored the application of knowledge graph-based approaches for inducing rules",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "Previous work in rule learning from a KG",
          "local_types": [
            "research"
          ],
          "iri": "Entity-previous_work_in_rule_learning_from_a_kg-Mention-1"
        }
      ],
      "relevance": 0.61767578125
    },
    "Entity-link_predictor_need_to_repair_working_kg": {
      "node_id": "link_predictor_need_to_repair_working_kg",
      "disambiguation_index": 0,
      "label": "link predictors need to repair working KGs",
      "aliases": [
        "link predictors need to repair working KGs"
      ],
      "types": [
        "predictors",
        "KGs"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept refers to a set of algorithms or methods (link predictors) that are needed to generate and process relevant questions or queries to complete an existing knowledge graph, ensuring the KG remains accurate and up-to-date.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-4",
          "local_name": "link predictors need to repair working KGs",
          "local_types": [
            "predictors",
            "KGs"
          ],
          "iri": "Entity-link_predictor_need_to_repair_working_kg-Mention-1"
        }
      ],
      "relevance": 0.61767578125
    },
    "Entity-generating_query": {
      "node_id": "generating_query",
      "disambiguation_index": 0,
      "label": "Generating queries",
      "aliases": [
        "Generating queries"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating open-ended questions or queries from learned rules to identify and complete missing facts in a knowledge graph, potentially introducing new entities into the graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-4",
          "local_name": "Generating queries",
          "local_types": [
            "query"
          ],
          "iri": "Entity-generating_query-Mention-1"
        }
      ],
      "relevance": 0.6171875
    },
    "Entity-then_pick_the_rule_with_opsupp__r___1": {
      "node_id": "then_pick_the_rule_with_opsupp__r___1",
      "disambiguation_index": 0,
      "label": "then pick the rules with OPsupp(r) \u2265 1",
      "aliases": [
        "then pick the rules with OPsupp(r) \u2265 1"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum threshold value of support (OPsupp(r)) required to select a candidate rule from the sampled knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "then pick the rules with OPsupp(r) \u2265 1",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-then_pick_the_rule_with_opsupp__r___1-Mention-1"
        }
      ],
      "relevance": 0.6171875
    },
    "Entity-the_intended_scope_of_kg": {
      "node_id": "the_intended_scope_of_kg",
      "disambiguation_index": 0,
      "label": "the intended scope of KGs",
      "aliases": [
        "This",
        "the intended scope of KGs"
      ],
      "types": [
        "topic",
        "scope"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The intended scope of Knowledge Graphs (KGs) typically remains poorly defined, resulting in incomplete recording of relevant entities and relationships.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "the intended scope of KGs",
          "local_types": [
            "scope"
          ],
          "iri": "Entity-the_intended_scope_of_kg-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "This",
          "local_types": [
            "topic"
          ],
          "iri": "Entity-the_intended_scope_of_kg-Mention-2"
        }
      ],
      "relevance": 0.61669921875
    },
    "Entity-enterprise_and_public_knowledge_graph__kg_": {
      "node_id": "enterprise_and_public_knowledge_graph__kg_",
      "disambiguation_index": 0,
      "label": "Enterprise and public Knowledge Graphs (KGs)",
      "aliases": [
        "Enterprise and public Knowledge Graphs (KGs)"
      ],
      "types": [
        "knowledge graph",
        "Knowledge Graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of graph that represents entities, relationships, and concepts from both enterprise and publicly available sources.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Enterprise and public Knowledge Graphs (KGs)",
          "local_types": [
            "knowledge graph",
            "Knowledge Graph"
          ],
          "iri": "Entity-enterprise_and_public_knowledge_graph__kg_-Mention-1"
        }
      ],
      "relevance": 0.6162109375
    },
    "Entity-in_shortest-first_order": {
      "node_id": "in_shortest-first_order",
      "disambiguation_index": 0,
      "label": "in shortest-first order",
      "aliases": [
        "in shortest-first order"
      ],
      "types": [
        "algorithm",
        "order"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of generating Open Path (OP) rules for a target predicate P_i and its inverse P_i^-1, in order to complete a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-8",
          "local_name": "in shortest-first order",
          "local_types": [
            "algorithm",
            "order"
          ],
          "iri": "Entity-in_shortest-first_order-Mention-1"
        }
      ],
      "relevance": 0.6162109375
    },
    "Entity-the_baseline": {
      "node_id": "the_baseline",
      "disambiguation_index": 0,
      "label": "the baselines",
      "aliases": [
        "the baselines"
      ],
      "types": [
        "baseline"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The baseline refers to a previous approach or methods used for knowledge graph completion that are being compared and outperformed by the proposed method OPRL.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "the baselines",
          "local_types": [
            "baseline"
          ],
          "iri": "Entity-the_baseline-Mention-1"
        }
      ],
      "relevance": 0.6162109375
    },
    "Entity-for_example__if_we_have_p_t__e1__e2__a_a_fact__then_our_set_of_entity_includes_e1_and_e2_.": {
      "node_id": "for_example__if_we_have_p_t__e1__e2__a_a_fact__then_our_set_of_entity_includes_e1_and_e2_.",
      "disambiguation_index": 0,
      "label": "For example, if we have P_t(e1, e2) as a fact, then our set of entities includes e1 and e2.",
      "aliases": [
        "For example, if we have P_t(e1, e2) as a fact, then our set of entities includes e1 and e2."
      ],
      "types": [
        "example",
        "illustration"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sample entity pair used to illustrate the process of constructing a reduced knowledge graph (KG) for active KG completion.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-7",
          "local_name": "For example, if we have P_t(e1, e2) as a fact, then our set of entities includes e1 and e2.",
          "local_types": [
            "example",
            "illustration"
          ],
          "iri": "Entity-for_example__if_we_have_p_t__e1__e2__a_a_fact__then_our_set_of_entity_includes_e1_and_e2_.-Mention-1"
        }
      ],
      "relevance": 0.61572265625
    },
    "Entity-the_target_predicate": {
      "node_id": "the_target_predicate",
      "disambiguation_index": 0,
      "label": "the target predicate",
      "aliases": [
        "the target predicate"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A constrained existential rule that completes a knowledge graph by generating relevant queries when there is no closed rule to answer the query or when the correct answer is a missing entity not present in the KG.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-10",
          "local_name": "the target predicate",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.61572265625
    },
    "Entity-embeddings__k__": {
      "node_id": "embeddings__k__",
      "disambiguation_index": 0,
      "label": "Embeddings(K')",
      "aliases": [
        "Embeddings(K')"
      ],
      "types": [
        "embedding algorithm",
        "mathematical concept",
        "function",
        "embedding",
        "algorithm",
        "function call"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The embedding function that computes embeddings for predicates and arguments in a sample knowledge graph K', used to estimate rule quality.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-6",
          "local_name": "Embeddings(K')",
          "local_types": [
            "embedding algorithm",
            "mathematical concept",
            "function",
            "embedding",
            "algorithm",
            "function call"
          ],
          "iri": "Entity-embeddings__k__-Mention-1"
        }
      ],
      "relevance": 0.615234375
    },
    "Entity-query_with_precision_a_high_a_98__and_recall_of_62_": {
      "node_id": "query_with_precision_a_high_a_98__and_recall_of_62_",
      "disambiguation_index": 0,
      "label": "queries with precision as high as 98% and recall of 62%",
      "aliases": [
        "queries with precision as high as 98% and recall of 62%"
      ],
      "types": [
        "evaluation metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The evaluation metric that measures the precision (up to 98%) and recall (at 62%) of queries generated by Open Path rules on a complete Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "queries with precision as high as 98% and recall of 62%",
          "local_types": [
            "evaluation metric"
          ],
          "iri": "Entity-query_with_precision_a_high_a_98__and_recall_of_62_-Mention-1"
        }
      ],
      "relevance": 0.615234375
    },
    "Entity-the_partial_auc_of_oprl": {
      "node_id": "the_partial_auc_of_oprl",
      "disambiguation_index": 0,
      "label": "the partial AUC of OPRL",
      "aliases": [
        "the partial AUC of OPRL"
      ],
      "types": [
        "performance measure",
        "evaluation metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The area under the ROC curve, up to a specific point (0.30), representing the performance of OPRL in generating relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "the partial AUC of OPRL",
          "local_types": [
            "performance measure",
            "evaluation metric"
          ],
          "iri": "Entity-the_partial_auc_of_oprl-Mention-1"
        }
      ],
      "relevance": 0.615234375
    },
    "Entity-they_(2)": {
      "node_id": "they_(2)",
      "disambiguation_index": 2,
      "label": "They",
      "aliases": [
        "They"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The methods for automatic knowledge graph completion and rule learning.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "They",
          "local_types": [
            "author"
          ],
          "iri": "Entity-they_(2)-Mention-1"
        }
      ],
      "relevance": 0.61474609375
    },
    "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr": {
      "node_id": "the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "disambiguation_index": 0,
      "label": "the state-of-the-art rule-based link predictor, RLvLR",
      "aliases": [
        "the state-of-the-art rule-based link predictor, RLvLR"
      ],
      "types": [
        "predictor",
        "rule-based link predictor",
        "link_predictor"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning constrained existential rules that generates relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-1",
          "local_name": "the state-of-the-art rule-based link predictor, RLvLR",
          "local_types": [
            "predictor",
            "rule-based link predictor",
            "link_predictor"
          ],
          "iri": "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr-Mention-1"
        }
      ],
      "relevance": 0.61474609375
    },
    "Entity-the_first_focus_on_entity_and_the_second_on_predicate": {
      "node_id": "the_first_focus_on_entity_and_the_second_on_predicate",
      "disambiguation_index": 0,
      "label": "the first focuses on entities and the second on predicates",
      "aliases": [
        "the first focuses on entities and the second on predicates"
      ],
      "types": [
        "entity",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The Open Path (OP) rule quality estimation function, which uses argument embeddings built from entity embeddings and averages the embeddings of all entities at the endpoints.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-1",
          "local_name": "the first focuses on entities and the second on predicates",
          "local_types": [
            "entity",
            "predicate"
          ],
          "iri": "Entity-the_first_focus_on_entity_and_the_second_on_predicate-Mention-1"
        }
      ],
      "relevance": 0.61376953125
    },
    "Entity-local_co-occurrence_fitness": {
      "node_id": "local_co-occurrence_fitness",
      "disambiguation_index": 0,
      "label": "local co-occurrence fitness",
      "aliases": [
        "local co-occurrence fitness"
      ],
      "types": [
        "evaluation criterion",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure of the similarity between predicate embeddings along an open path rule, used to estimate the quality of rules in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "local co-occurrence fitness",
          "local_types": [
            "evaluation criterion",
            "metric"
          ],
          "iri": "Entity-local_co-occurrence_fitness-Mention-1"
        }
      ],
      "relevance": 0.61328125
    },
    "Entity-and_the_head_relates_different_pair_of_entity__x__t__to_the_pair_connected_via_the_body_of_the_same_rule__x__y_": {
      "node_id": "and_the_head_relates_different_pair_of_entity__x__t__to_the_pair_connected_via_the_body_of_the_same_rule__x__y_",
      "disambiguation_index": 0,
      "label": "and the head relates different pairs of entities (x, t) to the pairs connected via the body of the same rule (x, y)",
      "aliases": [
        "and the head relates different pairs of entities (x, t) to the pairs connected via the body of the same rule (x, y)"
      ],
      "types": [
        "relation",
        "logic"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of Open Path rule in knowledge graph completion where the head predicate connects distinct entity pairs (x, t) with those linked by the predicates in the rule's body.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "and the head relates different pairs of entities (x, t) to the pairs connected via the body of the same rule (x, y)",
          "local_types": [
            "relation",
            "logic"
          ],
          "iri": "Entity-and_the_head_relates_different_pair_of_entity__x__t__to_the_pair_connected_via_the_body_of_the_same_rule__x__y_-Mention-1"
        }
      ],
      "relevance": 0.61328125
    },
    "Entity-the_query_(1)": {
      "node_id": "the_query_(1)",
      "disambiguation_index": 1,
      "label": "the queries",
      "aliases": [
        "the queries"
      ],
      "types": [
        "queries"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of questions or statements that can be used to solicit missing facts in a Knowledge Graph (KG) and enable active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "the queries",
          "local_types": [
            "queries"
          ],
          "iri": "Entity-the_query_(1)-Mention-1"
        }
      ],
      "relevance": 0.61328125
    },
    "Entity-in_knowledge_graph_completion": {
      "node_id": "in_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "in knowledge graph completion",
      "aliases": [
        "in knowledge graph completion"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of predicting and generating relevant queries, rather than specific missing facts, in order to complete a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-5",
          "local_name": "in knowledge graph completion",
          "local_types": [
            "task"
          ],
          "iri": "Entity-in_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.61279296875
    },
    "Entity-any_cp_rule": {
      "node_id": "any_cp_rule",
      "disambiguation_index": 0,
      "label": "any CP rule",
      "aliases": [
        "any CP rule"
      ],
      "types": [
        "CP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of closed path rule in knowledge graphs, constrained existential rules that form a looping path over variables and are strictly less expressive than open path rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-3",
          "local_name": "any CP rule",
          "local_types": [
            "CP rule"
          ],
          "iri": "Entity-any_cp_rule-Mention-1"
        }
      ],
      "relevance": 0.61279296875
    },
    "Entity-vast_kg": {
      "node_id": "vast_kg",
      "disambiguation_index": 0,
      "label": "vast KGs",
      "aliases": [
        "vast KGs"
      ],
      "types": [
        "concept",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Massive knowledge graphs with up to 8 million facts, which existing embedding-based methods are unable to handle efficiently.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-1",
          "local_name": "vast KGs",
          "local_types": [
            "concept",
            "knowledge graph"
          ],
          "iri": "Entity-vast_kg-Mention-1"
        }
      ],
      "relevance": 0.61279296875
    },
    "Entity-definition_6": {
      "node_id": "definition_6",
      "disambiguation_index": 0,
      "label": "Definition 6",
      "aliases": [
        "Definition 6"
      ],
      "types": [
        "notation",
        "definition",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The co-occurrence fitness function for OP rules, which estimates rule quality by aggregating pairwise local occurrences of predicate embeddings along an open path.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-15-Sentence-1",
          "local_name": "Definition 6",
          "local_types": [
            "notation",
            "definition",
            "concept"
          ],
          "iri": "Entity-definition_6-Mention-1"
        }
      ],
      "relevance": 0.6123046875
    },
    "Entity-our_novel_hybrid_fitness_function": {
      "node_id": "our_novel_hybrid_fitness_function",
      "disambiguation_index": 0,
      "label": "Our novel hybrid fitness function",
      "aliases": [
        "Our novel hybrid fitness function"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithm for learning constrained existential rules to generate relevant questions and complete knowledge graphs, which uses a hybrid fitness function that outperforms the adapted fitness function from RLVLR.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-7-Sentence-3",
          "local_name": "Our novel hybrid fitness function",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-our_novel_hybrid_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.61181640625
    },
    "Entity-in_other_word__a_pair_of_entity_satisfies_both_the_body_and_the_head_of_a_cp_rule": {
      "node_id": "in_other_word__a_pair_of_entity_satisfies_both_the_body_and_the_head_of_a_cp_rule",
      "disambiguation_index": 0,
      "label": "In other words, a pair of entities satisfies both the body and the head of a CP rule",
      "aliases": [
        "In other words, a pair of entities satisfies both the body and the head of a CP rule"
      ],
      "types": [
        "entities",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A concept representing a pair of entities in a knowledge graph (KG) that instantiates a closed path (CP) rule by satisfying both its body and head.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-5",
          "local_name": "In other words, a pair of entities satisfies both the body and the head of a CP rule",
          "local_types": [
            "entities",
            "concept"
          ],
          "iri": "Entity-in_other_word__a_pair_of_entity_satisfies_both_the_body_and_the_head_of_a_cp_rule-Mention-1"
        }
      ],
      "relevance": 0.611328125
    },
    "Entity-active_knowledge_graph_completion": {
      "node_id": "active_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "active knowledge graph completion",
      "aliases": [
        "active knowledge graph completion"
      ],
      "types": [
        "methodology",
        "knowledge representation",
        "approach",
        "concept",
        "method",
        "artificial intelligence"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique for dynamically updating a knowledge graph by actively inferring missing relationships between entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-6",
          "local_name": "active knowledge graph completion",
          "local_types": [
            "method",
            "methodology",
            "approach",
            "concept"
          ],
          "iri": "Entity-active_knowledge_graph_completion-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-5",
          "local_name": "active knowledge graph completion",
          "local_types": [
            "knowledge representation",
            "artificial intelligence"
          ],
          "iri": "Entity-active_knowledge_graph_completion-Mention-2"
        }
      ],
      "relevance": 0.61083984375
    },
    "Entity-the_rule_form_a_closed_path__or_single_unbroken_loop_of_link_between_the_variable": {
      "node_id": "the_rule_form_a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "disambiguation_index": 0,
      "label": "The rule forms a closed path, or single unbroken loop of links between the variables",
      "aliases": [
        "The rule forms a closed path, or single unbroken loop of links between the variables"
      ],
      "types": [
        "statement",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of existential rule used for knowledge graph completion",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "The rule forms a closed path, or single unbroken loop of links between the variables",
          "local_types": [
            "statement",
            "fact"
          ],
          "iri": "Entity-the_rule_form_a_closed_path__or_single_unbroken_loop_of_link_between_the_variable-Mention-1"
        }
      ],
      "relevance": 0.61083984375
    },
    "Entity-fitness_function_proposed_for_oprl": {
      "node_id": "fitness_function_proposed_for_oprl",
      "disambiguation_index": 0,
      "label": "fitness functions proposed for OPRL",
      "aliases": [
        "fitness functions proposed for OPRL"
      ],
      "types": [
        "functions",
        "evaluation metrics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Evaluation metrics used to assess the quality of rules learned by Open Path Rule Learner (OPRL)",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "fitness functions proposed for OPRL",
          "local_types": [
            "functions",
            "evaluation metrics"
          ],
          "iri": "Entity-fitness_function_proposed_for_oprl-Mention-1"
        }
      ],
      "relevance": 0.61083984375
    },
    "Entity-the_same_query__p_1____e_7__": {
      "node_id": "the_same_query__p_1____e_7__",
      "disambiguation_index": 0,
      "label": "the same query (P_1(?, e_7))",
      "aliases": [
        "the same query (P_1(?, e_7))"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific instance of a query that completes a knowledge graph by answering unclear origin queries, generated using OP rules and the predicate P_1 with entity e_7.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "the same query (P_1(?, e_7))",
          "local_types": [
            "query"
          ],
          "iri": "Entity-the_same_query__p_1____e_7__-Mention-1"
        }
      ],
      "relevance": 0.61083984375
    },
    "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f": {
      "node_id": "knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "disambiguation_index": 0,
      "label": "knowledge graph (KG) is a pair K = (E, F) where F is a set of facts and E is the set of entities that exist in the facts F",
      "aliases": [
        "knowledge graph (KG) is a pair K = (E, F) where F is a set of facts and E is the set of entities that exist in the facts F",
        "A knowledge graph (KG) is a pair K = (E, F)",
        "The KG",
        "(KG)",
        "K",
        "the KG"
      ],
      "types": [
        "variable",
        "definition",
        "concept",
        "pair",
        "KG",
        "knowledge graph",
        "notation",
        "knowledge_graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A structured representation of knowledge consisting of interconnected entities and their relationships.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "knowledge graph (KG) is a pair K = (E, F) where F is a set of facts and E is the set of entities that exist in the facts F",
          "local_types": [
            "definition",
            "concept"
          ],
          "iri": "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "A knowledge graph (KG) is a pair K = (E, F)",
          "local_types": [
            "knowledge_graph",
            "pair"
          ],
          "iri": "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "(KG)",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "K",
          "local_types": [
            "notation",
            "variable"
          ],
          "iri": "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-5",
          "local_name": "the KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f-Mention-5"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-6",
          "local_name": "the KG",
          "local_types": [
            "knowledge graph",
            "KG"
          ],
          "iri": "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f-Mention-6"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-1",
          "local_name": "The KG",
          "local_types": [
            "knowledge graph",
            "KG"
          ],
          "iri": "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f-Mention-7"
        }
      ],
      "relevance": 0.6103515625
    },
    "Entity-the_performance_of_fitness_function_proposed_for_oprl": {
      "node_id": "the_performance_of_fitness_function_proposed_for_oprl",
      "disambiguation_index": 0,
      "label": "the performance of fitness functions proposed for OPRL",
      "aliases": [
        "the performance of fitness functions proposed for OPRL"
      ],
      "types": [
        "performance",
        "fitness function",
        "proposed method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The evaluation metrics used to assess the quality and effectiveness of the proposed fitness functions designed specifically for Open Path Rule Learning (OPRL) algorithm.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "the performance of fitness functions proposed for OPRL",
          "local_types": [
            "performance",
            "fitness function",
            "proposed method"
          ],
          "iri": "Entity-the_performance_of_fitness_function_proposed_for_oprl-Mention-1"
        }
      ],
      "relevance": 0.6103515625
    },
    "Entity-a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._": {
      "node_id": "a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._",
      "disambiguation_index": 0,
      "label": "a hybrid fitness function that combines both f_co(.) and f_op(.)",
      "aliases": [
        "a hybrid fitness function that combines both f_co(.) and f_op(.)"
      ],
      "types": [
        "hybrid",
        "fitness function",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning open path (OP) rules that combines both closed rule fitness function (f_co(.)) and OP rule fitness function (f_op(.)) to efficiently estimate rule quality.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "a hybrid fitness function that combines both f_co(.) and f_op(.)",
          "local_types": [
            "hybrid",
            "fitness function",
            "algorithm"
          ],
          "iri": "Entity-a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._-Mention-1"
        }
      ],
      "relevance": 0.6103515625
    },
    "Entity-public_knowledge_graph__kg_": {
      "node_id": "public_knowledge_graph__kg_",
      "disambiguation_index": 0,
      "label": "public Knowledge Graphs (KGs)",
      "aliases": [
        "public Knowledge Graphs (KGs)"
      ],
      "types": [
        "data set",
        "knowledge base"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of structured data that represents a set of entities, their relationships, and attributes, publicly available for querying and reuse.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "public Knowledge Graphs (KGs)",
          "local_types": [
            "data set",
            "knowledge base"
          ],
          "iri": "Entity-public_knowledge_graph__kg_-Mention-1"
        }
      ],
      "relevance": 0.60986328125
    },
    "Entity-we_use_the_sampling_algorithm__sampling____proposed_in_rlvlr": {
      "node_id": "we_use_the_sampling_algorithm__sampling____proposed_in_rlvlr",
      "disambiguation_index": 0,
      "label": "We use the sampling algorithm, Sampling(), proposed in RLVLR",
      "aliases": [
        "We use the sampling algorithm, Sampling(), proposed in RLVLR"
      ],
      "types": [
        "technique",
        "reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The sampling algorithm referred to is a method for reducing the size of a knowledge graph (KG) by computing a fragment of entities related to a target predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "We use the sampling algorithm, Sampling(), proposed in RLVLR",
          "local_types": [
            "technique",
            "reference"
          ],
          "iri": "Entity-we_use_the_sampling_algorithm__sampling____proposed_in_rlvlr-Mention-1"
        }
      ],
      "relevance": 0.60986328125
    },
    "Entity-previous_rule-based_method": {
      "node_id": "previous_rule-based_method",
      "disambiguation_index": 0,
      "label": "previous rule-based methods",
      "aliases": [
        "previous rule-based methods"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Rule-based methods used before the introduction of Open Path (OP) rules, which learn closed (non-existential) rules.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "previous rule-based methods",
          "local_types": [
            "method"
          ],
          "iri": "Entity-previous_rule-based_method-Mention-1"
        }
      ],
      "relevance": 0.60986328125
    },
    "Entity-a_query": {
      "node_id": "a_query",
      "disambiguation_index": 0,
      "label": "a query",
      "aliases": [
        "a query"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A query that can identify missing facts even when there is no pattern (such as a closed rule) that fully instantiates the fact in the Knowledge Graph, and generate relevant queries to complete the KG or introduce new entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-7",
          "local_name": "a query",
          "local_types": [
            "query"
          ],
          "iri": "Entity-a_query-Mention-1"
        }
      ],
      "relevance": 0.60986328125
    },
    "Entity-we_are_not_aware": {
      "node_id": "we_are_not_aware",
      "disambiguation_index": 0,
      "label": "We are not aware",
      "aliases": [
        "We are not aware"
      ],
      "types": [
        "statement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The absence of comparable Open Path (OP) rule learners that can be used as a benchmark to evaluate the performance of OP Rule Learner (OPRL).",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "We are not aware",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-we_are_not_aware-Mention-1"
        }
      ],
      "relevance": 0.60986328125
    },
    "Entity-traditional_knowledge_graph_completion": {
      "node_id": "traditional_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "traditional knowledge graph completion",
      "aliases": [
        "traditional knowledge graph completion"
      ],
      "types": [
        "process",
        "methodology",
        "knowledge representation",
        "information retrieval",
        "topic",
        "artificial intelligence application"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method of inferring missing information in a knowledge graph based on existing relationships and patterns, often relying on human expertise or domain-specific rules.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "traditional knowledge graph completion",
          "local_types": [
            "methodology",
            "process"
          ],
          "iri": "Entity-traditional_knowledge_graph_completion-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-1",
          "local_name": "traditional knowledge graph completion",
          "local_types": [
            "topic",
            "artificial intelligence application",
            "information retrieval",
            "knowledge representation"
          ],
          "iri": "Entity-traditional_knowledge_graph_completion-Mention-2"
        }
      ],
      "relevance": 0.609375
    },
    "Entity-we_address_the_following_problem_in_traditional_knowledge_graph_completion": {
      "node_id": "we_address_the_following_problem_in_traditional_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "we address the following problems in traditional knowledge graph completion",
      "aliases": [
        "we address the following problems in traditional knowledge graph completion"
      ],
      "types": [
        "problem",
        "knowledge graph",
        "completion"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Problems with traditional knowledge graph completion methods that fail to identify missing facts and generate relevant questions for completing a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-1",
          "local_name": "we address the following problems in traditional knowledge graph completion",
          "local_types": [
            "problem",
            "knowledge graph",
            "completion"
          ],
          "iri": "Entity-we_address_the_following_problem_in_traditional_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.609375
    },
    "Entity-the_matrix_product_b__a__p1__a__p2__..._a__pm___with_element_having_a_non-zero_value_.": {
      "node_id": "the_matrix_product_b__a__p1__a__p2__..._a__pm___with_element_having_a_non-zero_value_.",
      "disambiguation_index": 0,
      "label": "the matrix product B = A(P1) A(P2) ... A(Pm), with elements having a non-zero value.",
      "aliases": [
        "the matrix product B = A(P1) A(P2) ... A(Pm), with elements having a non-zero value."
      ],
      "types": [
        "mathematics",
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A mathematical operation used in knowledge graph completion, where multiple adjacency matrices are multiplied together to identify entities that satisfy the body of an Open Path rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-2",
          "local_name": "the matrix product B = A(P1) A(P2) ... A(Pm), with elements having a non-zero value.",
          "local_types": [
            "mathematics",
            "equation"
          ],
          "iri": "Entity-the_matrix_product_b__a__p1__a__p2__..._a__pm___with_element_having_a_non-zero_value_.-Mention-1"
        }
      ],
      "relevance": 0.609375
    },
    "Entity-p__1___1": {
      "node_id": "p__1___1",
      "disambiguation_index": 0,
      "label": "P(1)_1",
      "aliases": [
        "P(1)_1"
      ],
      "types": [
        "equation",
        "mathematical expression",
        "probability"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The co-occurrence fitness function for OP rules, which estimates rule quality by comparing predicate embeddings along a path.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-3",
          "local_name": "P(1)_1",
          "local_types": [
            "equation",
            "mathematical expression",
            "probability"
          ],
          "iri": "Entity-p__1___1-Mention-1"
        }
      ],
      "relevance": 0.60888671875
    },
    "Entity-a_convenient_oracle": {
      "node_id": "a_convenient_oracle",
      "disambiguation_index": 0,
      "label": "a convenient oracle",
      "aliases": [
        "a convenient oracle"
      ],
      "types": [
        "oracle"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An automated link predictor that provides answers to queries generated by OP rules for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "a convenient oracle",
          "local_types": [
            "oracle"
          ],
          "iri": "Entity-a_convenient_oracle-Mention-1"
        }
      ],
      "relevance": 0.60888671875
    },
    "Entity-possible_rule": {
      "node_id": "possible_rule",
      "disambiguation_index": 0,
      "label": "possible rules",
      "aliases": [
        "possible rules"
      ],
      "types": [
        "concept",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of constrained existential rules that can generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-3",
          "local_name": "possible rules",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-possible_rule-Mention-1"
        }
      ],
      "relevance": 0.60888671875
    },
    "Entity-rescal": {
      "node_id": "rescal",
      "disambiguation_index": 0,
      "label": "RESCAL",
      "aliases": [
        "RESCAL"
      ],
      "types": [
        "knowledge graph embedding algorithm",
        "software",
        "methodology",
        "tool",
        "representation learner",
        "embedding algorithm",
        "evaluation function",
        "model",
        "embedding",
        "algorithms",
        "machine learning model",
        "algorithm",
        "method",
        "machine learning algorithm",
        "technique",
        "embedding learner",
        "compositional- based embedding learner"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A knowledge graph embedding algorithm that learns representations of entities and relationships.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-1",
          "local_name": "RESCAL",
          "local_types": [
            "knowledge graph embedding algorithm",
            "machine learning model",
            "algorithm",
            "method",
            "embedding learner",
            "compositional- based embedding learner"
          ],
          "iri": "Entity-rescal-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-2",
          "local_name": "RESCAL",
          "local_types": [
            "tool",
            "embedding learner",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-5",
          "local_name": "RESCAL",
          "local_types": [
            "model",
            "method",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-6",
          "local_name": "RESCAL",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-7",
          "local_name": "RESCAL",
          "local_types": [
            "method",
            "embedding",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-5"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-9",
          "local_name": "RESCAL",
          "local_types": [
            "software",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-6"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "RESCAL",
          "local_types": [
            "model",
            "representation learner",
            "method",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-7"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "RESCAL",
          "local_types": [
            "model",
            "representation learner",
            "method",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-8"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-4",
          "local_name": "RESCAL",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-9"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "RESCAL",
          "local_types": [
            "model",
            "method",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-10"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-4",
          "local_name": "RESCAL",
          "local_types": [
            "tool",
            "algorithms",
            "algorithm",
            "method",
            "technique"
          ],
          "iri": "Entity-rescal-Mention-11"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-4",
          "local_name": "RESCAL",
          "local_types": [
            "methodology",
            "model",
            "algorithm",
            "method",
            "machine learning algorithm"
          ],
          "iri": "Entity-rescal-Mention-12"
        },
        {
          "reference": "Section-9-Paragraph-12-Sentence-1",
          "local_name": "RESCAL",
          "local_types": [
            "method",
            "tool",
            "embedding algorithm",
            "algorithm"
          ],
          "iri": "Entity-rescal-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-4",
          "local_name": "RESCAL",
          "local_types": [
            "algorithms",
            "algorithm",
            "method",
            "technique",
            "evaluation function"
          ],
          "iri": "Entity-rescal-Mention-14"
        }
      ],
      "relevance": 0.6083984375
    },
    "Entity-the_collection_of_rule_r": {
      "node_id": "the_collection_of_rule_r",
      "disambiguation_index": 0,
      "label": "the collection of rules R",
      "aliases": [
        "the collection of rules R"
      ],
      "types": [
        "collection",
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of constrained existential rules used to generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "the collection of rules R",
          "local_types": [
            "collection",
            "rules"
          ],
          "iri": "Entity-the_collection_of_rule_r-Mention-1"
        }
      ],
      "relevance": 0.6083984375
    },
    "Entity-they_fail_to_record_relevant_entity__a_well_a_relevant_relationship_for_the_entity_they_do_record": {
      "node_id": "they_fail_to_record_relevant_entity__a_well_a_relevant_relationship_for_the_entity_they_do_record",
      "disambiguation_index": 0,
      "label": "they fail to record relevant entities, as well as relevant relationships for the entities they do record",
      "aliases": [
        "they fail to record relevant entities, as well as relevant relationships for the entities they do record"
      ],
      "types": [
        "failure",
        "record",
        "entities",
        "relationships"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Knowledge Graphs (KGs) in their current form and implementation.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "they fail to record relevant entities, as well as relevant relationships for the entities they do record",
          "local_types": [
            "failure",
            "record",
            "entities",
            "relationships"
          ],
          "iri": "Entity-they_fail_to_record_relevant_entity__a_well_a_relevant_relationship_for_the_entity_they_do_record-Mention-1"
        }
      ],
      "relevance": 0.60791015625
    },
    "Entity-using_an_adjacency_matrix_representation_of_the_kg": {
      "node_id": "using_an_adjacency_matrix_representation_of_the_kg",
      "disambiguation_index": 0,
      "label": "using an adjacency matrix representation of the KG",
      "aliases": [
        "using an adjacency matrix representation of the KG"
      ],
      "types": [
        "technique",
        "representation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The technique or method used to represent a Knowledge Graph (KG) as a set of square n \u00d7 n adjacency matrices, where each element represents whether a fact exists in the KG.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "using an adjacency matrix representation of the KG",
          "local_types": [
            "technique",
            "representation"
          ],
          "iri": "Entity-using_an_adjacency_matrix_representation_of_the_kg-Mention-1"
        }
      ],
      "relevance": 0.60791015625
    },
    "Entity-knowledge_graph_completion_approach": {
      "node_id": "knowledge_graph_completion_approach",
      "disambiguation_index": 0,
      "label": "Knowledge graph completion approaches",
      "aliases": [
        "Knowledge graph completion approaches",
        "rule-based knowledge graph completion",
        "knowledge graph completion approaches"
      ],
      "types": [
        "methodology",
        "concept",
        "approach",
        "knowledge_graph_completion",
        "field",
        "method",
        "computer science",
        "research area"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Methods or techniques used to complete and infer missing information in a knowledge graph",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "Knowledge graph completion approaches",
          "local_types": [
            "methodology",
            "concept",
            "approach",
            "field",
            "method",
            "computer science",
            "research area"
          ],
          "iri": "Entity-knowledge_graph_completion_approach-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-4",
          "local_name": "rule-based knowledge graph completion",
          "local_types": [
            "method",
            "knowledge_graph_completion"
          ],
          "iri": "Entity-knowledge_graph_completion_approach-Mention-2"
        }
      ],
      "relevance": 0.607421875
    },
    "Entity-the_actively_generated_question": {
      "node_id": "the_actively_generated_question",
      "disambiguation_index": 0,
      "label": "the actively generated questions",
      "aliases": [
        "the actively generated questions"
      ],
      "types": [
        "questions"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of queries inferred from Open Path rules, which are used to guide the discovery of unknown facts and entities in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "the actively generated questions",
          "local_types": [
            "questions"
          ],
          "iri": "Entity-the_actively_generated_question-Mention-1"
        }
      ],
      "relevance": 0.607421875
    },
    "Entity-the_fitting_function_or_the_opscophc_threshold": {
      "node_id": "the_fitting_function_or_the_opscophc_threshold",
      "disambiguation_index": 0,
      "label": "the fitting function or the OPSC/OPHC thresholds",
      "aliases": [
        "the fitting function or the OPSC/OPHC thresholds"
      ],
      "types": [
        "algorithm",
        "thresholds"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The entity 'the fitting function or the OPSC/OPHC thresholds' refers to a set of parameters used by the Open Path Rule Learning (OPRL) algorithm for filtering and ranking generated rules based on their quality, with higher values indicating more confident queries.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "the fitting function or the OPSC/OPHC thresholds",
          "local_types": [
            "algorithm",
            "thresholds"
          ],
          "iri": "Entity-the_fitting_function_or_the_opscophc_threshold-Mention-1"
        }
      ],
      "relevance": 0.607421875
    },
    "Entity-this_kind_of_rule": {
      "node_id": "this_kind_of_rule",
      "disambiguation_index": 0,
      "label": "this kind of rule",
      "aliases": [
        "A rule",
        "this kind of rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A closed path (CP) rule with universal quantification of all variables at the outside, used to infer facts by finding an instantiation of its body in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "this kind of rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-this_kind_of_rule-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-6",
          "local_name": "A rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-this_kind_of_rule-Mention-2"
        }
      ],
      "relevance": 0.60693359375
    },
    "Entity-supporting_this_explanation": {
      "node_id": "supporting_this_explanation",
      "disambiguation_index": 0,
      "label": "Supporting this explanation",
      "aliases": [
        "Supporting this explanation"
      ],
      "types": [
        "explanation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The explanation supporting this mention refers to the performance evaluation of OPRL queries on synthetic Poker KG in terms of precision, recall, and F1-score.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "Supporting this explanation",
          "local_types": [
            "explanation"
          ],
          "iri": "Entity-supporting_this_explanation-Mention-1"
        }
      ],
      "relevance": 0.60693359375
    },
    "Entity-the_query_performance_of_oprl_and_rlvlr__a_roc_curve_in_figure_3": {
      "node_id": "the_query_performance_of_oprl_and_rlvlr__a_roc_curve_in_figure_3",
      "disambiguation_index": 0,
      "label": "the query performance of OPRL and RLvLR* as ROC curves in Figure 3",
      "aliases": [
        "the query performance of OPRL and RLvLR* as ROC curves in Figure 3"
      ],
      "types": [
        "performance",
        "figure"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The receiver operating characteristic (ROC) curve comparing the query performance of Open Path Rule Learning (OPRL) and RLvLR*, using Figure 3, with varying minimum OPSC and SC parameters as ordering criteria.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "the query performance of OPRL and RLvLR* as ROC curves in Figure 3",
          "local_types": [
            "performance",
            "figure"
          ],
          "iri": "Entity-the_query_performance_of_oprl_and_rlvlr__a_roc_curve_in_figure_3-Mention-1"
        }
      ],
      "relevance": 0.6064453125
    },
    "Entity-query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query": {
      "node_id": "query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query",
      "disambiguation_index": 0,
      "label": "queries that predict those same facts: facts that are missing only because you need them to generate queries",
      "aliases": [
        "queries that predict those same facts: facts that are missing only because you need them to generate queries"
      ],
      "types": [
        "query",
        "request for information"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of generating relevant questions or queries from knowledge graph (KG) facts, which are missing only because they are needed to predict those same facts.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-2",
          "local_name": "queries that predict those same facts: facts that are missing only because you need them to generate queries",
          "local_types": [
            "query",
            "request for information"
          ],
          "iri": "Entity-query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query-Mention-1"
        }
      ],
      "relevance": 0.60595703125
    },
    "Entity-opsc": {
      "node_id": "opsc",
      "disambiguation_index": 0,
      "label": "OPSC",
      "aliases": [
        "OPSC"
      ],
      "types": [
        "knowledge graph component",
        "evaluation metric",
        "term",
        "mathematical concept",
        "pathway",
        "open path",
        "concept",
        "measure",
        "computational model",
        "quality threshold",
        "acronym",
        "equation",
        "system",
        "organization",
        "standard",
        "threshold value",
        "statistical metric",
        "method",
        "methodology",
        "performance measure",
        "evaluation method",
        "organisation",
        "body",
        "similar to SC",
        "ontology path",
        "notation",
        "threshold",
        "mathematical expression",
        "indicator",
        "function",
        "parameter",
        "abbreviation",
        "performance indicator",
        "company",
        "metric",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "Open Path Standard Confidence",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-8-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "mathematical concept",
            "measure",
            "metric",
            "notation",
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-opsc-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-10-Sentence-4",
          "local_name": "OPSC",
          "local_types": [
            "term",
            "parameter",
            "abbreviation",
            "measure",
            "metric"
          ],
          "iri": "Entity-opsc-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-10-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "term",
            "organization",
            "standard",
            "abbreviation",
            "threshold"
          ],
          "iri": "Entity-opsc-Mention-3"
        },
        {
          "reference": "Section-8-Paragraph-5-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "notation",
            "function",
            "mathematical concept"
          ],
          "iri": "Entity-opsc-Mention-4"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "methodology",
            "organization",
            "organisation",
            "company",
            "algorithm",
            "system"
          ],
          "iri": "Entity-opsc-Mention-5"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "OPSC",
          "local_types": [
            "threshold",
            "metric"
          ],
          "iri": "Entity-opsc-Mention-6"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-3",
          "local_name": "OPSC",
          "local_types": [
            "measure",
            "similar to SC",
            "metric"
          ],
          "iri": "Entity-opsc-Mention-7"
        },
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "abbreviation",
            "evaluation method",
            "measure",
            "metric",
            "acronym"
          ],
          "iri": "Entity-opsc-Mention-8"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "knowledge graph component",
            "pathway",
            "open path",
            "concept",
            "measure",
            "ontology path",
            "metric",
            "notation"
          ],
          "iri": "Entity-opsc-Mention-9"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "OPSC",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-opsc-Mention-10"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "OPSC",
          "local_types": [
            "statistical metric",
            "computational model"
          ],
          "iri": "Entity-opsc-Mention-11"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "OPSC",
          "local_types": [
            "metric",
            "evaluation method"
          ],
          "iri": "Entity-opsc-Mention-12"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "indicator",
            "term",
            "performance indicator",
            "metric",
            "acronym"
          ],
          "iri": "Entity-opsc-Mention-13"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "method",
            "indicator",
            "concept",
            "metric"
          ],
          "iri": "Entity-opsc-Mention-14"
        },
        {
          "reference": "Section-7-Paragraph-4-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "body",
            "organization",
            "acronym"
          ],
          "iri": "Entity-opsc-Mention-15"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "notation",
            "concept",
            "metric",
            "acronym"
          ],
          "iri": "Entity-opsc-Mention-16"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-4",
          "local_name": "OPSC",
          "local_types": [
            "metric",
            "performance indicator"
          ],
          "iri": "Entity-opsc-Mention-17"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "OPSC",
          "local_types": [
            "threshold value",
            "evaluation metric",
            "quality threshold"
          ],
          "iri": "Entity-opsc-Mention-18"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "quality threshold",
            "evaluation metric"
          ],
          "iri": "Entity-opsc-Mention-19"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "OPSC",
          "local_types": [
            "metric",
            "performance measure"
          ],
          "iri": "Entity-opsc-Mention-20"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "OPSC",
          "local_types": [
            "quality threshold",
            "evaluation metric"
          ],
          "iri": "Entity-opsc-Mention-21"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "OPSC",
          "local_types": [
            "metric",
            "measure",
            "evaluation metric",
            "quality threshold"
          ],
          "iri": "Entity-opsc-Mention-22"
        }
      ],
      "relevance": 0.60546875
    },
    "Entity-closed_path__cp__rule": {
      "node_id": "closed_path__cp__rule",
      "disambiguation_index": 0,
      "label": "Closed Path (CP) rules",
      "aliases": [
        "closed path (CP) rules",
        "Closed Path (CP) rules"
      ],
      "types": [
        "rule type",
        "logical formalism",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of logical formalism used for knowledge representation, characterized by being a closed rule with no free variables.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "Closed Path (CP) rules",
          "local_types": [
            "rule type",
            "logical formalism",
            "knowledge representation"
          ],
          "iri": "Entity-closed_path__cp__rule-Mention-1"
        }
      ],
      "relevance": 0.60546875
    },
    "Entity-existential_rule_from_knowledge_graph": {
      "node_id": "existential_rule_from_knowledge_graph",
      "disambiguation_index": 0,
      "label": "existential rules from knowledge graphs",
      "aliases": [
        "existential rules from knowledge graphs"
      ],
      "types": [
        "methodology",
        "knowledge representation",
        "research direction",
        "knowledge discovery process",
        "machine learning task",
        "artificial intelligence",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Rules that govern the existence of entities or relationships within a knowledge graph, often used to reason about and make predictions on the structure and content of such graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "existential rules from knowledge graphs",
          "local_types": [
            "methodology",
            "knowledge representation",
            "research direction",
            "knowledge discovery process",
            "machine learning task",
            "artificial intelligence",
            "technique"
          ],
          "iri": "Entity-existential_rule_from_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.60546875
    },
    "Entity-let_(1)": {
      "node_id": "let_(1)",
      "disambiguation_index": 1,
      "label": "Let",
      "aliases": [
        "Let"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A notation for open path rules, which are constrained existential rules used to generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-2",
          "local_name": "Let",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-let_(1)-Mention-1"
        }
      ],
      "relevance": 0.60546875
    },
    "Entity-sc_and_opsc_are_similar_measure": {
      "node_id": "sc_and_opsc_are_similar_measure",
      "disambiguation_index": 0,
      "label": "SC and OPSC are similar measures",
      "aliases": [
        "SC and OPSC are similar measures"
      ],
      "types": [
        "measures"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The similarity between two measures used to evaluate the quality of rules learned by Open Path (OP) rule learning algorithm, OPRL.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-3",
          "local_name": "SC and OPSC are similar measures",
          "local_types": [
            "measures"
          ],
          "iri": "Entity-sc_and_opsc_are_similar_measure-Mention-1"
        }
      ],
      "relevance": 0.60546875
    },
    "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg": {
      "node_id": "if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "disambiguation_index": 0,
      "label": "if there exist entities e_1, ..., e_{n-1} in the KG",
      "aliases": [
        "if there exist entities e_1, ..., e_{n-1} in the KG"
      ],
      "types": [
        "entities",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A condition that must be met for a rule to hold true, requiring entities e_1, ..., e_{n-1} to exist and satisfy certain predicates in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "if there exist entities e_1, ..., e_{n-1} in the KG",
          "local_types": [
            "entities",
            "knowledge graph"
          ],
          "iri": "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.6044921875
    },
    "Entity-p__1__t_p_t_p_1_p_2_..._p_n_p__2___n": {
      "node_id": "p__1__t_p_t_p_1_p_2_..._p_n_p__2___n",
      "disambiguation_index": 0,
      "label": "P(1)^T P_t P_1 P_2 ... P_n P(2)_n",
      "aliases": [
        "P(1)^T P_t P_1 P_2 ... P_n P(2)_n"
      ],
      "types": [
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The open path fitness function for an OP rule, which estimates its quality by multiplying predicate embeddings along a chain of predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "P(1)^T P_t P_1 P_2 ... P_n P(2)_n",
          "local_types": [
            "expression"
          ],
          "iri": "Entity-p__1__t_p_t_p_1_p_2_..._p_n_p__2___n-Mention-1"
        }
      ],
      "relevance": 0.6044921875
    },
    "Entity-we_will_use_the_mined_rule_for_generating_query__so_we_need_some_hold-out_fact_for_query_evaluation_.": {
      "node_id": "we_will_use_the_mined_rule_for_generating_query__so_we_need_some_hold-out_fact_for_query_evaluation_.",
      "disambiguation_index": 0,
      "label": "we will use the mined rules for generating queries, so we need some hold-out facts for query evaluation.",
      "aliases": [
        "we will use the mined rules for generating queries, so we need some hold-out facts for query evaluation."
      ],
      "types": [
        "methodology",
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of using learned rules from knowledge graph completion for querying and evaluating their quality by testing them against unseen data (hold-out facts).",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "we will use the mined rules for generating queries, so we need some hold-out facts for query evaluation.",
          "local_types": [
            "methodology",
            "evaluation"
          ],
          "iri": "Entity-we_will_use_the_mined_rule_for_generating_query__so_we_need_some_hold-out_fact_for_query_evaluation_.-Mention-1"
        }
      ],
      "relevance": 0.6044921875
    },
    "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted": {
      "node_id": "generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted",
      "disambiguation_index": 0,
      "label": "Generally, in knowledge graph completion, a specific missing fact is predicted",
      "aliases": [
        "Generally, in knowledge graph completion, a specific missing fact is predicted"
      ],
      "types": [
        "methodology",
        "knowledge graph completion"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The problem of predicting a specific missing fact in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-5",
          "local_name": "Generally, in knowledge graph completion, a specific missing fact is predicted",
          "local_types": [
            "methodology",
            "knowledge graph completion"
          ],
          "iri": "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted-Mention-1"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-we_interpret_this_kind_of_rule": {
      "node_id": "we_interpret_this_kind_of_rule",
      "disambiguation_index": 0,
      "label": "We interpret this kind of rule",
      "aliases": [
        "We interpret this kind of rule"
      ],
      "types": [
        "interpretation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A closed path (CP) rule with universal quantification of all variables at the outside, used to infer a fact that instantiates the head of the rule by finding an instantiation of the body of the rule in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "We interpret this kind of rule",
          "local_types": [
            "interpretation"
          ],
          "iri": "Entity-we_interpret_this_kind_of_rule-Mention-1"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-the_training_data": {
      "node_id": "the_training_data",
      "disambiguation_index": 0,
      "label": "the training data",
      "aliases": [
        "the training data"
      ],
      "types": [
        "data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of facts used to train Open Path rules, which are then employed to generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "the training data",
          "local_types": [
            "data"
          ],
          "iri": "Entity-the_training_data-Mention-1"
        }
      ],
      "relevance": 0.60400390625
    },
    "Entity-reduced_kg__k_": {
      "node_id": "reduced_kg__k_",
      "disambiguation_index": 0,
      "label": "reduced KG, K'",
      "aliases": [
        "reduced KG, K'"
      ],
      "types": [
        "knowledge graph",
        "database of interconnected information"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A smaller version of an original knowledge graph (KG), obtained by sampling entities related to a target predicate and including only links between these entities.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-10",
          "local_name": "reduced KG, K'",
          "local_types": [
            "knowledge graph",
            "database of interconnected information"
          ],
          "iri": "Entity-reduced_kg__k_-Mention-1"
        }
      ],
      "relevance": 0.603515625
    },
    "Entity-then_the_existence_of_an_instance_of_the_head_with_one_free_variable__viz_the_query_p_t____e_": {
      "node_id": "then_the_existence_of_an_instance_of_the_head_with_one_free_variable__viz_the_query_p_t____e_",
      "disambiguation_index": 0,
      "label": "then the existence of an instance of the head with one free variable, viz the query P_t(?, e)",
      "aliases": [
        "the existence of an instance of the head with one free variable, viz the query P_t(?, e)",
        "then the existence of an instance of the head with one free variable, viz the query P_t(?, e)"
      ],
      "types": [
        "head",
        "query",
        "logic",
        "existence"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A query that can be generated by mining OP rules and predicting missing links in a knowledge graph, given the existence of an instance of the head with one free variable.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "then the existence of an instance of the head with one free variable, viz the query P_t(?, e)",
          "local_types": [
            "query",
            "head"
          ],
          "iri": "Entity-then_the_existence_of_an_instance_of_the_head_with_one_free_variable__viz_the_query_p_t____e_-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "the existence of an instance of the head with one free variable, viz the query P_t(?, e)",
          "local_types": [
            "head",
            "logic",
            "existence",
            "query"
          ],
          "iri": "Entity-then_the_existence_of_an_instance_of_the_head_with_one_free_variable__viz_the_query_p_t____e_-Mention-2"
        }
      ],
      "relevance": 0.60302734375
    },
    "Entity-to_obtain_the_vector_v__2___p1_": {
      "node_id": "to_obtain_the_vector_v__2___p1_",
      "disambiguation_index": 0,
      "label": "to obtain the vector v(2)(P1)",
      "aliases": [
        "to obtain the vector v(2)(P1)"
      ],
      "types": [
        "vector"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method for finding distinct entities in a knowledge graph (KG) by summing each column of an adjacency matrix and transposing it, used in evaluating candidate rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "to obtain the vector v(2)(P1)",
          "local_types": [
            "vector"
          ],
          "iri": "Entity-to_obtain_the_vector_v__2___p1_-Mention-1"
        }
      ],
      "relevance": 0.60302734375
    },
    "Entity-furthermore__rescal_ha_empirically_demonstrated_strength_when_used_in_a_heuristic_for_mining_logical_axiom_a_we_need_here_.": {
      "node_id": "furthermore__rescal_ha_empirically_demonstrated_strength_when_used_in_a_heuristic_for_mining_logical_axiom_a_we_need_here_.",
      "disambiguation_index": 0,
      "label": "Furthermore, RESCAL has empirically demonstrated strength when used in a heuristic for mining logical axioms as we need here.",
      "aliases": [
        "Furthermore, RESCAL has empirically demonstrated strength when used in a heuristic for mining logical axioms as we need here."
      ],
      "types": [
        "evaluation_result",
        "application"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "RESCAL (Representation Learning for KG Completion) embedding learner",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-9",
          "local_name": "Furthermore, RESCAL has empirically demonstrated strength when used in a heuristic for mining logical axioms as we need here.",
          "local_types": [
            "evaluation_result",
            "application"
          ],
          "iri": "Entity-furthermore__rescal_ha_empirically_demonstrated_strength_when_used_in_a_heuristic_for_mining_logical_axiom_a_we_need_here_.-Mention-1"
        }
      ],
      "relevance": 0.6025390625
    },
    "Entity-link": {
      "node_id": "link",
      "disambiguation_index": 0,
      "label": "links",
      "aliases": [
        "links"
      ],
      "types": [
        "connections between entities",
        "relationships"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The facts or relationships between entities in a knowledge graph (KG), forming a reduced KG, K', used for mining OP rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-10",
          "local_name": "links",
          "local_types": [
            "connections between entities",
            "relationships"
          ],
          "iri": "Entity-link-Mention-1"
        }
      ],
      "relevance": 0.6025390625
    },
    "Entity-opsupp": {
      "node_id": "opsupp",
      "disambiguation_index": 0,
      "label": "OPsupp",
      "aliases": [
        "OPsupp(r)",
        "OPsupp"
      ],
      "types": [
        "support function",
        "operation",
        "knowledge graph component",
        "term",
        "function",
        "mathematical concept",
        "parameter",
        "support measure",
        "abbreviation",
        "pathway",
        "open path",
        "concept",
        "measure",
        "ontology path",
        "metric",
        "notation",
        "mathematical expression",
        "support"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The support measure of an open path rule, defined as the number of entities that can instantiate variables to satisfy both the body and head parts of the rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-7-Sentence-3",
          "local_name": "OPsupp",
          "local_types": [
            "function",
            "mathematical concept",
            "measure",
            "metric",
            "notation",
            "mathematical expression"
          ],
          "iri": "Entity-opsupp-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-10-Sentence-4",
          "local_name": "OPsupp",
          "local_types": [
            "term",
            "parameter",
            "abbreviation",
            "measure",
            "metric"
          ],
          "iri": "Entity-opsupp-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-9-Sentence-4",
          "local_name": "OPsupp",
          "local_types": [
            "function",
            "mathematical concept"
          ],
          "iri": "Entity-opsupp-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-1",
          "local_name": "OPsupp",
          "local_types": [
            "knowledge graph component",
            "pathway",
            "open path",
            "concept",
            "measure",
            "ontology path",
            "metric",
            "notation"
          ],
          "iri": "Entity-opsupp-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-8-Sentence-1",
          "local_name": "OPsupp",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-opsupp-Mention-5"
        },
        {
          "reference": "Section-4-Paragraph-9-Sentence-1",
          "local_name": "OPsupp",
          "local_types": [
            "measure",
            "operation",
            "function",
            "metric"
          ],
          "iri": "Entity-opsupp-Mention-6"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "OPsupp",
          "local_types": [
            "support measure",
            "mathematical concept"
          ],
          "iri": "Entity-opsupp-Mention-7"
        },
        {
          "reference": "Section-4-Paragraph-9-Sentence-1",
          "local_name": "OPsupp(r)",
          "local_types": [
            "support function",
            "term",
            "mathematical concept",
            "support"
          ],
          "iri": "Entity-opsupp-Mention-8"
        }
      ],
      "relevance": 0.60205078125
    },
    "Entity-answer_for_known_unknown": {
      "node_id": "answer_for_known_unknown",
      "disambiguation_index": 0,
      "label": "answers for known unknowns",
      "aliases": [
        "answers for known unknowns"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of predicting missing facts or entities that are not present in a knowledge graph, but can be inferred by learning open path rules.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "answers for known unknowns",
          "local_types": [
            "task"
          ],
          "iri": "Entity-answer_for_known_unknown-Mention-1"
        }
      ],
      "relevance": 0.60205078125
    },
    "Entity-the_query": {
      "node_id": "the_query",
      "disambiguation_index": 0,
      "label": "The queries",
      "aliases": [
        "The queries"
      ],
      "types": [
        "queries"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of open-ended questions inferred from Open Path rules, used to identify missing facts and introduce new entities into a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "The queries",
          "local_types": [
            "queries"
          ],
          "iri": "Entity-the_query-Mention-1"
        }
      ],
      "relevance": 0.60205078125
    },
    "Entity-such_rule": {
      "node_id": "such_rule",
      "disambiguation_index": 0,
      "label": "Such rules",
      "aliases": [
        "Such rules"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Rules with free variables that allow for generating queries soliciting missing facts in Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "Such rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-such_rule-Mention-1"
        }
      ],
      "relevance": 0.6015625
    },
    "Entity-add_pathfinding__k___p_t__p__a__k_": {
      "node_id": "add_pathfinding__k___p_t__p__a__k_",
      "disambiguation_index": 0,
      "label": "Add PathFinding(K', P_t, P, A, k)",
      "aliases": [
        "Add PathFinding(K', P_t, P, A, k)",
        "Add PathFinding(K', P_t, P, A, k) to R'."
      ],
      "types": [
        "algorithm step",
        "function",
        "mathematical function",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A function that adds a path-finding algorithm for learning open-path rules from a knowledge graph K' with target predicate P_t and arguments A, up to length k.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-9",
          "local_name": "Add PathFinding(K', P_t, P, A, k)",
          "local_types": [
            "function",
            "mathematical function",
            "algorithm"
          ],
          "iri": "Entity-add_pathfinding__k___p_t__p__a__k_-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-9",
          "local_name": "Add PathFinding(K', P_t, P, A, k) to R'.",
          "local_types": [
            "algorithm step"
          ],
          "iri": "Entity-add_pathfinding__k___p_t__p__a__k_-Mention-2"
        }
      ],
      "relevance": 0.60107421875
    },
    "Entity-the_link_predictor_answer_each_query_with_a_sequence_of_ranked_entity": {
      "node_id": "the_link_predictor_answer_each_query_with_a_sequence_of_ranked_entity",
      "disambiguation_index": 0,
      "label": "The link predictors answer each query with a sequence of ranked entities",
      "aliases": [
        "The link predictors answer each query with a sequence of ranked entities"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An algorithm that generates queries for knowledge graph completion, answering each query with a sequence of ranked entities.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "The link predictors answer each query with a sequence of ranked entities",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-the_link_predictor_answer_each_query_with_a_sequence_of_ranked_entity-Mention-1"
        }
      ],
      "relevance": 0.60107421875
    },
    "Entity-missing_entity": {
      "node_id": "missing_entity",
      "disambiguation_index": 0,
      "label": "missing entities",
      "aliases": [
        "missing entities"
      ],
      "types": [
        "entities",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that are not present in the Knowledge Graph (KG) and need to be introduced or discovered through active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-8",
          "local_name": "missing entities",
          "local_types": [
            "entities",
            "concept"
          ],
          "iri": "Entity-missing_entity-Mention-1"
        }
      ],
      "relevance": 0.60107421875
    },
    "Entity-query_for_missing_link": {
      "node_id": "query_for_missing_link",
      "disambiguation_index": 0,
      "label": "queries for missing links",
      "aliases": [
        "queries for missing links"
      ],
      "types": [
        "search query",
        "information retrieval"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity 'queries for missing links' refers to a set of queries generated by Open Path (OP) rules that can be used to solicit missing facts from Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-5",
          "local_name": "queries for missing links",
          "local_types": [
            "search query",
            "information retrieval"
          ],
          "iri": "Entity-query_for_missing_link-Mention-1"
        }
      ],
      "relevance": 0.6005859375
    },
    "Entity-let_k___e__f__be_a_kg_.": {
      "node_id": "let_k___e__f__be_a_kg_.",
      "disambiguation_index": 0,
      "label": "Let K = (E, F) be a KG.",
      "aliases": [
        "Let K = (E, F) be a KG."
      ],
      "types": [
        "notation",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A knowledge graph (KG) represented as an entity-predicate pair (K = (E, F)) where E is the set of entities and F is the set of facts.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "Let K = (E, F) be a KG.",
          "local_types": [
            "notation",
            "knowledge graph"
          ],
          "iri": "Entity-let_k___e__f__be_a_kg_.-Mention-1"
        }
      ],
      "relevance": 0.6005859375
    },
    "Entity-finding_relevant_question": {
      "node_id": "finding_relevant_question",
      "disambiguation_index": 0,
      "label": "finding relevant questions",
      "aliases": [
        "finding relevant questions"
      ],
      "types": [
        "process",
        "questioning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating queries for knowledge graph completion, where the goal is to ask meaningful and accurate questions about missing facts in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-3",
          "local_name": "finding relevant questions",
          "local_types": [
            "process",
            "questioning"
          ],
          "iri": "Entity-finding_relevant_question-Mention-1"
        }
      ],
      "relevance": 0.6005859375
    },
    "Entity-whole_rule": {
      "node_id": "whole_rule",
      "disambiguation_index": 0,
      "label": "whole rule",
      "aliases": [
        "whole rule"
      ],
      "types": [
        "concept",
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The 'whole rule' refers to an open path (OP) rule, which is a constrained existential rule that connects entities satisfying the subject argument of the head predicate to entities forming the object argument of the tail predicate along a path of entities that satisfy a chain of predicates in the rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-14-Sentence-1",
          "local_name": "whole rule",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-whole_rule-Mention-1"
        }
      ],
      "relevance": 0.599609375
    },
    "Entity-our_op_rule_miner": {
      "node_id": "our_op_rule_miner",
      "disambiguation_index": 0,
      "label": "Our OP rule miner",
      "aliases": [
        "Our OP rule miner"
      ],
      "types": [
        "software"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A software system that mines open path rules from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "Our OP rule miner",
          "local_types": [
            "software"
          ],
          "iri": "Entity-our_op_rule_miner-Mention-1"
        }
      ],
      "relevance": 0.599609375
    },
    "Entity-we_developed_three_baseline_query_set": {
      "node_id": "we_developed_three_baseline_query_set",
      "disambiguation_index": 0,
      "label": "we developed three baseline query sets",
      "aliases": [
        "we developed three baseline query sets"
      ],
      "types": [
        "query set",
        "development"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Three initial sets of queries used as baselines for comparison with queries generated by Open Path Rule Learning (OPRL)",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "we developed three baseline query sets",
          "local_types": [
            "query set",
            "development"
          ],
          "iri": "Entity-we_developed_three_baseline_query_set-Mention-1"
        }
      ],
      "relevance": 0.599609375
    },
    "Entity-we_reduce_the_kg_size": {
      "node_id": "we_reduce_the_kg_size",
      "disambiguation_index": 0,
      "label": "we reduce the KG size",
      "aliases": [
        "we reduce the KG size"
      ],
      "types": [
        "action",
        "knowledge graph reduction"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of downsizing a knowledge graph (KG) by sampling entities and predicates related to a target predicate, reducing its size for efficient processing.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-1",
          "local_name": "we reduce the KG size",
          "local_types": [
            "action",
            "knowledge graph reduction"
          ],
          "iri": "Entity-we_reduce_the_kg_size-Mention-1"
        }
      ],
      "relevance": 0.59912109375
    },
    "Entity-the_opsc_threshold_is_0.9": {
      "node_id": "the_opsc_threshold_is_0.9",
      "disambiguation_index": 0,
      "label": "the OPSC threshold is 0.9",
      "aliases": [
        "the OPSC threshold is 0.9"
      ],
      "types": [
        "threshold"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The minimum quality threshold for Open Path (OP) rules in the OPRL algorithm, used to filter out low-quality queries during knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "the OPSC threshold is 0.9",
          "local_types": [
            "threshold"
          ],
          "iri": "Entity-the_opsc_threshold_is_0.9-Mention-1"
        }
      ],
      "relevance": 0.59912109375
    },
    "Entity-each_consists_of_two_part__a_head_at_the_front_of_the_implication_arrow_and_a_body_at_the_tail_.": {
      "node_id": "each_consists_of_two_part__a_head_at_the_front_of_the_implication_arrow_and_a_body_at_the_tail_.",
      "disambiguation_index": 0,
      "label": "Each consists of two parts, a head at the front of the implication arrow and a body at the tail.",
      "aliases": [
        "Each consists of two parts, a head at the front of the implication arrow and a body at the tail.",
        "two parts, a head at the front of the implication arrow and a body at the tail."
      ],
      "types": [
        "concept",
        "parts",
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A closed path rule in a knowledge graph completion system",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "Each consists of two parts, a head at the front of the implication arrow and a body at the tail.",
          "local_types": [
            "description",
            "concept"
          ],
          "iri": "Entity-each_consists_of_two_part__a_head_at_the_front_of_the_implication_arrow_and_a_body_at_the_tail_.-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "two parts, a head at the front of the implication arrow and a body at the tail.",
          "local_types": [
            "description",
            "parts"
          ],
          "iri": "Entity-each_consists_of_two_part__a_head_at_the_front_of_the_implication_arrow_and_a_body_at_the_tail_.-Mention-2"
        }
      ],
      "relevance": 0.5986328125
    },
    "Entity-embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space": {
      "node_id": "embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space",
      "disambiguation_index": 0,
      "label": "embedding the entities and predicates of a given KG into a latent space",
      "aliases": [
        "embedding the entities and predicates of a given KG into a latent space"
      ],
      "types": [
        "phase",
        "step"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A technique for projecting entities and predicates from a knowledge graph (KG) into a latent space, allowing for representation learning methods to operate on these embedded representations.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "embedding the entities and predicates of a given KG into a latent space",
          "local_types": [
            "phase",
            "step"
          ],
          "iri": "Entity-embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space-Mention-1"
        }
      ],
      "relevance": 0.59814453125
    },
    "Entity-the_open_path_fitness_function": {
      "node_id": "the_open_path_fitness_function",
      "disambiguation_index": 0,
      "label": "the open path fitness function",
      "aliases": [
        "the open path fitness function"
      ],
      "types": [
        "algorithm",
        "fitness function"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithmic measure that estimates the quality of Open Path rules by computing the product of predicate embeddings along the path, anchored to entities satisfying free variables at endpoints.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-6",
          "local_name": "the open path fitness function",
          "local_types": [
            "algorithm",
            "fitness function"
          ],
          "iri": "Entity-the_open_path_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.59814453125
    },
    "Entity-the_learnt_rule": {
      "node_id": "the_learnt_rule",
      "disambiguation_index": 0,
      "label": "the learnt rule",
      "aliases": [
        "the learnt rule"
      ],
      "types": [
        "learnt rule",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A learned existential rule in an open path formalism, used for knowledge graph completion and guiding the discovery of unknown unknowns.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "the learnt rule",
          "local_types": [
            "learnt rule",
            "rule"
          ],
          "iri": "Entity-the_learnt_rule-Mention-1"
        }
      ],
      "relevance": 0.59765625
    },
    "Entity-novel_fitness_criterion_for_discarding_poor_rule_early": {
      "node_id": "novel_fitness_criterion_for_discarding_poor_rule_early",
      "disambiguation_index": 0,
      "label": "novel fitness criteria for discarding poor rules early",
      "aliases": [
        "novel fitness criteria for discarding poor rules early"
      ],
      "types": [
        "fitness criterion"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Novel fitness criteria for discarding poor rules early refer to a set of standards or metrics used by the OPRL algorithm to evaluate and eliminate poorly performing open path rules during the learning process.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-4",
          "local_name": "novel fitness criteria for discarding poor rules early",
          "local_types": [
            "fitness criterion"
          ],
          "iri": "Entity-novel_fitness_criterion_for_discarding_poor_rule_early-Mention-1"
        }
      ],
      "relevance": 0.59765625
    },
    "Entity-for_pathfinding__": {
      "node_id": "for_pathfinding__",
      "disambiguation_index": 0,
      "label": "for PathFinding()",
      "aliases": [
        "for PathFinding()"
      ],
      "types": [
        "function",
        "PathFinding"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A function or algorithm that generates queries with precision as high as 98% and recall of 62%, used for PathFinding() to mine quality OP rules from a range of KGs.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-1",
          "local_name": "for PathFinding()",
          "local_types": [
            "function",
            "PathFinding"
          ],
          "iri": "Entity-for_pathfinding__-Mention-1"
        }
      ],
      "relevance": 0.59765625
    },
    "Entity-rule_with_more_complex_shape__such_a_star": {
      "node_id": "rule_with_more_complex_shape__such_a_star",
      "disambiguation_index": 0,
      "label": "rules with more complex shapes, such as stars",
      "aliases": [
        "rules with more complex shapes, such as stars"
      ],
      "types": [
        "rule",
        "shape"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of rule that has free variables and can be used to generate queries soliciting missing facts in a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-2",
          "local_name": "rules with more complex shapes, such as stars",
          "local_types": [
            "rule",
            "shape"
          ],
          "iri": "Entity-rule_with_more_complex_shape__such_a_star-Mention-1"
        }
      ],
      "relevance": 0.59716796875
    },
    "Entity-opsc_and_ophc": {
      "node_id": "opsc_and_ophc",
      "disambiguation_index": 0,
      "label": "OPSC and OPHC",
      "aliases": [
        "OPSC and OPHC"
      ],
      "types": [
        "evaluation metrics",
        "algorithms"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Evaluation metrics used to assess the quality of Open Path rules mined by OPRL, considering both precision (OPSC) and recall (OPHC).",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "OPSC and OPHC",
          "local_types": [
            "evaluation metrics",
            "algorithms"
          ],
          "iri": "Entity-opsc_and_ophc-Mention-1"
        }
      ],
      "relevance": 0.5966796875
    },
    "Entity-where_p_h_is_the_single_predicate_of_the_head": {
      "node_id": "where_p_h_is_the_single_predicate_of_the_head",
      "disambiguation_index": 0,
      "label": "where P_h is the single predicate of the head",
      "aliases": [
        "where P_h is the single predicate of the head"
      ],
      "types": [
        "predicate",
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The structure and format of a closed path (CP) rule in knowledge graph completion, specifically describing the relationship between the predicates and variables within the rule's body and head.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "where P_h is the single predicate of the head",
          "local_types": [
            "predicate",
            "head"
          ],
          "iri": "Entity-where_p_h_is_the_single_predicate_of_the_head-Mention-1"
        }
      ],
      "relevance": 0.5966796875
    },
    "Entity-definition_7": {
      "node_id": "definition_7",
      "disambiguation_index": 0,
      "label": "Definition 7",
      "aliases": [
        "Definition 7"
      ],
      "types": [
        "definition",
        "concept",
        "mathematical definition"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The open path fitness function, which estimates rule quality by multiplying predicate embeddings along a chain of predicates in an OP rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-7",
          "local_name": "Definition 7",
          "local_types": [
            "definition",
            "concept",
            "mathematical definition"
          ],
          "iri": "Entity-definition_7-Mention-1"
        }
      ],
      "relevance": 0.59619140625
    },
    "Entity-the_problem_of_knowledge_graph_completion": {
      "node_id": "the_problem_of_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "the problem of knowledge graph completion",
      "aliases": [
        "the problem of knowledge graph completion"
      ],
      "types": [
        "problem",
        "challenge"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The task of automatically filling in missing information or relationships within a structured representation of entities and their interconnections.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-3",
          "local_name": "the problem of knowledge graph completion",
          "local_types": [
            "problem",
            "challenge"
          ],
          "iri": "Entity-the_problem_of_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.59619140625
    },
    "Entity-the_kg": {
      "node_id": "the_kg",
      "disambiguation_index": 0,
      "label": "the KG",
      "aliases": [
        "the KG"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A massive quantity of weakly-structured data modeled and stored using a technology that allows information to be added in an arbitrary manner, with structural constraints being few.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-8",
          "local_name": "the KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-the_kg-Mention-1"
        }
      ],
      "relevance": 0.59619140625
    },
    "Entity-each_fact_generated_by_rlvlr": {
      "node_id": "each_fact_generated_by_rlvlr",
      "disambiguation_index": 0,
      "label": "each fact generated by RLvLR",
      "aliases": [
        "each fact generated by RLvLR"
      ],
      "types": [
        "fact",
        "RLvLR"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A query induced from an OP rule learned by the OPRL algorithm that can be answered with a missing entity not present in the training set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "each fact generated by RLvLR",
          "local_types": [
            "fact",
            "RLvLR"
          ],
          "iri": "Entity-each_fact_generated_by_rlvlr-Mention-1"
        }
      ],
      "relevance": 0.59619140625
    },
    "Entity-we_(2)": {
      "node_id": "we_(2)",
      "disambiguation_index": 2,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of this paper, referring to themselves in the context of introducing Open Path (OP) rules and their algorithm OPRL.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(2)-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-11",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(2)-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-13",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(2)-Mention-3"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-5",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(2)-Mention-4"
        }
      ],
      "relevance": 0.595703125
    },
    "Entity-these": {
      "node_id": "these",
      "disambiguation_index": 0,
      "label": "These",
      "aliases": [
        "These"
      ],
      "types": [
        "set",
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Existential rules with a different form to the usual closed path rules, used for learning open path rules from a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-3",
          "local_name": "These",
          "local_types": [
            "set",
            "rules"
          ],
          "iri": "Entity-these-Mention-1"
        }
      ],
      "relevance": 0.595703125
    },
    "Entity-kg_automatically": {
      "node_id": "kg_automatically",
      "disambiguation_index": 0,
      "label": "KGs automatically",
      "aliases": [
        "KGs automatically"
      ],
      "types": [
        "process",
        "automation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of creating or updating a knowledge graph using automated methods.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "KGs automatically",
          "local_types": [
            "process",
            "automation"
          ],
          "iri": "Entity-kg_automatically-Mention-1"
        }
      ],
      "relevance": 0.5947265625
    },
    "Entity-our_target_language_for_learning_in_section_3": {
      "node_id": "our_target_language_for_learning_in_section_3",
      "disambiguation_index": 0,
      "label": "our target language for learning in Section 3",
      "aliases": [
        "our target language for learning in Section 3"
      ],
      "types": [
        "target",
        "part-of-paper",
        "target-language",
        "language",
        "section",
        "learning-objective",
        "academic work",
        "learning resource"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The target language for learning in this paper refers to a novel formalism of open path (OP) rules that are used to guide the discovery of unknown unknowns and generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-2",
          "local_name": "our target language for learning in Section 3",
          "local_types": [
            "target",
            "part-of-paper",
            "target-language",
            "language",
            "section",
            "learning-objective",
            "academic work",
            "learning resource"
          ],
          "iri": "Entity-our_target_language_for_learning_in_section_3-Mention-1"
        }
      ],
      "relevance": 0.5947265625
    },
    "Entity-op_rule__a_fragment_of_function-free_horn_rule": {
      "node_id": "op_rule__a_fragment_of_function-free_horn_rule",
      "disambiguation_index": 0,
      "label": "OP rules, a fragment of function-free Horn rules",
      "aliases": [
        "OP rules, a fragment of function-free Horn rules"
      ],
      "types": [
        "methodology",
        "rule-based system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of logical rules that are used for knowledge representation and reasoning in a rule-based system.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-2",
          "local_name": "OP rules, a fragment of function-free Horn rules",
          "local_types": [
            "methodology",
            "rule-based system"
          ],
          "iri": "Entity-op_rule__a_fragment_of_function-free_horn_rule-Mention-1"
        }
      ],
      "relevance": 0.59423828125
    },
    "Entity-our_op_rule_miner__oprl": {
      "node_id": "our_op_rule_miner__oprl",
      "disambiguation_index": 0,
      "label": "Our OP rule miner, OPRL",
      "aliases": [
        "OP rule miner, OPRL",
        "Our OP rule miner, OPRL"
      ],
      "types": [
        "miner",
        "OPRL"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software tool or system that extracts and summarizes rules from a specific domain using an OP approach.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "Our OP rule miner, OPRL",
          "local_types": [
            "miner",
            "OPRL"
          ],
          "iri": "Entity-our_op_rule_miner__oprl-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "OP rule miner, OPRL",
          "local_types": [
            "miner",
            "OPRL"
          ],
          "iri": "Entity-our_op_rule_miner__oprl-Mention-2"
        }
      ],
      "relevance": 0.59375
    },
    "Entity-query_about_potential_missing_fact": {
      "node_id": "query_about_potential_missing_fact",
      "disambiguation_index": 0,
      "label": "queries about potential missing facts",
      "aliases": [
        "queries about potential missing facts"
      ],
      "types": [
        "query",
        "request"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Queries about potential missing facts refer to a type of query generated from Open Path rules that infer open-ended questions instead of specific facts, used for guiding the discovery of unknown unknowns in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "queries about potential missing facts",
          "local_types": [
            "query",
            "request"
          ],
          "iri": "Entity-query_about_potential_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.59375
    },
    "Entity-in_summary": {
      "node_id": "in_summary",
      "disambiguation_index": 0,
      "label": "In summary",
      "aliases": [
        "In summary"
      ],
      "types": [
        "summary"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept of summarizing a problem or issue that needs to be addressed in the context of active knowledge graph completion, specifically learning open path rules from a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-1",
          "local_name": "In summary",
          "local_types": [
            "summary"
          ],
          "iri": "Entity-in_summary-Mention-1"
        }
      ],
      "relevance": 0.59375
    },
    "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable": {
      "node_id": "a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "disambiguation_index": 0,
      "label": "a closed path, or single unbroken loop of links between the variables",
      "aliases": [
        "a closed path, or single unbroken loop of links between the variables"
      ],
      "types": [
        "path",
        "loop",
        "links",
        "variables"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of rule in knowledge graph completion that consists of two parts: a head and a body, forming a closed path or single unbroken loop of links between variables.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "a closed path, or single unbroken loop of links between the variables",
          "local_types": [
            "path",
            "loop",
            "links",
            "variables"
          ],
          "iri": "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable-Mention-1"
        }
      ],
      "relevance": 0.59375
    },
    "Entity-evaluating_op_rule": {
      "node_id": "evaluating_op_rule",
      "disambiguation_index": 0,
      "label": "Evaluating OP rules",
      "aliases": [
        "Evaluating OP rules"
      ],
      "types": [
        "evaluation",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of assessing the quality of Open Path (OP) rules by computing metrics such as OPsupp, OPHC, and OPSC using matrix and vector operations.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-4",
          "local_name": "Evaluating OP rules",
          "local_types": [
            "evaluation",
            "rule"
          ],
          "iri": "Entity-evaluating_op_rule-Mention-1"
        }
      ],
      "relevance": 0.59375
    },
    "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model": {
      "node_id": "the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "disambiguation_index": 0,
      "label": "the query arise in an industrial application of a link prediction model",
      "aliases": [
        "the query arise in an industrial application of a link prediction model"
      ],
      "types": [
        "query",
        "application",
        "link prediction model"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of generating relevant queries for missing links in a knowledge graph, using open-path rules learned from training data and applied in an industrial setting with a high-performing link-predicting model.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-1",
          "local_name": "the query arise in an industrial application of a link prediction model",
          "local_types": [
            "query",
            "application",
            "link prediction model"
          ],
          "iri": "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model-Mention-1"
        }
      ],
      "relevance": 0.59375
    },
    "Entity-efficient_vector_computation_of_formal_quality_criterion": {
      "node_id": "efficient_vector_computation_of_formal_quality_criterion",
      "disambiguation_index": 0,
      "label": "efficient vector computation of formal quality criteria",
      "aliases": [
        "efficient vector computation of formal quality criteria"
      ],
      "types": [
        "research methodology",
        "computation method",
        "computational technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A computational technique used to efficiently assess the quality of open path rules learned from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-4",
          "local_name": "efficient vector computation of formal quality criteria",
          "local_types": [
            "research methodology",
            "computation method",
            "computational technique"
          ],
          "iri": "Entity-efficient_vector_computation_of_formal_quality_criterion-Mention-1"
        }
      ],
      "relevance": 0.59326171875
    },
    "Entity-query_of_the_form_p____e___and_p__e___": {
      "node_id": "query_of_the_form_p____e___and_p__e___",
      "disambiguation_index": 0,
      "label": "queries of the form P(?, e') and P(e, ?)",
      "aliases": [
        "queries of the form P(?, e') and P(e, ?)"
      ],
      "types": [
        "query language",
        "data retrieval system"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The AKGC task involves generating queries in the format P(?, e') and P(e, ?) for entities e and e' occurring in the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "queries of the form P(?, e') and P(e, ?)",
          "local_types": [
            "query language",
            "data retrieval system"
          ],
          "iri": "Entity-query_of_the_form_p____e___and_p__e___-Mention-1"
        }
      ],
      "relevance": 0.59326171875
    },
    "Entity-count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg": {
      "node_id": "count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg",
      "disambiguation_index": 0,
      "label": "counts the head (target) instances for which the rule body and head are both satisfied in the KG",
      "aliases": [
        "counts the head (target) instances for which the rule body and head are both satisfied in the KG"
      ],
      "types": [
        "process"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure of the number of facts in a knowledge graph that satisfy both the conditions specified in an existential rule's body and its head.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-6",
          "local_name": "counts the head (target) instances for which the rule body and head are both satisfied in the KG",
          "local_types": [
            "process"
          ],
          "iri": "Entity-count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.59326171875
    },
    "Entity-and_so_significantly_improve_scalability": {
      "node_id": "and_so_significantly_improve_scalability",
      "disambiguation_index": 0,
      "label": "and so significantly improve scalability",
      "aliases": [
        "and so significantly improve scalability"
      ],
      "types": [
        "improvement",
        "scalability"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A novel algorithm for learning Open Path rules that improves scalability by constructing a fitness function using embedding models.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "and so significantly improve scalability",
          "local_types": [
            "improvement",
            "scalability"
          ],
          "iri": "Entity-and_so_significantly_improve_scalability-Mention-1"
        }
      ],
      "relevance": 0.59326171875
    },
    "Entity-_2__(1)": {
      "node_id": "_2__(1)",
      "disambiguation_index": 1,
      "label": "(2)",
      "aliases": [
        "(2)"
      ],
      "types": [
        "reference"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The co-occurrence fitness function for OP rules, which measures the similarity between predicate embeddings along a path of entities that satisfy a chain of predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "(2)",
          "local_types": [
            "reference"
          ],
          "iri": "Entity-_2__(1)-Mention-1"
        }
      ],
      "relevance": 0.59326171875
    },
    "Entity-for_our_active_knowledge_graph_completion_task": {
      "node_id": "for_our_active_knowledge_graph_completion_task",
      "disambiguation_index": 0,
      "label": "for our active knowledge graph completion task",
      "aliases": [
        "for our active knowledge graph completion task"
      ],
      "types": [
        "task",
        "knowledge_graph_completion"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A process or activity aimed at completing a knowledge graph by adding missing information.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "for our active knowledge graph completion task",
          "local_types": [
            "task",
            "knowledge_graph_completion"
          ],
          "iri": "Entity-for_our_active_knowledge_graph_completion_task-Mention-1"
        }
      ],
      "relevance": 0.5927734375
    },
    "Entity-the_two_key_phase_in_representation_learning_are__1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.": {
      "node_id": "the_two_key_phase_in_representation_learning_are__1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "disambiguation_index": 0,
      "label": "The two key phases in representation learning are (1) embedding the entities and predicates of a given KG into a latent space, and (2) reconstructing the KG based on the learned embeddings to predict new facts.",
      "aliases": [
        "the two key phases in representation learning are (1) embedding the entities and predicates of a given KG into a latent space, and (2) reconstructing the KG based on the learned embeddings to predict new facts.",
        "The two key phases in representation learning are (1) embedding the entities and predicates of a given KG into a latent space, and (2) reconstructing the KG based on the learned embeddings to predict new facts."
      ],
      "types": [
        "concept",
        "phase",
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A fundamental process in representation learning that involves transforming entities and predicates from a knowledge graph into a latent space, followed by reconstructing the original graph based on learned representations.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "The two key phases in representation learning are (1) embedding the entities and predicates of a given KG into a latent space, and (2) reconstructing the KG based on the learned embeddings to predict new facts.",
          "local_types": [
            "concept",
            "phase",
            "description"
          ],
          "iri": "Entity-the_two_key_phase_in_representation_learning_are__1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.-Mention-1"
        }
      ],
      "relevance": 0.59228515625
    },
    "Entity-multiple_kg": {
      "node_id": "multiple_kg",
      "disambiguation_index": 0,
      "label": "multiple KGs",
      "aliases": [
        "multiple KGs"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of knowledge graphs that can be used to evaluate the performance of a system for generating queries.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-8-Sentence-1",
          "local_name": "multiple KGs",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-multiple_kg-Mention-1"
        }
      ],
      "relevance": 0.59228515625
    },
    "Entity-for_fb15kse": {
      "node_id": "for_fb15kse",
      "disambiguation_index": 0,
      "label": "For FB15KSE",
      "aliases": [
        "For FB15KSE"
      ],
      "types": [
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The dataset used for testing and training OPRL (Open Path Rule Learner) to evaluate its performance.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "For FB15KSE",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-for_fb15kse-Mention-1"
        }
      ],
      "relevance": 0.59228515625
    },
    "Entity-next_(1)": {
      "node_id": "next_(1)",
      "disambiguation_index": 1,
      "label": "Next",
      "aliases": [
        "Next"
      ],
      "types": [
        "introduction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The sensitivity of OPRL queries' performance with respect to varying the Open Path Score (OPSC) threshold from 0.1 to 1, learning previously selected predicates for FB15KSE.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "Next",
          "local_types": [
            "introduction"
          ],
          "iri": "Entity-next_(1)-Mention-1"
        }
      ],
      "relevance": 0.59228515625
    },
    "Entity-minimum_sc_parameter": {
      "node_id": "minimum_sc_parameter",
      "disambiguation_index": 0,
      "label": "minimum SC parameters",
      "aliases": [
        "minimum SC parameters"
      ],
      "types": [
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of parameters used to order or filter Open Path (OP) rules learned by the OPRL algorithm, which determines the quality threshold for rule generation.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "minimum SC parameters",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-minimum_sc_parameter-Mention-1"
        }
      ],
      "relevance": 0.59228515625
    },
    "Entity-varying_it_from_0.1_to_1": {
      "node_id": "varying_it_from_0.1_to_1",
      "disambiguation_index": 0,
      "label": "varying it from 0.1 to 1",
      "aliases": [
        "varying it from 0.1 to 1"
      ],
      "types": [
        "parameter tuning",
        "range",
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The minimum quality threshold for Open Path rules learned by OPRL algorithm",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "varying it from 0.1 to 1",
          "local_types": [
            "parameter tuning",
            "range",
            "parameter"
          ],
          "iri": "Entity-varying_it_from_0.1_to_1-Mention-1"
        }
      ],
      "relevance": 0.591796875
    },
    "Entity-it_embedding_representation_(1)": {
      "node_id": "it_embedding_representation_(1)",
      "disambiguation_index": 1,
      "label": "its embedding representation",
      "aliases": [
        "its embedding representation"
      ],
      "types": [
        "embedding_representation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The vector-based measure used to assess the quality of each OP rule, allowing for efficient evaluation and ranking of candidate rules.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-3",
          "local_name": "its embedding representation",
          "local_types": [
            "embedding_representation"
          ],
          "iri": "Entity-it_embedding_representation_(1)-Mention-1"
        }
      ],
      "relevance": 0.591796875
    },
    "Entity-incpathfinding__k___p_t__p__a__k__r__": {
      "node_id": "incpathfinding__k___p_t__p__a__k__r__",
      "disambiguation_index": 0,
      "label": "IncPathFinding(K', P_t, P, A, k, R')",
      "aliases": [
        "IncPathFinding(K', P_t, P, A, k, R')"
      ],
      "types": [
        "function call",
        "incremental path finding algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A function call that extends a top-ranked candidate rule by appending new body predicates and learning short OP rules for the rightmost predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "IncPathFinding(K', P_t, P, A, k, R')",
          "local_types": [
            "function call",
            "incremental path finding algorithm"
          ],
          "iri": "Entity-incpathfinding__k___p_t__p__a__k__r__-Mention-1"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-for_oprl__we_vary_the_minimum_opsc_from_1_to_0.5_in_4_decrement_and_get_a_false_positive_rate_of_almost_50_": {
      "node_id": "for_oprl__we_vary_the_minimum_opsc_from_1_to_0.5_in_4_decrement_and_get_a_false_positive_rate_of_almost_50_",
      "disambiguation_index": 0,
      "label": "For OPRL, we vary the minimum OPSC from 1 to 0.5 in 4 decrements and get a False Positive Rate of almost 50%",
      "aliases": [
        "For OPRL, we vary the minimum OPSC from 1 to 0.5 in 4 decrements and get a False Positive Rate of almost 50%"
      ],
      "types": [
        "algorithmic evaluation",
        "threshold tuning"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The threshold tuning process for the Open Path rule learner (OPRL) algorithm.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "For OPRL, we vary the minimum OPSC from 1 to 0.5 in 4 decrements and get a False Positive Rate of almost 50%",
          "local_types": [
            "algorithmic evaluation",
            "threshold tuning"
          ],
          "iri": "Entity-for_oprl__we_vary_the_minimum_opsc_from_1_to_0.5_in_4_decrement_and_get_a_false_positive_rate_of_almost_50_-Mention-1"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-link_predictor_in_the_knowledge_graph_completion_process": {
      "node_id": "link_predictor_in_the_knowledge_graph_completion_process",
      "disambiguation_index": 0,
      "label": "link predictors in the knowledge graph completion process",
      "aliases": [
        "link predictors in the knowledge graph completion process"
      ],
      "types": [
        "process",
        "concept",
        "information processing",
        "technique",
        "computational method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Algorithms or models that predict relationships between entities in a knowledge graph, used to complete missing links.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "link predictors in the knowledge graph completion process",
          "local_types": [
            "process",
            "concept",
            "information processing",
            "technique",
            "computational method"
          ],
          "iri": "Entity-link_predictor_in_the_knowledge_graph_completion_process-Mention-1"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-structural_constraint_are_few": {
      "node_id": "structural_constraint_are_few",
      "disambiguation_index": 0,
      "label": "structural constraints are few",
      "aliases": [
        "structural constraints are few"
      ],
      "types": [
        "constraint"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept refers to the lack of strict rules or constraints in Knowledge Graphs (KGs), allowing information to be added in an arbitrary manner.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "structural constraints are few",
          "local_types": [
            "constraint"
          ],
          "iri": "Entity-structural_constraint_are_few-Mention-1"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-the_closed_path_form": {
      "node_id": "the_closed_path_form",
      "disambiguation_index": 0,
      "label": "the closed path forms",
      "aliases": [
        "the closed path forms"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept of 'the closed path forms' refers to a mathematical structure used to define and calculate measures of quality for open path rules, specifically the support degree (OPsupp), standard confidence (OPSC), and head coverage (OPHC) of an OP rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "the closed path forms",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_closed_path_form-Mention-1"
        }
      ],
      "relevance": 0.59130859375
    },
    "Entity-the_number_of_possible_rule_grows_significantly_with_increasing_length__a_doe_the_runtime_for_mining": {
      "node_id": "the_number_of_possible_rule_grows_significantly_with_increasing_length__a_doe_the_runtime_for_mining",
      "disambiguation_index": 0,
      "label": "the number of possible rules grows significantly with increasing length, as does the runtime for mining",
      "aliases": [
        "the number of possible rules grows significantly with increasing length, as does the runtime for mining"
      ],
      "types": [
        "observation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The maximum rule length parameter in the OPRL algorithm",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-3",
          "local_name": "the number of possible rules grows significantly with increasing length, as does the runtime for mining",
          "local_types": [
            "observation"
          ],
          "iri": "Entity-the_number_of_possible_rule_grows_significantly_with_increasing_length__a_doe_the_runtime_for_mining-Mention-1"
        }
      ],
      "relevance": 0.5908203125
    },
    "Entity-the_rule": {
      "node_id": "the_rule",
      "disambiguation_index": 0,
      "label": "The rule",
      "aliases": [
        "The rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of existential rule that completes a knowledge graph by answering queries and generating relevant facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "The rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_rule-Mention-1"
        }
      ],
      "relevance": 0.5908203125
    },
    "Entity-like_rescal__we_represent_k_a_a_set_of_square_n__n_adjacency_matrix_by_defining_the_function_a": {
      "node_id": "like_rescal__we_represent_k_a_a_set_of_square_n__n_adjacency_matrix_by_defining_the_function_a",
      "disambiguation_index": 0,
      "label": "Like RESCAL, we represent K as a set of square n \u00d7 n adjacency matrices by defining the function A",
      "aliases": [
        "K as a set of square n \u00d7 n adjacency matrices by defining the function A.",
        "Like RESCAL, we represent K as a set of square n \u00d7 n adjacency matrices by defining the function A"
      ],
      "types": [
        "matrix",
        "representation",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A function used to define an adjacency matrix representation of a knowledge graph (KG), where each matrix corresponds to a predicate in the KG and its elements indicate whether a fact exists or not.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-4",
          "local_name": "Like RESCAL, we represent K as a set of square n \u00d7 n adjacency matrices by defining the function A",
          "local_types": [
            "representation",
            "function",
            "matrix"
          ],
          "iri": "Entity-like_rescal__we_represent_k_a_a_set_of_square_n__n_adjacency_matrix_by_defining_the_function_a-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-4",
          "local_name": "K as a set of square n \u00d7 n adjacency matrices by defining the function A.",
          "local_types": [
            "representation"
          ],
          "iri": "Entity-like_rescal__we_represent_k_a_a_set_of_square_n__n_adjacency_matrix_by_defining_the_function_a-Mention-2"
        }
      ],
      "relevance": 0.59033203125
    },
    "Entity-let": {
      "node_id": "let",
      "disambiguation_index": 0,
      "label": "Let",
      "aliases": [
        "Let"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A notation or syntax used to express rules in knowledge graph completion, specifically closed path (CP) rules with universal quantification.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "Let",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-let-Mention-1"
        }
      ],
      "relevance": 0.59033203125
    },
    "Entity-a_sequence_of_predicate_p1___p2___...__pn_": {
      "node_id": "a_sequence_of_predicate_p1___p2___...__pn_",
      "disambiguation_index": 0,
      "label": "a sequence of predicates P1', P2', ..., Pn'",
      "aliases": [
        "a sequence of predicates P1', P2', ..., Pn'"
      ],
      "types": [
        "sequence",
        "predicates"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A path comprising a series of predicates, including required OP rule variable patterns, generated for a target predicate in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-10",
          "local_name": "a sequence of predicates P1', P2', ..., Pn'",
          "local_types": [
            "sequence",
            "predicates"
          ],
          "iri": "Entity-a_sequence_of_predicate_p1___p2___...__pn_-Mention-1"
        }
      ],
      "relevance": 0.59033203125
    },
    "Entity-a_redundancy_elimination_method": {
      "node_id": "a_redundancy_elimination_method",
      "disambiguation_index": 0,
      "label": "a redundancy elimination method",
      "aliases": [
        "a redundancy elimination method"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A technique used to eliminate duplicate rules from the set of mined OP rules, ensuring no repetition in all the extracted knowledge graph completion rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "a redundancy elimination method",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-a_redundancy_elimination_method-Mention-1"
        }
      ],
      "relevance": 0.59033203125
    },
    "Entity-each_predicate": {
      "node_id": "each_predicate",
      "disambiguation_index": 0,
      "label": "each predicate",
      "aliases": [
        "each predicate"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A predicate with its own set of entity embeddings, used to compute co-occurrence or open path fitness functions in the context of knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "each predicate",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-each_predicate-Mention-1"
        }
      ],
      "relevance": 0.59033203125
    },
    "Entity-_p_t__p_1_": {
      "node_id": "_p_t__p_1_",
      "disambiguation_index": 0,
      "label": "(P_t, P_1)",
      "aliases": [
        "(P_t, P_1)"
      ],
      "types": [
        "argument_list"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The co-occurrence fitness function for an open path rule (P_t, P_1), which estimates the quality of a rule by measuring the similarity between predicate embeddings along the path.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-1",
          "local_name": "(P_t, P_1)",
          "local_types": [
            "argument_list"
          ],
          "iri": "Entity-_p_t__p_1_-Mention-1"
        }
      ],
      "relevance": 0.59033203125
    },
    "Entity-traditional_link_prediction_system": {
      "node_id": "traditional_link_prediction_system",
      "disambiguation_index": 0,
      "label": "traditional link prediction systems",
      "aliases": [
        "traditional link prediction systems"
      ],
      "types": [
        "methodology",
        "system",
        "approach",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Methods or approaches used for predicting links between entities based on existing knowledge graphs (KGs), typically requiring initial query inputs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "traditional link prediction systems",
          "local_types": [
            "methodology",
            "system",
            "approach",
            "algorithm"
          ],
          "iri": "Entity-traditional_link_prediction_system-Mention-1"
        }
      ],
      "relevance": 0.58984375
    },
    "Entity-oprl_query": {
      "node_id": "oprl_query",
      "disambiguation_index": 0,
      "label": "OPRL queries",
      "aliases": [
        "OPRL queries"
      ],
      "types": [
        "queries",
        "information retrieval",
        "requests",
        "query",
        "knowledge representation language"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of requests or queries formulated in a knowledge representation language, used for information retrieval and querying.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "OPRL queries",
          "local_types": [
            "queries",
            "information retrieval",
            "requests",
            "query",
            "knowledge representation language"
          ],
          "iri": "Entity-oprl_query-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-1",
          "local_name": "OPRL queries",
          "local_types": [
            "queries",
            "query"
          ],
          "iri": "Entity-oprl_query-Mention-2"
        }
      ],
      "relevance": 0.58984375
    },
    "Entity-generating_relevant_query_that_can_serve_a_input_to_link_predictor_to_complete_the_kg": {
      "node_id": "generating_relevant_query_that_can_serve_a_input_to_link_predictor_to_complete_the_kg",
      "disambiguation_index": 0,
      "label": "Generating relevant queries that can serve as input to link predictors to complete the KG",
      "aliases": [
        "Generating relevant queries that can serve as input to link predictors to complete the KG"
      ],
      "types": [
        "goal"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The goal of generating relevant queries that can serve as input to link predictors to complete the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-3",
          "local_name": "Generating relevant queries that can serve as input to link predictors to complete the KG",
          "local_types": [
            "goal"
          ],
          "iri": "Entity-generating_relevant_query_that_can_serve_a_input_to_link_predictor_to_complete_the_kg-Mention-1"
        }
      ],
      "relevance": 0.58935546875
    },
    "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg": {
      "node_id": "you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "disambiguation_index": 0,
      "label": "You have a KG and a high-performing link-predicting model built for the KG",
      "aliases": [
        "You have a KG and a high-performing link-predicting model built for the KG"
      ],
      "types": [
        "KG",
        "model",
        "industrial application"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A high-performing link-predicting model built for a Knowledge Graph (KG)",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-2",
          "local_name": "You have a KG and a high-performing link-predicting model built for the KG",
          "local_types": [
            "KG",
            "model",
            "industrial application"
          ],
          "iri": "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg-Mention-1"
        }
      ],
      "relevance": 0.58935546875
    },
    "Entity-the_two_key_phase": {
      "node_id": "the_two_key_phase",
      "disambiguation_index": 0,
      "label": "The two key phases",
      "aliases": [
        "The two key phases"
      ],
      "types": [
        "phases"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The two key phases in representation learning for knowledge graph completion are (1) embedding entities and predicates into a latent space, and (2) reconstructing the knowledge graph based on learned embeddings to predict new facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "The two key phases",
          "local_types": [
            "phases"
          ],
          "iri": "Entity-the_two_key_phase-Mention-1"
        }
      ],
      "relevance": 0.58935546875
    },
    "Entity-first": {
      "node_id": "first",
      "disambiguation_index": 0,
      "label": "First",
      "aliases": [
        "First"
      ],
      "types": [
        "method",
        "introduction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The initial step in reducing the size of a knowledge graph (KG) because existing embedding-based methods cannot handle vast KGs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-1",
          "local_name": "First",
          "local_types": [
            "method",
            "introduction"
          ],
          "iri": "Entity-first-Mention-1"
        }
      ],
      "relevance": 0.58935546875
    },
    "Entity-knowledge_graph_completion_task": {
      "node_id": "knowledge_graph_completion_task",
      "disambiguation_index": 0,
      "label": "knowledge graph completion tasks",
      "aliases": [
        "knowledge graph completion tasks",
        "knowledge graph completion task"
      ],
      "types": [
        "task",
        "research area",
        "problem solving"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A task or problem-solving activity focused on completing and refining knowledge graphs by filling in missing information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-3",
          "local_name": "knowledge graph completion tasks",
          "local_types": [
            "task",
            "research area"
          ],
          "iri": "Entity-knowledge_graph_completion_task-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "knowledge graph completion task",
          "local_types": [
            "task",
            "problem solving"
          ],
          "iri": "Entity-knowledge_graph_completion_task-Mention-2"
        }
      ],
      "relevance": 0.5888671875
    },
    "Entity-the_partial_area_under_the_curve__auc__of_rlvlr__is_0.23_while_the_partial_auc_of_oprl_is_0.30__showing_oprl_outperforms_rlvlr__on_query_generation_by_30_": {
      "node_id": "the_partial_area_under_the_curve__auc__of_rlvlr__is_0.23_while_the_partial_auc_of_oprl_is_0.30__showing_oprl_outperforms_rlvlr__on_query_generation_by_30_",
      "disambiguation_index": 0,
      "label": "the partial area under the curve (AUC) of RLvLR* is 0.23 while the partial AUC of OPRL is 0.30, showing OPRL outperforms RLvLR* on query generation by 30%",
      "aliases": [
        "the partial area under the curve (AUC) of RLvLR* is 0.23 while the partial AUC of OPRL is 0.30, showing OPRL outperforms RLvLR* on query generation by 30%"
      ],
      "types": [
        "comparison"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The comparison between the performance of OPRL and RLvLR* in generating queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "the partial area under the curve (AUC) of RLvLR* is 0.23 while the partial AUC of OPRL is 0.30, showing OPRL outperforms RLvLR* on query generation by 30%",
          "local_types": [
            "comparison"
          ],
          "iri": "Entity-the_partial_area_under_the_curve__auc__of_rlvlr__is_0.23_while_the_partial_auc_of_oprl_is_0.30__showing_oprl_outperforms_rlvlr__on_query_generation_by_30_-Mention-1"
        }
      ],
      "relevance": 0.5888671875
    },
    "Entity-and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule": {
      "node_id": "and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule",
      "disambiguation_index": 0,
      "label": "and P_1, ..., P_n (for n >= 1) are predicates of the body and x, y, z_1, ..., z_{n-1} are variables in the rule",
      "aliases": [
        "and P_1, ..., P_n (for n >= 1) are predicates of the body and x, y, z_1, ..., z_{n-1} are variables in the rule"
      ],
      "types": [
        "rule",
        "variables"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of logical rule with existential quantification used for knowledge graph completion",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "and P_1, ..., P_n (for n >= 1) are predicates of the body and x, y, z_1, ..., z_{n-1} are variables in the rule",
          "local_types": [
            "rule",
            "variables"
          ],
          "iri": "Entity-and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule-Mention-1"
        }
      ],
      "relevance": 0.5888671875
    },
    "Entity-the_hybrid_setting": {
      "node_id": "the_hybrid_setting",
      "disambiguation_index": 0,
      "label": "the hybrid setting",
      "aliases": [
        "the hybrid setting"
      ],
      "types": [
        "setting",
        "hybrid"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A methodological approach that combines two quality estimation functions (co-occurrence and open path) to select the top candidate rules in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-3",
          "local_name": "the hybrid setting",
          "local_types": [
            "setting",
            "hybrid"
          ],
          "iri": "Entity-the_hybrid_setting-Mention-1"
        }
      ],
      "relevance": 0.5888671875
    },
    "Entity-every_fact_in_the_kg_that_is_an_instance_of_it_head": {
      "node_id": "every_fact_in_the_kg_that_is_an_instance_of_it_head",
      "disambiguation_index": 0,
      "label": "every fact in the KG that is an instance of its head",
      "aliases": [
        "every fact in the KG that is an instance of its head"
      ],
      "types": [
        "fact",
        "instance",
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A fact in a knowledge graph (KG) that satisfies both the body and head of a closed path rule, indicating redundancy with respect to the KG.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-6",
          "local_name": "every fact in the KG that is an instance of its head",
          "local_types": [
            "fact",
            "instance",
            "head"
          ],
          "iri": "Entity-every_fact_in_the_kg_that_is_an_instance_of_it_head-Mention-1"
        }
      ],
      "relevance": 0.58837890625
    },
    "Entity-the_following_two_op_rule_which_are_mined_from_wikidata__with_their_opsc_and_ophc_value_respectively_.": {
      "node_id": "the_following_two_op_rule_which_are_mined_from_wikidata__with_their_opsc_and_ophc_value_respectively_.",
      "disambiguation_index": 0,
      "label": "the following two OP rules which are mined from Wikidata, with their OPSC and OPHC values respectively.",
      "aliases": [
        "the following two OP rules which are mined from Wikidata, with their OPSC and OPHC values respectively."
      ],
      "types": [
        "rules",
        "data source",
        "OPSC",
        "OPHC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Two Open Path (OP) rules that have been learned from the Wikidata dataset, along with their respective OPSC (Open Path Score) and OPHC (Open Path Head Coverage) values.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "the following two OP rules which are mined from Wikidata, with their OPSC and OPHC values respectively.",
          "local_types": [
            "rules",
            "data source",
            "OPSC",
            "OPHC"
          ],
          "iri": "Entity-the_following_two_op_rule_which_are_mined_from_wikidata__with_their_opsc_and_ophc_value_respectively_.-Mention-1"
        }
      ],
      "relevance": 0.58837890625
    },
    "Entity-the_co-occurrence_fitness_function_for_cp_rule_used_in_rlvlr": {
      "node_id": "the_co-occurrence_fitness_function_for_cp_rule_used_in_rlvlr",
      "disambiguation_index": 0,
      "label": "the co-occurrence fitness function for CP rules used in RLVLR",
      "aliases": [
        "the co-occurrence fitness function for CP rules used in RLVLR"
      ],
      "types": [
        "function",
        "RLVLR"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The co-occurrence fitness function, derived from embedding representations and used to estimate rule quality for open path rules in RLVLR.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "the co-occurrence fitness function for CP rules used in RLVLR",
          "local_types": [
            "function",
            "RLVLR"
          ],
          "iri": "Entity-the_co-occurrence_fitness_function_for_cp_rule_used_in_rlvlr-Mention-1"
        }
      ],
      "relevance": 0.587890625
    },
    "Entity-algorithm_1__oprl": {
      "node_id": "algorithm_1__oprl",
      "disambiguation_index": 0,
      "label": "Algorithm 1: OPRL",
      "aliases": [
        "Algorithm 1: OPRL"
      ],
      "types": [
        "computational method",
        "algorithmic process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A computational method, specifically an algorithmic process known as OPRL.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-1",
          "local_name": "Algorithm 1: OPRL",
          "local_types": [
            "computational method",
            "algorithmic process"
          ],
          "iri": "Entity-algorithm_1__oprl-Mention-1"
        }
      ],
      "relevance": 0.58740234375
    },
    "Entity-an_entity_already_present_in_the_kg": {
      "node_id": "an_entity_already_present_in_the_kg",
      "disambiguation_index": 0,
      "label": "an entity already present in the KG",
      "aliases": [
        "an entity already present in the KG"
      ],
      "types": [
        "entity",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An existing entity within a Knowledge Graph (KG) that may not have been recorded or has missing relationships.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-6",
          "local_name": "an entity already present in the KG",
          "local_types": [
            "entity",
            "knowledge graph"
          ],
          "iri": "Entity-an_entity_already_present_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.58740234375
    },
    "Entity-it_embedding_representation": {
      "node_id": "it_embedding_representation",
      "disambiguation_index": 0,
      "label": "its embedding representation",
      "aliases": [
        "its embedding representation"
      ],
      "types": [
        "representation",
        "embedding"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The vector-based fitness function used to efficiently evaluate and prune OP rules during learning.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-3",
          "local_name": "its embedding representation",
          "local_types": [
            "representation",
            "embedding"
          ],
          "iri": "Entity-it_embedding_representation-Mention-1"
        }
      ],
      "relevance": 0.58740234375
    },
    "Entity-p1": {
      "node_id": "p1",
      "disambiguation_index": 0,
      "label": "P1",
      "aliases": [
        "P1"
      ],
      "types": [
        "parameter",
        "predicate",
        "argument",
        "rule",
        "relation",
        "production rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "P1 refers to a target predicate in the head, which is used as input for mining open-path rules about that specific predicate using the OPRL algorithm.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-7",
          "local_name": "P1",
          "local_types": [
            "predicate",
            "relation"
          ],
          "iri": "Entity-p1-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "P1",
          "local_types": [
            "rule",
            "production rule"
          ],
          "iri": "Entity-p1-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-2",
          "local_name": "P1",
          "local_types": [
            "argument",
            "parameter"
          ],
          "iri": "Entity-p1-Mention-3"
        }
      ],
      "relevance": 0.5869140625
    },
    "Entity-co-occurrence_fitness": {
      "node_id": "co-occurrence_fitness",
      "disambiguation_index": 0,
      "label": "co-occurrence fitness",
      "aliases": [
        "co-occurrence fitness"
      ],
      "types": [
        "metric",
        "evaluation criterion"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A metric used in knowledge graph completion, defined as the sum of pairwise local co-occurrences between predicates along an open path rule, capturing the weight of connections between sequential entities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-15-Sentence-1",
          "local_name": "co-occurrence fitness",
          "local_types": [
            "metric",
            "evaluation criterion"
          ],
          "iri": "Entity-co-occurrence_fitness-Mention-1"
        }
      ],
      "relevance": 0.5869140625
    },
    "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_": {
      "node_id": "or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "disambiguation_index": 0,
      "label": "Or do you generate queries with a preference given to those with a higher probability in the KG?",
      "aliases": [
        "Or do you generate queries with a preference given to those with a higher probability in the KG?"
      ],
      "types": [
        "queries",
        "probability",
        "KG"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The question of whether to prioritize generating queries based on their likelihood or presence within the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-4",
          "local_name": "Or do you generate queries with a preference given to those with a higher probability in the KG?",
          "local_types": [
            "queries",
            "probability",
            "KG"
          ],
          "iri": "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_-Mention-1"
        }
      ],
      "relevance": 0.5869140625
    },
    "Entity-the_model": {
      "node_id": "the_model",
      "disambiguation_index": 0,
      "label": "The models",
      "aliases": [
        "The models"
      ],
      "types": [
        "model"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Machine learning models, often expressed as logical rules or vector embeddings, learned from a given knowledge graph to predict missing facts and generate relevant queries for curating tasks including link prediction.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "The models",
          "local_types": [
            "model"
          ],
          "iri": "Entity-the_model-Mention-1"
        }
      ],
      "relevance": 0.5869140625
    },
    "Entity-open_path_support": {
      "node_id": "open_path_support",
      "disambiguation_index": 0,
      "label": "open path support",
      "aliases": [
        "open path support"
      ],
      "types": [
        "standard",
        "concept",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The measure of the number of entities in a knowledge graph that can instantiate variables in an open path rule, used as a metric for assessing the quality and relevance of mined rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-7-Sentence-1",
          "local_name": "open path support",
          "local_types": [
            "standard",
            "concept",
            "notation"
          ],
          "iri": "Entity-open_path_support-Mention-1"
        }
      ],
      "relevance": 0.58642578125
    },
    "Entity-the_link_predictor": {
      "node_id": "the_link_predictor",
      "disambiguation_index": 0,
      "label": "The link predictors",
      "aliases": [
        "The link predictors"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An algorithm that generates queries for knowledge graph completion, which can be used to infer new facts when combined with a link predictor.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "The link predictors",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-the_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.58642578125
    },
    "Entity-kg": {
      "node_id": "kg",
      "disambiguation_index": 0,
      "label": "KG",
      "aliases": [
        "KG",
        "Knowledge Graph (KG)",
        "KGs",
        "Knowledge Graphs (KGs)"
      ],
      "types": [
        "database",
        "term",
        "data structures",
        "concept",
        "knowledge base",
        "system",
        "knowledge graphs",
        "knowledge_graph",
        "technology",
        "tool",
        "organization",
        "graph",
        "knowledge graph",
        "Knowledge Graph",
        "graph database",
        "notation",
        "knowledge representation",
        "knowledge representation format",
        "dataset",
        "abbreviation",
        "information system",
        "data structure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A knowledge graph or database that represents entities and their relationships.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "concept"
          ],
          "iri": "Entity-kg-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database",
            "technology",
            "concept"
          ],
          "iri": "Entity-kg-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-7",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "concept"
          ],
          "iri": "Entity-kg-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "term",
            "dataset",
            "abbreviation",
            "knowledge graph",
            "knowledge base",
            "knowledge_graph"
          ],
          "iri": "Entity-kg-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "database",
            "abbreviation",
            "concept",
            "knowledge graph",
            "Knowledge Graph",
            "knowledge_graph"
          ],
          "iri": "Entity-kg-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "technology"
          ],
          "iri": "Entity-kg-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "system"
          ],
          "iri": "Entity-kg-Mention-7"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "database",
            "dataset",
            "abbreviation",
            "knowledge graph",
            "knowledge_graph"
          ],
          "iri": "Entity-kg-Mention-8"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-5",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "dataset",
            "knowledge graphs"
          ],
          "iri": "Entity-kg-Mention-9"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-5",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "system"
          ],
          "iri": "Entity-kg-Mention-10"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-6",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "system"
          ],
          "iri": "Entity-kg-Mention-11"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-6",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-kg-Mention-12"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database",
            "concept"
          ],
          "iri": "Entity-kg-Mention-13"
        },
        {
          "reference": "Section-4-Paragraph-7-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "database",
            "tool",
            "dataset",
            "knowledge graph",
            "system"
          ],
          "iri": "Entity-kg-Mention-14"
        },
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "organization"
          ],
          "iri": "Entity-kg-Mention-15"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "dataset",
            "database",
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-16"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "technology"
          ],
          "iri": "Entity-kg-Mention-17"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "dataset",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-18"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-19"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "abbreviation",
            "Knowledge Graph",
            "term"
          ],
          "iri": "Entity-kg-Mention-20"
        },
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-21"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "technology",
            "abbreviation",
            "knowledge graph",
            "notation",
            "knowledge_graph"
          ],
          "iri": "Entity-kg-Mention-22"
        },
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "technology"
          ],
          "iri": "Entity-kg-Mention-23"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-24"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "abbreviation",
            "database",
            "knowledge_graph"
          ],
          "iri": "Entity-kg-Mention-25"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-6",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-26"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-6",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "abbreviation",
            "knowledge_graph"
          ],
          "iri": "Entity-kg-Mention-27"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-8",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-28"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "abbreviation",
            "knowledge_graph"
          ],
          "iri": "Entity-kg-Mention-29"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-30"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-4",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-31"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-4",
          "local_name": "KGs",
          "local_types": [
            "abbreviation",
            "knowledge_graph"
          ],
          "iri": "Entity-kg-Mention-32"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "abbreviation",
            "knowledge_graph"
          ],
          "iri": "Entity-kg-Mention-33"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-34"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-35"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "concept",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-36"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "notation",
            "abbreviation"
          ],
          "iri": "Entity-kg-Mention-37"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-38"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-39"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-40"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-41"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-kg-Mention-42"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-43"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "system"
          ],
          "iri": "Entity-kg-Mention-44"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-45"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-46"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-47"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-5",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-48"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-49"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-50"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "graph",
            "data structures",
            "knowledge graph",
            "knowledge graphs",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-51"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-52"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-53"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "data structures",
            "knowledge graphs",
            "notation"
          ],
          "iri": "Entity-kg-Mention-54"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-55"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database",
            "data structures",
            "knowledge graphs"
          ],
          "iri": "Entity-kg-Mention-56"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database",
            "data structures",
            "knowledge graphs"
          ],
          "iri": "Entity-kg-Mention-57"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database",
            "knowledge graphs"
          ],
          "iri": "Entity-kg-Mention-58"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-59"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-60"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-61"
        },
        {
          "reference": "Section-8-Paragraph-7-Sentence-2",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-62"
        },
        {
          "reference": "Section-8-Paragraph-7-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-63"
        },
        {
          "reference": "Section-8-Paragraph-7-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-64"
        },
        {
          "reference": "Section-9-Paragraph-7-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "dataset",
            "database",
            "Knowledge Graph",
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-65"
        },
        {
          "reference": "Section-9-Paragraph-8-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-66"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-4",
          "local_name": "KG",
          "local_types": [
            "knowledge representation format"
          ],
          "iri": "Entity-kg-Mention-67"
        },
        {
          "reference": "Section-9-Paragraph-10-Sentence-1",
          "local_name": "KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-68"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "graph database"
          ],
          "iri": "Entity-kg-Mention-69"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "KGs",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-kg-Mention-70"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-3",
          "local_name": "KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-kg-Mention-71"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "Knowledge Graph (KG)",
          "local_types": [
            "data structure",
            "information system"
          ],
          "iri": "Entity-kg-Mention-72"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graphs (KGs)",
          "local_types": [
            "knowledge representation",
            "concept",
            "knowledge graph",
            "information system",
            "data structure"
          ],
          "iri": "Entity-kg-Mention-73"
        }
      ],
      "relevance": 0.5859375
    },
    "Entity-pathfinding__k___p_t__p__a__k_": {
      "node_id": "pathfinding__k___p_t__p__a__k_",
      "disambiguation_index": 0,
      "label": "PathFinding( K', P_t, P, A, k )",
      "aliases": [
        "PathFinding( K', P_t, P, A, k )"
      ],
      "types": [
        "function call",
        "path finding algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A function call that generates OP rules for a target predicate by exhaustively generating paths comprising sequences of predicates with required patterns and applying a fitness function to rapidly discard poor performers.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-9",
          "local_name": "PathFinding( K', P_t, P, A, k )",
          "local_types": [
            "function call",
            "path finding algorithm"
          ],
          "iri": "Entity-pathfinding__k___p_t__p__a__k_-Mention-1"
        }
      ],
      "relevance": 0.5859375
    },
    "Entity-to_evaluate_our_system": {
      "node_id": "to_evaluate_our_system",
      "disambiguation_index": 0,
      "label": "To evaluate our system",
      "aliases": [
        "To evaluate our system"
      ],
      "types": [
        "evaluation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of assessing the performance and effectiveness of the proposed system for learning Open Path rules to generate relevant questions for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-2",
          "local_name": "To evaluate our system",
          "local_types": [
            "evaluation"
          ],
          "iri": "Entity-to_evaluate_our_system-Mention-1"
        }
      ],
      "relevance": 0.5859375
    },
    "Entity-the_fitness_function_adapted_from_rlvlr": {
      "node_id": "the_fitness_function_adapted_from_rlvlr",
      "disambiguation_index": 0,
      "label": "the fitness function adapted from RLVLR",
      "aliases": [
        "the fitness function adapted from RLVLR"
      ],
      "types": [
        "fitness function",
        "algorithm reference"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A fitness function used to estimate rule quality, specifically designed for learning Open Path rules and mining massive knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-7-Sentence-3",
          "local_name": "the fitness function adapted from RLVLR",
          "local_types": [
            "fitness function",
            "algorithm reference"
          ],
          "iri": "Entity-the_fitness_function_adapted_from_rlvlr-Mention-1"
        }
      ],
      "relevance": 0.5859375
    },
    "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_": {
      "node_id": "or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "disambiguation_index": 0,
      "label": "Or do you instead generate every possible query with no indication of comparative value to the KG?",
      "aliases": [
        "Or do you instead generate every possible query with no indication of comparative value to the KG?",
        "do you instead generate every possible query with no indication of comparative value to the KG?"
      ],
      "types": [
        "KG",
        "comparative value",
        "query"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The option of generating all possible queries without considering their relative importance or relevance to the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-3",
          "local_name": "Or do you instead generate every possible query with no indication of comparative value to the KG?",
          "local_types": [
            "query",
            "comparative value",
            "KG"
          ],
          "iri": "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-7-Sentence-3",
          "local_name": "do you instead generate every possible query with no indication of comparative value to the KG?",
          "local_types": [
            "query",
            "KG"
          ],
          "iri": "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_-Mention-2"
        }
      ],
      "relevance": 0.58544921875
    },
    "Entity-where_we_aim__instead_of_suggesting_missing_fact": {
      "node_id": "where_we_aim__instead_of_suggesting_missing_fact",
      "disambiguation_index": 0,
      "label": "where we aim, instead of suggesting missing facts",
      "aliases": [
        "where we aim, instead of suggesting missing facts"
      ],
      "types": [
        "goal",
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept or goal of actively asking relevant questions to complete a knowledge graph (KG) rather than suggesting missing facts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "where we aim, instead of suggesting missing facts",
          "local_types": [
            "goal",
            "research"
          ],
          "iri": "Entity-where_we_aim__instead_of_suggesting_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.5849609375
    },
    "Entity-the_argument_embeddings": {
      "node_id": "the_argument_embeddings",
      "disambiguation_index": 0,
      "label": "The argument embeddings",
      "aliases": [
        "The argument embeddings"
      ],
      "types": [
        "concept",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "In the context of knowledge graph completion, The argument embeddings refer to vector representations obtained by averaging the entity embeddings of all entities in each subject or object position of a predicate.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "The argument embeddings",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-the_argument_embeddings-Mention-1"
        }
      ],
      "relevance": 0.5849609375
    },
    "Entity-towards_learning_existential_rule_from_knowledge_graph": {
      "node_id": "towards_learning_existential_rule_from_knowledge_graph",
      "disambiguation_index": 0,
      "label": "towards learning existential rules from knowledge graphs",
      "aliases": [
        "towards learning existential rules from knowledge graphs"
      ],
      "types": [
        "learning",
        "existential rules",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Preliminary efforts aimed at developing methods for discovering and learning existential rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "towards learning existential rules from knowledge graphs",
          "local_types": [
            "learning",
            "existential rules",
            "knowledge graph"
          ],
          "iri": "Entity-towards_learning_existential_rule_from_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.5849609375
    },
    "Entity-a_heuristic_for_mining_logical_axiom": {
      "node_id": "a_heuristic_for_mining_logical_axiom",
      "disambiguation_index": 0,
      "label": "a heuristic for mining logical axioms",
      "aliases": [
        "a heuristic for mining logical axioms"
      ],
      "types": [
        "heuristic",
        "mining",
        "logical axiom"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel algorithmic approach or method used to discover and extract logical rules from large knowledge graphs, which can be applied to complete incomplete KGs.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-9",
          "local_name": "a heuristic for mining logical axioms",
          "local_types": [
            "heuristic",
            "mining",
            "logical axiom"
          ],
          "iri": "Entity-a_heuristic_for_mining_logical_axiom-Mention-1"
        }
      ],
      "relevance": 0.58447265625
    },
    "Entity-local_fitness_function": {
      "node_id": "local_fitness_function",
      "disambiguation_index": 0,
      "label": "local fitness functions",
      "aliases": [
        "local fitness functions"
      ],
      "types": [
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Local fitness functions, in the context of knowledge graph completion, refer to pairwise similarity measures between predicate embeddings that estimate the quality of open path rules by capturing co-occurrences and latent features along sequential entities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "local fitness functions",
          "local_types": [
            "function"
          ],
          "iri": "Entity-local_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.58447265625
    },
    "Entity-the_power_of_kg": {
      "node_id": "the_power_of_kg",
      "disambiguation_index": 0,
      "label": "the power of KGs",
      "aliases": [
        "the power of KGs"
      ],
      "types": [
        "advantage"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The ability or advantage provided by Knowledge Graphs (KGs) in modeling and storing massive quantities of weakly-structured data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "the power of KGs",
          "local_types": [
            "advantage"
          ],
          "iri": "Entity-the_power_of_kg-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-the_head_of_the_rule_(1)": {
      "node_id": "the_head_of_the_rule_(1)",
      "disambiguation_index": 1,
      "label": "the head of the rule",
      "aliases": [
        "the head of the rule"
      ],
      "types": [
        "rule",
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The entity referred to by 'the head of the rule' is a part of a Closed (non-existential) rule or an Open Path (OP) rule in a knowledge graph, which defines a relationship between entities and can be used for inference and query generation.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-5",
          "local_name": "the head of the rule",
          "local_types": [
            "rule",
            "head"
          ],
          "iri": "Entity-the_head_of_the_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-for_opsc": {
      "node_id": "for_opsc",
      "disambiguation_index": 0,
      "label": "For OPSC",
      "aliases": [
        "For OPSC"
      ],
      "types": [
        "organization"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum threshold for the number of entities that satisfy the head or body of a rule in the Open Path (OP) rules learning algorithm.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-4-Sentence-1",
          "local_name": "For OPSC",
          "local_types": [
            "organization"
          ],
          "iri": "Entity-for_opsc-Mention-1"
        }
      ],
      "relevance": 0.583984375
    },
    "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg": {
      "node_id": "or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "disambiguation_index": 0,
      "label": "or when the correct answer is a missing entity that is not present in the KG",
      "aliases": [
        "or when the correct answer is a missing entity that is not present in the KG"
      ],
      "types": [
        "entity",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A situation where there is no existing entity or concept in the knowledge graph to serve as the correct answer.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "or when the correct answer is a missing entity that is not present in the KG",
          "local_types": [
            "entity",
            "knowledge graph"
          ],
          "iri": "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.58349609375
    },
    "Entity-efficient_matrix_and_vector_multiplication": {
      "node_id": "efficient_matrix_and_vector_multiplication",
      "disambiguation_index": 0,
      "label": "efficient matrix and vector multiplication",
      "aliases": [
        "efficient matrix and vector multiplication"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A methodology that uses efficient computation of matrices and vectors to evaluate the quality of Open Path rules in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-18",
          "local_name": "efficient matrix and vector multiplication",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-efficient_matrix_and_vector_multiplication-Mention-1"
        }
      ],
      "relevance": 0.58349609375
    },
    "Entity-this_(4)": {
      "node_id": "this_(4)",
      "disambiguation_index": 4,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept or entity referred to by 'this' is the idea that queries for missing links in a knowledge graph can be generated using Open Path rules, rather than relying on hold-out test data.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-1",
          "local_name": "This",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this_(4)-Mention-1"
        }
      ],
      "relevance": 0.58349609375
    },
    "Entity-the_opsc_threshold": {
      "node_id": "the_opsc_threshold",
      "disambiguation_index": 0,
      "label": "the OPSC threshold",
      "aliases": [
        "the OPSC threshold"
      ],
      "types": [
        "threshold",
        "ontology path similarity coefficient"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The minimum ontology path similarity coefficient threshold used by OPRL algorithm for generating queries from learned rules.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "the OPSC threshold",
          "local_types": [
            "threshold",
            "ontology path similarity coefficient"
          ],
          "iri": "Entity-the_opsc_threshold-Mention-1"
        }
      ],
      "relevance": 0.58251953125
    },
    "Entity-the_generated_query_may_be_valid_but_there_is_no_answer_in_the_test_set": {
      "node_id": "the_generated_query_may_be_valid_but_there_is_no_answer_in_the_test_set",
      "disambiguation_index": 0,
      "label": "the generated queries may be valid but there is no answer in the test set",
      "aliases": [
        "the generated queries may be valid but there is no answer in the test set"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A situation where the generated queries from OPRL-learned rules are deemed valid, yet they do not have corresponding answers present in the test dataset.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "the generated queries may be valid but there is no answer in the test set",
          "local_types": [
            "query"
          ],
          "iri": "Entity-the_generated_query_may_be_valid_but_there_is_no_answer_in_the_test_set-Mention-1"
        }
      ],
      "relevance": 0.58251953125
    },
    "Entity-r_is_defined_a": {
      "node_id": "r_is_defined_a",
      "disambiguation_index": 0,
      "label": "r is defined as",
      "aliases": [
        "r is defined as"
      ],
      "types": [
        "definition",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An open path rule in a knowledge graph, which is a constrained existential rule of the form P_t(x, z_0) \u2190 P_1(z_0, z_1) \u2227 ... \u2227 P_n(z_{n-1}, y), where each P_i and P_t are predicates, x and y are free variables, and z_i are bound variables.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-7-Sentence-2",
          "local_name": "r is defined as",
          "local_types": [
            "definition",
            "notation"
          ],
          "iri": "Entity-r_is_defined_a-Mention-1"
        }
      ],
      "relevance": 0.58203125
    },
    "Entity-opsc__r__(1)": {
      "node_id": "opsc__r__(1)",
      "disambiguation_index": 1,
      "label": "OPSC(r)",
      "aliases": [
        "OPSC(r)"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The Open Path Standard Confidence (OPSC(r)) metric measures the proportion of entities that can instantiate a rule's body to satisfy its head.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-8-Sentence-1",
          "local_name": "OPSC(r)",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-opsc__r__(1)-Mention-1"
        }
      ],
      "relevance": 0.58203125
    },
    "Entity-in_order_to_generate_query_that_predict_those_same_fact": {
      "node_id": "in_order_to_generate_query_that_predict_those_same_fact",
      "disambiguation_index": 0,
      "label": "in order to generate queries that predict those same facts",
      "aliases": [
        "in order to generate queries that predict those same facts"
      ],
      "types": [
        "queries",
        "fact prediction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating questions or queries based on the same facts as a knowledge graph, in order to predict and complete the missing links.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-2",
          "local_name": "in order to generate queries that predict those same facts",
          "local_types": [
            "queries",
            "fact prediction"
          ],
          "iri": "Entity-in_order_to_generate_query_that_predict_those_same_fact-Mention-1"
        }
      ],
      "relevance": 0.58203125
    },
    "Entity-hence__for_each_fitness_function__based_on_fitness_value_of_rule__we_pick_up_only_the_top_t__of_rule": {
      "node_id": "hence__for_each_fitness_function__based_on_fitness_value_of_rule__we_pick_up_only_the_top_t__of_rule",
      "disambiguation_index": 0,
      "label": "Hence, for each fitness function, based on fitness values of rules, we pick up only the top t% of rules",
      "aliases": [
        "Hence, for each fitness function, based on fitness values of rules, we pick up only the top t% of rules"
      ],
      "types": [
        "step-by-step process",
        "rule selection"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of selecting and ranking candidate OP rules using either co-occurrence or open path fitness functions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-4",
          "local_name": "Hence, for each fitness function, based on fitness values of rules, we pick up only the top t% of rules",
          "local_types": [
            "step-by-step process",
            "rule selection"
          ],
          "iri": "Entity-hence__for_each_fitness_function__based_on_fitness_value_of_rule__we_pick_up_only_the_top_t__of_rule-Mention-1"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-we_use_op_rule_to_generate_relevant_question_which_can_be_posed_to_an_oracle_or_a_human_expert": {
      "node_id": "we_use_op_rule_to_generate_relevant_question_which_can_be_posed_to_an_oracle_or_a_human_expert",
      "disambiguation_index": 0,
      "label": "We use OP rules to generate relevant questions which can be posed to an oracle or a human expert",
      "aliases": [
        "We use OP rules to generate relevant questions which can be posed to an oracle or a human expert",
        "We use OP rules to generate relevant questions which can be posed to an oracle or a human expert, just as for other active learning settings."
      ],
      "types": [
        "comparison",
        "methodology",
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology used to generate relevant questions that can be posed to an oracle or a human expert",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "We use OP rules to generate relevant questions which can be posed to an oracle or a human expert",
          "local_types": [
            "methodology",
            "research"
          ],
          "iri": "Entity-we_use_op_rule_to_generate_relevant_question_which_can_be_posed_to_an_oracle_or_a_human_expert-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "We use OP rules to generate relevant questions which can be posed to an oracle or a human expert, just as for other active learning settings.",
          "local_types": [
            "methodology",
            "comparison"
          ],
          "iri": "Entity-we_use_op_rule_to_generate_relevant_question_which_can_be_posed_to_an_oracle_or_a_human_expert-Mention-2"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-the_support_of_r": {
      "node_id": "the_support_of_r",
      "disambiguation_index": 0,
      "label": "the support of r",
      "aliases": [
        "the support of r"
      ],
      "types": [
        "support"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The measure that counts the number of target instances where a closed path (CP) rule's body and head are simultaneously satisfied in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-6",
          "local_name": "the support of r",
          "local_types": [
            "support"
          ],
          "iri": "Entity-the_support_of_r-Mention-1"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-k____sampling__k__p_": {
      "node_id": "k____sampling__k__p_",
      "disambiguation_index": 0,
      "label": "K' := Sampling(K, P)",
      "aliases": [
        "K' := Sampling(K, P)"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A reduced knowledge graph (KG) fragment K', consisting of a bounded number of entities related to a target predicate P.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-5",
          "local_name": "K' := Sampling(K, P)",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-k____sampling__k__p_-Mention-1"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-an_automated_link_predictor": {
      "node_id": "an_automated_link_predictor",
      "disambiguation_index": 0,
      "label": "an automated link predictor",
      "aliases": [
        "an automated link predictor"
      ],
      "types": [
        "predictor"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A system that generates relevant questions or queries about missing links in a knowledge graph by using open-path rules learned from the graph, which can be used as input for an oracle or human expert to predict facts.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "an automated link predictor",
          "local_types": [
            "predictor"
          ],
          "iri": "Entity-an_automated_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.58154296875
    },
    "Entity-from_an_op_rule__two_cp_rule_are_logical_consequence__one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t": {
      "node_id": "from_an_op_rule__two_cp_rule_are_logical_consequence__one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t",
      "disambiguation_index": 0,
      "label": "From an OP rule, two CP rules are logical consequences: one for each unification of free variable y with a variable of the head P_t",
      "aliases": [
        "From an OP rule, two CP rules are logical consequences: one for each unification of free variable y with a variable of the head P_t",
        "two CP rules are logical consequences"
      ],
      "types": [
        "unification",
        "rule_consequence",
        "rules",
        "consequence"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A consequence derived from an Open Path (OP) rule, resulting in two Closed Path (CP) rules for each unification of a free variable y with a variable of the head P_t.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-2",
          "local_name": "From an OP rule, two CP rules are logical consequences: one for each unification of free variable y with a variable of the head P_t",
          "local_types": [
            "rule_consequence",
            "unification"
          ],
          "iri": "Entity-from_an_op_rule__two_cp_rule_are_logical_consequence__one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-2",
          "local_name": "two CP rules are logical consequences",
          "local_types": [
            "consequence",
            "rules"
          ],
          "iri": "Entity-from_an_op_rule__two_cp_rule_are_logical_consequence__one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t-Mention-2"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-op_rule_admit_instantiation_that_can_not_be_instantiation_of_any_cp_rule_.": {
      "node_id": "op_rule_admit_instantiation_that_can_not_be_instantiation_of_any_cp_rule_.",
      "disambiguation_index": 0,
      "label": "OP rules admit instantiations that cannot be instantiations of any CP rule.",
      "aliases": [
        "OP rules admit instantiations that cannot be instantiations of any CP rule."
      ],
      "types": [
        "instantiation",
        "non_correspondence"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of Open Path (OP) rule that admits instantiations that are not possible with Closed Path (CP) rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-4",
          "local_name": "OP rules admit instantiations that cannot be instantiations of any CP rule.",
          "local_types": [
            "instantiation",
            "non_correspondence"
          ],
          "iri": "Entity-op_rule_admit_instantiation_that_can_not_be_instantiation_of_any_cp_rule_.-Mention-1"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-candidate_rule_by_opsc_and_ophc_in_evaluate__": {
      "node_id": "candidate_rule_by_opsc_and_ophc_in_evaluate__",
      "disambiguation_index": 0,
      "label": "candidate rules by OPSC and OPHC in Evaluate()",
      "aliases": [
        "candidate rules by OPSC and OPHC in Evaluate()"
      ],
      "types": [
        "evaluation",
        "metrics"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of candidate open-path (OP) rules generated through the evaluation process using OPSC (Open Path rule quality score) and OPHC (Open Path rule quality measure) metrics.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "candidate rules by OPSC and OPHC in Evaluate()",
          "local_types": [
            "evaluation",
            "metrics"
          ],
          "iri": "Entity-candidate_rule_by_opsc_and_ophc_in_evaluate__-Mention-1"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-the_problem": {
      "node_id": "the_problem",
      "disambiguation_index": 0,
      "label": "the problem",
      "aliases": [
        "the problem"
      ],
      "types": [
        "problem"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The problem refers to the challenge of finding relevant questions for knowledge graph completion, which is reduced from the original task of completing incomplete enterprise and public Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-3",
          "local_name": "the problem",
          "local_types": [
            "problem"
          ],
          "iri": "Entity-the_problem-Mention-1"
        }
      ],
      "relevance": 0.58056640625
    },
    "Entity-p_1": {
      "node_id": "p_1",
      "disambiguation_index": 0,
      "label": "P_1",
      "aliases": [
        "P_1"
      ],
      "types": [
        "linear algebra",
        "variable",
        "location",
        "function",
        "parameter",
        "target predicate",
        "predicate",
        "matrix",
        "scoring function",
        "logical operator",
        "relation",
        "point"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "P_1: a target predicate for which OP rules are mined to induce relevant queries about missing links in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "P_1",
          "local_types": [
            "relation",
            "predicate",
            "function"
          ],
          "iri": "Entity-p_1-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P_1",
          "local_types": [
            "function"
          ],
          "iri": "Entity-p_1-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "P_1",
          "local_types": [
            "function",
            "scoring function"
          ],
          "iri": "Entity-p_1-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "P_1",
          "local_types": [
            "predicate",
            "logical operator"
          ],
          "iri": "Entity-p_1-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-1",
          "local_name": "P_1",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-p_1-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-16-Sentence-1",
          "local_name": "P_1",
          "local_types": [
            "location",
            "parameter",
            "point"
          ],
          "iri": "Entity-p_1-Mention-6"
        },
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "P_1",
          "local_types": [
            "linear algebra",
            "matrix"
          ],
          "iri": "Entity-p_1-Mention-7"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "P_1",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p_1-Mention-8"
        },
        {
          "reference": "Section-8-Paragraph-9-Sentence-1",
          "local_name": "P_1",
          "local_types": [
            "predicate",
            "function",
            "target predicate"
          ],
          "iri": "Entity-p_1-Mention-9"
        },
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "P_1",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p_1-Mention-10"
        }
      ],
      "relevance": 0.580078125
    },
    "Entity-complete_kg": {
      "node_id": "complete_kg",
      "disambiguation_index": 0,
      "label": "complete KG",
      "aliases": [
        "a complete KG",
        "complete KG"
      ],
      "types": [
        "knowledge graph",
        "database"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A comprehensive database that represents relationships between entities in the form of nodes and edges.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "complete KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-complete_kg-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "a complete KG",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-complete_kg-Mention-2"
        }
      ],
      "relevance": 0.580078125
    },
    "Entity-over_a_working_kg": {
      "node_id": "over_a_working_kg",
      "disambiguation_index": 0,
      "label": "over a working KG",
      "aliases": [
        "over a working KG"
      ],
      "types": [
        "knowledge_graph",
        "working_KG"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The context in which a link predictor is deployed and used to complete a knowledge graph, where test facts cannot be held out for evaluation.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-3",
          "local_name": "over a working KG",
          "local_types": [
            "knowledge_graph",
            "working_KG"
          ],
          "iri": "Entity-over_a_working_kg-Mention-1"
        }
      ],
      "relevance": 0.580078125
    },
    "Entity-it_will_try_to_rank_a_set_of_entity__country__to_answer_this_query_even_though_no_correct_answer_exists_either_inside_or_outside_the_kg": {
      "node_id": "it_will_try_to_rank_a_set_of_entity__country__to_answer_this_query_even_though_no_correct_answer_exists_either_inside_or_outside_the_kg",
      "disambiguation_index": 0,
      "label": "it will try to rank a set of entities (countries) to answer this query even though no correct answer exists either inside or outside the KG",
      "aliases": [
        "it will try to rank a set of entities (countries) to answer this query even though no correct answer exists either inside or outside the KG"
      ],
      "types": [
        "behavior",
        "link prediction behavior"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A link prediction algorithm",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-4",
          "local_name": "it will try to rank a set of entities (countries) to answer this query even though no correct answer exists either inside or outside the KG",
          "local_types": [
            "behavior",
            "link prediction behavior"
          ],
          "iri": "Entity-it_will_try_to_rank_a_set_of_entity__country__to_answer_this_query_even_though_no_correct_answer_exists_either_inside_or_outside_the_kg-Mention-1"
        }
      ],
      "relevance": 0.57958984375
    },
    "Entity-hence__opsupp__r___1": {
      "node_id": "hence__opsupp__r___1",
      "disambiguation_index": 0,
      "label": "Hence, OPsupp(r) = 1",
      "aliases": [
        "Hence, OPsupp(r) = 1"
      ],
      "types": [
        "equation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The quality measure of an Open Path rule r in terms of the number of entities that support its satisfiability.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-4",
          "local_name": "Hence, OPsupp(r) = 1",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-hence__opsupp__r___1-Mention-1"
        }
      ],
      "relevance": 0.57958984375
    },
    "Entity-oprl_s_performance_exceeds_prand_on_fb15kse__yago2_core__and_poker_by_factor_of_approximately_6__2__and_9__respectively": {
      "node_id": "oprl_s_performance_exceeds_prand_on_fb15kse__yago2_core__and_poker_by_factor_of_approximately_6__2__and_9__respectively",
      "disambiguation_index": 0,
      "label": "OPRL's performance exceeds Prand on FB15KSE, YAGO2 core, and Poker by factors of approximately 6, 2, and 9, respectively",
      "aliases": [
        "OPRL's performance exceeds Prand on FB15KSE, YAGO2 core, and Poker by factors of approximately 6, 2, and 9, respectively"
      ],
      "types": [
        "algorithmic evaluation",
        "result",
        "performance comparison"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A performance metric or evaluation method",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-3",
          "local_name": "OPRL's performance exceeds Prand on FB15KSE, YAGO2 core, and Poker by factors of approximately 6, 2, and 9, respectively",
          "local_types": [
            "algorithmic evaluation",
            "result",
            "performance comparison"
          ],
          "iri": "Entity-oprl_s_performance_exceeds_prand_on_fb15kse__yago2_core__and_poker_by_factor_of_approximately_6__2__and_9__respectively-Mention-1"
        }
      ],
      "relevance": 0.57958984375
    },
    "Entity-ophc__r_": {
      "node_id": "ophc__r_",
      "disambiguation_index": 0,
      "label": "OPHC(r)",
      "aliases": [
        "OPHC(r)"
      ],
      "types": [
        "equation",
        "mathematical concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The Open Path Head Coverage (OPHC(r)) metric, which measures the proportion of entities that can instantiate z0 to satisfy the head part P_t(e', e) with respect to those that can satisfy both the body and head parts.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-9-Sentence-1",
          "local_name": "OPHC(r)",
          "local_types": [
            "equation",
            "mathematical concept"
          ],
          "iri": "Entity-ophc__r_-Mention-1"
        }
      ],
      "relevance": 0.57958984375
    },
    "Entity-p_1__e__e_1_": {
      "node_id": "p_1__e__e_1_",
      "disambiguation_index": 0,
      "label": "P_1(e, e_1)",
      "aliases": [
        "P_1(e, e_1)"
      ],
      "types": [
        "predicate",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate representing an open path rule in a knowledge graph, where P_1 is one of the predicates and e and e_1 are variables.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "P_1(e, e_1)",
          "local_types": [
            "predicate",
            "relation"
          ],
          "iri": "Entity-p_1__e__e_1_-Mention-1"
        }
      ],
      "relevance": 0.57861328125
    },
    "Entity-sampling__k__p_": {
      "node_id": "sampling__k__p_",
      "disambiguation_index": 0,
      "label": "Sampling( K, P )",
      "aliases": [
        "Sampling( K, P )"
      ],
      "types": [
        "function call",
        "sampling algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity 'Sampling(K, P)' refers to a function that reduces the size of a knowledge graph (KG) K by sampling entities related to a target predicate P.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-5",
          "local_name": "Sampling( K, P )",
          "local_types": [
            "function call",
            "sampling algorithm"
          ],
          "iri": "Entity-sampling__k__p_-Mention-1"
        }
      ],
      "relevance": 0.57861328125
    },
    "Entity-a_pair_of_entity_(1)": {
      "node_id": "a_pair_of_entity_(1)",
      "disambiguation_index": 1,
      "label": "a pair of entities",
      "aliases": [
        "a pair of entities"
      ],
      "types": [
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of two distinct entities that exist within a knowledge graph (KG) and satisfy both the body and head of a closed path rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-5",
          "local_name": "a pair of entities",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-a_pair_of_entity_(1)-Mention-1"
        }
      ],
      "relevance": 0.57861328125
    },
    "Entity-opsupp__3__opsc__37_and_ophc__35": {
      "node_id": "opsupp__3__opsc__37_and_ophc__35",
      "disambiguation_index": 0,
      "label": "OPsupp = 3, OPSC = 3/7 and OPHC = 3/5",
      "aliases": [
        "OPsupp = 3, OPSC = 3/7 and OPHC = 3/5"
      ],
      "types": [
        "equation",
        "mathematical expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The support degree of an open path rule, which represents the number of entities that can instantiate z_0 to satisfy both the body and head parts.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-4",
          "local_name": "OPsupp = 3, OPSC = 3/7 and OPHC = 3/5",
          "local_types": [
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-opsupp__3__opsc__37_and_ophc__35-Mention-1"
        }
      ],
      "relevance": 0.57861328125
    },
    "Entity-f_op": {
      "node_id": "f_op",
      "disambiguation_index": 0,
      "label": "f_op",
      "aliases": [
        "f_op"
      ],
      "types": [
        "quality estimation",
        "function",
        "fitness function",
        "variable name",
        "algorithm",
        "notation",
        "mathematical function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The Open Path (OP) rule quality estimation function used to evaluate the quality of OP rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-17-Sentence-2",
          "local_name": "f_op",
          "local_types": [
            "quality estimation",
            "function",
            "variable name",
            "algorithm",
            "notation"
          ],
          "iri": "Entity-f_op-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "f_op",
          "local_types": [
            "function",
            "mathematical function"
          ],
          "iri": "Entity-f_op-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-1",
          "local_name": "f_op",
          "local_types": [
            "fitness function"
          ],
          "iri": "Entity-f_op-Mention-3"
        }
      ],
      "relevance": 0.578125
    },
    "Entity-closed_path_rule": {
      "node_id": "closed_path_rule",
      "disambiguation_index": 0,
      "label": "closed path rules",
      "aliases": [
        "closed path rules"
      ],
      "types": [
        "rule",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or principles governing the structure and organization of information, particularly in the context of knowledge representation.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-3",
          "local_name": "closed path rules",
          "local_types": [
            "rule",
            "knowledge representation"
          ],
          "iri": "Entity-closed_path_rule-Mention-1"
        }
      ],
      "relevance": 0.578125
    },
    "Entity-an_automated_link_predictor_make_a_convenient_oracle": {
      "node_id": "an_automated_link_predictor_make_a_convenient_oracle",
      "disambiguation_index": 0,
      "label": "an automated link predictor makes a convenient oracle",
      "aliases": [
        "an automated link predictor makes a convenient oracle"
      ],
      "types": [
        "tool",
        "oracle"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "an algorithm that generates relevant questions for active knowledge graph completion",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "an automated link predictor makes a convenient oracle",
          "local_types": [
            "tool",
            "oracle"
          ],
          "iri": "Entity-an_automated_link_predictor_make_a_convenient_oracle-Mention-1"
        }
      ],
      "relevance": 0.578125
    },
    "Entity-only_rule_with_quality_opsc__0.1_and_ophc__0.01_are_included_.": {
      "node_id": "only_rule_with_quality_opsc__0.1_and_ophc__0.01_are_included_.",
      "disambiguation_index": 0,
      "label": "only rules with quality OPSC > 0.1 and OPHC > 0.01 are included.",
      "aliases": [
        "only rules with quality OPSC > 0.1 and OPHC > 0.01 are included."
      ],
      "types": [
        "rule filter"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "High-quality Open Path (OP) rules mined by OPRL, with quality scores exceeding OPSC > 0.1 and OPHC > 0.01.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-4",
          "local_name": "only rules with quality OPSC > 0.1 and OPHC > 0.01 are included.",
          "local_types": [
            "rule filter"
          ],
          "iri": "Entity-only_rule_with_quality_opsc__0.1_and_ophc__0.01_are_included_.-Mention-1"
        }
      ],
      "relevance": 0.578125
    },
    "Entity-the_subject_and_object_argument_of_a_predicate_p": {
      "node_id": "the_subject_and_object_argument_of_a_predicate_p",
      "disambiguation_index": 0,
      "label": "the subject and object arguments of a predicate P",
      "aliases": [
        "the subject and object arguments of a predicate P"
      ],
      "types": [
        "argument",
        "predicate",
        "P"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "In the context of knowledge graph completion, the subject and object arguments of a predicate P refer to vectors defined by averaging entity embeddings in positions 1 (subject) and 2 (object), respectively, used as input features for rule quality estimation.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "the subject and object arguments of a predicate P",
          "local_types": [
            "argument",
            "predicate",
            "P"
          ],
          "iri": "Entity-the_subject_and_object_argument_of_a_predicate_p-Mention-1"
        }
      ],
      "relevance": 0.578125
    },
    "Entity-f__and_0_otherwise": {
      "node_id": "f__and_0_otherwise",
      "disambiguation_index": 0,
      "label": "F; and 0 otherwise",
      "aliases": [
        "F; and 0 otherwise"
      ],
      "types": [
        "set",
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A binary matrix representing a Knowledge Graph (KG), where each element A(Pk)[i,j] = 1 if the fact Pk(ei,ej) exists in F; and 0 otherwise.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "F; and 0 otherwise",
          "local_types": [
            "set",
            "condition"
          ],
          "iri": "Entity-f__and_0_otherwise-Mention-1"
        }
      ],
      "relevance": 0.578125
    },
    "Entity-for__2_": {
      "node_id": "for__2_",
      "disambiguation_index": 0,
      "label": "For (2)",
      "aliases": [
        "For (2)"
      ],
      "types": [
        "notation",
        "reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The method for computing OPSC and OPHC in Algorithm 1, which involves calculating the number of entities satisfying the head or body of an Open Path rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "For (2)",
          "local_types": [
            "notation",
            "reference"
          ],
          "iri": "Entity-for__2_-Mention-1"
        }
      ],
      "relevance": 0.57763671875
    },
    "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_": {
      "node_id": "but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "disambiguation_index": 0,
      "label": "but do you continue to hold out facts from your KG in order to generate queries that predict those same facts: facts that are missing only because you need them to generate queries?",
      "aliases": [
        "but do you continue to hold out facts from your KG in order to generate queries that predict those same facts: facts that are missing only because you need them to generate queries?"
      ],
      "types": [
        "facts",
        "queries",
        "KG"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The practice of holding out facts from a knowledge graph (KG) in order to generate queries that predict those same missing facts, which are only absent because they are needed to generate the queries.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-2",
          "local_name": "but do you continue to hold out facts from your KG in order to generate queries that predict those same facts: facts that are missing only because you need them to generate queries?",
          "local_types": [
            "facts",
            "queries",
            "KG"
          ],
          "iri": "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_-Mention-1"
        }
      ],
      "relevance": 0.57763671875
    },
    "Entity-for_fb15kse__test_and_training_set_are_available_.": {
      "node_id": "for_fb15kse__test_and_training_set_are_available_.",
      "disambiguation_index": 0,
      "label": "For FB15KSE, test and training sets are available.",
      "aliases": [
        "For FB15KSE, test and training sets are available."
      ],
      "types": [
        "dataset",
        "FB15KSE dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The dataset for testing and training OPRL algorithm on Facebook 5-Star Embeddings (FB15KSE) is available.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "For FB15KSE, test and training sets are available.",
          "local_types": [
            "dataset",
            "FB15KSE dataset"
          ],
          "iri": "Entity-for_fb15kse__test_and_training_set_are_available_.-Mention-1"
        }
      ],
      "relevance": 0.57763671875
    },
    "Entity-this_set_of_query": {
      "node_id": "this_set_of_query",
      "disambiguation_index": 0,
      "label": "this set of queries",
      "aliases": [
        "this set of queries"
      ],
      "types": [
        "queries",
        "set"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of questions that can be posed to an oracle or a human expert for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-1",
          "local_name": "this set of queries",
          "local_types": [
            "queries",
            "set"
          ],
          "iri": "Entity-this_set_of_query-Mention-1"
        }
      ],
      "relevance": 0.57763671875
    },
    "Entity-three_different_kg": {
      "node_id": "three_different_kg",
      "disambiguation_index": 0,
      "label": "three different KGs",
      "aliases": [
        "three different KGs"
      ],
      "types": [
        "dataset",
        "KG",
        "knowledge graph",
        "knowledge graph instances"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of multiple knowledge graphs or datasets that represent distinct sets of entities and relationships.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "three different KGs",
          "local_types": [
            "dataset",
            "KG",
            "knowledge graph",
            "knowledge graph instances"
          ],
          "iri": "Entity-three_different_kg-Mention-1"
        }
      ],
      "relevance": 0.5771484375
    },
    "Entity-the_body_of_this_rule": {
      "node_id": "the_body_of_this_rule",
      "disambiguation_index": 0,
      "label": "the body of this rule",
      "aliases": [
        "the body of this rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The specific instantiation of an OP (Open Path) rule, where variables are replaced with concrete values, such as studiesIn(Sam, ANU), allowing for the inference of a query citizenOf(Sam, ?).",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-3",
          "local_name": "the body of this rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_body_of_this_rule-Mention-1"
        }
      ],
      "relevance": 0.5771484375
    },
    "Entity-and_a_rule-based_link_predictor": {
      "node_id": "and_a_rule-based_link_predictor",
      "disambiguation_index": 0,
      "label": "and a rule-based link predictor",
      "aliases": [
        "and a rule-based link predictor"
      ],
      "types": [
        "algorithm",
        "link predictor"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A baseline system used for comparison purposes in evaluating the performance of OPRL, which generates queries by modifying the output of a rule-based link predictor.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-2",
          "local_name": "and a rule-based link predictor",
          "local_types": [
            "algorithm",
            "link predictor"
          ],
          "iri": "Entity-and_a_rule-based_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.5771484375
    },
    "Entity-latter": {
      "node_id": "latter",
      "disambiguation_index": 0,
      "label": "latter",
      "aliases": [
        "latter"
      ],
      "types": [
        "approach",
        "methodology",
        "concept",
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The latter refers to existential rules, which are constrained rules that can generate relevant queries for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-8",
          "local_name": "latter",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-latter-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "latter",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-latter-Mention-2"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-sample_kg": {
      "node_id": "sample_kg",
      "disambiguation_index": 0,
      "label": "sample KG",
      "aliases": [
        "sample KG"
      ],
      "types": [
        "knowledge graph",
        "database"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge representation framework or database that organizes information into entities and their relationships.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "sample KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-sample_kg-Mention-1"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-thus": {
      "node_id": "thus",
      "disambiguation_index": 0,
      "label": "Thus",
      "aliases": [
        "Thus"
      ],
      "types": [
        "introductory phrase"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The representation of a Knowledge Graph (KG) as a set of square adjacency matrices, where each matrix corresponds to a predicate in the KG.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-6",
          "local_name": "Thus",
          "local_types": [
            "introductory phrase"
          ],
          "iri": "Entity-thus-Mention-1"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-20_randomly_selected_predicate_from_fb15kse": {
      "node_id": "20_randomly_selected_predicate_from_fb15kse",
      "disambiguation_index": 0,
      "label": "20 randomly selected predicates from FB15KSE",
      "aliases": [
        "20 randomly selected predicates from FB15KSE"
      ],
      "types": [
        "dataset",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of 20 randomly chosen predicate instances from the Facebook Knowledge Base (FB15KSE) used for evaluating the performance of OPRL's query generation algorithm.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "20 randomly selected predicates from FB15KSE",
          "local_types": [
            "dataset",
            "predicate"
          ],
          "iri": "Entity-20_randomly_selected_predicate_from_fb15kse-Mention-1"
        }
      ],
      "relevance": 0.57666015625
    },
    "Entity-the_kg__k__": {
      "node_id": "the_kg__k__",
      "disambiguation_index": 0,
      "label": "the KG (K')",
      "aliases": [
        "the KG (K')"
      ],
      "types": [
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A reduced knowledge graph (KG) fragment, K', consisting of a bounded number of entities that are related to the target predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-5",
          "local_name": "the KG (K')",
          "local_types": [
            "knowledge graph"
          ],
          "iri": "Entity-the_kg__k__-Mention-1"
        }
      ],
      "relevance": 0.576171875
    },
    "Entity-the_latter": {
      "node_id": "the_latter",
      "disambiguation_index": 0,
      "label": "the latter",
      "aliases": [
        "the latter"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The test set used in evaluating OPRL query generation, where genuinely missing facts are treated as false instead of true.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "the latter",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_latter-Mention-1"
        }
      ],
      "relevance": 0.576171875
    },
    "Entity-entity_e_and_e__occurring_in_the_kg": {
      "node_id": "entity_e_and_e__occurring_in_the_kg",
      "disambiguation_index": 0,
      "label": "entities e and e' occurring in the KG",
      "aliases": [
        "entities e and e' occurring in the KG"
      ],
      "types": [
        "entity",
        "KG"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of entities represented within a knowledge graph (KG)",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "entities e and e' occurring in the KG",
          "local_types": [
            "entity",
            "KG"
          ],
          "iri": "Entity-entity_e_and_e__occurring_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.57568359375
    },
    "Entity-a_link_predictor_(2)": {
      "node_id": "a_link_predictor_(2)",
      "disambiguation_index": 2,
      "label": "a link predictor",
      "aliases": [
        "a link predictor"
      ],
      "types": [
        "link_predictor"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A model that generates relevant queries for knowledge graph completion by learning constrained existential rules.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-4",
          "local_name": "a link predictor",
          "local_types": [
            "link_predictor"
          ],
          "iri": "Entity-a_link_predictor_(2)-Mention-1"
        }
      ],
      "relevance": 0.57568359375
    },
    "Entity-open_path_head_coverage": {
      "node_id": "open_path_head_coverage",
      "disambiguation_index": 0,
      "label": "open path head coverage",
      "aliases": [
        "open path head coverage"
      ],
      "types": [
        "metric",
        "measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure of the proportion of entities in a knowledge graph that satisfy the head predicate of an open path rule, out of all possible entities that could instantiate the body predicates.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "open path head coverage",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-open_path_head_coverage-Mention-1"
        }
      ],
      "relevance": 0.5751953125
    },
    "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule": {
      "node_id": "along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule",
      "disambiguation_index": 0,
      "label": "along a path of entities that satisfy a chain of predicates in the rule",
      "aliases": [
        "along a path of entities that satisfy a chain of predicates in the rule"
      ],
      "types": [
        "path",
        "chain",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A concept representing the connection between entities satisfying a head predicate and those forming an object argument through a sequence of predicates in a knowledge graph, used to estimate the quality of open path rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "along a path of entities that satisfy a chain of predicates in the rule",
          "local_types": [
            "path",
            "chain",
            "rule"
          ],
          "iri": "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule-Mention-1"
        }
      ],
      "relevance": 0.5751953125
    },
    "Entity-open_path_fitness__f_op__._": {
      "node_id": "open_path_fitness__f_op__._",
      "disambiguation_index": 0,
      "label": "open path fitness, f_op (.)",
      "aliases": [
        "open path fitness, f_op (.)"
      ],
      "types": [
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The 'open path fitness' (f_op) is a quality estimation function that uses both entity and predicate embeddings to evaluate the quality of an open path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-17-Sentence-2",
          "local_name": "open path fitness, f_op (.)",
          "local_types": [
            "function"
          ],
          "iri": "Entity-open_path_fitness__f_op__._-Mention-1"
        }
      ],
      "relevance": 0.57470703125
    },
    "Entity-you_have_a_kg": {
      "node_id": "you_have_a_kg",
      "disambiguation_index": 0,
      "label": "You have a KG",
      "aliases": [
        "You have a KG"
      ],
      "types": [
        "knowledge graph",
        "claim",
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge graph or a statement representing information and relationships",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-2",
          "local_name": "You have a KG",
          "local_types": [
            "knowledge graph",
            "claim",
            "statement"
          ],
          "iri": "Entity-you_have_a_kg-Mention-1"
        }
      ],
      "relevance": 0.57470703125
    },
    "Entity-opsupp__r__(1)": {
      "node_id": "opsupp__r__(1)",
      "disambiguation_index": 1,
      "label": "OPsupp(r)",
      "aliases": [
        "OPsupp(r)"
      ],
      "types": [
        "function",
        "support"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The support degree of an open path rule, measuring the proportion of entities that can instantiate both the body and head parts.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-8-Sentence-1",
          "local_name": "OPsupp(r)",
          "local_types": [
            "function",
            "support"
          ],
          "iri": "Entity-opsupp__r__(1)-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-9-Sentence-4",
          "local_name": "OPsupp(r)",
          "local_types": [
            "function"
          ],
          "iri": "Entity-opsupp__r__(1)-Mention-2"
        }
      ],
      "relevance": 0.57470703125
    },
    "Entity-the_quality_of_each_candidate_rule": {
      "node_id": "the_quality_of_each_candidate_rule",
      "disambiguation_index": 0,
      "label": "the quality of each candidate rule",
      "aliases": [
        "the quality of each candidate rule"
      ],
      "types": [
        "quality",
        "candidate_rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The measure or assessment of how good or effective each potential rule for completing a knowledge graph is.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-3",
          "local_name": "the quality of each candidate rule",
          "local_types": [
            "quality",
            "candidate_rule"
          ],
          "iri": "Entity-the_quality_of_each_candidate_rule-Mention-1"
        }
      ],
      "relevance": 0.57470703125
    },
    "Entity-highestpoint__z__x_": {
      "node_id": "highestpoint__z__x_",
      "disambiguation_index": 0,
      "label": "highestPoint(z, x)",
      "aliases": [
        "highestPoint(z, x)"
      ],
      "types": [
        "function",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "An algorithm that learns constrained existential rules for completing knowledge graphs by generating queries about a region's highest point given its country and continent.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "highestPoint(z, x)",
          "local_types": [
            "function",
            "algorithm"
          ],
          "iri": "Entity-highestpoint__z__x_-Mention-1"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-rule-based_knowledge_graph": {
      "node_id": "rule-based_knowledge_graph",
      "disambiguation_index": 0,
      "label": "rule-based knowledge graph",
      "aliases": [
        "rule-based knowledge graph"
      ],
      "types": [
        "knowledge representation",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A data structure representing a collection of rules and relationships between entities, used to organize and query knowledge.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-4",
          "local_name": "rule-based knowledge graph",
          "local_types": [
            "knowledge representation",
            "data structure"
          ],
          "iri": "Entity-rule-based_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-an_op_rule_(1)": {
      "node_id": "an_op_rule_(1)",
      "disambiguation_index": 1,
      "label": "An OP rule",
      "aliases": [
        "An OP rule",
        "the rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An OP rule refers to an open-path rule that connects entities satisfying the subject argument of the head predicate to entities forming the object argument of the tail predicate along a path of entities that satisfy a chain of predicates in the rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "An OP rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-an_op_rule_(1)-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-4",
          "local_name": "the rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-an_op_rule_(1)-Mention-2"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-that_is_known_to_the_kg": {
      "node_id": "that_is_known_to_the_kg",
      "disambiguation_index": 0,
      "label": "that is known to the KG",
      "aliases": [
        "that is known to the KG"
      ],
      "types": [
        "knowledge graph",
        "database",
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A country or region in a knowledge graph (KG)",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "that is known to the KG",
          "local_types": [
            "knowledge graph",
            "database",
            "dataset"
          ],
          "iri": "Entity-that_is_known_to_the_kg-Mention-1"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-some_intriguing_challenge": {
      "node_id": "some_intriguing_challenge",
      "disambiguation_index": 0,
      "label": "some intriguing challenges",
      "aliases": [
        "some intriguing challenges"
      ],
      "types": [
        "challenge",
        "intringuing"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The remaining difficulties or obstacles that need to be addressed in order to further develop and improve the proposed method for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "some intriguing challenges",
          "local_types": [
            "challenge",
            "intringuing"
          ],
          "iri": "Entity-some_intriguing_challenge-Mention-1"
        }
      ],
      "relevance": 0.57421875
    },
    "Entity-missing_fact": {
      "node_id": "missing_fact",
      "disambiguation_index": 0,
      "label": "missing fact",
      "aliases": [
        "missing facts",
        "missing fact"
      ],
      "types": [
        "data gap",
        "information gap",
        "information",
        "information void",
        "data",
        "piece of information",
        "knowledge gap",
        "knowledge deficiency",
        "fact",
        "unfilled gap"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A piece of information or data gap in an enterprise or public Knowledge Graph (KG) that is not present or recorded, requiring completion and curation.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-5",
          "local_name": "missing fact",
          "local_types": [
            "piece of information",
            "unfilled gap"
          ],
          "iri": "Entity-missing_fact-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-6",
          "local_name": "missing facts",
          "local_types": [
            "information",
            "data"
          ],
          "iri": "Entity-missing_fact-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-2",
          "local_name": "missing fact",
          "local_types": [
            "information void",
            "data gap",
            "knowledge gap"
          ],
          "iri": "Entity-missing_fact-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "missing facts",
          "local_types": [
            "fact",
            "data"
          ],
          "iri": "Entity-missing_fact-Mention-4"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "missing facts",
          "local_types": [
            "information gap",
            "knowledge deficiency"
          ],
          "iri": "Entity-missing_fact-Mention-5"
        }
      ],
      "relevance": 0.57373046875
    },
    "Entity-_e__e___satisfies_the_body_of_r": {
      "node_id": "_e__e___satisfies_the_body_of_r",
      "disambiguation_index": 0,
      "label": "(e, e') satisfies the body of r",
      "aliases": [
        "(e, e') satisfies the body of r"
      ],
      "types": [
        "relation",
        "logical statement",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A pair of entities (e, e') that satisfies the body of an open path rule r by instantiating variables z_0 to z_{n-1} and P_t with facts in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "(e, e') satisfies the body of r",
          "local_types": [
            "relation",
            "logical statement",
            "notation"
          ],
          "iri": "Entity-_e__e___satisfies_the_body_of_r-Mention-1"
        }
      ],
      "relevance": 0.57373046875
    },
    "Entity-our_generated_query": {
      "node_id": "our_generated_query",
      "disambiguation_index": 0,
      "label": "Our generated queries",
      "aliases": [
        "Our generated queries"
      ],
      "types": [
        "queries"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of automatically generated questions that are relevant for completing knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-4",
          "local_name": "Our generated queries",
          "local_types": [
            "queries"
          ],
          "iri": "Entity-our_generated_query-Mention-1"
        }
      ],
      "relevance": 0.57373046875
    },
    "Entity-we_construct_two_baseline": {
      "node_id": "we_construct_two_baseline",
      "disambiguation_index": 0,
      "label": "We construct two baselines",
      "aliases": [
        "We construct two baselines"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Two baseline models used for comparison in evaluating the performance of OPRL, one based on probabilistic query generation and another using a rule-based link predictor with question modification.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-2",
          "local_name": "We construct two baselines",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-we_construct_two_baseline-Mention-1"
        }
      ],
      "relevance": 0.57373046875
    },
    "Entity-opsupp__r_": {
      "node_id": "opsupp__r_",
      "disambiguation_index": 0,
      "label": "OPsupp(r)",
      "aliases": [
        "OPsupp(r)"
      ],
      "types": [
        "evaluation metric",
        "function",
        "metric",
        "evaluation measure",
        "evaluation function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The support degree of an open path rule r, which measures the number of pairs (e, e') that satisfy both the body and head of the rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-7-Sentence-3",
          "local_name": "OPsupp(r)",
          "local_types": [
            "function",
            "metric"
          ],
          "iri": "Entity-opsupp__r_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "OPsupp(r)",
          "local_types": [
            "metric",
            "evaluation measure",
            "evaluation function",
            "evaluation metric"
          ],
          "iri": "Entity-opsupp__r_-Mention-2"
        }
      ],
      "relevance": 0.5732421875
    },
    "Entity-p_2__z_0__z_1___p_3__z_1__y_": {
      "node_id": "p_2__z_0__z_1___p_3__z_1__y_",
      "disambiguation_index": 0,
      "label": "P_2(z_0, z_1) \u2227 P_3(z_1, y)",
      "aliases": [
        "P_2(z_0, z_1) \u2227 P_3(z_1, y)"
      ],
      "types": [
        "body",
        "mathematical formula",
        "condition",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An open path rule in a knowledge graph, specifying a logical condition where an instance of variable x is related to another instance through predicates P_2 and P_3.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-1",
          "local_name": "P_2(z_0, z_1) \u2227 P_3(z_1, y)",
          "local_types": [
            "body",
            "mathematical formula",
            "condition",
            "logical expression"
          ],
          "iri": "Entity-p_2__z_0__z_1___p_3__z_1__y_-Mention-1"
        }
      ],
      "relevance": 0.5732421875
    },
    "Entity-f": {
      "node_id": "f",
      "disambiguation_index": 0,
      "label": "F",
      "aliases": [
        "F"
      ],
      "types": [
        "database",
        "knowledge graph data",
        "collection",
        "set of facts",
        "knowledge graph",
        "fact base",
        "collection of facts",
        "set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of facts, which forms part of a knowledge graph (KG) pair K = (E, F), where E is the set of entities that exist in the facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "F",
          "local_types": [
            "collection",
            "set",
            "set of facts"
          ],
          "iri": "Entity-f-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-3",
          "local_name": "F",
          "local_types": [
            "fact base",
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-f-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "F",
          "local_types": [
            "set of facts",
            "knowledge graph data"
          ],
          "iri": "Entity-f-Mention-3"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "F",
          "local_types": [
            "set",
            "collection of facts"
          ],
          "iri": "Entity-f-Mention-4"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "F",
          "local_types": [
            "set of facts"
          ],
          "iri": "Entity-f-Mention-5"
        }
      ],
      "relevance": 0.57275390625
    },
    "Entity-we_need_only_a_named_predicate__or_all_predicate_": {
      "node_id": "we_need_only_a_named_predicate__or_all_predicate_",
      "disambiguation_index": 0,
      "label": "we need only a named predicate (or all predicates)",
      "aliases": [
        "we need only a named predicate (or all predicates)"
      ],
      "types": [
        "requirement"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The requirement for Active Knowledge Graph Completion (AKGC), which involves generating relevant questions about a target predicate or all predicates.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "we need only a named predicate (or all predicates)",
          "local_types": [
            "requirement"
          ],
          "iri": "Entity-we_need_only_a_named_predicate__or_all_predicate_-Mention-1"
        }
      ],
      "relevance": 0.57275390625
    },
    "Entity-kg_sampling": {
      "node_id": "kg_sampling",
      "disambiguation_index": 0,
      "label": "KG sampling",
      "aliases": [
        "KG sampling"
      ],
      "types": [
        "research methodology",
        "data collection method",
        "technique",
        "knowledge graph technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or technique used to collect and sample data from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-5",
          "local_name": "KG sampling",
          "local_types": [
            "research methodology",
            "data collection method",
            "technique",
            "knowledge graph technique"
          ],
          "iri": "Entity-kg_sampling-Mention-1"
        }
      ],
      "relevance": 0.572265625
    },
    "Entity-the_answer": {
      "node_id": "the_answer",
      "disambiguation_index": 0,
      "label": "The answer",
      "aliases": [
        "The answer"
      ],
      "types": [
        "result"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A missing fact that may not exist in a knowledge graph (KG), which could be an existing entity or a new one.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-6",
          "local_name": "The answer",
          "local_types": [
            "result"
          ],
          "iri": "Entity-the_answer-Mention-1"
        }
      ],
      "relevance": 0.572265625
    },
    "Entity-some_topic_are_more_richly_covered_than_others": {
      "node_id": "some_topic_are_more_richly_covered_than_others",
      "disambiguation_index": 0,
      "label": "some topics are more richly covered than others",
      "aliases": [
        "some topics are more richly covered than others"
      ],
      "types": [
        "comparison",
        "topics"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The phenomenon where certain subjects, areas of knowledge, or entities in a Knowledge Graph (KG) have significantly better coverage and representation compared to others.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "some topics are more richly covered than others",
          "local_types": [
            "comparison",
            "topics"
          ],
          "iri": "Entity-some_topic_are_more_richly_covered_than_others-Mention-1"
        }
      ],
      "relevance": 0.57177734375
    },
    "Entity-an_op_rule_of_the_form__2__(1)": {
      "node_id": "an_op_rule_of_the_form__2__(1)",
      "disambiguation_index": 1,
      "label": "an OP rule of the form (2)",
      "aliases": [
        "an OP rule of the form (2)"
      ],
      "types": [
        "rule",
        "mathematical notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An Open Path rule that connects entities satisfying the subject argument of the head predicate to entities forming the object argument of the tail predicate along a path of predicates, estimated by its co-occurrence and open path fitness functions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-8",
          "local_name": "an OP rule of the form (2)",
          "local_types": [
            "rule",
            "mathematical notation"
          ],
          "iri": "Entity-an_op_rule_of_the_form__2__(1)-Mention-1"
        }
      ],
      "relevance": 0.57177734375
    },
    "Entity-kg_fact": {
      "node_id": "kg_fact",
      "disambiguation_index": 0,
      "label": "KG facts",
      "aliases": [
        "all KG facts",
        "KG facts"
      ],
      "types": [
        "knowledge graph data",
        "knowledge graph entity",
        "information",
        "data",
        "knowledge graph",
        "data point",
        "facts"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of information or data points representing knowledge graph entities and their relationships.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "KG facts",
          "local_types": [
            "information",
            "data point",
            "data",
            "knowledge graph entity"
          ],
          "iri": "Entity-kg_fact-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "KG facts",
          "local_types": [
            "knowledge graph data",
            "facts"
          ],
          "iri": "Entity-kg_fact-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "all KG facts",
          "local_types": [
            "knowledge graph",
            "facts"
          ],
          "iri": "Entity-kg_fact-Mention-3"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity": {
      "node_id": "each_non-zero_element_of_this_vector_indicates_a_satisfying_entity",
      "disambiguation_index": 0,
      "label": "Each non-zero element of this vector indicates a satisfying entity",
      "aliases": [
        "Each non-zero element of this vector indicates a satisfying entity"
      ],
      "types": [
        "definition",
        "concept",
        "result",
        "finding"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The number of distinct entities that satisfy the head of an OP rule in its second argument position, counted by summing each column of the adjacency matrix and transposing it.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-2",
          "local_name": "Each non-zero element of this vector indicates a satisfying entity",
          "local_types": [
            "definition",
            "concept"
          ],
          "iri": "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-6-Sentence-4",
          "local_name": "Each non-zero element of this vector indicates a satisfying entity",
          "local_types": [
            "result",
            "finding"
          ],
          "iri": "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity-Mention-2"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-increasing_opsc_ha_the_expected_behavior_of_decreasing_recall_a_poorer_rule_get_through__and_increasing_precision_a_more_missing_fact_are_found": {
      "node_id": "increasing_opsc_ha_the_expected_behavior_of_decreasing_recall_a_poorer_rule_get_through__and_increasing_precision_a_more_missing_fact_are_found",
      "disambiguation_index": 0,
      "label": "increasing OPSC has the expected behavior of decreasing recall as poorer rules get through, and increasing precision as more missing facts are found",
      "aliases": [
        "increasing OPSC has the expected behavior of decreasing recall as poorer rules get through, and increasing precision as more missing facts are found"
      ],
      "types": [
        "behavioral analysis",
        "evaluation metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The evaluation metric used to assess the quality of OPRL-mined rules",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "increasing OPSC has the expected behavior of decreasing recall as poorer rules get through, and increasing precision as more missing facts are found",
          "local_types": [
            "behavioral analysis",
            "evaluation metric"
          ],
          "iri": "Entity-increasing_opsc_ha_the_expected_behavior_of_decreasing_recall_a_poorer_rule_get_through__and_increasing_precision_a_more_missing_fact_are_found-Mention-1"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-finally__we_compare_oprl_query_with_the_state-of-the-art_rule-based_link_predictor__rlvlr": {
      "node_id": "finally__we_compare_oprl_query_with_the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "disambiguation_index": 0,
      "label": "Finally, we compare OPRL queries with the state-of-the-art rule-based link predictor, RLvLR",
      "aliases": [
        "Finally, we compare OPRL queries with the state-of-the-art rule-based link predictor, RLvLR"
      ],
      "types": [
        "comparison",
        "algorithmic evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The state-of-the-art rule-based link predictor, RLvLR.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-1",
          "local_name": "Finally, we compare OPRL queries with the state-of-the-art rule-based link predictor, RLvLR",
          "local_types": [
            "comparison",
            "algorithmic evaluation"
          ],
          "iri": "Entity-finally__we_compare_oprl_query_with_the_state-of-the-art_rule-based_link_predictor__rlvlr-Mention-1"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-they_(1)": {
      "node_id": "they_(1)",
      "disambiguation_index": 1,
      "label": "They",
      "aliases": [
        "They"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Knowledge Graphs (KGs)",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "They",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-they_(1)-Mention-1"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-a_first_solution": {
      "node_id": "a_first_solution",
      "disambiguation_index": 0,
      "label": "a first solution",
      "aliases": [
        "a first solution"
      ],
      "types": [
        "solution",
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The first solution for actively completing knowledge graphs by generating relevant queries that can introduce new entities or predict existing ones.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "a first solution",
          "local_types": [
            "solution",
            "research"
          ],
          "iri": "Entity-a_first_solution-Mention-1"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-p_in_k_respectively": {
      "node_id": "p_in_k_respectively",
      "disambiguation_index": 0,
      "label": "P in K respectively",
      "aliases": [
        "P in K respectively"
      ],
      "types": [
        "predicate",
        "knowledge base"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The predicate embeddings (P) for entities (e) in a knowledge graph (K), representing the number of times an entity e occurs as a subject and object of P.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-4",
          "local_name": "P in K respectively",
          "local_types": [
            "predicate",
            "knowledge base"
          ],
          "iri": "Entity-p_in_k_respectively-Mention-1"
        }
      ],
      "relevance": 0.5712890625
    },
    "Entity-massive_kg_in_a_reasonable_time": {
      "node_id": "massive_kg_in_a_reasonable_time",
      "disambiguation_index": 0,
      "label": "massive KGs in a reasonable time",
      "aliases": [
        "massive KGs in a reasonable time"
      ],
      "types": [
        "task",
        "evaluation method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of extracting large-scale knowledge graphs within a specified timeframe.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-7-Sentence-2",
          "local_name": "massive KGs in a reasonable time",
          "local_types": [
            "task",
            "evaluation method"
          ],
          "iri": "Entity-massive_kg_in_a_reasonable_time-Mention-1"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-poker_is_a_synthetic_dataset_adapted_by_the_author_from_the_classic_version_to_be_a_correct_and_complete_kg_for_experiment_.": {
      "node_id": "poker_is_a_synthetic_dataset_adapted_by_the_author_from_the_classic_version_to_be_a_correct_and_complete_kg_for_experiment_.",
      "disambiguation_index": 0,
      "label": "Poker is a synthetic dataset adapted by the authors from the classic version to be a correct and complete KG for experiments.",
      "aliases": [
        "Poker is a synthetic dataset adapted by the authors from the classic version to be a correct and complete KG for experiments."
      ],
      "types": [
        "dataset",
        "benchmark"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A synthetic dataset adapted by the authors from the classic version, used as a correct and complete Knowledge Graph for experiments.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-1",
          "local_name": "Poker is a synthetic dataset adapted by the authors from the classic version to be a correct and complete KG for experiments.",
          "local_types": [
            "dataset",
            "benchmark"
          ],
          "iri": "Entity-poker_is_a_synthetic_dataset_adapted_by_the_author_from_the_classic_version_to_be_a_correct_and_complete_kg_for_experiment_.-Mention-1"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-the_compositional_embeddings": {
      "node_id": "the_compositional_embeddings",
      "disambiguation_index": 0,
      "label": "The compositional embeddings",
      "aliases": [
        "The compositional embeddings"
      ],
      "types": [
        "compositional embedding"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Compositional embeddings that represent predicates as weight matrices and use a product calculus for scoring, learned by RESCAL to model Knowledge Graphs (KGs) for tasks such as link prediction, entity resolution, and link-based clustering.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "The compositional embeddings",
          "local_types": [
            "compositional embedding"
          ],
          "iri": "Entity-the_compositional_embeddings-Mention-1"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-the_maximum_length_of_target_rule": {
      "node_id": "the_maximum_length_of_target_rule",
      "disambiguation_index": 0,
      "label": "the maximum length of target rules",
      "aliases": [
        "the maximum length of target rules"
      ],
      "types": [
        "rule",
        "length"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The maximum allowed length of target rules in OPRL's algorithm for learning Open Path (OP) rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-9",
          "local_name": "the maximum length of target rules",
          "local_types": [
            "rule",
            "length"
          ],
          "iri": "Entity-the_maximum_length_of_target_rule-Mention-1"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-first_(1)": {
      "node_id": "first_(1)",
      "disambiguation_index": 1,
      "label": "First",
      "aliases": [
        "First"
      ],
      "types": [
        "introduction",
        "phrase"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The first solution for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "First",
          "local_types": [
            "introduction",
            "phrase"
          ],
          "iri": "Entity-first_(1)-Mention-1"
        }
      ],
      "relevance": 0.57080078125
    },
    "Entity-the_runtime_for_mining": {
      "node_id": "the_runtime_for_mining",
      "disambiguation_index": 0,
      "label": "the runtime for mining",
      "aliases": [
        "the runtime for mining"
      ],
      "types": [
        "runtime",
        "mining"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The time taken to execute or process the algorithm for generating Open Path (OP) rules from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-3",
          "local_name": "the runtime for mining",
          "local_types": [
            "runtime",
            "mining"
          ],
          "iri": "Entity-the_runtime_for_mining-Mention-1"
        }
      ],
      "relevance": 0.5703125
    },
    "Entity-op_rule_formalism": {
      "node_id": "op_rule_formalism",
      "disambiguation_index": 0,
      "label": "OP rule formalism",
      "aliases": [
        "The proposed OP rule formalism",
        "OP rule formalism"
      ],
      "types": [
        "formalism",
        "rule-based system",
        "concept",
        "language",
        "rule",
        "formal system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A fragment of the language of existential rules, expressive enough to adduce queries yet suitable for scalable embedding-based rule mining systems.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "OP rule formalism",
          "local_types": [
            "formalism",
            "rule-based system",
            "concept",
            "language",
            "rule",
            "formal system"
          ],
          "iri": "Entity-op_rule_formalism-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "The proposed OP rule formalism",
          "local_types": [
            "formalism"
          ],
          "iri": "Entity-op_rule_formalism-Mention-2"
        }
      ],
      "relevance": 0.56982421875
    },
    "Entity-rlvlr_and_scalekb_use_so-called_closed_path__cp__rule_that_are_a_kind_of_closed_rule_with_no_free_variable": {
      "node_id": "rlvlr_and_scalekb_use_so-called_closed_path__cp__rule_that_are_a_kind_of_closed_rule_with_no_free_variable",
      "disambiguation_index": 0,
      "label": "RLVLR and ScaleKB use so-called closed path (CP) rules that are a kind of closed rule with no free variables",
      "aliases": [
        "RLVLR and ScaleKB use so-called closed path (CP) rules that are a kind of closed rule with no free variables"
      ],
      "types": [
        "reference",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Closed Path (CP) Rules used by RLVLR and ScaleKB",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-2",
          "local_name": "RLVLR and ScaleKB use so-called closed path (CP) rules that are a kind of closed rule with no free variables",
          "local_types": [
            "reference",
            "method"
          ],
          "iri": "Entity-rlvlr_and_scalekb_use_so-called_closed_path__cp__rule_that_are_a_kind_of_closed_rule_with_no_free_variable-Mention-1"
        }
      ],
      "relevance": 0.56982421875
    },
    "Entity-satisfying_entity": {
      "node_id": "satisfying_entity",
      "disambiguation_index": 0,
      "label": "satisfying entity",
      "aliases": [
        "satisfying entity"
      ],
      "types": [
        "logical concept",
        "philosophical term"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of entities that satisfy the head or body of an Open Path rule in a knowledge graph, used for evaluating the quality and relevance of candidate rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-2",
          "local_name": "satisfying entity",
          "local_types": [
            "logical concept",
            "philosophical term"
          ],
          "iri": "Entity-satisfying_entity-Mention-1"
        }
      ],
      "relevance": 0.56982421875
    },
    "Entity-new_quality_notion_of_query_relevance": {
      "node_id": "new_quality_notion_of_query_relevance",
      "disambiguation_index": 0,
      "label": "new quality notion of query relevance",
      "aliases": [
        "the new quality notion of query relevance",
        "new quality notion of query relevance"
      ],
      "types": [
        "quality notion",
        "concept",
        "idea",
        "theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A concept or idea that represents a novel approach to measuring the relevance of queries generated from open path rules for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-5",
          "local_name": "new quality notion of query relevance",
          "local_types": [
            "concept",
            "idea",
            "theory"
          ],
          "iri": "Entity-new_quality_notion_of_query_relevance-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-5",
          "local_name": "the new quality notion of query relevance",
          "local_types": [
            "concept",
            "quality notion"
          ],
          "iri": "Entity-new_quality_notion_of_query_relevance-Mention-2"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-a_rule_that_ha_both_100__hc_and_sc_explains_every_fact_in_the_kg_that_is_an_instance_of_it_head_and_is_redundant_with_respect_to_the_kg_.": {
      "node_id": "a_rule_that_ha_both_100__hc_and_sc_explains_every_fact_in_the_kg_that_is_an_instance_of_it_head_and_is_redundant_with_respect_to_the_kg_.",
      "disambiguation_index": 0,
      "label": "A rule that has both 100% HC and SC explains every fact in the KG that is an instance of its head and is redundant with respect to the KG.",
      "aliases": [
        "A rule that has both 100% HC and SC explains every fact in the KG that is an instance of its head and is redundant with respect to the KG."
      ],
      "types": [
        "fact",
        "conclusion",
        "statement",
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A conclusion or statement that perfectly generalizes facts in a knowledge graph, explaining every fact that instantiates its head and is redundant with respect to the graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-6",
          "local_name": "A rule that has both 100% HC and SC explains every fact in the KG that is an instance of its head and is redundant with respect to the KG.",
          "local_types": [
            "fact",
            "conclusion",
            "statement",
            "description"
          ],
          "iri": "Entity-a_rule_that_ha_both_100__hc_and_sc_explains_every_fact_in_the_kg_that_is_an_instance_of_it_head_and_is_redundant_with_respect_to_the_kg_.-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-however__the_op_rule_is_not_a_consequence_of_any_cp_rule__op_rule_are_strictly_more_expressive_than_cp_rule_.": {
      "node_id": "however__the_op_rule_is_not_a_consequence_of_any_cp_rule__op_rule_are_strictly_more_expressive_than_cp_rule_.",
      "disambiguation_index": 0,
      "label": "However, the OP rule is not a consequence of any CP rule; OP rules are strictly more expressive than CP rules.",
      "aliases": [
        "However, the OP rule is not a consequence of any CP rule; OP rules are strictly more expressive than CP rules."
      ],
      "types": [
        "rule_comparison",
        "expressiveness"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The comparison between Open Path (OP) and Closed Path (CP) rules in terms of expressiveness.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-3",
          "local_name": "However, the OP rule is not a consequence of any CP rule; OP rules are strictly more expressive than CP rules.",
          "local_types": [
            "rule_comparison",
            "expressiveness"
          ],
          "iri": "Entity-however__the_op_rule_is_not_a_consequence_of_any_cp_rule__op_rule_are_strictly_more_expressive_than_cp_rule_.-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-6__co-occurrence_fitness_": {
      "node_id": "6__co-occurrence_fitness_",
      "disambiguation_index": 0,
      "label": "6 (co-occurrence fitness)",
      "aliases": [
        "6 (co-occurrence fitness)"
      ],
      "types": [
        "term",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The co-occurrence fitness function, which estimates the quality of an open path rule by aggregating pairwise local occurrences based on similarity between predicate embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-15-Sentence-1",
          "local_name": "6 (co-occurrence fitness)",
          "local_types": [
            "term",
            "mathematical concept"
          ],
          "iri": "Entity-6__co-occurrence_fitness_-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-op_rule_admit_instantiation_that_can_not_be_instantiation_of_any_cp_rule": {
      "node_id": "op_rule_admit_instantiation_that_can_not_be_instantiation_of_any_cp_rule",
      "disambiguation_index": 0,
      "label": "OP rules admit instantiations that cannot be instantiations of any CP rule",
      "aliases": [
        "OP rules admit instantiations that cannot be instantiations of any CP rule"
      ],
      "types": [
        "rule property",
        "CP vs. OP comparison"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The property or characteristic that allows Open Path (OP) rules to have instantiations that are not possible with Closed Path (CP) rules, making OP rules more expressive.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-4",
          "local_name": "OP rules admit instantiations that cannot be instantiations of any CP rule",
          "local_types": [
            "rule property",
            "CP vs. OP comparison"
          ],
          "iri": "Entity-op_rule_admit_instantiation_that_can_not_be_instantiation_of_any_cp_rule-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-pathfinding___(2)": {
      "node_id": "pathfinding___(2)",
      "disambiguation_index": 2,
      "label": "PathFinding()",
      "aliases": [
        "PathFinding()"
      ],
      "types": [
        "algorithm",
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A function that generates OP rules for a target predicate by exhaustively generating paths comprising sequences of predicates with required patterns and applying a fitness function to rapidly discard poor performers.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-15",
          "local_name": "PathFinding()",
          "local_types": [
            "algorithm",
            "function"
          ],
          "iri": "Entity-pathfinding___(2)-Mention-1"
        }
      ],
      "relevance": 0.5693359375
    },
    "Entity-2.1": {
      "node_id": "2.1",
      "disambiguation_index": 0,
      "label": "2.1",
      "aliases": [
        "2.1"
      ],
      "types": [
        "number",
        "version"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A version of a knowledge graph completion system",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-1",
          "local_name": "2.1",
          "local_types": [
            "number",
            "version"
          ],
          "iri": "Entity-2.1-Mention-1"
        }
      ],
      "relevance": 0.56884765625
    },
    "Entity-f_coo": {
      "node_id": "f_coo",
      "disambiguation_index": 0,
      "label": "f_coo",
      "aliases": [
        "f_coo"
      ],
      "types": [
        "function",
        "fitness function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The co-occurrence fitness function for open path rules that estimates rule quality by aggregating pairwise local occurrences of predicate embeddings along a chain of predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-16-Sentence-1",
          "local_name": "f_coo",
          "local_types": [
            "function"
          ],
          "iri": "Entity-f_coo-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-1",
          "local_name": "f_coo",
          "local_types": [
            "fitness function"
          ],
          "iri": "Entity-f_coo-Mention-2"
        }
      ],
      "relevance": 0.56884765625
    },
    "Entity-in_section_6_we_formalise_the_new_quality_notion_of_query_relevance_and_discus_the_result_of_a_range_of_experiment_with_our_novel_oprl": {
      "node_id": "in_section_6_we_formalise_the_new_quality_notion_of_query_relevance_and_discus_the_result_of_a_range_of_experiment_with_our_novel_oprl",
      "disambiguation_index": 0,
      "label": "In Section 6 we formalise the new quality notion of query relevance and discuss the results of a range of experiments with our novel OPRL",
      "aliases": [
        "In Section 6 we formalise the new quality notion of query relevance and discuss the results of a range of experiments with our novel OPRL"
      ],
      "types": [
        "section",
        "part-of-paper",
        "quality-notion",
        "experiments"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept or framework that defines the measure of how relevant search queries are, along with experimental evaluations.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-5",
          "local_name": "In Section 6 we formalise the new quality notion of query relevance and discuss the results of a range of experiments with our novel OPRL",
          "local_types": [
            "section",
            "part-of-paper",
            "quality-notion",
            "experiments"
          ],
          "iri": "Entity-in_section_6_we_formalise_the_new_quality_notion_of_query_relevance_and_discus_the_result_of_a_range_of_experiment_with_our_novel_oprl-Mention-1"
        }
      ],
      "relevance": 0.568359375
    },
    "Entity-figure_1_show_the_distribution_of_mined_rule_by_opsc_and_length": {
      "node_id": "figure_1_show_the_distribution_of_mined_rule_by_opsc_and_length",
      "disambiguation_index": 0,
      "label": "Figure 1 shows the distribution of mined rules by OPSC and length",
      "aliases": [
        "Figure 1 shows the distribution of mined rules by OPSC and length"
      ],
      "types": [
        "figure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A graph or chart showing the distribution of mined rules according to their Open Path Score (OPSC) values and lengths.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "Figure 1 shows the distribution of mined rules by OPSC and length",
          "local_types": [
            "figure"
          ],
          "iri": "Entity-figure_1_show_the_distribution_of_mined_rule_by_opsc_and_length-Mention-1"
        }
      ],
      "relevance": 0.568359375
    },
    "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg": {
      "node_id": "an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "disambiguation_index": 0,
      "label": "an instantiation of the body of the rule in the KG",
      "aliases": [
        "an instantiation of the body of the rule in the KG"
      ],
      "types": [
        "instantiation",
        "body",
        "KG"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An instance or occurrence of the core content or substance of a rule within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "an instantiation of the body of the rule in the KG",
          "local_types": [
            "instantiation",
            "body",
            "KG"
          ],
          "iri": "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-perfect_link_predictor": {
      "node_id": "perfect_link_predictor",
      "disambiguation_index": 0,
      "label": "perfect link predictor",
      "aliases": [
        "perfect link predictor"
      ],
      "types": [
        "predictive model",
        "machine learning algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A machine learning algorithm capable of predicting links between entities in a knowledge graph, assuming the existence of a perfect link predictor that can accurately identify correct answers.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-2",
          "local_name": "perfect link predictor",
          "local_types": [
            "predictive model",
            "machine learning algorithm"
          ],
          "iri": "Entity-perfect_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-a__pk_": {
      "node_id": "a__pk_",
      "disambiguation_index": 0,
      "label": "A(Pk)",
      "aliases": [
        "A(Pk)"
      ],
      "types": [
        "matrix",
        "mathematical concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The adjacency matrix representation of predicate Pk in the knowledge graph KG, where A(Pk)[i,j] = 1 if fact Pk(ei,ej) is present and 0 otherwise.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-6",
          "local_name": "A(Pk)",
          "local_types": [
            "matrix",
            "mathematical concept"
          ],
          "iri": "Entity-a__pk_-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-observing_a_sharp_anomaly": {
      "node_id": "observing_a_sharp_anomaly",
      "disambiguation_index": 0,
      "label": "Observing a sharp anomaly",
      "aliases": [
        "Observing a sharp anomaly"
      ],
      "types": [
        "observation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The observation of an unusual and significant deviation from expected performance in query generation using OPRL, likely caused by incomplete data in FB15KSE.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "Observing a sharp anomaly",
          "local_types": [
            "observation"
          ],
          "iri": "Entity-observing_a_sharp_anomaly-Mention-1"
        }
      ],
      "relevance": 0.56787109375
    },
    "Entity-existential_rule_learning": {
      "node_id": "existential_rule_learning",
      "disambiguation_index": 0,
      "label": "existential rule learning",
      "aliases": [
        "existential rule learning"
      ],
      "types": [
        "concept",
        "idea",
        "topic"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept of learning rules that existentially relate entities and facts in knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-5",
          "local_name": "existential rule learning",
          "local_types": [
            "concept",
            "idea",
            "topic"
          ],
          "iri": "Entity-existential_rule_learning-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-to_efficiently_estimate_rule_quality": {
      "node_id": "to_efficiently_estimate_rule_quality",
      "disambiguation_index": 0,
      "label": "to efficiently estimate rule quality",
      "aliases": [
        "to efficiently estimate rule quality"
      ],
      "types": [
        "goal",
        "evaluation metric"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method for evaluating and assessing the effectiveness of learned rules in knowledge graph completion, aiming to determine their accuracy and relevance.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "to efficiently estimate rule quality",
          "local_types": [
            "goal",
            "evaluation metric"
          ],
          "iri": "Entity-to_efficiently_estimate_rule_quality-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-the_co-occurrence_fitness_function": {
      "node_id": "the_co-occurrence_fitness_function",
      "disambiguation_index": 0,
      "label": "the co-occurrence fitness function",
      "aliases": [
        "Fitness Function",
        "the co-occurrence fitness function"
      ],
      "types": [
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A measure that estimates the quality of an open path rule by capturing the weight of connections between sequential entities along the path, using argument embeddings built from entity and predicate representations.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "the co-occurrence fitness function",
          "local_types": [
            "function"
          ],
          "iri": "Entity-the_co-occurrence_fitness_function-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-1",
          "local_name": "Fitness Function",
          "local_types": [
            "function"
          ],
          "iri": "Entity-the_co-occurrence_fitness_function-Mention-2"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-decreasing_recall_a_poorer_rule_get_through": {
      "node_id": "decreasing_recall_a_poorer_rule_get_through",
      "disambiguation_index": 0,
      "label": "decreasing recall as poorer rules get through",
      "aliases": [
        "decreasing recall as poorer rules get through"
      ],
      "types": [
        "behavior",
        "recall"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The phenomenon where the quality or relevance of queries generated by OPRL decreases as the threshold for accepting poorer rules increases.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "decreasing recall as poorer rules get through",
          "local_types": [
            "behavior",
            "recall"
          ],
          "iri": "Entity-decreasing_recall_a_poorer_rule_get_through-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-a_setting_for_human-curated_maintenance_on_an_enterprise_kg": {
      "node_id": "a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "disambiguation_index": 0,
      "label": "a setting for human-curated maintenance on an enterprise KG",
      "aliases": [
        "a setting for human-curated maintenance on an enterprise KG"
      ],
      "types": [
        "setting",
        "maintenance",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A framework or environment where experts manually review and maintain an enterprise knowledge graph, ensuring its accuracy and completeness.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-4",
          "local_name": "a setting for human-curated maintenance on an enterprise KG",
          "local_types": [
            "setting",
            "maintenance",
            "knowledge graph"
          ],
          "iri": "Entity-a_setting_for_human-curated_maintenance_on_an_enterprise_kg-Mention-1"
        }
      ],
      "relevance": 0.5673828125
    },
    "Entity-infer_open-ended_question": {
      "node_id": "infer_open-ended_question",
      "disambiguation_index": 0,
      "label": "infer open-ended questions",
      "aliases": [
        "infer open-ended questions"
      ],
      "types": [
        "process",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process or methodology for inferring open-ended questions from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "infer open-ended questions",
          "local_types": [
            "process",
            "methodology"
          ],
          "iri": "Entity-infer_open-ended_question-Mention-1"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-adjacency_matrix_representation_of_the_kg": {
      "node_id": "adjacency_matrix_representation_of_the_kg",
      "disambiguation_index": 0,
      "label": "adjacency matrix representation of the KG",
      "aliases": [
        "the adjacency matrix",
        "adjacency matrix representation of the KG"
      ],
      "types": [
        "matrix",
        "representation",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A data structure that represents a knowledge graph as a square matrix, where each element indicates whether two entities are adjacent or not.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "adjacency matrix representation of the KG",
          "local_types": [
            "representation",
            "data structure"
          ],
          "iri": "Entity-adjacency_matrix_representation_of_the_kg-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "the adjacency matrix",
          "local_types": [
            "matrix"
          ],
          "iri": "Entity-adjacency_matrix_representation_of_the_kg-Mention-2"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-the_sensitivity_of_the_performance_of_oprl_query_to_the_opsc_threshold": {
      "node_id": "the_sensitivity_of_the_performance_of_oprl_query_to_the_opsc_threshold",
      "disambiguation_index": 0,
      "label": "the sensitivity of the performance of OPRL queries to the OPSC threshold",
      "aliases": [
        "the sensitivity of the performance of OPRL queries to the OPSC threshold"
      ],
      "types": [
        "performance",
        "query",
        "threshold"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The sensitivity of performance refers to how OPRL query generation varies with different Open Path Score (OPSC) thresholds, specifically for the FB15KSE dataset.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "the sensitivity of the performance of OPRL queries to the OPSC threshold",
          "local_types": [
            "performance",
            "query",
            "threshold"
          ],
          "iri": "Entity-the_sensitivity_of_the_performance_of_oprl_query_to_the_opsc_threshold-Mention-1"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-enterprise_kg": {
      "node_id": "enterprise_kg",
      "disambiguation_index": 0,
      "label": "enterprise KG",
      "aliases": [
        "enterprise KG"
      ],
      "types": [
        "knowledge graph",
        "database"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge repository that represents entities and their relationships as interconnected nodes.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-4",
          "local_name": "enterprise KG",
          "local_types": [
            "knowledge graph",
            "database"
          ],
          "iri": "Entity-enterprise_kg-Mention-1"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-missing_link": {
      "node_id": "missing_link",
      "disambiguation_index": 0,
      "label": "missing links",
      "aliases": [
        "missing links"
      ],
      "types": [
        "links"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept of 'missing links' refers to the process of generating relevant questions or queries about entities and relationships in a knowledge graph (KG) that are not present in the KG, which can be used for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-6-Sentence-1",
          "local_name": "missing links",
          "local_types": [
            "links"
          ],
          "iri": "Entity-missing_link-Mention-1"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-only_rule": {
      "node_id": "only_rule",
      "disambiguation_index": 0,
      "label": "only rules",
      "aliases": [
        "only rules"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Rules that have a quality score greater than or equal to 0.1 for OPSC (Open Path Support) and OPHC (Open Path Hypothesis Confidence), indicating high-quality rules mined by the algorithm.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-4",
          "local_name": "only rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-only_rule-Mention-1"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-prand_query": {
      "node_id": "prand_query",
      "disambiguation_index": 0,
      "label": "Prand queries",
      "aliases": [
        "Prand queries"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Randomly generated queries for knowledge graph completion using predicate proportions from the test set",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "Prand queries",
          "local_types": [
            "query"
          ],
          "iri": "Entity-prand_query-Mention-1"
        }
      ],
      "relevance": 0.56689453125
    },
    "Entity-if_the_rule__instantiated_by_those_entity__hold_true_in_the_kg_.": {
      "node_id": "if_the_rule__instantiated_by_those_entity__hold_true_in_the_kg_.",
      "disambiguation_index": 0,
      "label": "if the rule, instantiated by those entities, holds true in the KG.",
      "aliases": [
        "if the rule, instantiated by those entities, holds true in the KG."
      ],
      "types": [
        "rule",
        "condition"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of entities satisfying both the body and head of a closed path (CP) rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-5",
          "local_name": "if the rule, instantiated by those entities, holds true in the KG.",
          "local_types": [
            "rule",
            "condition"
          ],
          "iri": "Entity-if_the_rule__instantiated_by_those_entity__hold_true_in_the_kg_.-Mention-1"
        }
      ],
      "relevance": 0.56640625
    },
    "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate": {
      "node_id": "sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "disambiguation_index": 0,
      "label": "Sampling() computes a fragment of the KG (K') consisting of a bounded number of entities that are related to the target predicate",
      "aliases": [
        "Sampling() computes a fragment of the KG (K') consisting of a bounded number of entities that are related to the target predicate"
      ],
      "types": [
        "method",
        "fragment",
        "entities",
        "target predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A method that computes a fragment of a knowledge graph (K') consisting of a bounded number of entities related to a target predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-5",
          "local_name": "Sampling() computes a fragment of the KG (K') consisting of a bounded number of entities that are related to the target predicate",
          "local_types": [
            "method",
            "fragment",
            "entities",
            "target predicate"
          ],
          "iri": "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.56640625
    },
    "Entity-curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity": {
      "node_id": "curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity",
      "disambiguation_index": 0,
      "label": "curating tasks including link prediction that predict missing facts about extant entities",
      "aliases": [
        "curating tasks including link prediction that predict missing facts about extant entities"
      ],
      "types": [
        "fact",
        "task",
        "goal",
        "link prediction"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Tasks involving the prediction of missing information about existing entities in a knowledge graph, using link prediction techniques.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "curating tasks including link prediction that predict missing facts about extant entities",
          "local_types": [
            "fact",
            "task",
            "goal",
            "link prediction"
          ],
          "iri": "Entity-curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity-Mention-1"
        }
      ],
      "relevance": 0.56640625
    },
    "Entity-while_every_instantiation_of_a_cp_rule_is_also_an_instantiation_of_a_corresponding_op_rule": {
      "node_id": "while_every_instantiation_of_a_cp_rule_is_also_an_instantiation_of_a_corresponding_op_rule",
      "disambiguation_index": 0,
      "label": "While every instantiation of a CP rule is also an instantiation of a corresponding OP rule",
      "aliases": [
        "While every instantiation of a CP rule is also an instantiation of a corresponding OP rule"
      ],
      "types": [
        "instantiation",
        "correspondence"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A correspondence between Closed Path (CP) and Open Path (OP) rules, stating that every instantiation of a CP rule is also an instantiation of a corresponding OP rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-4",
          "local_name": "While every instantiation of a CP rule is also an instantiation of a corresponding OP rule",
          "local_types": [
            "instantiation",
            "correspondence"
          ],
          "iri": "Entity-while_every_instantiation_of_a_cp_rule_is_also_an_instantiation_of_a_corresponding_op_rule-Mention-1"
        }
      ],
      "relevance": 0.56591796875
    },
    "Entity-p_t____e_": {
      "node_id": "p_t____e_",
      "disambiguation_index": 0,
      "label": "P_t(?, e)",
      "aliases": [
        "P_t(?, e)"
      ],
      "types": [
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate that represents a constrained existential rule for completing knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "P_t(?, e)",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p_t____e_-Mention-1"
        }
      ],
      "relevance": 0.56591796875
    },
    "Entity-pathfinding___(3)": {
      "node_id": "pathfinding___(3)",
      "disambiguation_index": 3,
      "label": "PathFinding()",
      "aliases": [
        "PathFinding()"
      ],
      "types": [
        "function",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A function or algorithm that generates and filters potential rules in an open path rule learning process, aiming to efficiently estimate rule quality using co-occurrence and open path fitness functions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "PathFinding()",
          "local_types": [
            "function",
            "algorithm"
          ],
          "iri": "Entity-pathfinding___(3)-Mention-1"
        }
      ],
      "relevance": 0.56591796875
    },
    "Entity-this_observation_(1)": {
      "node_id": "this_observation_(1)",
      "disambiguation_index": 1,
      "label": "this observation",
      "aliases": [
        "this observation"
      ],
      "types": [
        "observation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The co-occurrence of entities along an OP rule's path that connects its endpoints, as captured by averaging entity embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-6",
          "local_name": "this observation",
          "local_types": [
            "observation"
          ],
          "iri": "Entity-this_observation_(1)-Mention-1"
        }
      ],
      "relevance": 0.56591796875
    },
    "Entity-to_infer_relevant_query": {
      "node_id": "to_infer_relevant_query",
      "disambiguation_index": 0,
      "label": "to infer relevant queries",
      "aliases": [
        "to infer relevant queries"
      ],
      "types": [
        "query inference"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process or method of generating questions that are related to missing information in a knowledge graph, based on learned rules with free variables.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "to infer relevant queries",
          "local_types": [
            "query inference"
          ],
          "iri": "Entity-to_infer_relevant_query-Mention-1"
        }
      ],
      "relevance": 0.56591796875
    },
    "Entity-set_of_op_rule_r": {
      "node_id": "set_of_op_rule_r",
      "disambiguation_index": 0,
      "label": "set of OP rules R",
      "aliases": [
        "set of OP rules R"
      ],
      "types": [
        "ruleset",
        "ontology representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of formal guidelines or principles governing the structure and organization of an ontology, used for knowledge representation and reasoning.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-4",
          "local_name": "set of OP rules R",
          "local_types": [
            "ruleset",
            "ontology representation"
          ],
          "iri": "Entity-set_of_op_rule_r-Mention-1"
        }
      ],
      "relevance": 0.5654296875
    },
    "Entity-last_step": {
      "node_id": "last_step",
      "disambiguation_index": 0,
      "label": "last step",
      "aliases": [
        "last step"
      ],
      "types": [
        "algorithmic process"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The last step in the OPRL algorithm, which iterates based on the maximum length of target rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-9",
          "local_name": "last step",
          "local_types": [
            "algorithmic process"
          ],
          "iri": "Entity-last_step-Mention-1"
        }
      ],
      "relevance": 0.5654296875
    },
    "Entity-a_such": {
      "node_id": "a_such",
      "disambiguation_index": 0,
      "label": "As such",
      "aliases": [
        "As such"
      ],
      "types": [
        "phrase"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept or entity referred to by 'As such' is the first solution to the problem of active knowledge graph completion (AKGC), which aims to ask the best questions to complete a Knowledge Graph instead of suggesting missing facts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "As such",
          "local_types": [
            "phrase"
          ],
          "iri": "Entity-a_such-Mention-1"
        }
      ],
      "relevance": 0.5654296875
    },
    "Entity-pairwise": {
      "node_id": "pairwise",
      "disambiguation_index": 0,
      "label": "Pairwise",
      "aliases": [
        "Pairwise"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A pairwise local fitness function that measures the similarity between two predicate embeddings, used to estimate the quality of open path rules in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "Pairwise",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-pairwise-Mention-1"
        }
      ],
      "relevance": 0.5654296875
    },
    "Entity-reduced_kg": {
      "node_id": "reduced_kg",
      "disambiguation_index": 0,
      "label": "reduced KG",
      "aliases": [
        "reduced KG"
      ],
      "types": [
        "knowledge graph",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A condensed representation of knowledge and relationships",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "reduced KG",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-reduced_kg-Mention-1"
        }
      ],
      "relevance": 0.56494140625
    },
    "Entity-the_query_performance_of_oprl_and_rlvlr__a_roc_curve_in_figure_3_using_minimum_opsc_and_minimum_sc_parameter_a_the_ordering_criterion": {
      "node_id": "the_query_performance_of_oprl_and_rlvlr__a_roc_curve_in_figure_3_using_minimum_opsc_and_minimum_sc_parameter_a_the_ordering_criterion",
      "disambiguation_index": 0,
      "label": "the query performance of OPRL and RLvLR* as ROC curves in Figure 3 using minimum OPSC and minimum SC parameters as the ordering criteria",
      "aliases": [
        "the query performance of OPRL and RLvLR* as ROC curves in Figure 3 using minimum OPSC and minimum SC parameters as the ordering criteria"
      ],
      "types": [
        "performance measure",
        "figure reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The graphical representation of a measure evaluating query performance, comparing two methods (OPRL and RLvLR*) with varying parameter settings.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "the query performance of OPRL and RLvLR* as ROC curves in Figure 3 using minimum OPSC and minimum SC parameters as the ordering criteria",
          "local_types": [
            "performance measure",
            "figure reference"
          ],
          "iri": "Entity-the_query_performance_of_oprl_and_rlvlr__a_roc_curve_in_figure_3_using_minimum_opsc_and_minimum_sc_parameter_a_the_ordering_criterion-Mention-1"
        }
      ],
      "relevance": 0.56494140625
    },
    "Entity-the_sampling_algorithm__sampling__": {
      "node_id": "the_sampling_algorithm__sampling__",
      "disambiguation_index": 0,
      "label": "the sampling algorithm, Sampling()",
      "aliases": [
        "Sampling()",
        "the sampling algorithm, Sampling()"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel method that reduces the size of a knowledge graph by selecting entities related to a target predicate and their connections via predicates, forming a smaller sample graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "the sampling algorithm, Sampling()",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-the_sampling_algorithm__sampling__-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-5",
          "local_name": "Sampling()",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-the_sampling_algorithm__sampling__-Mention-2"
        }
      ],
      "relevance": 0.56494140625
    },
    "Entity-the_count": {
      "node_id": "the_count",
      "disambiguation_index": 0,
      "label": "The count",
      "aliases": [
        "The count"
      ],
      "types": [
        "count"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of entities that satisfy both the head and body of an Open Path rule in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-2",
          "local_name": "The count",
          "local_types": [
            "count"
          ],
          "iri": "Entity-the_count-Mention-1"
        }
      ],
      "relevance": 0.56494140625
    },
    "Entity-embedding-based_method": {
      "node_id": "embedding-based_method",
      "disambiguation_index": 0,
      "label": "embedding-based methods",
      "aliases": [
        "embedding-based methods"
      ],
      "types": [
        "algorithm",
        "computational method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of algorithm or computational method that uses embeddings to represent entities and relationships in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-1",
          "local_name": "embedding-based methods",
          "local_types": [
            "algorithm",
            "computational method"
          ],
          "iri": "Entity-embedding-based_method-Mention-1"
        }
      ],
      "relevance": 0.564453125
    },
    "Entity-those_with_a_higher_probability_in_the_kg": {
      "node_id": "those_with_a_higher_probability_in_the_kg",
      "disambiguation_index": 0,
      "label": "those with a higher probability in the KG",
      "aliases": [
        "those with a higher probability in the KG"
      ],
      "types": [
        "entity",
        "knowledge graph entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that have a higher likelihood of being linked or queried based on their presence and relationships within the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-4",
          "local_name": "those with a higher probability in the KG",
          "local_types": [
            "entity",
            "knowledge graph entity"
          ],
          "iri": "Entity-those_with_a_higher_probability_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.564453125
    },
    "Entity-sc_from_1_to_0.1__the_minimum_and_default__in_4_decrement": {
      "node_id": "sc_from_1_to_0.1__the_minimum_and_default__in_4_decrement",
      "disambiguation_index": 0,
      "label": "SC from 1 to 0.1 (the minimum and default) in 4 decrements",
      "aliases": [
        "SC from 1 to 0.1 (the minimum and default) in 4 decrements"
      ],
      "types": [
        "parameter_range"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The quality threshold for selecting Open Path rules, used by OPRL algorithm",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-2",
          "local_name": "SC from 1 to 0.1 (the minimum and default) in 4 decrements",
          "local_types": [
            "parameter_range"
          ],
          "iri": "Entity-sc_from_1_to_0.1__the_minimum_and_default__in_4_decrement-Mention-1"
        }
      ],
      "relevance": 0.56396484375
    },
    "Entity-human-curated_maintenance_on_an_enterprise_kg": {
      "node_id": "human-curated_maintenance_on_an_enterprise_kg",
      "disambiguation_index": 0,
      "label": "human-curated maintenance on an enterprise KG",
      "aliases": [
        "human-curated maintenance on an enterprise KG"
      ],
      "types": [
        "process",
        "maintenance task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of manually updating and maintaining data within a large-scale knowledge graph.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-4",
          "local_name": "human-curated maintenance on an enterprise KG",
          "local_types": [
            "process",
            "maintenance task"
          ],
          "iri": "Entity-human-curated_maintenance_on_an_enterprise_kg-Mention-1"
        }
      ],
      "relevance": 0.56396484375
    },
    "Entity-the_candidate_rule": {
      "node_id": "the_candidate_rule",
      "disambiguation_index": 0,
      "label": "the candidate rules",
      "aliases": [
        "the candidate rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of proposed and evaluated rules that are candidates to be mined from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "the candidate rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-the_candidate_rule-Mention-1"
        }
      ],
      "relevance": 0.56396484375
    },
    "Entity-the_query_generation_task": {
      "node_id": "the_query_generation_task",
      "disambiguation_index": 0,
      "label": "the query generation task",
      "aliases": [
        "the query generation task"
      ],
      "types": [
        "query generation",
        "task",
        "query_generation_task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating queries that can be used to complete a knowledge graph, particularly those that are relevant and accurate.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-5",
          "local_name": "the query generation task",
          "local_types": [
            "task"
          ],
          "iri": "Entity-the_query_generation_task-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "the query generation task",
          "local_types": [
            "query generation",
            "task",
            "query_generation_task"
          ],
          "iri": "Entity-the_query_generation_task-Mention-2"
        }
      ],
      "relevance": 0.56396484375
    },
    "Entity-new_fact_in_the_kg": {
      "node_id": "new_fact_in_the_kg",
      "disambiguation_index": 0,
      "label": "new fact in the KG",
      "aliases": [
        "new fact in the KG"
      ],
      "types": [
        "fact",
        "KG fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A recently added piece of information or statement that has been incorporated into a knowledge graph (KG)",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "new fact in the KG",
          "local_types": [
            "fact",
            "KG fact"
          ],
          "iri": "Entity-new_fact_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.5634765625
    },
    "Entity-p_2": {
      "node_id": "p_2",
      "disambiguation_index": 0,
      "label": "P_2",
      "aliases": [
        "P_2"
      ],
      "types": [
        "linear algebra",
        "matrix"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The co-occurrence fitness function for OP rules, used to estimate rule quality and filter out low-quality candidates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "P_2",
          "local_types": [
            "linear algebra",
            "matrix"
          ],
          "iri": "Entity-p_2-Mention-1"
        }
      ],
      "relevance": 0.5634765625
    },
    "Entity-a_data-first_approach": {
      "node_id": "a_data-first_approach",
      "disambiguation_index": 0,
      "label": "a data-first approach",
      "aliases": [
        "a data-first approach"
      ],
      "types": [
        "approach",
        "methodology"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A methodology that prioritizes the addition of information to Knowledge Graphs in an arbitrary manner, with few structural constraints, allowing for incomplete and potentially erroneous facts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "a data-first approach",
          "local_types": [
            "approach",
            "methodology"
          ],
          "iri": "Entity-a_data-first_approach-Mention-1"
        }
      ],
      "relevance": 0.5634765625
    },
    "Entity-the_product": {
      "node_id": "the_product",
      "disambiguation_index": 0,
      "label": "the product",
      "aliases": [
        "the product"
      ],
      "types": [
        "product"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The product refers to an OP (Open Path) rule's quality estimation function using both entity and predicate embeddings, which represents a low-dimensional representation of the latent features of a path that connects its endpoints.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-3",
          "local_name": "the product",
          "local_types": [
            "product"
          ],
          "iri": "Entity-the_product-Mention-1"
        }
      ],
      "relevance": 0.5634765625
    },
    "Entity-let_kg": {
      "node_id": "let_kg",
      "disambiguation_index": 0,
      "label": "Let KG",
      "aliases": [
        "Let KG"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The notation 'Let KG' represents a knowledge graph (KG) with entities E={e1,...,en} and predicates P={P1,...,Pm} in the set of facts F.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "Let KG",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-let_kg-Mention-1"
        }
      ],
      "relevance": 0.5634765625
    },
    "Entity-but_can_have_a_more_linear_shape_.": {
      "node_id": "but_can_have_a_more_linear_shape_.",
      "disambiguation_index": 0,
      "label": "but can have a more linear shape.",
      "aliases": [
        "but can have a more linear shape."
      ],
      "types": [
        "shape"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Open Path (OP) rule",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "but can have a more linear shape.",
          "local_types": [
            "shape"
          ],
          "iri": "Entity-but_can_have_a_more_linear_shape_.-Mention-1"
        }
      ],
      "relevance": 0.56298828125
    },
    "Entity-a_sharp_anomaly_where_the_opsc_threshold_is_0.9": {
      "node_id": "a_sharp_anomaly_where_the_opsc_threshold_is_0.9",
      "disambiguation_index": 0,
      "label": "a sharp anomaly where the OPSC threshold is 0.9",
      "aliases": [
        "a sharp anomaly where the OPSC threshold is 0.9"
      ],
      "types": [
        "anomaly detection",
        "threshold value"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A statistical irregularity observed in the performance of OPRL query generation on FB15KSE dataset, likely caused by incomplete knowledge graph data.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "a sharp anomaly where the OPSC threshold is 0.9",
          "local_types": [
            "anomaly detection",
            "threshold value"
          ],
          "iri": "Entity-a_sharp_anomaly_where_the_opsc_threshold_is_0.9-Mention-1"
        }
      ],
      "relevance": 0.56298828125
    },
    "Entity-a_low-dimensional_vector_space_of_latent__unnamed_feature_not_present_in_the_kg_vocabulary": {
      "node_id": "a_low-dimensional_vector_space_of_latent__unnamed_feature_not_present_in_the_kg_vocabulary",
      "disambiguation_index": 0,
      "label": "a low-dimensional vector space of latent, unnamed features not present in the KG vocabulary",
      "aliases": [
        "a low-dimensional vector space of latent, unnamed features not present in the KG vocabulary"
      ],
      "types": [
        "vector space",
        "latent representation",
        "latent feature"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A representation learning model that maps entities and predicates from a knowledge graph into a lower-dimensional space using RESCAL embeddings, capturing intrinsic properties and relationships between them.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-1",
          "local_name": "a low-dimensional vector space of latent, unnamed features not present in the KG vocabulary",
          "local_types": [
            "vector space",
            "latent representation",
            "latent feature"
          ],
          "iri": "Entity-a_low-dimensional_vector_space_of_latent__unnamed_feature_not_present_in_the_kg_vocabulary-Mention-1"
        }
      ],
      "relevance": 0.5625
    },
    "Entity-...__p_n__z___n-1___y__.": {
      "node_id": "...__p_n__z___n-1___y__.",
      "disambiguation_index": 0,
      "label": "... \u2227 P_n(z_{n-1}, y).",
      "aliases": [
        "... \u2227 P_n(z_{n-1}, y)."
      ],
      "types": [
        "equation",
        "mathematical formula"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A mathematical formula representing an open path rule of the form: a predicate P_t with variables x and z_0, where each P_i are predicates in the knowledge graph, and each {x, z_i, y} are variables; x and y are free while the z_i are bound.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "... \u2227 P_n(z_{n-1}, y).",
          "local_types": [
            "equation",
            "mathematical formula"
          ],
          "iri": "Entity-...__p_n__z___n-1___y__.-Mention-1"
        }
      ],
      "relevance": 0.5625
    },
    "Entity-some_missing_fact": {
      "node_id": "some_missing_fact",
      "disambiguation_index": 0,
      "label": "some missing fact",
      "aliases": [
        "some missing fact"
      ],
      "types": [
        "fact",
        "information"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A piece of information that is not present in a knowledge graph, which can be retrieved by answering a relevant question generated from an OP rule.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-4-Sentence-2",
          "local_name": "some missing fact",
          "local_types": [
            "fact",
            "information"
          ],
          "iri": "Entity-some_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.5625
    },
    "Entity-increasing_length": {
      "node_id": "increasing_length",
      "disambiguation_index": 0,
      "label": "increasing length",
      "aliases": [
        "increasing length"
      ],
      "types": [
        "property",
        "length"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A property that refers to the growth or increase in the size or magnitude of knowledge graph completion rules.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-3",
          "local_name": "increasing length",
          "local_types": [
            "property",
            "length"
          ],
          "iri": "Entity-increasing_length-Mention-1"
        }
      ],
      "relevance": 0.5625
    },
    "Entity-for_illustration": {
      "node_id": "for_illustration",
      "disambiguation_index": 0,
      "label": "For illustration",
      "aliases": [
        "For illustration"
      ],
      "types": [
        "explanation",
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Two Open Path (OP) rules mined from Wikidata, along with their OPSC and OPHC values",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "For illustration",
          "local_types": [
            "explanation",
            "example"
          ],
          "iri": "Entity-for_illustration-Mention-1"
        }
      ],
      "relevance": 0.5625
    },
    "Entity-_e__e__such_that_p__e__e____f_": {
      "node_id": "_e__e__such_that_p__e__e____f_",
      "disambiguation_index": 0,
      "label": "{e | \u2203e' such that P(e, e') \u2208 F}",
      "aliases": [
        "{e | \u2203e' such that P(e, e') \u2208 F}",
        "{e' | \u2203e such that P(e, e') \u2208 F}"
      ],
      "types": [
        "definition",
        "predicate logic expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic expression representing a set of entities connected by predicates, used to define an open path rule for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-3",
          "local_name": "{e | \u2203e' such that P(e, e') \u2208 F}",
          "local_types": [
            "definition",
            "predicate logic expression"
          ],
          "iri": "Entity-_e__e__such_that_p__e__e____f_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-3",
          "local_name": "{e' | \u2203e such that P(e, e') \u2208 F}",
          "local_types": [
            "definition",
            "predicate logic expression"
          ],
          "iri": "Entity-_e__e__such_that_p__e__e____f_-Mention-2"
        }
      ],
      "relevance": 0.56201171875
    },
    "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n": {
      "node_id": "argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "disambiguation_index": 0,
      "label": "argument embeddings for the subject argument of P_t and the object argument of P_n",
      "aliases": [
        "argument embeddings for the subject argument of P_t and the object argument of P_n"
      ],
      "types": [
        "embedding",
        "argument"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of vectors representing the average entity embeddings at the endpoints of an open path rule, used as input for estimating the quality of the rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-5",
          "local_name": "argument embeddings for the subject argument of P_t and the object argument of P_n",
          "local_types": [
            "embedding",
            "argument"
          ],
          "iri": "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n-Mention-1"
        }
      ],
      "relevance": 0.56201171875
    },
    "Entity-an_instantiation_of_a_corresponding_op_rule": {
      "node_id": "an_instantiation_of_a_corresponding_op_rule",
      "disambiguation_index": 0,
      "label": "an instantiation of a corresponding OP rule",
      "aliases": [
        "an instantiation of a corresponding OP rule"
      ],
      "types": [
        "instantiation",
        "OP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific instance of an Open Path (OP) rule, which is a constrained existential rule with a more linear shape than Closed Path rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-4",
          "local_name": "an instantiation of a corresponding OP rule",
          "local_types": [
            "instantiation",
            "OP rule"
          ],
          "iri": "Entity-an_instantiation_of_a_corresponding_op_rule-Mention-1"
        }
      ],
      "relevance": 0.56201171875
    },
    "Entity-p_1____e_2_": {
      "node_id": "p_1____e_2_",
      "disambiguation_index": 0,
      "label": "P_1(?, e_2)",
      "aliases": [
        "P_1(?, e_2)",
        "P_1(?, e_3)",
        "P_1(?, e_5)"
      ],
      "types": [
        "relation",
        "fact",
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A query of the form P_1(?, e_2) that can be used to predict missing links in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "P_1(?, e_2)",
          "local_types": [
            "relation",
            "fact",
            "query"
          ],
          "iri": "Entity-p_1____e_2_-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "P_1(?, e_3)",
          "local_types": [
            "relation",
            "fact",
            "query"
          ],
          "iri": "Entity-p_1____e_2_-Mention-2"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "P_1(?, e_5)",
          "local_types": [
            "relation",
            "fact",
            "query"
          ],
          "iri": "Entity-p_1____e_2_-Mention-3"
        }
      ],
      "relevance": 0.56201171875
    },
    "Entity-product_calculus": {
      "node_id": "product_calculus",
      "disambiguation_index": 0,
      "label": "product calculus",
      "aliases": [
        "product calculus"
      ],
      "types": [
        "mathematical concept",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A mathematical concept or algorithm that represents rules with universal quantification of all variables at the outside, used to infer new facts in a knowledge graph by finding an instantiation of the rule body.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "product calculus",
          "local_types": [
            "mathematical concept",
            "algorithm"
          ],
          "iri": "Entity-product_calculus-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-_sim__p__2___i__p__1_____i1___for_1__i__n_-_1_.": {
      "node_id": "_sim__p__2___i__p__1_____i1___for_1__i__n_-_1_.",
      "disambiguation_index": 0,
      "label": "= sim(P(2)_i , P(1)_{i+1}) for 1 \u2264 i \u2264 n - 1.",
      "aliases": [
        "= sim(P(2)_i , P(1)_{i+1}) for 1 \u2264 i \u2264 n - 1."
      ],
      "types": [
        "assignment_statement",
        "loop_declaration"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A quality estimation function that measures the similarity between predicate embeddings along a path of entities, used to filter out low-quality rules during knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "= sim(P(2)_i , P(1)_{i+1}) for 1 \u2264 i \u2264 n - 1.",
          "local_types": [
            "assignment_statement",
            "loop_declaration"
          ],
          "iri": "Entity-_sim__p__2___i__p__1_____i1___for_1__i__n_-_1_.-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-embeddings_are_computed_only_for_entity_that_are_relevant_to_a_target_predicate_.": {
      "node_id": "embeddings_are_computed_only_for_entity_that_are_relevant_to_a_target_predicate_.",
      "disambiguation_index": 0,
      "label": "embeddings are computed only for entities that are relevant to a target predicate.",
      "aliases": [
        "embeddings are computed only for entities that are relevant to a target predicate."
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The computation of entity embeddings in the context of active knowledge graph completion, specifically for entities related to a target predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "embeddings are computed only for entities that are relevant to a target predicate.",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-embeddings_are_computed_only_for_entity_that_are_relevant_to_a_target_predicate_.-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-top_candidate_rule": {
      "node_id": "top_candidate_rule",
      "disambiguation_index": 0,
      "label": "top candidate rules",
      "aliases": [
        "top candidate rules"
      ],
      "types": [
        "rule",
        "candidate rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The top candidate rules refer to the set of high-quality OP rules that are selected based on their fitness values, using either or both of two fitness functions: co-occurrence and open path.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-3",
          "local_name": "top candidate rules",
          "local_types": [
            "rule",
            "candidate rule"
          ],
          "iri": "Entity-top_candidate_rule-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-it_is_quite_correctly_weakly_structured_or_because_it_ha_significantly_more_missing_fact": {
      "node_id": "it_is_quite_correctly_weakly_structured_or_because_it_ha_significantly_more_missing_fact",
      "disambiguation_index": 0,
      "label": "it is quite correctly weakly structured or because it has significantly more missing facts",
      "aliases": [
        "it is quite correctly weakly structured or because it has significantly more missing facts"
      ],
      "types": [
        "reason",
        "explanation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The performance of YAGO2 on OPRL query generation, which is suspected to be affected by its weaker structure and/or higher number of missing facts.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "it is quite correctly weakly structured or because it has significantly more missing facts",
          "local_types": [
            "reason",
            "explanation"
          ],
          "iri": "Entity-it_is_quite_correctly_weakly_structured_or_because_it_ha_significantly_more_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.5615234375
    },
    "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_": {
      "node_id": "whence_doe_a_query_arise_to_drive_the_link_predictor_",
      "disambiguation_index": 0,
      "label": "whence does a query arise to drive the link predictor?",
      "aliases": [
        "whence does a query arise to drive the link predictor?"
      ],
      "types": [
        "query",
        "link_predictor"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The problem of generating relevant queries for knowledge graph completion, particularly in scenarios where test facts cannot be held out and re-discovery is unproductive.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-3",
          "local_name": "whence does a query arise to drive the link predictor?",
          "local_types": [
            "query",
            "link_predictor"
          ],
          "iri": "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_-Mention-1"
        }
      ],
      "relevance": 0.56103515625
    },
    "Entity-op_rule_can_be_used_to_generate_the_query": {
      "node_id": "op_rule_can_be_used_to_generate_the_query",
      "disambiguation_index": 0,
      "label": "OP rules can be used to generate the queries",
      "aliases": [
        "OP rules can be used to generate the queries"
      ],
      "types": [
        "rule",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "OP rules",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-4",
          "local_name": "OP rules can be used to generate the queries",
          "local_types": [
            "rule",
            "algorithm"
          ],
          "iri": "Entity-op_rule_can_be_used_to_generate_the_query-Mention-1"
        }
      ],
      "relevance": 0.560546875
    },
    "Entity-support_degree": {
      "node_id": "support_degree",
      "disambiguation_index": 0,
      "label": "support degree",
      "aliases": [
        "support degree",
        "the support degree"
      ],
      "types": [
        "measure",
        "concept",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The measure or proportion of entities in a knowledge graph that satisfy both the body and head parts of an open path rule, indicating its applicability.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-7-Sentence-2",
          "local_name": "support degree",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-support_degree-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-7-Sentence-2",
          "local_name": "the support degree",
          "local_types": [
            "concept",
            "metric"
          ],
          "iri": "Entity-support_degree-Mention-2"
        }
      ],
      "relevance": 0.560546875
    },
    "Entity-the_form__2_": {
      "node_id": "the_form__2_",
      "disambiguation_index": 0,
      "label": "the form (2)",
      "aliases": [
        "the form (2)"
      ],
      "types": [
        "form",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An OP rule of type (2) that induces queries about predicate P and entities e, e' in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "the form (2)",
          "local_types": [
            "form",
            "notation"
          ],
          "iri": "Entity-the_form__2_-Mention-1"
        }
      ],
      "relevance": 0.560546875
    },
    "Entity-p_t__e___e_": {
      "node_id": "p_t__e___e_",
      "disambiguation_index": 0,
      "label": "P_t( e', e )",
      "aliases": [
        "P_t( e', e )",
        "P_t(e', e)"
      ],
      "types": [
        "function",
        "predicate",
        "mathematical notation",
        "predicate logic",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate representing an open path rule of the form P_t(x, z_0) \u2190 P_1(z_0, z_1) \u2227 P_2(z_1, z_2) \u2227 ... \u2227 P_n(z_{n-1}, y), where each P_i and P_t are predicates in a knowledge graph, x and y are free variables, and the z_i are bound variables.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-5",
          "local_name": "P_t( e', e )",
          "local_types": [
            "relation",
            "predicate",
            "predicate logic"
          ],
          "iri": "Entity-p_t__e___e_-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-9-Sentence-1",
          "local_name": "P_t(e', e)",
          "local_types": [
            "function",
            "mathematical notation"
          ],
          "iri": "Entity-p_t__e___e_-Mention-2"
        }
      ],
      "relevance": 0.56005859375
    },
    "Entity-opscophc_threshold": {
      "node_id": "opscophc_threshold",
      "disambiguation_index": 0,
      "label": "OPSC/OPHC thresholds",
      "aliases": [
        "OPSC/OPHC thresholds"
      ],
      "types": [
        "control mechanism",
        "parameter setting",
        "parameters",
        "thresholds"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The quality thresholds for Open Path (OP) rule learning, used to filter out low-quality rules and ensure relevant queries are generated.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "OPSC/OPHC thresholds",
          "local_types": [
            "control mechanism",
            "parameter setting",
            "parameters",
            "thresholds"
          ],
          "iri": "Entity-opscophc_threshold-Mention-1"
        }
      ],
      "relevance": 0.56005859375
    },
    "Entity-to_assess_the_quality_of_our_mined_open_path_rule__we_introduce_open_path_standard_confidence__opsc__and_open_path_head_coverage__ophc_": {
      "node_id": "to_assess_the_quality_of_our_mined_open_path_rule__we_introduce_open_path_standard_confidence__opsc__and_open_path_head_coverage__ophc_",
      "disambiguation_index": 0,
      "label": "To assess the quality of our mined open path rules, we introduce open path standard confidence (OPSC) and open path head coverage (OPHC)",
      "aliases": [
        "To assess the quality of our mined open path rules, we introduce open path standard confidence (OPSC) and open path head coverage (OPHC)"
      ],
      "types": [
        "quality_assessment",
        "rule_quality_metrics"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Metrics for assessing the quality of mined open path rules, including Open Path Standard Confidence (OPSC) and Open Path Head Coverage (OPHC)",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "To assess the quality of our mined open path rules, we introduce open path standard confidence (OPSC) and open path head coverage (OPHC)",
          "local_types": [
            "quality_assessment",
            "rule_quality_metrics"
          ],
          "iri": "Entity-to_assess_the_quality_of_our_mined_open_path_rule__we_introduce_open_path_standard_confidence__opsc__and_open_path_head_coverage__ophc_-Mention-1"
        }
      ],
      "relevance": 0.5595703125
    },
    "Entity-unlike_cp_rule__op_rule_do_not_necessarily_form_a_looping_path_over_variable": {
      "node_id": "unlike_cp_rule__op_rule_do_not_necessarily_form_a_looping_path_over_variable",
      "disambiguation_index": 0,
      "label": "Unlike CP rules, OP rules do not necessarily form a looping path over variables",
      "aliases": [
        "Unlike CP rules, OP rules do not necessarily form a looping path over variables"
      ],
      "types": [
        "rule_comparison"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A type of rule that does not necessarily form a looping path over variables and has a more linear shape.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "Unlike CP rules, OP rules do not necessarily form a looping path over variables",
          "local_types": [
            "rule_comparison"
          ],
          "iri": "Entity-unlike_cp_rule__op_rule_do_not_necessarily_form_a_looping_path_over_variable-Mention-1"
        }
      ],
      "relevance": 0.55908203125
    },
    "Entity-this_known-missing_fact": {
      "node_id": "this_known-missing_fact",
      "disambiguation_index": 0,
      "label": "this known-missing fact",
      "aliases": [
        "this known-missing fact"
      ],
      "types": [
        "fact"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific missing fact in a knowledge graph that is used as an example for generating relevant queries through open path rules.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "this known-missing fact",
          "local_types": [
            "fact"
          ],
          "iri": "Entity-this_known-missing_fact-Mention-1"
        }
      ],
      "relevance": 0.55908203125
    },
    "Entity-quality_threshold_opsc__0.8_and_ophc__0.01": {
      "node_id": "quality_threshold_opsc__0.8_and_ophc__0.01",
      "disambiguation_index": 0,
      "label": "quality thresholds OPSC > 0.8 and OPHC > 0.01",
      "aliases": [
        "quality thresholds OPSC > 0.8 and OPHC > 0.01"
      ],
      "types": [
        "thresholds"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Quality thresholds for Open Path (OP) rules learned by the OPRL algorithm, requiring a minimum quality score of 0.8 and an overall performance heuristic coefficient greater than 0.01.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "quality thresholds OPSC > 0.8 and OPHC > 0.01",
          "local_types": [
            "thresholds"
          ],
          "iri": "Entity-quality_threshold_opsc__0.8_and_ophc__0.01-Mention-1"
        }
      ],
      "relevance": 0.55908203125
    },
    "Entity-enterprise_and_public_knowledge_graph": {
      "node_id": "enterprise_and_public_knowledge_graph",
      "disambiguation_index": 0,
      "label": "Enterprise and public Knowledge Graphs",
      "aliases": [
        "Enterprise and public Knowledge Graphs"
      ],
      "types": [
        "knowledge graph",
        "knowledge domain",
        "concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A collection of interconnected data entities, including both enterprise-specific knowledge and publicly available information.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Enterprise and public Knowledge Graphs",
          "local_types": [
            "knowledge graph",
            "knowledge domain",
            "concept"
          ],
          "iri": "Entity-enterprise_and_public_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.55859375
    },
    "Entity-test_fact": {
      "node_id": "test_fact",
      "disambiguation_index": 0,
      "label": "test facts",
      "aliases": [
        "test facts"
      ],
      "types": [
        "information",
        "data",
        "test_facts",
        "data set",
        "information source",
        "facts"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of held-out facts used for evaluating and testing knowledge graph completion algorithms, particularly in scenarios where link predictors are deployed over working Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-3",
          "local_name": "test facts",
          "local_types": [
            "information",
            "facts",
            "data set",
            "test_facts"
          ],
          "iri": "Entity-test_fact-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-4-Sentence-1",
          "local_name": "test facts",
          "local_types": [
            "information",
            "data",
            "data set",
            "information source",
            "facts"
          ],
          "iri": "Entity-test_fact-Mention-2"
        }
      ],
      "relevance": 0.55859375
    },
    "Entity-user_parameter": {
      "node_id": "user_parameter",
      "disambiguation_index": 0,
      "label": "user parameters",
      "aliases": [
        "user parameters"
      ],
      "types": [
        "parameter",
        "input"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "User-defined input values for controlling the maximum length of rules and the minimum acceptable quality scores (OPSC and OPHC) in the OPRL algorithm.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "user parameters",
          "local_types": [
            "parameter",
            "input"
          ],
          "iri": "Entity-user_parameter-Mention-1"
        }
      ],
      "relevance": 0.55859375
    },
    "Entity-the_number": {
      "node_id": "the_number",
      "disambiguation_index": 0,
      "label": "The number",
      "aliases": [
        "The number"
      ],
      "types": [
        "quantity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The total quantity or count of possible rules that can be mined from a knowledge graph, which increases exponentially with rule length and affects the system's running time.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-3",
          "local_name": "The number",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-the_number-Mention-1"
        }
      ],
      "relevance": 0.55859375
    },
    "Entity-an_answer_to_the_question": {
      "node_id": "an_answer_to_the_question",
      "disambiguation_index": 0,
      "label": "an answer to the question",
      "aliases": [
        "an answer to the question"
      ],
      "types": [
        "answer"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A solution or entity that completes a query generated by an open path rule, potentially introducing new entities into the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-8",
          "local_name": "an answer to the question",
          "local_types": [
            "answer"
          ],
          "iri": "Entity-an_answer_to_the_question-Mention-1"
        }
      ],
      "relevance": 0.55810546875
    },
    "Entity-the_following_cp_rule__iscitizenof__x__y___isbornin__x__z___locatedin__z__y_": {
      "node_id": "the_following_cp_rule__iscitizenof__x__y___isbornin__x__z___locatedin__z__y_",
      "disambiguation_index": 0,
      "label": "the following CP rule: isCitizenOf(x,y) \u2190 isBornIn(x,z) \u2227 locatedIn(z,y)",
      "aliases": [
        "the following CP rule: isCitizenOf(x,y) \u2190 isBornIn(x,z) \u2227 locatedIn(z,y)"
      ],
      "types": [
        "rule",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A specific logic-based rule in a knowledge graph completion algorithm, which defines the relationship between being born in a location and having citizenship of that place.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "the following CP rule: isCitizenOf(x,y) \u2190 isBornIn(x,z) \u2227 locatedIn(z,y)",
          "local_types": [
            "rule",
            "logic"
          ],
          "iri": "Entity-the_following_cp_rule__iscitizenof__x__y___isbornin__x__z___locatedin__z__y_-Mention-1"
        }
      ],
      "relevance": 0.5576171875
    },
    "Entity-op_rule_for_a_target_predicate_p_i_and_it_inverse_p_i-1_in_pathfinding__": {
      "node_id": "op_rule_for_a_target_predicate_p_i_and_it_inverse_p_i-1_in_pathfinding__",
      "disambiguation_index": 0,
      "label": "OP rules for a target predicate P_i and its inverse P_i^-1 in PathFinding()",
      "aliases": [
        "we exhaustively generate OP rules for a target predicate P_i and its inverse P_i^-1 in PathFinding()",
        "OP rules for a target predicate P_i and its inverse P_i^-1 in PathFinding()"
      ],
      "types": [
        "predicate",
        "concept",
        "rule",
        "rule generation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "OP rules for a specific target predicate P_i and its inverse P_i^-1 generated by the algorithm OPRL",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-8",
          "local_name": "OP rules for a target predicate P_i and its inverse P_i^-1 in PathFinding()",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-op_rule_for_a_target_predicate_p_i_and_it_inverse_p_i-1_in_pathfinding__-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-8",
          "local_name": "we exhaustively generate OP rules for a target predicate P_i and its inverse P_i^-1 in PathFinding()",
          "local_types": [
            "rule generation",
            "predicate"
          ],
          "iri": "Entity-op_rule_for_a_target_predicate_p_i_and_it_inverse_p_i-1_in_pathfinding__-Mention-2"
        }
      ],
      "relevance": 0.55712890625
    },
    "Entity-in_our_case__an_automated_link_predictor_make_a_convenient_oracle": {
      "node_id": "in_our_case__an_automated_link_predictor_make_a_convenient_oracle",
      "disambiguation_index": 0,
      "label": "In our case, an automated link predictor makes a convenient oracle",
      "aliases": [
        "In our case, an automated link predictor makes a convenient oracle"
      ],
      "types": [
        "example",
        "tool"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An automated tool that serves as an oracle for generating relevant questions about missing links in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "In our case, an automated link predictor makes a convenient oracle",
          "local_types": [
            "example",
            "tool"
          ],
          "iri": "Entity-in_our_case__an_automated_link_predictor_make_a_convenient_oracle-Mention-1"
        }
      ],
      "relevance": 0.55712890625
    },
    "Entity-this_paper_(1)": {
      "node_id": "this_paper_(1)",
      "disambiguation_index": 1,
      "label": "this paper",
      "aliases": [
        "this paper"
      ],
      "types": [
        "research",
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "This paper refers to a research paper titled 'Active Knowledge Graph Completion' by Pouya Ghiasnezhad Omran, Kerry Taylor, Sergio Rodriguez Mendez, and Armin Haller.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-4",
          "local_name": "this paper",
          "local_types": [
            "research",
            "paper"
          ],
          "iri": "Entity-this_paper_(1)-Mention-1"
        }
      ],
      "relevance": 0.55712890625
    },
    "Entity-entity_(2)": {
      "node_id": "entity_(2)",
      "disambiguation_index": 2,
      "label": "entities",
      "aliases": [
        "entities"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities refer to a set of all entities and predicates in a knowledge graph (KG), which are used for computing the quality of candidate rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-4",
          "local_name": "entities",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-entity_(2)-Mention-1"
        }
      ],
      "relevance": 0.55712890625
    },
    "Entity-new_fact_is_needed_when_the_answer_is_not_known": {
      "node_id": "new_fact_is_needed_when_the_answer_is_not_known",
      "disambiguation_index": 0,
      "label": "new fact is needed when the answer is not known",
      "aliases": [
        "new fact is needed when the answer is not known"
      ],
      "types": [
        "requirement",
        "constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The requirement to generate relevant queries that identify missing facts, including entities that may be absent from the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "new fact is needed when the answer is not known",
          "local_types": [
            "requirement",
            "constraint"
          ],
          "iri": "Entity-new_fact_is_needed_when_the_answer_is_not_known-Mention-1"
        }
      ],
      "relevance": 0.556640625
    },
    "Entity-kg_k": {
      "node_id": "kg_k",
      "disambiguation_index": 0,
      "label": "KG K",
      "aliases": [
        "KG K"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "KG K refers to a knowledge graph dataset.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-2",
          "local_name": "KG K",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-kg_k-Mention-1"
        }
      ],
      "relevance": 0.556640625
    },
    "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity__and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b__.": {
      "node_id": "each_non-zero_element_of_this_vector_indicates_a_satisfying_entity__and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b__.",
      "disambiguation_index": 0,
      "label": "Each non-zero element of this vector indicates a satisfying entity, and the number of distinct entities is given by counting the number of non-zero elements in v(1)(B).",
      "aliases": [
        "Each non-zero element of this vector indicates a satisfying entity, and the number of distinct entities is given by counting the number of non-zero elements in v(1)(B)."
      ],
      "types": [
        "conclusion",
        "result"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The result or conclusion obtained from evaluating candidate rules based on their satisfiability with respect to the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-4",
          "local_name": "Each non-zero element of this vector indicates a satisfying entity, and the number of distinct entities is given by counting the number of non-zero elements in v(1)(B).",
          "local_types": [
            "conclusion",
            "result"
          ],
          "iri": "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity__and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b__.-Mention-1"
        }
      ],
      "relevance": 0.556640625
    },
    "Entity-oprl_rule": {
      "node_id": "oprl_rule",
      "disambiguation_index": 0,
      "label": "OPRL rules",
      "aliases": [
        "OPRL rules"
      ],
      "types": [
        "rule",
        "rule set",
        "rule-based system",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of rules or guidelines that govern a specific process, system, or decision-making framework.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "OPRL rules",
          "local_types": [
            "rule",
            "rule set",
            "rule-based system",
            "algorithm"
          ],
          "iri": "Entity-oprl_rule-Mention-1"
        }
      ],
      "relevance": 0.556640625
    },
    "Entity-relevant_question_are_provided_by_human_experimenter": {
      "node_id": "relevant_question_are_provided_by_human_experimenter",
      "disambiguation_index": 0,
      "label": "relevant questions are provided by human experimenters",
      "aliases": [
        "relevant questions are provided by human experimenters"
      ],
      "types": [
        "data source"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of questions or prompts used to evaluate a knowledge graph's ability to complete missing links.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "relevant questions are provided by human experimenters",
          "local_types": [
            "data source"
          ],
          "iri": "Entity-relevant_question_are_provided_by_human_experimenter-Mention-1"
        }
      ],
      "relevance": 0.55615234375
    },
    "Entity-for_sampling": {
      "node_id": "for_sampling",
      "disambiguation_index": 0,
      "label": "For sampling",
      "aliases": [
        "For sampling"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of parameters used for randomly selecting entities from a knowledge graph during the process of learning open-path rules.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-2",
          "local_name": "For sampling",
          "local_types": [
            "method"
          ],
          "iri": "Entity-for_sampling-Mention-1"
        }
      ],
      "relevance": 0.55615234375
    },
    "Entity-we_aim_to_generate_relevant_query_for_new_fact": {
      "node_id": "we_aim_to_generate_relevant_query_for_new_fact",
      "disambiguation_index": 0,
      "label": "we aim to generate relevant queries for new facts",
      "aliases": [
        "we aim to generate relevant queries for new facts"
      ],
      "types": [
        "goal"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating questions or queries that are pertinent and accurate in discovering novel information within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "we aim to generate relevant queries for new facts",
          "local_types": [
            "goal"
          ],
          "iri": "Entity-we_aim_to_generate_relevant_query_for_new_fact-Mention-1"
        }
      ],
      "relevance": 0.55615234375
    },
    "Entity-each_p_i_and_p_t_are_predicate_in_the_kg": {
      "node_id": "each_p_i_and_p_t_are_predicate_in_the_kg",
      "disambiguation_index": 0,
      "label": "Each P_i and P_t are predicates in the KG",
      "aliases": [
        "Each P_i and P_t are predicates in the KG"
      ],
      "types": [
        "predicate",
        "knowledge_graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A predicate representing a relationship or concept in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "Each P_i and P_t are predicates in the KG",
          "local_types": [
            "predicate",
            "knowledge_graph"
          ],
          "iri": "Entity-each_p_i_and_p_t_are_predicate_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.5556640625
    },
    "Entity-add_incpathfinding__k___p_t__p__a__k__r___to_r__.": {
      "node_id": "add_incpathfinding__k___p_t__p__a__k__r___to_r__.",
      "disambiguation_index": 0,
      "label": "Add IncPathFinding(K', P_t, P, A, k, R') to R'.",
      "aliases": [
        "Add IncPathFinding(K', P_t, P, A, k, R') to R'."
      ],
      "types": [
        "algorithm step"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The addition of a new path-finding step that extends existing rules by appending new bodies and tails.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "Add IncPathFinding(K', P_t, P, A, k, R') to R'.",
          "local_types": [
            "algorithm step"
          ],
          "iri": "Entity-add_incpathfinding__k___p_t__p__a__k__r___to_r__.-Mention-1"
        }
      ],
      "relevance": 0.5556640625
    },
    "Entity-a_new_fact_is_needed_when_the_answer_is_not_known": {
      "node_id": "a_new_fact_is_needed_when_the_answer_is_not_known",
      "disambiguation_index": 0,
      "label": "a new fact is needed when the answer is not known",
      "aliases": [
        "a new fact is needed when the answer is not known"
      ],
      "types": [
        "fact",
        "knowledge"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept of identifying missing facts in a knowledge graph, where the correct answer cannot be determined without additional information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "a new fact is needed when the answer is not known",
          "local_types": [
            "fact",
            "knowledge"
          ],
          "iri": "Entity-a_new_fact_is_needed_when_the_answer_is_not_known-Mention-1"
        }
      ],
      "relevance": 0.5556640625
    },
    "Entity-for_argument_embeddings": {
      "node_id": "for_argument_embeddings",
      "disambiguation_index": 0,
      "label": "For argument embeddings",
      "aliases": [
        "For argument embeddings"
      ],
      "types": [
        "method",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method of representing entities as vectors by averaging the embeddings of all the entities that occur as subjects or objects of a predicate in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "For argument embeddings",
          "local_types": [
            "method",
            "concept"
          ],
          "iri": "Entity-for_argument_embeddings-Mention-1"
        }
      ],
      "relevance": 0.5556640625
    },
    "Entity-open_path_head_coverage__ophc_": {
      "node_id": "open_path_head_coverage__ophc_",
      "disambiguation_index": 0,
      "label": "open path head coverage (OPHC)",
      "aliases": [
        "open path head coverage (OPHC)"
      ],
      "types": [
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A metric that measures the proportion of entities that can instantiate a rule's head part, out of all possible entities that satisfy the rule's body.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "open path head coverage (OPHC)",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-open_path_head_coverage__ophc_-Mention-1"
        }
      ],
      "relevance": 0.5546875
    },
    "Entity-the_author": {
      "node_id": "the_author",
      "disambiguation_index": 0,
      "label": "the authors",
      "aliases": [
        "the authors"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of researchers who developed the Poker knowledge graph, used as a benchmark dataset for evaluating their active knowledge graph completion algorithm.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-1",
          "local_name": "the authors",
          "local_types": [
            "author"
          ],
          "iri": "Entity-the_author-Mention-1"
        }
      ],
      "relevance": 0.5546875
    },
    "Entity-f0_loc": {
      "node_id": "f0_loc",
      "disambiguation_index": 0,
      "label": "f^0_loc",
      "aliases": [
        "f^0_loc"
      ],
      "types": [
        "function",
        "mathematical function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The co-occurrence fitness function for OP rules that estimates rule quality based on the similarity between predicate embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-1",
          "local_name": "f^0_loc",
          "local_types": [
            "function",
            "mathematical function"
          ],
          "iri": "Entity-f0_loc-Mention-1"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-the_number_of_entity_that_satisfy_the_body_of_a_rule": {
      "node_id": "the_number_of_entity_that_satisfy_the_body_of_a_rule",
      "disambiguation_index": 0,
      "label": "the number of entities that satisfy the body of a rule",
      "aliases": [
        "the number of entities that satisfy the body of a rule"
      ],
      "types": [
        "quantity",
        "entities",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The count of distinct entities that fulfill the conditions specified by the body of an Open Path (OP) rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-4-Sentence-3",
          "local_name": "the number of entities that satisfy the body of a rule",
          "local_types": [
            "quantity",
            "entities",
            "rule"
          ],
          "iri": "Entity-the_number_of_entity_that_satisfy_the_body_of_a_rule-Mention-1"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-named_predicate__or_all_predicate_": {
      "node_id": "named_predicate__or_all_predicate_",
      "disambiguation_index": 0,
      "label": "named predicate (or all predicates)",
      "aliases": [
        "named predicate (or all predicates)"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of predicate that can be used for active knowledge graph completion, where named predicates (or all predicates) are mined to generate relevant questions or queries about missing links in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "named predicate (or all predicates)",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-named_predicate__or_all_predicate_-Mention-1"
        }
      ],
      "relevance": 0.55419921875
    },
    "Entity-query_of_unclear_origin": {
      "node_id": "query_of_unclear_origin",
      "disambiguation_index": 0,
      "label": "queries of unclear origin",
      "aliases": [
        "queries of unclear origin"
      ],
      "types": [
        "query",
        "unknown query",
        "unclassified question"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Unclear-origin queries are questions or requests for information that cannot be definitively answered by existing knowledge in a Knowledge Graph, often used as test cases for evaluating rule-based completion methods.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "queries of unclear origin",
          "local_types": [
            "query",
            "unknown query",
            "unclassified question"
          ],
          "iri": "Entity-query_of_unclear_origin-Mention-1"
        }
      ],
      "relevance": 0.5537109375
    },
    "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity": {
      "node_id": "a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity",
      "disambiguation_index": 0,
      "label": "a scoring function over the embedded representations of its predicate and entities",
      "aliases": [
        "a scoring function over the embedded representations of its predicate and entities"
      ],
      "types": [
        "scoring function",
        "predicate",
        "entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A heuristic function used for mining Open Path rules, which defines the plausibility of a fact based on the embedded representations of its predicate and entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "a scoring function over the embedded representations of its predicate and entities",
          "local_types": [
            "scoring function",
            "predicate",
            "entities"
          ],
          "iri": "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity-Mention-1"
        }
      ],
      "relevance": 0.5537109375
    },
    "Entity-universal_quantification_of_all_variable_at_the_outside": {
      "node_id": "universal_quantification_of_all_variable_at_the_outside",
      "disambiguation_index": 0,
      "label": "universal quantification of all variables at the outside",
      "aliases": [
        "universal quantification of all variables at the outside"
      ],
      "types": [
        "quantification"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept of universal quantification of all variables at the outside, referring to a type of closed path (CP) rules that are used for knowledge graph completion and rule learning.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "universal quantification of all variables at the outside",
          "local_types": [
            "quantification"
          ],
          "iri": "Entity-universal_quantification_of_all_variable_at_the_outside-Mention-1"
        }
      ],
      "relevance": 0.5537109375
    },
    "Entity-rule_with_free_variable_(1)": {
      "node_id": "rule_with_free_variable_(1)",
      "disambiguation_index": 1,
      "label": "rules with free variables",
      "aliases": [
        "rules with free variables"
      ],
      "types": [
        "variable",
        "mathematics"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of mathematical rule that contains free variables, allowing for more flexible and expressive knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-2",
          "local_name": "rules with free variables",
          "local_types": [
            "variable",
            "mathematics"
          ],
          "iri": "Entity-rule_with_free_variable_(1)-Mention-1"
        }
      ],
      "relevance": 0.5537109375
    },
    "Entity-a_rule_language_to_express_rule": {
      "node_id": "a_rule_language_to_express_rule",
      "disambiguation_index": 0,
      "label": "a rule language to express rules",
      "aliases": [
        "a rule language to express rules"
      ],
      "types": [
        "language",
        "rule set"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A programming language or formal system that allows users to define and express rules, used in rule-based knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-1",
          "local_name": "a rule language to express rules",
          "local_types": [
            "language",
            "rule set"
          ],
          "iri": "Entity-a_rule_language_to_express_rule-Mention-1"
        }
      ],
      "relevance": 0.55322265625
    },
    "Entity-two_main_category": {
      "node_id": "two_main_category",
      "disambiguation_index": 0,
      "label": "Two main categories",
      "aliases": [
        "Two main categories"
      ],
      "types": [
        "categories"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The two main categories referred to are types of embedding methods used in representation learning for knowledge graph completion, specifically translation-based embeddings and compositional embeddings.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "Two main categories",
          "local_types": [
            "categories"
          ],
          "iri": "Entity-two_main_category-Mention-1"
        }
      ],
      "relevance": 0.55322265625
    },
    "Entity-section_7__we_present_the_work_in_the_literature_related_to_link_prediction_and_active_knowledge_graph_completion": {
      "node_id": "section_7__we_present_the_work_in_the_literature_related_to_link_prediction_and_active_knowledge_graph_completion",
      "disambiguation_index": 0,
      "label": "Section 7, we present the work in the literature related to link prediction and active knowledge graph completion",
      "aliases": [
        "Section 7, we present the work in the literature related to link prediction and active knowledge graph completion"
      ],
      "types": [
        "section",
        "part-of-paper",
        "literature-review",
        "research-field"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The section that presents a review of existing research on link prediction and active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-6",
          "local_name": "Section 7, we present the work in the literature related to link prediction and active knowledge graph completion",
          "local_types": [
            "section",
            "part-of-paper",
            "literature-review",
            "research-field"
          ],
          "iri": "Entity-section_7__we_present_the_work_in_the_literature_related_to_link_prediction_and_active_knowledge_graph_completion-Mention-1"
        }
      ],
      "relevance": 0.55224609375
    },
    "Entity-rlvlr_": {
      "node_id": "rlvlr_",
      "disambiguation_index": 0,
      "label": "RLvLR*",
      "aliases": [
        "RLvLR*"
      ],
      "types": [
        "modified method",
        "algorithm variant",
        "model",
        "measure",
        "machine learning model",
        "comparable to OPSC",
        "algorithm",
        "method",
        "system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "RLvLR*: A rule-based link predictor that generates queries by translating each fact into two queries, freeing subject and object entities respectively.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-2",
          "local_name": "RLvLR*",
          "local_types": [
            "modified method",
            "algorithm variant",
            "machine learning model",
            "algorithm",
            "method",
            "system"
          ],
          "iri": "Entity-rlvlr_-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "RLvLR*",
          "local_types": [
            "model",
            "method",
            "algorithm"
          ],
          "iri": "Entity-rlvlr_-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-2",
          "local_name": "RLvLR*",
          "local_types": [
            "modified method",
            "algorithm variant",
            "model",
            "algorithm",
            "method",
            "system"
          ],
          "iri": "Entity-rlvlr_-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-3",
          "local_name": "RLvLR*",
          "local_types": [
            "measure",
            "comparable to OPSC",
            "method",
            "algorithm"
          ],
          "iri": "Entity-rlvlr_-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "RLvLR*",
          "local_types": [
            "model",
            "machine learning model",
            "algorithm"
          ],
          "iri": "Entity-rlvlr_-Mention-5"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-7",
          "local_name": "RLvLR*",
          "local_types": [
            "modified method",
            "system",
            "algorithm variant",
            "algorithm"
          ],
          "iri": "Entity-rlvlr_-Mention-6"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-rescal_learns_the_two_set_of_embeddings__vector__e_i__and_matrix__p_k___by_minimizing_a_loss_function_defined_over_the_product_of_the_entity_and_predicate_embeddings_.": {
      "node_id": "rescal_learns_the_two_set_of_embeddings__vector__e_i__and_matrix__p_k___by_minimizing_a_loss_function_defined_over_the_product_of_the_entity_and_predicate_embeddings_.",
      "disambiguation_index": 0,
      "label": "RESCAL learns the two sets of embeddings, vectors {e_i} and matrices {P_k}, by minimizing a loss function defined over the product of the entity and predicate embeddings.",
      "aliases": [
        "RESCAL learns the two sets of embeddings, vectors {e_i} and matrices {P_k}, by minimizing a loss function defined over the product of the entity and predicate embeddings."
      ],
      "types": [
        "algorithm",
        "embedding_learning_method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method for learning embeddings that represents entities as vectors.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-5",
          "local_name": "RESCAL learns the two sets of embeddings, vectors {e_i} and matrices {P_k}, by minimizing a loss function defined over the product of the entity and predicate embeddings.",
          "local_types": [
            "algorithm",
            "embedding_learning_method"
          ],
          "iri": "Entity-rescal_learns_the_two_set_of_embeddings__vector__e_i__and_matrix__p_k___by_minimizing_a_loss_function_defined_over_the_product_of_the_entity_and_predicate_embeddings_.-Mention-1"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-_local_co-occurrence_fitness_": {
      "node_id": "_local_co-occurrence_fitness_",
      "disambiguation_index": 0,
      "label": "(local co-occurrence fitness)",
      "aliases": [
        "(local co-occurrence fitness)",
        "(co-occurrence fitness)"
      ],
      "types": [
        "term",
        "mathematical concept",
        "concept",
        "fitness",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure that estimates the quality of Open Path rules by capturing the weight of connections between sequential entities along a path, based on pairwise local occurrences and similarity functions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "(local co-occurrence fitness)",
          "local_types": [
            "fitness",
            "term",
            "concept",
            "mathematical concept"
          ],
          "iri": "Entity-_local_co-occurrence_fitness_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-15-Sentence-1",
          "local_name": "(co-occurrence fitness)",
          "local_types": [
            "notation",
            "fitness",
            "term",
            "concept"
          ],
          "iri": "Entity-_local_co-occurrence_fitness_-Mention-2"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-although_this_requires_answer_source_beyond_current_link_predictor": {
      "node_id": "although_this_requires_answer_source_beyond_current_link_predictor",
      "disambiguation_index": 0,
      "label": "although this requires answer sources beyond current link predictors",
      "aliases": [
        "although this requires answer sources beyond current link predictors"
      ],
      "types": [
        "requirement"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The requirement to generate relevant questions or queries that can introduce new, previously unknown entities into a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-4",
          "local_name": "although this requires answer sources beyond current link predictors",
          "local_types": [
            "requirement"
          ],
          "iri": "Entity-although_this_requires_answer_source_beyond_current_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-our_purpose": {
      "node_id": "our_purpose",
      "disambiguation_index": 0,
      "label": "our purposes",
      "aliases": [
        "our purposes"
      ],
      "types": [
        "goal"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The goal of using RESCAL embeddings in a heuristic function for mining OP rules, which is counter-productive compared to link prediction.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-8",
          "local_name": "our purposes",
          "local_types": [
            "goal"
          ],
          "iri": "Entity-our_purpose-Mention-1"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-a_pair_of_entity_(2)": {
      "node_id": "a_pair_of_entity_(2)",
      "disambiguation_index": 2,
      "label": "a pair of entities",
      "aliases": [
        "a pair of entities"
      ],
      "types": [
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A pair of entities (e, e') that satisfies the body of an open path rule r, denoted by body_r(e, e'), if there exist entities e_1, ..., e_{n-1} in the KG such that P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') are facts in the KG.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "a pair of entities",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-a_pair_of_entity_(2)-Mention-1"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-denoted_body_r__e__e___(1)": {
      "node_id": "denoted_body_r__e__e___(1)",
      "disambiguation_index": 1,
      "label": "denoted body_r(e, e')",
      "aliases": [
        "denoted body_r(e, e')"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A pair of entities (e, e') that satisfies the body of an open path rule r, denoted by body_r(e, e'), if there exist entities e_1, ..., e_{n-1} in the KG such that P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') are facts in the KG.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "denoted body_r(e, e')",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-denoted_body_r__e__e___(1)-Mention-1"
        }
      ],
      "relevance": 0.5517578125
    },
    "Entity-e2_and_e3": {
      "node_id": "e2_and_e3",
      "disambiguation_index": 0,
      "label": "e2 and e3",
      "aliases": [
        "e2 and e3"
      ],
      "types": [
        "entity",
        "reference"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of distinct entities that satisfy the head of an OP rule, specifically {e2, e3}, with a count of 2.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-4",
          "local_name": "e2 and e3",
          "local_types": [
            "entity",
            "reference"
          ],
          "iri": "Entity-e2_and_e3-Mention-1"
        }
      ],
      "relevance": 0.55126953125
    },
    "Entity-learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation": {
      "node_id": "learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation",
      "disambiguation_index": 0,
      "label": "Learning and operating on latent representations benefits from the use of unobserved but intrinsic properties of entities and their relations",
      "aliases": [
        "Learning and operating on latent representations benefits from the use of unobserved but intrinsic properties of entities and their relations"
      ],
      "types": [
        "benefit",
        "latent representation",
        "entity",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Representation learning methods, such as RESCAL, which embed entities and predicates into a low-dimensional vector space for tasks like link prediction, entity resolution, and link-based clustering.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "Learning and operating on latent representations benefits from the use of unobserved but intrinsic properties of entities and their relations",
          "local_types": [
            "benefit",
            "latent representation",
            "entity",
            "relation"
          ],
          "iri": "Entity-learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation-Mention-1"
        }
      ],
      "relevance": 0.55078125
    },
    "Entity-the_compactness_of_the_latter_embeddings": {
      "node_id": "the_compactness_of_the_latter_embeddings",
      "disambiguation_index": 0,
      "label": "The compactness of the latter embeddings",
      "aliases": [
        "The compactness of the latter embeddings"
      ],
      "types": [
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "RESCAL embedding representations, which are useful for link prediction but not suitable for our purposes in mining OP rules.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-8",
          "local_name": "The compactness of the latter embeddings",
          "local_types": [
            "property"
          ],
          "iri": "Entity-the_compactness_of_the_latter_embeddings-Mention-1"
        }
      ],
      "relevance": 0.55078125
    },
    "Entity-a_set_of_entity": {
      "node_id": "a_set_of_entity",
      "disambiguation_index": 0,
      "label": "a set of entities",
      "aliases": [
        "a set of entities"
      ],
      "types": [
        "set",
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A collection of entities relevant to a specific target predicate, including those directly connected and indirectly related through other predicates, used as input for the OPRL algorithm.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-6",
          "local_name": "a set of entities",
          "local_types": [
            "set",
            "entities"
          ],
          "iri": "Entity-a_set_of_entity-Mention-1"
        }
      ],
      "relevance": 0.55078125
    },
    "Entity-or": {
      "node_id": "or",
      "disambiguation_index": 0,
      "label": "Or",
      "aliases": [
        "Or"
      ],
      "types": [
        "question"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The option to either pose queries that predict missing links or generate all possible queries without considering their relevance to a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-3",
          "local_name": "Or",
          "local_types": [
            "question"
          ],
          "iri": "Entity-or-Mention-1"
        }
      ],
      "relevance": 0.55078125
    },
    "Entity-a_rule-based_link_predictor_whose_output_is_modified_to_produce_question": {
      "node_id": "a_rule-based_link_predictor_whose_output_is_modified_to_produce_question",
      "disambiguation_index": 0,
      "label": "a rule-based link predictor whose output is modified to produce questions",
      "aliases": [
        "a rule-based link predictor whose output is modified to produce questions"
      ],
      "types": [
        "predictor"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A rule-based link predictor that generates queries as its output, which are then used for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-2",
          "local_name": "a rule-based link predictor whose output is modified to produce questions",
          "local_types": [
            "predictor"
          ],
          "iri": "Entity-a_rule-based_link_predictor_whose_output_is_modified_to_produce_question-Mention-1"
        }
      ],
      "relevance": 0.55029296875
    },
    "Entity-identifying_a_missing_fact": {
      "node_id": "identifying_a_missing_fact",
      "disambiguation_index": 0,
      "label": "Identifying a missing fact",
      "aliases": [
        "Identifying a missing fact"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of discovering and recognizing the existence of a previously unknown or unrecorded piece of information in a knowledge graph, often requiring the generation of open-ended questions to guide link prediction.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-2",
          "local_name": "Identifying a missing fact",
          "local_types": [
            "task"
          ],
          "iri": "Entity-identifying_a_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.55029296875
    },
    "Entity-an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e__": {
      "node_id": "an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e__",
      "disambiguation_index": 0,
      "label": "an instance of the rule body such as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')",
      "aliases": [
        "an instance of the rule body such as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')"
      ],
      "types": [
        "rule body",
        "instance",
        "logical expression"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific example or instance of a rule body that can induce queries about missing links in a knowledge graph, given the existence of certain facts and relationships.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "an instance of the rule body such as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')",
          "local_types": [
            "rule body",
            "instance",
            "logical expression"
          ],
          "iri": "Entity-an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e__-Mention-1"
        }
      ],
      "relevance": 0.55029296875
    },
    "Entity-co-occurrence_capture_the_weight_of_connection_of_sequential_entity_along_the_path": {
      "node_id": "co-occurrence_capture_the_weight_of_connection_of_sequential_entity_along_the_path",
      "disambiguation_index": 0,
      "label": "co-occurrence captures the weight of connections of sequential entities along the path",
      "aliases": [
        "co-occurrence captures the weight of connections of sequential entities along the path",
        "Co-occurrence"
      ],
      "types": [
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept that measures the similarity between predicate embeddings, capturing the weight of connections between sequential entities along a path in an open-path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-17-Sentence-1",
          "local_name": "co-occurrence captures the weight of connections of sequential entities along the path",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-co-occurrence_capture_the_weight_of_connection_of_sequential_entity_along_the_path-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-14-Sentence-1",
          "local_name": "Co-occurrence",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-co-occurrence_capture_the_weight_of_connection_of_sequential_entity_along_the_path-Mention-2"
        }
      ],
      "relevance": 0.5498046875
    },
    "Entity-_open_path_fitness_": {
      "node_id": "_open_path_fitness_",
      "disambiguation_index": 0,
      "label": "(open path fitness)",
      "aliases": [
        "(open path fitness)"
      ],
      "types": [
        "fitness",
        "concept",
        "fitness function",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A quality estimation function that uses both entity and predicate embeddings to represent the overall rule from the perspective of predicates, capturing the weight of connections along a path between entities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-7",
          "local_name": "(open path fitness)",
          "local_types": [
            "fitness",
            "concept",
            "fitness function",
            "metric"
          ],
          "iri": "Entity-_open_path_fitness_-Mention-1"
        }
      ],
      "relevance": 0.5498046875
    },
    "Entity-they_generalise_well__that_is__they_explain_many_fact": {
      "node_id": "they_generalise_well__that_is__they_explain_many_fact",
      "disambiguation_index": 0,
      "label": "they generalise well, that is, they explain many facts",
      "aliases": [
        "they generalise well, that is, they explain many facts"
      ],
      "types": [
        "property"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A closed existential rule in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-1",
          "local_name": "they generalise well, that is, they explain many facts",
          "local_types": [
            "property"
          ],
          "iri": "Entity-they_generalise_well__that_is__they_explain_many_fact-Mention-1"
        }
      ],
      "relevance": 0.5498046875
    },
    "Entity-the_four_benchmark_datasets_given_in_table_1": {
      "node_id": "the_four_benchmark_datasets_given_in_table_1",
      "disambiguation_index": 0,
      "label": "the four benchmark datasets given in Table 1",
      "aliases": [
        "the four benchmark datasets given in Table 1"
      ],
      "types": [
        "dataset",
        "datasets",
        "resource"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Four benchmark datasets used to evaluate OPRL's performance, including FB15K SELECTED (derived from Freebase), YAGO2 core, Wikidata, and a synthetic Poker dataset.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-1",
          "local_name": "the four benchmark datasets given in Table 1",
          "local_types": [
            "dataset",
            "datasets",
            "resource"
          ],
          "iri": "Entity-the_four_benchmark_datasets_given_in_table_1-Mention-1"
        }
      ],
      "relevance": 0.5498046875
    },
    "Entity-opsupp__opsc__ophc": {
      "node_id": "opsupp__opsc__ophc",
      "disambiguation_index": 0,
      "label": "OPsupp, OPSC, OPHC",
      "aliases": [
        "OPsupp, OPSC, OPHC"
      ],
      "types": [
        "notation",
        "evaluation measures",
        "metrics",
        "open path"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of metrics used to evaluate the quality of open path rules, including support (OPsupp), standard confidence (OPSC), and head coverage (OPHC).",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-1",
          "local_name": "OPsupp, OPSC, OPHC",
          "local_types": [
            "notation",
            "evaluation measures",
            "metrics",
            "open path"
          ],
          "iri": "Entity-opsupp__opsc__ophc-Mention-1"
        }
      ],
      "relevance": 0.54931640625
    },
    "Entity-we_define_the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query": {
      "node_id": "we_define_the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query",
      "disambiguation_index": 0,
      "label": "We define the confidence degree (CD) of such a query to be the maximum OPSC of all the rules inducing the query",
      "aliases": [
        "We define the confidence degree (CD) of such a query to be the maximum OPSC of all the rules inducing the query"
      ],
      "types": [
        "definition",
        "confidence"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The confidence degree (CD) of a query in active knowledge graph completion, defined as the maximum OPSC of all rules inducing the query.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "We define the confidence degree (CD) of such a query to be the maximum OPSC of all the rules inducing the query",
          "local_types": [
            "definition",
            "confidence"
          ],
          "iri": "Entity-we_define_the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query-Mention-1"
        }
      ],
      "relevance": 0.54931640625
    },
    "Entity-massive_kg": {
      "node_id": "massive_kg",
      "disambiguation_index": 0,
      "label": "massive KGs",
      "aliases": [
        "massive KGs"
      ],
      "types": [
        "database",
        "datasets",
        "knowledge graph",
        "data set",
        "knowledge graphs"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Large-scale knowledge graph databases or datasets",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-2",
          "local_name": "massive KGs",
          "local_types": [
            "knowledge graph",
            "database",
            "datasets",
            "knowledge graphs"
          ],
          "iri": "Entity-massive_kg-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-7-Sentence-2",
          "local_name": "massive KGs",
          "local_types": [
            "knowledge graph",
            "data set"
          ],
          "iri": "Entity-massive_kg-Mention-2"
        }
      ],
      "relevance": 0.548828125
    },
    "Entity-to_find_distinct_entity__we_sum_each_row_corresponding_to_each_value_for_the_first_argument_to_obtain_the_vector_v__1___b__.": {
      "node_id": "to_find_distinct_entity__we_sum_each_row_corresponding_to_each_value_for_the_first_argument_to_obtain_the_vector_v__1___b__.",
      "disambiguation_index": 0,
      "label": "To find distinct entities, we sum each row corresponding to each value for the first argument to obtain the vector v(1)(B).",
      "aliases": [
        "To find distinct entities, we sum each row corresponding to each value for the first argument to obtain the vector v(1)(B)."
      ],
      "types": [
        "instruction",
        "step-by-step guide"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of finding distinct entities in a knowledge graph by summing each row of an adjacency matrix representing the graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-3",
          "local_name": "To find distinct entities, we sum each row corresponding to each value for the first argument to obtain the vector v(1)(B).",
          "local_types": [
            "instruction",
            "step-by-step guide"
          ],
          "iri": "Entity-to_find_distinct_entity__we_sum_each_row_corresponding_to_each_value_for_the_first_argument_to_obtain_the_vector_v__1___b__.-Mention-1"
        }
      ],
      "relevance": 0.548828125
    },
    "Entity-our_test_set": {
      "node_id": "our_test_set",
      "disambiguation_index": 0,
      "label": "our test set",
      "aliases": [
        "the test set",
        "our test set"
      ],
      "types": [
        "dataset",
        "test set"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The dataset used to evaluate the performance of OPRL's query generation algorithm.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "our test set",
          "local_types": [
            "dataset",
            "test set"
          ],
          "iri": "Entity-our_test_set-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "the test set",
          "local_types": [
            "dataset",
            "test set"
          ],
          "iri": "Entity-our_test_set-Mention-2"
        }
      ],
      "relevance": 0.548828125
    },
    "Entity-sc_from_1_to_0.1__the_minimum_and_default_": {
      "node_id": "sc_from_1_to_0.1__the_minimum_and_default_",
      "disambiguation_index": 0,
      "label": "SC from 1 to 0.1 (the minimum and default)",
      "aliases": [
        "SC from 1 to 0.1 (the minimum and default)"
      ],
      "types": [
        "parameter",
        "setting"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum threshold for selecting Open Path rules or queries generated by OPRL, with a range from 1 (most confident) to 0.1 (least confident)",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-2",
          "local_name": "SC from 1 to 0.1 (the minimum and default)",
          "local_types": [
            "parameter",
            "setting"
          ],
          "iri": "Entity-sc_from_1_to_0.1__the_minimum_and_default_-Mention-1"
        }
      ],
      "relevance": 0.548828125
    },
    "Entity-fact_in_the_kg": {
      "node_id": "fact_in_the_kg",
      "disambiguation_index": 0,
      "label": "facts in the KG",
      "aliases": [
        "facts in the KG",
        "facts from your KG"
      ],
      "types": [
        "information units",
        "KG facts",
        "data point",
        "facts",
        "information unit",
        "data points"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of data points or information units stored within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "facts in the KG",
          "local_types": [
            "data points",
            "information units"
          ],
          "iri": "Entity-fact_in_the_kg-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-7-Sentence-2",
          "local_name": "facts from your KG",
          "local_types": [
            "data point",
            "facts",
            "information unit",
            "KG facts"
          ],
          "iri": "Entity-fact_in_the_kg-Mention-2"
        }
      ],
      "relevance": 0.54833984375
    },
    "Entity-yago2_induces_fewer_rule_and_ha_much_weaker_performance_because_it_ha_significantly_fewer_repeatable_pattern": {
      "node_id": "yago2_induces_fewer_rule_and_ha_much_weaker_performance_because_it_ha_significantly_fewer_repeatable_pattern",
      "disambiguation_index": 0,
      "label": "YAGO2 induces fewer rules and has much weaker performance because it has significantly fewer repeatable patterns",
      "aliases": [
        "YAGO2 induces fewer rules and has much weaker performance because it has significantly fewer repeatable patterns"
      ],
      "types": [
        "observation",
        "pattern recognition"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "YAGO2, a knowledge graph, which exhibits lower rule induction and poorer performance due to its scarcity of repeatable patterns.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "YAGO2 induces fewer rules and has much weaker performance because it has significantly fewer repeatable patterns",
          "local_types": [
            "observation",
            "pattern recognition"
          ],
          "iri": "Entity-yago2_induces_fewer_rule_and_ha_much_weaker_performance_because_it_ha_significantly_fewer_repeatable_pattern-Mention-1"
        }
      ],
      "relevance": 0.54833984375
    },
    "Entity-mined_rule": {
      "node_id": "mined_rule",
      "disambiguation_index": 0,
      "label": "mined rules",
      "aliases": [
        "mined rules"
      ],
      "types": [
        "knowledge base",
        "rule set",
        "rules",
        "knowledge discovery"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of extracted or derived rules from data, often obtained through knowledge discovery processes.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "mined rules",
          "local_types": [
            "rules",
            "knowledge base"
          ],
          "iri": "Entity-mined_rule-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-2",
          "local_name": "mined rules",
          "local_types": [
            "knowledge discovery"
          ],
          "iri": "Entity-mined_rule-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "mined rules",
          "local_types": [
            "rule set",
            "knowledge base"
          ],
          "iri": "Entity-mined_rule-Mention-3"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "mined rules",
          "local_types": [
            "rule set",
            "knowledge discovery"
          ],
          "iri": "Entity-mined_rule-Mention-4"
        }
      ],
      "relevance": 0.5478515625
    },
    "Entity-incpathfinding__": {
      "node_id": "incpathfinding__",
      "disambiguation_index": 0,
      "label": "IncPathFinding()",
      "aliases": [
        "IncPathFinding()"
      ],
      "types": [
        "function",
        "knowledge generation technique",
        "algorithmic process",
        "algorithm",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A function or algorithm that generates knowledge through pathfinding and rule extension.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-12",
          "local_name": "IncPathFinding()",
          "local_types": [
            "function",
            "knowledge generation technique",
            "algorithmic process",
            "algorithm",
            "method"
          ],
          "iri": "Entity-incpathfinding__-Mention-1"
        }
      ],
      "relevance": 0.54736328125
    },
    "Entity-then_we_extend_the_original_rule": {
      "node_id": "then_we_extend_the_original_rule",
      "disambiguation_index": 0,
      "label": "then we extend the original rule",
      "aliases": [
        "then we extend the original rule"
      ],
      "types": [
        "action",
        "rule extension"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of extending an existing OP (Open Path) rule with a new body by appending predicates to its original tail.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-14",
          "local_name": "then we extend the original rule",
          "local_types": [
            "action",
            "rule extension"
          ],
          "iri": "Entity-then_we_extend_the_original_rule-Mention-1"
        }
      ],
      "relevance": 0.54736328125
    },
    "Entity-the_quality": {
      "node_id": "the_quality",
      "disambiguation_index": 0,
      "label": "the quality",
      "aliases": [
        "the quality"
      ],
      "types": [
        "quality"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The quality is an estimate used in rule learning for knowledge graph completion, derived from embedding representations and measuring the co-occurrence of entities along a path or the product of predicate embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "the quality",
          "local_types": [
            "quality"
          ],
          "iri": "Entity-the_quality-Mention-1"
        }
      ],
      "relevance": 0.546875
    },
    "Entity-sampled_kg": {
      "node_id": "sampled_kg",
      "disambiguation_index": 0,
      "label": "sampled KG",
      "aliases": [
        "sampled KG"
      ],
      "types": [
        "knowledge graph",
        "dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A subset of a knowledge graph dataset",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "sampled KG",
          "local_types": [
            "knowledge graph",
            "dataset"
          ],
          "iri": "Entity-sampled_kg-Mention-1"
        }
      ],
      "relevance": 0.54638671875
    },
    "Entity-pairwise_local_occurrence": {
      "node_id": "pairwise_local_occurrence",
      "disambiguation_index": 0,
      "label": "pairwise local occurrences",
      "aliases": [
        "pairwise local occurrences"
      ],
      "types": [
        "phenomenon"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept of pairwise local occurrences refers to the co-occurrence fitness function that estimates the quality of open path rules by aggregating the similarity between predicate embeddings along a chain of predicates in an OP rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-14-Sentence-1",
          "local_name": "pairwise local occurrences",
          "local_types": [
            "phenomenon"
          ],
          "iri": "Entity-pairwise_local_occurrence-Mention-1"
        }
      ],
      "relevance": 0.54541015625
    },
    "Entity-closed_rule": {
      "node_id": "closed_rule",
      "disambiguation_index": 0,
      "label": "Closed rules",
      "aliases": [
        "Closed rules"
      ],
      "types": [
        "rule-based system",
        "mathematical structure",
        "knowledge representation",
        "computational rule",
        "concept",
        "logic concept",
        "pattern recognition",
        "rule type",
        "conceptual framework",
        "rule",
        "constraint type",
        "rule system",
        "algorithm",
        "rule set",
        "algorithmic concept",
        "type of rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of predefined and fixed guidelines or principles that determine specific outcomes or actions.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "Closed rules",
          "local_types": [
            "rule-based system",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-closed_rule-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "Closed rules",
          "local_types": [
            "rule type",
            "rule system",
            "knowledge representation",
            "logic concept"
          ],
          "iri": "Entity-closed_rule-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "Closed rules",
          "local_types": [
            "rule-based system",
            "rule"
          ],
          "iri": "Entity-closed_rule-Mention-3"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "Closed rules",
          "local_types": [
            "mathematical structure",
            "concept",
            "pattern recognition",
            "rule type",
            "conceptual framework",
            "constraint type",
            "algorithmic concept",
            "type of rule"
          ],
          "iri": "Entity-closed_rule-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-2",
          "local_name": "Closed rules",
          "local_types": [
            "rule set",
            "rule",
            "computational rule"
          ],
          "iri": "Entity-closed_rule-Mention-5"
        }
      ],
      "relevance": 0.544921875
    },
    "Entity-p2__z0__z1___p3__z1__y_": {
      "node_id": "p2__z0__z1___p3__z1__y_",
      "disambiguation_index": 0,
      "label": "P2(z0, z1) \u2227 P3(z1, y)",
      "aliases": [
        "P2(z0, z1) \u2227 P3(z1, y)"
      ],
      "types": [
        "formula",
        "logic expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An Open Path rule in the format of 'P1(x,z0)' \u2190 'P2(z0,z1)' \u2227 'P3(z1,y)', where x is an unknown entity and y is another unknown entity.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "P2(z0, z1) \u2227 P3(z1, y)",
          "local_types": [
            "formula",
            "logic expression"
          ],
          "iri": "Entity-p2__z0__z1___p3__z1__y_-Mention-1"
        }
      ],
      "relevance": 0.544921875
    },
    "Entity-an_alternative_quality_estimation_function": {
      "node_id": "an_alternative_quality_estimation_function",
      "disambiguation_index": 0,
      "label": "an alternative quality estimation function",
      "aliases": [
        "an alternative quality estimation function"
      ],
      "types": [
        "function",
        "quality estimation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An alternative quality estimation function that uses both entity and predicate embeddings to estimate the rule quality of an Open Path (OP) rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-17-Sentence-2",
          "local_name": "an alternative quality estimation function",
          "local_types": [
            "function",
            "quality estimation"
          ],
          "iri": "Entity-an_alternative_quality_estimation_function-Mention-1"
        }
      ],
      "relevance": 0.544921875
    },
    "Entity-then_the_support_of_r_count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg_.": {
      "node_id": "then_the_support_of_r_count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg_.",
      "disambiguation_index": 0,
      "label": "Then the support of r counts the head (target) instances for which the rule body and head are both satisfied in the KG.",
      "aliases": [
        "Then the support of r counts the head (target) instances for which the rule body and head are both satisfied in the KG."
      ],
      "types": [
        "definition",
        "concept",
        "support"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure that calculates the number of instances where a rule's conditions are met.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-6",
          "local_name": "Then the support of r counts the head (target) instances for which the rule body and head are both satisfied in the KG.",
          "local_types": [
            "definition",
            "concept",
            "support"
          ],
          "iri": "Entity-then_the_support_of_r_count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg_.-Mention-1"
        }
      ],
      "relevance": 0.54443359375
    },
    "Entity-a_significant_number_of_obsolete_and_low-quality_rule": {
      "node_id": "a_significant_number_of_obsolete_and_low-quality_rule",
      "disambiguation_index": 0,
      "label": "a significant number of obsolete and low-quality rules",
      "aliases": [
        "a significant number of obsolete and low-quality rules"
      ],
      "types": [
        "rules",
        "quality"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of obsolete and low-quality rules that may be included among the candidate rules mined from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "a significant number of obsolete and low-quality rules",
          "local_types": [
            "rules",
            "quality"
          ],
          "iri": "Entity-a_significant_number_of_obsolete_and_low-quality_rule-Mention-1"
        }
      ],
      "relevance": 0.54443359375
    },
    "Entity-this_can_be_obtained_directly_from_the_matrix_product_b__a__p1__a__p2__..._a__pm_": {
      "node_id": "this_can_be_obtained_directly_from_the_matrix_product_b__a__p1__a__p2__..._a__pm_",
      "disambiguation_index": 0,
      "label": "This can be obtained directly from the matrix product B = A(P1) A(P2) ... A(Pm)",
      "aliases": [
        "This can be obtained directly from the matrix product B = A(P1) A(P2) ... A(Pm)"
      ],
      "types": [
        "methodology",
        "mathematics",
        "sentence",
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The number of entities that satisfy the first argument position in the body of an OP rule",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-2",
          "local_name": "This can be obtained directly from the matrix product B = A(P1) A(P2) ... A(Pm)",
          "local_types": [
            "methodology",
            "mathematics",
            "sentence",
            "description"
          ],
          "iri": "Entity-this_can_be_obtained_directly_from_the_matrix_product_b__a__p1__a__p2__..._a__pm_-Mention-1"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-with_satisfying_entity": {
      "node_id": "with_satisfying_entity",
      "disambiguation_index": 0,
      "label": "With satisfying entities",
      "aliases": [
        "With satisfying entities"
      ],
      "types": [
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of distinct entities that satisfy the head or body of an OP rule, used to compute metrics such as OPsupp(r), OPHC(r) and OPSC(r).",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-4",
          "local_name": "With satisfying entities",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-with_satisfying_entity-Mention-1"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists": {
      "node_id": "a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists",
      "disambiguation_index": 0,
      "label": "a perfect link predictor that can answer any question with a correct answer when such an answer exists",
      "aliases": [
        "a perfect link predictor that can answer any question with a correct answer when such an answer exists"
      ],
      "types": [
        "predictor",
        "link predictor"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A machine learning model capable of generating relevant questions for knowledge graph completion, given the existence of a correct answer.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-2",
          "local_name": "a perfect link predictor that can answer any question with a correct answer when such an answer exists",
          "local_types": [
            "predictor",
            "link predictor"
          ],
          "iri": "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists-Mention-1"
        }
      ],
      "relevance": 0.5439453125
    },
    "Entity-the_minimum_opsc_from_1_to_0.5_in_4_decrement": {
      "node_id": "the_minimum_opsc_from_1_to_0.5_in_4_decrement",
      "disambiguation_index": 0,
      "label": "the minimum OPSC from 1 to 0.5 in 4 decrements",
      "aliases": [
        "the minimum OPSC from 1 to 0.5 in 4 decrements"
      ],
      "types": [
        "parameter_range"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The range of minimum Open Path rule quality scores (OPSC) from 1 to 0.5 in increments of 4, used for evaluating the performance of OPRL queries.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "the minimum OPSC from 1 to 0.5 in 4 decrements",
          "local_types": [
            "parameter_range"
          ],
          "iri": "Entity-the_minimum_opsc_from_1_to_0.5_in_4_decrement-Mention-1"
        }
      ],
      "relevance": 0.54296875
    },
    "Entity-link_predictor_is_deployed_over_a_working_kg": {
      "node_id": "link_predictor_is_deployed_over_a_working_kg",
      "disambiguation_index": 0,
      "label": "link predictor is deployed over a working KG",
      "aliases": [
        "link predictor is deployed over a working KG"
      ],
      "types": [
        "deployment",
        "implementation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software component responsible for predicting relationships between entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-3",
          "local_name": "link predictor is deployed over a working KG",
          "local_types": [
            "deployment",
            "implementation"
          ],
          "iri": "Entity-link_predictor_is_deployed_over_a_working_kg-Mention-1"
        }
      ],
      "relevance": 0.54248046875
    },
    "Entity-adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact": {
      "node_id": "adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact",
      "disambiguation_index": 0,
      "label": "adding e3 if we have some P_i(e3, e1) as a fact",
      "aliases": [
        "adding e3 if we have some P_i(e3, e1) as a fact"
      ],
      "types": [
        "fact",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of extending the set of entities in the reduced knowledge graph by adding new entities that are related to existing entities via any predicates.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-8",
          "local_name": "adding e3 if we have some P_i(e3, e1) as a fact",
          "local_types": [
            "fact",
            "predicate"
          ],
          "iri": "Entity-adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact-Mention-1"
        }
      ],
      "relevance": 0.54248046875
    },
    "Entity-there_are_some_preliminary_attempt": {
      "node_id": "there_are_some_preliminary_attempt",
      "disambiguation_index": 0,
      "label": "There are some preliminary attempts",
      "aliases": [
        "There are some preliminary attempts"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Preliminary research efforts aimed at developing methods for learning existential rules from knowledge graphs.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "There are some preliminary attempts",
          "local_types": [
            "research"
          ],
          "iri": "Entity-there_are_some_preliminary_attempt-Mention-1"
        }
      ],
      "relevance": 0.54248046875
    },
    "Entity-the_body_and_the_head_of_a_cp_rule": {
      "node_id": "the_body_and_the_head_of_a_cp_rule",
      "disambiguation_index": 0,
      "label": "the body and the head of a CP rule",
      "aliases": [
        "the body and the head of a CP rule"
      ],
      "types": [
        "rule",
        "body",
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The parts that make up a closed path (CP) rule, consisting of a 'head' and a 'body', which together form a single unbroken loop of links between variables.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-5",
          "local_name": "the body and the head of a CP rule",
          "local_types": [
            "rule",
            "body",
            "head"
          ],
          "iri": "Entity-the_body_and_the_head_of_a_cp_rule-Mention-1"
        }
      ],
      "relevance": 0.5419921875
    },
    "Entity-fact_that_are_missing_only_because_you_need_them_to_generate_query_": {
      "node_id": "fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "disambiguation_index": 0,
      "label": "facts that are missing only because you need them to generate queries?",
      "aliases": [
        "facts that are missing only because you need them to generate queries?"
      ],
      "types": [
        "missing facts",
        "query generation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Facts that are missing or incomplete, requiring the generation of queries to complete the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-2",
          "local_name": "facts that are missing only because you need them to generate queries?",
          "local_types": [
            "missing facts",
            "query generation"
          ],
          "iri": "Entity-fact_that_are_missing_only_because_you_need_them_to_generate_query_-Mention-1"
        }
      ],
      "relevance": 0.5419921875
    },
    "Entity-p_1__e_1___": {
      "node_id": "p_1__e_1___",
      "disambiguation_index": 0,
      "label": "P_1(e_1, ?)",
      "aliases": [
        "P_1(e_8, ?)",
        "P_1(e_4, ?)",
        "P_1(e_1, ?)"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A query of the form P(e_1, ?) or P(? , e_2), where P is a predicate and e_1 and e_2 are entities occurring in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "P_1(e_1, ?)",
          "local_types": [
            "query"
          ],
          "iri": "Entity-p_1__e_1___-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "P_1(e_4, ?)",
          "local_types": [
            "query"
          ],
          "iri": "Entity-p_1__e_1___-Mention-2"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "P_1(e_8, ?)",
          "local_types": [
            "query"
          ],
          "iri": "Entity-p_1__e_1___-Mention-3"
        }
      ],
      "relevance": 0.5419921875
    },
    "Entity-a_hybrid_approach_is_preferable__see_table_3_": {
      "node_id": "a_hybrid_approach_is_preferable__see_table_3_",
      "disambiguation_index": 0,
      "label": "a hybrid approach is preferable (see Table 3)",
      "aliases": [
        "a hybrid approach is preferable (see Table 3)",
        "a hybrid approach is preferable"
      ],
      "types": [
        "methodology",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A hybrid approach combining both co-occurrence and open path fitness functions to estimate rule quality.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-2",
          "local_name": "a hybrid approach is preferable (see Table 3)",
          "local_types": [
            "approach",
            "methodology"
          ],
          "iri": "Entity-a_hybrid_approach_is_preferable__see_table_3_-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-2",
          "local_name": "a hybrid approach is preferable",
          "local_types": [
            "approach"
          ],
          "iri": "Entity-a_hybrid_approach_is_preferable__see_table_3_-Mention-2"
        }
      ],
      "relevance": 0.54150390625
    },
    "Entity-opsupp__and_so_high_opsc_and_ophc_": {
      "node_id": "opsupp__and_so_high_opsc_and_ophc_",
      "disambiguation_index": 0,
      "label": "OPsupp (and so high OPSC and OPHC)",
      "aliases": [
        "OPsupp (and so high OPSC and OPHC)"
      ],
      "types": [
        "metric",
        "support metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure of the co-occurrence between entities that satisfy the second argument of an open path rule's head predicate and those satisfying its first argument, indicating the quality of the rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "OPsupp (and so high OPSC and OPHC)",
          "local_types": [
            "metric",
            "support metric"
          ],
          "iri": "Entity-opsupp__and_so_high_opsc_and_ophc_-Mention-1"
        }
      ],
      "relevance": 0.54150390625
    },
    "Entity-we_assess": {
      "node_id": "we_assess",
      "disambiguation_index": 0,
      "label": "We assess",
      "aliases": [
        "We assess"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of evaluating and selecting candidate rules from a knowledge graph based on their support and quality metrics.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "We assess",
          "local_types": [
            "research"
          ],
          "iri": "Entity-we_assess-Mention-1"
        }
      ],
      "relevance": 0.54150390625
    },
    "Entity-fewer_rule": {
      "node_id": "fewer_rule",
      "disambiguation_index": 0,
      "label": "fewer rules",
      "aliases": [
        "fewer rules"
      ],
      "types": [
        "rule",
        "pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity 'fewer rules' refers to the fact that YAGO2, a Knowledge Graph, induces fewer rules and has weaker performance due to its significantly fewer repeatable patterns.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "fewer rules",
          "local_types": [
            "rule",
            "pattern"
          ],
          "iri": "Entity-fewer_rule-Mention-1"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-minimum_opsc_(1)": {
      "node_id": "minimum_opsc_(1)",
      "disambiguation_index": 1,
      "label": "minimum OPSC",
      "aliases": [
        "minimum OPSC"
      ],
      "types": [
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum threshold for Open Path (OP) rules' quality, used to filter out low-quality queries generated by OPRL.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "minimum OPSC",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-minimum_opsc_(1)-Mention-1"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-highly_relevant_query_for_missing_link": {
      "node_id": "highly_relevant_query_for_missing_link",
      "disambiguation_index": 0,
      "label": "highly relevant queries for missing links",
      "aliases": [
        "highly relevant queries for missing links"
      ],
      "types": [
        "query",
        "link"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of queries that are closely related to and intended to fill gaps or complete a Knowledge Graph by soliciting missing facts.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-5",
          "local_name": "highly relevant queries for missing links",
          "local_types": [
            "query",
            "link"
          ],
          "iri": "Entity-highly_relevant_query_for_missing_link-Mention-1"
        }
      ],
      "relevance": 0.541015625
    },
    "Entity-from_an_instantiation_of_the_body_of_an_op_rule__we_can_not_infer_a_fact": {
      "node_id": "from_an_instantiation_of_the_body_of_an_op_rule__we_can_not_infer_a_fact",
      "disambiguation_index": 0,
      "label": "From an instantiation of the body of an OP rule, we cannot infer a fact",
      "aliases": [
        "From an instantiation of the body of an OP rule, we cannot infer a fact"
      ],
      "types": [
        "inference",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept that from instantiating the body of an Open Path (OP) rule, one cannot deduce a factual statement but rather generate a question.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "From an instantiation of the body of an OP rule, we cannot infer a fact",
          "local_types": [
            "inference",
            "fact"
          ],
          "iri": "Entity-from_an_instantiation_of_the_body_of_an_op_rule__we_can_not_infer_a_fact-Mention-1"
        }
      ],
      "relevance": 0.54052734375
    },
    "Entity-_1__we_propose_op_rule": {
      "node_id": "_1__we_propose_op_rule",
      "disambiguation_index": 0,
      "label": "(1) We propose OP rules",
      "aliases": [
        "(1) We propose OP rules"
      ],
      "types": [
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A proposal for operational rules",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-2",
          "local_name": "(1) We propose OP rules",
          "local_types": [
            "research"
          ],
          "iri": "Entity-_1__we_propose_op_rule-Mention-1"
        }
      ],
      "relevance": 0.54052734375
    },
    "Entity-the_remaining_rule": {
      "node_id": "the_remaining_rule",
      "disambiguation_index": 0,
      "label": "The remaining rules",
      "aliases": [
        "The remaining rules"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of candidate rules that pass minimum thresholds for OPSC and OPHC, obtained after evaluating all possible rules using Algorithm 1.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-10-Sentence-2",
          "local_name": "The remaining rules",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_remaining_rule-Mention-1"
        }
      ],
      "relevance": 0.54052734375
    },
    "Entity-roc_curve": {
      "node_id": "roc_curve",
      "disambiguation_index": 0,
      "label": "ROC curves",
      "aliases": [
        "ROC curve",
        "ROC curves"
      ],
      "types": [
        "evaluation metric",
        "diagram",
        "graphical representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A graphical representation used to evaluate the performance of a query or model, typically plotted against two axes: true positives and false alarms.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "ROC curves",
          "local_types": [
            "evaluation metric",
            "diagram",
            "graphical representation"
          ],
          "iri": "Entity-roc_curve-Mention-1"
        }
      ],
      "relevance": 0.5400390625
    },
    "Entity-closed__non-existential__rule": {
      "node_id": "closed__non-existential__rule",
      "disambiguation_index": 0,
      "label": "Closed (non-existential) rules",
      "aliases": [
        "Closed (non-existential) rules"
      ],
      "types": [
        "rule type",
        "rule_type"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Closed (non-existential) rules refer to logical rules used for predicting facts that instantiate triples, where all variables occur in the body and appear at least twice.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "Closed (non-existential) rules",
          "local_types": [
            "rule type",
            "rule_type"
          ],
          "iri": "Entity-closed__non-existential__rule-Mention-1"
        }
      ],
      "relevance": 0.5400390625
    },
    "Entity-to_assess_the_quality_of_our_mined_open_path_rule": {
      "node_id": "to_assess_the_quality_of_our_mined_open_path_rule",
      "disambiguation_index": 0,
      "label": "To assess the quality of our mined open path rules",
      "aliases": [
        "To assess the quality of our mined open path rules"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of evaluating the effectiveness or accuracy of the mined open path rules.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "To assess the quality of our mined open path rules",
          "local_types": [
            "research"
          ],
          "iri": "Entity-to_assess_the_quality_of_our_mined_open_path_rule-Mention-1"
        }
      ],
      "relevance": 0.5400390625
    },
    "Entity-in_the_hybrid_setting__we_use_both_fitness_function_to_pick_the_top_candidate_rule": {
      "node_id": "in_the_hybrid_setting__we_use_both_fitness_function_to_pick_the_top_candidate_rule",
      "disambiguation_index": 0,
      "label": "In the hybrid setting, we use both fitness functions to pick the top candidate rules",
      "aliases": [
        "In the hybrid setting, we use both fitness functions to pick the top candidate rules"
      ],
      "types": [
        "process",
        "algorithmic step"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The process of selecting the top candidate rules in the hybrid approach that combines co-occurrence and open path fitness functions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-3",
          "local_name": "In the hybrid setting, we use both fitness functions to pick the top candidate rules",
          "local_types": [
            "process",
            "algorithmic step"
          ],
          "iri": "Entity-in_the_hybrid_setting__we_use_both_fitness_function_to_pick_the_top_candidate_rule-Mention-1"
        }
      ],
      "relevance": 0.53955078125
    },
    "Entity-co-occurrence_capture_the_weight_of_connection": {
      "node_id": "co-occurrence_capture_the_weight_of_connection",
      "disambiguation_index": 0,
      "label": "co-occurrence captures the weight of connections",
      "aliases": [
        "co-occurrence captures the weight of connections"
      ],
      "types": [
        "process",
        "capture"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A measure of similarity between predicate embeddings, quantifying the strength of relationships between entities along an open path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-17-Sentence-1",
          "local_name": "co-occurrence captures the weight of connections",
          "local_types": [
            "process",
            "capture"
          ],
          "iri": "Entity-co-occurrence_capture_the_weight_of_connection-Mention-1"
        }
      ],
      "relevance": 0.53955078125
    },
    "Entity-the_quality_of_each_rule": {
      "node_id": "the_quality_of_each_rule",
      "disambiguation_index": 0,
      "label": "the quality of each rule",
      "aliases": [
        "the quality of each rule"
      ],
      "types": [
        "quality",
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The measure or standard used to assess the effectiveness or relevance of each candidate rule learned from a Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-4",
          "local_name": "the quality of each rule",
          "local_types": [
            "quality",
            "metric"
          ],
          "iri": "Entity-the_quality_of_each_rule-Mention-1"
        }
      ],
      "relevance": 0.53955078125
    },
    "Entity-a_pair_of_entity": {
      "node_id": "a_pair_of_entity",
      "disambiguation_index": 0,
      "label": "A pair of entities",
      "aliases": [
        "A pair of entities"
      ],
      "types": [
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A pair of entities (e, e') that satisfies a closed path rule's body and head by instantiating its variables with entities from the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "A pair of entities",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-a_pair_of_entity-Mention-1"
        }
      ],
      "relevance": 0.5390625
    },
    "Entity-this_observation": {
      "node_id": "this_observation",
      "disambiguation_index": 0,
      "label": "this observation",
      "aliases": [
        "this observation"
      ],
      "types": [
        "observation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The co-occurrence fitness function used to estimate the quality of open path (OP) rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "this observation",
          "local_types": [
            "observation"
          ],
          "iri": "Entity-this_observation-Mention-1"
        }
      ],
      "relevance": 0.5390625
    },
    "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.": {
      "node_id": "s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "disambiguation_index": 0,
      "label": "'s embedding is a vector obtained by averaging the embeddings of all the entities in the argument position.",
      "aliases": [
        "'s embedding is a vector obtained by averaging the embeddings of all the entities in the argument position."
      ],
      "types": [
        "embedding",
        "vector"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "An argument's embedding, used in knowledge graph completion and rule learning, which represents the average vector of all entities occurring as subjects or objects of a predicate.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "'s embedding is a vector obtained by averaging the embeddings of all the entities in the argument position.",
          "local_types": [
            "embedding",
            "vector"
          ],
          "iri": "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.-Mention-1"
        }
      ],
      "relevance": 0.5390625
    },
    "Entity-o_e": {
      "node_id": "o_e",
      "disambiguation_index": 0,
      "label": "o_e",
      "aliases": [
        "o_e"
      ],
      "types": [
        "variable",
        "statistic",
        "number",
        "mathematical notation",
        "count",
        "object",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The number of times an entity e occurs as an object of predicate P in knowledge graph K.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-4",
          "local_name": "o_e",
          "local_types": [
            "variable",
            "statistic",
            "number",
            "mathematical notation",
            "count",
            "object"
          ],
          "iri": "Entity-o_e-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-5",
          "local_name": "o_e",
          "local_types": [
            "variable",
            "mathematical expression"
          ],
          "iri": "Entity-o_e-Mention-2"
        }
      ],
      "relevance": 0.53857421875
    },
    "Entity-p__2___t": {
      "node_id": "p__2___t",
      "disambiguation_index": 0,
      "label": "P(2)_t",
      "aliases": [
        "P(2)_t"
      ],
      "types": [
        "equation",
        "mathematical expression",
        "probability"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The argument embedding of the object position for predicate P_t, used to estimate the quality of an open path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-3",
          "local_name": "P(2)_t",
          "local_types": [
            "equation",
            "mathematical expression",
            "probability"
          ],
          "iri": "Entity-p__2___t-Mention-1"
        }
      ],
      "relevance": 0.53857421875
    },
    "Entity-rule-based_method_learn_closed__non-existential__rule": {
      "node_id": "rule-based_method_learn_closed__non-existential__rule",
      "disambiguation_index": 0,
      "label": "rule-based methods learn closed (non-existential) rules",
      "aliases": [
        "rule-based methods learn closed (non-existential) rules"
      ],
      "types": [
        "Rule Learning",
        "Method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Previous approaches in rule learning",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "rule-based methods learn closed (non-existential) rules",
          "local_types": [
            "Rule Learning",
            "Method"
          ],
          "iri": "Entity-rule-based_method_learn_closed__non-existential__rule-Mention-1"
        }
      ],
      "relevance": 0.53857421875
    },
    "Entity-an_entity_e_(1)": {
      "node_id": "an_entity_e_(1)",
      "disambiguation_index": 1,
      "label": "an entity e",
      "aliases": [
        "an entity e"
      ],
      "types": [
        "entity",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An entity 'e' is a representation of an individual or concept within the context of a knowledge graph, used for computing and evaluating rule quality in active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-4",
          "local_name": "an entity e",
          "local_types": [
            "entity",
            "concept"
          ],
          "iri": "Entity-an_entity_e_(1)-Mention-1"
        }
      ],
      "relevance": 0.53857421875
    },
    "Entity-quality_opsc__0.1_and_ophc__0.01": {
      "node_id": "quality_opsc__0.1_and_ophc__0.01",
      "disambiguation_index": 0,
      "label": "quality OPSC > 0.1 and OPHC > 0.01",
      "aliases": [
        "quality OPSC > 0.1 and OPHC > 0.01"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "High-quality Open Path (OP) rules mined by OPRL, with an OPSC score greater than 0.1 and OPHC score greater than 0.01.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-4",
          "local_name": "quality OPSC > 0.1 and OPHC > 0.01",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-quality_opsc__0.1_and_ophc__0.01-Mention-1"
        }
      ],
      "relevance": 0.53857421875
    },
    "Entity-increasing_opsc": {
      "node_id": "increasing_opsc",
      "disambiguation_index": 0,
      "label": "increasing OPSC",
      "aliases": [
        "increasing OPSC"
      ],
      "types": [
        "parameter",
        "OPSC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The threshold for selecting Open Path (OP) rules based on their quality scores.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "increasing OPSC",
          "local_types": [
            "parameter",
            "OPSC"
          ],
          "iri": "Entity-increasing_opsc-Mention-1"
        }
      ],
      "relevance": 0.53857421875
    },
    "Entity-predict_a_fact_that_instantiates_the_triple_at_the_head_of_the_rule": {
      "node_id": "predict_a_fact_that_instantiates_the_triple_at_the_head_of_the_rule",
      "disambiguation_index": 0,
      "label": "predict a fact that instantiates the triple at the head of the rule",
      "aliases": [
        "predict a fact that instantiates the triple at the head of the rule"
      ],
      "types": [
        "prediction"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A prediction that completes a knowledge graph by inferring a missing fact that satisfies the conditions specified in an existential rule.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-1",
          "local_name": "predict a fact that instantiates the triple at the head of the rule",
          "local_types": [
            "prediction"
          ],
          "iri": "Entity-predict_a_fact_that_instantiates_the_triple_at_the_head_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.5380859375
    },
    "Entity-entity_e_and_e_": {
      "node_id": "entity_e_and_e_",
      "disambiguation_index": 0,
      "label": "entities e and e'",
      "aliases": [
        "entities e and e'"
      ],
      "types": [
        "variables",
        "entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Entities e and e' are variables representing entities occurring in a knowledge graph, used for generating queries of the form P(?, e') and P(e, ?) for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "entities e and e'",
          "local_types": [
            "variables",
            "entities"
          ],
          "iri": "Entity-entity_e_and_e_-Mention-1"
        }
      ],
      "relevance": 0.53759765625
    },
    "Entity-the_proportion_of_the_inferred_head_instance_that_are_also_satisfied": {
      "node_id": "the_proportion_of_the_inferred_head_instance_that_are_also_satisfied",
      "disambiguation_index": 0,
      "label": "the proportion of the inferred head instances that are also satisfied",
      "aliases": [
        "the proportion of the inferred head instances that are also satisfied"
      ],
      "types": [
        "proportion",
        "satisfaction"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure of rule quality, defined as the proportion of predicted head instances that satisfy both the body and head of an existential rule in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "the proportion of the inferred head instances that are also satisfied",
          "local_types": [
            "proportion",
            "satisfaction"
          ],
          "iri": "Entity-the_proportion_of_the_inferred_head_instance_that_are_also_satisfied-Mention-1"
        }
      ],
      "relevance": 0.53759765625
    },
    "Entity-existing_representation_learner": {
      "node_id": "existing_representation_learner",
      "disambiguation_index": 0,
      "label": "Existing representation learners",
      "aliases": [
        "Existing representation learners"
      ],
      "types": [
        "representation learner"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Representation learners that typically compute embeddings for entities and predicates, used in existing methods like RESCAL.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "Existing representation learners",
          "local_types": [
            "representation learner"
          ],
          "iri": "Entity-existing_representation_learner-Mention-1"
        }
      ],
      "relevance": 0.53759765625
    },
    "Entity-p_1__e_9___": {
      "node_id": "p_1__e_9___",
      "disambiguation_index": 0,
      "label": "P_1(e_9, ?)",
      "aliases": [
        "P_1(e_9, ?)"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A query of the form P_1(e_9, ?) that can be used to generate relevant questions for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "P_1(e_9, ?)",
          "local_types": [
            "query"
          ],
          "iri": "Entity-p_1__e_9___-Mention-1"
        }
      ],
      "relevance": 0.53759765625
    },
    "Entity-weakly_structured": {
      "node_id": "weakly_structured",
      "disambiguation_index": 0,
      "label": "weakly structured",
      "aliases": [
        "weakly structured"
      ],
      "types": [
        "structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity 'weakly structured' refers to a Knowledge Graph (KG) that lacks strong patterns and is incomplete, with many missing entities or relationships.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "weakly structured",
          "local_types": [
            "structure"
          ],
          "iri": "Entity-weakly_structured-Mention-1"
        }
      ],
      "relevance": 0.537109375
    },
    "Entity-for_(1)": {
      "node_id": "for_(1)",
      "disambiguation_index": 1,
      "label": "For",
      "aliases": [
        "For"
      ],
      "types": [
        "instruction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The loop variable 'k' in Algorithm 1 that controls the maximum length of OP rules to be generated.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-8",
          "local_name": "For",
          "local_types": [
            "instruction"
          ],
          "iri": "Entity-for_(1)-Mention-1"
        }
      ],
      "relevance": 0.537109375
    },
    "Entity-a_co-occurrence_fitness_function_for_mining_cp_rule": {
      "node_id": "a_co-occurrence_fitness_function_for_mining_cp_rule",
      "disambiguation_index": 0,
      "label": "a co-occurrence fitness function for mining CP rules",
      "aliases": [
        "a co-occurrence fitness function for mining CP rules"
      ],
      "types": [
        "CP rule",
        "function",
        "fitness function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A measure of rule quality that takes into account the similarity between entities or predicates connected by a co-occurrence pattern.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "a co-occurrence fitness function for mining CP rules",
          "local_types": [
            "CP rule",
            "function",
            "fitness function"
          ],
          "iri": "Entity-a_co-occurrence_fitness_function_for_mining_cp_rule-Mention-1"
        }
      ],
      "relevance": 0.537109375
    },
    "Entity-the_partial_area_under_the_curve__auc_": {
      "node_id": "the_partial_area_under_the_curve__auc_",
      "disambiguation_index": 0,
      "label": "the partial area under the curve (AUC)",
      "aliases": [
        "the partial area under the curve (AUC)"
      ],
      "types": [
        "metric",
        "evaluation metric"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The partial AUC is a measure of the performance difference between two systems, OPRL and RLvLR*, in generating relevant queries for knowledge graph completion, with values indicating the superiority of OPRL over RLvLR*.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "the partial area under the curve (AUC)",
          "local_types": [
            "metric",
            "evaluation metric"
          ],
          "iri": "Entity-the_partial_area_under_the_curve__auc_-Mention-1"
        }
      ],
      "relevance": 0.537109375
    },
    "Entity-k_": {
      "node_id": "k_",
      "disambiguation_index": 0,
      "label": "K'",
      "aliases": [
        "K'"
      ],
      "types": [
        "variable",
        "mathematical concept",
        "parameter",
        "dataset",
        "subgraph",
        "fragment",
        "mathematical notation",
        "knowledge graph"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or parameter used to represent a dataset or subgraph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-5",
          "local_name": "K'",
          "local_types": [
            "knowledge graph",
            "variable",
            "dataset",
            "mathematical concept"
          ],
          "iri": "Entity-k_-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-6",
          "local_name": "K'",
          "local_types": [
            "variable",
            "mathematical notation"
          ],
          "iri": "Entity-k_-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "K'",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-k_-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-5",
          "local_name": "K'",
          "local_types": [
            "subgraph",
            "fragment"
          ],
          "iri": "Entity-k_-Mention-4"
        }
      ],
      "relevance": 0.53662109375
    },
    "Entity-this_begs_the_question__whence_doe_the_query_arise_in_an_industrial_application_of_a_link_prediction_model_": {
      "node_id": "this_begs_the_question__whence_doe_the_query_arise_in_an_industrial_application_of_a_link_prediction_model_",
      "disambiguation_index": 0,
      "label": "This begs the question, whence does the query arise in an industrial application of a link prediction model?",
      "aliases": [
        "This begs the question, whence does the query arise in an industrial application of a link prediction model?"
      ],
      "types": [
        "question",
        "industrial"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept of generating queries for missing links in knowledge graphs using link prediction models.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-1",
          "local_name": "This begs the question, whence does the query arise in an industrial application of a link prediction model?",
          "local_types": [
            "question",
            "industrial"
          ],
          "iri": "Entity-this_begs_the_question__whence_doe_the_query_arise_in_an_industrial_application_of_a_link_prediction_model_-Mention-1"
        }
      ],
      "relevance": 0.5361328125
    },
    "Entity-open-ended_question__e.g_._citizenof__ann_____instead_of_fact__e.g_._citizenof__ann__australia__": {
      "node_id": "open-ended_question__e.g_._citizenof__ann_____instead_of_fact__e.g_._citizenof__ann__australia__",
      "disambiguation_index": 0,
      "label": "open-ended questions (e.g. citizenOf(Ann, ?)) instead of facts (e.g. citizenOf(Ann, Australia))",
      "aliases": [
        "open-ended questions (e.g. citizenOf(Ann, ?)) instead of facts (e.g. citizenOf(Ann, Australia))"
      ],
      "types": [
        "question",
        "fact"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of question that can be used to complete a knowledge graph by asking about missing entities or relationships.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "open-ended questions (e.g. citizenOf(Ann, ?)) instead of facts (e.g. citizenOf(Ann, Australia))",
          "local_types": [
            "question",
            "fact"
          ],
          "iri": "Entity-open-ended_question__e.g_._citizenof__ann_____instead_of_fact__e.g_._citizenof__ann__australia__-Mention-1"
        }
      ],
      "relevance": 0.5361328125
    },
    "Entity-asking_relevant_question": {
      "node_id": "asking_relevant_question",
      "disambiguation_index": 0,
      "label": "asking relevant questions",
      "aliases": [
        "asking relevant questions"
      ],
      "types": [
        "questioning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating queries that can be used to infer new facts from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "asking relevant questions",
          "local_types": [
            "questioning"
          ],
          "iri": "Entity-asking_relevant_question-Mention-1"
        }
      ],
      "relevance": 0.5361328125
    },
    "Entity-query_soliciting_missing_fact": {
      "node_id": "query_soliciting_missing_fact",
      "disambiguation_index": 0,
      "label": "queries soliciting missing facts",
      "aliases": [
        "queries soliciting missing facts"
      ],
      "types": [
        "knowledge request",
        "fact",
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of query that requests information about a missing fact or entity in a knowledge graph, which can then be used for completion.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "queries soliciting missing facts",
          "local_types": [
            "knowledge request",
            "fact",
            "query"
          ],
          "iri": "Entity-query_soliciting_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.5361328125
    },
    "Entity-that_can_induce_q_from_the_given_kg": {
      "node_id": "that_can_induce_q_from_the_given_kg",
      "disambiguation_index": 0,
      "label": "that can induce q from the given KG",
      "aliases": [
        "that can induce q from the given KG"
      ],
      "types": [
        "induction",
        "knowledge graph"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The confidence degree (CD) of a query, which measures the quantifiable confidence with which an instance of the head with one free variable can be induced from the given knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "that can induce q from the given KG",
          "local_types": [
            "induction",
            "knowledge graph"
          ],
          "iri": "Entity-that_can_induce_q_from_the_given_kg-Mention-1"
        }
      ],
      "relevance": 0.53564453125
    },
    "Entity-for_example__from_the_rule_citizenof__x__y___livesin__x__z___locatedin__z__y___if_we_have_the_fact_in_the_kg__livesin__bronte__canberra__and_locatedin__canberra__australia___then_we_can_infer_and_assert_the_following_new_fact_in_the_kg__citizenof__bronte__australia__.": {
      "node_id": "for_example__from_the_rule_citizenof__x__y___livesin__x__z___locatedin__z__y___if_we_have_the_fact_in_the_kg__livesin__bronte__canberra__and_locatedin__canberra__australia___then_we_can_infer_and_assert_the_following_new_fact_in_the_kg__citizenof__bronte__australia__.",
      "disambiguation_index": 0,
      "label": "For example, from the rule citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y), if we have the facts in the KG, livesIn(Bronte, Canberra) and locatedIn(Canberra, Australia), then we can infer and assert the following new fact in the KG, citizenOf(Bronte, Australia).",
      "aliases": [
        "For example, from the rule citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y), if we have the facts in the KG, livesIn(Bronte, Canberra) and locatedIn(Canberra, Australia), then we can infer and assert the following new fact in the KG, citizenOf(Bronte, Australia)."
      ],
      "types": [
        "example",
        "illustration"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical rule or inference mechanism used to derive a new piece of information from existing facts",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "For example, from the rule citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y), if we have the facts in the KG, livesIn(Bronte, Canberra) and locatedIn(Canberra, Australia), then we can infer and assert the following new fact in the KG, citizenOf(Bronte, Australia).",
          "local_types": [
            "example",
            "illustration"
          ],
          "iri": "Entity-for_example__from_the_rule_citizenof__x__y___livesin__x__z___locatedin__z__y___if_we_have_the_fact_in_the_kg__livesin__bronte__canberra__and_locatedin__canberra__australia___then_we_can_infer_and_assert_the_following_new_fact_in_the_kg__citizenof__bronte__australia__.-Mention-1"
        }
      ],
      "relevance": 0.53515625
    },
    "Entity-p4__x__z0___p5__z0__y__.": {
      "node_id": "p4__x__z0___p5__z0__y__.",
      "disambiguation_index": 0,
      "label": "P4(x, z0) \u2190 P5(z0, y).",
      "aliases": [
        "P4(x, z0) \u2190 P5(z0, y)."
      ],
      "types": [
        "logic formula",
        "production rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A production rule that extends an existing OP rule by appending a new body to its original tail.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "P4(x, z0) \u2190 P5(z0, y).",
          "local_types": [
            "logic formula",
            "production rule"
          ],
          "iri": "Entity-p4__x__z0___p5__z0__y__.-Mention-1"
        }
      ],
      "relevance": 0.53515625
    },
    "Entity-a_max_rule_length_l": {
      "node_id": "a_max_rule_length_l",
      "disambiguation_index": 0,
      "label": "a max rule length l",
      "aliases": [
        "a max rule length l"
      ],
      "types": [
        "rule definition",
        "parameter specification",
        "rule_length"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The maximum allowed length of rules to be mined by OPRL.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "a max rule length l",
          "local_types": [
            "rule definition",
            "parameter specification",
            "rule_length"
          ],
          "iri": "Entity-a_max_rule_length_l-Mention-1"
        }
      ],
      "relevance": 0.53466796875
    },
    "Entity-opsc_and_ophc_are_supplied_to_algorithm_1_at_runtime__and_evaluation___discard_failing_rule_.": {
      "node_id": "opsc_and_ophc_are_supplied_to_algorithm_1_at_runtime__and_evaluation___discard_failing_rule_.",
      "disambiguation_index": 0,
      "label": "OPSC and OPHC are supplied to Algorithm 1 at runtime, and Evaluation() discards failing rules.",
      "aliases": [
        "OPSC and OPHC are supplied to Algorithm 1 at runtime, and Evaluation() discards failing rules."
      ],
      "types": [
        "algorithm",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The evaluation method that assesses the quality of candidate rules based on OPSC and OPHC metrics.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-10-Sentence-1",
          "local_name": "OPSC and OPHC are supplied to Algorithm 1 at runtime, and Evaluation() discards failing rules.",
          "local_types": [
            "algorithm",
            "evaluation"
          ],
          "iri": "Entity-opsc_and_ophc_are_supplied_to_algorithm_1_at_runtime__and_evaluation___discard_failing_rule_.-Mention-1"
        }
      ],
      "relevance": 0.53466796875
    },
    "Entity-novel_method_to_rapidly_estimate_the_quality_of_each_candidate_rule_for_early_pruning": {
      "node_id": "novel_method_to_rapidly_estimate_the_quality_of_each_candidate_rule_for_early_pruning",
      "disambiguation_index": 0,
      "label": "novel method to rapidly estimate the quality of each candidate rule for early pruning",
      "aliases": [
        "novel method to rapidly estimate the quality of each candidate rule for early pruning"
      ],
      "types": [
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A novel method to rapidly estimate the quality of each candidate OP rule for early pruning",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-3",
          "local_name": "novel method to rapidly estimate the quality of each candidate rule for early pruning",
          "local_types": [
            "method"
          ],
          "iri": "Entity-novel_method_to_rapidly_estimate_the_quality_of_each_candidate_rule_for_early_pruning-Mention-1"
        }
      ],
      "relevance": 0.53466796875
    },
    "Entity-rich_interaction_amongst_entity_and_predicate": {
      "node_id": "rich_interaction_amongst_entity_and_predicate",
      "disambiguation_index": 0,
      "label": "rich interactions amongst entities and predicates",
      "aliases": [
        "rich interactions amongst entities and predicates"
      ],
      "types": [
        "concept",
        "phenomenon"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept or phenomenon referred to by 'rich interactions amongst entities and predicates' refers to a characteristic of RESCAL, an embedding-based learner that captures complex relationships between entities and predicates in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-6",
          "local_name": "rich interactions amongst entities and predicates",
          "local_types": [
            "concept",
            "phenomenon"
          ],
          "iri": "Entity-rich_interaction_amongst_entity_and_predicate-Mention-1"
        }
      ],
      "relevance": 0.53466796875
    },
    "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming": {
      "node_id": "it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming",
      "disambiguation_index": 0,
      "label": "It is closely related to coverage widely used for rule learning in inductive logic programming",
      "aliases": [
        "It is closely related to coverage widely used for rule learning in inductive logic programming"
      ],
      "types": [
        "reference",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Standard confidence (SC), which measures how frequently a rule is true, and head coverage (HC) that quantifies the explanatory power of a rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-5",
          "local_name": "It is closely related to coverage widely used for rule learning in inductive logic programming",
          "local_types": [
            "reference",
            "method"
          ],
          "iri": "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming-Mention-1"
        }
      ],
      "relevance": 0.5341796875
    },
    "Entity-each_column_of_the_adjacency_matrix": {
      "node_id": "each_column_of_the_adjacency_matrix",
      "disambiguation_index": 0,
      "label": "each column of the adjacency matrix",
      "aliases": [
        "each column of the adjacency matrix"
      ],
      "types": [
        "column",
        "adjacency matrix"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Each column of an adjacency matrix represents a set of KG facts that can trigger a candidate rule, indicating distinct entities that satisfy the head or body of the rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "each column of the adjacency matrix",
          "local_types": [
            "column",
            "adjacency matrix"
          ],
          "iri": "Entity-each_column_of_the_adjacency_matrix-Mention-1"
        }
      ],
      "relevance": 0.5341796875
    },
    "Entity-non-zero_element_of_this_vector_indicates_a_satisfying_entity": {
      "node_id": "non-zero_element_of_this_vector_indicates_a_satisfying_entity",
      "disambiguation_index": 0,
      "label": "non-zero element of this vector indicates a satisfying entity",
      "aliases": [
        "non-zero element of this vector indicates a satisfying entity"
      ],
      "types": [
        "concept",
        "vector"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A distinct entity in the knowledge graph that satisfies the body atoms of a candidate rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-4",
          "local_name": "non-zero element of this vector indicates a satisfying entity",
          "local_types": [
            "concept",
            "vector"
          ],
          "iri": "Entity-non-zero_element_of_this_vector_indicates_a_satisfying_entity-Mention-1"
        }
      ],
      "relevance": 0.53369140625
    },
    "Entity-answering_such_question": {
      "node_id": "answering_such_question",
      "disambiguation_index": 0,
      "label": "answering such questions",
      "aliases": [
        "answering such questions"
      ],
      "types": [
        "answering"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of generating queries or questions that can be used to infer new facts from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "answering such questions",
          "local_types": [
            "answering"
          ],
          "iri": "Entity-answering_such_question-Mention-1"
        }
      ],
      "relevance": 0.53369140625
    },
    "Entity-rule_learning": {
      "node_id": "rule_learning",
      "disambiguation_index": 0,
      "label": "rule learning",
      "aliases": [
        "rule learning"
      ],
      "types": [
        "machine learning",
        "artificial intelligence application",
        "concept",
        "machine learning technique",
        "artificial intelligence",
        "learning process",
        "pattern recognition method",
        "algorithm",
        "method",
        "machine learning algorithm",
        "technique",
        "machine learning approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of acquiring knowledge or rules through experience and feedback.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "rule learning",
          "local_types": [
            "machine learning",
            "machine learning technique",
            "artificial intelligence",
            "algorithm",
            "method",
            "machine learning algorithm",
            "technique"
          ],
          "iri": "Entity-rule_learning-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "rule learning",
          "local_types": [
            "machine learning algorithm",
            "machine learning technique",
            "pattern recognition method"
          ],
          "iri": "Entity-rule_learning-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-4-Sentence-2",
          "local_name": "rule learning",
          "local_types": [
            "machine learning approach",
            "artificial intelligence application"
          ],
          "iri": "Entity-rule_learning-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-5",
          "local_name": "rule learning",
          "local_types": [
            "learning process",
            "machine learning technique",
            "algorithm"
          ],
          "iri": "Entity-rule_learning-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "rule learning",
          "local_types": [
            "concept",
            "method"
          ],
          "iri": "Entity-rule_learning-Mention-5"
        }
      ],
      "relevance": 0.533203125
    },
    "Entity-a_relevant_query_is_induced": {
      "node_id": "a_relevant_query_is_induced",
      "disambiguation_index": 0,
      "label": "a relevant query is induced",
      "aliases": [
        "a relevant query is induced"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The generation of a question or inquiry that can be used to complete a knowledge graph by providing missing information.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-3",
          "local_name": "a relevant query is induced",
          "local_types": [
            "query"
          ],
          "iri": "Entity-a_relevant_query_is_induced-Mention-1"
        }
      ],
      "relevance": 0.533203125
    },
    "Entity-__e__such_that_p__e__e____f__": {
      "node_id": "__e__such_that_p__e__e____f__",
      "disambiguation_index": 0,
      "label": "|{e' such that P(e, e') \u2208 F}|",
      "aliases": [
        "|{e' such that P(e, e') \u2208 F}|",
        "|{e' such that P(e', e) \u2208 F}|"
      ],
      "types": [
        "set notation",
        "mathematical concept",
        "set expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set notation expression used to define argument embeddings for entities and predicates in a knowledge graph, where {e' such that P(e, e') \u2208 F} represents the set of entities connected by predicate P.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-5",
          "local_name": "|{e' such that P(e, e') \u2208 F}|",
          "local_types": [
            "set notation",
            "mathematical concept",
            "set expression"
          ],
          "iri": "Entity-__e__such_that_p__e__e____f__-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-5",
          "local_name": "|{e' such that P(e', e) \u2208 F}|",
          "local_types": [
            "set notation",
            "mathematical concept",
            "set expression"
          ],
          "iri": "Entity-__e__such_that_p__e__e____f__-Mention-2"
        }
      ],
      "relevance": 0.53271484375
    },
    "Entity-various_method": {
      "node_id": "various_method",
      "disambiguation_index": 0,
      "label": "Various methods",
      "aliases": [
        "Various methods"
      ],
      "types": [
        "methods"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Methods that have been proposed to construct latent vector representations of entities and predicates in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-1",
          "local_name": "Various methods",
          "local_types": [
            "methods"
          ],
          "iri": "Entity-various_method-Mention-1"
        }
      ],
      "relevance": 0.53271484375
    },
    "Entity-for_entity": {
      "node_id": "for_entity",
      "disambiguation_index": 0,
      "label": "For entity",
      "aliases": [
        "For entity"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The representation of an individual entity in a knowledge graph, used to compute various embeddings and fitness functions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-3",
          "local_name": "For entity",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-for_entity-Mention-1"
        }
      ],
      "relevance": 0.53271484375
    },
    "Entity-_standard_confidence__sc___head_coverage__hc__": {
      "node_id": "_standard_confidence__sc___head_coverage__hc__",
      "disambiguation_index": 0,
      "label": "(Standard confidence (SC), head coverage (HC))",
      "aliases": [
        "(Standard confidence (SC), head coverage (HC))"
      ],
      "types": [
        "notation",
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure of how frequently a rule is true, i.e., the proportion of inferred head instances that are also satisfied in the KG.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "(Standard confidence (SC), head coverage (HC))",
          "local_types": [
            "notation",
            "expression"
          ],
          "iri": "Entity-_standard_confidence__sc___head_coverage__hc__-Mention-1"
        }
      ],
      "relevance": 0.5322265625
    },
    "Entity-the_overall_rule_from_the_perspective_of_the_predicate": {
      "node_id": "the_overall_rule_from_the_perspective_of_the_predicate",
      "disambiguation_index": 0,
      "label": "the overall rule from the perspective of the predicates",
      "aliases": [
        "the overall rule from the perspective of the predicates"
      ],
      "types": [
        "rule",
        "perspective"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept or entity referred to by 'the overall rule from the perspective of the predicates' is a low-dimensional representation of the latent features of an open path rule, which connects its endpoints and represents the quality of the rule based on predicate embeddings along the path.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-3",
          "local_name": "the overall rule from the perspective of the predicates",
          "local_types": [
            "rule",
            "perspective"
          ],
          "iri": "Entity-the_overall_rule_from_the_perspective_of_the_predicate-Mention-1"
        }
      ],
      "relevance": 0.5322265625
    },
    "Entity-5_playing_card": {
      "node_id": "5_playing_card",
      "disambiguation_index": 0,
      "label": "5 playing cards",
      "aliases": [
        "5 playing cards"
      ],
      "types": [
        "playing_cards"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of five randomly selected playing cards, each described by two attributes (suit and rank), used as a synthetic dataset for evaluating knowledge graph completion algorithms.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-2",
          "local_name": "5 playing cards",
          "local_types": [
            "playing_cards"
          ],
          "iri": "Entity-5_playing_card-Mention-1"
        }
      ],
      "relevance": 0.5322265625
    },
    "Entity-traditional_knowledge_graph": {
      "node_id": "traditional_knowledge_graph",
      "disambiguation_index": 0,
      "label": "Traditional knowledge graph",
      "aliases": [
        "Traditional knowledge graph"
      ],
      "types": [
        "data structure",
        "knowledge representation",
        "knowledge_graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of data structure that represents relationships between entities, concepts, and facts in a structured manner.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "Traditional knowledge graph",
          "local_types": [
            "data structure",
            "knowledge representation",
            "knowledge_graph"
          ],
          "iri": "Entity-traditional_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-the_rule_is_true": {
      "node_id": "the_rule_is_true",
      "disambiguation_index": 0,
      "label": "the rule is true",
      "aliases": [
        "the rule is true"
      ],
      "types": [
        "rule",
        "truth"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The frequency with which an existential rule holds true in a knowledge graph, considering the proportion of inferred head instances that are also satisfied.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "the rule is true",
          "local_types": [
            "rule",
            "truth"
          ],
          "iri": "Entity-the_rule_is_true-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-it_(2)": {
      "node_id": "it_(2)",
      "disambiguation_index": 2,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept of support, which measures how frequently a closed path (CP) rule is true.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-5",
          "local_name": "It",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-it_(2)-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-construct_embeddings": {
      "node_id": "construct_embeddings",
      "disambiguation_index": 0,
      "label": "construct embeddings",
      "aliases": [
        "construct embeddings"
      ],
      "types": [
        "task"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Construct embeddings refer to techniques that learn vector representations of entities and predicates in a knowledge graph, enabling the modeling of relationships between them.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-1",
          "local_name": "construct embeddings",
          "local_types": [
            "task"
          ],
          "iri": "Entity-construct_embeddings-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-a_compositional-based_embedding_learner": {
      "node_id": "a_compositional-based_embedding_learner",
      "disambiguation_index": 0,
      "label": "a compositional-based embedding learner",
      "aliases": [
        "a compositional-based embedding learner"
      ],
      "types": [
        "learner"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A RESCAL-based algorithm that learns entity and predicate embeddings by minimizing a loss function, capturing rich interactions amongst entities and predicates.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-2",
          "local_name": "a compositional-based embedding learner",
          "local_types": [
            "learner"
          ],
          "iri": "Entity-a_compositional-based_embedding_learner-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-you": {
      "node_id": "you",
      "disambiguation_index": 0,
      "label": "you",
      "aliases": [
        "you"
      ],
      "types": [
        "person"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The reader, likely an expert or developer working on knowledge graph completion and active learning settings.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-4",
          "local_name": "you",
          "local_types": [
            "person"
          ],
          "iri": "Entity-you-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-of_the_same_cardinality_a_those_generated_from_oprl__called_prand": {
      "node_id": "of_the_same_cardinality_a_those_generated_from_oprl__called_prand",
      "disambiguation_index": 0,
      "label": "of the same cardinality as those generated from OPRL, called Prand",
      "aliases": [
        "of the same cardinality as those generated from OPRL, called Prand"
      ],
      "types": [
        "cardinality",
        "system",
        "OPRL",
        "Prand"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of queries with the same number of instances as those generated by OPRL, used as a baseline for comparison.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "of the same cardinality as those generated from OPRL, called Prand",
          "local_types": [
            "cardinality",
            "system",
            "OPRL",
            "Prand"
          ],
          "iri": "Entity-of_the_same_cardinality_a_those_generated_from_oprl__called_prand-Mention-1"
        }
      ],
      "relevance": 0.53173828125
    },
    "Entity-knowledge_graph": {
      "node_id": "knowledge_graph",
      "disambiguation_index": 0,
      "label": "Knowledge Graphs",
      "aliases": [
        "knowledge graph",
        "Knowledge Graphs",
        "knowledge graphs"
      ],
      "types": [
        "data repository",
        "technology",
        "data storage method",
        "data model",
        "dataset",
        "concept",
        "information system",
        "knowledge base",
        "data structure",
        "knowledge_graph"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A conceptual framework or database that organizes knowledge and information into interconnected entities, typically using nodes and edges to represent relationships between concepts.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "technology",
            "data storage method",
            "data model",
            "concept",
            "data structure",
            "knowledge_graph"
          ],
          "iri": "Entity-knowledge_graph-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "knowledge graph",
          "local_types": [
            "concept",
            "data structure"
          ],
          "iri": "Entity-knowledge_graph-Mention-2"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "data repository",
            "dataset",
            "concept",
            "knowledge base",
            "data structure"
          ],
          "iri": "Entity-knowledge_graph-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "technology",
            "data model",
            "concept",
            "data structure",
            "knowledge_graph"
          ],
          "iri": "Entity-knowledge_graph-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-4",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "technology",
            "data model",
            "data structure",
            "knowledge_graph"
          ],
          "iri": "Entity-knowledge_graph-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-5",
          "local_name": "knowledge graph",
          "local_types": [
            "data structure",
            "information system"
          ],
          "iri": "Entity-knowledge_graph-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "technology",
            "data model",
            "data structure",
            "knowledge_graph"
          ],
          "iri": "Entity-knowledge_graph-Mention-7"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-1",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "technology",
            "data model",
            "data structure",
            "knowledge_graph"
          ],
          "iri": "Entity-knowledge_graph-Mention-8"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-3",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "technology",
            "data model",
            "data structure",
            "knowledge_graph"
          ],
          "iri": "Entity-knowledge_graph-Mention-9"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-6",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "technology",
            "data model",
            "data structure",
            "knowledge_graph"
          ],
          "iri": "Entity-knowledge_graph-Mention-10"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "knowledge graphs",
          "local_types": [
            "data structure",
            "information system"
          ],
          "iri": "Entity-knowledge_graph-Mention-11"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-5",
          "local_name": "Knowledge Graphs",
          "local_types": [
            "dataset",
            "concept",
            "data structure"
          ],
          "iri": "Entity-knowledge_graph-Mention-12"
        }
      ],
      "relevance": 0.53125
    },
    "Entity-k___e__f_": {
      "node_id": "k___e__f_",
      "disambiguation_index": 0,
      "label": "K = (E, F)",
      "aliases": [
        "K = (E, F)"
      ],
      "types": [
        "knowledge graph",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge graph consisting of entities E and relationships F.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "K = (E, F)",
          "local_types": [
            "knowledge graph",
            "data structure"
          ],
          "iri": "Entity-k___e__f_-Mention-1"
        }
      ],
      "relevance": 0.53125
    },
    "Entity-we_use_a_maximum_rule_length_of_4_for_pathfinding__": {
      "node_id": "we_use_a_maximum_rule_length_of_4_for_pathfinding__",
      "disambiguation_index": 0,
      "label": "We use a maximum rule length of 4 for PathFinding()",
      "aliases": [
        "We use a maximum rule length of 4 for PathFinding()"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The algorithm used for learning Open Path rules, specifically setting a maximum rule length of 4 for PathFinding()",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-1",
          "local_name": "We use a maximum rule length of 4 for PathFinding()",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-we_use_a_maximum_rule_length_of_4_for_pathfinding__-Mention-1"
        }
      ],
      "relevance": 0.53125
    },
    "Entity-in_incpathfinding__": {
      "node_id": "in_incpathfinding__",
      "disambiguation_index": 0,
      "label": "In IncPathFinding()",
      "aliases": [
        "In IncPathFinding(),",
        "In IncPathFinding()"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method that creates additional candidate rules by extending some top-ranked candidates, used to mine high-quality OP rules about a specific target predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-12",
          "local_name": "In IncPathFinding()",
          "local_types": [
            "method"
          ],
          "iri": "Entity-in_incpathfinding__-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "In IncPathFinding(),",
          "local_types": [
            "method"
          ],
          "iri": "Entity-in_incpathfinding__-Mention-2"
        }
      ],
      "relevance": 0.53125
    },
    "Entity-each_fitness_function": {
      "node_id": "each_fitness_function",
      "disambiguation_index": 0,
      "label": "each fitness function",
      "aliases": [
        "each fitness function"
      ],
      "types": [
        "fitness_function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Each fitness function refers to one of two quality estimation methods used for evaluating the rules generated by OPRL, either based on co-occurrence between entities or open path connections between predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-4",
          "local_name": "each fitness function",
          "local_types": [
            "fitness_function"
          ],
          "iri": "Entity-each_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.53125
    },
    "Entity-learnt_rule": {
      "node_id": "learnt_rule",
      "disambiguation_index": 0,
      "label": "learnt rule",
      "aliases": [
        "learnt rule"
      ],
      "types": [
        "algorithm",
        "rule-based system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A learned algorithm or set of rules that has been derived from data and experience.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "learnt rule",
          "local_types": [
            "algorithm",
            "rule-based system"
          ],
          "iri": "Entity-learnt_rule-Mention-1"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-from__1__and__2___we_can_easily_obtain_ophc__r___11_and_opsc__r___12": {
      "node_id": "from__1__and__2___we_can_easily_obtain_ophc__r___11_and_opsc__r___12",
      "disambiguation_index": 0,
      "label": "From (1) and (2), we can easily obtain OPHC(r) = 1/1 and OPSC(r) = 1/2",
      "aliases": [
        "From (1) and (2), we can easily obtain OPHC(r) = 1/1 and OPSC(r) = 1/2"
      ],
      "types": [
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The quality measures for an Open Path rule (OPHCR and OPSCR)",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-5",
          "local_name": "From (1) and (2), we can easily obtain OPHC(r) = 1/1 and OPSC(r) = 1/2",
          "local_types": [
            "description"
          ],
          "iri": "Entity-from__1__and__2___we_can_easily_obtain_ophc__r___11_and_opsc__r___12-Mention-1"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-all_predicate_in_the_respective_kg": {
      "node_id": "all_predicate_in_the_respective_kg",
      "disambiguation_index": 0,
      "label": "all predicates in the respective KGs",
      "aliases": [
        "all predicates in the respective KGs"
      ],
      "types": [
        "predicates",
        "knowledge graph"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of predicate types found across multiple knowledge graphs, including Wikidata and other benchmark datasets.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "all predicates in the respective KGs",
          "local_types": [
            "predicates",
            "knowledge graph"
          ],
          "iri": "Entity-all_predicate_in_the_respective_kg-Mention-1"
        }
      ],
      "relevance": 0.53076171875
    },
    "Entity-parameter__a_max_rule_length_l__minopsc_and_minophc": {
      "node_id": "parameter__a_max_rule_length_l__minopsc_and_minophc",
      "disambiguation_index": 0,
      "label": "Parameter: a max rule length l, MinOPSC and MinOPHC",
      "aliases": [
        "Parameter: a max rule length l, MinOPSC and MinOPHC",
        "Parameter: a max rule length l, MinOPSC and MinOPHC."
      ],
      "types": [
        "technical term",
        "parameter"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A set of parameters used to control the maximum length of open path rules and their minimum quality scores for OPSC (open path score) and OPHC (open path head coverage)",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "Parameter: a max rule length l, MinOPSC and MinOPHC",
          "local_types": [
            "parameter",
            "technical term"
          ],
          "iri": "Entity-parameter__a_max_rule_length_l__minopsc_and_minophc-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "Parameter: a max rule length l, MinOPSC and MinOPHC.",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-parameter__a_max_rule_length_l__minopsc_and_minophc-Mention-2"
        }
      ],
      "relevance": 0.5302734375
    },
    "Entity-predicate_and_argument_in_the_sample_kg": {
      "node_id": "predicate_and_argument_in_the_sample_kg",
      "disambiguation_index": 0,
      "label": "predicates and arguments in the sample KG",
      "aliases": [
        "predicates and arguments in the sample KG"
      ],
      "types": [
        "data",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of logical relationships between entities, concepts or properties",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "predicates and arguments in the sample KG",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-predicate_and_argument_in_the_sample_kg-Mention-1"
        }
      ],
      "relevance": 0.5302734375
    },
    "Entity-it_learns_a_larger_number_of_more_finely-targeted_weight_parameter": {
      "node_id": "it_learns_a_larger_number_of_more_finely-targeted_weight_parameter",
      "disambiguation_index": 0,
      "label": "it learns a larger number of more finely-targeted weight parameters",
      "aliases": [
        "it learns a larger number of more finely-targeted weight parameters"
      ],
      "types": [
        "property",
        "characteristic"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The RESCAL algorithm, used to learn embeddings for entities and predicates.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-6",
          "local_name": "it learns a larger number of more finely-targeted weight parameters",
          "local_types": [
            "property",
            "characteristic"
          ],
          "iri": "Entity-it_learns_a_larger_number_of_more_finely-targeted_weight_parameter-Mention-1"
        }
      ],
      "relevance": 0.5302734375
    },
    "Entity-the_least_acceptable_opsc_and_ophc_score": {
      "node_id": "the_least_acceptable_opsc_and_ophc_score",
      "disambiguation_index": 0,
      "label": "the least acceptable OPSC and OPHC scores",
      "aliases": [
        "the least acceptable OPSC and OPHC scores"
      ],
      "types": [
        "score",
        "OPSC",
        "OPHC"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The minimum quality thresholds for Open Path (OP) rules, measured by OPSC (Open Path Score) and OPHC (Open Path Hypothesis Coverage), below which a rule is considered unacceptable.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "the least acceptable OPSC and OPHC scores",
          "local_types": [
            "score",
            "OPSC",
            "OPHC"
          ],
          "iri": "Entity-the_least_acceptable_opsc_and_ophc_score-Mention-1"
        }
      ],
      "relevance": 0.5302734375
    },
    "Entity-embeddings_learned_by_rescal": {
      "node_id": "embeddings_learned_by_rescal",
      "disambiguation_index": 0,
      "label": "embeddings learned by RESCAL",
      "aliases": [
        "embeddings learned by RESCAL"
      ],
      "types": [
        "embeddings"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Vector representations of entities or concepts, generated using the RESCAL algorithm.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-1",
          "local_name": "embeddings learned by RESCAL",
          "local_types": [
            "embeddings"
          ],
          "iri": "Entity-embeddings_learned_by_rescal-Mention-1"
        }
      ],
      "relevance": 0.52978515625
    },
    "Entity-since_sc_and_opsc_are_similar_measure__we_say_oprl_find_higher-confidence_query_than_rlvlr__doe_.": {
      "node_id": "since_sc_and_opsc_are_similar_measure__we_say_oprl_find_higher-confidence_query_than_rlvlr__doe_.",
      "disambiguation_index": 0,
      "label": "Since SC and OPSC are similar measures, we say OPRL finds higher-confidence queries than RLvLR* does.",
      "aliases": [
        "Since SC and OPSC are similar measures, we say OPRL finds higher-confidence queries than RLvLR* does."
      ],
      "types": [
        "comparison"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The comparison between OPRL's query generation performance and that of RLvLR*, based on similar measures such as SC and OPSC.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-3",
          "local_name": "Since SC and OPSC are similar measures, we say OPRL finds higher-confidence queries than RLvLR* does.",
          "local_types": [
            "comparison"
          ],
          "iri": "Entity-since_sc_and_opsc_are_similar_measure__we_say_oprl_find_higher-confidence_query_than_rlvlr__doe_.-Mention-1"
        }
      ],
      "relevance": 0.52978515625
    },
    "Entity-the_number_of_entity_(1)": {
      "node_id": "the_number_of_entity_(1)",
      "disambiguation_index": 1,
      "label": "The number of entities",
      "aliases": [
        "The number of entities"
      ],
      "types": [
        "quantity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The total count of distinct entities that satisfy both the head and body of an Open Path (OP) rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-4-Sentence-4",
          "local_name": "The number of entities",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-the_number_of_entity_(1)-Mention-1"
        }
      ],
      "relevance": 0.52978515625
    },
    "Entity-m_1": {
      "node_id": "m_1",
      "disambiguation_index": 0,
      "label": "M_1",
      "aliases": [
        "M_1"
      ],
      "types": [
        "matrix",
        "mathematical object",
        "variable"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The matrix M_1 is a mathematical object used to represent entity embeddings and predicate embeddings for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-2",
          "local_name": "M_1",
          "local_types": [
            "mathematical object",
            "matrix",
            "variable"
          ],
          "iri": "Entity-m_1-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "M_1",
          "local_types": [
            "matrix",
            "variable"
          ],
          "iri": "Entity-m_1-Mention-2"
        }
      ],
      "relevance": 0.529296875
    },
    "Entity-public_knowledge_graph": {
      "node_id": "public_knowledge_graph",
      "disambiguation_index": 0,
      "label": "public Knowledge Graphs",
      "aliases": [
        "public Knowledge Graphs"
      ],
      "types": [
        "data repository",
        "Entity",
        "knowledge graph",
        "Knowledge Graph",
        "knowledge base",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A publicly accessible database that stores information on various entities, concepts, and relationships.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "public Knowledge Graphs",
          "local_types": [
            "data repository",
            "Entity",
            "knowledge graph",
            "Knowledge Graph",
            "knowledge base",
            "data structure"
          ],
          "iri": "Entity-public_knowledge_graph-Mention-1"
        }
      ],
      "relevance": 0.529296875
    },
    "Entity-every_instantiation_of_a_cp_rule": {
      "node_id": "every_instantiation_of_a_cp_rule",
      "disambiguation_index": 0,
      "label": "every instantiation of a CP rule",
      "aliases": [
        "every instantiation of a CP rule"
      ],
      "types": [
        "instantiation",
        "CP rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific instance of a Closed Path (CP) rule, which can also be an instantiation of a corresponding Open Path (OP) rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-4",
          "local_name": "every instantiation of a CP rule",
          "local_types": [
            "instantiation",
            "CP rule"
          ],
          "iri": "Entity-every_instantiation_of_a_cp_rule-Mention-1"
        }
      ],
      "relevance": 0.529296875
    },
    "Entity-support__head_coverage__and_standard_confidence": {
      "node_id": "support__head_coverage__and_standard_confidence",
      "disambiguation_index": 0,
      "label": "support, head coverage, and standard confidence",
      "aliases": [
        "support, head coverage, and standard confidence"
      ],
      "types": [
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Metrics used to evaluate the quality of rules learned from a knowledge graph, specifically measuring how well a rule generalizes and explains facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-2",
          "local_name": "support, head coverage, and standard confidence",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-support__head_coverage__and_standard_confidence-Mention-1"
        }
      ],
      "relevance": 0.52880859375
    },
    "Entity-cp_rule": {
      "node_id": "cp_rule",
      "disambiguation_index": 0,
      "label": "CP rules",
      "aliases": [
        "CP rule",
        "CP rules"
      ],
      "types": [
        "conceptual patterns",
        "rule-based system",
        "computational rule",
        "computational logic rule",
        "computer program",
        "concept",
        "patterns",
        "pattern",
        "rules",
        "rule",
        "constraint",
        "conceptual framework",
        "algorithm",
        "knowledge base",
        "mathematical concepts",
        "rule set",
        "computational method"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of logical or computational guidelines that govern behavior and decision-making, often used to reason about concepts and patterns.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-1",
          "local_name": "CP rules",
          "local_types": [
            "conceptual patterns",
            "computational rule",
            "concept",
            "pattern",
            "rules",
            "rule",
            "computational logic rule"
          ],
          "iri": "Entity-cp_rule-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "CP rule",
          "local_types": [
            "rule",
            "algorithm"
          ],
          "iri": "Entity-cp_rule-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-5",
          "local_name": "CP rule",
          "local_types": [
            "rule",
            "constraint"
          ],
          "iri": "Entity-cp_rule-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "CP rules",
          "local_types": [
            "rule set",
            "rule-based system",
            "rule"
          ],
          "iri": "Entity-cp_rule-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-2",
          "local_name": "CP rules",
          "local_types": [
            "mathematical concepts",
            "rules"
          ],
          "iri": "Entity-cp_rule-Mention-5"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-3",
          "local_name": "CP rule",
          "local_types": [
            "rules",
            "concept",
            "rule"
          ],
          "iri": "Entity-cp_rule-Mention-6"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-4",
          "local_name": "CP rule",
          "local_types": [
            "rule",
            "constraint"
          ],
          "iri": "Entity-cp_rule-Mention-7"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "CP rules",
          "local_types": [
            "knowledge base",
            "rule set",
            "rules",
            "patterns"
          ],
          "iri": "Entity-cp_rule-Mention-8"
        },
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "CP rules",
          "local_types": [
            "conceptual patterns",
            "rule-based system",
            "pattern",
            "conceptual framework",
            "rules"
          ],
          "iri": "Entity-cp_rule-Mention-9"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "CP rules",
          "local_types": [
            "rule-based system",
            "concept",
            "rule"
          ],
          "iri": "Entity-cp_rule-Mention-10"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "CP rules",
          "local_types": [
            "conceptual patterns",
            "concept",
            "pattern",
            "rules",
            "rule"
          ],
          "iri": "Entity-cp_rule-Mention-11"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "CP rules",
          "local_types": [
            "conceptual patterns",
            "rule-based system",
            "computer program",
            "concept",
            "pattern",
            "rules",
            "rule",
            "algorithm",
            "computational method"
          ],
          "iri": "Entity-cp_rule-Mention-12"
        }
      ],
      "relevance": 0.5283203125
    },
    "Entity-the_path_p1__p2__...__pm": {
      "node_id": "the_path_p1__p2__...__pm",
      "disambiguation_index": 0,
      "label": "the path P1, P2, ..., Pm",
      "aliases": [
        "the path P1, P2, ..., Pm"
      ],
      "types": [
        "path",
        "sequence"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A sequence of predicates (P1, P2, ..., Pm) representing a connection between entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "the path P1, P2, ..., Pm",
          "local_types": [
            "path",
            "sequence"
          ],
          "iri": "Entity-the_path_p1__p2__...__pm-Mention-1"
        }
      ],
      "relevance": 0.5283203125
    },
    "Entity-a_specific_target_predicate_in_the_head__p_.": {
      "node_id": "a_specific_target_predicate_in_the_head__p_.",
      "disambiguation_index": 0,
      "label": "a specific target predicate in the head, P.",
      "aliases": [
        "a specific target predicate in the head, P.",
        "a specific target predicate in the head, P"
      ],
      "types": [
        "predicate",
        "target"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A particular predicate that serves as the head of an Open Path rule being mined from a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "a specific target predicate in the head, P.",
          "local_types": [
            "predicate",
            "target"
          ],
          "iri": "Entity-a_specific_target_predicate_in_the_head__p_.-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "a specific target predicate in the head, P",
          "local_types": [
            "predicate",
            "target"
          ],
          "iri": "Entity-a_specific_target_predicate_in_the_head__p_.-Mention-2"
        }
      ],
      "relevance": 0.52783203125
    },
    "Entity-if_pathfinding___also_generates": {
      "node_id": "if_pathfinding___also_generates",
      "disambiguation_index": 0,
      "label": "if PathFinding() also generates",
      "aliases": [
        "if PathFinding() also generates"
      ],
      "types": [
        "condition",
        "method call"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A novel method for extending an existing OP rule by appending a new body to its original tail.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "if PathFinding() also generates",
          "local_types": [
            "condition",
            "method call"
          ],
          "iri": "Entity-if_pathfinding___also_generates-Mention-1"
        }
      ],
      "relevance": 0.52783203125
    },
    "Entity-max__opsc__r__": {
      "node_id": "max__opsc__r__",
      "disambiguation_index": 0,
      "label": "max(OPSC(r))",
      "aliases": [
        "max(OPSC(r))"
      ],
      "types": [
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The confidence degree of a query, defined as the maximum OP rule support count (OPSC) for all rules inducing that query.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-5-Sentence-1",
          "local_name": "max(OPSC(r))",
          "local_types": [
            "expression"
          ],
          "iri": "Entity-max__opsc__r__-Mention-1"
        }
      ],
      "relevance": 0.52783203125
    },
    "Entity-the_number_of_induced_query": {
      "node_id": "the_number_of_induced_query",
      "disambiguation_index": 0,
      "label": "The number of induced queries",
      "aliases": [
        "The number of induced queries"
      ],
      "types": [
        "quantity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of induced queries that can be derived from a set of facts and OP rules, bounded by twice the number of facts since different facts can derive the same query.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "The number of induced queries",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-the_number_of_induced_query-Mention-1"
        }
      ],
      "relevance": 0.52783203125
    },
    "Entity-a_fact_is_missing_even_when_there_is_evidence_for_only_one_entity_of_the_pair__and_a_question_is_generated_accordingly": {
      "node_id": "a_fact_is_missing_even_when_there_is_evidence_for_only_one_entity_of_the_pair__and_a_question_is_generated_accordingly",
      "disambiguation_index": 0,
      "label": "a fact is missing even when there is evidence for only one entity of the pair, and a question is generated accordingly",
      "aliases": [
        "a fact is missing even when there is evidence for only one entity of the pair, and a question is generated accordingly"
      ],
      "types": [
        "fact",
        "pair",
        "question generation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept refers to the process of generating questions that indicate the existence of missing facts in a knowledge graph, even when there is evidence for only one entity involved.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-4",
          "local_name": "a fact is missing even when there is evidence for only one entity of the pair, and a question is generated accordingly",
          "local_types": [
            "fact",
            "pair",
            "question generation"
          ],
          "iri": "Entity-a_fact_is_missing_even_when_there_is_evidence_for_only_one_entity_of_the_pair__and_a_question_is_generated_accordingly-Mention-1"
        }
      ],
      "relevance": 0.52734375
    },
    "Entity-rule_mining": {
      "node_id": "rule_mining",
      "disambiguation_index": 0,
      "label": "rule mining",
      "aliases": [
        "rule mining"
      ],
      "types": [
        "methodology",
        "task",
        "research method",
        "mining process",
        "data analysis technique",
        "method",
        "technique",
        "research area"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process or technique of automatically discovering and extracting patterns or relationships from data to support decision-making, problem-solving, or knowledge discovery.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "rule mining",
          "local_types": [
            "methodology",
            "task",
            "research method",
            "method",
            "technique",
            "research area"
          ],
          "iri": "Entity-rule_mining-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-3",
          "local_name": "rule mining",
          "local_types": [
            "task",
            "data analysis technique",
            "mining process"
          ],
          "iri": "Entity-rule_mining-Mention-2"
        }
      ],
      "relevance": 0.52685546875
    },
    "Entity-our_argument_embeddings": {
      "node_id": "our_argument_embeddings",
      "disambiguation_index": 0,
      "label": "our argument embeddings",
      "aliases": [
        "our argument embeddings"
      ],
      "types": [
        "argument",
        "embeddings"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of vector representations, obtained by averaging entity embeddings for subject and object arguments of a predicate, used to estimate rule quality.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-5",
          "local_name": "our argument embeddings",
          "local_types": [
            "argument",
            "embeddings"
          ],
          "iri": "Entity-our_argument_embeddings-Mention-1"
        }
      ],
      "relevance": 0.52685546875
    },
    "Entity-there": {
      "node_id": "there",
      "disambiguation_index": 0,
      "label": "there",
      "aliases": [
        "there"
      ],
      "types": [
        "quantifier"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept referred to by 'there' is a type of existential rule that allows for the generation of queries even when there is no closed rule to answer the query, or when the correct answer is a missing entity not present in the Knowledge Graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-5",
          "local_name": "there",
          "local_types": [
            "quantifier"
          ],
          "iri": "Entity-there-Mention-1"
        }
      ],
      "relevance": 0.5263671875
    },
    "Entity-_e___e__satisfies_the_head_of_r": {
      "node_id": "_e___e__satisfies_the_head_of_r",
      "disambiguation_index": 0,
      "label": "(e', e) satisfies the head of r",
      "aliases": [
        "(e', e) satisfies the head of r"
      ],
      "types": [
        "logical statement",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of entities (e, e') in the knowledge graph that satisfies the head predicate P_t(e', e), indicating a fact where P_t is true for the given entities.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-5",
          "local_name": "(e', e) satisfies the head of r",
          "local_types": [
            "logical statement",
            "notation"
          ],
          "iri": "Entity-_e___e__satisfies_the_head_of_r-Mention-1"
        }
      ],
      "relevance": 0.52587890625
    },
    "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.": {
      "node_id": "each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "disambiguation_index": 0,
      "label": "Each argument's embedding is a vector obtained by averaging the embeddings of all the entities in the argument position.",
      "aliases": [
        "Each argument's embedding is a vector obtained by averaging the embeddings of all the entities in the argument position."
      ],
      "types": [
        "definition",
        "embedding"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The concept of averaging entity embeddings to obtain an embedding vector for each argument, used as input for computing quality estimates in rule learning.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "Each argument's embedding is a vector obtained by averaging the embeddings of all the entities in the argument position.",
          "local_types": [
            "definition",
            "embedding"
          ],
          "iri": "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.-Mention-1"
        }
      ],
      "relevance": 0.52587890625
    },
    "Entity-we_have_only_e3": {
      "node_id": "we_have_only_e3",
      "disambiguation_index": 0,
      "label": "we have only e3",
      "aliases": [
        "we have only e3"
      ],
      "types": [
        "data",
        "e3"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The number of entities that satisfy both the head and body of an OP rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-3",
          "local_name": "we have only e3",
          "local_types": [
            "data",
            "e3"
          ],
          "iri": "Entity-we_have_only_e3-Mention-1"
        }
      ],
      "relevance": 0.52587890625
    },
    "Entity-relevant_question": {
      "node_id": "relevant_question",
      "disambiguation_index": 0,
      "label": "relevant questions",
      "aliases": [
        "relevant questions"
      ],
      "types": [
        "question",
        "output"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Relevant questions that can be used to pose queries to an oracle or a human expert for knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "relevant questions",
          "local_types": [
            "question",
            "output"
          ],
          "iri": "Entity-relevant_question-Mention-1"
        }
      ],
      "relevance": 0.525390625
    },
    "Entity-end_for_.": {
      "node_id": "end_for_.",
      "disambiguation_index": 0,
      "label": "End for.",
      "aliases": [
        "End for."
      ],
      "types": [
        "end of loop"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The end of loop in Algorithm 1, which marks the termination point of the OP rule miner (OPRL) process.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-10",
          "local_name": "End for.",
          "local_types": [
            "end of loop"
          ],
          "iri": "Entity-end_for_.-Mention-1"
        }
      ],
      "relevance": 0.5244140625
    },
    "Entity-a_user_engaged_in_a_curating_task_or_to_a_web_question-answering_engine": {
      "node_id": "a_user_engaged_in_a_curating_task_or_to_a_web_question-answering_engine",
      "disambiguation_index": 0,
      "label": "a user engaged in a curating task or to a Web question-answering engine",
      "aliases": [
        "a user engaged in a curating task or to a Web question-answering engine"
      ],
      "types": [
        "user",
        "task",
        "engine"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A person involved in completing and maintaining knowledge graphs by answering questions, either manually as part of the curation process or through interaction with a web-based question-answering system.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-7",
          "local_name": "a user engaged in a curating task or to a Web question-answering engine",
          "local_types": [
            "user",
            "task",
            "engine"
          ],
          "iri": "Entity-a_user_engaged_in_a_curating_task_or_to_a_web_question-answering_engine-Mention-1"
        }
      ],
      "relevance": 0.5244140625
    },
    "Entity-the_entity_which_satisfy_the_second_argument_of_p_t": {
      "node_id": "the_entity_which_satisfy_the_second_argument_of_p_t",
      "disambiguation_index": 0,
      "label": "the entities which satisfy the second argument of P_t",
      "aliases": [
        "the entities which satisfy the second argument of P_t"
      ],
      "types": [
        "entities",
        "argument entities"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Entities that satisfy the second argument of an OP rule, which are connected to entities satisfying the first argument through a shared entity.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "the entities which satisfy the second argument of P_t",
          "local_types": [
            "entities",
            "argument entities"
          ],
          "iri": "Entity-the_entity_which_satisfy_the_second_argument_of_p_t-Mention-1"
        }
      ],
      "relevance": 0.5244140625
    },
    "Entity-we_need_to_find_all_kg_fact_that_can_trigger_a_candidate_rule": {
      "node_id": "we_need_to_find_all_kg_fact_that_can_trigger_a_candidate_rule",
      "disambiguation_index": 0,
      "label": "we need to find all KG facts that can trigger a candidate rule",
      "aliases": [
        "we need to find all KG facts that can trigger a candidate rule"
      ],
      "types": [
        "need",
        "KG fact",
        "candidate rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Candidate rules",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "we need to find all KG facts that can trigger a candidate rule",
          "local_types": [
            "need",
            "KG fact",
            "candidate rule"
          ],
          "iri": "Entity-we_need_to_find_all_kg_fact_that_can_trigger_a_candidate_rule-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-we_sum_each_column_of_the_adjacency_matrix_and_transpose_to_obtain_the_vector_v__2___p1_": {
      "node_id": "we_sum_each_column_of_the_adjacency_matrix_and_transpose_to_obtain_the_vector_v__2___p1_",
      "disambiguation_index": 0,
      "label": "we sum each column of the adjacency matrix and transpose to obtain the vector v(2)(P1)",
      "aliases": [
        "we sum each column of the adjacency matrix and transpose to obtain the vector v(2)(P1)"
      ],
      "types": [
        "mathematical operation",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The computation of satisfying entities for a given rule's head or body, specifically finding distinct entities that satisfy the second argument position of the rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "we sum each column of the adjacency matrix and transpose to obtain the vector v(2)(P1)",
          "local_types": [
            "mathematical operation",
            "notation"
          ],
          "iri": "Entity-we_sum_each_column_of_the_adjacency_matrix_and_transpose_to_obtain_the_vector_v__2___p1_-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-thus__if_the_body_of_each_rule_is_instantiated_but_there_is_no_fact_to_fully_instantiate_the_head_of_the_rule__a_relevant_query_is_induced_.": {
      "node_id": "thus__if_the_body_of_each_rule_is_instantiated_but_there_is_no_fact_to_fully_instantiate_the_head_of_the_rule__a_relevant_query_is_induced_.",
      "disambiguation_index": 0,
      "label": "Thus, if the body of each rule is instantiated but there is no fact to fully instantiate the head of the rule, a relevant query is induced.",
      "aliases": [
        "Thus, if the body of each rule is instantiated but there is no fact to fully instantiate the head of the rule, a relevant query is induced."
      ],
      "types": [
        "conclusion",
        "query"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical consequence or inquiry resulting from incomplete information.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-3",
          "local_name": "Thus, if the body of each rule is instantiated but there is no fact to fully instantiate the head of the rule, a relevant query is induced.",
          "local_types": [
            "conclusion",
            "query"
          ],
          "iri": "Entity-thus__if_the_body_of_each_rule_is_instantiated_but_there_is_no_fact_to_fully_instantiate_the_head_of_the_rule__a_relevant_query_is_induced_.-Mention-1"
        }
      ],
      "relevance": 0.52392578125
    },
    "Entity-p_1__e0__e1_": {
      "node_id": "p_1__e0__e1_",
      "disambiguation_index": 0,
      "label": "P_1(e0, e1)",
      "aliases": [
        "P_1(e0, e1)"
      ],
      "types": [
        "equation",
        "mathematical notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A mathematical notation representing an existential rule in a knowledge graph, specifically describing a fact with predicate P_1 and entities e0 and e1.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "P_1(e0, e1)",
          "local_types": [
            "equation",
            "mathematical notation"
          ],
          "iri": "Entity-p_1__e0__e1_-Mention-1"
        }
      ],
      "relevance": 0.5234375
    },
    "Entity-supporting_this_explanation__we_see_that_for_synthetic_poker__which_is_naturally_highly_structured__and_where_all_the_missing_fact_are_present_in_the_test_set__we_have_very_close_to_100__precision_and_excellent_recall": {
      "node_id": "supporting_this_explanation__we_see_that_for_synthetic_poker__which_is_naturally_highly_structured__and_where_all_the_missing_fact_are_present_in_the_test_set__we_have_very_close_to_100__precision_and_excellent_recall",
      "disambiguation_index": 0,
      "label": "Supporting this explanation, we see that for synthetic Poker, which is naturally highly structured, and where all the missing facts are present in the test set, we have very close to 100% precision and excellent recall",
      "aliases": [
        "Supporting this explanation, we see that for synthetic Poker, which is naturally highly structured, and where all the missing facts are present in the test set, we have very close to 100% precision and excellent recall"
      ],
      "types": [
        "evaluation metric",
        "pattern recognition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of accuracy or correctness",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "Supporting this explanation, we see that for synthetic Poker, which is naturally highly structured, and where all the missing facts are present in the test set, we have very close to 100% precision and excellent recall",
          "local_types": [
            "evaluation metric",
            "pattern recognition"
          ],
          "iri": "Entity-supporting_this_explanation__we_see_that_for_synthetic_poker__which_is_naturally_highly_structured__and_where_all_the_missing_fact_are_present_in_the_test_set__we_have_very_close_to_100__precision_and_excellent_recall-Mention-1"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-the_open_path_support": {
      "node_id": "the_open_path_support",
      "disambiguation_index": 0,
      "label": "The open path support",
      "aliases": [
        "The open path support"
      ],
      "types": [
        "concept",
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure that quantifies the number of entities that can instantiate a variable z0 to satisfy both the body and head parts of an open path rule, indicating the support degree for the rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-7-Sentence-1",
          "local_name": "The open path support",
          "local_types": [
            "concept",
            "parameter"
          ],
          "iri": "Entity-the_open_path_support-Mention-1"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-either_of_the_fitness_function__f_op__.__or_f_coo__.___over_the_other": {
      "node_id": "either_of_the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "disambiguation_index": 0,
      "label": "either of the fitness functions, f_op(.) or f_coo(.), over the other",
      "aliases": [
        "either of the fitness functions, f_op(.) or f_coo(.), over the other"
      ],
      "types": [
        "fitness function",
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The choice between two quality estimation methods for open path rules: either using co-occurrence-based fitness function (f_coo) or open-path-based fitness function (f_op), with no clear preference given.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-1",
          "local_name": "either of the fitness functions, f_op(.) or f_coo(.), over the other",
          "local_types": [
            "fitness function",
            "function"
          ],
          "iri": "Entity-either_of_the_fitness_function__f_op__.__or_f_coo__.___over_the_other-Mention-1"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-each_poker_hand": {
      "node_id": "each_poker_hand",
      "disambiguation_index": 0,
      "label": "Each poker hand",
      "aliases": [
        "Each poker hand"
      ],
      "types": [
        "poker_hand"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of five playing cards randomly selected from a limited deck, used as a synthetic dataset for evaluating knowledge graph completion algorithms.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-2",
          "local_name": "Each poker hand",
          "local_types": [
            "poker_hand"
          ],
          "iri": "Entity-each_poker_hand-Mention-1"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-only_50_randomly_selected_predicate_are_targeted": {
      "node_id": "only_50_randomly_selected_predicate_are_targeted",
      "disambiguation_index": 0,
      "label": "only 50 randomly selected predicates are targeted",
      "aliases": [
        "only 50 randomly selected predicates are targeted"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of Wikidata predicates that OPRL learns to mine high-quality rules for, which is limited to 50 randomly selected ones.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-2",
          "local_name": "only 50 randomly selected predicates are targeted",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-only_50_randomly_selected_predicate_are_targeted-Mention-1"
        }
      ],
      "relevance": 0.52294921875
    },
    "Entity-but_only_a_question_.": {
      "node_id": "but_only_a_question_.",
      "disambiguation_index": 0,
      "label": "but only a question.",
      "aliases": [
        "but only a question."
      ],
      "types": [
        "question"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A query that can be generated from an open path (OP) rule",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "but only a question.",
          "local_types": [
            "question"
          ],
          "iri": "Entity-but_only_a_question_.-Mention-1"
        }
      ],
      "relevance": 0.5224609375
    },
    "Entity-p_i-1__e___e___p_i__e__e__": {
      "node_id": "p_i-1__e___e___p_i__e__e__",
      "disambiguation_index": 0,
      "label": "P_i^-1( e', e ) = P_i(e, e')",
      "aliases": [
        "P_i^-1( e', e ) = P_i(e, e')"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A mathematical equation defining the inverse of an OP rule as a function that maps two entities to each other.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-9",
          "local_name": "P_i^-1( e', e ) = P_i(e, e')",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-p_i-1__e___e___p_i__e__e__-Mention-1"
        }
      ],
      "relevance": 0.5224609375
    },
    "Entity-it_ha": {
      "node_id": "it_ha",
      "disambiguation_index": 0,
      "label": "It has",
      "aliases": [
        "It has",
        "r be a CP rule of the form given earlier."
      ],
      "types": [
        "CP rule",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A closed path (CP) rule with no free variables that consists of two parts: a head and a body, where P_h is the single predicate of the head, and P_1, ..., P_n are predicates of the body.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "It has",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-it_ha-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "r be a CP rule of the form given earlier.",
          "local_types": [
            "rule",
            "CP rule"
          ],
          "iri": "Entity-it_ha-Mention-2"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-this_last_step": {
      "node_id": "this_last_step",
      "disambiguation_index": 0,
      "label": "This last step",
      "aliases": [
        "This last step"
      ],
      "types": [
        "step"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of extending some top-ranked candidates by learning new short OP rules for the rightmost predicate and appending them to original tails, which is repeated based on the maximum length of target rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-9",
          "local_name": "This last step",
          "local_types": [
            "step"
          ],
          "iri": "Entity-this_last_step-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-genuinely_missing_fact": {
      "node_id": "genuinely_missing_fact",
      "disambiguation_index": 0,
      "label": "genuinely missing facts",
      "aliases": [
        "genuinely missing facts"
      ],
      "types": [
        "fact",
        "missing fact"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Facts that are absent from a knowledge graph, making it incomplete and affecting the performance of query generation algorithms.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "genuinely missing facts",
          "local_types": [
            "fact",
            "missing fact"
          ],
          "iri": "Entity-genuinely_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.52197265625
    },
    "Entity-embedding-based_fitness_function": {
      "node_id": "embedding-based_fitness_function",
      "disambiguation_index": 0,
      "label": "embedding-based fitness function",
      "aliases": [
        "embedding-based fitness function"
      ],
      "types": [
        "methodology",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical formula that evaluates the suitability of rules or solutions based on their representation as vectors in an embedded space.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "embedding-based fitness function",
          "local_types": [
            "methodology",
            "algorithm"
          ],
          "iri": "Entity-embedding-based_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-p3": {
      "node_id": "p3",
      "disambiguation_index": 0,
      "label": "P3",
      "aliases": [
        "P3",
        "P4"
      ],
      "types": [
        "rule",
        "production rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The production rule 'P3' that extends an existing OP rule by appending a new body to its original tail.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "P3",
          "local_types": [
            "rule",
            "production rule"
          ],
          "iri": "Entity-p3-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "P4",
          "local_types": [
            "rule",
            "production rule"
          ],
          "iri": "Entity-p3-Mention-2"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-an_op_rule_of_the_form__2_": {
      "node_id": "an_op_rule_of_the_form__2_",
      "disambiguation_index": 0,
      "label": "an OP rule of the form (2)",
      "aliases": [
        "an OP rule of the form (2)"
      ],
      "types": [
        "rule",
        "form"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A constrained existential rule in an Open Path format, where z0 appears as the object argument of Pt and subject argument of P1, and zi (i \u2264 n-1) appears as the object argument of Pi and subject argument of Pi+1.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "an OP rule of the form (2)",
          "local_types": [
            "rule",
            "form"
          ],
          "iri": "Entity-an_op_rule_of_the_form__2_-Mention-1"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_it_.": {
      "node_id": "and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_it_.",
      "disambiguation_index": 0,
      "label": "and the number of distinct entities is given by counting the number of non-zero elements in it.",
      "aliases": [
        "and the number of distinct entities is given by counting the number of non-zero elements in it."
      ],
      "types": [
        "mathematical concept",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The notion of satisfying entities, which counts the number of non-zero elements in an adjacency matrix representation of a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-2",
          "local_name": "and the number of distinct entities is given by counting the number of non-zero elements in it.",
          "local_types": [
            "mathematical concept",
            "notation"
          ],
          "iri": "Entity-and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_it_.-Mention-1"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-early_exploration_published_in_.": {
      "node_id": "early_exploration_published_in_.",
      "disambiguation_index": 0,
      "label": "early explorations published in.",
      "aliases": [
        "early explorations published in."
      ],
      "types": [
        "publication"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Early explorations refer to the initial research and studies that laid the foundation for active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-1",
          "local_name": "early explorations published in.",
          "local_types": [
            "publication"
          ],
          "iri": "Entity-early_exploration_published_in_.-Mention-1"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-it_(4)": {
      "node_id": "it_(4)",
      "disambiguation_index": 4,
      "label": "it",
      "aliases": [
        "it"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of entities that satisfy the head of an OP rule, used in computing the quality metrics OPSC and OPHC.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-2",
          "local_name": "it",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-it_(4)-Mention-1"
        }
      ],
      "relevance": 0.521484375
    },
    "Entity-opsc_threshold": {
      "node_id": "opsc_threshold",
      "disambiguation_index": 0,
      "label": "OPSC threshold",
      "aliases": [
        "OPSC threshold"
      ],
      "types": [
        "threshold value",
        "setting",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The quality threshold used to filter out OP rules learned by OPRL algorithm.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "OPSC threshold",
          "local_types": [
            "threshold value",
            "setting",
            "parameter"
          ],
          "iri": "Entity-opsc_threshold-Mention-1"
        }
      ],
      "relevance": 0.52099609375
    },
    "Entity-a_link_predictor_(1)": {
      "node_id": "a_link_predictor_(1)",
      "disambiguation_index": 1,
      "label": "a link predictor",
      "aliases": [
        "a link predictor"
      ],
      "types": [
        "model",
        "predictor",
        "link predictor",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A machine learning model designed to predict missing links between entities in a knowledge graph, given a query or set of queries.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-4",
          "local_name": "a link predictor",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-a_link_predictor_(1)-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-6-Sentence-2",
          "local_name": "a link predictor",
          "local_types": [
            "model",
            "link predictor"
          ],
          "iri": "Entity-a_link_predictor_(1)-Mention-2"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-3",
          "local_name": "a link predictor",
          "local_types": [
            "algorithm",
            "predictor"
          ],
          "iri": "Entity-a_link_predictor_(1)-Mention-3"
        }
      ],
      "relevance": 0.52099609375
    },
    "Entity-p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___are_fact_in_the_kg": {
      "node_id": "p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___are_fact_in_the_kg",
      "disambiguation_index": 0,
      "label": "P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') are facts in the KG",
      "aliases": [
        "P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') are facts in the KG"
      ],
      "types": [
        "facts"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') are facts in the KG",
          "local_types": [
            "facts"
          ],
          "iri": "Entity-p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___are_fact_in_the_kg-Mention-1"
        }
      ],
      "relevance": 0.52099609375
    },
    "Entity-after": {
      "node_id": "after",
      "disambiguation_index": 0,
      "label": "After",
      "aliases": [
        "After"
      ],
      "types": [
        "event"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The point in time when the set of entities is obtained and all facts (links) between these entities form the reduced Knowledge Graph, K'.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-10",
          "local_name": "After",
          "local_types": [
            "event"
          ],
          "iri": "Entity-after-Mention-1"
        }
      ],
      "relevance": 0.52099609375
    },
    "Entity-a_perfect_link_predictor_(1)": {
      "node_id": "a_perfect_link_predictor_(1)",
      "disambiguation_index": 1,
      "label": "a perfect link predictor",
      "aliases": [
        "a perfect link predictor"
      ],
      "types": [
        "technology",
        "predictor",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A hypothetical algorithm or system capable of accurately answering any given question with one correct answer when such an answer exists, without providing ranked sequences of possible answers.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-4-Sentence-2",
          "local_name": "a perfect link predictor",
          "local_types": [
            "technology",
            "predictor",
            "algorithm"
          ],
          "iri": "Entity-a_perfect_link_predictor_(1)-Mention-1"
        }
      ],
      "relevance": 0.52099609375
    },
    "Entity-query_generated_by_a_modified_leading-edge_link_predictor": {
      "node_id": "query_generated_by_a_modified_leading-edge_link_predictor",
      "disambiguation_index": 0,
      "label": "queries generated by a modified leading-edge link predictor",
      "aliases": [
        "queries generated by a modified leading-edge link predictor"
      ],
      "types": [
        "methodology",
        "predictor",
        "predictive model",
        "query generator",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A methodology or algorithm that generates queries using rules learned from a modified leading-edge link predictor.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-8-Sentence-3",
          "local_name": "queries generated by a modified leading-edge link predictor",
          "local_types": [
            "methodology",
            "predictor",
            "predictive model",
            "query generator",
            "algorithm"
          ],
          "iri": "Entity-query_generated_by_a_modified_leading-edge_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.5205078125
    },
    "Entity-the_set_of_entity_is_obtained": {
      "node_id": "the_set_of_entity_is_obtained",
      "disambiguation_index": 0,
      "label": "the set of entities is obtained",
      "aliases": [
        "the set of entities is obtained"
      ],
      "types": [
        "process",
        "obtaining"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The initial set of entities involved in the target predicate P, which is used as input for reducing the knowledge graph size and computing embeddings.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-10",
          "local_name": "the set of entities is obtained",
          "local_types": [
            "process",
            "obtaining"
          ],
          "iri": "Entity-the_set_of_entity_is_obtained-Mention-1"
        }
      ],
      "relevance": 0.5205078125
    },
    "Entity-for_this_purpose": {
      "node_id": "for_this_purpose",
      "disambiguation_index": 0,
      "label": "For this purpose",
      "aliases": [
        "For this purpose"
      ],
      "types": [
        "purpose"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The consideration of what constitutes a relevant query in evaluating the performance of OPRL-generated queries, where relevance is defined as having an answer present in the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "For this purpose",
          "local_types": [
            "purpose"
          ],
          "iri": "Entity-for_this_purpose-Mention-1"
        }
      ],
      "relevance": 0.5205078125
    },
    "Entity-existential_rule": {
      "node_id": "existential_rule",
      "disambiguation_index": 0,
      "label": "existential rules",
      "aliases": [
        "existential rules"
      ],
      "types": [
        "knowledge representation",
        "rule language",
        "logical concept",
        "concept",
        "language",
        "existential_rule",
        "knowledge graph rule",
        "rule",
        "logical framework",
        "formal system",
        "rule_type"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of logical principles or guidelines that govern the existence and relationships between entities, concepts, or objects.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "existential rules",
          "local_types": [
            "concept",
            "rule",
            "logical concept"
          ],
          "iri": "Entity-existential_rule-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "existential rules",
          "local_types": [
            "rule language",
            "language",
            "existential_rule",
            "logical framework",
            "formal system",
            "rule_type"
          ],
          "iri": "Entity-existential_rule-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-3",
          "local_name": "existential rules",
          "local_types": [
            "knowledge representation",
            "existential_rule",
            "knowledge graph rule",
            "rule",
            "rule_type"
          ],
          "iri": "Entity-existential_rule-Mention-3"
        }
      ],
      "relevance": 0.52001953125
    },
    "Entity-the_vector_size_set_to_100": {
      "node_id": "the_vector_size_set_to_100",
      "disambiguation_index": 0,
      "label": "the vector size set to 100",
      "aliases": [
        "the vector size set to 100"
      ],
      "types": [
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The parameter that determines the dimensionality of the vectors generated by the RESCAL algorithm for knowledge graph embedding.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-1",
          "local_name": "the vector size set to 100",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-the_vector_size_set_to_100-Mention-1"
        }
      ],
      "relevance": 0.52001953125
    },
    "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings": {
      "node_id": "model__often_expressed_a_logical_rule_or_vector_embeddings",
      "disambiguation_index": 0,
      "label": "models, often expressed as logical rules or vector embeddings",
      "aliases": [
        "models, often expressed as logical rules or vector embeddings"
      ],
      "types": [
        "model",
        "representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of an abstract concept that can be used to make predictions or classify data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "models, often expressed as logical rules or vector embeddings",
          "local_types": [
            "model",
            "representation"
          ],
          "iri": "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings-Mention-1"
        }
      ],
      "relevance": 0.51953125
    },
    "Entity-fact_in_the_kg_that_is_an_instance_of_it_head": {
      "node_id": "fact_in_the_kg_that_is_an_instance_of_it_head",
      "disambiguation_index": 0,
      "label": "fact in the KG that is an instance of its head",
      "aliases": [
        "fact in the KG that is an instance of its head"
      ],
      "types": [
        "knowledge graph entity",
        "data point"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A specific piece of information or data point within a knowledge graph, which is related to its parent concept as an instance.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-6",
          "local_name": "fact in the KG that is an instance of its head",
          "local_types": [
            "knowledge graph entity",
            "data point"
          ],
          "iri": "Entity-fact_in_the_kg_that_is_an_instance_of_it_head-Mention-1"
        }
      ],
      "relevance": 0.51953125
    },
    "Entity-link_prediction__entity_resolution__and_link-based_clustering": {
      "node_id": "link_prediction__entity_resolution__and_link-based_clustering",
      "disambiguation_index": 0,
      "label": "link prediction, entity resolution, and link-based clustering",
      "aliases": [
        "link prediction, entity resolution, and link-based clustering"
      ],
      "types": [
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of predicting relationships between entities or identifying duplicate records within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "link prediction, entity resolution, and link-based clustering",
          "local_types": [
            "task"
          ],
          "iri": "Entity-link_prediction__entity_resolution__and_link-based_clustering-Mention-1"
        }
      ],
      "relevance": 0.51953125
    },
    "Entity-yago2_core": {
      "node_id": "yago2_core",
      "disambiguation_index": 0,
      "label": "YAGO2 core",
      "aliases": [
        "YAGO2 core"
      ],
      "types": [
        "benchmark",
        "dataset",
        "knowledge graph",
        "entity",
        "database system",
        "knowledge base"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A widely-used knowledge graph dataset that serves as a benchmark for evaluating various natural language processing and artificial intelligence models.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-3",
          "local_name": "YAGO2 core",
          "local_types": [
            "dataset",
            "database system",
            "knowledge base",
            "knowledge graph"
          ],
          "iri": "Entity-yago2_core-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-3",
          "local_name": "YAGO2 core",
          "local_types": [
            "dataset",
            "knowledge base",
            "knowledge graph"
          ],
          "iri": "Entity-yago2_core-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-3",
          "local_name": "YAGO2 core",
          "local_types": [
            "benchmark",
            "dataset",
            "knowledge graph",
            "entity",
            "knowledge base"
          ],
          "iri": "Entity-yago2_core-Mention-3"
        }
      ],
      "relevance": 0.51904296875
    },
    "Entity-pattern": {
      "node_id": "pattern",
      "disambiguation_index": 0,
      "label": "pattern",
      "aliases": [
        "patterns",
        "pattern"
      ],
      "types": [
        "template",
        "data pattern",
        "knowledge structure",
        "rule pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A predefined structure or template used to identify and instantiate facts, rules, or relationships within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-9-Sentence-2",
          "local_name": "pattern",
          "local_types": [
            "rule pattern",
            "template"
          ],
          "iri": "Entity-pattern-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "patterns",
          "local_types": [
            "data pattern",
            "knowledge structure"
          ],
          "iri": "Entity-pattern-Mention-2"
        }
      ],
      "relevance": 0.51904296875
    },
    "Entity-a_potential_missing_fact": {
      "node_id": "a_potential_missing_fact",
      "disambiguation_index": 0,
      "label": "a potential missing fact",
      "aliases": [
        "a specific missing fact",
        "a potential missing fact"
      ],
      "types": [
        "fact",
        "missing fact"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A piece of information or entity that may not exist in the knowledge graph, but can be inferred by an open path rule and requires further investigation.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "a potential missing fact",
          "local_types": [
            "fact",
            "missing fact"
          ],
          "iri": "Entity-a_potential_missing_fact-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-5",
          "local_name": "a specific missing fact",
          "local_types": [
            "fact"
          ],
          "iri": "Entity-a_potential_missing_fact-Mention-2"
        }
      ],
      "relevance": 0.51904296875
    },
    "Entity-from_an_instantiation_of_the_body_of_an_op_rule": {
      "node_id": "from_an_instantiation_of_the_body_of_an_op_rule",
      "disambiguation_index": 0,
      "label": "From an instantiation of the body of an OP rule",
      "aliases": [
        "From an instantiation of the body of an OP rule"
      ],
      "types": [
        "text",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept referred to by 'From an instantiation of the body of an OP rule' is the idea that from a specific instance or application of the body part of an Open Path (OP) rule, one can only infer a question rather than a fact.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "From an instantiation of the body of an OP rule",
          "local_types": [
            "text",
            "rule"
          ],
          "iri": "Entity-from_an_instantiation_of_the_body_of_an_op_rule-Mention-1"
        }
      ],
      "relevance": 0.51904296875
    },
    "Entity-f__e0__p1__e1___e_0t__p1__e1": {
      "node_id": "f__e0__p1__e1___e_0t__p1__e1",
      "disambiguation_index": 0,
      "label": "f(e0, P1, e1) = E_0^T \u00b7 P1 \u00b7 E1",
      "aliases": [
        "f(e0, P1, e1) = E_0^T \u00b7 P1 \u00b7 E1"
      ],
      "types": [
        "equation",
        "mathematical notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A scoring function used in rule learning for estimating the plausibility of facts in a knowledge graph",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "f(e0, P1, e1) = E_0^T \u00b7 P1 \u00b7 E1",
          "local_types": [
            "equation",
            "mathematical notation"
          ],
          "iri": "Entity-f__e0__p1__e1___e_0t__p1__e1-Mention-1"
        }
      ],
      "relevance": 0.51904296875
    },
    "Entity-the_explanatory_power_of_the_rule": {
      "node_id": "the_explanatory_power_of_the_rule",
      "disambiguation_index": 0,
      "label": "the explanatory power of the rule",
      "aliases": [
        "the explanatory power of the rule"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept referring to the ability of a rule to explain or account for a proportion of facts that satisfy its head, measured as the ratio of inferred head instances to total satisfied body and head instances.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-4",
          "local_name": "the explanatory power of the rule",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_explanatory_power_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.5185546875
    },
    "Entity-rescal_evaluation_function": {
      "node_id": "rescal_evaluation_function",
      "disambiguation_index": 0,
      "label": "RESCAL evaluation function",
      "aliases": [
        "RESCAL evaluation function"
      ],
      "types": [
        "evaluation_function",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The RESCAL evaluation function used to estimate rule quality by computing both entity and predicate embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-4",
          "local_name": "RESCAL evaluation function",
          "local_types": [
            "evaluation_function",
            "algorithm"
          ],
          "iri": "Entity-rescal_evaluation_function-Mention-1"
        }
      ],
      "relevance": 0.5185546875
    },
    "Entity-representation_learning_method": {
      "node_id": "representation_learning_method",
      "disambiguation_index": 0,
      "label": "Representation learning methods",
      "aliases": [
        "Representation learning methods"
      ],
      "types": [
        "method",
        "technique",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Techniques or algorithms used to learn a representation of entities or concepts that captures their semantic meaning.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "Representation learning methods",
          "local_types": [
            "method",
            "technique",
            "algorithm"
          ],
          "iri": "Entity-representation_learning_method-Mention-1"
        }
      ],
      "relevance": 0.51806640625
    },
    "Entity-link_prediction": {
      "node_id": "link_prediction",
      "disambiguation_index": 0,
      "label": "link prediction",
      "aliases": [
        "link prediction"
      ],
      "types": [
        "algorithmic task",
        "task",
        "evaluation metric",
        "computer science task",
        "predictive modeling technique",
        "evaluation method",
        "model",
        "concept",
        "prediction",
        "problem",
        "machine learning algorithm",
        "algorithm",
        "method",
        "algorithmic problem",
        "technique"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The process of predicting unobserved links or relationships between entities",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "link prediction",
          "local_types": [
            "evaluation method",
            "algorithmic task",
            "task",
            "evaluation metric"
          ],
          "iri": "Entity-link_prediction-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "link prediction",
          "local_types": [
            "predictive modeling technique",
            "machine learning algorithm",
            "task",
            "algorithm"
          ],
          "iri": "Entity-link_prediction-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-9",
          "local_name": "link prediction",
          "local_types": [
            "method",
            "technique",
            "prediction"
          ],
          "iri": "Entity-link_prediction-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-6",
          "local_name": "link prediction",
          "local_types": [
            "concept",
            "technique",
            "algorithm"
          ],
          "iri": "Entity-link_prediction-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "link prediction",
          "local_types": [
            "model",
            "problem",
            "task",
            "algorithm"
          ],
          "iri": "Entity-link_prediction-Mention-5"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-8",
          "local_name": "link prediction",
          "local_types": [
            "algorithmic problem",
            "task",
            "computer science task"
          ],
          "iri": "Entity-link_prediction-Mention-6"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-2",
          "local_name": "link prediction",
          "local_types": [
            "task",
            "evaluation method"
          ],
          "iri": "Entity-link_prediction-Mention-7"
        }
      ],
      "relevance": 0.51806640625
    },
    "Entity-rescal_capture_rich_interaction_amongst_entity_and_predicate_because_it_learns_a_larger_number_of_more_finely-targeted_weight_parameter_than_method_which_embed_the_predicate_into_vector_.": {
      "node_id": "rescal_capture_rich_interaction_amongst_entity_and_predicate_because_it_learns_a_larger_number_of_more_finely-targeted_weight_parameter_than_method_which_embed_the_predicate_into_vector_.",
      "disambiguation_index": 0,
      "label": "RESCAL captures rich interactions amongst entities and predicates because it learns a larger number of more finely-targeted weight parameters than methods which embed the predicates into vectors.",
      "aliases": [
        "RESCAL captures rich interactions amongst entities and predicates because it learns a larger number of more finely-targeted weight parameters than methods which embed the predicates into vectors."
      ],
      "types": [
        "property",
        "advantage"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A compositional-based embedding learner that captures rich interactions amongst entities and predicates by learning a larger number of more finely-targeted weight parameters.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-6",
          "local_name": "RESCAL captures rich interactions amongst entities and predicates because it learns a larger number of more finely-targeted weight parameters than methods which embed the predicates into vectors.",
          "local_types": [
            "property",
            "advantage"
          ],
          "iri": "Entity-rescal_capture_rich_interaction_amongst_entity_and_predicate_because_it_learns_a_larger_number_of_more_finely-targeted_weight_parameter_than_method_which_embed_the_predicate_into_vector_.-Mention-1"
        }
      ],
      "relevance": 0.51806640625
    },
    "Entity-_e__f_": {
      "node_id": "_e__f_",
      "disambiguation_index": 0,
      "label": "(E,F)",
      "aliases": [
        "(e, e')",
        "(E, F)",
        "(E,F)"
      ],
      "types": [
        "knowledge graph",
        "tuple",
        "entity",
        "notation",
        "pair",
        "set",
        "expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A knowledge graph pair consisting of an entity E and its corresponding feature or attribute F.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "(E,F)",
          "local_types": [
            "knowledge graph",
            "tuple",
            "notation",
            "expression"
          ],
          "iri": "Entity-_e__f_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "(E,F)",
          "local_types": [
            "pair",
            "tuple",
            "set",
            "notation"
          ],
          "iri": "Entity-_e__f_-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-4",
          "local_name": "(e, e')",
          "local_types": [
            "tuple",
            "entity"
          ],
          "iri": "Entity-_e__f_-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "(e, e')",
          "local_types": [
            "tuple",
            "pair"
          ],
          "iri": "Entity-_e__f_-Mention-4"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-fi_loc": {
      "node_id": "fi_loc",
      "disambiguation_index": 0,
      "label": "f^i_loc",
      "aliases": [
        "f^i_loc",
        "f^0_loc",
        "f^i_loc (P_i, P_{i+1})"
      ],
      "types": [
        "function",
        "function_definition",
        "mathematical function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The local co-occurrence fitness function that estimates the quality of an open path rule by comparing the predicate embeddings along a chain of predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "f^i_loc",
          "local_types": [
            "function",
            "mathematical function"
          ],
          "iri": "Entity-fi_loc-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "f^i_loc (P_i, P_{i+1})",
          "local_types": [
            "function_definition"
          ],
          "iri": "Entity-fi_loc-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-16-Sentence-1",
          "local_name": "f^0_loc",
          "local_types": [
            "function"
          ],
          "iri": "Entity-fi_loc-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-16-Sentence-1",
          "local_name": "f^i_loc",
          "local_types": [
            "function"
          ],
          "iri": "Entity-fi_loc-Mention-4"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-this_way": {
      "node_id": "this_way",
      "disambiguation_index": 0,
      "label": "this way",
      "aliases": [
        "this way"
      ],
      "types": [
        "approach"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The approach or method of predicting missing facts, including entities that are not present in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "this way",
          "local_types": [
            "approach"
          ],
          "iri": "Entity-this_way-Mention-1"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-we_sum_each_row_corresponding_to_each_value_for_the_first_argument": {
      "node_id": "we_sum_each_row_corresponding_to_each_value_for_the_first_argument",
      "disambiguation_index": 0,
      "label": "we sum each row corresponding to each value for the first argument",
      "aliases": [
        "we sum each row corresponding to each value for the first argument"
      ],
      "types": [
        "algorithm",
        "mathematics"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of counting non-zero elements in a specific vector (v(1)(B)) that represents entities satisfying the first argument position of a rule's body.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-3",
          "local_name": "we sum each row corresponding to each value for the first argument",
          "local_types": [
            "algorithm",
            "mathematics"
          ],
          "iri": "Entity-we_sum_each_row_corresponding_to_each_value_for_the_first_argument-Mention-1"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-each_selected_randomly_with_probability_of_it_proportion_in_the_test_set": {
      "node_id": "each_selected_randomly_with_probability_of_it_proportion_in_the_test_set",
      "disambiguation_index": 0,
      "label": "each selected randomly with probability of its proportion in the test set",
      "aliases": [
        "each selected randomly with probability of its proportion in the test set"
      ],
      "types": [
        "probability",
        "test set"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method for generating relevant queries from an existing knowledge graph, where each predicate is chosen randomly based on its frequency in a test dataset.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "each selected randomly with probability of its proportion in the test set",
          "local_types": [
            "probability",
            "test set"
          ],
          "iri": "Entity-each_selected_randomly_with_probability_of_it_proportion_in_the_test_set-Mention-1"
        }
      ],
      "relevance": 0.517578125
    },
    "Entity-e3": {
      "node_id": "e3",
      "disambiguation_index": 0,
      "label": "e3",
      "aliases": [
        "e3"
      ],
      "types": [
        "variable",
        "example",
        "concept",
        "idea",
        "identifier"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An entity that is related to an existing entity in the set via any predicate and added to the reduced knowledge graph K'.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-8",
          "local_name": "e3",
          "local_types": [
            "variable",
            "identifier"
          ],
          "iri": "Entity-e3-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-7-Sentence-4",
          "local_name": "e3",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-e3-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-9-Sentence-3",
          "local_name": "e3",
          "local_types": [
            "example"
          ],
          "iri": "Entity-e3-Mention-3"
        }
      ],
      "relevance": 0.51708984375
    },
    "Entity-sim__p__2___i__p__1_____i1__": {
      "node_id": "sim__p__2___i__p__1_____i1__",
      "disambiguation_index": 0,
      "label": "sim(P(2)_i , P(1)_{i+1})",
      "aliases": [
        "sim(P(2)_i , P(1)_{i+1})"
      ],
      "types": [
        "function call"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The similarity between the embedding of a predicate's object argument and the embedding of its subject argument, calculated at each step along an open path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "sim(P(2)_i , P(1)_{i+1})",
          "local_types": [
            "function call"
          ],
          "iri": "Entity-sim__p__2___i__p__1_____i1__-Mention-1"
        }
      ],
      "relevance": 0.51708984375
    },
    "Entity-it_head_and_body": {
      "node_id": "it_head_and_body",
      "disambiguation_index": 0,
      "label": "its head and body",
      "aliases": [
        "its head and body"
      ],
      "types": [
        "head",
        "body"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The head and body refer to the two parts of an Open Path (OP) rule, which connects its endpoints via a shared entity.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "its head and body",
          "local_types": [
            "head",
            "body"
          ],
          "iri": "Entity-it_head_and_body-Mention-1"
        }
      ],
      "relevance": 0.51708984375
    },
    "Entity-to_compute": {
      "node_id": "to_compute",
      "disambiguation_index": 0,
      "label": "To compute",
      "aliases": [
        "To compute"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process of determining the quality measures OPSC and OPHC for candidate rules in an algorithm, typically involving matrix and vector operations.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-1",
          "local_name": "To compute",
          "local_types": [
            "method"
          ],
          "iri": "Entity-to_compute-Mention-1"
        }
      ],
      "relevance": 0.51708984375
    },
    "Entity-_(1)": {
      "node_id": "_(1)",
      "disambiguation_index": 1,
      "label": "?",
      "aliases": [
        "?"
      ],
      "types": [
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of possible queries about a target predicate and its entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "?",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-_(1)-Mention-1"
        }
      ],
      "relevance": 0.51708984375
    },
    "Entity-derived_from_the_closed_path_form__definition_2__.": {
      "node_id": "derived_from_the_closed_path_form__definition_2__.",
      "disambiguation_index": 0,
      "label": "derived from the closed path forms (Definition 2).",
      "aliases": [
        "derived from the closed path forms (Definition 2)."
      ],
      "types": [
        "definition",
        "closed_path_forms"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Metrics for assessing the quality of mined open path rules, including Open Path Standard Confidence and Open Path Head Coverage.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "derived from the closed path forms (Definition 2).",
          "local_types": [
            "definition",
            "closed_path_forms"
          ],
          "iri": "Entity-derived_from_the_closed_path_form__definition_2__.-Mention-1"
        }
      ],
      "relevance": 0.5166015625
    },
    "Entity-rule_learning_system": {
      "node_id": "rule_learning_system",
      "disambiguation_index": 0,
      "label": "Rule learning systems",
      "aliases": [
        "Rule learning systems"
      ],
      "types": [
        "concept",
        "field of study",
        "algorithm",
        "system",
        "research area"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Systems that learn and apply rules based on predefined criteria or patterns.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-1",
          "local_name": "Rule learning systems",
          "local_types": [
            "concept",
            "field of study",
            "algorithm",
            "system",
            "research area"
          ],
          "iri": "Entity-rule_learning_system-Mention-1"
        }
      ],
      "relevance": 0.51611328125
    },
    "Entity-by_appending_the_new_body_to_the_original_tail": {
      "node_id": "by_appending_the_new_body_to_the_original_tail",
      "disambiguation_index": 0,
      "label": "by appending the new body to the original tail",
      "aliases": [
        "by appending the new body to the original tail"
      ],
      "types": [
        "operation",
        "append"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of extending an existing OP rule by adding a new sequence of predicates (body) to its original body",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-14",
          "local_name": "by appending the new body to the original tail",
          "local_types": [
            "operation",
            "append"
          ],
          "iri": "Entity-by_appending_the_new_body_to_the_original_tail-Mention-1"
        }
      ],
      "relevance": 0.51611328125
    },
    "Entity-usually_derived_from_a_holdback_test_set_in_experimental_setting": {
      "node_id": "usually_derived_from_a_holdback_test_set_in_experimental_setting",
      "disambiguation_index": 0,
      "label": "usually derived from a holdback test set in experimental settings",
      "aliases": [
        "usually derived from a holdback test set in experimental settings"
      ],
      "types": [
        "experimentation setting"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of query origin, typically used as a testing ground for evaluating knowledge graph completion methods.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "usually derived from a holdback test set in experimental settings",
          "local_types": [
            "experimentation setting"
          ],
          "iri": "Entity-usually_derived_from_a_holdback_test_set_in_experimental_setting-Mention-1"
        }
      ],
      "relevance": 0.515625
    },
    "Entity-the_head": {
      "node_id": "the_head",
      "disambiguation_index": 0,
      "label": "the head",
      "aliases": [
        "the head"
      ],
      "types": [
        "location"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept referred to by 'the head' is a location in a knowledge graph (KG) that serves as the starting point for generating queries about predicate P.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "the head",
          "local_types": [
            "location"
          ],
          "iri": "Entity-the_head-Mention-1"
        }
      ],
      "relevance": 0.515625
    },
    "Entity-rule": {
      "node_id": "rule",
      "disambiguation_index": 0,
      "label": "rules",
      "aliases": [
        "rules",
        "rule",
        "Rules"
      ],
      "types": [
        "rule-based system",
        "mathematical concept",
        "regulation",
        "concept",
        "guideline",
        "set of rules",
        "computational process",
        "conceptual framework",
        "computational model",
        "knowledge base",
        "rule set",
        "logic",
        "process",
        "inferential rules",
        "collection",
        "algorithmic process",
        "pattern",
        "logical rules",
        "logical construct",
        "algorithmic procedure",
        "methodology",
        "computational rule",
        "computer program",
        "decision-making units",
        "rule",
        "constraint",
        "data set",
        "logical statement",
        "set",
        "computer science concept",
        "algorithmic rule",
        "condition",
        "computational method",
        "decision-making tool",
        "logical rule",
        "knowledge representation",
        "algorithmic components",
        "algorithm",
        "artificial intelligence",
        "algorithmic structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of principles or guidelines used for decision-making, problem-solving, or computational processing.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "knowledge base",
            "data set"
          ],
          "iri": "Entity-rule-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-5",
          "local_name": "rule",
          "local_types": [
            "logic",
            "computational process"
          ],
          "iri": "Entity-rule-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "methodology",
            "concept",
            "algorithm"
          ],
          "iri": "Entity-rule-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-4",
          "local_name": "rules",
          "local_types": [
            "concept",
            "guideline"
          ],
          "iri": "Entity-rule-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "rule",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-rule-Mention-5"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "rule",
          "local_types": [
            "mathematical concept",
            "logical construct"
          ],
          "iri": "Entity-rule-Mention-6"
        },
        {
          "reference": "Section-3-Paragraph-4-Sentence-1",
          "local_name": "Rules",
          "local_types": [
            "conceptual framework",
            "concept",
            "rule"
          ],
          "iri": "Entity-rule-Mention-7"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "rule",
          "local_types": [
            "logical rule",
            "algorithm"
          ],
          "iri": "Entity-rule-Mention-8"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-4",
          "local_name": "rule",
          "local_types": [
            "conceptual framework",
            "algorithmic structure"
          ],
          "iri": "Entity-rule-Mention-9"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-6",
          "local_name": "rule",
          "local_types": [
            "algorithm",
            "computational rule"
          ],
          "iri": "Entity-rule-Mention-10"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "rule",
          "local_types": [
            "logical construct",
            "computational model"
          ],
          "iri": "Entity-rule-Mention-11"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-11",
          "local_name": "rule",
          "local_types": [
            "constraint",
            "condition"
          ],
          "iri": "Entity-rule-Mention-12"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-14",
          "local_name": "rule",
          "local_types": [
            "algorithmic process",
            "computational method"
          ],
          "iri": "Entity-rule-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "rule set",
            "knowledge base",
            "concept"
          ],
          "iri": "Entity-rule-Mention-14"
        },
        {
          "reference": "Section-6-Paragraph-14-Sentence-1",
          "local_name": "rule",
          "local_types": [
            "concept",
            "algorithm",
            "pattern"
          ],
          "iri": "Entity-rule-Mention-15"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "decision-making units",
            "algorithmic components"
          ],
          "iri": "Entity-rule-Mention-16"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-4",
          "local_name": "rules",
          "local_types": [
            "computer program",
            "decision-making tool"
          ],
          "iri": "Entity-rule-Mention-17"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-rule-Mention-18"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "rule",
          "local_types": [
            "logical rule",
            "algorithmic procedure"
          ],
          "iri": "Entity-rule-Mention-19"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "algorithm",
            "process"
          ],
          "iri": "Entity-rule-Mention-20"
        },
        {
          "reference": "Section-9-Paragraph-12-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "concept",
            "set of rules"
          ],
          "iri": "Entity-rule-Mention-21"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "logical statement",
            "knowledge representation",
            "artificial intelligence"
          ],
          "iri": "Entity-rule-Mention-22"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "concept",
            "rule set"
          ],
          "iri": "Entity-rule-Mention-23"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical statement"
          ],
          "iri": "Entity-rule-Mention-24"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical statement"
          ],
          "iri": "Entity-rule-Mention-25"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-4",
          "local_name": "rules",
          "local_types": [
            "regulation"
          ],
          "iri": "Entity-rule-Mention-26"
        },
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "logical statement",
            "knowledge representation",
            "pattern"
          ],
          "iri": "Entity-rule-Mention-27"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical statement"
          ],
          "iri": "Entity-rule-Mention-28"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-3",
          "local_name": "rule",
          "local_types": [
            "logical construct",
            "algorithmic process"
          ],
          "iri": "Entity-rule-Mention-29"
        },
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical statement"
          ],
          "iri": "Entity-rule-Mention-30"
        },
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical statement"
          ],
          "iri": "Entity-rule-Mention-31"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical rules"
          ],
          "iri": "Entity-rule-Mention-32"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical rules"
          ],
          "iri": "Entity-rule-Mention-33"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "logical rules",
            "computer science concept",
            "algorithmic rule",
            "knowledge representation"
          ],
          "iri": "Entity-rule-Mention-34"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical rules"
          ],
          "iri": "Entity-rule-Mention-35"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical rules"
          ],
          "iri": "Entity-rule-Mention-36"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "knowledge representation",
            "logical rules"
          ],
          "iri": "Entity-rule-Mention-37"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "rules",
          "local_types": [
            "rule-based system",
            "knowledge representation"
          ],
          "iri": "Entity-rule-Mention-38"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "rules",
          "local_types": [
            "algorithm",
            "rule set"
          ],
          "iri": "Entity-rule-Mention-39"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-1",
          "local_name": "rules",
          "local_types": [
            "logical rules",
            "inferential rules"
          ],
          "iri": "Entity-rule-Mention-40"
        }
      ],
      "relevance": 0.51513671875
    },
    "Entity-p_i": {
      "node_id": "p_i",
      "disambiguation_index": 0,
      "label": "P_i",
      "aliases": [
        "P_i"
      ],
      "types": [
        "variable",
        "parameter",
        "predicate",
        "logical operator",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical operator or predicate in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "P_i",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-p_i-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "P_i",
          "local_types": [
            "predicate",
            "relation"
          ],
          "iri": "Entity-p_i-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-8",
          "local_name": "P_i",
          "local_types": [
            "predicate",
            "variable"
          ],
          "iri": "Entity-p_i-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "P_i",
          "local_types": [
            "predicate",
            "logical operator"
          ],
          "iri": "Entity-p_i-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "P_i",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-p_i-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-16-Sentence-1",
          "local_name": "P_i",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-p_i-Mention-6"
        }
      ],
      "relevance": 0.51513671875
    },
    "Entity-embedding_representation": {
      "node_id": "embedding_representation",
      "disambiguation_index": 0,
      "label": "embedding representations",
      "aliases": [
        "embedding representations",
        "embedding representation"
      ],
      "types": [
        "machine learning",
        "model component",
        "mathematical concept",
        "machine learning technique",
        "data structure",
        "mathematical construct",
        "machine learning concept",
        "artificial intelligence",
        "computational concept",
        "representation",
        "computational method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical representation of data or concepts in a high-dimensional space that captures their semantic meaning.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "embedding representations",
          "local_types": [
            "data structure",
            "computational concept"
          ],
          "iri": "Entity-embedding_representation-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "embedding representations",
          "local_types": [
            "mathematical construct",
            "machine learning technique",
            "data structure"
          ],
          "iri": "Entity-embedding_representation-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-3",
          "local_name": "embedding representation",
          "local_types": [
            "machine learning",
            "model component",
            "mathematical concept",
            "machine learning concept",
            "artificial intelligence",
            "representation",
            "computational method"
          ],
          "iri": "Entity-embedding_representation-Mention-3"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-3",
          "local_name": "embedding representation",
          "local_types": [
            "mathematical concept",
            "mathematical construct",
            "computational method",
            "machine learning concept",
            "data structure"
          ],
          "iri": "Entity-embedding_representation-Mention-4"
        }
      ],
      "relevance": 0.51513671875
    },
    "Entity-we_can_not_infer_a_fact__but_only_a_question": {
      "node_id": "we_can_not_infer_a_fact__but_only_a_question",
      "disambiguation_index": 0,
      "label": "we cannot infer a fact, but only a question",
      "aliases": [
        "we cannot infer a fact, but only a question"
      ],
      "types": [
        "statement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept that from an instantiation of the body of an Open Path (OP) rule, one can only infer a query or question rather than a fact.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "we cannot infer a fact, but only a question",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-we_can_not_infer_a_fact__but_only_a_question-Mention-1"
        }
      ],
      "relevance": 0.51513671875
    },
    "Entity-k___e__f__(1)": {
      "node_id": "k___e__f__(1)",
      "disambiguation_index": 1,
      "label": "K = (E,F)",
      "aliases": [
        "K = (E,F)"
      ],
      "types": [
        "equation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The notation K = (E,F) represents a knowledge graph with entity set E and fact set F.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "K = (E,F)",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-k___e__f__(1)-Mention-1"
        }
      ],
      "relevance": 0.5146484375
    },
    "Entity-representation_learning": {
      "node_id": "representation_learning",
      "disambiguation_index": 0,
      "label": "Representation Learning",
      "aliases": [
        "representation learning",
        "Representation Learning"
      ],
      "types": [
        "machine learning",
        "algorithm",
        "method",
        "technique",
        "research area",
        "learning"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of generating and learning compact, meaningful representations from data to facilitate efficient processing or classification.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-1",
          "local_name": "Representation Learning",
          "local_types": [
            "method",
            "machine learning",
            "technique",
            "research area"
          ],
          "iri": "Entity-representation_learning-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "representation learning",
          "local_types": [
            "method",
            "machine learning",
            "learning",
            "algorithm"
          ],
          "iri": "Entity-representation_learning-Mention-2"
        }
      ],
      "relevance": 0.51416015625
    },
    "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd": {
      "node_id": "rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "disambiguation_index": 0,
      "label": "RESCAL embeds each entity e_j to a vector E_j \u2208 R^d",
      "aliases": [
        "RESCAL embeds each entity e_j to a vector E_j \u2208 R^d"
      ],
      "types": [
        "method",
        "entity embedding",
        "vector",
        "dimension d"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The RESCAL algorithm, which is used for learning and computing embeddings of entities.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "RESCAL embeds each entity e_j to a vector E_j \u2208 R^d",
          "local_types": [
            "method",
            "entity embedding",
            "vector",
            "dimension d"
          ],
          "iri": "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd-Mention-1"
        }
      ],
      "relevance": 0.51416015625
    },
    "Entity-it_(1)": {
      "node_id": "it_(1)",
      "disambiguation_index": 1,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Standard Confidence (SC), which measures how frequently a CP rule is true, i.e., of the ways that the body is satisfied in the KG, the proportion of the inferred head instances that are also satisfied.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-3",
          "local_name": "It",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-it_(1)-Mention-1"
        }
      ],
      "relevance": 0.51416015625
    },
    "Entity-rescal_embeddings": {
      "node_id": "rescal_embeddings",
      "disambiguation_index": 0,
      "label": "RESCAL embeddings",
      "aliases": [
        "RESCAL embeddings"
      ],
      "types": [
        "embedding"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of compositional-based embedding learner that embeds each entity by a vector and each predicate by a matrix, used to learn rich interactions amongst entities and predicates.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-7",
          "local_name": "RESCAL embeddings",
          "local_types": [
            "embedding"
          ],
          "iri": "Entity-rescal_embeddings-Mention-1"
        }
      ],
      "relevance": 0.51416015625
    },
    "Entity-the_maximum_length_of_rule": {
      "node_id": "the_maximum_length_of_rule",
      "disambiguation_index": 0,
      "label": "the maximum length of rules",
      "aliases": [
        "the maximum length of rules"
      ],
      "types": [
        "rule",
        "length"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The maximum length of rules refers to a parameter that determines the longest possible sequence of predicates in an Open Path (OP) rule.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "the maximum length of rules",
          "local_types": [
            "rule",
            "length"
          ],
          "iri": "Entity-the_maximum_length_of_rule-Mention-1"
        }
      ],
      "relevance": 0.51416015625
    },
    "Entity-these_rule": {
      "node_id": "these_rule",
      "disambiguation_index": 0,
      "label": "These rules",
      "aliases": [
        "These rules"
      ],
      "types": [
        "rules",
        "collection"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of candidate rules that are selected for further evaluation after applying minimum thresholds to OPSC and OPHC metrics.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-3",
          "local_name": "These rules",
          "local_types": [
            "rules",
            "collection"
          ],
          "iri": "Entity-these_rule-Mention-1"
        }
      ],
      "relevance": 0.51416015625
    },
    "Entity-least_acceptable_opsc_and_ophc_score": {
      "node_id": "least_acceptable_opsc_and_ophc_score",
      "disambiguation_index": 0,
      "label": "least acceptable OPSC and OPHC scores",
      "aliases": [
        "least acceptable OPSC and OPHC scores"
      ],
      "types": [
        "standard",
        "benchmark"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The minimum threshold values for evaluating the quality of Open Path rules in terms of their scoring functions (OPSC) and hierarchical complexity measures (OPHC).",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "least acceptable OPSC and OPHC scores",
          "local_types": [
            "standard",
            "benchmark"
          ],
          "iri": "Entity-least_acceptable_opsc_and_ophc_score-Mention-1"
        }
      ],
      "relevance": 0.513671875
    },
    "Entity-the_fact_pk__ei__ej_": {
      "node_id": "the_fact_pk__ei__ej_",
      "disambiguation_index": 0,
      "label": "the fact Pk(ei, ej)",
      "aliases": [
        "the fact Pk(ei, ej)"
      ],
      "types": [
        "fact",
        "relation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A binary-valued matrix representing whether a specific predicate (P) holds between two entities (e1 and e2) in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "the fact Pk(ei, ej)",
          "local_types": [
            "fact",
            "relation"
          ],
          "iri": "Entity-the_fact_pk__ei__ej_-Mention-1"
        }
      ],
      "relevance": 0.513671875
    },
    "Entity-a_similarity_fitness_function": {
      "node_id": "a_similarity_fitness_function",
      "disambiguation_index": 0,
      "label": "a similarity fitness function",
      "aliases": [
        "a similarity fitness function"
      ],
      "types": [
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A similarity fitness function that estimates rule quality by computing the product of predicate embeddings along a path, representing the overall rule from the perspective of predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-3-Sentence-2",
          "local_name": "a similarity fitness function",
          "local_types": [
            "function"
          ],
          "iri": "Entity-a_similarity_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.51318359375
    },
    "Entity-let_r__e__e___e_i__body_r__p_t_be_a_given_in_definition_1_but_adapted_straightforwardly_to_the_open_path_rule_case_.": {
      "node_id": "let_r__e__e___e_i__body_r__p_t_be_a_given_in_definition_1_but_adapted_straightforwardly_to_the_open_path_rule_case_.",
      "disambiguation_index": 0,
      "label": "Let r, e, e', e_i, body_r, P_t be as given in Definition 1 but adapted straightforwardly to the open path rule case.",
      "aliases": [
        "Let r, e, e', e_i, body_r, P_t be as given in Definition 1 but adapted straightforwardly to the open path rule case."
      ],
      "types": [
        "variable declaration",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A notation for variables and predicates used in defining an open path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-3",
          "local_name": "Let r, e, e', e_i, body_r, P_t be as given in Definition 1 but adapted straightforwardly to the open path rule case.",
          "local_types": [
            "variable declaration",
            "notation"
          ],
          "iri": "Entity-let_r__e__e___e_i__body_r__p_t_be_a_given_in_definition_1_but_adapted_straightforwardly_to_the_open_path_rule_case_.-Mention-1"
        }
      ],
      "relevance": 0.5126953125
    },
    "Entity-p__2___i": {
      "node_id": "p__2___i",
      "disambiguation_index": 0,
      "label": "P(2)_i",
      "aliases": [
        "P(1)_{i+1}",
        "P(2)_i"
      ],
      "types": [
        "equation",
        "mathematical expression",
        "probability"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The entity mentioned by 'P(2)_i' refers to an argument embedding of a predicate, specifically the object argument embedding for the i-th predicate in an open path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-3",
          "local_name": "P(2)_i",
          "local_types": [
            "equation",
            "mathematical expression",
            "probability"
          ],
          "iri": "Entity-p__2___i-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-3",
          "local_name": "P(1)_{i+1}",
          "local_types": [
            "equation",
            "mathematical expression",
            "probability"
          ],
          "iri": "Entity-p__2___i-Mention-2"
        }
      ],
      "relevance": 0.51220703125
    },
    "Entity-embeddings__": {
      "node_id": "embeddings__",
      "disambiguation_index": 0,
      "label": "Embeddings()",
      "aliases": [
        "Embeddings()"
      ],
      "types": [
        "function",
        "algorithm",
        "computational method",
        "information processing technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation or encoding of semantic concepts, typically used to capture their meaning and relationships.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "Embeddings()",
          "local_types": [
            "function",
            "algorithm",
            "computational method",
            "information processing technique"
          ],
          "iri": "Entity-embeddings__-Mention-1"
        }
      ],
      "relevance": 0.51220703125
    },
    "Entity-the_proportion_of_the_fact_satisfying_the_head_of_the_rule_that_can_be_inferred_by_satisfying_the_rule_body": {
      "node_id": "the_proportion_of_the_fact_satisfying_the_head_of_the_rule_that_can_be_inferred_by_satisfying_the_rule_body",
      "disambiguation_index": 0,
      "label": "the proportion of the facts satisfying the head of the rule that can be inferred by satisfying the rule body",
      "aliases": [
        "the proportion of the facts satisfying the head of the rule that can be inferred by satisfying the rule body"
      ],
      "types": [
        "description"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The measure of how well a rule explains its predicted instances, calculated as the proportion of facts satisfying the head of the rule that can be inferred by satisfying the rule body.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-4",
          "local_name": "the proportion of the facts satisfying the head of the rule that can be inferred by satisfying the rule body",
          "local_types": [
            "description"
          ],
          "iri": "Entity-the_proportion_of_the_fact_satisfying_the_head_of_the_rule_that_can_be_inferred_by_satisfying_the_rule_body-Mention-1"
        }
      ],
      "relevance": 0.51220703125
    },
    "Entity-fb15k_selected": {
      "node_id": "fb15k_selected",
      "disambiguation_index": 0,
      "label": "FB15K SELECTED",
      "aliases": [
        "FB15K SELECTED"
      ],
      "types": [
        "dataset",
        "knowledge graph"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A selected subset of data from the Freebase knowledge graph, commonly used for link prediction tasks.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-2",
          "local_name": "FB15K SELECTED",
          "local_types": [
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-fb15k_selected-Mention-1"
        }
      ],
      "relevance": 0.51171875
    },
    "Entity-the_rule_citizenof": {
      "node_id": "the_rule_citizenof",
      "disambiguation_index": 0,
      "label": "the rule citizenOf",
      "aliases": [
        "the rule citizenOf"
      ],
      "types": [
        "rule",
        "citizenOf"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A closed existential rule in a knowledge graph completion system that infers citizenship of an individual based on their place of residence and location.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "the rule citizenOf",
          "local_types": [
            "rule",
            "citizenOf"
          ],
          "iri": "Entity-the_rule_citizenof-Mention-1"
        }
      ],
      "relevance": 0.51171875
    },
    "Entity-sequential_entity_along_the_path": {
      "node_id": "sequential_entity_along_the_path",
      "disambiguation_index": 0,
      "label": "sequential entities along the path",
      "aliases": [
        "sequential entities along the path"
      ],
      "types": [
        "sequence",
        "entities",
        "path"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A sequence of entities connected by predicates in an open-path rule, where each entity is linked to its predecessor and successor through predicate embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-17-Sentence-1",
          "local_name": "sequential entities along the path",
          "local_types": [
            "sequence",
            "entities",
            "path"
          ],
          "iri": "Entity-sequential_entity_along_the_path-Mention-1"
        }
      ],
      "relevance": 0.51171875
    },
    "Entity-be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.": {
      "node_id": "be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.",
      "disambiguation_index": 0,
      "label": "be the set of all entities and P = {P1,...,Pm} be the set of all predicates in F.",
      "aliases": [
        "be the set of all entities and P = {P1,...,Pm} be the set of all predicates in F."
      ],
      "types": [
        "notation",
        "predicate set"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of all entities E={e1,...,en} in a knowledge graph K=(E,F)",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "be the set of all entities and P = {P1,...,Pm} be the set of all predicates in F.",
          "local_types": [
            "notation",
            "predicate set"
          ],
          "iri": "Entity-be_the_set_of_all_entity_and_p___p1__...__pm__be_the_set_of_all_predicate_in_f_.-Mention-1"
        }
      ],
      "relevance": 0.51171875
    },
    "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_": {
      "node_id": "citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "disambiguation_index": 0,
      "label": "citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y)",
      "aliases": [
        "citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y)",
        "the rule citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y)"
      ],
      "types": [
        "citizenOf",
        "rule",
        "logic formula",
        "livesIn",
        "locatedIn"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A rule in a knowledge graph completion system that infers citizenship of an individual based on their place of residence and location.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y)",
          "local_types": [
            "rule",
            "logic formula"
          ],
          "iri": "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "the rule citizenOf(x, y) \u2190 livesIn(x, z) \u2227 locatedIn(z, y)",
          "local_types": [
            "rule",
            "citizenOf",
            "livesIn",
            "locatedIn"
          ],
          "iri": "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_-Mention-2"
        }
      ],
      "relevance": 0.51123046875
    },
    "Entity-association_rule_mining": {
      "node_id": "association_rule_mining",
      "disambiguation_index": 0,
      "label": "association rule mining",
      "aliases": [
        "association rule mining"
      ],
      "types": [
        "field",
        "mining technique",
        "data mining technique",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A data analysis method that discovers patterns and relationships between variables by identifying rules with a specified level of correlation.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-3",
          "local_name": "association rule mining",
          "local_types": [
            "field",
            "mining technique",
            "data mining technique",
            "algorithm"
          ],
          "iri": "Entity-association_rule_mining-Mention-1"
        }
      ],
      "relevance": 0.51123046875
    },
    "Entity-x": {
      "node_id": "x",
      "disambiguation_index": 0,
      "label": "x",
      "aliases": [
        "x"
      ],
      "types": [
        "variable",
        "parameter",
        "individual",
        "person",
        "free",
        "presenter",
        "unknown entity"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The presenter or individual whose citizenship can be inferred from facts about their city of residence and nation, as described in an OP rule.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "x",
          "local_types": [
            "variable",
            "unknown entity"
          ],
          "iri": "Entity-x-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "x",
          "local_types": [
            "person",
            "presenter"
          ],
          "iri": "Entity-x-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "x",
          "local_types": [
            "person",
            "variable"
          ],
          "iri": "Entity-x-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "x",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-x-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "x",
          "local_types": [
            "variable",
            "free"
          ],
          "iri": "Entity-x-Mention-5"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "x",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-x-Mention-6"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "x",
          "local_types": [
            "variable",
            "individual"
          ],
          "iri": "Entity-x-Mention-7"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "x",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-x-Mention-8"
        }
      ],
      "relevance": 0.5107421875
    },
    "Entity-the_term": {
      "node_id": "the_term",
      "disambiguation_index": 0,
      "label": "The terms",
      "aliases": [
        "The terms"
      ],
      "types": [
        "term"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "In this context, 'The terms' specifically refer to the mathematical representations s_e and o_e, which represent the number of times an entity e occurs as a subject or object of predicate P in a knowledge graph K.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-4",
          "local_name": "The terms",
          "local_types": [
            "term"
          ],
          "iri": "Entity-the_term-Mention-1"
        }
      ],
      "relevance": 0.5107421875
    },
    "Entity-p_2__z_0__z_1_": {
      "node_id": "p_2__z_0__z_1_",
      "disambiguation_index": 0,
      "label": "P_2(z_0, z_1)",
      "aliases": [
        "P_2(z_0, z_1)"
      ],
      "types": [
        "predicate",
        "function",
        "mathematical notation",
        "expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "An OP rule of the form P_i(x, z) \u2190 ... \u2227 P_2(z_0, z_1) \u2227 ...",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-1",
          "local_name": "P_2(z_0, z_1)",
          "local_types": [
            "predicate",
            "function",
            "mathematical notation",
            "expression"
          ],
          "iri": "Entity-p_2__z_0__z_1_-Mention-1"
        }
      ],
      "relevance": 0.51025390625
    },
    "Entity-former": {
      "node_id": "former",
      "disambiguation_index": 0,
      "label": "former",
      "aliases": [
        "former"
      ],
      "types": [
        "methodology",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A methodology or approach that estimates rule quality using only entity embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "former",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-former-Mention-1"
        }
      ],
      "relevance": 0.51025390625
    },
    "Entity-r": {
      "node_id": "r",
      "disambiguation_index": 0,
      "label": "R",
      "aliases": [
        "r",
        "R"
      ],
      "types": [
        "variable",
        "output",
        "mathematical concept",
        "mathematical structure",
        "knowledge base",
        "real number",
        "rule set",
        "CP rule",
        "collection",
        "relationship",
        "symbol",
        "set of real numbers",
        "ruleset",
        "rule",
        "logical statement",
        "set",
        "parameter",
        "placeholder",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or structure representing a set of real numbers, rules, or logical statements.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-12",
          "local_name": "R",
          "local_types": [
            "variable",
            "mathematical concept"
          ],
          "iri": "Entity-r-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "r",
          "local_types": [
            "CP rule",
            "variable",
            "rule",
            "placeholder"
          ],
          "iri": "Entity-r-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-4",
          "local_name": "r",
          "local_types": [
            "rule",
            "relationship"
          ],
          "iri": "Entity-r-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-6",
          "local_name": "r",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-r-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-2",
          "local_name": "r",
          "local_types": [
            "logical statement",
            "rule",
            "mathematical concept"
          ],
          "iri": "Entity-r-Mention-5"
        },
        {
          "reference": "Section-4-Paragraph-7-Sentence-1",
          "local_name": "r",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-r-Mention-6"
        },
        {
          "reference": "Section-4-Paragraph-7-Sentence-2",
          "local_name": "r",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-r-Mention-7"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-4",
          "local_name": "R",
          "local_types": [
            "ruleset",
            "output"
          ],
          "iri": "Entity-r-Mention-8"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-7",
          "local_name": "R",
          "local_types": [
            "set",
            "mathematical concept"
          ],
          "iri": "Entity-r-Mention-9"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "R",
          "local_types": [
            "set of real numbers",
            "mathematical structure"
          ],
          "iri": "Entity-r-Mention-10"
        },
        {
          "reference": "Section-6-Paragraph-15-Sentence-1",
          "local_name": "r",
          "local_types": [
            "symbol",
            "variable"
          ],
          "iri": "Entity-r-Mention-11"
        },
        {
          "reference": "Section-6-Paragraph-16-Sentence-1",
          "local_name": "r",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-r-Mention-12"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-8",
          "local_name": "r",
          "local_types": [
            "rule",
            "mathematical concept"
          ],
          "iri": "Entity-r-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-9",
          "local_name": "r",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-r-Mention-14"
        },
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "r",
          "local_types": [
            "real number",
            "variable",
            "parameter"
          ],
          "iri": "Entity-r-Mention-15"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "r",
          "local_types": [
            "symbol",
            "variable",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-r-Mention-16"
        },
        {
          "reference": "Section-7-Paragraph-9-Sentence-4",
          "local_name": "r",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-r-Mention-17"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "R",
          "local_types": [
            "collection",
            "knowledge base",
            "rule set",
            "set"
          ],
          "iri": "Entity-r-Mention-18"
        }
      ],
      "relevance": 0.509765625
    },
    "Entity-minimum_threshold_for_opsc": {
      "node_id": "minimum_threshold_for_opsc",
      "disambiguation_index": 0,
      "label": "Minimum thresholds for OPSC",
      "aliases": [
        "Minimum thresholds for OPSC"
      ],
      "types": [
        "threshold"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The minimum threshold values required by the algorithm (Algorithm 1) for evaluating OPSC (Open Path Support Count) and OPHC (Open Path Head Coverage)",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-10-Sentence-1",
          "local_name": "Minimum thresholds for OPSC",
          "local_types": [
            "threshold"
          ],
          "iri": "Entity-minimum_threshold_for_opsc-Mention-1"
        }
      ],
      "relevance": 0.509765625
    },
    "Entity-the_following_general_form": {
      "node_id": "the_following_general_form",
      "disambiguation_index": 0,
      "label": "the following general form",
      "aliases": [
        "the following general form"
      ],
      "types": [
        "form",
        "structure"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A closed path (CP) rule with no free variables that consists of two parts: a head and a body, where P_h is the single predicate of the head, and P_1, ..., P_n are predicates of the body.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "the following general form",
          "local_types": [
            "form",
            "structure"
          ],
          "iri": "Entity-the_following_general_form-Mention-1"
        }
      ],
      "relevance": 0.509765625
    },
    "Entity-rule_learner": {
      "node_id": "rule_learner",
      "disambiguation_index": 0,
      "label": "Rule learners",
      "aliases": [
        "rule learners",
        "Rule learners"
      ],
      "types": [
        "machine learning model",
        "rule learner",
        "learners",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Entities that learn rules or patterns from data to make predictions.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "Rule learners",
          "local_types": [
            "machine learning model",
            "rule learner",
            "learners",
            "algorithm"
          ],
          "iri": "Entity-rule_learner-Mention-1"
        }
      ],
      "relevance": 0.50927734375
    },
    "Entity-massive_quantity_of_weakly-structured_data": {
      "node_id": "massive_quantity_of_weakly-structured_data",
      "disambiguation_index": 0,
      "label": "massive quantities of weakly-structured data",
      "aliases": [
        "massive quantities of weakly-structured data"
      ],
      "types": [
        "data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Large amounts of unorganized information stored in Knowledge Graphs.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "massive quantities of weakly-structured data",
          "local_types": [
            "data"
          ],
          "iri": "Entity-massive_quantity_of_weakly-structured_data-Mention-1"
        }
      ],
      "relevance": 0.50927734375
    },
    "Entity-we_define": {
      "node_id": "we_define",
      "disambiguation_index": 0,
      "label": "We define",
      "aliases": [
        "We define"
      ],
      "types": [
        "definition",
        "text"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The confidence degree (CD) of a query, which measures its relevance and quality based on the maximum OPSC (Open Path Support Coefficient) of all rules inducing that query.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "We define",
          "local_types": [
            "definition",
            "text"
          ],
          "iri": "Entity-we_define-Mention-1"
        }
      ],
      "relevance": 0.50927734375
    },
    "Entity-novel_fitness_criterion_for_discarding_poor_rule_early__and_efficient_vector_computation_of_formal_quality_criterion": {
      "node_id": "novel_fitness_criterion_for_discarding_poor_rule_early__and_efficient_vector_computation_of_formal_quality_criterion",
      "disambiguation_index": 0,
      "label": "novel fitness criteria for discarding poor rules early, and efficient vector computation of formal quality criteria",
      "aliases": [
        "novel fitness criteria for discarding poor rules early, and efficient vector computation of formal quality criteria"
      ],
      "types": [
        "criterion"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Novel fitness criteria for discarding poor rules early, and efficient vector computation of formal quality criteria",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-4",
          "local_name": "novel fitness criteria for discarding poor rules early, and efficient vector computation of formal quality criteria",
          "local_types": [
            "criterion"
          ],
          "iri": "Entity-novel_fitness_criterion_for_discarding_poor_rule_early__and_efficient_vector_computation_of_formal_quality_criterion-Mention-1"
        }
      ],
      "relevance": 0.5087890625
    },
    "Entity-the_test_set": {
      "node_id": "the_test_set",
      "disambiguation_index": 0,
      "label": "the test set",
      "aliases": [
        "the test set"
      ],
      "types": [
        "dataset"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of facts used as ground truth for evaluating the relevance of generated questions in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-4-Sentence-2",
          "local_name": "the test set",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-the_test_set-Mention-1"
        }
      ],
      "relevance": 0.5087890625
    },
    "Entity-then__the_method_extends_the_set_of_entity_by_adding_entity_that_are_related_to_the_existing_entity_in_the_set_via_any_predicate__like_adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact_.": {
      "node_id": "then__the_method_extends_the_set_of_entity_by_adding_entity_that_are_related_to_the_existing_entity_in_the_set_via_any_predicate__like_adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact_.",
      "disambiguation_index": 0,
      "label": "Then, the method extends the set of entities by adding entities that are related to the existing entities in the set via any predicates, like adding e3 if we have some P_i(e3, e1) as a fact.",
      "aliases": [
        "Then, the method extends the set of entities by adding entities that are related to the existing entities in the set via any predicates, like adding e3 if we have some P_i(e3, e1) as a fact."
      ],
      "types": [
        "step",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A step or algorithm that extends an existing entity set by incorporating related entities through various predicates.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-8",
          "local_name": "Then, the method extends the set of entities by adding entities that are related to the existing entities in the set via any predicates, like adding e3 if we have some P_i(e3, e1) as a fact.",
          "local_types": [
            "step",
            "algorithm"
          ],
          "iri": "Entity-then__the_method_extends_the_set_of_entity_by_adding_entity_that_are_related_to_the_existing_entity_in_the_set_via_any_predicate__like_adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact_.-Mention-1"
        }
      ],
      "relevance": 0.50830078125
    },
    "Entity-the_number_of_potential_rule": {
      "node_id": "the_number_of_potential_rule",
      "disambiguation_index": 0,
      "label": "the number of potential rules",
      "aliases": [
        "the number of potential rules"
      ],
      "types": [
        "quantity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The total count of possible rules that can be generated by the PathFinding() algorithm.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "the number of potential rules",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-the_number_of_potential_rule-Mention-1"
        }
      ],
      "relevance": 0.50830078125
    },
    "Entity-a_fragment_of_function-free_horn_rule": {
      "node_id": "a_fragment_of_function-free_horn_rule",
      "disambiguation_index": 0,
      "label": "a fragment of function-free Horn rules",
      "aliases": [
        "a fragment of function-free Horn rules"
      ],
      "types": [
        "concept",
        "logic"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of logic statements, specifically a subset of function-free Horn rules, that enables mining rules with free variables and keeps the complexity of the learning process under control.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-2",
          "local_name": "a fragment of function-free Horn rules",
          "local_types": [
            "concept",
            "logic"
          ],
          "iri": "Entity-a_fragment_of_function-free_horn_rule-Mention-1"
        }
      ],
      "relevance": 0.50830078125
    },
    "Entity-precision_and_recall": {
      "node_id": "precision_and_recall",
      "disambiguation_index": 0,
      "label": "precision and recall",
      "aliases": [
        "precision and recall"
      ],
      "types": [
        "metric",
        "evaluation metric"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A pair of metrics used to evaluate the performance of a query generation system, measuring the proportion of relevant queries that are correctly generated (precision) and the proportion of all possible correct answers that are actually retrieved by the system (recall).",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "precision and recall",
          "local_types": [
            "metric",
            "evaluation metric"
          ],
          "iri": "Entity-precision_and_recall-Mention-1"
        }
      ],
      "relevance": 0.50830078125
    },
    "Entity-100__hc_and_sc": {
      "node_id": "100__hc_and_sc",
      "disambiguation_index": 0,
      "label": "100% HC and SC",
      "aliases": [
        "100% HC and SC"
      ],
      "types": [
        "evaluation metric",
        "SC",
        "percentage",
        "HC",
        "percentage value"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A measure describing how frequently a rule is true, i.e., of the ways that the body is satisfied in the KG, the proportion of the inferred head instances that are also satisfied.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-6",
          "local_name": "100% HC and SC",
          "local_types": [
            "evaluation metric",
            "SC",
            "percentage",
            "HC",
            "percentage value"
          ],
          "iri": "Entity-100__hc_and_sc-Mention-1"
        }
      ],
      "relevance": 0.5078125
    },
    "Entity-our_generated_query_can_be_used_in_combination_with_a_link_predictor_to_infer_new_fact": {
      "node_id": "our_generated_query_can_be_used_in_combination_with_a_link_predictor_to_infer_new_fact",
      "disambiguation_index": 0,
      "label": "Our generated queries can be used in combination with a link predictor to infer new facts",
      "aliases": [
        "Our generated queries can be used in combination with a link predictor to infer new facts"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A methodology for generating queries that can be combined with a link predictor to infer new facts",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-4",
          "local_name": "Our generated queries can be used in combination with a link predictor to infer new facts",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-our_generated_query_can_be_used_in_combination_with_a_link_predictor_to_infer_new_fact-Mention-1"
        }
      ],
      "relevance": 0.5078125
    },
    "Entity-p___i1__(1)": {
      "node_id": "p___i1__(1)",
      "disambiguation_index": 1,
      "label": "P_{i+1}",
      "aliases": [
        "P_{i+1}"
      ],
      "types": [
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The term 'P_{i+1}' refers to a predicate embedding matrix representing the weight of connections between entities along an open path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-16-Sentence-1",
          "local_name": "P_{i+1}",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-p___i1__(1)-Mention-1"
        }
      ],
      "relevance": 0.5078125
    },
    "Entity-to_quantify_this_idea__we_recall_measure_support__head_coverage__and_standard_confidence_that_are_used_in_some_major_approach_to_rule_learning": {
      "node_id": "to_quantify_this_idea__we_recall_measure_support__head_coverage__and_standard_confidence_that_are_used_in_some_major_approach_to_rule_learning",
      "disambiguation_index": 0,
      "label": "To quantify this idea, we recall measures support, head coverage, and standard confidence that are used in some major approaches to rule learning",
      "aliases": [
        "To quantify this idea, we recall measures support, head coverage, and standard confidence that are used in some major approaches to rule learning"
      ],
      "types": [
        "reference",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Metrics or indicators used to evaluate the performance of machine learning models",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-2",
          "local_name": "To quantify this idea, we recall measures support, head coverage, and standard confidence that are used in some major approaches to rule learning",
          "local_types": [
            "reference",
            "method"
          ],
          "iri": "Entity-to_quantify_this_idea__we_recall_measure_support__head_coverage__and_standard_confidence_that_are_used_in_some_major_approach_to_rule_learning-Mention-1"
        }
      ],
      "relevance": 0.50732421875
    },
    "Entity-opsc_from_1_to_0.5_in_4_decrement": {
      "node_id": "opsc_from_1_to_0.5_in_4_decrement",
      "disambiguation_index": 0,
      "label": "OPSC from 1 to 0.5 in 4 decrements",
      "aliases": [
        "OPSC from 1 to 0.5 in 4 decrements"
      ],
      "types": [
        "parameter_range"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A parameter range for Open Path (OP) rules quality threshold, varying from 1 to 0.5 in 4 decrements.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "OPSC from 1 to 0.5 in 4 decrements",
          "local_types": [
            "parameter_range"
          ],
          "iri": "Entity-opsc_from_1_to_0.5_in_4_decrement-Mention-1"
        }
      ],
      "relevance": 0.5068359375
    },
    "Entity-we_(3)": {
      "node_id": "we_(3)",
      "disambiguation_index": 3,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors, referring to themselves in a paper about active knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(3)-Mention-1"
        }
      ],
      "relevance": 0.5068359375
    },
    "Entity-algorithm_1": {
      "node_id": "algorithm_1",
      "disambiguation_index": 0,
      "label": "Algorithm 1",
      "aliases": [
        "Algorithm 1"
      ],
      "types": [
        "methodology",
        "software",
        "mathematical framework",
        "paper_reference",
        "computer program",
        "concept",
        "procedure",
        "document",
        "algorithmic description",
        "reference",
        "algorithm",
        "method",
        "computer science",
        "computational method"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A computational procedure for solving a specific problem or achieving a particular goal.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "concept",
            "algorithm"
          ],
          "iri": "Entity-algorithm_1-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "software",
            "mathematical framework",
            "paper_reference",
            "computer program",
            "concept",
            "document",
            "reference",
            "algorithm",
            "method",
            "computational method"
          ],
          "iri": "Entity-algorithm_1-Mention-2"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "Algorithm 1",
          "local_types": [
            "method",
            "methodology",
            "computer science",
            "algorithm"
          ],
          "iri": "Entity-algorithm_1-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-3",
          "local_name": "Algorithm 1",
          "local_types": [
            "procedure",
            "document",
            "algorithmic description",
            "reference",
            "algorithm",
            "computational method"
          ],
          "iri": "Entity-algorithm_1-Mention-4"
        },
        {
          "reference": "Section-7-Paragraph-10-Sentence-1",
          "local_name": "Algorithm 1",
          "local_types": [
            "computer program",
            "software",
            "method",
            "algorithm"
          ],
          "iri": "Entity-algorithm_1-Mention-5"
        }
      ],
      "relevance": 0.50634765625
    },
    "Entity-embeddings": {
      "node_id": "embeddings",
      "disambiguation_index": 0,
      "label": "Embeddings",
      "aliases": [
        "Embeddings",
        "embeddings"
      ],
      "types": [
        "vector space",
        "function",
        "mathematical concept",
        "data structure",
        "computational model",
        "algorithm",
        "vector representation",
        "representation",
        "computational method"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or data structure that represents words, phrases, or concepts as numerical vectors for use in natural language processing and machine learning applications.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-6",
          "local_name": "Embeddings",
          "local_types": [
            "function",
            "algorithm"
          ],
          "iri": "Entity-embeddings-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "Embeddings",
          "local_types": [
            "function",
            "algorithm"
          ],
          "iri": "Entity-embeddings-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-1",
          "local_name": "embeddings",
          "local_types": [
            "representation",
            "vector space"
          ],
          "iri": "Entity-embeddings-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-1",
          "local_name": "embeddings",
          "local_types": [
            "vector representation",
            "representation"
          ],
          "iri": "Entity-embeddings-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-7",
          "local_name": "embeddings",
          "local_types": [
            "representation",
            "data structure"
          ],
          "iri": "Entity-embeddings-Mention-5"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-8",
          "local_name": "embeddings",
          "local_types": [
            "mathematical concept",
            "computational model"
          ],
          "iri": "Entity-embeddings-Mention-6"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "embeddings",
          "local_types": [
            "computational method"
          ],
          "iri": "Entity-embeddings-Mention-7"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "embeddings",
          "local_types": [
            "representation",
            "vector space"
          ],
          "iri": "Entity-embeddings-Mention-8"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-5",
          "local_name": "embeddings",
          "local_types": [
            "representation",
            "vector representation"
          ],
          "iri": "Entity-embeddings-Mention-9"
        },
        {
          "reference": "Section-9-Paragraph-12-Sentence-1",
          "local_name": "embeddings",
          "local_types": [
            "vector representation",
            "representation"
          ],
          "iri": "Entity-embeddings-Mention-10"
        }
      ],
      "relevance": 0.50634765625
    },
    "Entity-the_product_of_the_predicate_embeddings_along_the_path": {
      "node_id": "the_product_of_the_predicate_embeddings_along_the_path",
      "disambiguation_index": 0,
      "label": "the product of the predicate embeddings along the path",
      "aliases": [
        "the product of the predicate embeddings along the path"
      ],
      "types": [
        "product",
        "embedding"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The product of predicate embeddings along a path in an open-path rule, representing the latent features of entities connected by a chain of predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-3",
          "local_name": "the product of the predicate embeddings along the path",
          "local_types": [
            "product",
            "embedding"
          ],
          "iri": "Entity-the_product_of_the_predicate_embeddings_along_the_path-Mention-1"
        }
      ],
      "relevance": 0.50634765625
    },
    "Entity-some_erroneous_fact": {
      "node_id": "some_erroneous_fact",
      "disambiguation_index": 0,
      "label": "some erroneous facts",
      "aliases": [
        "some erroneous facts"
      ],
      "types": [
        "fact"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Erroneous or incorrect facts that were incorrectly added during the process of building a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-8",
          "local_name": "some erroneous facts",
          "local_types": [
            "fact"
          ],
          "iri": "Entity-some_erroneous_fact-Mention-1"
        }
      ],
      "relevance": 0.50634765625
    },
    "Entity-in_the_set_with_a_count_of_1_.": {
      "node_id": "in_the_set_with_a_count_of_1_.",
      "disambiguation_index": 0,
      "label": "in the set with a count of 1.",
      "aliases": [
        "in the set with a count of 1."
      ],
      "types": [
        "dataset",
        "count"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The entities that satisfy both conditions for an OP rule's head and body.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-3",
          "local_name": "in the set with a count of 1.",
          "local_types": [
            "dataset",
            "count"
          ],
          "iri": "Entity-in_the_set_with_a_count_of_1_.-Mention-1"
        }
      ],
      "relevance": 0.50634765625
    },
    "Entity-amie": {
      "node_id": "amie",
      "disambiguation_index": 0,
      "label": "AMIE+",
      "aliases": [
        "AMIE+"
      ],
      "types": [
        "project",
        "tool",
        "software"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "AMIE+ is a dataset used to evaluate the performance of knowledge graph completion approaches, specifically for Wikidata.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-5",
          "local_name": "AMIE+",
          "local_types": [
            "project",
            "tool",
            "software"
          ],
          "iri": "Entity-amie-Mention-1"
        }
      ],
      "relevance": 0.505859375
    },
    "Entity-for_rlvlr_": {
      "node_id": "for_rlvlr_",
      "disambiguation_index": 0,
      "label": "For RLvLR*",
      "aliases": [
        "For RLvLR*"
      ],
      "types": [
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "RLvLR*: a state-of-the-art rule-based link predictor that generates queries by translating predicted facts into subject and object entity-free instances",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-2",
          "local_name": "For RLvLR*",
          "local_types": [
            "research"
          ],
          "iri": "Entity-for_rlvlr_-Mention-1"
        }
      ],
      "relevance": 0.505859375
    },
    "Entity-novel_heuristic_function": {
      "node_id": "novel_heuristic_function",
      "disambiguation_index": 0,
      "label": "novel heuristic function",
      "aliases": [
        "novel heuristic function"
      ],
      "types": [
        "method",
        "function",
        "algorithmic approach",
        "rule-based approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or algorithmic approach that uses a set of predefined rules to solve a problem or make decisions.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-1",
          "local_name": "novel heuristic function",
          "local_types": [
            "method",
            "function",
            "algorithmic approach",
            "rule-based approach"
          ],
          "iri": "Entity-novel_heuristic_function-Mention-1"
        }
      ],
      "relevance": 0.50537109375
    },
    "Entity-argument_embeddings": {
      "node_id": "argument_embeddings",
      "disambiguation_index": 0,
      "label": "argument embeddings",
      "aliases": [
        "(argument embedding)",
        "argument embeddings"
      ],
      "types": [
        "mathematical concept",
        "model",
        "embedding",
        "concept",
        "idea",
        "representation",
        "computational method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of semantic relationships between concepts or entities",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "argument embeddings",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-argument_embeddings-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-17-Sentence-1",
          "local_name": "argument embeddings",
          "local_types": [
            "model",
            "embedding",
            "representation"
          ],
          "iri": "Entity-argument_embeddings-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "(argument embedding)",
          "local_types": [
            "embedding",
            "concept",
            "mathematical concept",
            "computational method"
          ],
          "iri": "Entity-argument_embeddings-Mention-3"
        }
      ],
      "relevance": 0.50537109375
    },
    "Entity-for_the_example__we_have_only_e3_in_the_set_with_a_count_of_1": {
      "node_id": "for_the_example__we_have_only_e3_in_the_set_with_a_count_of_1",
      "disambiguation_index": 0,
      "label": "For the example, we have only e3 in the set with a count of 1",
      "aliases": [
        "For the example, we have only e3 in the set with a count of 1"
      ],
      "types": [
        "example"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The satisfying entities for an OP rule's head and body positions, specifically mentioning entity e3 as the sole matching instance.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-3",
          "local_name": "For the example, we have only e3 in the set with a count of 1",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_the_example__we_have_only_e3_in_the_set_with_a_count_of_1-Mention-1"
        }
      ],
      "relevance": 0.50537109375
    },
    "Entity-opsc__r_": {
      "node_id": "opsc__r_",
      "disambiguation_index": 0,
      "label": "OPSC(r)",
      "aliases": [
        "OPSC(r)"
      ],
      "types": [
        "function",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Confidence Degree (CD), which measures the maximum OPSC of all rules inducing a query, used to quantify the confidence of a generated query.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-5-Sentence-1",
          "local_name": "OPSC(r)",
          "local_types": [
            "function",
            "expression"
          ],
          "iri": "Entity-opsc__r_-Mention-1"
        }
      ],
      "relevance": 0.50537109375
    },
    "Entity-a_link_predictor": {
      "node_id": "a_link_predictor",
      "disambiguation_index": 0,
      "label": "a link predictor",
      "aliases": [
        "a link predictor"
      ],
      "types": [
        "link_predictor"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A system or algorithm capable of predicting missing links (facts) in a knowledge graph, given a set of input queries.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-3",
          "local_name": "a link predictor",
          "local_types": [
            "link_predictor"
          ],
          "iri": "Entity-a_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.5048828125
    },
    "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming_.": {
      "node_id": "it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming_.",
      "disambiguation_index": 0,
      "label": "It is closely related to coverage widely used for rule learning in inductive logic programming.",
      "aliases": [
        "It is closely related to coverage widely used for rule learning in inductive logic programming."
      ],
      "types": [
        "statement",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The standard confidence measure, which describes how frequently a rule is true.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-5",
          "local_name": "It is closely related to coverage widely used for rule learning in inductive logic programming.",
          "local_types": [
            "statement",
            "relation"
          ],
          "iri": "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming_.-Mention-1"
        }
      ],
      "relevance": 0.50439453125
    },
    "Entity-_m_1__m_2_": {
      "node_id": "_m_1__m_2_",
      "disambiguation_index": 0,
      "label": "(M_1, M_2)",
      "aliases": [
        "(M_1, M_2)"
      ],
      "types": [
        "argument",
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The term '(M_1, M_2)' refers to a pair of matrices representing predicate embeddings used for estimating rule quality and computing co-occurrence fitness functions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-2",
          "local_name": "(M_1, M_2)",
          "local_types": [
            "argument",
            "expression"
          ],
          "iri": "Entity-_m_1__m_2_-Mention-1"
        }
      ],
      "relevance": 0.50439453125
    },
    "Entity-_auc__of_rlvlr_": {
      "node_id": "_auc__of_rlvlr_",
      "disambiguation_index": 0,
      "label": "(AUC) of RLvLR*",
      "aliases": [
        "(AUC) of RLvLR*"
      ],
      "types": [
        "performance measure"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The area under the ROC curve for the query performance of RLvLR*, representing the system's ability to correctly identify relevant queries.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "(AUC) of RLvLR*",
          "local_types": [
            "performance measure"
          ],
          "iri": "Entity-_auc__of_rlvlr_-Mention-1"
        }
      ],
      "relevance": 0.50439453125
    },
    "Entity-v__1___b_": {
      "node_id": "v__1___b_",
      "disambiguation_index": 0,
      "label": "v(1)(B)",
      "aliases": [
        "v(1)(B)"
      ],
      "types": [
        "variable",
        "function",
        "mathematical object",
        "mathematical function",
        "vector",
        "notation",
        "equation",
        "mathematical expression",
        "expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The vector v(1)(B) representing the number of distinct entities satisfying the first argument position in the body of an OP rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-3",
          "local_name": "v(1)(B)",
          "local_types": [
            "variable",
            "function",
            "mathematical object",
            "mathematical function",
            "vector",
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-v__1___b_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-6-Sentence-4",
          "local_name": "v(1)(B)",
          "local_types": [
            "notation",
            "expression"
          ],
          "iri": "Entity-v__1___b_-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-3",
          "local_name": "v(1)(B)",
          "local_types": [
            "variable",
            "mathematical object",
            "vector"
          ],
          "iri": "Entity-v__1___b_-Mention-3"
        }
      ],
      "relevance": 0.50390625
    },
    "Entity-rescal_embeddings_are_also_larger_and_simpler_than_those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker_.": {
      "node_id": "rescal_embeddings_are_also_larger_and_simpler_than_those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker_.",
      "disambiguation_index": 0,
      "label": "RESCAL embeddings are also larger and simpler than those in more recent embedding-based link predictors such as HOLE and TuckER.",
      "aliases": [
        "RESCAL embeddings are also larger and simpler than those in more recent embedding-based link predictors such as HOLE and TuckER."
      ],
      "types": [
        "comparison"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of embedding used for link prediction",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-7",
          "local_name": "RESCAL embeddings are also larger and simpler than those in more recent embedding-based link predictors such as HOLE and TuckER.",
          "local_types": [
            "comparison"
          ],
          "iri": "Entity-rescal_embeddings_are_also_larger_and_simpler_than_those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker_.-Mention-1"
        }
      ],
      "relevance": 0.50390625
    },
    "Entity-the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.": {
      "node_id": "the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.",
      "disambiguation_index": 0,
      "label": "the confidence degree (CD) of such a query to be the maximum OPSC of all the rules inducing the query, thereby giving no weight to redundant rules that induce the same query.",
      "aliases": [
        "the confidence degree (CD) of such a query to be the maximum OPSC of all the rules inducing the query, thereby giving no weight to redundant rules that induce the same query.",
        "of such a query to be the maximum OPSC of all the rules inducing the query"
      ],
      "types": [
        "definition",
        "query",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The confidence degree (CD) refers to a measure of the maximum OPSC (Open Path Support Coefficient) value among all rules inducing a specific query, with no consideration given to redundant rules that induce the same query.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "the confidence degree (CD) of such a query to be the maximum OPSC of all the rules inducing the query, thereby giving no weight to redundant rules that induce the same query.",
          "local_types": [
            "definition",
            "query"
          ],
          "iri": "Entity-the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "of such a query to be the maximum OPSC of all the rules inducing the query",
          "local_types": [
            "query",
            "rule"
          ],
          "iri": "Entity-the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.-Mention-2"
        }
      ],
      "relevance": 0.50390625
    },
    "Entity-a_question": {
      "node_id": "a_question",
      "disambiguation_index": 0,
      "label": "a question",
      "aliases": [
        "a question"
      ],
      "types": [
        "question"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A query that, when answered correctly, uncovers some missing fact or information in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-4-Sentence-1",
          "local_name": "a question",
          "local_types": [
            "question"
          ],
          "iri": "Entity-a_question-Mention-1"
        }
      ],
      "relevance": 0.50390625
    },
    "Entity-vector_embeddings": {
      "node_id": "vector_embeddings",
      "disambiguation_index": 0,
      "label": "vector embeddings",
      "aliases": [
        "vector embeddings"
      ],
      "types": [
        "machine learning technique",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of words or concepts as numerical vectors that capture their semantic meaning and relationships.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "vector embeddings",
          "local_types": [
            "machine learning technique",
            "data structure"
          ],
          "iri": "Entity-vector_embeddings-Mention-1"
        }
      ],
      "relevance": 0.50341796875
    },
    "Entity-then__for_half_of_the_instance_of_each_predicate": {
      "node_id": "then__for_half_of_the_instance_of_each_predicate",
      "disambiguation_index": 0,
      "label": "Then, for half of the instances of each predicate",
      "aliases": [
        "Then, for half of the instances of each predicate"
      ],
      "types": [
        "instance",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A query generation method used by Prand baseline in OPRL experiments.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "Then, for half of the instances of each predicate",
          "local_types": [
            "instance",
            "predicate"
          ],
          "iri": "Entity-then__for_half_of_the_instance_of_each_predicate-Mention-1"
        }
      ],
      "relevance": 0.5029296875
    },
    "Entity-novel_fitness_function": {
      "node_id": "novel_fitness_function",
      "disambiguation_index": 0,
      "label": "novel fitness function",
      "aliases": [
        "novel fitness function"
      ],
      "types": [
        "algorithm",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function used to measure the suitability or 'goodness' of an optimization problem rule based on its properties.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "novel fitness function",
          "local_types": [
            "algorithm",
            "methodology"
          ],
          "iri": "Entity-novel_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.50244140625
    },
    "Entity-rule_to_generate_relevant_question_automatically": {
      "node_id": "rule_to_generate_relevant_question_automatically",
      "disambiguation_index": 0,
      "label": "rules to generate relevant questions automatically",
      "aliases": [
        "rules to generate relevant questions automatically"
      ],
      "types": [
        "approach",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or protocols for generating pertinent inquiries.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-1",
          "local_name": "rules to generate relevant questions automatically",
          "local_types": [
            "approach",
            "technique"
          ],
          "iri": "Entity-rule_to_generate_relevant_question_automatically-Mention-1"
        }
      ],
      "relevance": 0.50244140625
    },
    "Entity-synthetic_poker": {
      "node_id": "synthetic_poker",
      "disambiguation_index": 0,
      "label": "synthetic Poker",
      "aliases": [
        "synthetic Poker"
      ],
      "types": [
        "Poker",
        "game",
        "poker variant"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A synthetic knowledge graph dataset for poker game facts",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "synthetic Poker",
          "local_types": [
            "Poker",
            "game",
            "poker variant"
          ],
          "iri": "Entity-synthetic_poker-Mention-1"
        }
      ],
      "relevance": 0.50244140625
    },
    "Entity-entity_that_are_related_to_the_existing_entity_in_the_set": {
      "node_id": "entity_that_are_related_to_the_existing_entity_in_the_set",
      "disambiguation_index": 0,
      "label": "entities that are related to the existing entities in the set",
      "aliases": [
        "entities that are related to the existing entities in the set"
      ],
      "types": [
        "set",
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that are related to the existing entities in the set refer to entities involved in a target predicate and its inverse, which are used to build a reduced knowledge graph for learning open-path rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-8",
          "local_name": "entities that are related to the existing entities in the set",
          "local_types": [
            "set",
            "entities"
          ],
          "iri": "Entity-entity_that_are_related_to_the_existing_entity_in_the_set-Mention-1"
        }
      ],
      "relevance": 0.501953125
    },
    "Entity-increasing_precision_a_more_missing_fact_are_found": {
      "node_id": "increasing_precision_a_more_missing_fact_are_found",
      "disambiguation_index": 0,
      "label": "increasing precision as more missing facts are found",
      "aliases": [
        "increasing precision as more missing facts are found"
      ],
      "types": [
        "behavior",
        "precision"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The phenomenon where query generation becomes increasingly precise as more missing facts are discovered",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "increasing precision as more missing facts are found",
          "local_types": [
            "behavior",
            "precision"
          ],
          "iri": "Entity-increasing_precision_a_more_missing_fact_are_found-Mention-1"
        }
      ],
      "relevance": 0.501953125
    },
    "Entity-p_h__e__e__": {
      "node_id": "p_h__e__e__",
      "disambiguation_index": 0,
      "label": "P_h(e, e')",
      "aliases": [
        "P_h(e, e')"
      ],
      "types": [
        "property",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate representing an existential rule in a knowledge graph, relating two entities (e and e') with respect to some property or relation P.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-4",
          "local_name": "P_h(e, e')",
          "local_types": [
            "property",
            "relation"
          ],
          "iri": "Entity-p_h__e__e__-Mention-1"
        }
      ],
      "relevance": 0.50146484375
    },
    "Entity-_0_2_1_": {
      "node_id": "_0_2_1_",
      "disambiguation_index": 0,
      "label": "| 0 2 1 |",
      "aliases": [
        "| 0 2 1 |"
      ],
      "types": [
        "matrix",
        "mathematical entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The matrix representing the set of all predicates and their corresponding entities in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-2",
          "local_name": "| 0 2 1 |",
          "local_types": [
            "matrix",
            "mathematical entity"
          ],
          "iri": "Entity-_0_2_1_-Mention-1"
        }
      ],
      "relevance": 0.50146484375
    },
    "Entity-we_could_infer_the_query": {
      "node_id": "we_could_infer_the_query",
      "disambiguation_index": 0,
      "label": "we could infer the query",
      "aliases": [
        "we could infer the query"
      ],
      "types": [
        "query",
        "inference"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The process or method by which one can deduce a question from an instantiation of the body part of an open path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "we could infer the query",
          "local_types": [
            "query",
            "inference"
          ],
          "iri": "Entity-we_could_infer_the_query-Mention-1"
        }
      ],
      "relevance": 0.50146484375
    },
    "Entity-a_false_positive_rate_of_almost_50_": {
      "node_id": "a_false_positive_rate_of_almost_50_",
      "disambiguation_index": 0,
      "label": "a False Positive Rate of almost 50%",
      "aliases": [
        "a False Positive Rate of almost 50%"
      ],
      "types": [
        "metric",
        "rate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The proportion of queries generated by Open Path rules that do not have an instance fact in the test data, indicating false positives.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "a False Positive Rate of almost 50%",
          "local_types": [
            "metric",
            "rate"
          ],
          "iri": "Entity-a_false_positive_rate_of_almost_50_-Mention-1"
        }
      ],
      "relevance": 0.50146484375
    },
    "Entity-op": {
      "node_id": "op",
      "disambiguation_index": 0,
      "label": "OP",
      "aliases": [
        "OP"
      ],
      "types": [
        "notation system",
        "rule learner",
        "fragment of language",
        "organization",
        "abbreviation",
        "ontology",
        "concept",
        "operator",
        "format",
        "rule",
        "algorithm",
        "notation",
        "rule formalism",
        "rule set",
        "system",
        "logic"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A notation system or formalism used to represent and manipulate logical expressions",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-2",
          "local_name": "OP",
          "local_types": [
            "ontology",
            "rule set",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-op-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "OP",
          "local_types": [
            "organization",
            "system"
          ],
          "iri": "Entity-op-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-4",
          "local_name": "OP",
          "local_types": [
            "rule",
            "concept"
          ],
          "iri": "Entity-op-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-3",
          "local_name": "OP",
          "local_types": [
            "rule",
            "concept"
          ],
          "iri": "Entity-op-Mention-4"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "OP",
          "local_types": [
            "rule learner"
          ],
          "iri": "Entity-op-Mention-5"
        },
        {
          "reference": "Section-1-Paragraph-1-Sentence-3",
          "local_name": "OP",
          "local_types": [
            "abbreviation",
            "notation"
          ],
          "iri": "Entity-op-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "abbreviation",
            "notation system",
            "rule formalism",
            "fragment of language"
          ],
          "iri": "Entity-op-Mention-7"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "ontology",
            "concept",
            "rule"
          ],
          "iri": "Entity-op-Mention-8"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "rule",
            "logic",
            "concept"
          ],
          "iri": "Entity-op-Mention-9"
        },
        {
          "reference": "Section-4-Paragraph-10-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "notation",
            "rule"
          ],
          "iri": "Entity-op-Mention-10"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-13",
          "local_name": "OP",
          "local_types": [
            "notation",
            "format"
          ],
          "iri": "Entity-op-Mention-11"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-op-Mention-12"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "OP",
          "local_types": [
            "notation",
            "concept",
            "rule"
          ],
          "iri": "Entity-op-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "OP",
          "local_types": [
            "rule",
            "notation"
          ],
          "iri": "Entity-op-Mention-14"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "OP",
          "local_types": [
            "concept",
            "operator"
          ],
          "iri": "Entity-op-Mention-15"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-op-Mention-16"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-2",
          "local_name": "OP",
          "local_types": [
            "notation",
            "system"
          ],
          "iri": "Entity-op-Mention-17"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "OP",
          "local_types": [
            "rule",
            "notation"
          ],
          "iri": "Entity-op-Mention-18"
        }
      ],
      "relevance": 0.5009765625
    },
    "Entity-compositional_embeddings": {
      "node_id": "compositional_embeddings",
      "disambiguation_index": 0,
      "label": "compositional embeddings",
      "aliases": [
        "compositional embeddings"
      ],
      "types": [
        "embedding method",
        "embeddings",
        "type-of-embedding",
        "representation technique",
        "mathematical concept",
        "concept",
        "approach",
        "embedding type",
        "algorithm",
        "method",
        "technique"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or approach that represents words, phrases, or concepts as numerical vectors based on their internal structure and composition.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "compositional embeddings",
          "local_types": [
            "embedding method",
            "embeddings",
            "type-of-embedding",
            "representation technique",
            "concept",
            "approach",
            "embedding type",
            "algorithm",
            "method",
            "technique"
          ],
          "iri": "Entity-compositional_embeddings-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "compositional embeddings",
          "local_types": [
            "concept",
            "mathematical concept",
            "algorithm"
          ],
          "iri": "Entity-compositional_embeddings-Mention-2"
        }
      ],
      "relevance": 0.5009765625
    },
    "Entity-p_1__e_9__e_7_": {
      "node_id": "p_1__e_9__e_7_",
      "disambiguation_index": 0,
      "label": "P_1(e_9, e_7)",
      "aliases": [
        "P_1(e_9, e_7)"
      ],
      "types": [
        "predicate",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The OP rule of type P_1 that relates entities e_9 and e_7",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "P_1(e_9, e_7)",
          "local_types": [
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-p_1__e_9__e_7_-Mention-1"
        }
      ],
      "relevance": 0.5009765625
    },
    "Entity-yago2": {
      "node_id": "yago2",
      "disambiguation_index": 0,
      "label": "YAGO2",
      "aliases": [
        "YAGO2"
      ],
      "types": [
        "database",
        "dataset",
        "ontology",
        "knowledge graph",
        "data set",
        "knowledge base",
        "data source",
        "resource"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A large-scale knowledge graph database",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-1",
          "local_name": "YAGO2",
          "local_types": [
            "database",
            "dataset",
            "ontology",
            "knowledge graph",
            "data set",
            "knowledge base"
          ],
          "iri": "Entity-yago2-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "YAGO2",
          "local_types": [
            "dataset",
            "knowledge graph",
            "knowledge base",
            "data source",
            "resource"
          ],
          "iri": "Entity-yago2-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-3",
          "local_name": "YAGO2",
          "local_types": [
            "dataset"
          ],
          "iri": "Entity-yago2-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "YAGO2",
          "local_types": [
            "dataset",
            "knowledge base",
            "ontology",
            "knowledge graph"
          ],
          "iri": "Entity-yago2-Mention-4"
        }
      ],
      "relevance": 0.5
    },
    "Entity-latent_representation": {
      "node_id": "latent_representation",
      "disambiguation_index": 0,
      "label": "latent representations",
      "aliases": [
        "latent representations"
      ],
      "types": [
        "representation",
        "concept",
        "computational model",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Abstract mathematical or computational models that capture underlying patterns, structures, or relationships in data.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "latent representations",
          "local_types": [
            "representation",
            "concept",
            "computational model",
            "mathematical concept"
          ],
          "iri": "Entity-latent_representation-Mention-1"
        }
      ],
      "relevance": 0.5
    },
    "Entity-pk__ei__ej_": {
      "node_id": "pk__ei__ej_",
      "disambiguation_index": 0,
      "label": "Pk(ei, ej)",
      "aliases": [
        "Pk(ei, ej)"
      ],
      "types": [
        "predicate",
        "logical formula"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The fact Pk(ei, ej) in the knowledge graph F, where k is an index of predicate Pk and ei and ej are entities.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "Pk(ei, ej)",
          "local_types": [
            "predicate",
            "logical formula"
          ],
          "iri": "Entity-pk__ei__ej_-Mention-1"
        }
      ],
      "relevance": 0.5
    },
    "Entity-two_matrix_m_1_and_m_2": {
      "node_id": "two_matrix_m_1_and_m_2",
      "disambiguation_index": 0,
      "label": "two matrices M_1 and M_2",
      "aliases": [
        "two matrices M_1 and M_2"
      ],
      "types": [
        "matrices"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Two matrices, namely M_1 and M_2, which are used in the context of knowledge graph completion as part of the similarity function sim defined by the Frobenius norm.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "two matrices M_1 and M_2",
          "local_types": [
            "matrices"
          ],
          "iri": "Entity-two_matrix_m_1_and_m_2-Mention-1"
        }
      ],
      "relevance": 0.499755859375
    },
    "Entity-rule_learning_system_employ_a_rule_language_to_express_rule_.": {
      "node_id": "rule_learning_system_employ_a_rule_language_to_express_rule_.",
      "disambiguation_index": 0,
      "label": "Rule learning systems employ a rule language to express rules.",
      "aliases": [
        "Rule learning systems employ a rule language to express rules."
      ],
      "types": [
        "statement",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A system that uses a specific language to define and represent rules.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-1",
          "local_name": "Rule learning systems employ a rule language to express rules.",
          "local_types": [
            "statement",
            "fact"
          ],
          "iri": "Entity-rule_learning_system_employ_a_rule_language_to_express_rule_.-Mention-1"
        }
      ],
      "relevance": 0.49951171875
    },
    "Entity-predicate_a_vector_and_use_an_additive_calculus_for_scoring": {
      "node_id": "predicate_a_vector_and_use_an_additive_calculus_for_scoring",
      "disambiguation_index": 0,
      "label": "predicates as vectors and use an additive calculus for scoring",
      "aliases": [
        "predicates as vectors and use an additive calculus for scoring"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A method of representing predicates in a knowledge graph, where each predicate is associated with a vector that can be used to score the plausibility of facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "predicates as vectors and use an additive calculus for scoring",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-predicate_a_vector_and_use_an_additive_calculus_for_scoring-Mention-1"
        }
      ],
      "relevance": 0.499267578125
    },
    "Entity-the_third_rule": {
      "node_id": "the_third_rule",
      "disambiguation_index": 0,
      "label": "The third rule",
      "aliases": [
        "The third rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A learned OP rule stating that if there is a TV program with a participant having an occupation, it is likely that the presenter of the program is known.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "The third rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_third_rule-Mention-1"
        }
      ],
      "relevance": 0.499267578125
    },
    "Entity-head_coverage": {
      "node_id": "head_coverage",
      "disambiguation_index": 0,
      "label": "head coverage",
      "aliases": [
        "head coverage"
      ],
      "types": [
        "evaluation metric",
        "performance indicator",
        "measure",
        "data analysis technique",
        "metric",
        "algorithmic concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of how well a model or algorithm covers its target domain",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-2",
          "local_name": "head coverage",
          "local_types": [
            "evaluation metric",
            "performance indicator",
            "measure",
            "data analysis technique",
            "metric",
            "algorithmic concept"
          ],
          "iri": "Entity-head_coverage-Mention-1"
        }
      ],
      "relevance": 0.4990234375
    },
    "Entity-process_for_generating_relevant_query": {
      "node_id": "process_for_generating_relevant_query",
      "disambiguation_index": 0,
      "label": "process for generating relevant queries",
      "aliases": [
        "process for generating relevant queries"
      ],
      "types": [
        "methodology",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or algorithm used to generate queries that are relevant and pertinent.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-4",
          "local_name": "process for generating relevant queries",
          "local_types": [
            "methodology",
            "algorithm"
          ],
          "iri": "Entity-process_for_generating_relevant_query-Mention-1"
        }
      ],
      "relevance": 0.49853515625
    },
    "Entity-target_predicate_in_the_head__p": {
      "node_id": "target_predicate_in_the_head__p",
      "disambiguation_index": 0,
      "label": "target predicate in the head, P",
      "aliases": [
        "target predicate in the head, P"
      ],
      "types": [
        "predicate",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical expression or operation that is being targeted for rule extraction and knowledge graph construction.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "target predicate in the head, P",
          "local_types": [
            "predicate",
            "variable"
          ],
          "iri": "Entity-target_predicate_in_the_head__p-Mention-1"
        }
      ],
      "relevance": 0.498291015625
    },
    "Entity-we_evaluate_oprl": {
      "node_id": "we_evaluate_oprl",
      "disambiguation_index": 0,
      "label": "We evaluate OPRL",
      "aliases": [
        "We evaluate OPRL"
      ],
      "types": [
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An evaluation process or methodology",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-1",
          "local_name": "We evaluate OPRL",
          "local_types": [
            "evaluation"
          ],
          "iri": "Entity-we_evaluate_oprl-Mention-1"
        }
      ],
      "relevance": 0.497314453125
    },
    "Entity-generated_query": {
      "node_id": "generated_query",
      "disambiguation_index": 0,
      "label": "generated queries",
      "aliases": [
        "generated queries"
      ],
      "types": [
        "queries",
        "requests"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of automatically generated requests or statements that can be used as input for a system or process.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-4",
          "local_name": "generated queries",
          "local_types": [
            "queries",
            "requests"
          ],
          "iri": "Entity-generated_query-Mention-1"
        }
      ],
      "relevance": 0.497314453125
    },
    "Entity-query_that_can_be_answered_from_the_training_set": {
      "node_id": "query_that_can_be_answered_from_the_training_set",
      "disambiguation_index": 0,
      "label": "queries that can be answered from the training set",
      "aliases": [
        "queries that can be answered from the training set"
      ],
      "types": [
        "query",
        "training data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of questions or statements whose answers are already present in the available data.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "queries that can be answered from the training set",
          "local_types": [
            "query",
            "training data"
          ],
          "iri": "Entity-query_that_can_be_answered_from_the_training_set-Mention-1"
        }
      ],
      "relevance": 0.497314453125
    },
    "Entity-e__we_write_it_embedding_vector_a_e_.": {
      "node_id": "e__we_write_it_embedding_vector_a_e_.",
      "disambiguation_index": 0,
      "label": "e, we write its embedding vector as e.",
      "aliases": [
        "e, we write its embedding vector as e."
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The embedding vector of an entity 'e' in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-3",
          "local_name": "e, we write its embedding vector as e.",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-e__we_write_it_embedding_vector_a_e_.-Mention-1"
        }
      ],
      "relevance": 0.497314453125
    },
    "Entity-there_is_no_clear_reason": {
      "node_id": "there_is_no_clear_reason",
      "disambiguation_index": 0,
      "label": "There is no clear reason",
      "aliases": [
        "There is no clear reason"
      ],
      "types": [
        "reason"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The uncertainty in choosing between two fitness functions, f_op and f_coo, for evaluating open path rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-1",
          "local_name": "There is no clear reason",
          "local_types": [
            "reason"
          ],
          "iri": "Entity-there_is_no_clear_reason-Mention-1"
        }
      ],
      "relevance": 0.497314453125
    },
    "Entity-logical_rule": {
      "node_id": "logical_rule",
      "disambiguation_index": 0,
      "label": "logical rules",
      "aliases": [
        "logical rules"
      ],
      "types": [
        "rule-based system",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of principles governing the behavior and decision-making process",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "logical rules",
          "local_types": [
            "rule-based system",
            "knowledge representation"
          ],
          "iri": "Entity-logical_rule-Mention-1"
        }
      ],
      "relevance": 0.4970703125
    },
    "Entity-fb15k": {
      "node_id": "fb15k",
      "disambiguation_index": 0,
      "label": "FB15K",
      "aliases": [
        "FB15K"
      ],
      "types": [
        "dataset",
        "benchmark"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A dataset or benchmark used in natural language processing and knowledge graph completion tasks, derived from Freebase.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-2",
          "local_name": "FB15K",
          "local_types": [
            "dataset",
            "benchmark"
          ],
          "iri": "Entity-fb15k-Mention-1"
        }
      ],
      "relevance": 0.496826171875
    },
    "Entity-relational_database_where_type__not-null__and_key_constraint_abound_to_enforce_a_kind_of_completeness": {
      "node_id": "relational_database_where_type__not-null__and_key_constraint_abound_to_enforce_a_kind_of_completeness",
      "disambiguation_index": 0,
      "label": "relational databases where type, not-null, and key constraints abound to enforce a kind of completeness",
      "aliases": [
        "relational databases where type, not-null, and key constraints abound to enforce a kind of completeness"
      ],
      "types": [
        "database",
        "technology"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Relational databases with type, not-null, and key constraints that ensure data completeness",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "relational databases where type, not-null, and key constraints abound to enforce a kind of completeness",
          "local_types": [
            "database",
            "technology"
          ],
          "iri": "Entity-relational_database_where_type__not-null__and_key_constraint_abound_to_enforce_a_kind_of_completeness-Mention-1"
        }
      ],
      "relevance": 0.496826171875
    },
    "Entity-method_which_embed_the_predicate_into_vector": {
      "node_id": "method_which_embed_the_predicate_into_vector",
      "disambiguation_index": 0,
      "label": "methods which embed the predicates into vectors",
      "aliases": [
        "methods which embed the predicates into vectors"
      ],
      "types": [
        "approach",
        "technique"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Methods that learn vector representations for both entities and predicates, allowing for capturing rich interactions amongst them.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-6",
          "local_name": "methods which embed the predicates into vectors",
          "local_types": [
            "approach",
            "technique"
          ],
          "iri": "Entity-method_which_embed_the_predicate_into_vector-Mention-1"
        }
      ],
      "relevance": 0.496826171875
    },
    "Entity-various_method_have_been_proposed_to_construct_embeddings": {
      "node_id": "various_method_have_been_proposed_to_construct_embeddings",
      "disambiguation_index": 0,
      "label": "Various methods have been proposed to construct embeddings",
      "aliases": [
        "Various methods have been proposed to construct embeddings"
      ],
      "types": [
        "statement",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Proposed approaches for generating vector representations",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-1",
          "local_name": "Various methods have been proposed to construct embeddings",
          "local_types": [
            "statement",
            "fact"
          ],
          "iri": "Entity-various_method_have_been_proposed_to_construct_embeddings-Mention-1"
        }
      ],
      "relevance": 0.49658203125
    },
    "Entity-z_0_to_satisfy_the_head_part": {
      "node_id": "z_0_to_satisfy_the_head_part",
      "disambiguation_index": 0,
      "label": "z_0 to satisfy the head part",
      "aliases": [
        "z_0 to satisfy the head part"
      ],
      "types": [
        "head_part"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of entities that can instantiate z_0 such that they satisfy the head part of an open path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-3",
          "local_name": "z_0 to satisfy the head part",
          "local_types": [
            "head_part"
          ],
          "iri": "Entity-z_0_to_satisfy_the_head_part-Mention-1"
        }
      ],
      "relevance": 0.49658203125
    },
    "Entity-minimum_opsc": {
      "node_id": "minimum_opsc",
      "disambiguation_index": 0,
      "label": "minimum OPSC",
      "aliases": [
        "minimum OPSC"
      ],
      "types": [
        "parameter",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "minimum threshold for Open Path (OP) rules quality",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "minimum OPSC",
          "local_types": [
            "parameter",
            "metric"
          ],
          "iri": "Entity-minimum_opsc-Mention-1"
        }
      ],
      "relevance": 0.496337890625
    },
    "Entity-open_path_standard_confidence__opsc_": {
      "node_id": "open_path_standard_confidence__opsc_",
      "disambiguation_index": 0,
      "label": "open path standard confidence (OPSC)",
      "aliases": [
        "open path standard confidence (OPSC)"
      ],
      "types": [
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A metric used to assess the quality of mined open path rules, calculated as the ratio of successful instantiations for both body and head parts.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "open path standard confidence (OPSC)",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-open_path_standard_confidence__opsc_-Mention-1"
        }
      ],
      "relevance": 0.496337890625
    },
    "Entity-fb15kse": {
      "node_id": "fb15kse",
      "disambiguation_index": 0,
      "label": "FB15KSE",
      "aliases": [
        "FB15KSE"
      ],
      "types": [
        "dataset",
        "knowledge base",
        "knowledge graph",
        "resource"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A large-scale knowledge graph dataset",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "FB15KSE",
          "local_types": [
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-fb15kse-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-8-Sentence-1",
          "local_name": "FB15KSE",
          "local_types": [
            "dataset",
            "knowledge base",
            "knowledge graph",
            "resource"
          ],
          "iri": "Entity-fb15kse-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-3",
          "local_name": "FB15KSE",
          "local_types": [
            "dataset",
            "knowledge base",
            "knowledge graph"
          ],
          "iri": "Entity-fb15kse-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "FB15KSE",
          "local_types": [
            "dataset",
            "knowledge base",
            "knowledge graph",
            "resource"
          ],
          "iri": "Entity-fb15kse-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-3",
          "local_name": "FB15KSE",
          "local_types": [
            "dataset",
            "knowledge base",
            "resource"
          ],
          "iri": "Entity-fb15kse-Mention-5"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "FB15KSE",
          "local_types": [
            "dataset",
            "knowledge base",
            "knowledge graph",
            "resource"
          ],
          "iri": "Entity-fb15kse-Mention-6"
        }
      ],
      "relevance": 0.495849609375
    },
    "Entity-rescal_evaluation_function_for_a_single_predicate": {
      "node_id": "rescal_evaluation_function_for_a_single_predicate",
      "disambiguation_index": 0,
      "label": "RESCAL evaluation function for a single predicate",
      "aliases": [
        "RESCAL evaluation function for a single predicate"
      ],
      "types": [
        "function",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The RESCAL evaluation function used to estimate the quality of an open path rule",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-4",
          "local_name": "RESCAL evaluation function for a single predicate",
          "local_types": [
            "function",
            "evaluation"
          ],
          "iri": "Entity-rescal_evaluation_function_for_a_single_predicate-Mention-1"
        }
      ],
      "relevance": 0.495849609375
    },
    "Entity-sc": {
      "node_id": "sc",
      "disambiguation_index": 0,
      "label": "SC",
      "aliases": [
        "SC"
      ],
      "types": [
        "variable",
        "parameter",
        "concept",
        "measure",
        "metric",
        "system",
        "component"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A measure or metric used to quantify the frequency or proportion of true instances in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-2",
          "local_name": "SC",
          "local_types": [
            "concept",
            "system",
            "component",
            "metric"
          ],
          "iri": "Entity-sc-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-3",
          "local_name": "SC",
          "local_types": [
            "measure",
            "metric"
          ],
          "iri": "Entity-sc-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "SC",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-sc-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-2",
          "local_name": "SC",
          "local_types": [
            "measure",
            "metric",
            "variable",
            "parameter"
          ],
          "iri": "Entity-sc-Mention-4"
        }
      ],
      "relevance": 0.495361328125
    },
    "Entity-candidate_rule": {
      "node_id": "candidate_rule",
      "disambiguation_index": 0,
      "label": "candidate rules",
      "aliases": [
        "candidate rules",
        "candidate rule"
      ],
      "types": [
        "candidate",
        "rule-based system",
        "decision-making process",
        "ruleset",
        "programmatic construct",
        "algorithmic process",
        "algorithmic construct",
        "candidates",
        "pattern",
        "rules",
        "rule",
        "algorithm",
        "data point",
        "set of instructions",
        "rule set",
        "algorithmic concept",
        "rule instance"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of proposed or potential guidelines, procedures, or decision-making protocols",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-12",
          "local_name": "candidate rules",
          "local_types": [
            "rule set",
            "programmatic construct"
          ],
          "iri": "Entity-candidate_rule-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-3",
          "local_name": "candidate rules",
          "local_types": [
            "rule set",
            "decision-making process"
          ],
          "iri": "Entity-candidate_rule-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-2",
          "local_name": "candidate rules",
          "local_types": [
            "ruleset",
            "candidates",
            "rules",
            "algorithm",
            "set of instructions"
          ],
          "iri": "Entity-candidate_rule-Mention-3"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-1",
          "local_name": "candidate rules",
          "local_types": [
            "algorithmic process",
            "rule set",
            "algorithmic construct",
            "rule"
          ],
          "iri": "Entity-candidate_rule-Mention-4"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "candidate rule",
          "local_types": [
            "candidate",
            "rule-based system",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-candidate_rule-Mention-5"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-3",
          "local_name": "candidate rule",
          "local_types": [
            "pattern",
            "rule",
            "data point",
            "algorithmic concept",
            "rule instance"
          ],
          "iri": "Entity-candidate_rule-Mention-6"
        }
      ],
      "relevance": 0.495361328125
    },
    "Entity-several_direction_for_future_research_to_handle_existential_rule_learning": {
      "node_id": "several_direction_for_future_research_to_handle_existential_rule_learning",
      "disambiguation_index": 0,
      "label": "several directions for future research to handle existential rule learning",
      "aliases": [
        "several directions for future research to handle existential rule learning"
      ],
      "types": [
        "research direction",
        "existential rule learning",
        "future work",
        "research agenda"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Future research directions aimed at handling existential rule learning",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-5",
          "local_name": "several directions for future research to handle existential rule learning",
          "local_types": [
            "research direction",
            "existential rule learning",
            "future work",
            "research agenda"
          ],
          "iri": "Entity-several_direction_for_future_research_to_handle_existential_rule_learning-Mention-1"
        }
      ],
      "relevance": 0.495361328125
    },
    "Entity-output__a_set_of_op_rule_r_.": {
      "node_id": "output__a_set_of_op_rule_r_.",
      "disambiguation_index": 0,
      "label": "Output: a set of OP rules R.",
      "aliases": [
        "Output: a set of OP rules R."
      ],
      "types": [
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of production rules used to generate or transform outputs.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-4",
          "local_name": "Output: a set of OP rules R.",
          "local_types": [
            "output"
          ],
          "iri": "Entity-output__a_set_of_op_rule_r_.-Mention-1"
        }
      ],
      "relevance": 0.4951171875
    },
    "Entity-argument_embeddings_in_rlvlr": {
      "node_id": "argument_embeddings_in_rlvlr",
      "disambiguation_index": 0,
      "label": "argument embeddings in RLVLR",
      "aliases": [
        "argument embeddings in RLVLR"
      ],
      "types": [
        "embeddings",
        "RLVLR"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Argument embeddings in RLVLR refer to vectors obtained by averaging the entity embeddings of all entities occurring as subjects or objects of a predicate P.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "argument embeddings in RLVLR",
          "local_types": [
            "embeddings",
            "RLVLR"
          ],
          "iri": "Entity-argument_embeddings_in_rlvlr-Mention-1"
        }
      ],
      "relevance": 0.4951171875
    },
    "Entity-about_a_target_predicate": {
      "node_id": "about_a_target_predicate",
      "disambiguation_index": 0,
      "label": "about a target predicate",
      "aliases": [
        "about a target predicate"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A type of rule that aggregates high-performing rules for generating queries related to a specific predicate.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "about a target predicate",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-about_a_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.4951171875
    },
    "Entity-for_1__i__n_-_1_.": {
      "node_id": "for_1__i__n_-_1_.",
      "disambiguation_index": 0,
      "label": "for 1 \u2264 i \u2264 n - 1.",
      "aliases": [
        "for 1 \u2264 i \u2264 n - 1."
      ],
      "types": [
        "loop specification"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A loop specification that defines a quality estimation function for open path rules, used to filter out low-quality candidate rules during rule mining.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "for 1 \u2264 i \u2264 n - 1.",
          "local_types": [
            "loop specification"
          ],
          "iri": "Entity-for_1__i__n_-_1_.-Mention-1"
        }
      ],
      "relevance": 0.494873046875
    },
    "Entity-a_noisy-or_operator": {
      "node_id": "a_noisy-or_operator",
      "disambiguation_index": 0,
      "label": "a Noisy-OR operator",
      "aliases": [
        "a Noisy-OR operator"
      ],
      "types": [
        "operator"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A mathematical function used by rule learners like RLvLR to combine predictions from multiple high-performing rules, where each prediction contributes to the final result with a certain probability.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "a Noisy-OR operator",
          "local_types": [
            "operator"
          ],
          "iri": "Entity-a_noisy-or_operator-Mention-1"
        }
      ],
      "relevance": 0.494873046875
    },
    "Entity-the_row_index_of_non-zero_element_of_v__2___p1_": {
      "node_id": "the_row_index_of_non-zero_element_of_v__2___p1_",
      "disambiguation_index": 0,
      "label": "the row index of non-zero elements of v(2)(P1)",
      "aliases": [
        "the row index of non-zero elements of v(2)(P1)"
      ],
      "types": [
        "index",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of distinct entity indices satisfying the second argument position of a rule's head.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-2",
          "local_name": "the row index of non-zero elements of v(2)(P1)",
          "local_types": [
            "index",
            "data structure"
          ],
          "iri": "Entity-the_row_index_of_non-zero_element_of_v__2___p1_-Mention-1"
        }
      ],
      "relevance": 0.494384765625
    },
    "Entity-entity_forming_the_object_argument_of_the_tail_predicate": {
      "node_id": "entity_forming_the_object_argument_of_the_tail_predicate",
      "disambiguation_index": 0,
      "label": "entities forming the object argument of the tail predicate",
      "aliases": [
        "to entities forming the object argument of the tail predicate, P_n",
        "entities forming the object argument of the tail predicate"
      ],
      "types": [
        "predicate",
        "entity",
        "argument",
        "object"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Entities connected by an open path rule to form the object argument of its tail predicate.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "entities forming the object argument of the tail predicate",
          "local_types": [
            "entity",
            "object"
          ],
          "iri": "Entity-entity_forming_the_object_argument_of_the_tail_predicate-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "to entities forming the object argument of the tail predicate, P_n",
          "local_types": [
            "argument",
            "predicate",
            "entity"
          ],
          "iri": "Entity-entity_forming_the_object_argument_of_the_tail_predicate-Mention-2"
        }
      ],
      "relevance": 0.494140625
    },
    "Entity-each_p_i": {
      "node_id": "each_p_i",
      "disambiguation_index": 0,
      "label": "Each P_i",
      "aliases": [
        "Each P_i"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A predicate in a knowledge graph that represents an existential rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "Each P_i",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-each_p_i-Mention-1"
        }
      ],
      "relevance": 0.494140625
    },
    "Entity-k": {
      "node_id": "k",
      "disambiguation_index": 0,
      "label": "K",
      "aliases": [
        "k",
        "K"
      ],
      "types": [
        "variable",
        "term",
        "mathematical concept",
        "parameter",
        "knowledge graph",
        "constant",
        "value",
        "notation",
        "symbol",
        "set",
        "integer",
        "data structure",
        "expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or value used to describe a quantity, often represented by a symbol.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-4",
          "local_name": "K",
          "local_types": [
            "term",
            "symbol"
          ],
          "iri": "Entity-k-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-8",
          "local_name": "k",
          "local_types": [
            "variable",
            "integer"
          ],
          "iri": "Entity-k-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "k",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-k-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-12",
          "local_name": "K",
          "local_types": [
            "value",
            "constant"
          ],
          "iri": "Entity-k-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "K",
          "local_types": [
            "knowledge graph",
            "variable",
            "data structure",
            "expression"
          ],
          "iri": "Entity-k-Mention-5"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "K",
          "local_types": [
            "notation",
            "variable",
            "constant"
          ],
          "iri": "Entity-k-Mention-6"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-4",
          "local_name": "K",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-k-Mention-7"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-6",
          "local_name": "K",
          "local_types": [
            "set",
            "mathematical concept"
          ],
          "iri": "Entity-k-Mention-8"
        }
      ],
      "relevance": 0.493896484375
    },
    "Entity-_r_": {
      "node_id": "_r_",
      "disambiguation_index": 0,
      "label": "(r)",
      "aliases": [
        "(r)"
      ],
      "types": [
        "variable"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The variable (r) refers to an open path rule that connects entities satisfying the subject argument of the head predicate to entities forming the object argument of the tail predicate along a path of entities that satisfy a chain of predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-16-Sentence-1",
          "local_name": "(r)",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-_r_-Mention-1"
        }
      ],
      "relevance": 0.49365234375
    },
    "Entity-that_join_the_head_of_a_rule_to_it_body_.": {
      "node_id": "that_join_the_head_of_a_rule_to_it_body_.",
      "disambiguation_index": 0,
      "label": "that join the head of a rule to its body.",
      "aliases": [
        "that join the head of a rule to its body."
      ],
      "types": [
        "description"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The count of entities that satisfy both the second argument of the head and the first argument of the body of an OP rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-4-Sentence-4",
          "local_name": "that join the head of a rule to its body.",
          "local_types": [
            "description"
          ],
          "iri": "Entity-that_join_the_head_of_a_rule_to_it_body_.-Mention-1"
        }
      ],
      "relevance": 0.49365234375
    },
    "Entity-test_fact_that_are_held_out_from_the_kg": {
      "node_id": "test_fact_that_are_held_out_from_the_kg",
      "disambiguation_index": 0,
      "label": "test facts that are held out from the KG",
      "aliases": [
        "test facts that are held out from the KG"
      ],
      "types": [
        "data",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of facts or data points reserved for testing and evaluation purposes.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-2",
          "local_name": "test facts that are held out from the KG",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-test_fact_that_are_held_out_from_the_kg-Mention-1"
        }
      ],
      "relevance": 0.493408203125
    },
    "Entity-according_to_the_fitness_function": {
      "node_id": "according_to_the_fitness_function",
      "disambiguation_index": 0,
      "label": "according to the fitness function",
      "aliases": [
        "according to the fitness function"
      ],
      "types": [
        "fitness function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The novel algorithm's method for evaluating rule quality, used to efficiently estimate and formally assess rule quality.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-2",
          "local_name": "according to the fitness function",
          "local_types": [
            "fitness function"
          ],
          "iri": "Entity-according_to_the_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.493408203125
    },
    "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.": {
      "node_id": "a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.",
      "disambiguation_index": 0,
      "label": "a fact is defined by a scoring function over the embedded representations of its predicate and entities.",
      "aliases": [
        "a fact is defined by a scoring function over the embedded representations of its predicate and entities."
      ],
      "types": [
        "definition",
        "predicate",
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A method for evaluating the plausibility of a knowledge graph fact, which involves calculating a score based on the relationships between the fact's subject entity, object entity, and predicate.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "a fact is defined by a scoring function over the embedded representations of its predicate and entities.",
          "local_types": [
            "definition",
            "predicate",
            "entities"
          ],
          "iri": "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.-Mention-1"
        }
      ],
      "relevance": 0.4931640625
    },
    "Entity-the_utility_of_our_fitness_function": {
      "node_id": "the_utility_of_our_fitness_function",
      "disambiguation_index": 0,
      "label": "the utility of our fitness functions",
      "aliases": [
        "the utility of our fitness functions"
      ],
      "types": [
        "utility",
        "fitness function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The assessment and evaluation of the effectiveness or usefulness of the proposed fitness functions for learning Open Path rules.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-1",
          "local_name": "the utility of our fitness functions",
          "local_types": [
            "utility",
            "fitness function"
          ],
          "iri": "Entity-the_utility_of_our_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.4931640625
    },
    "Entity-for_the_example": {
      "node_id": "for_the_example",
      "disambiguation_index": 0,
      "label": "For the example",
      "aliases": [
        "For the example"
      ],
      "types": [
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The computation method for OPSC and OPHC metrics to evaluate candidate rules",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-3",
          "local_name": "For the example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_the_example-Mention-1"
        }
      ],
      "relevance": 0.49267578125
    },
    "Entity-the_result": {
      "node_id": "the_result",
      "disambiguation_index": 0,
      "label": "The results",
      "aliases": [
        "The results"
      ],
      "types": [
        "result"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The results summarized in Table 3 show that a hybrid fitness function that combines both f_co(.)) and f_op(.)) is capable of mining more quality rules than either of these functions individually.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "The results",
          "local_types": [
            "result"
          ],
          "iri": "Entity-the_result-Mention-1"
        }
      ],
      "relevance": 0.49267578125
    },
    "Entity-proposed_system": {
      "node_id": "proposed_system",
      "disambiguation_index": 0,
      "label": "proposed system",
      "aliases": [
        "proposed system"
      ],
      "types": [
        "method",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An automated method or algorithm for generating relevant questions.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-1",
          "local_name": "proposed system",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-proposed_system-Mention-1"
        }
      ],
      "relevance": 0.4921875
    },
    "Entity-remaining_rule": {
      "node_id": "remaining_rule",
      "disambiguation_index": 0,
      "label": "remaining rules",
      "aliases": [
        "remaining rules"
      ],
      "types": [
        "algorithm output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The set of guidelines or instructions that remain after a process, calculation, or procedure has been completed.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-10-Sentence-2",
          "local_name": "remaining rules",
          "local_types": [
            "algorithm output"
          ],
          "iri": "Entity-remaining_rule-Mention-1"
        }
      ],
      "relevance": 0.491943359375
    },
    "Entity-those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker": {
      "node_id": "those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker",
      "disambiguation_index": 0,
      "label": "those in more recent embedding-based link predictors such as HOLE and TuckER",
      "aliases": [
        "those in more recent embedding-based link predictors such as HOLE and TuckER"
      ],
      "types": [
        "predictors"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Recent embedding-based link prediction models, specifically HOLE and TuckER",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-7",
          "local_name": "those in more recent embedding-based link predictors such as HOLE and TuckER",
          "local_types": [
            "predictors"
          ],
          "iri": "Entity-those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker-Mention-1"
        }
      ],
      "relevance": 0.491943359375
    },
    "Entity-method_for_automatic_completion": {
      "node_id": "method_for_automatic_completion",
      "disambiguation_index": 0,
      "label": "Methods for automatic completion",
      "aliases": [
        "Methods for automatic completion"
      ],
      "types": [
        "method",
        "approach",
        "technique",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of techniques or procedures used to complete tasks automatically",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "Methods for automatic completion",
          "local_types": [
            "method",
            "approach",
            "technique",
            "algorithm"
          ],
          "iri": "Entity-method_for_automatic_completion-Mention-1"
        }
      ],
      "relevance": 0.49169921875
    },
    "Entity-denoted_body_r__e__e__": {
      "node_id": "denoted_body_r__e__e__",
      "disambiguation_index": 0,
      "label": "denoted body_r(e, e')",
      "aliases": [
        "denoted body_r(e, e')"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The condition under which a pair of entities satisfies the body of a closed path rule, indicating that all predicates in the rule's body hold true for those entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "denoted body_r(e, e')",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-denoted_body_r__e__e__-Mention-1"
        }
      ],
      "relevance": 0.491455078125
    },
    "Entity-query": {
      "node_id": "query",
      "disambiguation_index": 0,
      "label": "queries",
      "aliases": [
        "queries",
        "Queries",
        "query"
      ],
      "types": [
        "evaluation metric",
        "concept",
        "idea",
        "search request",
        "search term",
        "data retrieval",
        "data",
        "inquiry",
        "question set",
        "requests",
        "query",
        "question",
        "request for information",
        "search queries",
        "input data",
        "search query",
        "inquiries",
        "input",
        "data querying",
        "search operation",
        "information",
        "information retrieval",
        "request",
        "test data",
        "requests for information",
        "information request"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of questions or requests for information, data, or answers.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-3",
          "local_name": "queries",
          "local_types": [
            "requests for information"
          ],
          "iri": "Entity-query-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "queries",
          "local_types": [
            "information request",
            "search query"
          ],
          "iri": "Entity-query-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-3",
          "local_name": "queries",
          "local_types": [
            "information retrieval",
            "data querying"
          ],
          "iri": "Entity-query-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "queries",
          "local_types": [
            "request",
            "query"
          ],
          "iri": "Entity-query-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-7",
          "local_name": "query",
          "local_types": [
            "request",
            "question"
          ],
          "iri": "Entity-query-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-2",
          "local_name": "queries",
          "local_types": [
            "evaluation metric",
            "test data"
          ],
          "iri": "Entity-query-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-3",
          "local_name": "query",
          "local_types": [
            "request",
            "question"
          ],
          "iri": "Entity-query-Mention-7"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-4",
          "local_name": "queries",
          "local_types": [
            "requests",
            "inquiries"
          ],
          "iri": "Entity-query-Mention-8"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "concept",
            "request",
            "inquiry"
          ],
          "iri": "Entity-query-Mention-9"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "input data",
            "search query",
            "information request",
            "data retrieval"
          ],
          "iri": "Entity-query-Mention-10"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-4",
          "local_name": "queries",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-query-Mention-11"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "queries",
          "local_types": [
            "requests",
            "search queries"
          ],
          "iri": "Entity-query-Mention-12"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "query",
          "local_types": [
            "request",
            "inquiry"
          ],
          "iri": "Entity-query-Mention-13"
        },
        {
          "reference": "Section-8-Paragraph-6-Sentence-1",
          "local_name": "query",
          "local_types": [
            "request",
            "input"
          ],
          "iri": "Entity-query-Mention-14"
        },
        {
          "reference": "Section-8-Paragraph-6-Sentence-2",
          "local_name": "query",
          "local_types": [
            "request",
            "input"
          ],
          "iri": "Entity-query-Mention-15"
        },
        {
          "reference": "Section-8-Paragraph-7-Sentence-1",
          "local_name": "query",
          "local_types": [
            "question",
            "concept",
            "information request"
          ],
          "iri": "Entity-query-Mention-16"
        },
        {
          "reference": "Section-8-Paragraph-7-Sentence-3",
          "local_name": "query",
          "local_types": [
            "information request",
            "search term"
          ],
          "iri": "Entity-query-Mention-17"
        },
        {
          "reference": "Section-8-Paragraph-7-Sentence-4",
          "local_name": "queries",
          "local_types": [
            "query",
            "information request",
            "search query"
          ],
          "iri": "Entity-query-Mention-18"
        },
        {
          "reference": "Section-8-Paragraph-11-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "question",
            "request for information"
          ],
          "iri": "Entity-query-Mention-19"
        },
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "query",
          "local_types": [
            "request",
            "information request"
          ],
          "iri": "Entity-query-Mention-20"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "query",
          "local_types": [
            "question set",
            "request",
            "input data",
            "search query"
          ],
          "iri": "Entity-query-Mention-21"
        },
        {
          "reference": "Section-9-Paragraph-3-Sentence-1",
          "local_name": "query",
          "local_types": [
            "question",
            "request",
            "information request",
            "search query"
          ],
          "iri": "Entity-query-Mention-22"
        },
        {
          "reference": "Section-9-Paragraph-8-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "information retrieval",
            "query",
            "search query"
          ],
          "iri": "Entity-query-Mention-23"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "search request",
            "information retrieval"
          ],
          "iri": "Entity-query-Mention-24"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-3",
          "local_name": "query",
          "local_types": [
            "information request",
            "search operation"
          ],
          "iri": "Entity-query-Mention-25"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "information retrieval",
            "search queries",
            "information request",
            "search query"
          ],
          "iri": "Entity-query-Mention-26"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "query",
          "local_types": [
            "information request",
            "search query"
          ],
          "iri": "Entity-query-Mention-27"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "information retrieval",
            "search queries"
          ],
          "iri": "Entity-query-Mention-28"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "queries",
          "local_types": [
            "requests",
            "inquiries"
          ],
          "iri": "Entity-query-Mention-29"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "information retrieval",
            "search queries"
          ],
          "iri": "Entity-query-Mention-30"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "query",
          "local_types": [
            "request",
            "information retrieval",
            "search queries",
            "search query"
          ],
          "iri": "Entity-query-Mention-31"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "queries",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-query-Mention-32"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "queries",
          "local_types": [
            "search queries",
            "question",
            "information retrieval",
            "request"
          ],
          "iri": "Entity-query-Mention-33"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "information retrieval",
            "search queries"
          ],
          "iri": "Entity-query-Mention-34"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "requests",
            "information retrieval",
            "search queries",
            "inquiries"
          ],
          "iri": "Entity-query-Mention-35"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "queries",
          "local_types": [
            "question",
            "request for information",
            "query"
          ],
          "iri": "Entity-query-Mention-36"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "queries",
          "local_types": [
            "information retrieval",
            "search queries"
          ],
          "iri": "Entity-query-Mention-37"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-3",
          "local_name": "queries",
          "local_types": [
            "information retrieval",
            "search queries"
          ],
          "iri": "Entity-query-Mention-38"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-2",
          "local_name": "queries",
          "local_types": [
            "information request",
            "request for information",
            "inquiry",
            "search query"
          ],
          "iri": "Entity-query-Mention-39"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "queries",
          "local_types": [
            "data",
            "input"
          ],
          "iri": "Entity-query-Mention-40"
        }
      ],
      "relevance": 0.4912109375
    },
    "Entity-there_is_no_holistic_similarity_between_the_head_and_body": {
      "node_id": "there_is_no_holistic_similarity_between_the_head_and_body",
      "disambiguation_index": 0,
      "label": "there is no holistic similarity between the head and body",
      "aliases": [
        "there is no holistic similarity between the head and body"
      ],
      "types": [
        "similarity",
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The relationship between an Open Path rule's head and body, where there is no inherent connection or shared concepts between them.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-3",
          "local_name": "there is no holistic similarity between the head and body",
          "local_types": [
            "similarity",
            "concept"
          ],
          "iri": "Entity-there_is_no_holistic_similarity_between_the_head_and_body-Mention-1"
        }
      ],
      "relevance": 0.4912109375
    },
    "Entity-additive_calculus": {
      "node_id": "additive_calculus",
      "disambiguation_index": 0,
      "label": "additive calculus",
      "aliases": [
        "additive calculus"
      ],
      "types": [
        "mathematical concept",
        "algorithmic technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A mathematical concept or algorithmic technique that represents predicates as vectors and uses an additive calculus for scoring in representation learning methods.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "additive calculus",
          "local_types": [
            "mathematical concept",
            "algorithmic technique"
          ],
          "iri": "Entity-additive_calculus-Mention-1"
        }
      ],
      "relevance": 0.49072265625
    },
    "Entity-novel_hybrid_fitness_function": {
      "node_id": "novel_hybrid_fitness_function",
      "disambiguation_index": 0,
      "label": "novel hybrid fitness function",
      "aliases": [
        "novel hybrid fitness function"
      ],
      "types": [
        "mathematical concept",
        "optimization algorithm",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical optimization technique that combines multiple approaches to evaluate and guide search processes.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-7-Sentence-3",
          "local_name": "novel hybrid fitness function",
          "local_types": [
            "mathematical concept",
            "optimization algorithm",
            "algorithm"
          ],
          "iri": "Entity-novel_hybrid_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.49072265625
    },
    "Entity-freebase": {
      "node_id": "freebase",
      "disambiguation_index": 0,
      "label": "Freebase",
      "aliases": [
        "Freebase"
      ],
      "types": [
        "database",
        "source",
        "dataset",
        "knowledge graph",
        "data set",
        "knowledge base"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A large-scale knowledge graph or database that provides structured information on various topics.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-1",
          "local_name": "Freebase",
          "local_types": [
            "database",
            "dataset",
            "knowledge graph",
            "data set",
            "knowledge base"
          ],
          "iri": "Entity-freebase-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-2",
          "local_name": "Freebase",
          "local_types": [
            "database",
            "source",
            "dataset",
            "knowledge graph",
            "knowledge base"
          ],
          "iri": "Entity-freebase-Mention-2"
        }
      ],
      "relevance": 0.490478515625
    },
    "Entity-embedding_matrix": {
      "node_id": "embedding_matrix",
      "disambiguation_index": 0,
      "label": "embedding matrix",
      "aliases": [
        "embedding matrix"
      ],
      "types": [
        "matrix",
        "representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of an entity's characteristics or properties, often used to capture complex relationships and patterns.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-4",
          "local_name": "embedding matrix",
          "local_types": [
            "matrix",
            "representation"
          ],
          "iri": "Entity-embedding_matrix-Mention-1"
        }
      ],
      "relevance": 0.490478515625
    },
    "Entity-z_0_to_satisfy_the_body_part": {
      "node_id": "z_0_to_satisfy_the_body_part",
      "disambiguation_index": 0,
      "label": "z_0 to satisfy the body part",
      "aliases": [
        "z_0 to satisfy the body part"
      ],
      "types": [
        "body_part"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of entities that can instantiate z_0 in an open path rule, satisfying both its head and body parts.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-3",
          "local_name": "z_0 to satisfy the body part",
          "local_types": [
            "body_part"
          ],
          "iri": "Entity-z_0_to_satisfy_the_body_part-Mention-1"
        }
      ],
      "relevance": 0.490478515625
    },
    "Entity-so_we_can_not_expect_the_pair_to_be_similar": {
      "node_id": "so_we_can_not_expect_the_pair_to_be_similar",
      "disambiguation_index": 0,
      "label": "so we cannot expect the pairs to be similar",
      "aliases": [
        "so we cannot expect the pairs to be similar"
      ],
      "types": [
        "statement",
        "similarity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The notion that OP rules, unlike CP rules, do not exhibit holistic similarity between head and body predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "so we cannot expect the pairs to be similar",
          "local_types": [
            "statement",
            "similarity"
          ],
          "iri": "Entity-so_we_can_not_expect_the_pair_to_be_similar-Mention-1"
        }
      ],
      "relevance": 0.490478515625
    },
    "Entity-the_first_position": {
      "node_id": "the_first_position",
      "disambiguation_index": 0,
      "label": "the first position",
      "aliases": [
        "the first position"
      ],
      "types": [
        "position"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The term 'the first position' refers to the initial or starting point of either the subject or object arguments of a predicate in a knowledge graph, where each argument is represented by an embedding vector obtained by averaging the embeddings of all entities occurring at that position.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "the first position",
          "local_types": [
            "position"
          ],
          "iri": "Entity-the_first_position-Mention-1"
        }
      ],
      "relevance": 0.490478515625
    },
    "Entity-one_correct_answer": {
      "node_id": "one_correct_answer",
      "disambiguation_index": 0,
      "label": "one correct answer",
      "aliases": [
        "one correct answer"
      ],
      "types": [
        "answer"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The expected unique and accurate response to a generated query, as opposed to a ranked sequence of possible answers.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-1",
          "local_name": "one correct answer",
          "local_types": [
            "answer"
          ],
          "iri": "Entity-one_correct_answer-Mention-1"
        }
      ],
      "relevance": 0.490478515625
    },
    "Entity-e_j__rd_and_each_predicate_p_i_to_a_2d_array_p_i__r__dd_": {
      "node_id": "e_j__rd_and_each_predicate_p_i_to_a_2d_array_p_i__r__dd_",
      "disambiguation_index": 0,
      "label": "E_j \u2208 R^d and each predicate P_i to a 2D array P_i \u2208 R^(d\u00d7d)",
      "aliases": [
        "E_j \u2208 R^d and each predicate P_i to a 2D array P_i \u2208 R^(d\u00d7d)"
      ],
      "types": [
        "vector",
        "predicate representation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The entity representation in RESCAL, where entities are embedded as vectors E_j \u2208 R^d and predicates are represented as 2D arrays P_i \u2208 R^(d\u00d7d) for efficient computation of plausibility scores.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "E_j \u2208 R^d and each predicate P_i to a 2D array P_i \u2208 R^(d\u00d7d)",
          "local_types": [
            "vector",
            "predicate representation"
          ],
          "iri": "Entity-e_j__rd_and_each_predicate_p_i_to_a_2d_array_p_i__r__dd_-Mention-1"
        }
      ],
      "relevance": 0.490234375
    },
    "Entity-a_link_predictor_(3)": {
      "node_id": "a_link_predictor_(3)",
      "disambiguation_index": 3,
      "label": "a link predictor",
      "aliases": [
        "a link predictor"
      ],
      "types": [
        "model",
        "predictor"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A model or algorithm that predicts links between entities in a knowledge graph, given an initial set of facts.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-2",
          "local_name": "a link predictor",
          "local_types": [
            "model",
            "predictor"
          ],
          "iri": "Entity-a_link_predictor_(3)-Mention-1"
        }
      ],
      "relevance": 0.490234375
    },
    "Entity-p1__e3__e1_": {
      "node_id": "p1__e3__e1_",
      "disambiguation_index": 0,
      "label": "P1(e3, e1)",
      "aliases": [
        "P2(e3, e3)",
        "P1(e3, e1)",
        "P1(e3,e1)"
      ],
      "types": [
        "relation",
        "predicate",
        "function",
        "binary relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The OP rule: r: P1(x,z0) \u2190 P2(z0,z1) \u2227 P3(z1,y)",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "P1(e3, e1)",
          "local_types": [
            "relation",
            "predicate",
            "function",
            "binary relation"
          ],
          "iri": "Entity-p1__e3__e1_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "P2(e3, e3)",
          "local_types": [
            "relation",
            "predicate",
            "function",
            "binary relation"
          ],
          "iri": "Entity-p1__e3__e1_-Mention-2"
        }
      ],
      "relevance": 0.489990234375
    },
    "Entity-the_similarity_function_sim": {
      "node_id": "the_similarity_function_sim",
      "disambiguation_index": 0,
      "label": "The similarity function sim",
      "aliases": [
        "The similarity function sim"
      ],
      "types": [
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A measure of similarity between predicate embeddings, defined as exp(-||M_1 - M_2||_F), used in the co-occurrence fitness function for OP rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "The similarity function sim",
          "local_types": [
            "function"
          ],
          "iri": "Entity-the_similarity_function_sim-Mention-1"
        }
      ],
      "relevance": 0.48974609375
    },
    "Entity-translation-based_embeddings": {
      "node_id": "translation-based_embeddings",
      "disambiguation_index": 0,
      "label": "translation-based embeddings",
      "aliases": [
        "The translation-based embeddings",
        "translation-based embeddings"
      ],
      "types": [
        "methodology",
        "embedding method",
        "mathematical concept",
        "representation technique",
        "approach",
        "embedding type",
        "algorithm",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Translation-based embedding method that represents predicates as vectors and uses an additive calculus for scoring, used in RESCAL to learn entity and predicate embeddings.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "translation-based embeddings",
          "local_types": [
            "methodology",
            "embedding method",
            "representation technique",
            "approach",
            "embedding type",
            "method"
          ],
          "iri": "Entity-translation-based_embeddings-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "translation-based embeddings",
          "local_types": [
            "algorithm",
            "mathematical concept"
          ],
          "iri": "Entity-translation-based_embeddings-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "The translation-based embeddings",
          "local_types": [
            "method"
          ],
          "iri": "Entity-translation-based_embeddings-Mention-3"
        }
      ],
      "relevance": 0.489501953125
    },
    "Entity-each_predicate_ha_a_subject_argument_in_the_first_position_and_an_object_argument_in_the_second_position": {
      "node_id": "each_predicate_ha_a_subject_argument_in_the_first_position_and_an_object_argument_in_the_second_position",
      "disambiguation_index": 0,
      "label": "each predicate has a subject argument in the first position and an object argument in the second position",
      "aliases": [
        "each predicate has a subject argument in the first position and an object argument in the second position"
      ],
      "types": [
        "description",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A representation of the structure of predicates in a knowledge graph, where each predicate has its subject argument in the first position and an object argument in the second position.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "each predicate has a subject argument in the first position and an object argument in the second position",
          "local_types": [
            "description",
            "predicate"
          ],
          "iri": "Entity-each_predicate_ha_a_subject_argument_in_the_first_position_and_an_object_argument_in_the_second_position-Mention-1"
        }
      ],
      "relevance": 0.489501953125
    },
    "Entity-function-free_horn_rule": {
      "node_id": "function-free_horn_rule",
      "disambiguation_index": 0,
      "label": "function-free Horn rules",
      "aliases": [
        "function-free Horn rules"
      ],
      "types": [
        "mathematical concept",
        "algorithmic framework"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of logical rule system characterized by Horn clauses without functions, used in mathematical and computational contexts.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-2",
          "local_name": "function-free Horn rules",
          "local_types": [
            "mathematical concept",
            "algorithmic framework"
          ],
          "iri": "Entity-function-free_horn_rule-Mention-1"
        }
      ],
      "relevance": 0.489501953125
    },
    "Entity-_0_0_2___0_2_1___1_0_0_": {
      "node_id": "_0_0_2___0_2_1___1_0_0_",
      "disambiguation_index": 0,
      "label": "| 0 0 2 | | 0 2 1 | | 1 0 0 |",
      "aliases": [
        "| 0 0 2 | | 0 2 1 | | 1 0 0 |"
      ],
      "types": [
        "matrix"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The number of entities that satisfy the body of a rule in the first argument position.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-2",
          "local_name": "| 0 0 2 | | 0 2 1 | | 1 0 0 |",
          "local_types": [
            "matrix"
          ],
          "iri": "Entity-_0_0_2___0_2_1___1_0_0_-Mention-1"
        }
      ],
      "relevance": 0.4892578125
    },
    "Entity-the_former": {
      "node_id": "the_former",
      "disambiguation_index": 0,
      "label": "The former",
      "aliases": [
        "the latter",
        "The former"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A fitness function that estimates rule quality by using entity embeddings alone, without incorporating predicate embeddings.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "The former",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-the_former-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "the latter",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-the_former-Mention-2"
        }
      ],
      "relevance": 0.4892578125
    },
    "Entity-the_compactness_of_the_latter_embeddings_is_useful_for_link_prediction_but_counter-productive_for_our_purpose_where_we_use_embeddings_in_a_heuristic_function_.": {
      "node_id": "the_compactness_of_the_latter_embeddings_is_useful_for_link_prediction_but_counter-productive_for_our_purpose_where_we_use_embeddings_in_a_heuristic_function_.",
      "disambiguation_index": 0,
      "label": "The compactness of the latter embeddings is useful for link prediction but counter-productive for our purposes where we use embeddings in a heuristic function.",
      "aliases": [
        "The compactness of the latter embeddings is useful for link prediction but counter-productive for our purposes where we use embeddings in a heuristic function."
      ],
      "types": [
        "property",
        "advantage_disadvantage"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The compactness of RESCAL embeddings",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-8",
          "local_name": "The compactness of the latter embeddings is useful for link prediction but counter-productive for our purposes where we use embeddings in a heuristic function.",
          "local_types": [
            "property",
            "advantage_disadvantage"
          ],
          "iri": "Entity-the_compactness_of_the_latter_embeddings_is_useful_for_link_prediction_but_counter-productive_for_our_purpose_where_we_use_embeddings_in_a_heuristic_function_.-Mention-1"
        }
      ],
      "relevance": 0.488525390625
    },
    "Entity-o_p": {
      "node_id": "o_p",
      "disambiguation_index": 0,
      "label": "O_p",
      "aliases": [
        "O_p"
      ],
      "types": [
        "entities",
        "set",
        "mathematical concept",
        "collection"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set or collection of mathematical concepts",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "O_p",
          "local_types": [
            "entities",
            "set",
            "mathematical concept",
            "collection"
          ],
          "iri": "Entity-o_p-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-3",
          "local_name": "O_p",
          "local_types": [
            "set",
            "mathematical concept"
          ],
          "iri": "Entity-o_p-Mention-2"
        }
      ],
      "relevance": 0.48828125
    },
    "Entity-possible_query_about_this_set_of_fact_are___p_1__e_1_____p_1____e_2___p_1____e_3___p_1__e_4_____p_1____e_5___p_1__e_8_____p_1__e_9_____p_1____e_7__": {
      "node_id": "possible_query_about_this_set_of_fact_are___p_1__e_1_____p_1____e_2___p_1____e_3___p_1__e_4_____p_1____e_5___p_1__e_8_____p_1__e_9_____p_1____e_7__",
      "disambiguation_index": 0,
      "label": "Possible queries about this set of facts are: {P_1(e_1, ?), P_1(? , e_2), P_1(? , e_3), P_1(e_4, ?), P_1(? , e_5), P_1(e_8, ?), P_1(e_9, ?), P_1(? , e_7)}",
      "aliases": [
        "Possible queries about this set of facts are: {P_1(e_1, ?), P_1(? , e_2), P_1(? , e_3), P_1(e_4, ?), P_1(? , e_5), P_1(e_8, ?), P_1(e_9, ?), P_1(? , e_7)}"
      ],
      "types": [
        "queries",
        "facts"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of potential questions or queries related to a collection of facts",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "Possible queries about this set of facts are: {P_1(e_1, ?), P_1(? , e_2), P_1(? , e_3), P_1(e_4, ?), P_1(? , e_5), P_1(e_8, ?), P_1(e_9, ?), P_1(? , e_7)}",
          "local_types": [
            "queries",
            "facts"
          ],
          "iri": "Entity-possible_query_about_this_set_of_fact_are___p_1__e_1_____p_1____e_2___p_1____e_3___p_1__e_4_____p_1____e_5___p_1__e_8_____p_1__e_9_____p_1____e_7__-Mention-1"
        }
      ],
      "relevance": 0.48828125
    },
    "Entity-the_existence_of_missing_fact": {
      "node_id": "the_existence_of_missing_fact",
      "disambiguation_index": 0,
      "label": "the existence of missing facts",
      "aliases": [
        "the existence of missing facts"
      ],
      "types": [
        "concept",
        "phenomenon"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept or phenomenon that refers to the presence of unknown or unrecorded information, entities, or relationships within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-6",
          "local_name": "the existence of missing facts",
          "local_types": [
            "concept",
            "phenomenon"
          ],
          "iri": "Entity-the_existence_of_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.48828125
    },
    "Entity-the_body_of_each_rule": {
      "node_id": "the_body_of_each_rule",
      "disambiguation_index": 0,
      "label": "the body of each rule",
      "aliases": [
        "the body of each rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The instantiation of each rule where all variables are filled in, except for the head variable which is not fully instantiated.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-3",
          "local_name": "the body of each rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_body_of_each_rule-Mention-1"
        }
      ],
      "relevance": 0.488037109375
    },
    "Entity-target_predicate_p": {
      "node_id": "target_predicate_p",
      "disambiguation_index": 0,
      "label": "target predicate P",
      "aliases": [
        "target predicate P"
      ],
      "types": [
        "predicate",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A fundamental concept or relation that defines an action or operation within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-2",
          "local_name": "target predicate P",
          "local_types": [
            "predicate",
            "concept"
          ],
          "iri": "Entity-target_predicate_p-Mention-1"
        }
      ],
      "relevance": 0.48779296875
    },
    "Entity-pathfinding__": {
      "node_id": "pathfinding__",
      "disambiguation_index": 0,
      "label": "PathFinding()",
      "aliases": [
        "PathFinding()"
      ],
      "types": [
        "function",
        "algorithmic process",
        "logical reasoning procedure",
        "algorithm",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A computational process or algorithm that determines an optimal path or route.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-8",
          "local_name": "PathFinding()",
          "local_types": [
            "function",
            "algorithmic process",
            "logical reasoning procedure",
            "algorithm",
            "method"
          ],
          "iri": "Entity-pathfinding__-Mention-1"
        }
      ],
      "relevance": 0.48779296875
    },
    "Entity-_1n___o_e__e_for_e_in_o_p": {
      "node_id": "_1n___o_e__e_for_e_in_o_p",
      "disambiguation_index": 0,
      "label": "(1/n) \u2211 o_e * e for e in O_p",
      "aliases": [
        "(1/n) \u2211 o_e * e for e in O_p"
      ],
      "types": [
        "equation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The definition of predicate embedding matrix P(2), which represents the object argument embeddings of a predicate.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-1",
          "local_name": "(1/n) \u2211 o_e * e for e in O_p",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-_1n___o_e__e_for_e_in_o_p-Mention-1"
        }
      ],
      "relevance": 0.48779296875
    },
    "Entity-the_top_t__of_rule": {
      "node_id": "the_top_t__of_rule",
      "disambiguation_index": 0,
      "label": "the top t% of rules",
      "aliases": [
        "the top t% of rules"
      ],
      "types": [
        "rules"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The top t% of rules refers to the subset of candidate rules selected based on their fitness values, where t is a learning system parameter that needs to be tuned.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-4",
          "local_name": "the top t% of rules",
          "local_types": [
            "rules"
          ],
          "iri": "Entity-the_top_t__of_rule-Mention-1"
        }
      ],
      "relevance": 0.48779296875
    },
    "Entity-which_can_instantiate_z_0_to_satisfy_both_p_1__x__z_0__and_p_2__z_0__z_1___p_3__z_1__y_": {
      "node_id": "which_can_instantiate_z_0_to_satisfy_both_p_1__x__z_0__and_p_2__z_0__z_1___p_3__z_1__y_",
      "disambiguation_index": 0,
      "label": "which can instantiate z_0 to satisfy both P_1(x, z_0) and P_2(z_0, z_1) \u2227 P_3(z_1, y)",
      "aliases": [
        "which can instantiate z_0 to satisfy both P_1(x, z_0) and P_2(z_0, z_1) \u2227 P_3(z_1, y)"
      ],
      "types": [
        "instantiation",
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A set of entities that can instantiate a variable to satisfy both the premise and conclusion parts of an open path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-2",
          "local_name": "which can instantiate z_0 to satisfy both P_1(x, z_0) and P_2(z_0, z_1) \u2227 P_3(z_1, y)",
          "local_types": [
            "instantiation",
            "condition"
          ],
          "iri": "Entity-which_can_instantiate_z_0_to_satisfy_both_p_1__x__z_0__and_p_2__z_0__z_1___p_3__z_1__y_-Mention-1"
        }
      ],
      "relevance": 0.487548828125
    },
    "Entity-this_(3)": {
      "node_id": "this_(3)",
      "disambiguation_index": 3,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The method for computing OPSC and OPHC, specifically the matrix product B = A(P1) A(P2) ... A(Pm), with elements having a non-zero value.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-2",
          "local_name": "This",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this_(3)-Mention-1"
        }
      ],
      "relevance": 0.487548828125
    },
    "Entity-_e___e_": {
      "node_id": "_e___e_",
      "disambiguation_index": 0,
      "label": "(e', e)",
      "aliases": [
        "(e', e)"
      ],
      "types": [
        "pair",
        "entity",
        "mathematical notation",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of entities representing a logical expression or mathematical notation in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-5",
          "local_name": "(e', e)",
          "local_types": [
            "pair",
            "entity",
            "mathematical notation",
            "logical expression"
          ],
          "iri": "Entity-_e___e_-Mention-1"
        }
      ],
      "relevance": 0.4873046875
    },
    "Entity-the_object_argument_of_p_n": {
      "node_id": "the_object_argument_of_p_n",
      "disambiguation_index": 0,
      "label": "the object argument of P_n",
      "aliases": [
        "the object argument of P_n"
      ],
      "types": [
        "object",
        "argument",
        "P_n"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The entity referred to as 'the object argument of P_n' represents a vector obtained by averaging the embeddings of all the entities that occur as objects of predicate P_n.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-5",
          "local_name": "the object argument of P_n",
          "local_types": [
            "object",
            "argument",
            "P_n"
          ],
          "iri": "Entity-the_object_argument_of_p_n-Mention-1"
        }
      ],
      "relevance": 0.4873046875
    },
    "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r": {
      "node_id": "a_pair_of_entity__e__e___satisfies_the_body_of_r",
      "disambiguation_index": 0,
      "label": "A pair of entities (e, e') satisfies the body of r",
      "aliases": [
        "A pair of entities (e, e') satisfies the body of r",
        "(e, e') satisfies the body of r"
      ],
      "types": [
        "entities",
        "relation",
        "condition"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of entities that satisfies a closed path rule's body, denoted by `body_r(e, e')`, where `(e, e')` are identifiers for objects such as places or people.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "A pair of entities (e, e') satisfies the body of r",
          "local_types": [
            "entities",
            "condition"
          ],
          "iri": "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "(e, e') satisfies the body of r",
          "local_types": [
            "relation"
          ],
          "iri": "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r-Mention-2"
        }
      ],
      "relevance": 0.487060546875
    },
    "Entity-for_each_given_fact": {
      "node_id": "for_each_given_fact",
      "disambiguation_index": 0,
      "label": "For each given fact",
      "aliases": [
        "For each given fact"
      ],
      "types": [
        "description"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A scoring function definition for evaluating the plausibility of facts in a knowledge graph, where E0 and E1 are embedding representations of entities e0 and e1 respectively.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "For each given fact",
          "local_types": [
            "description"
          ],
          "iri": "Entity-for_each_given_fact-Mention-1"
        }
      ],
      "relevance": 0.48681640625
    },
    "Entity-one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t": {
      "node_id": "one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t",
      "disambiguation_index": 0,
      "label": "one for each unification of free variable y with a variable of the head P_t",
      "aliases": [
        "one for each unification of free variable y with a variable of the head P_t"
      ],
      "types": [
        "unification",
        "variable",
        "head"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A consequence that arises from an open path rule, resulting from the unification of the free variable 'y' with a variable from the head predicate 'P_t'.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-2",
          "local_name": "one for each unification of free variable y with a variable of the head P_t",
          "local_types": [
            "unification",
            "variable",
            "head"
          ],
          "iri": "Entity-one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t-Mention-1"
        }
      ],
      "relevance": 0.486328125
    },
    "Entity-horn_rule": {
      "node_id": "horn_rule",
      "disambiguation_index": 0,
      "label": "Horn rules",
      "aliases": [
        "Horn rules"
      ],
      "types": [
        "logic rules",
        "rule-based system",
        "concept",
        "logic framework",
        "computational model",
        "mathematics",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of logical rules used in formal systems, particularly in artificial intelligence and computer science.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-2",
          "local_name": "Horn rules",
          "local_types": [
            "logic rules",
            "rule-based system",
            "mathematics",
            "logic"
          ],
          "iri": "Entity-horn_rule-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-2",
          "local_name": "Horn rules",
          "local_types": [
            "logic framework",
            "concept",
            "computational model",
            "rule-based system"
          ],
          "iri": "Entity-horn_rule-Mention-2"
        }
      ],
      "relevance": 0.486083984375
    },
    "Entity-state-of-the-art_rule-based_link_predictor__rlvlr": {
      "node_id": "state-of-the-art_rule-based_link_predictor__rlvlr",
      "disambiguation_index": 0,
      "label": "state-of-the-art rule-based link predictor, RLvLR",
      "aliases": [
        "state-of-the-art rule-based link predictor, RLvLR"
      ],
      "types": [
        "algorithm",
        "predictor",
        "link prediction model"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The state-of-the-art rule-based link predictor, RLvLR.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-1",
          "local_name": "state-of-the-art rule-based link predictor, RLvLR",
          "local_types": [
            "algorithm",
            "predictor",
            "link prediction model"
          ],
          "iri": "Entity-state-of-the-art_rule-based_link_predictor__rlvlr-Mention-1"
        }
      ],
      "relevance": 0.48583984375
    },
    "Entity-about_that_predicate": {
      "node_id": "about_that_predicate",
      "disambiguation_index": 0,
      "label": "about that predicate",
      "aliases": [
        "about that predicate"
      ],
      "types": [
        "predicate",
        "topic"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A specific target predicate P in the head of an OP (Open Path) rule",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-14",
          "local_name": "about that predicate",
          "local_types": [
            "predicate",
            "topic"
          ],
          "iri": "Entity-about_that_predicate-Mention-1"
        }
      ],
      "relevance": 0.48583984375
    },
    "Entity-having_previously_filtered_out_query_that_can_be_answered_from_the_training_set": {
      "node_id": "having_previously_filtered_out_query_that_can_be_answered_from_the_training_set",
      "disambiguation_index": 0,
      "label": "having previously filtered out queries that can be answered from the training set",
      "aliases": [
        "having previously filtered out queries that can be answered from the training set"
      ],
      "types": [
        "filtering",
        "training data"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of considering only those queries whose answers are not already present in the training data.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "having previously filtered out queries that can be answered from the training set",
          "local_types": [
            "filtering",
            "training data"
          ],
          "iri": "Entity-having_previously_filtered_out_query_that_can_be_answered_from_the_training_set-Mention-1"
        }
      ],
      "relevance": 0.48583984375
    },
    "Entity-model": {
      "node_id": "model",
      "disambiguation_index": 0,
      "label": "models",
      "aliases": [
        "models"
      ],
      "types": [
        "model",
        "artificial intelligence model",
        "machine learning model",
        "computational framework",
        "computational model",
        "artificial intelligence"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A computational framework or representation that uses artificial intelligence, machine learning, or other algorithms to analyze or generate information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-1",
          "local_name": "models",
          "local_types": [
            "model"
          ],
          "iri": "Entity-model-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-2",
          "local_name": "models",
          "local_types": [
            "model",
            "artificial intelligence model",
            "computational framework",
            "computational model",
            "artificial intelligence"
          ],
          "iri": "Entity-model-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "models",
          "local_types": [
            "machine learning model"
          ],
          "iri": "Entity-model-Mention-3"
        }
      ],
      "relevance": 0.485595703125
    },
    "Entity-the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b_": {
      "node_id": "the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b_",
      "disambiguation_index": 0,
      "label": "the number of distinct entities is given by counting the number of non-zero elements in v(1)(B)",
      "aliases": [
        "the number of distinct entities is given by counting the number of non-zero elements in v(1)(B)"
      ],
      "types": [
        "mathematical concept",
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The count of satisfying entities for the first argument position of a rule's body, obtained from the vector v(1)(B) after matrix multiplication.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-4",
          "local_name": "the number of distinct entities is given by counting the number of non-zero elements in v(1)(B)",
          "local_types": [
            "mathematical concept",
            "notation"
          ],
          "iri": "Entity-the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b_-Mention-1"
        }
      ],
      "relevance": 0.485595703125
    },
    "Entity-these_parameter": {
      "node_id": "these_parameter",
      "disambiguation_index": 0,
      "label": "These parameters",
      "aliases": [
        "These parameters"
      ],
      "types": [
        "parameters"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The optimal values for sampling, maximum rule length, and extension to 6 by IncPathFinding() used during experiments.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-2",
          "local_name": "These parameters",
          "local_types": [
            "parameters"
          ],
          "iri": "Entity-these_parameter-Mention-1"
        }
      ],
      "relevance": 0.485595703125
    },
    "Entity-matrix_and_vector_operation": {
      "node_id": "matrix_and_vector_operation",
      "disambiguation_index": 0,
      "label": "matrix and vector operations",
      "aliases": [
        "matrix and vector operations"
      ],
      "types": [
        "mathematical concept",
        "algorithmic technique",
        "mathematical operation",
        "mathematics",
        "computational method",
        "computational technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Operations that combine matrices and vectors according to established mathematical rules, used in various fields such as mathematics, computer science, and engineering.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-4",
          "local_name": "matrix and vector operations",
          "local_types": [
            "mathematical operation",
            "computational technique"
          ],
          "iri": "Entity-matrix_and_vector_operation-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-4",
          "local_name": "matrix and vector operations",
          "local_types": [
            "mathematical concept",
            "algorithmic technique",
            "mathematical operation",
            "mathematics",
            "computational method"
          ],
          "iri": "Entity-matrix_and_vector_operation-Mention-2"
        }
      ],
      "relevance": 0.4853515625
    },
    "Entity-given_predicate": {
      "node_id": "given_predicate",
      "disambiguation_index": 0,
      "label": "Given predicate",
      "aliases": [
        "Given predicate"
      ],
      "types": [
        "concept",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function or relation used to describe an association between entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "Given predicate",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-given_predicate-Mention-1"
        }
      ],
      "relevance": 0.4853515625
    },
    "Entity-non-zero_element_of_v__2___p1_": {
      "node_id": "non-zero_element_of_v__2___p1_",
      "disambiguation_index": 0,
      "label": "non-zero elements of v(2)(P1)",
      "aliases": [
        "non-zero elements of v(1)(B)",
        "non-zero elements of v(2)(P1)"
      ],
      "types": [
        "mathematical object",
        "vector",
        "elements"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of distinct entities that satisfy the second argument position of a rule's head.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-2",
          "local_name": "non-zero elements of v(2)(P1)",
          "local_types": [
            "elements",
            "vector",
            "mathematical object"
          ],
          "iri": "Entity-non-zero_element_of_v__2___p1_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-3",
          "local_name": "non-zero elements of v(1)(B)",
          "local_types": [
            "elements",
            "vector"
          ],
          "iri": "Entity-non-zero_element_of_v__2___p1_-Mention-2"
        }
      ],
      "relevance": 0.485107421875
    },
    "Entity-each_entity_e_i_by_a_vector_e_i__d_and_each_predicate_p_k_by_a_matrix_p_k____dd_": {
      "node_id": "each_entity_e_i_by_a_vector_e_i__d_and_each_predicate_p_k_by_a_matrix_p_k____dd_",
      "disambiguation_index": 0,
      "label": "each entity e_i by a vector e_i \u2208 \u211d^d and each predicate P_k by a matrix P_k \u2208 \u211d^{d\u00d7d}",
      "aliases": [
        "each entity e_i by a vector e_i \u2208 \u211d^d and each predicate P_k by a matrix P_k \u2208 \u211d^{d\u00d7d}"
      ],
      "types": [
        "entity_representation",
        "predicate_representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation or encoding of entities, predicates, or relationships.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-3",
          "local_name": "each entity e_i by a vector e_i \u2208 \u211d^d and each predicate P_k by a matrix P_k \u2208 \u211d^{d\u00d7d}",
          "local_types": [
            "entity_representation",
            "predicate_representation"
          ],
          "iri": "Entity-each_entity_e_i_by_a_vector_e_i__d_and_each_predicate_p_k_by_a_matrix_p_k____dd_-Mention-1"
        }
      ],
      "relevance": 0.48486328125
    },
    "Entity-each_(1)": {
      "node_id": "each_(1)",
      "disambiguation_index": 1,
      "label": "Each",
      "aliases": [
        "Each"
      ],
      "types": [
        "quantifier"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A satisfying entity, indicating a non-zero element in a vector representing entities that satisfy the body of an OP rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-4",
          "local_name": "Each",
          "local_types": [
            "quantifier"
          ],
          "iri": "Entity-each_(1)-Mention-1"
        }
      ],
      "relevance": 0.484375
    },
    "Entity-the_initial_set_of_fact_which_it_aim_to_filter": {
      "node_id": "the_initial_set_of_fact_which_it_aim_to_filter",
      "disambiguation_index": 0,
      "label": "the initial set of facts which it aims to filter",
      "aliases": [
        "the initial set of facts which it aims to filter"
      ],
      "types": [
        "data",
        "information"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The input data used by CHAI for filtering and improving link prediction in knowledge graph completion.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-3",
          "local_name": "the initial set of facts which it aims to filter",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-the_initial_set_of_fact_which_it_aim_to_filter-Mention-1"
        }
      ],
      "relevance": 0.484130859375
    },
    "Entity-link_prediction_model": {
      "node_id": "link_prediction_model",
      "disambiguation_index": 0,
      "label": "link prediction model",
      "aliases": [
        "link prediction model"
      ],
      "types": [
        "machine learning model",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A machine learning algorithm designed to predict relationships or links between entities.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-1",
          "local_name": "link prediction model",
          "local_types": [
            "machine learning model",
            "algorithm"
          ],
          "iri": "Entity-link_prediction_model-Mention-1"
        }
      ],
      "relevance": 0.48388671875
    },
    "Entity-assume_we_have": {
      "node_id": "assume_we_have",
      "disambiguation_index": 0,
      "label": "Assume we have",
      "aliases": [
        "Assume we have"
      ],
      "types": [
        "assumption"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of entities that can instantiate a variable (e.g., z_0) to satisfy both the body and head parts of an open path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-2",
          "local_name": "Assume we have",
          "local_types": [
            "assumption"
          ],
          "iri": "Entity-assume_we_have-Mention-1"
        }
      ],
      "relevance": 0.48388671875
    },
    "Entity-the_pair__e__e___satisfying_the_body_are_connected_by": {
      "node_id": "the_pair__e__e___satisfying_the_body_are_connected_by",
      "disambiguation_index": 0,
      "label": "the pairs (e, e') satisfying the body are connected by",
      "aliases": [
        "the pairs (e, e') satisfying the body are connected by"
      ],
      "types": [
        "description",
        "relationship"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of entities (e, e') that satisfy the rule's body and are connected by a sequence of predicates P1 to Pm.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "the pairs (e, e') satisfying the body are connected by",
          "local_types": [
            "description",
            "relationship"
          ],
          "iri": "Entity-the_pair__e__e___satisfying_the_body_are_connected_by-Mention-1"
        }
      ],
      "relevance": 0.48388671875
    },
    "Entity-entity_resolution": {
      "node_id": "entity_resolution",
      "disambiguation_index": 0,
      "label": "entity resolution",
      "aliases": [
        "entity resolution"
      ],
      "types": [
        "model",
        "problem",
        "task",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of identifying identical or equivalent records within a dataset.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-2",
          "local_name": "entity resolution",
          "local_types": [
            "model",
            "problem",
            "task",
            "algorithm"
          ],
          "iri": "Entity-entity_resolution-Mention-1"
        }
      ],
      "relevance": 0.4833984375
    },
    "Entity-learning_the_previously_selected_predicate_for_fb15kse__table_3_": {
      "node_id": "learning_the_previously_selected_predicate_for_fb15kse__table_3_",
      "disambiguation_index": 0,
      "label": "learning the previously selected predicates for FB15KSE (Table 3)",
      "aliases": [
        "learning the previously selected predicates for FB15KSE (Table 3)"
      ],
      "types": [
        "dataset",
        "table reference",
        "predicate learning"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The process of acquiring knowledge about the previously chosen predicate selection rules used for completing the Freebase Subset Edition (FB15KSE) dataset, as presented in Table 3.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "learning the previously selected predicates for FB15KSE (Table 3)",
          "local_types": [
            "dataset",
            "table reference",
            "predicate learning"
          ],
          "iri": "Entity-learning_the_previously_selected_predicate_for_fb15kse__table_3_-Mention-1"
        }
      ],
      "relevance": 0.4833984375
    },
    "Entity-predicate_embeddings": {
      "node_id": "predicate_embeddings",
      "disambiguation_index": 0,
      "label": "predicate embeddings",
      "aliases": [
        "predicate embeddings"
      ],
      "types": [
        "mathematical concept",
        "predicate",
        "embedding",
        "computational model",
        "algorithm",
        "representation",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation that maps predicates to vectors in a high-dimensional space",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "predicate embeddings",
          "local_types": [
            "representation",
            "technique",
            "algorithm"
          ],
          "iri": "Entity-predicate_embeddings-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-3",
          "local_name": "predicate embeddings",
          "local_types": [
            "embedding",
            "predicate",
            "computational model",
            "mathematical concept"
          ],
          "iri": "Entity-predicate_embeddings-Mention-2"
        }
      ],
      "relevance": 0.483154296875
    },
    "Entity-each_argument_s_embedding": {
      "node_id": "each_argument_s_embedding",
      "disambiguation_index": 0,
      "label": "Each argument's embedding",
      "aliases": [
        "Each argument's embedding"
      ],
      "types": [
        "variable",
        "term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical representation or vector associated with each argument, often used to capture its semantic meaning.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "Each argument's embedding",
          "local_types": [
            "variable",
            "term"
          ],
          "iri": "Entity-each_argument_s_embedding-Mention-1"
        }
      ],
      "relevance": 0.483154296875
    },
    "Entity-for_predicate_p": {
      "node_id": "for_predicate_p",
      "disambiguation_index": 0,
      "label": "For predicate P",
      "aliases": [
        "For predicate P"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The term 'For predicate P' refers to an entity or concept that represents the context of using argument embeddings for estimating rule quality and filtering out low-quality rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-4",
          "local_name": "For predicate P",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-for_predicate_p-Mention-1"
        }
      ],
      "relevance": 0.483154296875
    },
    "Entity-cp": {
      "node_id": "cp",
      "disambiguation_index": 0,
      "label": "CP",
      "aliases": [
        "CP"
      ],
      "types": [
        "concept",
        "rule",
        "logic"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A formal system or framework that defines logical rules and concepts",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-3-Sentence-3",
          "local_name": "CP",
          "local_types": [
            "rule",
            "concept"
          ],
          "iri": "Entity-cp-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-2",
          "local_name": "CP",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-cp-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-1",
          "local_name": "CP",
          "local_types": [
            "rule",
            "logic"
          ],
          "iri": "Entity-cp-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-4-Sentence-1",
          "local_name": "CP",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-cp-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "CP",
          "local_types": [
            "concept",
            "rule"
          ],
          "iri": "Entity-cp-Mention-5"
        }
      ],
      "relevance": 0.48291015625
    },
    "Entity-body_of_this_rule": {
      "node_id": "body_of_this_rule",
      "disambiguation_index": 0,
      "label": "body of this rule",
      "aliases": [
        "body of this rule"
      ],
      "types": [
        "propositional logic",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The core or main part of a logical rule",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "body of this rule",
          "local_types": [
            "propositional logic",
            "knowledge representation"
          ],
          "iri": "Entity-body_of_this_rule-Mention-1"
        }
      ],
      "relevance": 0.48291015625
    },
    "Entity-k____sampling__k__p__.": {
      "node_id": "k____sampling__k__p__.",
      "disambiguation_index": 0,
      "label": "K' := Sampling(K, P).",
      "aliases": [
        "K' := Sampling(K, P)."
      ],
      "types": [
        "equation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical equation that represents a sampling process.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-5",
          "local_name": "K' := Sampling(K, P).",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-k____sampling__k__p__.-Mention-1"
        }
      ],
      "relevance": 0.48291015625
    },
    "Entity-embedding_model": {
      "node_id": "embedding_model",
      "disambiguation_index": 0,
      "label": "embedding models",
      "aliases": [
        "embedding models"
      ],
      "types": [
        "model",
        "machine learning model",
        "algorithm",
        "method",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of machine learning model that converts input data into dense vectors of numbers.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "embedding models",
          "local_types": [
            "model",
            "machine learning model",
            "algorithm",
            "method",
            "technique"
          ],
          "iri": "Entity-embedding_model-Mention-1"
        }
      ],
      "relevance": 0.48291015625
    },
    "Entity-the_following_scoring_function_is_defined": {
      "node_id": "the_following_scoring_function_is_defined",
      "disambiguation_index": 0,
      "label": "the following scoring function is defined",
      "aliases": [
        "the following scoring function is defined"
      ],
      "types": [
        "definition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A fitness function that estimates the quality of an OP rule based on the embedding representations of its predicates, used to evaluate candidate rules and rapidly discard poor performers.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "the following scoring function is defined",
          "local_types": [
            "definition"
          ],
          "iri": "Entity-the_following_scoring_function_is_defined-Mention-1"
        }
      ],
      "relevance": 0.48291015625
    },
    "Entity-_v__2___p1___i___v__1___a__p1__a__p2__..._a__pm____i__": {
      "node_id": "_v__2___p1___i___v__1___a__p1__a__p2__..._a__pm____i__",
      "disambiguation_index": 0,
      "label": "(v(2)(P1)[i] \u00d7 v(1)(A(P1) A(P2) ... A(Pm))[i])",
      "aliases": [
        "(v(2)(P1)[i] \u00d7 v(1)(A(P1) A(P2) ... A(Pm))[i])"
      ],
      "types": [
        "expression",
        "product of variables and coefficients"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entities that satisfy both the head of a rule in its second argument position and the body of the rule in its first argument position.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-1",
          "local_name": "(v(2)(P1)[i] \u00d7 v(1)(A(P1) A(P2) ... A(Pm))[i])",
          "local_types": [
            "expression",
            "product of variables and coefficients"
          ],
          "iri": "Entity-_v__2___p1___i___v__1___a__p1__a__p2__..._a__pm____i__-Mention-1"
        }
      ],
      "relevance": 0.482177734375
    },
    "Entity-each_query_with_a_sequence_of_ranked_entity": {
      "node_id": "each_query_with_a_sequence_of_ranked_entity",
      "disambiguation_index": 0,
      "label": "each query with a sequence of ranked entities",
      "aliases": [
        "each query with a sequence of ranked entities"
      ],
      "types": [
        "query_result"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of queries, where each query has a corresponding list of ranked entities that are potential answers to the query.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "each query with a sequence of ranked entities",
          "local_types": [
            "query_result"
          ],
          "iri": "Entity-each_query_with_a_sequence_of_ranked_entity-Mention-1"
        }
      ],
      "relevance": 0.482177734375
    },
    "Entity-hc_measure": {
      "node_id": "hc_measure",
      "disambiguation_index": 0,
      "label": "HC measures",
      "aliases": [
        "HC measures"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Measures that quantify the explanatory power of a rule, specifically the proportion of facts satisfying its head that can be inferred by satisfying its body.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-4",
          "local_name": "HC measures",
          "local_types": [
            "method"
          ],
          "iri": "Entity-hc_measure-Mention-1"
        }
      ],
      "relevance": 0.48193359375
    },
    "Entity-some_major_approach_to_rule_learning": {
      "node_id": "some_major_approach_to_rule_learning",
      "disambiguation_index": 0,
      "label": "some major approaches to rule learning",
      "aliases": [
        "some major approaches to rule learning"
      ],
      "types": [
        "rule learning method",
        "approach",
        "rule learning"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Major approaches to rule learning methods or techniques",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-2",
          "local_name": "some major approaches to rule learning",
          "local_types": [
            "rule learning method",
            "approach",
            "rule learning"
          ],
          "iri": "Entity-some_major_approach_to_rule_learning-Mention-1"
        }
      ],
      "relevance": 0.4814453125
    },
    "Entity-embedding": {
      "node_id": "embedding",
      "disambiguation_index": 0,
      "label": "embedding",
      "aliases": [
        "embedding"
      ],
      "types": [
        "mathematical concept",
        "vector representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of an object or concept as a numerical vector, often used to capture its semantic meaning and relationships.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "embedding",
          "local_types": [
            "mathematical concept",
            "vector representation"
          ],
          "iri": "Entity-embedding-Mention-1"
        }
      ],
      "relevance": 0.481201171875
    },
    "Entity-an_entity_x": {
      "node_id": "an_entity_x",
      "disambiguation_index": 0,
      "label": "an entity x",
      "aliases": [
        "an entity x"
      ],
      "types": [
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An entity referred to by the example 'Sam' in the context of learning open path rules, which implies that if we know an entity studies in an institute, then it is a citizen of somewhere.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "an entity x",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-an_entity_x-Mention-1"
        }
      ],
      "relevance": 0.48095703125
    },
    "Entity-open_path_standard_confidence": {
      "node_id": "open_path_standard_confidence",
      "disambiguation_index": 0,
      "label": "open path standard confidence",
      "aliases": [
        "open path standard confidence"
      ],
      "types": [
        "measure",
        "evaluation method",
        "evaluation metric",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A metric used to evaluate the quality of mined open path rules, calculated as the ratio of successful instantiations for both body and head parts.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-5-Sentence-1",
          "local_name": "open path standard confidence",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-open_path_standard_confidence-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-7-Sentence-1",
          "local_name": "open path standard confidence",
          "local_types": [
            "evaluation method",
            "evaluation metric",
            "metric"
          ],
          "iri": "Entity-open_path_standard_confidence-Mention-2"
        }
      ],
      "relevance": 0.48046875
    },
    "Entity-_p_i__p___i1__": {
      "node_id": "_p_i__p___i1__",
      "disambiguation_index": 0,
      "label": "(P_i, P_{i+1})",
      "aliases": [
        "(P_i, P_{i+1})"
      ],
      "types": [
        "expression"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A pair of predicates (P_i, P_{i+1}) that co-occur along a path in an open-path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "(P_i, P_{i+1})",
          "local_types": [
            "expression"
          ],
          "iri": "Entity-_p_i__p___i1__-Mention-1"
        }
      ],
      "relevance": 0.47998046875
    },
    "Entity-_e__e___satisfying_the_body": {
      "node_id": "_e__e___satisfying_the_body",
      "disambiguation_index": 0,
      "label": "(e, e') satisfying the body",
      "aliases": [
        "(e, e') satisfying the body"
      ],
      "types": [
        "entities",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of entities related through a specific path in a graph",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "(e, e') satisfying the body",
          "local_types": [
            "entities",
            "relation"
          ],
          "iri": "Entity-_e__e___satisfying_the_body-Mention-1"
        }
      ],
      "relevance": 0.479736328125
    },
    "Entity-hole": {
      "node_id": "hole",
      "disambiguation_index": 0,
      "label": "HOLE",
      "aliases": [
        "HOLE"
      ],
      "types": [
        "link predictor",
        "method",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A type of algorithm or method used for predicting links",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-7",
          "local_name": "HOLE",
          "local_types": [
            "link predictor",
            "method",
            "algorithm"
          ],
          "iri": "Entity-hole-Mention-1"
        }
      ],
      "relevance": 0.4794921875
    },
    "Entity-repeatable_pattern": {
      "node_id": "repeatable_pattern",
      "disambiguation_index": 0,
      "label": "repeatable patterns",
      "aliases": [
        "repeatable patterns"
      ],
      "types": [
        "pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Repeatable patterns refer to the limited number of patterns or structures present in YAGO2, which affects its ability to generate rules and queries.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "repeatable patterns",
          "local_types": [
            "pattern"
          ],
          "iri": "Entity-repeatable_pattern-Mention-1"
        }
      ],
      "relevance": 0.4794921875
    },
    "Entity-each_instance": {
      "node_id": "each_instance",
      "disambiguation_index": 0,
      "label": "Each instance",
      "aliases": [
        "Each instance"
      ],
      "types": [
        "instance"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An instance of an Open Path rule, which connects its head and body via a shared entity.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "Each instance",
          "local_types": [
            "instance"
          ],
          "iri": "Entity-each_instance-Mention-1"
        }
      ],
      "relevance": 0.47900390625
    },
    "Entity-prand_query_are_generated_by_first_selecting_a_bag_of_predicate": {
      "node_id": "prand_query_are_generated_by_first_selecting_a_bag_of_predicate",
      "disambiguation_index": 0,
      "label": "Prand queries are generated by first selecting a bag of predicates",
      "aliases": [
        "Prand queries are generated by first selecting a bag of predicates"
      ],
      "types": [
        "query generation",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A query generation method that selects a random bag of predicates and assigns subject or object entities to them based on their proportions in the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "Prand queries are generated by first selecting a bag of predicates",
          "local_types": [
            "query generation",
            "predicate"
          ],
          "iri": "Entity-prand_query_are_generated_by_first_selecting_a_bag_of_predicate-Mention-1"
        }
      ],
      "relevance": 0.478759765625
    },
    "Entity-p3__z1__z2_": {
      "node_id": "p3__z1__z2_",
      "disambiguation_index": 0,
      "label": "P3(z1, z2)",
      "aliases": [
        "P3(z1, z2)"
      ],
      "types": [
        "function",
        "logical rule",
        "predicate",
        "rule",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A logical rule or mathematical expression that represents a predicate in the context of pathfinding.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-15",
          "local_name": "P3(z1, z2)",
          "local_types": [
            "function",
            "logical rule",
            "predicate",
            "rule",
            "mathematical expression"
          ],
          "iri": "Entity-p3__z1__z2_-Mention-1"
        }
      ],
      "relevance": 0.478515625
    },
    "Entity-similar_entity": {
      "node_id": "similar_entity",
      "disambiguation_index": 0,
      "label": "similar entities",
      "aliases": [
        "similar entities"
      ],
      "types": [
        "entities",
        "similarity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that are connected by predicate pairs in a knowledge graph, exhibiting latent-feature relationships and shared characteristics.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "similar entities",
          "local_types": [
            "entities",
            "similarity"
          ],
          "iri": "Entity-similar_entity-Mention-1"
        }
      ],
      "relevance": 0.478515625
    },
    "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix": {
      "node_id": "it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "disambiguation_index": 0,
      "label": "its embedding matrix as P, also called a weight matrix",
      "aliases": [
        "its embedding matrix as P, also called a weight matrix"
      ],
      "types": [
        "embedding",
        "matrix",
        "weight_matrix"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The entity referred to is an embedding matrix for a predicate P, which represents the weights of connections between entities and predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-4",
          "local_name": "its embedding matrix as P, also called a weight matrix",
          "local_types": [
            "embedding",
            "matrix",
            "weight_matrix"
          ],
          "iri": "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix-Mention-1"
        }
      ],
      "relevance": 0.47802734375
    },
    "Entity-rule-based_link_predictor": {
      "node_id": "rule-based_link_predictor",
      "disambiguation_index": 0,
      "label": "rule-based link predictor",
      "aliases": [
        "rule-based link predictor"
      ],
      "types": [
        "link prediction model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of model that uses rules to predict links between entities.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-2",
          "local_name": "rule-based link predictor",
          "local_types": [
            "link prediction model"
          ],
          "iri": "Entity-rule-based_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.477783203125
    },
    "Entity-_p_k_": {
      "node_id": "_p_k_",
      "disambiguation_index": 0,
      "label": "{P_k}",
      "aliases": [
        "{P_k}"
      ],
      "types": [
        "matrix",
        "predicate embedding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A matrix used in predicate embedding to represent relationships between entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-5",
          "local_name": "{P_k}",
          "local_types": [
            "matrix",
            "predicate embedding"
          ],
          "iri": "Entity-_p_k_-Mention-1"
        }
      ],
      "relevance": 0.4775390625
    },
    "Entity-predicate_p": {
      "node_id": "predicate_p",
      "disambiguation_index": 0,
      "label": "predicate P",
      "aliases": [
        "predicate P"
      ],
      "types": [
        "relation",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of an operation that maps input values to output values",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-4",
          "local_name": "predicate P",
          "local_types": [
            "function",
            "relation"
          ],
          "iri": "Entity-predicate_p-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "predicate P",
          "local_types": [
            "function",
            "relation"
          ],
          "iri": "Entity-predicate_p-Mention-2"
        }
      ],
      "relevance": 0.4775390625
    },
    "Entity-the_first_argument_of_the_body": {
      "node_id": "the_first_argument_of_the_body",
      "disambiguation_index": 0,
      "label": "the first argument of the body",
      "aliases": [
        "the first argument of the body"
      ],
      "types": [
        "argument",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The position in an OP rule where entities are counted to determine the number of satisfying entities that satisfy the body atom.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-3",
          "local_name": "the first argument of the body",
          "local_types": [
            "argument",
            "logic"
          ],
          "iri": "Entity-the_first_argument_of_the_body-Mention-1"
        }
      ],
      "relevance": 0.4775390625
    },
    "Entity-rlvlr_with_noisy-or": {
      "node_id": "rlvlr_with_noisy-or",
      "disambiguation_index": 0,
      "label": "RLvLR with Noisy-OR",
      "aliases": [
        "RLvLR with Noisy-OR"
      ],
      "types": [
        "machine learning model",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A machine learning algorithm combining reinforcement learning and logical reasoning techniques with a noisy-or inference mechanism.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-6",
          "local_name": "RLvLR with Noisy-OR",
          "local_types": [
            "machine learning model",
            "algorithm"
          ],
          "iri": "Entity-rlvlr_with_noisy-or-Mention-1"
        }
      ],
      "relevance": 0.4775390625
    },
    "Entity-algorithm": {
      "node_id": "algorithm",
      "disambiguation_index": 0,
      "label": "algorithm",
      "aliases": [
        "algorithm"
      ],
      "types": [
        "method",
        "computational method",
        "computational process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A step-by-step procedure for solving a problem or accomplishing a specific task",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-5",
          "local_name": "algorithm",
          "local_types": [
            "computational method"
          ],
          "iri": "Entity-algorithm-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-10-Sentence-2",
          "local_name": "algorithm",
          "local_types": [
            "computational process",
            "method"
          ],
          "iri": "Entity-algorithm-Mention-2"
        }
      ],
      "relevance": 0.476318359375
    },
    "Entity-system": {
      "node_id": "system",
      "disambiguation_index": 0,
      "label": "system",
      "aliases": [
        "system"
      ],
      "types": [
        "information retrieval system",
        "computer system",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A computer-based framework or algorithm designed to perform specific tasks and operations.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-2",
          "local_name": "system",
          "local_types": [
            "information retrieval system",
            "computer system",
            "algorithm"
          ],
          "iri": "Entity-system-Mention-1"
        }
      ],
      "relevance": 0.476318359375
    },
    "Entity-the_number_of_entity": {
      "node_id": "the_number_of_entity",
      "disambiguation_index": 0,
      "label": "the number of entities",
      "aliases": [
        "the number of entities"
      ],
      "types": [
        "quantity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The quantity representing the count of entities that can instantiate z0 to satisfy either the head part or the body part of an open path rule.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-3",
          "local_name": "the number of entities",
          "local_types": [
            "quantity"
          ],
          "iri": "Entity-the_number_of_entity-Mention-1"
        }
      ],
      "relevance": 0.475830078125
    },
    "Entity-_ei___v__2___p1___i___v__1___a__p1__a__p2__..._a__pm____i____0_and_1__i__n_": {
      "node_id": "_ei___v__2___p1___i___v__1___a__p1__a__p2__..._a__pm____i____0_and_1__i__n_",
      "disambiguation_index": 0,
      "label": "{ei : (v(2)(P1)[i] \u00d7 v(1)(A(P1) A(P2) ... A(Pm))[i]) > 0 and 1 \u2264 i \u2264 n}",
      "aliases": [
        "{ei : (v(2)(P1)[i] \u00d7 v(1)(A(P1) A(P2) ... A(Pm))[i]) > 0 and 1 \u2264 i \u2264 n}"
      ],
      "types": [
        "equation",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The set of entities that satisfy both the head of a rule in its second argument position and the body of the rule in its first argument position.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-1",
          "local_name": "{ei : (v(2)(P1)[i] \u00d7 v(1)(A(P1) A(P2) ... A(Pm))[i]) > 0 and 1 \u2264 i \u2264 n}",
          "local_types": [
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-_ei___v__2___p1___i___v__1___a__p1__a__p2__..._a__pm____i____0_and_1__i__n_-Mention-1"
        }
      ],
      "relevance": 0.4755859375
    },
    "Entity-automatic_completion": {
      "node_id": "automatic_completion",
      "disambiguation_index": 0,
      "label": "automatic completion",
      "aliases": [
        "automatic completion"
      ],
      "types": [
        "process",
        "concept",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or technique that completes tasks or processes without human intervention",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "automatic completion",
          "local_types": [
            "process",
            "concept",
            "technique"
          ],
          "iri": "Entity-automatic_completion-Mention-1"
        }
      ],
      "relevance": 0.4755859375
    },
    "Entity-rule_are_considered_more_useful_if_they_generalise_well__that_is__they_explain_many_fact_.": {
      "node_id": "rule_are_considered_more_useful_if_they_generalise_well__that_is__they_explain_many_fact_.",
      "disambiguation_index": 0,
      "label": "Rules are considered more useful if they generalise well, that is, they explain many facts.",
      "aliases": [
        "Rules are considered more useful if they generalise well, that is, they explain many facts."
      ],
      "types": [
        "statement",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A statement or fact about rules being considered more useful when they generalize well and can explain multiple facts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-1",
          "local_name": "Rules are considered more useful if they generalise well, that is, they explain many facts.",
          "local_types": [
            "statement",
            "fact"
          ],
          "iri": "Entity-rule_are_considered_more_useful_if_they_generalise_well__that_is__they_explain_many_fact_.-Mention-1"
        }
      ],
      "relevance": 0.4755859375
    },
    "Entity-pathfinding": {
      "node_id": "pathfinding",
      "disambiguation_index": 0,
      "label": "PathFinding",
      "aliases": [
        "PathFinding"
      ],
      "types": [
        "tool",
        "function",
        "rule",
        "algorithm",
        "method"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A method or algorithm for finding and navigating through a path.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-9",
          "local_name": "PathFinding",
          "local_types": [
            "algorithm",
            "function"
          ],
          "iri": "Entity-pathfinding-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-15",
          "local_name": "PathFinding",
          "local_types": [
            "tool",
            "rule",
            "algorithm"
          ],
          "iri": "Entity-pathfinding-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-1",
          "local_name": "PathFinding",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-pathfinding-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-8",
          "local_name": "PathFinding",
          "local_types": [
            "method",
            "function",
            "algorithm"
          ],
          "iri": "Entity-pathfinding-Mention-4"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-13",
          "local_name": "PathFinding",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-pathfinding-Mention-5"
        },
        {
          "reference": "Section-9-Paragraph-13-Sentence-1",
          "local_name": "PathFinding",
          "local_types": [
            "function",
            "algorithm"
          ],
          "iri": "Entity-pathfinding-Mention-6"
        }
      ],
      "relevance": 0.475341796875
    },
    "Entity-_e_i_": {
      "node_id": "_e_i_",
      "disambiguation_index": 0,
      "label": "{e_i}",
      "aliases": [
        "{e_i}"
      ],
      "types": [
        "vector",
        "embedding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a set of numerical representations",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-5",
          "local_name": "{e_i}",
          "local_types": [
            "vector",
            "embedding"
          ],
          "iri": "Entity-_e_i_-Mention-1"
        }
      ],
      "relevance": 0.475341796875
    },
    "Entity-all_head_variable_occur_in_the_body_of_the_rule_and_all_variable_appear_at_least_twice_.": {
      "node_id": "all_head_variable_occur_in_the_body_of_the_rule_and_all_variable_appear_at_least_twice_.",
      "disambiguation_index": 0,
      "label": "all head variables occur in the body of the rule and all variables appear at least twice.",
      "aliases": [
        "all head variables occur in the body of the rule and all variables appear at least twice."
      ],
      "types": [
        "property",
        "constraint"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A property or constraint that specifies that all head variables must be present in the body of a closed rule, and each variable must occur at least twice.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "all head variables occur in the body of the rule and all variables appear at least twice.",
          "local_types": [
            "property",
            "constraint"
          ],
          "iri": "Entity-all_head_variable_occur_in_the_body_of_the_rule_and_all_variable_appear_at_least_twice_.-Mention-1"
        }
      ],
      "relevance": 0.475341796875
    },
    "Entity-poker": {
      "node_id": "poker",
      "disambiguation_index": 0,
      "label": "Poker",
      "aliases": [
        "Poker"
      ],
      "types": [
        "game",
        "poker",
        "dataset",
        "concept",
        "domain",
        "card game",
        "knowledge graph",
        "activity",
        "algorithm",
        "competition"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A card game or activity involving betting, strategy, and skill.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-1",
          "local_name": "Poker",
          "local_types": [
            "dataset",
            "game"
          ],
          "iri": "Entity-poker-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-3",
          "local_name": "Poker",
          "local_types": [
            "dataset",
            "game",
            "algorithm"
          ],
          "iri": "Entity-poker-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-3",
          "local_name": "Poker",
          "local_types": [
            "dataset",
            "game",
            "knowledge graph",
            "competition"
          ],
          "iri": "Entity-poker-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-3",
          "local_name": "Poker",
          "local_types": [
            "card game",
            "activity",
            "game",
            "poker"
          ],
          "iri": "Entity-poker-Mention-4"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "Poker",
          "local_types": [
            "game",
            "dataset",
            "concept",
            "domain",
            "knowledge graph"
          ],
          "iri": "Entity-poker-Mention-5"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "Poker",
          "local_types": [
            "dataset",
            "game",
            "knowledge graph",
            "card game"
          ],
          "iri": "Entity-poker-Mention-6"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "Poker",
          "local_types": [
            "dataset",
            "knowledge graph"
          ],
          "iri": "Entity-poker-Mention-7"
        }
      ],
      "relevance": 0.47509765625
    },
    "Entity-whose_output_is_modified_to_produce_question": {
      "node_id": "whose_output_is_modified_to_produce_question",
      "disambiguation_index": 0,
      "label": "whose output is modified to produce questions",
      "aliases": [
        "whose output is modified to produce questions"
      ],
      "types": [
        "output modification"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A rule-based link predictor that generates queries by modifying its output to produce questions.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-2",
          "local_name": "whose output is modified to produce questions",
          "local_types": [
            "output modification"
          ],
          "iri": "Entity-whose_output_is_modified_to_produce_question-Mention-1"
        }
      ],
      "relevance": 0.474853515625
    },
    "Entity-each_predicate_p_k": {
      "node_id": "each_predicate_p_k",
      "disambiguation_index": 0,
      "label": "each predicate P_k",
      "aliases": [
        "each predicate P_k"
      ],
      "types": [
        "predicate",
        "logical relation",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical relation that maps entities to each other, represented as a matrix.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-3",
          "local_name": "each predicate P_k",
          "local_types": [
            "predicate",
            "logical relation",
            "concept"
          ],
          "iri": "Entity-each_predicate_p_k-Mention-1"
        }
      ],
      "relevance": 0.47412109375
    },
    "Entity-co-occurrence_fitness_function": {
      "node_id": "co-occurrence_fitness_function",
      "disambiguation_index": 0,
      "label": "Co-occurrence Fitness Function",
      "aliases": [
        "co-occurrence fitness function",
        "Co-occurrence Fitness Function"
      ],
      "types": [
        "function",
        "mathematical concept",
        "concept",
        "fitness function",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical measure that evaluates the likelihood of two entities co-occurring or being associated with each other.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-1",
          "local_name": "Co-occurrence Fitness Function",
          "local_types": [
            "function",
            "mathematical concept",
            "concept",
            "fitness function",
            "algorithm"
          ],
          "iri": "Entity-co-occurrence_fitness_function-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "co-occurrence fitness function",
          "local_types": [
            "mathematical concept",
            "algorithm"
          ],
          "iri": "Entity-co-occurrence_fitness_function-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "co-occurrence fitness function",
          "local_types": [
            "mathematical concept",
            "algorithm"
          ],
          "iri": "Entity-co-occurrence_fitness_function-Mention-3"
        }
      ],
      "relevance": 0.473388671875
    },
    "Entity-efficient_vector_computation": {
      "node_id": "efficient_vector_computation",
      "disambiguation_index": 0,
      "label": "efficient vector computation",
      "aliases": [
        "efficient vector computation"
      ],
      "types": [
        "algorithm",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical algorithm for efficiently processing and manipulating vectors.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "efficient vector computation",
          "local_types": [
            "algorithm",
            "mathematical concept"
          ],
          "iri": "Entity-efficient_vector_computation-Mention-1"
        }
      ],
      "relevance": 0.47314453125
    },
    "Entity-very_high_precision": {
      "node_id": "very_high_precision",
      "disambiguation_index": 0,
      "label": "Very high precision",
      "aliases": [
        "Very high precision"
      ],
      "types": [
        "precision"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Highly relevant queries that ask questions with answers not present in the training set, indicating a high degree of accuracy and relevance.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "Very high precision",
          "local_types": [
            "precision"
          ],
          "iri": "Entity-very_high_precision-Mention-1"
        }
      ],
      "relevance": 0.47314453125
    },
    "Entity-the_pair__e__e___satisfying_the_body_are_connected_by_the_path_p1__p2__...__pm": {
      "node_id": "the_pair__e__e___satisfying_the_body_are_connected_by_the_path_p1__p2__...__pm",
      "disambiguation_index": 0,
      "label": "the pairs (e, e') satisfying the body are connected by the path P1, P2, ..., Pm",
      "aliases": [
        "the pairs (e, e') satisfying the body are connected by the path P1, P2, ..., Pm"
      ],
      "types": [
        "statement",
        "proposition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of related propositions or statements that share a common connection.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "the pairs (e, e') satisfying the body are connected by the path P1, P2, ..., Pm",
          "local_types": [
            "statement",
            "proposition"
          ],
          "iri": "Entity-the_pair__e__e___satisfying_the_body_are_connected_by_the_path_p1__p2__...__pm-Mention-1"
        }
      ],
      "relevance": 0.472900390625
    },
    "Entity-their_relation": {
      "node_id": "their_relation",
      "disambiguation_index": 0,
      "label": "their relations",
      "aliases": [
        "their relations"
      ],
      "types": [
        "relation",
        "relationship"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The relationships between entities in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "their relations",
          "local_types": [
            "relation",
            "relationship"
          ],
          "iri": "Entity-their_relation-Mention-1"
        }
      ],
      "relevance": 0.472900390625
    },
    "Entity-this_aggregation": {
      "node_id": "this_aggregation",
      "disambiguation_index": 0,
      "label": "This aggregation",
      "aliases": [
        "This aggregation"
      ],
      "types": [
        "aggregation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The Noisy-OR operator used in RLvLR for aggregating high-performing rules about a target predicate, which is not compatible with the query generation task.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-5",
          "local_name": "This aggregation",
          "local_types": [
            "aggregation"
          ],
          "iri": "Entity-this_aggregation-Mention-1"
        }
      ],
      "relevance": 0.472900390625
    },
    "Entity-_1n___s_e__e_for_e_in_s_p": {
      "node_id": "_1n___s_e__e_for_e_in_s_p",
      "disambiguation_index": 0,
      "label": "(1/n) \u2211 s_e * e for e in S_p",
      "aliases": [
        "(1/n) \u2211 s_e * e for e in S_p"
      ],
      "types": [
        "equation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The average entity embedding of all entities that occur as subjects or objects of a predicate P",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-1",
          "local_name": "(1/n) \u2211 s_e * e for e in S_p",
          "local_types": [
            "equation"
          ],
          "iri": "Entity-_1n___s_e__e_for_e_in_s_p-Mention-1"
        }
      ],
      "relevance": 0.47265625
    },
    "Entity-each_entity_e_j_to_a_vector_e_j__rd": {
      "node_id": "each_entity_e_j_to_a_vector_e_j__rd",
      "disambiguation_index": 0,
      "label": "each entity e_j to a vector E_j \u2208 R^d",
      "aliases": [
        "each entity e_j to a vector E_j \u2208 R^d"
      ],
      "types": [
        "entity representation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The representation of each entity e_j as a vector E_j \u2208 R^d, used for computing embeddings.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "each entity e_j to a vector E_j \u2208 R^d",
          "local_types": [
            "entity representation"
          ],
          "iri": "Entity-each_entity_e_j_to_a_vector_e_j__rd-Mention-1"
        }
      ],
      "relevance": 0.47265625
    },
    "Entity-z0": {
      "node_id": "z0",
      "disambiguation_index": 0,
      "label": "z0",
      "aliases": [
        "z0"
      ],
      "types": [
        "variable",
        "parameter",
        "placeholder"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The variable or placeholder 'z0' representing an entity in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "z0",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-z0-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "z0",
          "local_types": [
            "variable",
            "placeholder"
          ],
          "iri": "Entity-z0-Mention-2"
        }
      ],
      "relevance": 0.471923828125
    },
    "Entity-entity_embeddings": {
      "node_id": "entity_embeddings",
      "disambiguation_index": 0,
      "label": "entity embeddings",
      "aliases": [
        "entity embeddings"
      ],
      "types": [
        "model",
        "embedding",
        "entity",
        "representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of an entity's characteristics or attributes",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-3",
          "local_name": "entity embeddings",
          "local_types": [
            "representation"
          ],
          "iri": "Entity-entity_embeddings-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-17-Sentence-1",
          "local_name": "entity embeddings",
          "local_types": [
            "model",
            "embedding",
            "entity",
            "representation"
          ],
          "iri": "Entity-entity_embeddings-Mention-2"
        }
      ],
      "relevance": 0.4716796875
    },
    "Entity-the_argument_embeddings_of_the_subject_and_object_argument": {
      "node_id": "the_argument_embeddings_of_the_subject_and_object_argument",
      "disambiguation_index": 0,
      "label": "the argument embeddings of the subject and object arguments",
      "aliases": [
        "the argument embeddings of the subject and object arguments"
      ],
      "types": [
        "argument embedding",
        "subject",
        "object"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Vector representations of semantic roles in a sentence, capturing the meaning of subjects and objects involved in an action or relation.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "the argument embeddings of the subject and object arguments",
          "local_types": [
            "argument embedding",
            "subject",
            "object"
          ],
          "iri": "Entity-the_argument_embeddings_of_the_subject_and_object_argument-Mention-1"
        }
      ],
      "relevance": 0.4716796875
    },
    "Entity-predicate_a_weight_matrix": {
      "node_id": "predicate_a_weight_matrix",
      "disambiguation_index": 0,
      "label": "predicates as weight matrices",
      "aliases": [
        "predicates as weight matrices"
      ],
      "types": [
        "predicate",
        "weight matrix"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Predicates represented as weight matrices in RESCAL, used to learn entity and predicate embeddings by minimizing a loss function.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "predicates as weight matrices",
          "local_types": [
            "predicate",
            "weight matrix"
          ],
          "iri": "Entity-predicate_a_weight_matrix-Mention-1"
        }
      ],
      "relevance": 0.47119140625
    },
    "Entity-each_argument": {
      "node_id": "each_argument",
      "disambiguation_index": 0,
      "label": "Each argument",
      "aliases": [
        "Each argument"
      ],
      "types": [
        "argument"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept refers to an individual entity or object that appears as either the subject or object in a predicate, whose embedding is calculated by averaging the embeddings of all entities occurring in its position.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "Each argument",
          "local_types": [
            "argument"
          ],
          "iri": "Entity-each_argument-Mention-1"
        }
      ],
      "relevance": 0.470947265625
    },
    "Entity-for_entity_e__we_write_it_embedding_vector_a_e": {
      "node_id": "for_entity_e__we_write_it_embedding_vector_a_e",
      "disambiguation_index": 0,
      "label": "For entity e, we write its embedding vector as e",
      "aliases": [
        "For entity e, we write its embedding vector as e"
      ],
      "types": [
        "notation",
        "entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation or notation used to describe an abstract concept",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-3",
          "local_name": "For entity e, we write its embedding vector as e",
          "local_types": [
            "notation",
            "entity"
          ],
          "iri": "Entity-for_entity_e__we_write_it_embedding_vector_a_e-Mention-1"
        }
      ],
      "relevance": 0.470703125
    },
    "Entity-p1__p2__...__pm": {
      "node_id": "p1__p2__...__pm",
      "disambiguation_index": 0,
      "label": "P1, P2, ..., Pm",
      "aliases": [
        "P1, P2, ..., Pm"
      ],
      "types": [
        "path",
        "sequence of paths",
        "sequence"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sequence of paths connecting pairs of entities",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "P1, P2, ..., Pm",
          "local_types": [
            "path",
            "sequence of paths",
            "sequence"
          ],
          "iri": "Entity-p1__p2__...__pm-Mention-1"
        }
      ],
      "relevance": 0.470703125
    },
    "Entity-formally__the_cd_of_q_is_defined_a_follows_for_a_query_q__p____e___or_q__p__e____and_the_collection_of_rule_r_that_can_induce_q_from_the_given_kg_": {
      "node_id": "formally__the_cd_of_q_is_defined_a_follows_for_a_query_q__p____e___or_q__p__e____and_the_collection_of_rule_r_that_can_induce_q_from_the_given_kg_",
      "disambiguation_index": 0,
      "label": "Formally, the CD of q is defined as follows for a query q = P(?, e') or q = P(e, ?) and the collection of rules R that can induce q from the given KG:",
      "aliases": [
        "Formally, the CD of q is defined as follows for a query q = P(?, e') or q = P(e, ?) and the collection of rules R that can induce q from the given KG:"
      ],
      "types": [
        "notation",
        "definition",
        "query",
        "text"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formal definition for computing a query result.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "Formally, the CD of q is defined as follows for a query q = P(?, e') or q = P(e, ?) and the collection of rules R that can induce q from the given KG:",
          "local_types": [
            "notation",
            "definition",
            "query",
            "text"
          ],
          "iri": "Entity-formally__the_cd_of_q_is_defined_a_follows_for_a_query_q__p____e___or_q__p__e____and_the_collection_of_rule_r_that_can_induce_q_from_the_given_kg_-Mention-1"
        }
      ],
      "relevance": 0.470703125
    },
    "Entity-two_main_category_are_translation-based_embeddings_and_compositional_embeddings": {
      "node_id": "two_main_category_are_translation-based_embeddings_and_compositional_embeddings",
      "disambiguation_index": 0,
      "label": "Two main categories are translation-based embeddings and compositional embeddings",
      "aliases": [
        "Two main categories are translation-based embeddings and compositional embeddings"
      ],
      "types": [
        "reference",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Types of representation learning methods, specifically two main categories: translation-based embeddings and compositional embeddings.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-2",
          "local_name": "Two main categories are translation-based embeddings and compositional embeddings",
          "local_types": [
            "reference",
            "method"
          ],
          "iri": "Entity-two_main_category_are_translation-based_embeddings_and_compositional_embeddings-Mention-1"
        }
      ],
      "relevance": 0.4697265625
    },
    "Entity-query_generation": {
      "node_id": "query_generation",
      "disambiguation_index": 0,
      "label": "query generation",
      "aliases": [
        "query generation"
      ],
      "types": [
        "process",
        "methodology",
        "natural language processing task",
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process or methodology of generating queries",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "query generation",
          "local_types": [
            "process",
            "methodology"
          ],
          "iri": "Entity-query_generation-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-6",
          "local_name": "query generation",
          "local_types": [
            "natural language processing task",
            "task"
          ],
          "iri": "Entity-query_generation-Mention-2"
        }
      ],
      "relevance": 0.4697265625
    },
    "Entity-the_cardinality_of_this_set": {
      "node_id": "the_cardinality_of_this_set",
      "disambiguation_index": 0,
      "label": "the cardinality of this set",
      "aliases": [
        "the cardinality of this set"
      ],
      "types": [
        "cardinality"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The number of distinct entities satisfying the head of an OP rule in its second argument position.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-2",
          "local_name": "the cardinality of this set",
          "local_types": [
            "cardinality"
          ],
          "iri": "Entity-the_cardinality_of_this_set-Mention-1"
        }
      ],
      "relevance": 0.4697265625
    },
    "Entity-rdf_triple": {
      "node_id": "rdf_triple",
      "disambiguation_index": 0,
      "label": "RDF triple",
      "aliases": [
        "RDF triple"
      ],
      "types": [
        "format",
        "data structure",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of three components consisting of subject, predicate, and object that represent a statement or fact in Resource Description Framework (RDF) knowledge representation.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "RDF triple",
          "local_types": [
            "format",
            "data structure",
            "knowledge representation"
          ],
          "iri": "Entity-rdf_triple-Mention-1"
        }
      ],
      "relevance": 0.469482421875
    },
    "Entity-specifically__the__i__j__th_element_a__pk___i__j___1_if_the_fact_pk__ei__ej__is_in_f__and_0_otherwise": {
      "node_id": "specifically__the__i__j__th_element_a__pk___i__j___1_if_the_fact_pk__ei__ej__is_in_f__and_0_otherwise",
      "disambiguation_index": 0,
      "label": "Specifically, the (i,j)th element A(Pk)[i,j] = 1 if the fact Pk(ei,ej) is in F; and 0 otherwise",
      "aliases": [
        "Specifically, the (i,j)th element A(Pk)[i,j] = 1 if the fact Pk(ei,ej) is in F; and 0 otherwise"
      ],
      "types": [
        "notation",
        "fact",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A binary representation of facts or predicates",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "Specifically, the (i,j)th element A(Pk)[i,j] = 1 if the fact Pk(ei,ej) is in F; and 0 otherwise",
          "local_types": [
            "notation",
            "fact",
            "predicate"
          ],
          "iri": "Entity-specifically__the__i__j__th_element_a__pk___i__j___1_if_the_fact_pk__ei__ej__is_in_f__and_0_otherwise-Mention-1"
        }
      ],
      "relevance": 0.469482421875
    },
    "Entity-a_perfect_link_predictor": {
      "node_id": "a_perfect_link_predictor",
      "disambiguation_index": 0,
      "label": "a perfect link predictor",
      "aliases": [
        "a perfect link predictor"
      ],
      "types": [
        "hypothetical",
        "assumption"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A hypothetical entity capable of accurately predicting links or connections between entities, assuming all possible answers are known.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-2",
          "local_name": "a perfect link predictor",
          "local_types": [
            "hypothetical",
            "assumption"
          ],
          "iri": "Entity-a_perfect_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.469482421875
    },
    "Entity-a_ranked_sequence_of_answer": {
      "node_id": "a_ranked_sequence_of_answer",
      "disambiguation_index": 0,
      "label": "a ranked sequence of answers",
      "aliases": [
        "a ranked sequence of answers"
      ],
      "types": [
        "sequence",
        "answers"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A list of entities in order of their relevance or likelihood, typically returned by a link predictor as the output for a given query.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-1",
          "local_name": "a ranked sequence of answers",
          "local_types": [
            "sequence",
            "answers"
          ],
          "iri": "Entity-a_ranked_sequence_of_answer-Mention-1"
        }
      ],
      "relevance": 0.469482421875
    },
    "Entity-p2__z0__z1_": {
      "node_id": "p2__z0__z1_",
      "disambiguation_index": 0,
      "label": "P2(z0, z1)",
      "aliases": [
        "P2(z0, z1)"
      ],
      "types": [
        "function",
        "logical rule",
        "predicate",
        "rule",
        "logical expression",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A logical rule or predicate that takes two inputs and produces a specific outcome.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-15",
          "local_name": "P2(z0, z1)",
          "local_types": [
            "function",
            "logical rule",
            "predicate",
            "rule",
            "mathematical expression"
          ],
          "iri": "Entity-p2__z0__z1_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "P2(z0, z1)",
          "local_types": [
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-p2__z0__z1_-Mention-2"
        }
      ],
      "relevance": 0.46826171875
    },
    "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_": {
      "node_id": "the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_",
      "disambiguation_index": 0,
      "label": "the two sets of embeddings, vectors {e_i} and matrices {P_k}",
      "aliases": [
        "the two sets of embeddings, vectors {e_i} and matrices {P_k}"
      ],
      "types": [
        "embeddings"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-5",
          "local_name": "the two sets of embeddings, vectors {e_i} and matrices {P_k}",
          "local_types": [
            "embeddings"
          ],
          "iri": "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_-Mention-1"
        }
      ],
      "relevance": 0.468017578125
    },
    "Entity-denoted_p_h__e__e____if_p_h__e__e___is_a_fact_in_the_kg_.": {
      "node_id": "denoted_p_h__e__e____if_p_h__e__e___is_a_fact_in_the_kg_.",
      "disambiguation_index": 0,
      "label": "denoted P_h(e, e'), if P_h(e, e') is a fact in the KG.",
      "aliases": [
        "denoted P_h(e, e'), if P_h(e, e') is a fact in the KG."
      ],
      "types": [
        "entities",
        "condition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A condition or circumstance that satisfies a specific relationship.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-4",
          "local_name": "denoted P_h(e, e'), if P_h(e, e') is a fact in the KG.",
          "local_types": [
            "entities",
            "condition"
          ],
          "iri": "Entity-denoted_p_h__e__e____if_p_h__e__e___is_a_fact_in_the_kg_.-Mention-1"
        }
      ],
      "relevance": 0.4677734375
    },
    "Entity-redundancy_elimination_method": {
      "node_id": "redundancy_elimination_method",
      "disambiguation_index": 0,
      "label": "redundancy elimination method",
      "aliases": [
        "redundancy elimination method"
      ],
      "types": [
        "algorithm",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A technique used to remove duplicate or unnecessary information from a set of rules, ensuring uniqueness and reducing redundancy.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "redundancy elimination method",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-redundancy_elimination_method-Mention-1"
        }
      ],
      "relevance": 0.4677734375
    },
    "Entity-query_generation_task": {
      "node_id": "query_generation_task",
      "disambiguation_index": 0,
      "label": "query generation task",
      "aliases": [
        "query generation task"
      ],
      "types": [
        "machine learning application",
        "task",
        "research area"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A process or activity that involves generating queries, typically in the context of information retrieval or machine learning.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-5",
          "local_name": "query generation task",
          "local_types": [
            "research area",
            "machine learning application"
          ],
          "iri": "Entity-query_generation_task-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "query generation task",
          "local_types": [
            "research area",
            "task"
          ],
          "iri": "Entity-query_generation_task-Mention-2"
        }
      ],
      "relevance": 0.4677734375
    },
    "Entity-novel_method": {
      "node_id": "novel_method",
      "disambiguation_index": 0,
      "label": "novel method",
      "aliases": [
        "novel method"
      ],
      "types": [
        "research approach",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research approach or algorithm that introduces new and original techniques for solving a problem.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-3",
          "local_name": "novel method",
          "local_types": [
            "research approach",
            "algorithm"
          ],
          "iri": "Entity-novel_method-Mention-1"
        }
      ],
      "relevance": 0.4677734375
    },
    "Entity-thus__a__pk__is_a_matrix_of_binary_value_and_the_set__a__pk___k___1__...__m___represents_k": {
      "node_id": "thus__a__pk__is_a_matrix_of_binary_value_and_the_set__a__pk___k___1__...__m___represents_k",
      "disambiguation_index": 0,
      "label": "Thus, A(Pk) is a matrix of binary values and the set {A(Pk) : k \u2208 {1,...,m}} represents K",
      "aliases": [
        "Thus, A(Pk) is a matrix of binary values and the set {A(Pk) : k \u2208 {1,...,m}} represents K"
      ],
      "types": [
        "representation",
        "matrix",
        "set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-6",
          "local_name": "Thus, A(Pk) is a matrix of binary values and the set {A(Pk) : k \u2208 {1,...,m}} represents K",
          "local_types": [
            "representation",
            "matrix",
            "set"
          ],
          "iri": "Entity-thus__a__pk__is_a_matrix_of_binary_value_and_the_set__a__pk___k___1__...__m___represents_k-Mention-1"
        }
      ],
      "relevance": 0.467529296875
    },
    "Entity-such_that_all_of__p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___": {
      "node_id": "such_that_all_of__p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___",
      "disambiguation_index": 0,
      "label": "such that all of {P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')}",
      "aliases": [
        "such that all of {P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')}"
      ],
      "types": [
        "facts",
        "relation chain"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "such that all of {P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e')}",
          "local_types": [
            "facts",
            "relation chain"
          ],
          "iri": "Entity-such_that_all_of__p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___-Mention-1"
        }
      ],
      "relevance": 0.467529296875
    },
    "Entity-our_proposed_method": {
      "node_id": "our_proposed_method",
      "disambiguation_index": 0,
      "label": "Our proposed method",
      "aliases": [
        "Our proposed method"
      ],
      "types": [
        "method",
        "research approach",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A novel approach or technique developed by the authors for solving a particular problem or achieving a specific goal.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "Our proposed method",
          "local_types": [
            "method",
            "research approach",
            "algorithm"
          ],
          "iri": "Entity-our_proposed_method-Mention-1"
        }
      ],
      "relevance": 0.46728515625
    },
    "Entity-inductive_logic_programming": {
      "node_id": "inductive_logic_programming",
      "disambiguation_index": 0,
      "label": "inductive logic programming",
      "aliases": [
        "inductive logic programming"
      ],
      "types": [
        "subfield of AI",
        "field",
        "artificial intelligence subfield"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A subfield of artificial intelligence that involves learning logical rules from data using inductive reasoning.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-5",
          "local_name": "inductive logic programming",
          "local_types": [
            "subfield of AI",
            "field",
            "artificial intelligence subfield"
          ],
          "iri": "Entity-inductive_logic_programming-Mention-1"
        }
      ],
      "relevance": 0.4658203125
    },
    "Entity-_1n___s_e__e_for_e_in_s_p__and_p__2____1n___o_e__e_for_e_in_o_p": {
      "node_id": "_1n___s_e__e_for_e_in_s_p__and_p__2____1n___o_e__e_for_e_in_o_p",
      "disambiguation_index": 0,
      "label": "(1/n) \u2211 s_e * e for e in S_p, and P(2) = (1/n) \u2211 o_e * e for e in O_p",
      "aliases": [
        "(1/n) \u2211 s_e * e for e in S_p, and P(2) = (1/n) \u2211 o_e * e for e in O_p"
      ],
      "types": [
        "equation",
        "mathematical equation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity mention refers to an equation that calculates the average subject argument and object argument embeddings of a predicate.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-8-Sentence-1",
          "local_name": "(1/n) \u2211 s_e * e for e in S_p, and P(2) = (1/n) \u2211 o_e * e for e in O_p",
          "local_types": [
            "equation",
            "mathematical equation"
          ],
          "iri": "Entity-_1n___s_e__e_for_e_in_s_p__and_p__2____1n___o_e__e_for_e_in_o_p-Mention-1"
        }
      ],
      "relevance": 0.465576171875
    },
    "Entity-the_row_index": {
      "node_id": "the_row_index",
      "disambiguation_index": 0,
      "label": "the row index",
      "aliases": [
        "the row index"
      ],
      "types": [
        "index"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The row index refers to a numerical value indicating the position or location of non-zero elements in a vector, specifically used for identifying entities that satisfy certain conditions in an adjacency matrix representation of a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-2",
          "local_name": "the row index",
          "local_types": [
            "index"
          ],
          "iri": "Entity-the_row_index-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-3",
          "local_name": "the row index",
          "local_types": [
            "index"
          ],
          "iri": "Entity-the_row_index-Mention-2"
        }
      ],
      "relevance": 0.465576171875
    },
    "Entity-relevant_query": {
      "node_id": "relevant_query",
      "disambiguation_index": 0,
      "label": "relevant queries",
      "aliases": [
        "relevant queries"
      ],
      "types": [
        "search strategy",
        "search request",
        "query",
        "query formulation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of questions or statements used to search for information",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "relevant queries",
          "local_types": [
            "search strategy",
            "search request",
            "query",
            "query formulation"
          ],
          "iri": "Entity-relevant_query-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "relevant queries",
          "local_types": [
            "query formulation",
            "search strategy"
          ],
          "iri": "Entity-relevant_query-Mention-2"
        }
      ],
      "relevance": 0.46533203125
    },
    "Entity-probabilistic-based_query_generator": {
      "node_id": "probabilistic-based_query_generator",
      "disambiguation_index": 0,
      "label": "probabilistic-based query generator",
      "aliases": [
        "probabilistic-based query generator"
      ],
      "types": [
        "query generation method",
        "system",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or system that generates queries based on probability calculations.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-2",
          "local_name": "probabilistic-based query generator",
          "local_types": [
            "query generation method",
            "system",
            "algorithm"
          ],
          "iri": "Entity-probabilistic-based_query_generator-Mention-1"
        }
      ],
      "relevance": 0.464599609375
    },
    "Entity-with_numerical_attribute": {
      "node_id": "with_numerical_attribute",
      "disambiguation_index": 0,
      "label": "with numerical attributes",
      "aliases": [
        "with numerical attributes"
      ],
      "types": [
        "attribute"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Rules that have free variables representing numerical values",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-2",
          "local_name": "with numerical attributes",
          "local_types": [
            "attribute"
          ],
          "iri": "Entity-with_numerical_attribute-Mention-1"
        }
      ],
      "relevance": 0.464599609375
    },
    "Entity-_i__j_": {
      "node_id": "_i__j_",
      "disambiguation_index": 0,
      "label": "(i, j)",
      "aliases": [
        "(i, j)"
      ],
      "types": [
        "coordinate",
        "tuple"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An element of a matrix or array that represents whether a specific fact is present in a dataset.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "(i, j)",
          "local_types": [
            "coordinate",
            "tuple"
          ],
          "iri": "Entity-_i__j_-Mention-1"
        }
      ],
      "relevance": 0.46435546875
    },
    "Entity-rdf_triple__e__p__e__": {
      "node_id": "rdf_triple__e__p__e__",
      "disambiguation_index": 0,
      "label": "RDF triple (e, P, e')",
      "aliases": [
        "RDF triple (e, P, e')"
      ],
      "types": [
        "data structure",
        "triples"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A basic data structure in RDF representing a fact or link between two entities (subject and object) via a binary predicate (property).",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "RDF triple (e, P, e')",
          "local_types": [
            "data structure",
            "triples"
          ],
          "iri": "Entity-rdf_triple__e__p__e__-Mention-1"
        }
      ],
      "relevance": 0.46435546875
    },
    "Entity-p_t": {
      "node_id": "p_t",
      "disambiguation_index": 0,
      "label": "P_t",
      "aliases": [
        "P_t"
      ],
      "types": [
        "linear algebra",
        "variable",
        "location",
        "function",
        "parameter",
        "predicate",
        "notation",
        "pattern",
        "rule",
        "logical operator",
        "predicate symbol",
        "relation",
        "symbol",
        "equation",
        "point",
        "logic",
        "transposed matrix"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical function or relation that takes one or more input values and produces an output value, often represented by a symbol such as P_1, P_2, etc.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P_t",
          "local_types": [
            "rule",
            "equation",
            "function",
            "pattern"
          ],
          "iri": "Entity-p_t-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-5",
          "local_name": "P_t",
          "local_types": [
            "relation",
            "predicate"
          ],
          "iri": "Entity-p_t-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-7",
          "local_name": "P_t",
          "local_types": [
            "notation",
            "function"
          ],
          "iri": "Entity-p_t-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "P_t",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-p_t-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-2",
          "local_name": "P_t",
          "local_types": [
            "symbol",
            "variable",
            "predicate symbol"
          ],
          "iri": "Entity-p_t-Mention-5"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "P_t",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-p_t-Mention-6"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "P_t",
          "local_types": [
            "variable",
            "function",
            "predicate",
            "logical operator",
            "logic"
          ],
          "iri": "Entity-p_t-Mention-7"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "P_t",
          "local_types": [
            "predicate",
            "logical operator"
          ],
          "iri": "Entity-p_t-Mention-8"
        },
        {
          "reference": "Section-6-Paragraph-12-Sentence-1",
          "local_name": "P_t",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-p_t-Mention-9"
        },
        {
          "reference": "Section-6-Paragraph-16-Sentence-1",
          "local_name": "P_t",
          "local_types": [
            "variable",
            "location",
            "parameter",
            "point"
          ],
          "iri": "Entity-p_t-Mention-10"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "P_t",
          "local_types": [
            "predicate",
            "variable",
            "function"
          ],
          "iri": "Entity-p_t-Mention-11"
        },
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "P_t",
          "local_types": [
            "linear algebra",
            "transposed matrix"
          ],
          "iri": "Entity-p_t-Mention-12"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "P_t",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p_t-Mention-13"
        }
      ],
      "relevance": 0.464111328125
    },
    "Entity-minophc": {
      "node_id": "minophc",
      "disambiguation_index": 0,
      "label": "MinOPHC",
      "aliases": [
        "MinOPHC"
      ],
      "types": [
        "minimum value",
        "threshold"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Minimum OP Rule Length",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "MinOPHC",
          "local_types": [
            "minimum value",
            "threshold"
          ],
          "iri": "Entity-minophc-Mention-1"
        }
      ],
      "relevance": 0.4638671875
    },
    "Entity-end": {
      "node_id": "end",
      "disambiguation_index": 0,
      "label": "End",
      "aliases": [
        "End"
      ],
      "types": [
        "terminator"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The termination point of an iteration in Algorithm 1, marking the end of generating OP rules.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-10",
          "local_name": "End",
          "local_types": [
            "terminator"
          ],
          "iri": "Entity-end-Mention-1"
        }
      ],
      "relevance": 0.4638671875
    },
    "Entity-learning": {
      "node_id": "learning",
      "disambiguation_index": 0,
      "label": "Learning",
      "aliases": [
        "Learning"
      ],
      "types": [
        "process",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process or method by which an individual, group, or system acquires new knowledge, skills, or understanding.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "Learning",
          "local_types": [
            "process",
            "method"
          ],
          "iri": "Entity-learning-Mention-1"
        }
      ],
      "relevance": 0.463623046875
    },
    "Entity-x__y__z_1__...__z___n-1_": {
      "node_id": "x__y__z_1__...__z___n-1_",
      "disambiguation_index": 0,
      "label": "x, y, z_1, ..., z_{n-1}",
      "aliases": [
        "x, y, z_1, ..., z_{n-1}"
      ],
      "types": [
        "variable",
        "variables",
        "parameters",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "x, y, z_1, ..., z_{n-1}",
          "local_types": [
            "variable",
            "variables",
            "parameters",
            "rule"
          ],
          "iri": "Entity-x__y__z_1__...__z___n-1_-Mention-1"
        }
      ],
      "relevance": 0.46337890625
    },
    "Entity-sim__p__2___t__p__1___1_": {
      "node_id": "sim__p__2___t__p__1___1_",
      "disambiguation_index": 0,
      "label": "sim(P(2)_t , P(1)_1)",
      "aliases": [
        "sim(P(2)_t , P(1)_1)"
      ],
      "types": [
        "computation",
        "mathematical operation",
        "function_call",
        "function call",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The similarity between the embedding of the object argument of a predicate and the embedding of the subject argument of another predicate.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-1",
          "local_name": "sim(P(2)_t , P(1)_1)",
          "local_types": [
            "computation",
            "mathematical operation",
            "function_call",
            "function call",
            "expression"
          ],
          "iri": "Entity-sim__p__2___t__p__1___1_-Mention-1"
        }
      ],
      "relevance": 0.46337890625
    },
    "Entity-hybrid_fitness_function": {
      "node_id": "hybrid_fitness_function",
      "disambiguation_index": 0,
      "label": "hybrid fitness function",
      "aliases": [
        "hybrid fitness function"
      ],
      "types": [
        "evaluation metric",
        "optimization technique",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical formula that combines multiple evaluation metrics or optimization techniques to determine the suitability of candidate solutions in an evolutionary algorithm.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "hybrid fitness function",
          "local_types": [
            "evaluation metric",
            "optimization technique",
            "algorithm"
          ],
          "iri": "Entity-hybrid_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.46337890625
    },
    "Entity-we_are_unaware_of_any_previous_approach": {
      "node_id": "we_are_unaware_of_any_previous_approach",
      "disambiguation_index": 0,
      "label": "We are unaware of any previous approach",
      "aliases": [
        "We are unaware of any previous approach"
      ],
      "types": [
        "research",
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statement or research indicating a lack of prior approaches",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "We are unaware of any previous approach",
          "local_types": [
            "research",
            "statement"
          ],
          "iri": "Entity-we_are_unaware_of_any_previous_approach-Mention-1"
        }
      ],
      "relevance": 0.46337890625
    },
    "Entity-the_power": {
      "node_id": "the_power",
      "disambiguation_index": 0,
      "label": "The power",
      "aliases": [
        "The power"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept that enables the ability to model, store and retrieve massive quantities of weakly-structured data in a relatively arbitrary manner.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "The power",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_power-Mention-1"
        }
      ],
      "relevance": 0.463134765625
    },
    "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining": {
      "node_id": "it_is_closely_related_to_confidence_widely_used_in_association_rule_mining",
      "disambiguation_index": 0,
      "label": "It is closely related to confidence widely used in association rule mining",
      "aliases": [
        "It is closely related to confidence widely used in association rule mining"
      ],
      "types": [
        "reference",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or metric used in data analysis, particularly in machine learning and pattern discovery.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-3",
          "local_name": "It is closely related to confidence widely used in association rule mining",
          "local_types": [
            "reference",
            "method"
          ],
          "iri": "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining-Mention-1"
        }
      ],
      "relevance": 0.462890625
    },
    "Entity-the_baseline_query_generator_prand": {
      "node_id": "the_baseline_query_generator_prand",
      "disambiguation_index": 0,
      "label": "the baseline query generator Prand",
      "aliases": [
        "the baseline query generator Prand"
      ],
      "types": [
        "query generator",
        "system",
        "algorithm"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The baseline query generator Prand refers to a system that generates queries by randomly selecting predicates from the test set, then assigning subject and object entities with probabilities proportional to their occurrence as subjects or objects of any predicate in the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "the baseline query generator Prand",
          "local_types": [
            "query generator",
            "system",
            "algorithm"
          ],
          "iri": "Entity-the_baseline_query_generator_prand-Mention-1"
        }
      ],
      "relevance": 0.462890625
    },
    "Entity-p_i-1": {
      "node_id": "p_i-1",
      "disambiguation_index": 0,
      "label": "P_i^-1",
      "aliases": [
        "P_i^-1"
      ],
      "types": [
        "operator",
        "function",
        "inverse predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The inverse of a predicate that generates operator rules in pathfinding.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-8",
          "local_name": "P_i^-1",
          "local_types": [
            "inverse predicate",
            "function"
          ],
          "iri": "Entity-p_i-1-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-9",
          "local_name": "P_i^-1",
          "local_types": [
            "function",
            "operator"
          ],
          "iri": "Entity-p_i-1-Mention-2"
        }
      ],
      "relevance": 0.462646484375
    },
    "Entity-the_author_(1)": {
      "node_id": "the_author_(1)",
      "disambiguation_index": 1,
      "label": "the authors",
      "aliases": [
        "the authors"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of this paper who are outlining several directions for future research on handling existential rule learning.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-5",
          "local_name": "the authors",
          "local_types": [
            "author"
          ],
          "iri": "Entity-the_author_(1)-Mention-1"
        }
      ],
      "relevance": 0.462646484375
    },
    "Entity-p_1__x__z_0_": {
      "node_id": "p_1__x__z_0_",
      "disambiguation_index": 0,
      "label": "P_1(x, z_0)",
      "aliases": [
        "P1(x, z0)",
        "P_1(x, z_0)"
      ],
      "types": [
        "function",
        "logical rule",
        "mathematical formula",
        "predicate",
        "mathematical notation",
        "rule",
        "logical expression",
        "mathematical expression",
        "expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical predicate that takes two arguments and represents a logical relationship or condition.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-1",
          "local_name": "P_1(x, z_0)",
          "local_types": [
            "function",
            "mathematical formula",
            "predicate",
            "mathematical notation",
            "logical expression",
            "expression"
          ],
          "iri": "Entity-p_1__x__z_0_-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-15",
          "local_name": "P1(x, z0)",
          "local_types": [
            "function",
            "logical rule",
            "predicate",
            "rule",
            "mathematical expression"
          ],
          "iri": "Entity-p_1__x__z_0_-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-2",
          "local_name": "P1(x, z0)",
          "local_types": [
            "predicate",
            "function",
            "logical expression"
          ],
          "iri": "Entity-p_1__x__z_0_-Mention-3"
        }
      ],
      "relevance": 0.46240234375
    },
    "Entity-it_ha_the_following_general_form__where_p_h_is_the_single_predicate_of_the_head__and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule": {
      "node_id": "it_ha_the_following_general_form__where_p_h_is_the_single_predicate_of_the_head__and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule",
      "disambiguation_index": 0,
      "label": "It has the following general form, where P_h is the single predicate of the head, and P_1, ..., P_n (for n >= 1) are predicates of the body and x, y, z_1, ..., z_{n-1} are variables in the rule",
      "aliases": [
        "It has the following general form, where P_h is the single predicate of the head, and P_1, ..., P_n (for n >= 1) are predicates of the body and x, y, z_1, ..., z_{n-1} are variables in the rule"
      ],
      "types": [
        "definition",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formal representation of a logical rule or formula",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "It has the following general form, where P_h is the single predicate of the head, and P_1, ..., P_n (for n >= 1) are predicates of the body and x, y, z_1, ..., z_{n-1} are variables in the rule",
          "local_types": [
            "definition",
            "concept"
          ],
          "iri": "Entity-it_ha_the_following_general_form__where_p_h_is_the_single_predicate_of_the_head__and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule-Mention-1"
        }
      ],
      "relevance": 0.46240234375
    },
    "Entity-the_mined_rule": {
      "node_id": "the_mined_rule",
      "disambiguation_index": 0,
      "label": "the mined rules",
      "aliases": [
        "the mined rules"
      ],
      "types": [
        "rule",
        "mined rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of extracted or derived guidelines or principles",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "the mined rules",
          "local_types": [
            "rule",
            "mined rule"
          ],
          "iri": "Entity-the_mined_rule-Mention-1"
        }
      ],
      "relevance": 0.46240234375
    },
    "Entity-an_entity_involved_in_the_missing_fact": {
      "node_id": "an_entity_involved_in_the_missing_fact",
      "disambiguation_index": 0,
      "label": "an entity involved in the missing fact",
      "aliases": [
        "an entity involved in the missing fact"
      ],
      "types": [
        "entity",
        "object"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An entity that is part of a missing fact or relationship in a knowledge graph, but not necessarily present in the graph itself.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-6",
          "local_name": "an entity involved in the missing fact",
          "local_types": [
            "entity",
            "object"
          ],
          "iri": "Entity-an_entity_involved_in_the_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.46240234375
    },
    "Entity-path": {
      "node_id": "path",
      "disambiguation_index": 0,
      "label": "path",
      "aliases": [
        "path"
      ],
      "types": [
        "chain of entities",
        "sequence",
        "graph theory",
        "network analysis",
        "computer science",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A continuous sequence of connected entities",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "path",
          "local_types": [
            "graph theory",
            "computer science"
          ],
          "iri": "Entity-path-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-17-Sentence-1",
          "local_name": "path",
          "local_types": [
            "graph theory",
            "network analysis"
          ],
          "iri": "Entity-path-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-1",
          "local_name": "path",
          "local_types": [
            "sequence",
            "chain of entities"
          ],
          "iri": "Entity-path-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-3",
          "local_name": "path",
          "local_types": [
            "graph theory",
            "data structure"
          ],
          "iri": "Entity-path-Mention-4"
        }
      ],
      "relevance": 0.461669921875
    },
    "Entity-r_": {
      "node_id": "r_",
      "disambiguation_index": 0,
      "label": "R'",
      "aliases": [
        "R'"
      ],
      "types": [
        "variable",
        "result",
        "ruleset",
        "intermediate output",
        "mathematical object",
        "set",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An empty set or expression",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-7",
          "local_name": "R'",
          "local_types": [
            "intermediate output",
            "mathematical object",
            "set",
            "ruleset"
          ],
          "iri": "Entity-r_-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "R'",
          "local_types": [
            "variable",
            "result"
          ],
          "iri": "Entity-r_-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-12",
          "local_name": "R'",
          "local_types": [
            "variable",
            "expression"
          ],
          "iri": "Entity-r_-Mention-3"
        }
      ],
      "relevance": 0.461669921875
    },
    "Entity-rescal_is_unable_to_handle_yago2_.": {
      "node_id": "rescal_is_unable_to_handle_yago2_.",
      "disambiguation_index": 0,
      "label": "RESCAL is unable to handle YAGO2.",
      "aliases": [
        "RESCAL is unable to handle YAGO2."
      ],
      "types": [
        "algorithm",
        "limitation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A matrix factorization algorithm with limitations.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-2",
          "local_name": "RESCAL is unable to handle YAGO2.",
          "local_types": [
            "algorithm",
            "limitation"
          ],
          "iri": "Entity-rescal_is_unable_to_handle_yago2_.-Mention-1"
        }
      ],
      "relevance": 0.461669921875
    },
    "Entity-the_method_initializes_a_set_of_entity_by_considering_a_number_of_entity_which_are_involved_in_the_target_predicate_.": {
      "node_id": "the_method_initializes_a_set_of_entity_by_considering_a_number_of_entity_which_are_involved_in_the_target_predicate_.",
      "disambiguation_index": 0,
      "label": "The method initializes a set of entities by considering a number of entities which are involved in the target predicate.",
      "aliases": [
        "The method initializes a set of entities by considering a number of entities which are involved in the target predicate."
      ],
      "types": [
        "step",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A step or algorithm for initializing a set of entities relevant to a specific target predicate, involving consideration of multiple entities connected through that predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-6",
          "local_name": "The method initializes a set of entities by considering a number of entities which are involved in the target predicate.",
          "local_types": [
            "step",
            "algorithm"
          ],
          "iri": "Entity-the_method_initializes_a_set_of_entity_by_considering_a_number_of_entity_which_are_involved_in_the_target_predicate_.-Mention-1"
        }
      ],
      "relevance": 0.461669921875
    },
    "Entity-the_subject_argument_of_p_t": {
      "node_id": "the_subject_argument_of_p_t",
      "disambiguation_index": 0,
      "label": "the subject argument of P_t",
      "aliases": [
        "the subject argument of P_t"
      ],
      "types": [
        "subject",
        "argument",
        "P_t"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The subject argument of P_t represents the entities connected as subjects in predicate P_t, used for estimating rule quality and mining open path rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-5",
          "local_name": "the subject argument of P_t",
          "local_types": [
            "subject",
            "argument",
            "P_t"
          ],
          "iri": "Entity-the_subject_argument_of_p_t-Mention-1"
        }
      ],
      "relevance": 0.461669921875
    },
    "Entity-non-zero_element_of_this_vector": {
      "node_id": "non-zero_element_of_this_vector",
      "disambiguation_index": 0,
      "label": "non-zero element of this vector",
      "aliases": [
        "non-zero element of this vector"
      ],
      "types": [
        "vector",
        "element"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A satisfying entity, specifically an entity that satisfies the head of a rule in the second argument position.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-2",
          "local_name": "non-zero element of this vector",
          "local_types": [
            "vector",
            "element"
          ],
          "iri": "Entity-non-zero_element_of_this_vector-Mention-1"
        }
      ],
      "relevance": 0.461669921875
    },
    "Entity-the_vector_v__1___b_": {
      "node_id": "the_vector_v__1___b_",
      "disambiguation_index": 0,
      "label": "the vector v(1)(B)",
      "aliases": [
        "the vector v(1)(B)"
      ],
      "types": [
        "vector",
        "mathematics"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A mathematical representation of a set of square matrices used to compute the satisfiability of body atoms of all candidate rules.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-3",
          "local_name": "the vector v(1)(B)",
          "local_types": [
            "vector",
            "mathematics"
          ],
          "iri": "Entity-the_vector_v__1___b_-Mention-1"
        }
      ],
      "relevance": 0.461669921875
    },
    "Entity-prand": {
      "node_id": "prand",
      "disambiguation_index": 0,
      "label": "Prand",
      "aliases": [
        "Prand"
      ],
      "types": [
        "query set",
        "model",
        "query generator",
        "concept",
        "algorithm",
        "method",
        "system",
        "query generation system"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A baseline query generator that selects a bag of predicates and assigns subject or object entities to them by random selection.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "Prand",
          "local_types": [
            "method",
            "concept",
            "algorithm"
          ],
          "iri": "Entity-prand-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-3",
          "local_name": "Prand",
          "local_types": [
            "model",
            "system",
            "method",
            "algorithm"
          ],
          "iri": "Entity-prand-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "Prand",
          "local_types": [
            "query set",
            "system",
            "query generation system",
            "algorithm"
          ],
          "iri": "Entity-prand-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "Prand",
          "local_types": [
            "query generator",
            "system",
            "algorithm"
          ],
          "iri": "Entity-prand-Mention-4"
        }
      ],
      "relevance": 0.46142578125
    },
    "Entity-t_": {
      "node_id": "t_",
      "disambiguation_index": 0,
      "label": "t%",
      "aliases": [
        "t%"
      ],
      "types": [
        "parameter",
        "percentage value"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A percentage value representing the proportion of rules selected for tuning in a learning system.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-4",
          "local_name": "t%",
          "local_types": [
            "parameter",
            "percentage value"
          ],
          "iri": "Entity-t_-Mention-1"
        }
      ],
      "relevance": 0.461181640625
    },
    "Entity-tucker": {
      "node_id": "tucker",
      "disambiguation_index": 0,
      "label": "TuckER",
      "aliases": [
        "TuckER"
      ],
      "types": [
        "link predictor",
        "method",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "TuckER, a type of embedding-based link predictor",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-7",
          "local_name": "TuckER",
          "local_types": [
            "link predictor",
            "method",
            "algorithm"
          ],
          "iri": "Entity-tucker-Mention-1"
        }
      ],
      "relevance": 0.460693359375
    },
    "Entity-instance_of_the_rule_body": {
      "node_id": "instance_of_the_rule_body",
      "disambiguation_index": 0,
      "label": "instance of the rule body",
      "aliases": [
        "instance of the rule body"
      ],
      "types": [
        "data point",
        "example"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A specific example or data point that illustrates the application of a rule's body",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "instance of the rule body",
          "local_types": [
            "data point",
            "example"
          ],
          "iri": "Entity-instance_of_the_rule_body-Mention-1"
        }
      ],
      "relevance": 0.460693359375
    },
    "Entity-evaluate__": {
      "node_id": "evaluate__",
      "disambiguation_index": 0,
      "label": "Evaluate()",
      "aliases": [
        "Evaluate()"
      ],
      "types": [
        "evaluation function",
        "function",
        "information evaluation algorithm",
        "evaluation",
        "algorithm",
        "method",
        "computational method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or algorithm used to assess, judge, or determine the quality or value of something.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "Evaluate()",
          "local_types": [
            "evaluation function",
            "function",
            "information evaluation algorithm",
            "evaluation",
            "algorithm",
            "method",
            "computational method"
          ],
          "iri": "Entity-evaluate__-Mention-1"
        }
      ],
      "relevance": 0.460205078125
    },
    "Entity-previous_approach": {
      "node_id": "previous_approach",
      "disambiguation_index": 0,
      "label": "previous approach",
      "aliases": [
        "previous approach"
      ],
      "types": [
        "research method",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research methodology or technique used to generate relevant queries",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "previous approach",
          "local_types": [
            "research method",
            "methodology"
          ],
          "iri": "Entity-previous_approach-Mention-1"
        }
      ],
      "relevance": 0.459716796875
    },
    "Entity-sampling__": {
      "node_id": "sampling__",
      "disambiguation_index": 0,
      "label": "Sampling()",
      "aliases": [
        "Sampling()"
      ],
      "types": [
        "methodology",
        "information filtering algorithm",
        "data reduction technique",
        "algorithm",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or algorithm used for selecting and reducing data",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "Sampling()",
          "local_types": [
            "methodology",
            "information filtering algorithm",
            "data reduction technique",
            "algorithm",
            "method"
          ],
          "iri": "Entity-sampling__-Mention-1"
        }
      ],
      "relevance": 0.45947265625
    },
    "Entity-latent_feature_of_a_path_that_connects_it_endpoint": {
      "node_id": "latent_feature_of_a_path_that_connects_it_endpoint",
      "disambiguation_index": 0,
      "label": "latent features of a path that connects its endpoints",
      "aliases": [
        "latent features of a path that connects its endpoints"
      ],
      "types": [
        "path",
        "feature"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The product of predicate embeddings along a path representing the low-dimensional representation of latent features that connect its endpoints, viewed from the perspective of predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-3",
          "local_name": "latent features of a path that connects its endpoints",
          "local_types": [
            "path",
            "feature"
          ],
          "iri": "Entity-latent_feature_of_a_path_that_connects_it_endpoint-Mention-1"
        }
      ],
      "relevance": 0.45947265625
    },
    "Entity-_a__pk___k___1__...__m__": {
      "node_id": "_a__pk___k___1__...__m__",
      "disambiguation_index": 0,
      "label": "{A(Pk) : k \u2208 {1,...,m}}",
      "aliases": [
        "{A(Pk) : k \u2208 {1,...,m}}"
      ],
      "types": [
        "mathematical structure",
        "matrix",
        "binary values",
        "set",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-6",
          "local_name": "{A(Pk) : k \u2208 {1,...,m}}",
          "local_types": [
            "mathematical structure",
            "matrix",
            "binary values",
            "set",
            "mathematical expression"
          ],
          "iri": "Entity-_a__pk___k___1__...__m__-Mention-1"
        }
      ],
      "relevance": 0.459228515625
    },
    "Entity-and_an_object_argument_in_the_second_position": {
      "node_id": "and_an_object_argument_in_the_second_position",
      "disambiguation_index": 0,
      "label": "and an object argument in the second position",
      "aliases": [
        "and an object argument in the second position"
      ],
      "types": [
        "argument",
        "position"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A concept referring to the entity or entities that occur as objects of predicates, typically represented by vectors obtained through averaging the embeddings of all entities in those positions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "and an object argument in the second position",
          "local_types": [
            "argument",
            "position"
          ],
          "iri": "Entity-and_an_object_argument_in_the_second_position-Mention-1"
        }
      ],
      "relevance": 0.459228515625
    },
    "Entity-vector_v__2___p1_": {
      "node_id": "vector_v__2___p1_",
      "disambiguation_index": 0,
      "label": "vector v(2)(P1)",
      "aliases": [
        "v(2)(P1)",
        "vector v(2)(P1)"
      ],
      "types": [
        "mathematical notation",
        "algorithmic notation",
        "mathematical object",
        "variable name",
        "vector",
        "mathematics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical object representing a specific vector in an algorithmic notation.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "vector v(2)(P1)",
          "local_types": [
            "algorithmic notation",
            "mathematical object",
            "mathematics",
            "variable name"
          ],
          "iri": "Entity-vector_v__2___p1_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "v(2)(P1)",
          "local_types": [
            "vector",
            "mathematical notation"
          ],
          "iri": "Entity-vector_v__2___p1_-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-2",
          "local_name": "v(2)(P1)",
          "local_types": [
            "mathematical object",
            "vector",
            "mathematics"
          ],
          "iri": "Entity-vector_v__2___p1_-Mention-3"
        }
      ],
      "relevance": 0.458984375
    },
    "Entity-e_1": {
      "node_id": "e_1",
      "disambiguation_index": 0,
      "label": "e_1",
      "aliases": [
        "e_1"
      ],
      "types": [
        "variable",
        "term",
        "function",
        "predicate",
        "argument",
        "entity",
        "object",
        "unknown entity"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical function or variable",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "e_1",
          "local_types": [
            "object",
            "variable",
            "entity",
            "unknown entity"
          ],
          "iri": "Entity-e_1-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "e_1",
          "local_types": [
            "variable",
            "entity",
            "term",
            "object"
          ],
          "iri": "Entity-e_1-Mention-2"
        },
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "e_1",
          "local_types": [
            "variable",
            "function",
            "predicate",
            "argument",
            "entity",
            "object"
          ],
          "iri": "Entity-e_1-Mention-3"
        }
      ],
      "relevance": 0.458740234375
    },
    "Entity-these_condition": {
      "node_id": "these_condition",
      "disambiguation_index": 0,
      "label": "these conditions",
      "aliases": [
        "these conditions"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of KG facts that can trigger a candidate rule.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-4",
          "local_name": "these conditions",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-these_condition-Mention-1"
        }
      ],
      "relevance": 0.458740234375
    },
    "Entity-sampling": {
      "node_id": "sampling",
      "disambiguation_index": 0,
      "label": "Sampling",
      "aliases": [
        "Sampling"
      ],
      "types": [
        "method",
        "function",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statistical method or algorithm used to select a subset of data points from a larger population.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-5",
          "local_name": "Sampling",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-sampling-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "Sampling",
          "local_types": [
            "method",
            "algorithm"
          ],
          "iri": "Entity-sampling-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-5",
          "local_name": "Sampling",
          "local_types": [
            "algorithm",
            "function"
          ],
          "iri": "Entity-sampling-Mention-3"
        }
      ],
      "relevance": 0.458251953125
    },
    "Entity-entity_that_satisfy_the_second_argument_of_the_head": {
      "node_id": "entity_that_satisfy_the_second_argument_of_the_head",
      "disambiguation_index": 0,
      "label": "entities that satisfy the second argument of the head",
      "aliases": [
        "entities that satisfy the second argument of the head"
      ],
      "types": [
        "head",
        "entity",
        "concept",
        "argument"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that are connected to the head of a rule through its second argument position.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-2",
          "local_name": "entities that satisfy the second argument of the head",
          "local_types": [
            "head",
            "entity",
            "concept",
            "argument"
          ],
          "iri": "Entity-entity_that_satisfy_the_second_argument_of_the_head-Mention-1"
        }
      ],
      "relevance": 0.4580078125
    },
    "Entity-minimum_threshold": {
      "node_id": "minimum_threshold",
      "disambiguation_index": 0,
      "label": "Minimum thresholds",
      "aliases": [
        "Minimum thresholds"
      ],
      "types": [
        "threshold"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The minimum threshold values used by the algorithm (Evaluation()) to discard rules that do not meet certain quality criteria for OPSC and OPHC.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-10-Sentence-1",
          "local_name": "Minimum thresholds",
          "local_types": [
            "threshold"
          ],
          "iri": "Entity-minimum_threshold-Mention-1"
        }
      ],
      "relevance": 0.4580078125
    },
    "Entity-co-occurrence": {
      "node_id": "co-occurrence",
      "disambiguation_index": 0,
      "label": "co-occurrence",
      "aliases": [
        "co-occurrence"
      ],
      "types": [
        "statistical pattern",
        "mathematical concept",
        "linguistic phenomenon",
        "phenomenon",
        "relationship",
        "concept",
        "pattern",
        "statistical measure",
        "fitness function",
        "pattern detection",
        "co-occurrence"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statistical pattern that describes the relationship between two entities in terms of their simultaneous presence or occurrence.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "co-occurrence",
          "local_types": [
            "statistical pattern",
            "mathematical concept",
            "linguistic phenomenon",
            "statistical measure",
            "fitness function"
          ],
          "iri": "Entity-co-occurrence-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "co-occurrence",
          "local_types": [
            "phenomenon",
            "concept",
            "co-occurrence",
            "pattern"
          ],
          "iri": "Entity-co-occurrence-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-17-Sentence-1",
          "local_name": "co-occurrence",
          "local_types": [
            "relationship",
            "pattern detection",
            "statistical measure",
            "pattern"
          ],
          "iri": "Entity-co-occurrence-Mention-3"
        }
      ],
      "relevance": 0.457763671875
    },
    "Entity-there_is_no_holistic_similarity": {
      "node_id": "there_is_no_holistic_similarity",
      "disambiguation_index": 0,
      "label": "there is no holistic similarity",
      "aliases": [
        "there is no holistic similarity"
      ],
      "types": [
        "statement",
        "similarity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept that there is no holistic similarity between the head and body of an Open Path rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "there is no holistic similarity",
          "local_types": [
            "statement",
            "similarity"
          ],
          "iri": "Entity-there_is_no_holistic_similarity-Mention-1"
        }
      ],
      "relevance": 0.457763671875
    },
    "Entity-the_relevancy_of_a_question": {
      "node_id": "the_relevancy_of_a_question",
      "disambiguation_index": 0,
      "label": "the relevancy of a question",
      "aliases": [
        "the relevancy of a question"
      ],
      "types": [
        "question",
        "concept",
        "relevance"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept that refers to the evaluation or assessment of whether a question is relevant, typically based on its relationship with missing facts in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-4-Sentence-1",
          "local_name": "the relevancy of a question",
          "local_types": [
            "question",
            "concept",
            "relevance"
          ],
          "iri": "Entity-the_relevancy_of_a_question-Mention-1"
        }
      ],
      "relevance": 0.457763671875
    },
    "Entity-evaluating_link_predictor": {
      "node_id": "evaluating_link_predictor",
      "disambiguation_index": 0,
      "label": "evaluating link predictors",
      "aliases": [
        "evaluating link predictors"
      ],
      "types": [
        "evaluation",
        "assessment"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of assessing or judging the performance of algorithms designed to predict relationships between entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-2",
          "local_name": "evaluating link predictors",
          "local_types": [
            "evaluation",
            "assessment"
          ],
          "iri": "Entity-evaluating_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.457275390625
    },
    "Entity-p____e___or_q__p__e___": {
      "node_id": "p____e___or_q__p__e___",
      "disambiguation_index": 0,
      "label": "P(?, e') or q = P(e, ?)",
      "aliases": [
        "P(?, e') or q = P(e, ?)"
      ],
      "types": [
        "definition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The confidence degree (CD) of a query, which measures the quantifiable confidence of inducing an instance of the head with one free variable.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "P(?, e') or q = P(e, ?)",
          "local_types": [
            "definition"
          ],
          "iri": "Entity-p____e___or_q__p__e___-Mention-1"
        }
      ],
      "relevance": 0.457275390625
    },
    "Entity-later": {
      "node_id": "later",
      "disambiguation_index": 0,
      "label": "Later",
      "aliases": [
        "Later"
      ],
      "types": [
        "time"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A point in time when we will use the mined rules for generating queries, requiring some hold-out facts for query evaluation.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "Later",
          "local_types": [
            "time"
          ],
          "iri": "Entity-later-Mention-1"
        }
      ],
      "relevance": 0.456787109375
    },
    "Entity-p": {
      "node_id": "p",
      "disambiguation_index": 0,
      "label": "P",
      "aliases": [
        "P"
      ],
      "types": [
        "probability distribution",
        "property",
        "variable",
        "term",
        "function",
        "mathematical term",
        "target predicate",
        "parameter",
        "predicate",
        "matrix",
        "concept",
        "weight matrix",
        "pattern",
        "logical operator",
        "relation",
        "symbol"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical term or logical operator representing a relationship between entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "P",
          "local_types": [
            "property",
            "predicate"
          ],
          "iri": "Entity-p-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "P",
          "local_types": [
            "predicate",
            "target predicate"
          ],
          "iri": "Entity-p-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-4",
          "local_name": "P",
          "local_types": [
            "predicate",
            "matrix",
            "weight matrix"
          ],
          "iri": "Entity-p-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "P",
          "local_types": [
            "variable",
            "mathematical term",
            "predicate",
            "logical operator",
            "relation"
          ],
          "iri": "Entity-p-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-4",
          "local_name": "P",
          "local_types": [
            "term",
            "symbol"
          ],
          "iri": "Entity-p-Mention-5"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "P",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-p-Mention-6"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-2",
          "local_name": "P",
          "local_types": [
            "predicate",
            "concept"
          ],
          "iri": "Entity-p-Mention-7"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-5",
          "local_name": "P",
          "local_types": [
            "parameter",
            "probability distribution"
          ],
          "iri": "Entity-p-Mention-8"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "P",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-p-Mention-9"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "P",
          "local_types": [
            "predicate",
            "logical operator"
          ],
          "iri": "Entity-p-Mention-10"
        },
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "P",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-p-Mention-11"
        },
        {
          "reference": "Section-8-Paragraph-2-Sentence-3",
          "local_name": "P",
          "local_types": [
            "predicate",
            "concept"
          ],
          "iri": "Entity-p-Mention-12"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "P",
          "local_types": [
            "pattern",
            "relation"
          ],
          "iri": "Entity-p-Mention-13"
        }
      ],
      "relevance": 0.45654296875
    },
    "Entity-_p_1__e_1__e_2___p_1__e_1__e_3___p_1__e_4__e_5___p_1__e_8__e_7___p_1__e_9__e_7__": {
      "node_id": "_p_1__e_1__e_2___p_1__e_1__e_3___p_1__e_4__e_5___p_1__e_8__e_7___p_1__e_9__e_7__",
      "disambiguation_index": 0,
      "label": "{P_1(e_1, e_2), P_1(e_1, e_3), P_1(e_4, e_5), P_1(e_8, e_7), P_1(e_9, e_7)}",
      "aliases": [
        "{P_1(e_1, e_2), P_1(e_1, e_3), P_1(e_4, e_5), P_1(e_8, e_7), P_1(e_9, e_7)}"
      ],
      "types": [
        "predicate",
        "facts",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of mathematical facts or relationships",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "{P_1(e_1, e_2), P_1(e_1, e_3), P_1(e_4, e_5), P_1(e_8, e_7), P_1(e_9, e_7)}",
          "local_types": [
            "predicate",
            "facts",
            "mathematical expression"
          ],
          "iri": "Entity-_p_1__e_1__e_2___p_1__e_1__e_3___p_1__e_4__e_5___p_1__e_8__e_7___p_1__e_9__e_7__-Mention-1"
        }
      ],
      "relevance": 0.45654296875
    },
    "Entity-minopsc_and_minophc": {
      "node_id": "minopsc_and_minophc",
      "disambiguation_index": 0,
      "label": "MinOPSC and MinOPHC",
      "aliases": [
        "MinOPSC and MinOPHC"
      ],
      "types": [
        "threshold values",
        "parameters",
        "min_opsc_and_min_ophc",
        "thresholds"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Minimum threshold values (MinOPSC) and minimum OP rule quality scores (MinOPHC)",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "MinOPSC and MinOPHC",
          "local_types": [
            "threshold values",
            "parameters",
            "min_opsc_and_min_ophc",
            "thresholds"
          ],
          "iri": "Entity-minopsc_and_minophc-Mention-1"
        }
      ],
      "relevance": 0.456298828125
    },
    "Entity-a__pk___i__j_": {
      "node_id": "a__pk___i__j_",
      "disambiguation_index": 0,
      "label": "A(Pk)[i,j]",
      "aliases": [
        "A(Pk)[i,j]"
      ],
      "types": [
        "matrix",
        "mathematical expression",
        "matrix element"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An element of a matrix representing whether a fact is present or not.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "A(Pk)[i,j]",
          "local_types": [
            "matrix",
            "mathematical expression",
            "matrix element"
          ],
          "iri": "Entity-a__pk___i__j_-Mention-1"
        }
      ],
      "relevance": 0.456298828125
    },
    "Entity-the_learner_specifying_the_dimensionality_of_the_latent_feature_space": {
      "node_id": "the_learner_specifying_the_dimensionality_of_the_latent_feature_space",
      "disambiguation_index": 0,
      "label": "the learner specifying the dimensionality of the latent feature space",
      "aliases": [
        "the learner specifying the dimensionality of the latent feature space"
      ],
      "types": [
        "learner",
        "dimensionality",
        "latent feature space"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The parameter d in RESCAL, which determines the number of dimensions in the learned embeddings for entities and predicates.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-4",
          "local_name": "the learner specifying the dimensionality of the latent feature space",
          "local_types": [
            "learner",
            "dimensionality",
            "latent feature space"
          ],
          "iri": "Entity-the_learner_specifying_the_dimensionality_of_the_latent_feature_space-Mention-1"
        }
      ],
      "relevance": 0.4560546875
    },
    "Entity-_hc_": {
      "node_id": "_hc_",
      "disambiguation_index": 0,
      "label": "(HC)",
      "aliases": [
        "(HC)"
      ],
      "types": [
        "abbreviation",
        "acronym"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of a model's ability to accurately predict or describe a specific aspect, typically represented by an abbreviation.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "(HC)",
          "local_types": [
            "abbreviation",
            "acronym"
          ],
          "iri": "Entity-_hc_-Mention-1"
        }
      ],
      "relevance": 0.455810546875
    },
    "Entity-similarity_function": {
      "node_id": "similarity_function",
      "disambiguation_index": 0,
      "label": "similarity function",
      "aliases": [
        "similarity function",
        "The similarity function"
      ],
      "types": [
        "function",
        "mathematical concept",
        "algorithm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or algorithm used to measure the degree of similarity between two entities, often defined by a specific norm or distance metric.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "similarity function",
          "local_types": [
            "function",
            "mathematical concept",
            "algorithm"
          ],
          "iri": "Entity-similarity_function-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "The similarity function",
          "local_types": [
            "function"
          ],
          "iri": "Entity-similarity_function-Mention-2"
        }
      ],
      "relevance": 0.455322265625
    },
    "Entity-vector_multiplication": {
      "node_id": "vector_multiplication",
      "disambiguation_index": 0,
      "label": "vector multiplication",
      "aliases": [
        "vector multiplication"
      ],
      "types": [
        "algorithm",
        "computational process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The operation of combining two or more vectors using a mathematical formula to produce another vector.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-18",
          "local_name": "vector multiplication",
          "local_types": [
            "algorithm",
            "computational process"
          ],
          "iri": "Entity-vector_multiplication-Mention-1"
        }
      ],
      "relevance": 0.455322265625
    },
    "Entity-experimentally__we_find_that_they_complement_each_other": {
      "node_id": "experimentally__we_find_that_they_complement_each_other",
      "disambiguation_index": 0,
      "label": "Experimentally, we find that they complement each other",
      "aliases": [
        "Experimentally, we find that they complement each other"
      ],
      "types": [
        "finding",
        "research result"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research finding or result indicating complementary relationships between two entities",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-2",
          "local_name": "Experimentally, we find that they complement each other",
          "local_types": [
            "finding",
            "research result"
          ],
          "iri": "Entity-experimentally__we_find_that_they_complement_each_other-Mention-1"
        }
      ],
      "relevance": 0.454833984375
    },
    "Entity-the_head_and_body": {
      "node_id": "the_head_and_body",
      "disambiguation_index": 0,
      "label": "the head and body",
      "aliases": [
        "the head and body"
      ],
      "types": [
        "head",
        "body"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "In the context of Open Path rules, 'head' and 'body' refer to the subject argument of the head predicate (P_t) and the object arguments of subsequent predicates in the rule's path, respectively.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "the head and body",
          "local_types": [
            "head",
            "body"
          ],
          "iri": "Entity-the_head_and_body-Mention-1"
        }
      ],
      "relevance": 0.454833984375
    },
    "Entity-the_optimum_obtained_by_tuning": {
      "node_id": "the_optimum_obtained_by_tuning",
      "disambiguation_index": 0,
      "label": "the optimum obtained by tuning",
      "aliases": [
        "the optimum obtained by tuning"
      ],
      "types": [
        "result"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The optimal set of parameters for PathFinding() and IncPathFinding(), determined through a process of tuning.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-2",
          "local_name": "the optimum obtained by tuning",
          "local_types": [
            "result"
          ],
          "iri": "Entity-the_optimum_obtained_by_tuning-Mention-1"
        }
      ],
      "relevance": 0.454833984375
    },
    "Entity-vector": {
      "node_id": "vector",
      "disambiguation_index": 0,
      "label": "vectors",
      "aliases": [
        "vector",
        "vectors"
      ],
      "types": [
        "mathematical object",
        "mathematical concept",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Mathematical representations of entities or concepts, often used to analyze relationships between them.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "vectors",
          "local_types": [
            "mathematical object",
            "data structure"
          ],
          "iri": "Entity-vector-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-6-Sentence-4",
          "local_name": "vector",
          "local_types": [
            "mathematical concept",
            "data structure"
          ],
          "iri": "Entity-vector-Mention-2"
        }
      ],
      "relevance": 0.45458984375
    },
    "Entity-f___p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__": {
      "node_id": "f___p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__",
      "disambiguation_index": 0,
      "label": "F = {P1(e1, e2), P1(e2, e1), P1(e2, e3), P1(e3, e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}",
      "aliases": [
        "F = {P1(e1, e2), P1(e2, e1), P1(e2, e3), P1(e3, e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}"
      ],
      "types": [
        "set",
        "collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of binary relationships between entities",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "F = {P1(e1, e2), P1(e2, e1), P1(e2, e3), P1(e3, e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-f___p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__-Mention-1"
        }
      ],
      "relevance": 0.45458984375
    },
    "Entity-_i__j__th_element": {
      "node_id": "_i__j__th_element",
      "disambiguation_index": 0,
      "label": "(i, j)th element",
      "aliases": [
        "(i, j)th element"
      ],
      "types": [
        "element"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The (i, j)th element is the value in the adjacency matrix A(Pk)[i,j] representing whether fact Pk(ei,ej) exists in the knowledge graph F.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-5",
          "local_name": "(i, j)th element",
          "local_types": [
            "element"
          ],
          "iri": "Entity-_i__j__th_element-Mention-1"
        }
      ],
      "relevance": 0.45458984375
    },
    "Entity-we_conducted_an_experiment": {
      "node_id": "we_conducted_an_experiment",
      "disambiguation_index": 0,
      "label": "We conducted an experiment",
      "aliases": [
        "We conducted an experiment"
      ],
      "types": [
        "experiment"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "An assessment of the effectiveness of the proposed hybrid fitness function for mining high-quality rules.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-1",
          "local_name": "We conducted an experiment",
          "local_types": [
            "experiment"
          ],
          "iri": "Entity-we_conducted_an_experiment-Mention-1"
        }
      ],
      "relevance": 0.45458984375
    },
    "Entity-marriedto__x__z_": {
      "node_id": "marriedto__x__z_",
      "disambiguation_index": 0,
      "label": "marriedTo(x, z)",
      "aliases": [
        "marriedTo(x, z)",
        "marriedTo( x, z )"
      ],
      "types": [
        "relation",
        "predicate",
        "logic predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The 'marriedTo' relation between two entities x and z in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "marriedTo(x, z)",
          "local_types": [
            "relation",
            "predicate",
            "logic predicate"
          ],
          "iri": "Entity-marriedto__x__z_-Mention-1"
        }
      ],
      "relevance": 0.454345703125
    },
    "Entity-similar_concept": {
      "node_id": "similar_concept",
      "disambiguation_index": 0,
      "label": "similar concepts",
      "aliases": [
        "similar concepts"
      ],
      "types": [
        "concepts",
        "similarity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The notion of similar concepts refers to the idea that in CP rules, the head and body present analogous relationships between entities, allowing for the application of similarity scoring functions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "similar concepts",
          "local_types": [
            "concepts",
            "similarity"
          ],
          "iri": "Entity-similar_concept-Mention-1"
        }
      ],
      "relevance": 0.454345703125
    },
    "Entity-z1": {
      "node_id": "z1",
      "disambiguation_index": 0,
      "label": "z1",
      "aliases": [
        "z2",
        "z1"
      ],
      "types": [
        "variable",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The variable or parameter 'z1' refers to an OP rule about a specific target predicate P.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "z1",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-z1-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "z2",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-z1-Mention-2"
        }
      ],
      "relevance": 0.453857421875
    },
    "Entity-pair": {
      "node_id": "pair",
      "disambiguation_index": 0,
      "label": "pairs",
      "aliases": [
        "pairs"
      ],
      "types": [
        "set",
        "collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of entities and their relationships that satisfy a specific pattern or rule",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "pairs",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-pair-Mention-1"
        }
      ],
      "relevance": 0.453857421875
    },
    "Entity-benchmark_datasets": {
      "node_id": "benchmark_datasets",
      "disambiguation_index": 0,
      "label": "benchmark datasets",
      "aliases": [
        "benchmark datasets"
      ],
      "types": [
        "dataset",
        "resource",
        "data set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of pre-defined data sets used to evaluate and compare the performance of algorithms, models, or systems.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-1",
          "local_name": "benchmark datasets",
          "local_types": [
            "dataset",
            "resource",
            "data set"
          ],
          "iri": "Entity-benchmark_datasets-Mention-1"
        }
      ],
      "relevance": 0.453857421875
    },
    "Entity-for_example__the_following_op_rule__citizenof__x__t___livesin__x__z___state_that_if_an_entity__x__life_in_z": {
      "node_id": "for_example__the_following_op_rule__citizenof__x__t___livesin__x__z___state_that_if_an_entity__x__life_in_z",
      "disambiguation_index": 0,
      "label": "For example, the following OP rule, citizenOf(x, t) \u2190 livesIn(x, z), states that if an entity, x, lives in z",
      "aliases": [
        "For example, the following OP rule, citizenOf(x, t) \u2190 livesIn(x, z), states that if an entity, x, lives in z",
        "the following OP rule, citizenOf(x, t) \u2190 livesIn(x, z)"
      ],
      "types": [
        "predicate",
        "OP rule",
        "rule",
        "OP_rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A logical rule stating that an individual 'x' is a citizen of some location 't' if they live in a specific place 'z'.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "For example, the following OP rule, citizenOf(x, t) \u2190 livesIn(x, z), states that if an entity, x, lives in z",
          "local_types": [
            "OP_rule",
            "predicate"
          ],
          "iri": "Entity-for_example__the_following_op_rule__citizenof__x__t___livesin__x__z___state_that_if_an_entity__x__life_in_z-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "the following OP rule, citizenOf(x, t) \u2190 livesIn(x, z)",
          "local_types": [
            "rule",
            "OP rule"
          ],
          "iri": "Entity-for_example__the_following_op_rule__citizenof__x__t___livesin__x__z___state_that_if_an_entity__x__life_in_z-Mention-2"
        }
      ],
      "relevance": 0.45361328125
    },
    "Entity-e_8": {
      "node_id": "e_8",
      "disambiguation_index": 0,
      "label": "e_8",
      "aliases": [
        "e_8"
      ],
      "types": [
        "variable",
        "function",
        "predicate",
        "argument",
        "entity",
        "unknown entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function or variable that takes one argument.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "e_8",
          "local_types": [
            "predicate",
            "variable",
            "function",
            "argument"
          ],
          "iri": "Entity-e_8-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "e_8",
          "local_types": [
            "variable",
            "entity",
            "unknown entity"
          ],
          "iri": "Entity-e_8-Mention-2"
        }
      ],
      "relevance": 0.453369140625
    },
    "Entity-each_entity_e_i": {
      "node_id": "each_entity_e_i",
      "disambiguation_index": 0,
      "label": "each entity e_i",
      "aliases": [
        "each entity e_i",
        "e_i"
      ],
      "types": [
        "mathematical concept",
        "concept",
        "mathematical object",
        "entity",
        "vector"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation or concept that can be embedded as a vector in a high-dimensional space.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-3",
          "local_name": "each entity e_i",
          "local_types": [
            "mathematical object",
            "concept",
            "entity"
          ],
          "iri": "Entity-each_entity_e_i-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-3",
          "local_name": "e_i",
          "local_types": [
            "vector",
            "mathematical concept"
          ],
          "iri": "Entity-each_entity_e_i-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-3",
          "local_name": "e_i",
          "local_types": [
            "entity",
            "concept"
          ],
          "iri": "Entity-each_entity_e_i-Mention-3"
        }
      ],
      "relevance": 0.453125
    },
    "Entity-for_predicate_p__we_write_it_embedding_matrix_a_p__also_called_a_weight_matrix_.": {
      "node_id": "for_predicate_p__we_write_it_embedding_matrix_a_p__also_called_a_weight_matrix_.",
      "disambiguation_index": 0,
      "label": "For predicate P, we write its embedding matrix as P, also called a weight matrix.",
      "aliases": [
        "For predicate P, we write its embedding matrix as P, also called a weight matrix."
      ],
      "types": [
        "notation",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The embedding matrix of a predicate P, also referred to as a weight matrix.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-4",
          "local_name": "For predicate P, we write its embedding matrix as P, also called a weight matrix.",
          "local_types": [
            "notation",
            "predicate"
          ],
          "iri": "Entity-for_predicate_p__we_write_it_embedding_matrix_a_p__also_called_a_weight_matrix_.-Mention-1"
        }
      ],
      "relevance": 0.452880859375
    },
    "Entity-table_4_show_average_precision__recall__and_f1": {
      "node_id": "table_4_show_average_precision__recall__and_f1",
      "disambiguation_index": 0,
      "label": "Table 4 shows average precision, recall, and F1",
      "aliases": [
        "Table 4 shows average precision, recall, and F1"
      ],
      "types": [
        "table",
        "evaluation metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A table presenting evaluation metrics for measuring model performance.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "Table 4 shows average precision, recall, and F1",
          "local_types": [
            "table",
            "evaluation metric"
          ],
          "iri": "Entity-table_4_show_average_precision__recall__and_f1-Mention-1"
        }
      ],
      "relevance": 0.452880859375
    },
    "Entity-chai": {
      "node_id": "chai",
      "disambiguation_index": 0,
      "label": "CHAI",
      "aliases": [
        "CHAI"
      ],
      "types": [
        "tool",
        "model",
        "approach",
        "computational system",
        "algorithm",
        "system",
        "algorithmic approach"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A system or approach that uses computational methods to filter and prioritize information based on probability.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-2",
          "local_name": "CHAI",
          "local_types": [
            "tool",
            "model",
            "approach",
            "computational system",
            "algorithm",
            "system",
            "algorithmic approach"
          ],
          "iri": "Entity-chai-Mention-1"
        }
      ],
      "relevance": 0.452392578125
    },
    "Entity-latent-feature_relationship": {
      "node_id": "latent-feature_relationship",
      "disambiguation_index": 0,
      "label": "latent-feature relationship",
      "aliases": [
        "latent-feature relationship"
      ],
      "types": [
        "relationship",
        "latent feature",
        "connection"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A statistical pattern or connection observed between two predicate pairs in a knowledge graph, where similar entities are often associated with each other.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "latent-feature relationship",
          "local_types": [
            "relationship",
            "latent feature",
            "connection"
          ],
          "iri": "Entity-latent-feature_relationship-Mention-1"
        }
      ],
      "relevance": 0.452392578125
    },
    "Entity-fact_p_1__e0__e1_": {
      "node_id": "fact_p_1__e0__e1_",
      "disambiguation_index": 0,
      "label": "fact P_1(e0, e1)",
      "aliases": [
        "fact P_1(e0, e1)"
      ],
      "types": [
        "data",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A piece of data or information that is represented by a mathematical formula.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "fact P_1(e0, e1)",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-fact_p_1__e0__e1_-Mention-1"
        }
      ],
      "relevance": 0.4521484375
    },
    "Entity-the_confidence_degree__cd_": {
      "node_id": "the_confidence_degree__cd_",
      "disambiguation_index": 0,
      "label": "the confidence degree (CD)",
      "aliases": [
        "the confidence degree (CD)",
        "the CD"
      ],
      "types": [
        "concept",
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The confidence degree (CD) refers to a metric that measures the maximum OPSC of all the rules inducing a given query, giving no weight to redundant rules.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "the confidence degree (CD)",
          "local_types": [
            "concept",
            "metric"
          ],
          "iri": "Entity-the_confidence_degree__cd_-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "the CD",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_confidence_degree__cd_-Mention-2"
        }
      ],
      "relevance": 0.4521484375
    },
    "Entity-_arules": {
      "node_id": "_arules",
      "disambiguation_index": 0,
      "label": "#Arules",
      "aliases": [
        "#Arules"
      ],
      "types": [
        "notation",
        "statistic",
        "metric",
        "identifier"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A measure or indicator that represents the average number of accurate rules",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-5",
          "local_name": "#Arules",
          "local_types": [
            "notation",
            "statistic",
            "metric",
            "identifier"
          ],
          "iri": "Entity-_arules-Mention-1"
        }
      ],
      "relevance": 0.451904296875
    },
    "Entity-rule_language": {
      "node_id": "rule_language",
      "disambiguation_index": 0,
      "label": "rule language",
      "aliases": [
        "rule language"
      ],
      "types": [
        "programming language",
        "formal system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A formalized means of expressing and representing rules, used for programming or other purposes.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-1",
          "local_name": "rule language",
          "local_types": [
            "programming language",
            "formal system"
          ],
          "iri": "Entity-rule_language-Mention-1"
        }
      ],
      "relevance": 0.451904296875
    },
    "Entity-thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query": {
      "node_id": "thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query",
      "disambiguation_index": 0,
      "label": "thereby giving no weight to redundant rules that induce the same query",
      "aliases": [
        "thereby giving no weight to redundant rules that induce the same query"
      ],
      "types": [
        "explanation",
        "logic"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept of not assigning any importance or value to redundant rules that generate the same query.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "thereby giving no weight to redundant rules that induce the same query",
          "local_types": [
            "explanation",
            "logic"
          ],
          "iri": "Entity-thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query-Mention-1"
        }
      ],
      "relevance": 0.45166015625
    },
    "Entity-this_(5)": {
      "node_id": "this_(5)",
      "disambiguation_index": 5,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The explanation for why YAGO2 induces fewer rules and has weaker performance, which suggests that its structure is correct but there are many missing facts.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "This",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this_(5)-Mention-1"
        }
      ],
      "relevance": 0.45166015625
    },
    "Entity-entity_(1)": {
      "node_id": "entity_(1)",
      "disambiguation_index": 1,
      "label": "entity",
      "aliases": [
        "entity"
      ],
      "types": [
        "concept",
        "identifier"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "In the context of knowledge graphs, an entity refers to an identifier for an object such as a place or a person.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "entity",
          "local_types": [
            "concept",
            "identifier"
          ],
          "iri": "Entity-entity_(1)-Mention-1"
        }
      ],
      "relevance": 0.451416015625
    },
    "Entity-a_single_predicate": {
      "node_id": "a_single_predicate",
      "disambiguation_index": 0,
      "label": "a single predicate",
      "aliases": [
        "a single predicate"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A single predicate refers to an individual concept or relation within a knowledge graph that connects entities along a path.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-4",
          "local_name": "a single predicate",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-a_single_predicate-Mention-1"
        }
      ],
      "relevance": 0.451416015625
    },
    "Entity-there_is_a_tv_program__z__that_ha_a_participant__w__that_ha_an_occupation__y___then_it_is_likely_that_the_presenter_of_the_program__x__is_known_.": {
      "node_id": "there_is_a_tv_program__z__that_ha_a_participant__w__that_ha_an_occupation__y___then_it_is_likely_that_the_presenter_of_the_program__x__is_known_.",
      "disambiguation_index": 0,
      "label": "there is a TV program (z) that has a participant (w) that has an occupation (y), then it is likely that the presenter of the program (x) is known.",
      "aliases": [
        "there is a TV program (z) that has a participant (w) that has an occupation (y), then it is likely that the presenter of the program (x) is known."
      ],
      "types": [
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A TV program with a participant having an occupation, where the presenter is likely to be known.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "there is a TV program (z) that has a participant (w) that has an occupation (y), then it is likely that the presenter of the program (x) is known.",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-there_is_a_tv_program__z__that_ha_a_participant__w__that_ha_an_occupation__y___then_it_is_likely_that_the_presenter_of_the_program__x__is_known_.-Mention-1"
        }
      ],
      "relevance": 0.451171875
    },
    "Entity-fitness_criterion_for_discarding_poor_rule_early": {
      "node_id": "fitness_criterion_for_discarding_poor_rule_early",
      "disambiguation_index": 0,
      "label": "fitness criteria for discarding poor rules early",
      "aliases": [
        "fitness criteria for discarding poor rules early"
      ],
      "types": [
        "evaluation metric",
        "quality control measure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Novel fitness criteria for discarding poor rules early",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-4",
          "local_name": "fitness criteria for discarding poor rules early",
          "local_types": [
            "evaluation metric",
            "quality control measure"
          ],
          "iri": "Entity-fitness_criterion_for_discarding_poor_rule_early-Mention-1"
        }
      ],
      "relevance": 0.450927734375
    },
    "Entity-l": {
      "node_id": "l",
      "disambiguation_index": 0,
      "label": "l",
      "aliases": [
        "l",
        "max rule length l"
      ],
      "types": [
        "variable",
        "integer value",
        "parameter",
        "integer"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Maximum allowed value for a rule's length",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "l",
          "local_types": [
            "parameter",
            "integer"
          ],
          "iri": "Entity-l-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-8",
          "local_name": "l",
          "local_types": [
            "variable",
            "integer"
          ],
          "iri": "Entity-l-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "max rule length l",
          "local_types": [
            "parameter",
            "integer value"
          ],
          "iri": "Entity-l-Mention-3"
        }
      ],
      "relevance": 0.45068359375
    },
    "Entity-twice_the_number_of_fact": {
      "node_id": "twice_the_number_of_fact",
      "disambiguation_index": 0,
      "label": "twice the number of facts",
      "aliases": [
        "twice the number of facts"
      ],
      "types": [
        "mathematical concept",
        "ratio",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The number of queries that can be induced from a set of facts, where each fact can generate multiple queries and different facts may derive the same query.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "twice the number of facts",
          "local_types": [
            "mathematical concept",
            "ratio",
            "expression"
          ],
          "iri": "Entity-twice_the_number_of_fact-Mention-1"
        }
      ],
      "relevance": 0.45068359375
    },
    "Entity-different_fact__p_1__e_8__e_7__and_p_1__e_9__e_7__": {
      "node_id": "different_fact__p_1__e_8__e_7__and_p_1__e_9__e_7__",
      "disambiguation_index": 0,
      "label": "different facts (P_1(e_8, e_7) and P_1(e_9, e_7))",
      "aliases": [
        "different facts (P_1(e_8, e_7) and P_1(e_9, e_7))"
      ],
      "types": [
        "facts"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The set of different facts that can be used to generate queries about predicate P_1, including instances such as P_1(e_8, e_7) and P_1(e_9, e_7).",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "different facts (P_1(e_8, e_7) and P_1(e_9, e_7))",
          "local_types": [
            "facts"
          ],
          "iri": "Entity-different_fact__p_1__e_8__e_7__and_p_1__e_9__e_7__-Mention-1"
        }
      ],
      "relevance": 0.450439453125
    },
    "Entity-query_relevance": {
      "node_id": "query_relevance",
      "disambiguation_index": 0,
      "label": "query relevance",
      "aliases": [
        "query relevance"
      ],
      "types": [
        "concept",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or indicator of how well a search query matches its intended purpose",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-5",
          "local_name": "query relevance",
          "local_types": [
            "concept",
            "metric"
          ],
          "iri": "Entity-query_relevance-Mention-1"
        }
      ],
      "relevance": 0.449951171875
    },
    "Entity-a__p1_": {
      "node_id": "a__p1_",
      "disambiguation_index": 0,
      "label": "A(P1)",
      "aliases": [
        "A(P1)",
        "A(P2)"
      ],
      "types": [
        "operation",
        "function",
        "parameter",
        "mathematical operation",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical operation or function that takes one or more parameters and returns a result.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-2",
          "local_name": "A(P1)",
          "local_types": [
            "operation",
            "function",
            "parameter",
            "mathematical operation",
            "mathematical expression"
          ],
          "iri": "Entity-a__p1_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-7-Sentence-2",
          "local_name": "A(P2)",
          "local_types": [
            "operation",
            "function",
            "parameter",
            "mathematical operation",
            "mathematical expression"
          ],
          "iri": "Entity-a__p1_-Mention-2"
        }
      ],
      "relevance": 0.449951171875
    },
    "Entity-this_is_an_open_access_article_under_the": {
      "node_id": "this_is_an_open_access_article_under_the",
      "disambiguation_index": 0,
      "label": "This is an open access article under the",
      "aliases": [
        "This is an open access article under the"
      ],
      "types": [
        "article type",
        "access model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A published work with unrestricted online availability and licensing terms.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-5-Sentence-2",
          "local_name": "This is an open access article under the",
          "local_types": [
            "article type",
            "access model"
          ],
          "iri": "Entity-this_is_an_open_access_article_under_the-Mention-1"
        }
      ],
      "relevance": 0.44970703125
    },
    "Entity-coverage": {
      "node_id": "coverage",
      "disambiguation_index": 0,
      "label": "coverage",
      "aliases": [
        "coverage"
      ],
      "types": [
        "method",
        "concept",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or extent of exposure, protection, or comprehension.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-5",
          "local_name": "coverage",
          "local_types": [
            "method",
            "concept",
            "technique"
          ],
          "iri": "Entity-coverage-Mention-1"
        }
      ],
      "relevance": 0.44970703125
    },
    "Entity-by_instantiating_the_body_of_this_rule_a_follows__livesin__bronte__canberra___we_could_infer_the_query__citizenof__bronte____.": {
      "node_id": "by_instantiating_the_body_of_this_rule_a_follows__livesin__bronte__canberra___we_could_infer_the_query__citizenof__bronte____.",
      "disambiguation_index": 0,
      "label": "By instantiating the body of this rule as follows, livesIn(Bronte, Canberra), we could infer the query, citizenOf(Bronte, ?).",
      "aliases": [
        "By instantiating the body of this rule as follows, livesIn(Bronte, Canberra), we could infer the query, citizenOf(Bronte, ?)."
      ],
      "types": [
        "instantiation",
        "query"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An instantiation of an open path (OP) rule that infers a question about citizenship",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "By instantiating the body of this rule as follows, livesIn(Bronte, Canberra), we could infer the query, citizenOf(Bronte, ?).",
          "local_types": [
            "instantiation",
            "query"
          ],
          "iri": "Entity-by_instantiating_the_body_of_this_rule_a_follows__livesin__bronte__canberra___we_could_infer_the_query__citizenof__bronte____.-Mention-1"
        }
      ],
      "relevance": 0.44970703125
    },
    "Entity-where__is_the_set_of_real_number_and_d_is_an_integer_.": {
      "node_id": "where__is_the_set_of_real_number_and_d_is_an_integer_.",
      "disambiguation_index": 0,
      "label": "where \u211d is the set of real numbers and d is an integer.",
      "aliases": [
        "where \u211d is the set of real numbers and d is an integer."
      ],
      "types": [
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical notation for embedding entities or predicates in a high-dimensional space.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-3",
          "local_name": "where \u211d is the set of real numbers and d is an integer.",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-where__is_the_set_of_real_number_and_d_is_an_integer_.-Mention-1"
        }
      ],
      "relevance": 0.449462890625
    },
    "Entity-p_t__x__z_0___p_1__z_0__z_1___p_2__z_1__z_2___...__p_n__z___n-1___y_": {
      "node_id": "p_t__x__z_0___p_1__z_0__z_1___p_2__z_1__z_2___...__p_n__z___n-1___y_",
      "disambiguation_index": 0,
      "label": "P_t(x, z_0) \u2190 P_1(z_0, z_1) \u2227 P_2(z_1, z_2) \u2227 ... \u2227 P_n(z_{n-1}, y)",
      "aliases": [
        "P_t(x, z_0) \u2190 P_1(z_0, z_1) \u2227 P_2(z_1, z_2) \u2227 ... \u2227 P_n(z_{n-1}, y)"
      ],
      "types": [
        "formula",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical formula that represents a recursive definition",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P_t(x, z_0) \u2190 P_1(z_0, z_1) \u2227 P_2(z_1, z_2) \u2227 ... \u2227 P_n(z_{n-1}, y)",
          "local_types": [
            "formula",
            "logic"
          ],
          "iri": "Entity-p_t__x__z_0___p_1__z_0__z_1___p_2__z_1__z_2___...__p_n__z___n-1___y_-Mention-1"
        }
      ],
      "relevance": 0.449462890625
    },
    "Entity-hc": {
      "node_id": "hc",
      "disambiguation_index": 0,
      "label": "HC",
      "aliases": [
        "HC"
      ],
      "types": [
        "measure",
        "concept",
        "metric",
        "theory"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A measure or metric used to evaluate the explanatory power of a rule",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-4",
          "local_name": "HC",
          "local_types": [
            "measure",
            "concept",
            "metric",
            "theory"
          ],
          "iri": "Entity-hc-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "HC",
          "local_types": [
            "metric",
            "measure"
          ],
          "iri": "Entity-hc-Mention-2"
        }
      ],
      "relevance": 0.44921875
    },
    "Entity-for_2__k__l_do_.": {
      "node_id": "for_2__k__l_do_.",
      "disambiguation_index": 0,
      "label": "For 2 \u2264 k \u2264 l do.",
      "aliases": [
        "For 2 \u2264 k \u2264 l do."
      ],
      "types": [
        "loop"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A loop instruction",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-8",
          "local_name": "For 2 \u2264 k \u2264 l do.",
          "local_types": [
            "loop"
          ],
          "iri": "Entity-for_2__k__l_do_.-Mention-1"
        }
      ],
      "relevance": 0.44921875
    },
    "Entity-r___evaluation__r___k__.": {
      "node_id": "r___evaluation__r___k__.",
      "disambiguation_index": 0,
      "label": "R := Evaluation(R', K).",
      "aliases": [
        "R := Evaluation(R', K)."
      ],
      "types": [
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An evaluation result",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-12",
          "local_name": "R := Evaluation(R', K).",
          "local_types": [
            "evaluation"
          ],
          "iri": "Entity-r___evaluation__r___k__.-Mention-1"
        }
      ],
      "relevance": 0.44921875
    },
    "Entity-universal_quantification": {
      "node_id": "universal_quantification",
      "disambiguation_index": 0,
      "label": "universal quantification",
      "aliases": [
        "universal quantification"
      ],
      "types": [
        "mathematical operation",
        "logic concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical operation or logic concept used to express 'for all' statements, indicating that a property holds true for every member of a specified domain.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "universal quantification",
          "local_types": [
            "mathematical operation",
            "logic concept"
          ],
          "iri": "Entity-universal_quantification-Mention-1"
        }
      ],
      "relevance": 0.448974609375
    },
    "Entity-training_data": {
      "node_id": "training_data",
      "disambiguation_index": 0,
      "label": "training data",
      "aliases": [
        "training set",
        "training sets",
        "the training set",
        "training data"
      ],
      "types": [
        "dataset",
        "collection of data",
        "learning material",
        "data set",
        "evaluation dataset",
        "training_set",
        "learning data",
        "dataset for training"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of examples or instances used for learning, testing, or validating a model or algorithm.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "training data",
          "local_types": [
            "dataset",
            "data set"
          ],
          "iri": "Entity-training_data-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "training data",
          "local_types": [
            "dataset",
            "learning material"
          ],
          "iri": "Entity-training_data-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "training sets",
          "local_types": [
            "evaluation dataset"
          ],
          "iri": "Entity-training_data-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "training set",
          "local_types": [
            "dataset",
            "collection of data",
            "learning data",
            "dataset for training"
          ],
          "iri": "Entity-training_data-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "the training set",
          "local_types": [
            "dataset",
            "training_set"
          ],
          "iri": "Entity-training_data-Mention-5"
        }
      ],
      "relevance": 0.448974609375
    },
    "Entity-n_-_1": {
      "node_id": "n_-_1",
      "disambiguation_index": 0,
      "label": "n - 1",
      "aliases": [
        "n - 1"
      ],
      "types": [
        "integer"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The term 'n - 1' refers to an integer representing the number of intermediate entities (z_i) along a path in an Open Path rule, where n is the total number of predicates in the rule.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "n - 1",
          "local_types": [
            "integer"
          ],
          "iri": "Entity-n_-_1-Mention-1"
        }
      ],
      "relevance": 0.448974609375
    },
    "Entity-e_j": {
      "node_id": "e_j",
      "disambiguation_index": 0,
      "label": "e_j",
      "aliases": [
        "E_j",
        "e_j"
      ],
      "types": [
        "embedding",
        "entity",
        "representation",
        "vector"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A vector representation or embedding in a high-dimensional space.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "e_j",
          "local_types": [
            "embedding",
            "entity",
            "representation",
            "vector"
          ],
          "iri": "Entity-e_j-Mention-1"
        }
      ],
      "relevance": 0.44873046875
    },
    "Entity-table_3": {
      "node_id": "table_3",
      "disambiguation_index": 0,
      "label": "Table 3",
      "aliases": [
        "Table 3"
      ],
      "types": [
        "table",
        "tabular data",
        "research result",
        "data table",
        "reference",
        "data visualization"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A table presenting research results or data visualization, likely containing tabular information and possibly including a summary or analysis.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "Table 3",
          "local_types": [
            "table",
            "data visualization",
            "reference"
          ],
          "iri": "Entity-table_3-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-2",
          "local_name": "Table 3",
          "local_types": [
            "table",
            "tabular data",
            "reference",
            "research result"
          ],
          "iri": "Entity-table_3-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "Table 3",
          "local_types": [
            "table",
            "data table"
          ],
          "iri": "Entity-table_3-Mention-3"
        }
      ],
      "relevance": 0.448486328125
    },
    "Entity-arbitrary_query": {
      "node_id": "arbitrary_query",
      "disambiguation_index": 0,
      "label": "Arbitrary queries",
      "aliases": [
        "Arbitrary queries"
      ],
      "types": [
        "unspecific request",
        "undefined query",
        "query"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Unspecified or open-ended requests for information",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "Arbitrary queries",
          "local_types": [
            "unspecific request",
            "undefined query",
            "query"
          ],
          "iri": "Entity-arbitrary_query-Mention-1"
        }
      ],
      "relevance": 0.448486328125
    },
    "Entity-number_of_induced_query": {
      "node_id": "number_of_induced_query",
      "disambiguation_index": 0,
      "label": "number of induced queries",
      "aliases": [
        "number of induced queries"
      ],
      "types": [
        "quantity",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The total count of queries generated or induced through a process.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "number of induced queries",
          "local_types": [
            "quantity",
            "metric"
          ],
          "iri": "Entity-number_of_induced_query-Mention-1"
        }
      ],
      "relevance": 0.448486328125
    },
    "Entity-occupation__y_": {
      "node_id": "occupation__y_",
      "disambiguation_index": 0,
      "label": "occupation (y)",
      "aliases": [
        "occupation (y)"
      ],
      "types": [
        "job",
        "profession"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A job or profession held by an individual, used as a piece of information to infer the likelihood of knowing other related facts.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "occupation (y)",
          "local_types": [
            "job",
            "profession"
          ],
          "iri": "Entity-occupation__y_-Mention-1"
        }
      ],
      "relevance": 0.4482421875
    },
    "Entity-it_mean_the_question_is_relevant_because_it_uncovers_some_missing_fact": {
      "node_id": "it_mean_the_question_is_relevant_because_it_uncovers_some_missing_fact",
      "disambiguation_index": 0,
      "label": "it means the question is relevant because it uncovers some missing fact",
      "aliases": [
        "it means the question is relevant because it uncovers some missing fact"
      ],
      "types": [
        "conclusion",
        "inference"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A test set in experimental settings, used to evaluate the relevance of generated questions and their ability to uncover missing facts.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-4-Sentence-2",
          "local_name": "it means the question is relevant because it uncovers some missing fact",
          "local_types": [
            "conclusion",
            "inference"
          ],
          "iri": "Entity-it_mean_the_question_is_relevant_because_it_uncovers_some_missing_fact-Mention-1"
        }
      ],
      "relevance": 0.447509765625
    },
    "Entity-the_frobenius_norm": {
      "node_id": "the_frobenius_norm",
      "disambiguation_index": 0,
      "label": "the Frobenius norm",
      "aliases": [
        "the Frobenius norm"
      ],
      "types": [
        "norm",
        "metric"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The Frobenius norm is a similarity function used in the co-occurrence fitness definition for open path rules, which measures the distance between two matrices by calculating their Euclidean norm.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "the Frobenius norm",
          "local_types": [
            "norm",
            "metric"
          ],
          "iri": "Entity-the_frobenius_norm-Mention-1"
        }
      ],
      "relevance": 0.447509765625
    },
    "Entity-minopsc": {
      "node_id": "minopsc",
      "disambiguation_index": 0,
      "label": "MinOPSC",
      "aliases": [
        "MinOPSC"
      ],
      "types": [
        "minimum value",
        "threshold"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Minimum OP Rule Score",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "MinOPSC",
          "local_types": [
            "minimum value",
            "threshold"
          ],
          "iri": "Entity-minopsc-Mention-1"
        }
      ],
      "relevance": 0.447265625
    },
    "Entity-head_with_one_free_variable": {
      "node_id": "head_with_one_free_variable",
      "disambiguation_index": 0,
      "label": "head with one free variable",
      "aliases": [
        "head with one free variable"
      ],
      "types": [
        "question",
        "query"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical formula that has a single unbound variable",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "head with one free variable",
          "local_types": [
            "question",
            "query"
          ],
          "iri": "Entity-head_with_one_free_variable-Mention-1"
        }
      ],
      "relevance": 0.447265625
    },
    "Entity-new_fact": {
      "node_id": "new_fact",
      "disambiguation_index": 0,
      "label": "new fact",
      "aliases": [
        "new fact",
        "new facts"
      ],
      "types": [
        "information",
        "data",
        "data generation",
        "data point",
        "information creation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A piece of previously unknown or unverified information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-5",
          "local_name": "new fact",
          "local_types": [
            "information",
            "data point"
          ],
          "iri": "Entity-new_fact-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-3",
          "local_name": "new facts",
          "local_types": [
            "information",
            "data",
            "information creation",
            "data generation"
          ],
          "iri": "Entity-new_fact-Mention-2"
        }
      ],
      "relevance": 0.447021484375
    },
    "Entity-an_industrial_application_of_a_link_prediction_model": {
      "node_id": "an_industrial_application_of_a_link_prediction_model",
      "disambiguation_index": 0,
      "label": "an industrial application of a link prediction model",
      "aliases": [
        "an industrial application of a link prediction model"
      ],
      "types": [
        "application",
        "link prediction model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A practical implementation or deployment of a link prediction algorithm for real-world use",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-1",
          "local_name": "an industrial application of a link prediction model",
          "local_types": [
            "application",
            "link prediction model"
          ],
          "iri": "Entity-an_industrial_application_of_a_link_prediction_model-Mention-1"
        }
      ],
      "relevance": 0.44677734375
    },
    "Entity-latent__unnamed_feature": {
      "node_id": "latent__unnamed_feature",
      "disambiguation_index": 0,
      "label": "latent, unnamed features",
      "aliases": [
        "latent, unnamed features"
      ],
      "types": [
        "mathematical concept",
        "computer science"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Unobservable or hidden characteristics that are inherent to an entity and cannot be directly identified by name.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-1",
          "local_name": "latent, unnamed features",
          "local_types": [
            "mathematical concept",
            "computer science"
          ],
          "iri": "Entity-latent__unnamed_feature-Mention-1"
        }
      ],
      "relevance": 0.446533203125
    },
    "Entity-a_query_with_one_correct_answer": {
      "node_id": "a_query_with_one_correct_answer",
      "disambiguation_index": 0,
      "label": "a query with one correct answer",
      "aliases": [
        "a query with one correct answer"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A type of query that has only one possible or correct answer.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-1",
          "local_name": "a query with one correct answer",
          "local_types": [
            "query"
          ],
          "iri": "Entity-a_query_with_one_correct_answer-Mention-1"
        }
      ],
      "relevance": 0.446533203125
    },
    "Entity-wikidata": {
      "node_id": "wikidata",
      "disambiguation_index": 0,
      "label": "Wikidata",
      "aliases": [
        "Wikidata"
      ],
      "types": [
        "database",
        "benchmark",
        "data repository",
        "data source",
        "dataset",
        "knowledge graph",
        "multilingual database",
        "project",
        "collaborative project",
        "wikibase",
        "data set",
        "repository",
        "information source",
        "knowledge base",
        "resource"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A collaborative project that provides a multilingual knowledge graph and data repository.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-1",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "dataset",
            "knowledge graph",
            "data set",
            "knowledge base"
          ],
          "iri": "Entity-wikidata-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-4",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "benchmark",
            "dataset",
            "knowledge graph",
            "multilingual database",
            "collaborative project",
            "resource"
          ],
          "iri": "Entity-wikidata-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-2",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "data repository",
            "dataset",
            "knowledge graph",
            "project",
            "wikibase",
            "information source",
            "knowledge base"
          ],
          "iri": "Entity-wikidata-Mention-3"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-1",
          "local_name": "Wikidata",
          "local_types": [
            "dataset",
            "knowledge graph",
            "repository",
            "information source",
            "knowledge base"
          ],
          "iri": "Entity-wikidata-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "Wikidata",
          "local_types": [
            "database",
            "dataset",
            "wikibase",
            "knowledge base",
            "data source"
          ],
          "iri": "Entity-wikidata-Mention-5"
        }
      ],
      "relevance": 0.446044921875
    },
    "Entity-held-out_fact": {
      "node_id": "held-out_fact",
      "disambiguation_index": 0,
      "label": "held-out facts",
      "aliases": [
        "held-out facts"
      ],
      "types": [
        "facts",
        "held_out_facts"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Facts that are not included in the training data of a link predictor, used as test cases for evaluating its performance.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-3",
          "local_name": "held-out facts",
          "local_types": [
            "facts",
            "held_out_facts"
          ],
          "iri": "Entity-held-out_fact-Mention-1"
        }
      ],
      "relevance": 0.446044921875
    },
    "Entity-method": {
      "node_id": "method",
      "disambiguation_index": 0,
      "label": "Methods",
      "aliases": [
        "method",
        "methods",
        "Methods"
      ],
      "types": [
        "concept",
        "approach",
        "computational process",
        "procedure",
        "algorithm",
        "method",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic procedure or approach used to achieve a specific goal or solve a problem.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-2",
          "local_name": "Methods",
          "local_types": [
            "method",
            "concept",
            "approach"
          ],
          "iri": "Entity-method-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-10-Sentence-2",
          "local_name": "method",
          "local_types": [
            "algorithm",
            "technique"
          ],
          "iri": "Entity-method-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-1",
          "local_name": "methods",
          "local_types": [
            "approach",
            "technique"
          ],
          "iri": "Entity-method-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-6",
          "local_name": "method",
          "local_types": [
            "algorithm",
            "procedure"
          ],
          "iri": "Entity-method-Mention-4"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-8",
          "local_name": "method",
          "local_types": [
            "algorithm",
            "technique"
          ],
          "iri": "Entity-method-Mention-5"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-1",
          "local_name": "method",
          "local_types": [
            "procedure",
            "computational process",
            "algorithm"
          ],
          "iri": "Entity-method-Mention-6"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-4",
          "local_name": "method",
          "local_types": [
            "approach",
            "technique"
          ],
          "iri": "Entity-method-Mention-7"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-1",
          "local_name": "method",
          "local_types": [
            "algorithm",
            "approach"
          ],
          "iri": "Entity-method-Mention-8"
        }
      ],
      "relevance": 0.44580078125
    },
    "Entity-p__e__e__": {
      "node_id": "p__e__e__",
      "disambiguation_index": 0,
      "label": "P(e, e')",
      "aliases": [
        "P(e, e')"
      ],
      "types": [
        "predicate logic",
        "mathematical notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A predicate logic expression representing an existential rule that relates two entities via a binary predicate.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "P(e, e')",
          "local_types": [
            "predicate logic",
            "mathematical notation"
          ],
          "iri": "Entity-p__e__e__-Mention-1"
        }
      ],
      "relevance": 0.44580078125
    },
    "Entity-p2": {
      "node_id": "p2",
      "disambiguation_index": 0,
      "label": "P2",
      "aliases": [
        "P2"
      ],
      "types": [
        "rule",
        "production rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A production rule",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "P2",
          "local_types": [
            "rule",
            "production rule"
          ],
          "iri": "Entity-p2-Mention-1"
        }
      ],
      "relevance": 0.44580078125
    },
    "Entity-pairwise_multiplication": {
      "node_id": "pairwise_multiplication",
      "disambiguation_index": 0,
      "label": "pairwise multiplication",
      "aliases": [
        "pairwise multiplication"
      ],
      "types": [
        "mathematical operation",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The combination or application of two mathematical operations in sequence to produce a new result.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-4",
          "local_name": "pairwise multiplication",
          "local_types": [
            "mathematical operation",
            "algorithm"
          ],
          "iri": "Entity-pairwise_multiplication-Mention-1"
        }
      ],
      "relevance": 0.44580078125
    },
    "Entity-e0": {
      "node_id": "e0",
      "disambiguation_index": 0,
      "label": "e0",
      "aliases": [
        "e0"
      ],
      "types": [
        "entity",
        "variable",
        "parameter",
        "object"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical variable or object used to represent an unknown value in a scoring function.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "e0",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-e0-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-7",
          "local_name": "e0",
          "local_types": [
            "entity",
            "object"
          ],
          "iri": "Entity-e0-Mention-2"
        }
      ],
      "relevance": 0.445556640625
    },
    "Entity-adjacency_matrix_representation": {
      "node_id": "adjacency_matrix_representation",
      "disambiguation_index": 0,
      "label": "adjacency matrix representation",
      "aliases": [
        "adjacency matrix representation"
      ],
      "types": [
        "representation",
        "format"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical structure used to represent relationships between entities or nodes, typically depicted as a square table with rows and columns corresponding to these nodes.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "adjacency matrix representation",
          "local_types": [
            "representation",
            "format"
          ],
          "iri": "Entity-adjacency_matrix_representation-Mention-1"
        }
      ],
      "relevance": 0.445556640625
    },
    "Entity-probabilistic_baseline": {
      "node_id": "probabilistic_baseline",
      "disambiguation_index": 0,
      "label": "probabilistic baseline",
      "aliases": [
        "probabilistic baseline"
      ],
      "types": [
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statistical method that uses probability theory to make predictions or classify data.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-8-Sentence-2",
          "local_name": "probabilistic baseline",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-probabilistic_baseline-Mention-1"
        }
      ],
      "relevance": 0.445556640625
    },
    "Entity-quality_rule": {
      "node_id": "quality_rule",
      "disambiguation_index": 0,
      "label": "quality rules",
      "aliases": [
        "quality rules"
      ],
      "types": [
        "knowledge base",
        "rules",
        "rule",
        "constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or standards that define acceptable levels of quality",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "quality rules",
          "local_types": [
            "knowledge base",
            "rules",
            "rule",
            "constraint"
          ],
          "iri": "Entity-quality_rule-Mention-1"
        }
      ],
      "relevance": 0.445556640625
    },
    "Entity-open_access_article": {
      "node_id": "open_access_article",
      "disambiguation_index": 0,
      "label": "open access article",
      "aliases": [
        "open access article",
        "an open access article"
      ],
      "types": [
        "open access",
        "publication",
        "academic work"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A scholarly publication that can be freely accessed, read, and shared by anyone without restrictions or financial barriers.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-5-Sentence-2",
          "local_name": "open access article",
          "local_types": [
            "publication",
            "academic work"
          ],
          "iri": "Entity-open_access_article-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-5-Sentence-2",
          "local_name": "an open access article",
          "local_types": [
            "publication",
            "open access"
          ],
          "iri": "Entity-open_access_article-Mention-2"
        }
      ],
      "relevance": 0.4453125
    },
    "Entity-oracle_or_a_human_expert": {
      "node_id": "oracle_or_a_human_expert",
      "disambiguation_index": 0,
      "label": "oracle or a human expert",
      "aliases": [
        "oracle or a human expert",
        "an oracle or a human expert"
      ],
      "types": [
        "expert",
        "authority",
        "oracle"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledgeable individual with expertise and authority, capable of providing informed answers or guidance.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "oracle or a human expert",
          "local_types": [
            "expert",
            "authority"
          ],
          "iri": "Entity-oracle_or_a_human_expert-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "an oracle or a human expert",
          "local_types": [
            "expert",
            "oracle"
          ],
          "iri": "Entity-oracle_or_a_human_expert-Mention-2"
        }
      ],
      "relevance": 0.44482421875
    },
    "Entity-e": {
      "node_id": "e",
      "disambiguation_index": 0,
      "label": "e",
      "aliases": [
        "e",
        "E"
      ],
      "types": [
        "mathematical entity",
        "variable",
        "term",
        "object",
        "collection",
        "concept",
        "placeholder",
        "entity",
        "data set",
        "notation",
        "symbol",
        "set of entities",
        "set",
        "identifier"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A unique identifier or placeholder representing an object, concept, or fact in a knowledge representation framework.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "e",
          "local_types": [
            "variable",
            "concept",
            "entity",
            "object",
            "identifier"
          ],
          "iri": "Entity-e-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-4",
          "local_name": "E",
          "local_types": [
            "collection",
            "set of entities",
            "set"
          ],
          "iri": "Entity-e-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "e",
          "local_types": [
            "variable",
            "placeholder"
          ],
          "iri": "Entity-e-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-3",
          "local_name": "e",
          "local_types": [
            "entity",
            "concept"
          ],
          "iri": "Entity-e-Mention-4"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-9",
          "local_name": "e",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-e-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-3",
          "local_name": "e",
          "local_types": [
            "notation",
            "symbol",
            "variable"
          ],
          "iri": "Entity-e-Mention-6"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-3",
          "local_name": "e",
          "local_types": [
            "variable",
            "symbol",
            "mathematical entity"
          ],
          "iri": "Entity-e-Mention-7"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-4",
          "local_name": "e",
          "local_types": [
            "entity",
            "concept"
          ],
          "iri": "Entity-e-Mention-8"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "E",
          "local_types": [
            "set of entities",
            "data set"
          ],
          "iri": "Entity-e-Mention-9"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "E",
          "local_types": [
            "set of entities"
          ],
          "iri": "Entity-e-Mention-10"
        },
        {
          "reference": "Section-8-Paragraph-3-Sentence-1",
          "local_name": "e",
          "local_types": [
            "variable",
            "term"
          ],
          "iri": "Entity-e-Mention-11"
        }
      ],
      "relevance": 0.4443359375
    },
    "Entity-scoring_function": {
      "node_id": "scoring_function",
      "disambiguation_index": 0,
      "label": "scoring function",
      "aliases": [
        "scoring function"
      ],
      "types": [
        "evaluation metric",
        "function",
        "mathematical concept",
        "concept",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept that assigns scores or values to inputs based on specific criteria, often used in evaluation metrics.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "scoring function",
          "local_types": [
            "algorithm",
            "mathematical concept"
          ],
          "iri": "Entity-scoring_function-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "scoring function",
          "local_types": [
            "function",
            "concept"
          ],
          "iri": "Entity-scoring_function-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-7",
          "local_name": "scoring function",
          "local_types": [
            "algorithm",
            "evaluation metric"
          ],
          "iri": "Entity-scoring_function-Mention-3"
        }
      ],
      "relevance": 0.4443359375
    },
    "Entity-our_system": {
      "node_id": "our_system",
      "disambiguation_index": 0,
      "label": "our system",
      "aliases": [
        "our system"
      ],
      "types": [
        "system",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or framework for processing and analyzing data",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-2",
          "local_name": "our system",
          "local_types": [
            "system",
            "methodology"
          ],
          "iri": "Entity-our_system-Mention-1"
        }
      ],
      "relevance": 0.444091796875
    },
    "Entity-a_shared_entity_in_place_of_z0": {
      "node_id": "a_shared_entity_in_place_of_z0",
      "disambiguation_index": 0,
      "label": "a shared entity in place of z0",
      "aliases": [
        "a shared entity in place of z0"
      ],
      "types": [
        "entity",
        "shared entity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A shared entity in place of z0 refers to an entity that satisfies both the subject and object arguments of a predicate, used as a connection point for entities along a path in open-path rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "a shared entity in place of z0",
          "local_types": [
            "entity",
            "shared entity"
          ],
          "iri": "Entity-a_shared_entity_in_place_of_z0-Mention-1"
        }
      ],
      "relevance": 0.444091796875
    },
    "Entity-_p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__": {
      "node_id": "_p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__",
      "disambiguation_index": 0,
      "label": "{P1(e1, e2), P1(e2, e1), P1(e2, e3), P1(e3, e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}",
      "aliases": [
        "{P1(e1, e2), P1(e2, e1), P1(e2, e3), P1(e3, e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}"
      ],
      "types": [
        "relation",
        "mathematical entity"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A binary relation between entities",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "{P1(e1, e2), P1(e2, e1), P1(e2, e3), P1(e3, e1), P2(e1, e2), P2(e3, e2), P2(e3, e3), P1(e1, e3)}",
          "local_types": [
            "relation",
            "mathematical entity"
          ],
          "iri": "Entity-_p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__-Mention-1"
        }
      ],
      "relevance": 0.443603515625
    },
    "Entity-adjacency_matrix": {
      "node_id": "adjacency_matrix",
      "disambiguation_index": 0,
      "label": "adjacency matrix",
      "aliases": [
        "adjacency matrix"
      ],
      "types": [
        "mathematical concept",
        "mathematics",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A square table that represents relationships between elements in a set or graph",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "adjacency matrix",
          "local_types": [
            "mathematical concept",
            "mathematics",
            "data structure"
          ],
          "iri": "Entity-adjacency_matrix-Mention-1"
        }
      ],
      "relevance": 0.443603515625
    },
    "Entity-e_7": {
      "node_id": "e_7",
      "disambiguation_index": 0,
      "label": "e_7",
      "aliases": [
        "e_7"
      ],
      "types": [
        "variable",
        "argument",
        "entity",
        "unknown entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of facts about predicate P_1 including {P_1(e_1, e_2), P_1(e_1, e_3), P_1(e_4, e_5), P_1(e_8, e_7), P_1(e_9, e_7)}",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "e_7",
          "local_types": [
            "variable",
            "argument"
          ],
          "iri": "Entity-e_7-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "e_7",
          "local_types": [
            "variable",
            "entity",
            "unknown entity"
          ],
          "iri": "Entity-e_7-Mention-2"
        }
      ],
      "relevance": 0.443603515625
    },
    "Entity-the_form_p__e__e__": {
      "node_id": "the_form_p__e__e__",
      "disambiguation_index": 0,
      "label": "the form P(e, e')",
      "aliases": [
        "the form P(e, e')"
      ],
      "types": [
        "notation",
        "mathematical concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The notation 'the form P(e, e')' represents a mathematical concept for expressing RDF triples as binary predicates between entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "the form P(e, e')",
          "local_types": [
            "notation",
            "mathematical concept"
          ],
          "iri": "Entity-the_form_p__e__e__-Mention-1"
        }
      ],
      "relevance": 0.443603515625
    },
    "Entity-z3": {
      "node_id": "z3",
      "disambiguation_index": 0,
      "label": "z3",
      "aliases": [
        "z3"
      ],
      "types": [
        "variable",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A variable or parameter used to represent a value or input in an algorithm or program.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "z3",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-z3-Mention-1"
        }
      ],
      "relevance": 0.443359375
    },
    "Entity-f1": {
      "node_id": "f1",
      "disambiguation_index": 0,
      "label": "F1",
      "aliases": [
        "F1"
      ],
      "types": [
        "evaluation metric",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of model performance that combines precision and recall.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "F1",
          "local_types": [
            "evaluation metric",
            "metric"
          ],
          "iri": "Entity-f1-Mention-1"
        }
      ],
      "relevance": 0.44287109375
    },
    "Entity-implication_arrow": {
      "node_id": "implication_arrow",
      "disambiguation_index": 0,
      "label": "implication arrow",
      "aliases": [
        "implication arrow"
      ],
      "types": [
        "symbol",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A graphical symbol used to represent logical implications or conditional relationships between statements.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "implication arrow",
          "local_types": [
            "symbol",
            "notation"
          ],
          "iri": "Entity-implication_arrow-Mention-1"
        }
      ],
      "relevance": 0.4423828125
    },
    "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r__denoted_body_r__e__e__": {
      "node_id": "a_pair_of_entity__e__e___satisfies_the_body_of_r__denoted_body_r__e__e__",
      "disambiguation_index": 0,
      "label": "a pair of entities (e, e') satisfies the body of r, denoted body_r(e, e')",
      "aliases": [
        "a pair of entities (e, e') satisfies the body of r, denoted body_r(e, e')"
      ],
      "types": [
        "mathematical concept",
        "logical statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of entities that satisfies a logical statement's body",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "a pair of entities (e, e') satisfies the body of r, denoted body_r(e, e')",
          "local_types": [
            "mathematical concept",
            "logical statement"
          ],
          "iri": "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r__denoted_body_r__e__e__-Mention-1"
        }
      ],
      "relevance": 0.4423828125
    },
    "Entity-maximum_rule_length": {
      "node_id": "maximum_rule_length",
      "disambiguation_index": 0,
      "label": "maximum rule length",
      "aliases": [
        "maximum rule length"
      ],
      "types": [
        "setting",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The longest possible size or extent of a set of rules",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-1",
          "local_name": "maximum rule length",
          "local_types": [
            "setting",
            "parameter"
          ],
          "iri": "Entity-maximum_rule_length-Mention-1"
        }
      ],
      "relevance": 0.4423828125
    },
    "Entity-or_absent_from_it": {
      "node_id": "or_absent_from_it",
      "disambiguation_index": 0,
      "label": "or absent from it",
      "aliases": [
        "or absent from it"
      ],
      "types": [
        "absence"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A missing fact that may involve entities not yet recorded in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-6",
          "local_name": "or absent from it",
          "local_types": [
            "absence"
          ],
          "iri": "Entity-or_absent_from_it-Mention-1"
        }
      ],
      "relevance": 0.4423828125
    },
    "Entity-head_of_the_rule": {
      "node_id": "head_of_the_rule",
      "disambiguation_index": 0,
      "label": "head of the rule",
      "aliases": [
        "head of the rule"
      ],
      "types": [
        "logical conclusion",
        "mathematical statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The logical conclusion or mathematical statement that follows from applying a given set of rules.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "head of the rule",
          "local_types": [
            "logical conclusion",
            "mathematical statement"
          ],
          "iri": "Entity-head_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.442138671875
    },
    "Entity-weight_matrix": {
      "node_id": "weight_matrix",
      "disambiguation_index": 0,
      "label": "weight matrices",
      "aliases": [
        "weight matrices"
      ],
      "types": [
        "matrix algebra",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical representation of numerical values used to perform calculations or transformations, typically represented as a two-dimensional array.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "weight matrices",
          "local_types": [
            "matrix algebra",
            "data structure"
          ],
          "iri": "Entity-weight_matrix-Mention-1"
        }
      ],
      "relevance": 0.44189453125
    },
    "Entity-matrix": {
      "node_id": "matrix",
      "disambiguation_index": 0,
      "label": "matrix",
      "aliases": [
        "matrix"
      ],
      "types": [
        "mathematical concept",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical construct or data structure consisting of a rectangular array of numbers, symbols, or expressions.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-18",
          "local_name": "matrix",
          "local_types": [
            "mathematical concept",
            "data structure"
          ],
          "iri": "Entity-matrix-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-6-Sentence-2",
          "local_name": "matrix",
          "local_types": [
            "mathematical concept",
            "data structure"
          ],
          "iri": "Entity-matrix-Mention-2"
        }
      ],
      "relevance": 0.44189453125
    },
    "Entity-automated_link_predictor": {
      "node_id": "automated_link_predictor",
      "disambiguation_index": 0,
      "label": "automated link predictor",
      "aliases": [
        "automated link predictor"
      ],
      "types": [
        "algorithm",
        "tool"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software tool or algorithm that predicts links between entities.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "automated link predictor",
          "local_types": [
            "algorithm",
            "tool"
          ],
          "iri": "Entity-automated_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.441650390625
    },
    "Entity-the_query_themselves": {
      "node_id": "the_query_themselves",
      "disambiguation_index": 0,
      "label": "the queries themselves",
      "aliases": [
        "the queries themselves"
      ],
      "types": [
        "queries"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of questions or inquiries",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-1",
          "local_name": "the queries themselves",
          "local_types": [
            "queries"
          ],
          "iri": "Entity-the_query_themselves-Mention-1"
        }
      ],
      "relevance": 0.441650390625
    },
    "Entity-tail_predicate__p_n": {
      "node_id": "tail_predicate__p_n",
      "disambiguation_index": 0,
      "label": "tail predicate, P_n",
      "aliases": [
        "tail predicate, P_n"
      ],
      "types": [
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A function or relation that takes one or more arguments and returns an object or value",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "tail predicate, P_n",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-tail_predicate__p_n-Mention-1"
        }
      ],
      "relevance": 0.44140625
    },
    "Entity-latent_feature": {
      "node_id": "latent_feature",
      "disambiguation_index": 0,
      "label": "latent features",
      "aliases": [
        "latent features"
      ],
      "types": [
        "conceptual framework",
        "abstract representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of abstract representations or characteristics that are not directly observable but can be inferred or implied.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-3",
          "local_name": "latent features",
          "local_types": [
            "conceptual framework",
            "abstract representation"
          ],
          "iri": "Entity-latent_feature-Mention-1"
        }
      ],
      "relevance": 0.44140625
    },
    "Entity-test_set": {
      "node_id": "test_set",
      "disambiguation_index": 0,
      "label": "test set",
      "aliases": [
        "test set"
      ],
      "types": [
        "evaluation metric",
        "evaluation benchmark",
        "data collection",
        "dataset",
        "collection of data",
        "collection",
        "evaluation data",
        "evaluation dataset"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of data used to evaluate or benchmark the performance of a system, model, or algorithm.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-4-Sentence-2",
          "local_name": "test set",
          "local_types": [
            "dataset",
            "collection"
          ],
          "iri": "Entity-test_set-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "test set",
          "local_types": [
            "dataset",
            "data collection",
            "collection of data",
            "evaluation dataset"
          ],
          "iri": "Entity-test_set-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "test set",
          "local_types": [
            "dataset",
            "evaluation metric",
            "evaluation benchmark"
          ],
          "iri": "Entity-test_set-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-6-Sentence-1",
          "local_name": "test set",
          "local_types": [
            "dataset",
            "evaluation data"
          ],
          "iri": "Entity-test_set-Mention-4"
        }
      ],
      "relevance": 0.44140625
    },
    "Entity-_e_3__e_4__e_5_": {
      "node_id": "_e_3__e_4__e_5_",
      "disambiguation_index": 0,
      "label": "{e_3, e_4, e_5}",
      "aliases": [
        "{e_3, e_4, e_5}"
      ],
      "types": [
        "entities",
        "mathematical concepts",
        "set"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The three entities {e_3, e_4, e_5} that can instantiate z0 to satisfy both P1(x, z0) and P2(z0, z1) \u2227 P3(z1, y).",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-2",
          "local_name": "{e_3, e_4, e_5}",
          "local_types": [
            "entities",
            "mathematical concepts",
            "set"
          ],
          "iri": "Entity-_e_3__e_4__e_5_-Mention-1"
        }
      ],
      "relevance": 0.44091796875
    },
    "Entity-if_we_find_a_good_rule": {
      "node_id": "if_we_find_a_good_rule",
      "disambiguation_index": 0,
      "label": "If we find a good rule",
      "aliases": [
        "If we find a good rule"
      ],
      "types": [
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A condition for extending an OP rule about a specific target predicate",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-14",
          "local_name": "If we find a good rule",
          "local_types": [
            "condition"
          ],
          "iri": "Entity-if_we_find_a_good_rule-Mention-1"
        }
      ],
      "relevance": 0.440673828125
    },
    "Entity-p_n": {
      "node_id": "p_n",
      "disambiguation_index": 0,
      "label": "P_n",
      "aliases": [
        "P_n"
      ],
      "types": [
        "linear algebra",
        "variable",
        "function",
        "predicate",
        "matrix"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function or predicate that takes one or more variables as input and produces an output.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P_n",
          "local_types": [
            "function"
          ],
          "iri": "Entity-p_n-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "P_n",
          "local_types": [
            "predicate",
            "variable",
            "function"
          ],
          "iri": "Entity-p_n-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "P_n",
          "local_types": [
            "linear algebra",
            "matrix"
          ],
          "iri": "Entity-p_n-Mention-3"
        }
      ],
      "relevance": 0.4404296875
    },
    "Entity-four_benchmark_datasets_given_in_table_1": {
      "node_id": "four_benchmark_datasets_given_in_table_1",
      "disambiguation_index": 0,
      "label": "four benchmark datasets given in Table 1",
      "aliases": [
        "four benchmark datasets given in Table 1"
      ],
      "types": [
        "dataset",
        "benchmark"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of standardized data sets used to evaluate and compare performance.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-1",
          "local_name": "four benchmark datasets given in Table 1",
          "local_types": [
            "dataset",
            "benchmark"
          ],
          "iri": "Entity-four_benchmark_datasets_given_in_table_1-Mention-1"
        }
      ],
      "relevance": 0.4404296875
    },
    "Entity-this_vector": {
      "node_id": "this_vector",
      "disambiguation_index": 0,
      "label": "this vector",
      "aliases": [
        "this vector"
      ],
      "types": [
        "mathematical object",
        "vector",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical object representing a set of values or quantities, typically represented as an ordered list of numbers.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-2",
          "local_name": "this vector",
          "local_types": [
            "mathematical object",
            "vector",
            "data structure"
          ],
          "iri": "Entity-this_vector-Mention-1"
        }
      ],
      "relevance": 0.440185546875
    },
    "Entity-solution": {
      "node_id": "solution",
      "disambiguation_index": 0,
      "label": "solution",
      "aliases": [
        "solution"
      ],
      "types": [
        "research outcome",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A proposed approach or strategy for addressing a particular problem or challenge.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-6",
          "local_name": "solution",
          "local_types": [
            "research outcome",
            "methodology"
          ],
          "iri": "Entity-solution-Mention-1"
        }
      ],
      "relevance": 0.43994140625
    },
    "Entity-definition_4": {
      "node_id": "definition_4",
      "disambiguation_index": 0,
      "label": "Definition 4",
      "aliases": [
        "Definition 4"
      ],
      "types": [
        "concept definition",
        "definition",
        "concept",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual definition or notation that provides an explanation of a concept or entity within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "Definition 4",
          "local_types": [
            "concept definition",
            "definition",
            "concept",
            "notation"
          ],
          "iri": "Entity-definition_4-Mention-1"
        }
      ],
      "relevance": 0.43994140625
    },
    "Entity-unified_framework": {
      "node_id": "unified_framework",
      "disambiguation_index": 0,
      "label": "unified framework",
      "aliases": [
        "unified framework"
      ],
      "types": [
        "methodology",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic and comprehensive approach or methodology that integrates multiple components or techniques to achieve a common goal.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-3",
          "local_name": "unified framework",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-unified_framework-Mention-1"
        }
      ],
      "relevance": 0.43994140625
    },
    "Entity-to_obtain_the_vector_v__1___b_": {
      "node_id": "to_obtain_the_vector_v__1___b_",
      "disambiguation_index": 0,
      "label": "to obtain the vector v(1)(B)",
      "aliases": [
        "to obtain the vector v(1)(B)"
      ],
      "types": [
        "equation",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical operation or equation that generates a specific numerical representation.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-3",
          "local_name": "to obtain the vector v(1)(B)",
          "local_types": [
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-to_obtain_the_vector_v__1___b_-Mention-1"
        }
      ],
      "relevance": 0.439697265625
    },
    "Entity-entity_that_satisfy_the_first_argument_of_the_body": {
      "node_id": "entity_that_satisfy_the_first_argument_of_the_body",
      "disambiguation_index": 0,
      "label": "entities that satisfy the first argument of the body",
      "aliases": [
        "entities that satisfy the first argument of the body"
      ],
      "types": [
        "entity",
        "argument",
        "body"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Entities that are arguments to atoms in the body of a rule, satisfying certain conditions.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-3",
          "local_name": "entities that satisfy the first argument of the body",
          "local_types": [
            "entity",
            "argument",
            "body"
          ],
          "iri": "Entity-entity_that_satisfy_the_first_argument_of_the_body-Mention-1"
        }
      ],
      "relevance": 0.439453125
    },
    "Entity-the_answer_fact_are_missing_from_the_training_set": {
      "node_id": "the_answer_fact_are_missing_from_the_training_set",
      "disambiguation_index": 0,
      "label": "the answer facts are missing from the training set",
      "aliases": [
        "the answer facts are missing from the training set"
      ],
      "types": [
        "missing_fact",
        "fact",
        "training data"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept refers to a query that has an instance fact present only in the test data, but not in the training set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-6-Sentence-2",
          "local_name": "the answer facts are missing from the training set",
          "local_types": [
            "missing_fact",
            "fact",
            "training data"
          ],
          "iri": "Entity-the_answer_fact_are_missing_from_the_training_set-Mention-1"
        }
      ],
      "relevance": 0.439208984375
    },
    "Entity-noisy-or": {
      "node_id": "noisy-or",
      "disambiguation_index": 0,
      "label": "Noisy-OR",
      "aliases": [
        "Noisy-OR"
      ],
      "types": [
        "operator",
        "approach",
        "technique",
        "mathematical function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A probabilistic operator or approach used to combine multiple binary outputs into a single output, often incorporating noise or uncertainty.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-6",
          "local_name": "Noisy-OR",
          "local_types": [
            "technique",
            "approach"
          ],
          "iri": "Entity-noisy-or-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-7",
          "local_name": "Noisy-OR",
          "local_types": [
            "operator",
            "mathematical function"
          ],
          "iri": "Entity-noisy-or-Mention-2"
        }
      ],
      "relevance": 0.43896484375
    },
    "Entity-p_1__...__p_n": {
      "node_id": "p_1__...__p_n",
      "disambiguation_index": 0,
      "label": "P_1, ..., P_n",
      "aliases": [
        "P_1, ..., P_n"
      ],
      "types": [
        "predicates",
        "body",
        "variables"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A predicate or set of predicates in a logical rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "P_1, ..., P_n",
          "local_types": [
            "predicates",
            "body",
            "variables"
          ],
          "iri": "Entity-p_1__...__p_n-Mention-1"
        }
      ],
      "relevance": 0.43896484375
    },
    "Entity-maximum_length_of_rule": {
      "node_id": "maximum_length_of_rule",
      "disambiguation_index": 0,
      "label": "maximum length of rules",
      "aliases": [
        "maximum length of rules"
      ],
      "types": [
        "limit",
        "threshold"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The uppermost boundary or restriction on the number of rules that can be applied.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "maximum length of rules",
          "local_types": [
            "limit",
            "threshold"
          ],
          "iri": "Entity-maximum_length_of_rule-Mention-1"
        }
      ],
      "relevance": 0.43896484375
    },
    "Entity-they_complement_each_other": {
      "node_id": "they_complement_each_other",
      "disambiguation_index": 0,
      "label": "they complement each other",
      "aliases": [
        "they complement each other"
      ],
      "types": [
        "phenomenon",
        "concept",
        "relationship"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of entities or concepts with interconnected properties or characteristics.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-2",
          "local_name": "they complement each other",
          "local_types": [
            "phenomenon",
            "concept",
            "relationship"
          ],
          "iri": "Entity-they_complement_each_other-Mention-1"
        }
      ],
      "relevance": 0.43896484375
    },
    "Entity-held_back_from_training_data_for_a_link_predictor": {
      "node_id": "held_back_from_training_data_for_a_link_predictor",
      "disambiguation_index": 0,
      "label": "held back from training data for a link predictor",
      "aliases": [
        "held back from training data for a link predictor"
      ],
      "types": [
        "constraint",
        "link prediction constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The constraint that prevents certain facts (e.g., 'presidentOf(Obama, USA)') from being used to train a link predictor.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-2",
          "local_name": "held back from training data for a link predictor",
          "local_types": [
            "constraint",
            "link prediction constraint"
          ],
          "iri": "Entity-held_back_from_training_data_for_a_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.438720703125
    },
    "Entity-inference": {
      "node_id": "inference",
      "disambiguation_index": 0,
      "label": "inference",
      "aliases": [
        "inference"
      ],
      "types": [
        "process",
        "logical reasoning"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process or act of drawing a conclusion based on available information and logical reasoning.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "inference",
          "local_types": [
            "process",
            "logical reasoning"
          ],
          "iri": "Entity-inference-Mention-1"
        }
      ],
      "relevance": 0.4384765625
    },
    "Entity-fitness_function": {
      "node_id": "fitness_function",
      "disambiguation_index": 0,
      "label": "fitness function",
      "aliases": [
        "fitness functions",
        "fitness function"
      ],
      "types": [
        "methodology",
        "quality measure",
        "evaluation metric",
        "function",
        "mathematical concept",
        "evaluation metrics",
        "performance measure",
        "optimization methods",
        "optimization technique",
        "concept",
        "algorithmic component",
        "fitness function",
        "mathematical function",
        "algorithm",
        "optimization criterion"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept used to evaluate or measure the quality of something.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "fitness function",
          "local_types": [
            "evaluation metric",
            "algorithmic component"
          ],
          "iri": "Entity-fitness_function-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-11",
          "local_name": "fitness function",
          "local_types": [
            "algorithm"
          ],
          "iri": "Entity-fitness_function-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "fitness functions",
          "local_types": [
            "methodology",
            "evaluation metric",
            "quality measure",
            "algorithm"
          ],
          "iri": "Entity-fitness_function-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-1",
          "local_name": "fitness functions",
          "local_types": [
            "optimization methods",
            "evaluation metrics"
          ],
          "iri": "Entity-fitness_function-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-3",
          "local_name": "fitness functions",
          "local_types": [
            "evaluation metric",
            "function",
            "fitness function",
            "algorithm"
          ],
          "iri": "Entity-fitness_function-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-4",
          "local_name": "fitness function",
          "local_types": [
            "mathematical concept",
            "algorithm"
          ],
          "iri": "Entity-fitness_function-Mention-6"
        },
        {
          "reference": "Section-9-Paragraph-12-Sentence-2",
          "local_name": "fitness function",
          "local_types": [
            "optimization criterion",
            "evaluation metric",
            "optimization technique"
          ],
          "iri": "Entity-fitness_function-Mention-7"
        },
        {
          "reference": "Section-10-Paragraph-1-Sentence-2",
          "local_name": "fitness functions",
          "local_types": [
            "performance measure",
            "methodology",
            "evaluation metric",
            "concept"
          ],
          "iri": "Entity-fitness_function-Mention-8"
        },
        {
          "reference": "Section-10-Paragraph-8-Sentence-1",
          "local_name": "fitness functions",
          "local_types": [
            "performance measure",
            "evaluation metric",
            "mathematical function",
            "algorithm"
          ],
          "iri": "Entity-fitness_function-Mention-9"
        }
      ],
      "relevance": 0.438232421875
    },
    "Entity-head_coverage__hc_": {
      "node_id": "head_coverage__hc_",
      "disambiguation_index": 0,
      "label": "head coverage (HC)",
      "aliases": [
        "head coverage (HC)"
      ],
      "types": [
        "measure",
        "abbreviation",
        "term",
        "metric"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A measure or metric that represents the proportion of a population's heads covered by a particular entity, such as a hat or hairstyle.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "head coverage (HC)",
          "local_types": [
            "measure",
            "abbreviation",
            "term",
            "metric"
          ],
          "iri": "Entity-head_coverage__hc_-Mention-1"
        }
      ],
      "relevance": 0.43798828125
    },
    "Entity-the_implication_arrow": {
      "node_id": "the_implication_arrow",
      "disambiguation_index": 0,
      "label": "the implication arrow",
      "aliases": [
        "the implication arrow"
      ],
      "types": [
        "symbolic representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A graphical symbol representing logical inference or consequence",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "the implication arrow",
          "local_types": [
            "symbolic representation"
          ],
          "iri": "Entity-the_implication_arrow-Mention-1"
        }
      ],
      "relevance": 0.43798828125
    },
    "Entity-argument": {
      "node_id": "argument",
      "disambiguation_index": 0,
      "label": "arguments",
      "aliases": [
        "arguments",
        "argument"
      ],
      "types": [
        "variable",
        "concept",
        "parameter",
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point or proposition presented to support or justify a claim",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "arguments",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-argument-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "argument",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-argument-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "argument",
          "local_types": [
            "concept",
            "variable"
          ],
          "iri": "Entity-argument-Mention-3"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-5",
          "local_name": "argument",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-argument-Mention-4"
        }
      ],
      "relevance": 0.437744140625
    },
    "Entity-sim": {
      "node_id": "sim",
      "disambiguation_index": 0,
      "label": "sim",
      "aliases": [
        "sim"
      ],
      "types": [
        "name",
        "variable",
        "function",
        "mathematical concept",
        "algorithm",
        "mathematical operation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical function or operation that calculates a similarity measure between two input matrices.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-2",
          "local_name": "sim",
          "local_types": [
            "mathematical operation",
            "function",
            "mathematical concept"
          ],
          "iri": "Entity-sim-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "sim",
          "local_types": [
            "variable",
            "function",
            "name",
            "algorithm"
          ],
          "iri": "Entity-sim-Mention-2"
        }
      ],
      "relevance": 0.4375
    },
    "Entity-test_and_training_set_are_available": {
      "node_id": "test_and_training_set_are_available",
      "disambiguation_index": 0,
      "label": "test and training sets are available",
      "aliases": [
        "test and training sets are available"
      ],
      "types": [
        "data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The dataset for Facebook 15k Entity Set (FB15KSE) that contains both a test set and a training set.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-2",
          "local_name": "test and training sets are available",
          "local_types": [
            "data"
          ],
          "iri": "Entity-test_and_training_set_are_available-Mention-1"
        }
      ],
      "relevance": 0.4375
    },
    "Entity-e2": {
      "node_id": "e2",
      "disambiguation_index": 0,
      "label": "e2",
      "aliases": [
        "e2"
      ],
      "types": [
        "mathematical entity",
        "variable",
        "concept",
        "idea"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or variable representing an abstract idea.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-7",
          "local_name": "e2",
          "local_types": [
            "mathematical entity",
            "variable"
          ],
          "iri": "Entity-e2-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-7-Sentence-4",
          "local_name": "e2",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-e2-Mention-2"
        }
      ],
      "relevance": 0.43701171875
    },
    "Entity-to_find_distinct_entity": {
      "node_id": "to_find_distinct_entity",
      "disambiguation_index": 0,
      "label": "to find distinct entities",
      "aliases": [
        "to find distinct entities",
        "To find distinct entities"
      ],
      "types": [
        "task",
        "statement",
        "phrase",
        "goal",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The objective or goal of identifying unique or separate things.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "to find distinct entities",
          "local_types": [
            "task",
            "goal"
          ],
          "iri": "Entity-to_find_distinct_entity-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-6-Sentence-3",
          "local_name": "To find distinct entities",
          "local_types": [
            "method",
            "phrase",
            "statement"
          ],
          "iri": "Entity-to_find_distinct_entity-Mention-2"
        }
      ],
      "relevance": 0.43701171875
    },
    "Entity-this_rule": {
      "node_id": "this_rule",
      "disambiguation_index": 0,
      "label": "This rule",
      "aliases": [
        "This rule"
      ],
      "types": [
        "rule",
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A principle or guideline governing behavior or decision-making",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "This rule",
          "local_types": [
            "rule",
            "statement"
          ],
          "iri": "Entity-this_rule-Mention-1"
        }
      ],
      "relevance": 0.4365234375
    },
    "Entity-based_on_the_test_fact": {
      "node_id": "based_on_the_test_fact",
      "disambiguation_index": 0,
      "label": "based on the test facts",
      "aliases": [
        "based on the test facts"
      ],
      "types": [
        "basis",
        "facts"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept or method used to assess whether generated questions are relevant, by comparing them with known answers from a test set.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-4-Sentence-1",
          "local_name": "based on the test facts",
          "local_types": [
            "basis",
            "facts"
          ],
          "iri": "Entity-based_on_the_test_fact-Mention-1"
        }
      ],
      "relevance": 0.4365234375
    },
    "Entity-_p1__...__pm_": {
      "node_id": "_p1__...__pm_",
      "disambiguation_index": 0,
      "label": "{P1,...,Pm}",
      "aliases": [
        "{P1,...,Pm}"
      ],
      "types": [
        "set",
        "collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "{P1,...,Pm}",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-_p1__...__pm_-Mention-1"
        }
      ],
      "relevance": 0.436279296875
    },
    "Entity-_p__a_": {
      "node_id": "_p__a_",
      "disambiguation_index": 0,
      "label": "(P, A)",
      "aliases": [
        "(P, A)"
      ],
      "types": [
        "concept-concept pair",
        "predicate-argument pair",
        "tuple",
        "notation",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept pair consisting of a predicate and an argument.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-6",
          "local_name": "(P, A)",
          "local_types": [
            "concept-concept pair",
            "predicate-argument pair",
            "tuple",
            "notation",
            "mathematical expression"
          ],
          "iri": "Entity-_p__a_-Mention-1"
        }
      ],
      "relevance": 0.43603515625
    },
    "Entity-aggregation": {
      "node_id": "aggregation",
      "disambiguation_index": 0,
      "label": "aggregation",
      "aliases": [
        "aggregation"
      ],
      "types": [
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or grouping of individual elements, often used to represent a summary or total value.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-5",
          "local_name": "aggregation",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-aggregation-Mention-1"
        }
      ],
      "relevance": 0.43603515625
    },
    "Entity-heuristic_function": {
      "node_id": "heuristic_function",
      "disambiguation_index": 0,
      "label": "heuristic function",
      "aliases": [
        "heuristic function"
      ],
      "types": [
        "function",
        "evaluation metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical formula or algorithm used to evaluate or make decisions based on certain criteria.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-3",
          "local_name": "heuristic function",
          "local_types": [
            "function",
            "evaluation metric"
          ],
          "iri": "Entity-heuristic_function-Mention-1"
        }
      ],
      "relevance": 0.435791015625
    },
    "Entity-each_card_is_described_using_two_attribute__suit_and_rank___for_a_total_of_10_predictive_attribute": {
      "node_id": "each_card_is_described_using_two_attribute__suit_and_rank___for_a_total_of_10_predictive_attribute",
      "disambiguation_index": 0,
      "label": "each card is described using two attributes (suit and rank), for a total of 10 predictive attributes",
      "aliases": [
        "a total of 10 predictive attributes",
        "each card is described using two attributes (suit and rank), for a total of 10 predictive attributes"
      ],
      "types": [
        "predictive attribute",
        "attributes",
        "attribute"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A playing card in the Poker dataset, characterized by its suit and rank, with 10 predictive attributes.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-3",
          "local_name": "each card is described using two attributes (suit and rank), for a total of 10 predictive attributes",
          "local_types": [
            "attribute",
            "predictive attribute"
          ],
          "iri": "Entity-each_card_is_described_using_two_attribute__suit_and_rank___for_a_total_of_10_predictive_attribute-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-10-Sentence-3",
          "local_name": "a total of 10 predictive attributes",
          "local_types": [
            "attributes"
          ],
          "iri": "Entity-each_card_is_described_using_two_attribute__suit_and_rank___for_a_total_of_10_predictive_attribute-Mention-2"
        }
      ],
      "relevance": 0.435791015625
    },
    "Entity-e___e1__e2__e3_": {
      "node_id": "e___e1__e2__e3_",
      "disambiguation_index": 0,
      "label": "E = {e1, e2, e3}",
      "aliases": [
        "E = {e1, e2, e3}"
      ],
      "types": [
        "set",
        "collection"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of entities E = {e1, e2, e3} and their corresponding facts F.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "E = {e1, e2, e3}",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-e___e1__e2__e3_-Mention-1"
        }
      ],
      "relevance": 0.435546875
    },
    "Entity-these_parameter_are_the_optimum_obtained_by_tuning_.": {
      "node_id": "these_parameter_are_the_optimum_obtained_by_tuning_.",
      "disambiguation_index": 0,
      "label": "These parameters are the optimum obtained by tuning.",
      "aliases": [
        "These parameters are the optimum obtained by tuning."
      ],
      "types": [
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of values that have been optimized through a process of adjustment or fine-tuning.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-2",
          "local_name": "These parameters are the optimum obtained by tuning.",
          "local_types": [
            "parameter"
          ],
          "iri": "Entity-these_parameter_are_the_optimum_obtained_by_tuning_.-Mention-1"
        }
      ],
      "relevance": 0.435546875
    },
    "Entity-fb15k_selected__which_we_call_fb15kse_": {
      "node_id": "fb15k_selected__which_we_call_fb15kse_",
      "disambiguation_index": 0,
      "label": "FB15K SELECTED (which we call FB15KSE)",
      "aliases": [
        "FB15K SELECTED (which we call FB15KSE)"
      ],
      "types": [
        "dataset",
        "benchmark",
        "entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A dataset derived from Freebase, widely adopted for link prediction.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-2",
          "local_name": "FB15K SELECTED (which we call FB15KSE)",
          "local_types": [
            "dataset",
            "benchmark",
            "entity"
          ],
          "iri": "Entity-fb15k_selected__which_we_call_fb15kse_-Mention-1"
        }
      ],
      "relevance": 0.435302734375
    },
    "Entity-figure_1": {
      "node_id": "figure_1",
      "disambiguation_index": 0,
      "label": "Figure 1",
      "aliases": [
        "Figure 1",
        "Figure 2"
      ],
      "types": [
        "visualisation",
        "illustration",
        "graphical representation",
        "visual representation",
        "image",
        "figure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A graphical representation or image that illustrates a concept, data, or idea.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-1",
          "local_name": "Figure 1",
          "local_types": [
            "illustration",
            "image",
            "graphical representation",
            "figure"
          ],
          "iri": "Entity-figure_1-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "Figure 2",
          "local_types": [
            "visualisation",
            "graphical representation",
            "visual representation",
            "image",
            "figure"
          ],
          "iri": "Entity-figure_1-Mention-2"
        }
      ],
      "relevance": 0.43505859375
    },
    "Entity-initial_set_of_fact": {
      "node_id": "initial_set_of_fact",
      "disambiguation_index": 0,
      "label": "initial set of facts",
      "aliases": [
        "initial set of facts"
      ],
      "types": [
        "data",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of fundamental data or information that serves as a starting point for further processing, analysis, or decision-making.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-3",
          "local_name": "initial set of facts",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-initial_set_of_fact-Mention-1"
        }
      ],
      "relevance": 0.434814453125
    },
    "Entity-random.org_to_select_20_random_predicate_from_fb15kse": {
      "node_id": "random.org_to_select_20_random_predicate_from_fb15kse",
      "disambiguation_index": 0,
      "label": "random.org to select 20 random predicates from FB15KSE",
      "aliases": [
        "random.org to select 20 random predicates from FB15KSE"
      ],
      "types": [
        "dataset",
        "tool",
        "predicate selection tool"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A tool used to randomly select 20 predicates from the FB15KSE dataset for evaluating fitness functions and mining quality rules.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-1",
          "local_name": "random.org to select 20 random predicates from FB15KSE",
          "local_types": [
            "dataset",
            "tool",
            "predicate selection tool"
          ],
          "iri": "Entity-random.org_to_select_20_random_predicate_from_fb15kse-Mention-1"
        }
      ],
      "relevance": 0.434814453125
    },
    "Entity-b": {
      "node_id": "b",
      "disambiguation_index": 0,
      "label": "B",
      "aliases": [
        "B"
      ],
      "types": [
        "mathematical entity",
        "variable",
        "function",
        "matrix",
        "mathematical object",
        "body",
        "unknown value",
        "equation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical entity representing a matrix or function in an equation.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-2",
          "local_name": "B",
          "local_types": [
            "unknown value",
            "matrix",
            "variable",
            "mathematical object"
          ],
          "iri": "Entity-b-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-7-Sentence-2",
          "local_name": "B",
          "local_types": [
            "equation",
            "mathematical entity",
            "matrix",
            "variable"
          ],
          "iri": "Entity-b-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-3",
          "local_name": "B",
          "local_types": [
            "body",
            "function"
          ],
          "iri": "Entity-b-Mention-3"
        }
      ],
      "relevance": 0.434326171875
    },
    "Entity-entity": {
      "node_id": "entity",
      "disambiguation_index": 0,
      "label": "entities",
      "aliases": [
        "entities"
      ],
      "types": [
        "amount",
        "data entities",
        "set",
        "collection",
        "concept",
        "grouping of things",
        "grouping",
        "things",
        "data set",
        "objects",
        "quantity",
        "concepts",
        "object"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or set of distinct objects or concepts.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "entities",
          "local_types": [
            "data entities",
            "objects"
          ],
          "iri": "Entity-entity-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "entities",
          "local_types": [
            "concepts",
            "concept",
            "objects",
            "object"
          ],
          "iri": "Entity-entity-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "entities",
          "local_types": [
            "concept",
            "object"
          ],
          "iri": "Entity-entity-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-6",
          "local_name": "entities",
          "local_types": [
            "concept",
            "object"
          ],
          "iri": "Entity-entity-Mention-4"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-6",
          "local_name": "entities",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-entity-Mention-5"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-8",
          "local_name": "entities",
          "local_types": [
            "objects",
            "things"
          ],
          "iri": "Entity-entity-Mention-6"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-10",
          "local_name": "entities",
          "local_types": [
            "grouping of things",
            "data set"
          ],
          "iri": "Entity-entity-Mention-7"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "entities",
          "local_types": [
            "concept",
            "object"
          ],
          "iri": "Entity-entity-Mention-8"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "entities",
          "local_types": [
            "concepts",
            "objects"
          ],
          "iri": "Entity-entity-Mention-9"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "entities",
          "local_types": [
            "concepts",
            "objects"
          ],
          "iri": "Entity-entity-Mention-10"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "entities",
          "local_types": [
            "objects",
            "things"
          ],
          "iri": "Entity-entity-Mention-11"
        },
        {
          "reference": "Section-7-Paragraph-4-Sentence-4",
          "local_name": "entities",
          "local_types": [
            "concept",
            "grouping"
          ],
          "iri": "Entity-entity-Mention-12"
        },
        {
          "reference": "Section-9-Paragraph-11-Sentence-3",
          "local_name": "entities",
          "local_types": [
            "quantity",
            "amount"
          ],
          "iri": "Entity-entity-Mention-13"
        }
      ],
      "relevance": 0.43359375
    },
    "Entity-the_plausibility": {
      "node_id": "the_plausibility",
      "disambiguation_index": 0,
      "label": "The plausibility",
      "aliases": [
        "The plausibility"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A measure of how likely or believable a fact is, defined by a scoring function over the embedded representations of its predicate and entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "The plausibility",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_plausibility-Mention-1"
        }
      ],
      "relevance": 0.43359375
    },
    "Entity-a_query_with_an_answer_present_in_the_test_set_is_a_relevant_query": {
      "node_id": "a_query_with_an_answer_present_in_the_test_set_is_a_relevant_query",
      "disambiguation_index": 0,
      "label": "a query with an answer present in the test set is a relevant query",
      "aliases": [
        "a query with an answer present in the test set is a relevant query"
      ],
      "types": [
        "query",
        "relevance"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A measure of query relevance, defined as a query that has an instance fact in the test data.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "a query with an answer present in the test set is a relevant query",
          "local_types": [
            "query",
            "relevance"
          ],
          "iri": "Entity-a_query_with_an_answer_present_in_the_test_set_is_a_relevant_query-Mention-1"
        }
      ],
      "relevance": 0.43359375
    },
    "Entity-p_3__z_1__y_": {
      "node_id": "p_3__z_1__y_",
      "disambiguation_index": 0,
      "label": "P_3(z_1, y)",
      "aliases": [
        "P_3(z_1, y)"
      ],
      "types": [
        "predicate",
        "function",
        "mathematical notation",
        "expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical function or predicate that takes two arguments (z_1 and y) as input.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-1",
          "local_name": "P_3(z_1, y)",
          "local_types": [
            "predicate",
            "function",
            "mathematical notation",
            "expression"
          ],
          "iri": "Entity-p_3__z_1__y_-Mention-1"
        }
      ],
      "relevance": 0.433349609375
    },
    "Entity-rule_s_quality": {
      "node_id": "rule_s_quality",
      "disambiguation_index": 0,
      "label": "rule's quality",
      "aliases": [
        "rule's quality"
      ],
      "types": [
        "performance measure",
        "quality",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of how well or effectively something operates",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "rule's quality",
          "local_types": [
            "performance measure",
            "quality",
            "metric"
          ],
          "iri": "Entity-rule_s_quality-Mention-1"
        }
      ],
      "relevance": 0.433349609375
    },
    "Entity-each_row": {
      "node_id": "each_row",
      "disambiguation_index": 0,
      "label": "each row",
      "aliases": [
        "each row"
      ],
      "types": [
        "data structure",
        "table"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A single unit of data organization in a table or similar structure.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-3",
          "local_name": "each row",
          "local_types": [
            "data structure",
            "table"
          ],
          "iri": "Entity-each_row-Mention-1"
        }
      ],
      "relevance": 0.43310546875
    },
    "Entity-e__e_": {
      "node_id": "e__e_",
      "disambiguation_index": 0,
      "label": "e, e'",
      "aliases": [
        "e, e'"
      ],
      "types": [
        "variables",
        "unknowns"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of variables or unknowns in a mathematical equation",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "e, e'",
          "local_types": [
            "variables",
            "unknowns"
          ],
          "iri": "Entity-e__e_-Mention-1"
        }
      ],
      "relevance": 0.432861328125
    },
    "Entity-q": {
      "node_id": "q",
      "disambiguation_index": 0,
      "label": "q",
      "aliases": [
        "q"
      ],
      "types": [
        "question",
        "query"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A query or question inquiring about specific information.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "q",
          "local_types": [
            "question",
            "query"
          ],
          "iri": "Entity-q-Mention-1"
        }
      ],
      "relevance": 0.432861328125
    },
    "Entity-set": {
      "node_id": "set",
      "disambiguation_index": 0,
      "label": "set",
      "aliases": [
        "set"
      ],
      "types": [
        "collection",
        "mathematical concept",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A well-defined collection of unique objects or elements.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-10",
          "local_name": "set",
          "local_types": [
            "mathematical concept",
            "collection"
          ],
          "iri": "Entity-set-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-9-Sentence-2",
          "local_name": "set",
          "local_types": [
            "collection",
            "data structure"
          ],
          "iri": "Entity-set-Mention-2"
        }
      ],
      "relevance": 0.4326171875
    },
    "Entity-enterprise": {
      "node_id": "enterprise",
      "disambiguation_index": 0,
      "label": "Enterprise",
      "aliases": [
        "Enterprise"
      ],
      "types": [
        "concept",
        "organization",
        "organisation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A business or company, typically characterized by its size, scope, and organizational structure.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-1",
          "local_name": "Enterprise",
          "local_types": [
            "concept",
            "organization",
            "organisation"
          ],
          "iri": "Entity-enterprise-Mention-1"
        }
      ],
      "relevance": 0.432373046875
    },
    "Entity-data-first_approach": {
      "node_id": "data-first_approach",
      "disambiguation_index": 0,
      "label": "data-first approach",
      "aliases": [
        "data-first approach"
      ],
      "types": [
        "methodology",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A methodology or approach that prioritizes and relies heavily on data as its primary foundation.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-2",
          "local_name": "data-first approach",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-data-first_approach-Mention-1"
        }
      ],
      "relevance": 0.432373046875
    },
    "Entity-we_used_20_randomly_selected_predicate_from_fb15kse_in_the_query_generation_task": {
      "node_id": "we_used_20_randomly_selected_predicate_from_fb15kse_in_the_query_generation_task",
      "disambiguation_index": 0,
      "label": "We used 20 randomly selected predicates from FB15KSE in the query generation task",
      "aliases": [
        "We used 20 randomly selected predicates from FB15KSE in the query generation task"
      ],
      "types": [
        "experiment design",
        "predicate selection"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The experiment design for generating queries, which involves selecting 20 random predicates from FB15KSE.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "We used 20 randomly selected predicates from FB15KSE in the query generation task",
          "local_types": [
            "experiment design",
            "predicate selection"
          ],
          "iri": "Entity-we_used_20_randomly_selected_predicate_from_fb15kse_in_the_query_generation_task-Mention-1"
        }
      ],
      "relevance": 0.432373046875
    },
    "Entity-p_k": {
      "node_id": "p_k",
      "disambiguation_index": 0,
      "label": "P_k",
      "aliases": [
        "P_k"
      ],
      "types": [
        "matrix",
        "mathematical object"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical matrix representing a predicate.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-3",
          "local_name": "P_k",
          "local_types": [
            "matrix",
            "mathematical object"
          ],
          "iri": "Entity-p_k-Mention-1"
        }
      ],
      "relevance": 0.43212890625
    },
    "Entity-unlike_earlier_work": {
      "node_id": "unlike_earlier_work",
      "disambiguation_index": 0,
      "label": "Unlike earlier work",
      "aliases": [
        "Unlike earlier work"
      ],
      "types": [
        "research",
        "reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Previous research or studies",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "Unlike earlier work",
          "local_types": [
            "research",
            "reference"
          ],
          "iri": "Entity-unlike_earlier_work-Mention-1"
        }
      ],
      "relevance": 0.43212890625
    },
    "Entity-formally__the_satisfying_entity_are__ei__j_a__p1___i__j___0_and_1__j__n__": {
      "node_id": "formally__the_satisfying_entity_are__ei__j_a__p1___i__j___0_and_1__j__n__",
      "disambiguation_index": 0,
      "label": "Formally, the satisfying entities are {ei : \u2211j A(P1)[i,j] > 0 and 1 \u2264 j \u2264 n},",
      "aliases": [
        "Formally, the satisfying entities are {ei : \u2211j A(P1)[i,j] > 0 and 1 \u2264 j \u2264 n},"
      ],
      "types": [
        "mathematical concept",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-3",
          "local_name": "Formally, the satisfying entities are {ei : \u2211j A(P1)[i,j] > 0 and 1 \u2264 j \u2264 n},",
          "local_types": [
            "mathematical concept",
            "notation"
          ],
          "iri": "Entity-formally__the_satisfying_entity_are__ei__j_a__p1___i__j___0_and_1__j__n__-Mention-1"
        }
      ],
      "relevance": 0.43212890625
    },
    "Entity-inference_module": {
      "node_id": "inference_module",
      "disambiguation_index": 0,
      "label": "inference module",
      "aliases": [
        "inference module"
      ],
      "types": [
        "algorithm",
        "module"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software component responsible for drawing logical conclusions or making predictions based on given data, often used as part of a larger algorithmic process.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-2",
          "local_name": "inference module",
          "local_types": [
            "algorithm",
            "module"
          ],
          "iri": "Entity-inference_module-Mention-1"
        }
      ],
      "relevance": 0.43212890625
    },
    "Entity-on_the_other_hand": {
      "node_id": "on_the_other_hand",
      "disambiguation_index": 0,
      "label": "On the other hand",
      "aliases": [
        "On the other hand"
      ],
      "types": [
        "phrase"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A contrastive example of an OP rule, highlighting the lack of holistic similarity between the head and body predicates.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "On the other hand",
          "local_types": [
            "phrase"
          ],
          "iri": "Entity-on_the_other_hand-Mention-1"
        }
      ],
      "relevance": 0.43212890625
    },
    "Entity-recall": {
      "node_id": "recall",
      "disambiguation_index": 0,
      "label": "recall",
      "aliases": [
        "recall"
      ],
      "types": [
        "evaluation metric",
        "metric",
        "evaluation measure",
        "performance metric",
        "measurement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of the proportion of actual instances that are correctly identified as positive by an evaluation system.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "recall",
          "local_types": [
            "performance metric",
            "evaluation measure"
          ],
          "iri": "Entity-recall-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "recall",
          "local_types": [
            "evaluation metric",
            "metric"
          ],
          "iri": "Entity-recall-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "recall",
          "local_types": [
            "evaluation metric",
            "measurement"
          ],
          "iri": "Entity-recall-Mention-3"
        }
      ],
      "relevance": 0.431884765625
    },
    "Entity-noisy-or_operator": {
      "node_id": "noisy-or_operator",
      "disambiguation_index": 0,
      "label": "Noisy-OR operator",
      "aliases": [
        "Noisy-OR operator"
      ],
      "types": [
        "operator",
        "logic gate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logic gate that combines multiple inputs using an OR operation with added noise or uncertainty.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "Noisy-OR operator",
          "local_types": [
            "operator",
            "logic gate"
          ],
          "iri": "Entity-noisy-or_operator-Mention-1"
        }
      ],
      "relevance": 0.431884765625
    },
    "Entity-the_entity_that_satisfy_the_first_argument_of_p_t": {
      "node_id": "the_entity_that_satisfy_the_first_argument_of_p_t",
      "disambiguation_index": 0,
      "label": "the entities that satisfy the first argument of P_t",
      "aliases": [
        "the entities that satisfy the first argument of P_t"
      ],
      "types": [
        "entities",
        "argument entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Entities that, when used as the subject or object of predicate P_t, also appear together frequently in other rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-2",
          "local_name": "the entities that satisfy the first argument of P_t",
          "local_types": [
            "entities",
            "argument entities"
          ],
          "iri": "Entity-the_entity_that_satisfy_the_first_argument_of_p_t-Mention-1"
        }
      ],
      "relevance": 0.431884765625
    },
    "Entity-e_3": {
      "node_id": "e_3",
      "disambiguation_index": 0,
      "label": "e_3",
      "aliases": [
        "e_3"
      ],
      "types": [
        "variable",
        "argument",
        "entity",
        "unknown entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A variable or argument used as an entity in mathematical expressions.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "e_3",
          "local_types": [
            "variable",
            "argument"
          ],
          "iri": "Entity-e_3-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "e_3",
          "local_types": [
            "variable",
            "entity",
            "unknown entity"
          ],
          "iri": "Entity-e_3-Mention-2"
        }
      ],
      "relevance": 0.431640625
    },
    "Entity-e_5": {
      "node_id": "e_5",
      "disambiguation_index": 0,
      "label": "e_5",
      "aliases": [
        "e_5"
      ],
      "types": [
        "variable",
        "argument",
        "entity",
        "unknown entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity 'e_5' refers to an entity that has a relationship with another entity according to predicate P_1.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "e_5",
          "local_types": [
            "variable",
            "argument"
          ],
          "iri": "Entity-e_5-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "e_5",
          "local_types": [
            "variable",
            "entity",
            "unknown entity"
          ],
          "iri": "Entity-e_5-Mention-2"
        }
      ],
      "relevance": 0.431640625
    },
    "Entity-p_1__e_1__e_2_": {
      "node_id": "p_1__e_1__e_2_",
      "disambiguation_index": 0,
      "label": "P_1(e_1, e_2)",
      "aliases": [
        "P_1(e_1, e_2)"
      ],
      "types": [
        "fact",
        "data point"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of facts about predicate P_1, including instances such as P_1(e_1, e_2), P_1(e_1, e_3), and others.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "P_1(e_1, e_2)",
          "local_types": [
            "fact",
            "data point"
          ],
          "iri": "Entity-p_1__e_1__e_2_-Mention-1"
        }
      ],
      "relevance": 0.431640625
    },
    "Entity-over_eight_million_fact_and_four_million_entity": {
      "node_id": "over_eight_million_fact_and_four_million_entity",
      "disambiguation_index": 0,
      "label": "over eight million facts and four million entities",
      "aliases": [
        "over eight million facts and four million entities"
      ],
      "types": [
        "data",
        "information repository",
        "data set",
        "facts"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A large-scale data set or information repository",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-4-Sentence-2",
          "local_name": "over eight million facts and four million entities",
          "local_types": [
            "data",
            "information repository",
            "data set",
            "facts"
          ],
          "iri": "Entity-over_eight_million_fact_and_four_million_entity-Mention-1"
        }
      ],
      "relevance": 0.431640625
    },
    "Entity-a": {
      "node_id": "a",
      "disambiguation_index": 0,
      "label": "A",
      "aliases": [
        "A"
      ],
      "types": [
        "matrix",
        "mathematical object",
        "variable",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical object or variable used as a parameter for pathfinding calculations",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-11",
          "local_name": "A",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-a-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-6-Sentence-2",
          "local_name": "A",
          "local_types": [
            "mathematical object",
            "matrix",
            "variable"
          ],
          "iri": "Entity-a-Mention-2"
        }
      ],
      "relevance": 0.431396484375
    },
    "Entity-_0_": {
      "node_id": "_0_",
      "disambiguation_index": 0,
      "label": "| 0 |",
      "aliases": [
        "| 3 |",
        "| 0 |",
        "| 1 |"
      ],
      "types": [
        "mathematical entity",
        "scalar value",
        "vector",
        "mathematical expression",
        "matrix element"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical entity representing a vector or matrix element.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-3",
          "local_name": "| 0 |",
          "local_types": [
            "mathematical entity",
            "vector",
            "mathematical expression",
            "matrix element"
          ],
          "iri": "Entity-_0_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-7-Sentence-3",
          "local_name": "| 3 |",
          "local_types": [
            "mathematical entity",
            "scalar value",
            "vector",
            "mathematical expression",
            "matrix element"
          ],
          "iri": "Entity-_0_-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-7-Sentence-3",
          "local_name": "| 1 |",
          "local_types": [
            "mathematical entity",
            "scalar value",
            "vector",
            "mathematical expression",
            "matrix element"
          ],
          "iri": "Entity-_0_-Mention-3"
        }
      ],
      "relevance": 0.431396484375
    },
    "Entity-the_hold-out_test_data": {
      "node_id": "the_hold-out_test_data",
      "disambiguation_index": 0,
      "label": "the hold-out test data",
      "aliases": [
        "the hold-out test data"
      ],
      "types": [
        "dataset",
        "data",
        "test data"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of data used to evaluate the performance of a link predictor by posing queries derived from it.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-6-Sentence-2",
          "local_name": "the hold-out test data",
          "local_types": [
            "dataset",
            "data",
            "test data"
          ],
          "iri": "Entity-the_hold-out_test_data-Mention-1"
        }
      ],
      "relevance": 0.431396484375
    },
    "Entity-a_region__z_": {
      "node_id": "a_region__z_",
      "disambiguation_index": 0,
      "label": "a region (z)",
      "aliases": [
        "a region (z)"
      ],
      "types": [
        "region",
        "location",
        "geographic entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A geographic entity, specifically a region within a country that has its highest point and is represented in a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "a region (z)",
          "local_types": [
            "region",
            "location",
            "geographic entity"
          ],
          "iri": "Entity-a_region__z_-Mention-1"
        }
      ],
      "relevance": 0.431396484375
    },
    "Entity-entity_e_is_an_identifier_for_an_object_such_a_a_place_or_a_person__and_a_fact__also_known_a_a_link__is_an_rdf_triple__e__p__e____whereby_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.": {
      "node_id": "entity_e_is_an_identifier_for_an_object_such_a_a_place_or_a_person__and_a_fact__also_known_a_a_link__is_an_rdf_triple__e__p__e____whereby_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.",
      "disambiguation_index": 0,
      "label": "entity e is an identifier for an object such as a place or a person, and a fact (also known as a link) is an RDF triple (e, P, e'), whereby the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P.",
      "aliases": [
        "entity e is an identifier for an object such as a place or a person, and a fact (also known as a link) is an RDF triple (e, P, e'), whereby the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P."
      ],
      "types": [
        "definition",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept or definition that represents a relationship between two entities, often describing a fact or link.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "entity e is an identifier for an object such as a place or a person, and a fact (also known as a link) is an RDF triple (e, P, e'), whereby the subject entity e is related to an object entity e' via the binary predicate (also known as a property), P.",
          "local_types": [
            "definition",
            "concept"
          ],
          "iri": "Entity-entity_e_is_an_identifier_for_an_object_such_a_a_place_or_a_person__and_a_fact__also_known_a_a_link__is_an_rdf_triple__e__p__e____whereby_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.-Mention-1"
        }
      ],
      "relevance": 0.43115234375
    },
    "Entity-target_rule": {
      "node_id": "target_rule",
      "disambiguation_index": 0,
      "label": "target rules",
      "aliases": [
        "target rules"
      ],
      "types": [
        "rule set",
        "guideline"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of guidelines or principles governing specific behavior or actions.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-9",
          "local_name": "target rules",
          "local_types": [
            "rule set",
            "guideline"
          ],
          "iri": "Entity-target_rule-Mention-1"
        }
      ],
      "relevance": 0.43115234375
    },
    "Entity-product": {
      "node_id": "product",
      "disambiguation_index": 0,
      "label": "product",
      "aliases": [
        "product"
      ],
      "types": [
        "operation",
        "multiplication"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical operation or calculation that combines two or more matrices to produce another matrix.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-2",
          "local_name": "product",
          "local_types": [
            "operation",
            "multiplication"
          ],
          "iri": "Entity-product-Mention-1"
        }
      ],
      "relevance": 0.43115234375
    },
    "Entity-head_and_body": {
      "node_id": "head_and_body",
      "disambiguation_index": 0,
      "label": "head and body",
      "aliases": [
        "head and body"
      ],
      "types": [
        "conceptual framework",
        "component",
        "logical structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A conceptual framework or logical structure comprising two main parts: one that represents the primary idea or concept, and another that provides supporting information or elaboration.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-4-Sentence-2",
          "local_name": "head and body",
          "local_types": [
            "conceptual framework"
          ],
          "iri": "Entity-head_and_body-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "head and body",
          "local_types": [
            "component",
            "logical structure"
          ],
          "iri": "Entity-head_and_body-Mention-2"
        }
      ],
      "relevance": 0.430908203125
    },
    "Entity-_z__x_": {
      "node_id": "_z__x_",
      "disambiguation_index": 0,
      "label": "(z, x)",
      "aliases": [
        "(z, x)"
      ],
      "types": [
        "argument"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A constrained existential rule that states if the spouse of a person (z) is known, it is likely that the place of birth of that person (x) is also known.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-1",
          "local_name": "(z, x)",
          "local_types": [
            "argument"
          ],
          "iri": "Entity-_z__x_-Mention-1"
        }
      ],
      "relevance": 0.430908203125
    },
    "Entity-information": {
      "node_id": "information",
      "disambiguation_index": 0,
      "label": "information",
      "aliases": [
        "information"
      ],
      "types": [
        "data",
        "content"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Unstructured data or content",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "information",
          "local_types": [
            "data",
            "content"
          ],
          "iri": "Entity-information-Mention-1"
        }
      ],
      "relevance": 0.4306640625
    },
    "Entity-an_rdf_triple__e__p__e__": {
      "node_id": "an_rdf_triple__e__p__e__",
      "disambiguation_index": 0,
      "label": "an RDF triple (e, P, e')",
      "aliases": [
        "an RDF triple (e, P, e')"
      ],
      "types": [
        "triple",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statement consisting of three parts: subject, predicate, and object, which represents a relationship between entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "an RDF triple (e, P, e')",
          "local_types": [
            "triple",
            "fact"
          ],
          "iri": "Entity-an_rdf_triple__e__p__e__-Mention-1"
        }
      ],
      "relevance": 0.430419921875
    },
    "Entity-_0_0_2_": {
      "node_id": "_0_0_2_",
      "disambiguation_index": 0,
      "label": "| 0 0 2 |",
      "aliases": [
        "| 0 0 2 |"
      ],
      "types": [
        "matrix",
        "mathematical entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The matrix representing the adjacency of predicates P1, P2 and their corresponding entities.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-2",
          "local_name": "| 0 0 2 |",
          "local_types": [
            "matrix",
            "mathematical entity"
          ],
          "iri": "Entity-_0_0_2_-Mention-1"
        }
      ],
      "relevance": 0.430419921875
    },
    "Entity-a_query_is_counted_a_true_if_it_ha_an_instance_fact_in_the_test_data_and_false_otherwise": {
      "node_id": "a_query_is_counted_a_true_if_it_ha_an_instance_fact_in_the_test_data_and_false_otherwise",
      "disambiguation_index": 0,
      "label": "a query is counted as true if it has an instance fact in the test data and false otherwise",
      "aliases": [
        "a query is counted as true if it has an instance fact in the test data and false otherwise"
      ],
      "types": [
        "definition",
        "condition"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A condition that determines whether a query is considered true or false based on its presence of instance facts in the test data.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "a query is counted as true if it has an instance fact in the test data and false otherwise",
          "local_types": [
            "definition",
            "condition"
          ],
          "iri": "Entity-a_query_is_counted_a_true_if_it_ha_an_instance_fact_in_the_test_data_and_false_otherwise-Mention-1"
        }
      ],
      "relevance": 0.430419921875
    },
    "Entity-fact__also_known_a_a_link_": {
      "node_id": "fact__also_known_a_a_link_",
      "disambiguation_index": 0,
      "label": "fact (also known as a link)",
      "aliases": [
        "fact (also known as a link)"
      ],
      "types": [
        "concept",
        "link"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A fact, also referred to as a link, is an RDF triple consisting of a subject entity e, a binary predicate P, and an object entity e', representing a relationship between two entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "fact (also known as a link)",
          "local_types": [
            "concept",
            "link"
          ],
          "iri": "Entity-fact__also_known_a_a_link_-Mention-1"
        }
      ],
      "relevance": 0.429931640625
    },
    "Entity-the_co-occurrence_of_z_0_a_the_object_argument_of_p_t_and_subject_argument_of_p_1__and_z_i__1__i__n_-_1__a_the_object_argument_of_p_i_and_subject_argument_of_p___i1_": {
      "node_id": "the_co-occurrence_of_z_0_a_the_object_argument_of_p_t_and_subject_argument_of_p_1__and_z_i__1__i__n_-_1__a_the_object_argument_of_p_i_and_subject_argument_of_p___i1_",
      "disambiguation_index": 0,
      "label": "the co-occurrences of z_0 as the object argument of P_t and subject argument of P_1, and z_i (1 \u2264 i \u2264 n - 1) as the object argument of P_i and subject argument of P_{i+1}",
      "aliases": [
        "the co-occurrences of z_0 as the object argument of P_t and subject argument of P_1, and z_i (1 \u2264 i \u2264 n - 1) as the object argument of P_i and subject argument of P_{i+1}"
      ],
      "types": [
        "co-occurrence",
        "argument"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "the co-occurrences of z_0 as the object argument of P_t and subject argument of P_1, and z_i (1 \u2264 i \u2264 n - 1) as the object argument of P_i and subject argument of P_{i+1}",
          "local_types": [
            "co-occurrence",
            "argument"
          ],
          "iri": "Entity-the_co-occurrence_of_z_0_a_the_object_argument_of_p_t_and_subject_argument_of_p_1__and_z_i__1__i__n_-_1__a_the_object_argument_of_p_i_and_subject_argument_of_p___i1_-Mention-1"
        }
      ],
      "relevance": 0.4296875
    },
    "Entity-a_chain_of_predicate_in_the_rule": {
      "node_id": "a_chain_of_predicate_in_the_rule",
      "disambiguation_index": 0,
      "label": "a chain of predicates in the rule",
      "aliases": [
        "a chain of predicates in the rule"
      ],
      "types": [
        "predicate",
        "chain"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sequence of related predications defined by a set of rules.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "a chain of predicates in the rule",
          "local_types": [
            "predicate",
            "chain"
          ],
          "iri": "Entity-a_chain_of_predicate_in_the_rule-Mention-1"
        }
      ],
      "relevance": 0.429443359375
    },
    "Entity-p__1_": {
      "node_id": "p__1_",
      "disambiguation_index": 0,
      "label": "P(1)",
      "aliases": [
        "P(1)"
      ],
      "types": [
        "linear algebra",
        "matrix"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A matrix related to linear algebra",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-19-Sentence-1",
          "local_name": "P(1)",
          "local_types": [
            "linear algebra",
            "matrix"
          ],
          "iri": "Entity-p__1_-Mention-1"
        }
      ],
      "relevance": 0.429443359375
    },
    "Entity-sequence_of_ranked_entity": {
      "node_id": "sequence_of_ranked_entity",
      "disambiguation_index": 0,
      "label": "sequence of ranked entities",
      "aliases": [
        "sequence of ranked entities"
      ],
      "types": [
        "output",
        "result set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A list or collection of items, ordered by their relevance or priority",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "sequence of ranked entities",
          "local_types": [
            "output",
            "result set"
          ],
          "iri": "Entity-sequence_of_ranked_entity-Mention-1"
        }
      ],
      "relevance": 0.429443359375
    },
    "Entity-average_precision": {
      "node_id": "average_precision",
      "disambiguation_index": 0,
      "label": "average precision",
      "aliases": [
        "average precision"
      ],
      "types": [
        "evaluation metric",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of accuracy that represents the proportion of relevant instances or items correctly identified by a system, model, or algorithm.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "average precision",
          "local_types": [
            "evaluation metric",
            "metric"
          ],
          "iri": "Entity-average_precision-Mention-1"
        }
      ],
      "relevance": 0.42919921875
    },
    "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining_.": {
      "node_id": "it_is_closely_related_to_confidence_widely_used_in_association_rule_mining_.",
      "disambiguation_index": 0,
      "label": "It is closely related to confidence widely used in association rule mining.",
      "aliases": [
        "It is closely related to confidence widely used in association rule mining."
      ],
      "types": [
        "statement",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of certainty or trustworthiness",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-3",
          "local_name": "It is closely related to confidence widely used in association rule mining.",
          "local_types": [
            "statement",
            "relation"
          ],
          "iri": "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining_.-Mention-1"
        }
      ],
      "relevance": 0.428466796875
    },
    "Entity-table_2": {
      "node_id": "table_2",
      "disambiguation_index": 0,
      "label": "Table 2",
      "aliases": [
        "Table 2"
      ],
      "types": [
        "dataset",
        "publication",
        "data table",
        "table"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A data table or dataset containing numerical values and possibly additional information, such as labels or descriptions.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "Table 2",
          "local_types": [
            "dataset",
            "publication",
            "table",
            "data table"
          ],
          "iri": "Entity-table_2-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-3",
          "local_name": "Table 2",
          "local_types": [
            "data table",
            "publication",
            "table"
          ],
          "iri": "Entity-table_2-Mention-2"
        }
      ],
      "relevance": 0.42822265625
    },
    "Entity-fact__e.g_._citizenof__ann__australia__": {
      "node_id": "fact__e.g_._citizenof__ann__australia__",
      "disambiguation_index": 0,
      "label": "facts (e.g. citizenOf(Ann, Australia))",
      "aliases": [
        "facts (e.g. citizenOf(Ann, Australia))"
      ],
      "types": [
        "data point",
        "knowledge unit"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A data point or knowledge unit that represents a fact about an entity's citizenship.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "facts (e.g. citizenOf(Ann, Australia))",
          "local_types": [
            "data point",
            "knowledge unit"
          ],
          "iri": "Entity-fact__e.g_._citizenof__ann__australia__-Mention-1"
        }
      ],
      "relevance": 0.42822265625
    },
    "Entity-pair_of_entity": {
      "node_id": "pair_of_entity",
      "disambiguation_index": 0,
      "label": "pair of entities",
      "aliases": [
        "pair of entities"
      ],
      "types": [
        "collection",
        "set",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of two distinct entities that satisfy a specific condition or relationship.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "pair of entities",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-pair_of_entity-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-5",
          "local_name": "pair of entities",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-pair_of_entity-Mention-2"
        }
      ],
      "relevance": 0.427978515625
    },
    "Entity-_2_": {
      "node_id": "_2_",
      "disambiguation_index": 0,
      "label": "(2)",
      "aliases": [
        "(2)"
      ],
      "types": [
        "number",
        "mathematical constant",
        "rule",
        "reference",
        "quantity",
        "equation",
        "mathematical expression",
        "citation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A numerical value representing a quantity or proportion",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-4-Sentence-3",
          "local_name": "(2)",
          "local_types": [
            "quantity",
            "number",
            "rule"
          ],
          "iri": "Entity-_2_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "(2)",
          "local_types": [
            "equation",
            "number",
            "mathematical expression",
            "mathematical constant"
          ],
          "iri": "Entity-_2_-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-9-Sentence-5",
          "local_name": "(2)",
          "local_types": [
            "reference",
            "citation"
          ],
          "iri": "Entity-_2_-Mention-3"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-3",
          "local_name": "(2)",
          "local_types": [
            "number",
            "reference",
            "citation"
          ],
          "iri": "Entity-_2_-Mention-4"
        }
      ],
      "relevance": 0.427734375
    },
    "Entity-predicate": {
      "node_id": "predicate",
      "disambiguation_index": 0,
      "label": "predicates",
      "aliases": [
        "predicates",
        "predicate"
      ],
      "types": [
        "term",
        "mathematical concept",
        "relations",
        "predicate",
        "argument structure",
        "concept",
        "mathematical object",
        "predicate logic",
        "conceptual category",
        "logical operator",
        "logical construct",
        "linguistic term",
        "relation",
        "logical term",
        "terms",
        "knowledge component",
        "relationships",
        "logical concept",
        "function",
        "logic concept",
        "links",
        "logical expression",
        "concepts",
        "conditions"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept or logical operator that defines a relationship between entities.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-7-Sentence-3",
          "local_name": "predicates",
          "local_types": [
            "relationships",
            "links"
          ],
          "iri": "Entity-predicate-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "predicate",
          "local_types": [
            "relation",
            "concept",
            "function",
            "logical operator"
          ],
          "iri": "Entity-predicate-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-3",
          "local_name": "predicates",
          "local_types": [
            "logical construct",
            "linguistic term"
          ],
          "iri": "Entity-predicate-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-9-Sentence-4",
          "local_name": "predicates",
          "local_types": [
            "logical term",
            "concept"
          ],
          "iri": "Entity-predicate-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-10-Sentence-6",
          "local_name": "predicates",
          "local_types": [
            "concept",
            "function"
          ],
          "iri": "Entity-predicate-Mention-5"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-2",
          "local_name": "predicates",
          "local_types": [
            "logical expression",
            "knowledge component"
          ],
          "iri": "Entity-predicate-Mention-6"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "predicate",
          "local_types": [
            "logical expression",
            "mathematical concept"
          ],
          "iri": "Entity-predicate-Mention-7"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-2",
          "local_name": "predicates",
          "local_types": [
            "concept",
            "term"
          ],
          "iri": "Entity-predicate-Mention-8"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "predicates",
          "local_types": [
            "relation",
            "predicate"
          ],
          "iri": "Entity-predicate-Mention-9"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-14",
          "local_name": "predicate",
          "local_types": [
            "logical concept",
            "mathematical object"
          ],
          "iri": "Entity-predicate-Mention-10"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "predicate",
          "local_types": [
            "term",
            "function",
            "argument structure",
            "logical construct",
            "relation"
          ],
          "iri": "Entity-predicate-Mention-11"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-4",
          "local_name": "predicate",
          "local_types": [
            "logical concept",
            "mathematical object"
          ],
          "iri": "Entity-predicate-Mention-12"
        },
        {
          "reference": "Section-8-Paragraph-8-Sentence-1",
          "local_name": "predicate",
          "local_types": [
            "mathematical object",
            "term",
            "logical concept"
          ],
          "iri": "Entity-predicate-Mention-13"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-1",
          "local_name": "predicates",
          "local_types": [
            "logic concept",
            "predicate logic",
            "conceptual category",
            "logical operator",
            "logical expression"
          ],
          "iri": "Entity-predicate-Mention-14"
        },
        {
          "reference": "Section-10-Paragraph-3-Sentence-2",
          "local_name": "predicates",
          "local_types": [
            "concept",
            "relation"
          ],
          "iri": "Entity-predicate-Mention-15"
        },
        {
          "reference": "Section-10-Paragraph-8-Sentence-1",
          "local_name": "predicate",
          "local_types": [
            "logical operator",
            "conceptual category"
          ],
          "iri": "Entity-predicate-Mention-16"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "predicates",
          "local_types": [
            "terms",
            "conditions"
          ],
          "iri": "Entity-predicate-Mention-17"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "predicate",
          "local_types": [
            "concept",
            "term"
          ],
          "iri": "Entity-predicate-Mention-18"
        },
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "predicates",
          "local_types": [
            "concepts",
            "relations"
          ],
          "iri": "Entity-predicate-Mention-19"
        }
      ],
      "relevance": 0.42724609375
    },
    "Entity-head_of_a_rule": {
      "node_id": "head_of_a_rule",
      "disambiguation_index": 0,
      "label": "head of a rule",
      "aliases": [
        "head of a rule"
      ],
      "types": [
        "rule component",
        "logical construct"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The primary or leading part of a logical structure, governing its behavior and operation.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-4-Sentence-4",
          "local_name": "head of a rule",
          "local_types": [
            "rule component",
            "logical construct"
          ],
          "iri": "Entity-head_of_a_rule-Mention-1"
        }
      ],
      "relevance": 0.42724609375
    },
    "Entity-the_answer_to_a_question_in_the_test_set": {
      "node_id": "the_answer_to_a_question_in_the_test_set",
      "disambiguation_index": 0,
      "label": "the answer to a question in the test set",
      "aliases": [
        "the answer to a question in the test set"
      ],
      "types": [
        "answer",
        "result"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A solution or outcome resulting from querying a dataset.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-4-Sentence-2",
          "local_name": "the answer to a question in the test set",
          "local_types": [
            "answer",
            "result"
          ],
          "iri": "Entity-the_answer_to_a_question_in_the_test_set-Mention-1"
        }
      ],
      "relevance": 0.427001953125
    },
    "Entity-the_second_rule": {
      "node_id": "the_second_rule",
      "disambiguation_index": 0,
      "label": "The second rule",
      "aliases": [
        "The second rule"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A constrained existential rule stating that if there is a region in a country and the continent of that country is also known, it is likely that the region's highest point is known.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "The second rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_second_rule-Mention-1"
        }
      ],
      "relevance": 0.427001953125
    },
    "Entity-argument_position": {
      "node_id": "argument_position",
      "disambiguation_index": 0,
      "label": "argument position",
      "aliases": [
        "argument position"
      ],
      "types": [
        "conceptual framework",
        "logical structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A structural component that defines the roles or positions occupied by entities within a logical framework.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "argument position",
          "local_types": [
            "conceptual framework",
            "logical structure"
          ],
          "iri": "Entity-argument_position-Mention-1"
        }
      ],
      "relevance": 0.4267578125
    },
    "Entity-object_argument_of_p_n": {
      "node_id": "object_argument_of_p_n",
      "disambiguation_index": 0,
      "label": "object argument of P_n",
      "aliases": [
        "object argument of P_n"
      ],
      "types": [
        "mathematical concept",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical variable or concept that serves as an input to a predicate (P_n).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-5",
          "local_name": "object argument of P_n",
          "local_types": [
            "mathematical concept",
            "variable"
          ],
          "iri": "Entity-object_argument_of_p_n-Mention-1"
        }
      ],
      "relevance": 0.4267578125
    },
    "Entity-_1_0_0_": {
      "node_id": "_1_0_0_",
      "disambiguation_index": 0,
      "label": "| 1 0 0 |",
      "aliases": [
        "| 1 0 0 |"
      ],
      "types": [
        "matrix",
        "mathematical entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical matrix",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-7-Sentence-2",
          "local_name": "| 1 0 0 |",
          "local_types": [
            "matrix",
            "mathematical entity"
          ],
          "iri": "Entity-_1_0_0_-Mention-1"
        }
      ],
      "relevance": 0.42626953125
    },
    "Entity-chai_filter_fact_before_supplying_them_to_a_link_predictor": {
      "node_id": "chai_filter_fact_before_supplying_them_to_a_link_predictor",
      "disambiguation_index": 0,
      "label": "CHAI filters facts before supplying them to a link predictor",
      "aliases": [
        "CHAI filters facts before supplying them to a link predictor"
      ],
      "types": [
        "system",
        "algorithm"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A system or algorithm that processes information before providing predictions",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-2",
          "local_name": "CHAI filters facts before supplying them to a link predictor",
          "local_types": [
            "system",
            "algorithm"
          ],
          "iri": "Entity-chai_filter_fact_before_supplying_them_to_a_link_predictor-Mention-1"
        }
      ],
      "relevance": 0.42626953125
    },
    "Entity-answer": {
      "node_id": "answer",
      "disambiguation_index": 0,
      "label": "answer",
      "aliases": [
        "answer",
        "answers"
      ],
      "types": [
        "response",
        "solution",
        "concept",
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A response or solution provided to a question or problem",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-6",
          "local_name": "answer",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-answer-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-8",
          "local_name": "answer",
          "local_types": [
            "response",
            "output"
          ],
          "iri": "Entity-answer-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-3-Sentence-1",
          "local_name": "answers",
          "local_types": [
            "response",
            "output"
          ],
          "iri": "Entity-answer-Mention-3"
        },
        {
          "reference": "Section-9-Paragraph-4-Sentence-2",
          "local_name": "answer",
          "local_types": [
            "response",
            "solution"
          ],
          "iri": "Entity-answer-Mention-4"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-2",
          "local_name": "answer",
          "local_types": [
            "response",
            "output"
          ],
          "iri": "Entity-answer-Mention-5"
        }
      ],
      "relevance": 0.42578125
    },
    "Entity-link_predictor": {
      "node_id": "link_predictor",
      "disambiguation_index": 0,
      "label": "link predictors",
      "aliases": [
        "link predictor",
        "link predictors"
      ],
      "types": [
        "link predictor",
        "software",
        "technology",
        "tool",
        "algorithmic tool",
        "predictive model",
        "predictor",
        "model",
        "computer program",
        "predictive algorithm",
        "model type",
        "machine learning model",
        "predictive system",
        "algorithm",
        "method",
        "technique"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A software or algorithmic tool that predicts links between entities.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-2",
          "local_name": "link predictors",
          "local_types": [
            "software",
            "tool",
            "algorithmic tool",
            "algorithm",
            "model type"
          ],
          "iri": "Entity-link_predictor-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-2",
          "local_name": "link predictors",
          "local_types": [
            "machine learning model",
            "tool",
            "software",
            "algorithm"
          ],
          "iri": "Entity-link_predictor-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-7-Sentence-3",
          "local_name": "link predictor",
          "local_types": [
            "algorithm",
            "model"
          ],
          "iri": "Entity-link_predictor-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-2",
          "local_name": "link predictor",
          "local_types": [
            "algorithm",
            "machine learning model"
          ],
          "iri": "Entity-link_predictor-Mention-4"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-4",
          "local_name": "link predictor",
          "local_types": [
            "algorithm",
            "machine learning model"
          ],
          "iri": "Entity-link_predictor-Mention-5"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-3",
          "local_name": "link predictors",
          "local_types": [
            "algorithm",
            "machine learning model"
          ],
          "iri": "Entity-link_predictor-Mention-6"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-4",
          "local_name": "link predictors",
          "local_types": [
            "algorithm",
            "tool"
          ],
          "iri": "Entity-link_predictor-Mention-7"
        },
        {
          "reference": "Section-8-Paragraph-6-Sentence-2",
          "local_name": "link predictor",
          "local_types": [
            "model",
            "software",
            "tool",
            "algorithm"
          ],
          "iri": "Entity-link_predictor-Mention-8"
        },
        {
          "reference": "Section-8-Paragraph-11-Sentence-1",
          "local_name": "link predictors",
          "local_types": [
            "method",
            "machine learning model",
            "predictor",
            "algorithm"
          ],
          "iri": "Entity-link_predictor-Mention-9"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-4",
          "local_name": "link predictor",
          "local_types": [
            "algorithm",
            "predictive model"
          ],
          "iri": "Entity-link_predictor-Mention-10"
        },
        {
          "reference": "Section-9-Paragraph-3-Sentence-1",
          "local_name": "link predictors",
          "local_types": [
            "software",
            "tool",
            "predictor",
            "model",
            "algorithm"
          ],
          "iri": "Entity-link_predictor-Mention-11"
        },
        {
          "reference": "Section-9-Paragraph-4-Sentence-2",
          "local_name": "link predictors",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-link_predictor-Mention-12"
        },
        {
          "reference": "Section-9-Paragraph-5-Sentence-2",
          "local_name": "link predictors",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-link_predictor-Mention-13"
        },
        {
          "reference": "Section-9-Paragraph-8-Sentence-3",
          "local_name": "link predictors",
          "local_types": [
            "tool",
            "software"
          ],
          "iri": "Entity-link_predictor-Mention-14"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "link predictors",
          "local_types": [
            "computer program",
            "technique",
            "method",
            "algorithm"
          ],
          "iri": "Entity-link_predictor-Mention-15"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-2",
          "local_name": "link predictor",
          "local_types": [
            "model",
            "predictive system"
          ],
          "iri": "Entity-link_predictor-Mention-16"
        },
        {
          "reference": "Section-13-Paragraph-1-Sentence-3",
          "local_name": "link predictors",
          "local_types": [
            "link predictor",
            "technology",
            "tool",
            "predictor",
            "predictive algorithm",
            "machine learning model",
            "algorithm"
          ],
          "iri": "Entity-link_predictor-Mention-17"
        },
        {
          "reference": "Section-13-Paragraph-5-Sentence-3",
          "local_name": "link predictor",
          "local_types": [
            "technology",
            "tool",
            "predictive model",
            "predictor",
            "algorithm"
          ],
          "iri": "Entity-link_predictor-Mention-18"
        }
      ],
      "relevance": 0.425537109375
    },
    "Entity-unobserved_but_intrinsic_property_of_entity": {
      "node_id": "unobserved_but_intrinsic_property_of_entity",
      "disambiguation_index": 0,
      "label": "unobserved but intrinsic properties of entities",
      "aliases": [
        "unobserved but intrinsic properties of entities"
      ],
      "types": [
        "property",
        "entity property"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Properties inherent to entities that are not directly observable, yet contribute to their relationships and characteristics.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "unobserved but intrinsic properties of entities",
          "local_types": [
            "property",
            "entity property"
          ],
          "iri": "Entity-unobserved_but_intrinsic_property_of_entity-Mention-1"
        }
      ],
      "relevance": 0.425537109375
    },
    "Entity-in_this_paper": {
      "node_id": "in_this_paper",
      "disambiguation_index": 0,
      "label": "In this paper",
      "aliases": [
        "In this paper"
      ],
      "types": [
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The concept of asking relevant questions instead of answering them, which is the focus of this research.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "In this paper",
          "local_types": [
            "paper"
          ],
          "iri": "Entity-in_this_paper-Mention-1"
        }
      ],
      "relevance": 0.425537109375
    },
    "Entity-s_p": {
      "node_id": "s_p",
      "disambiguation_index": 0,
      "label": "S_p",
      "aliases": [
        "S_p"
      ],
      "types": [
        "entities",
        "set",
        "mathematical concept",
        "collection"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of entities that function as the subject or topic in a given context.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-2",
          "local_name": "S_p",
          "local_types": [
            "entities",
            "set",
            "mathematical concept",
            "collection"
          ],
          "iri": "Entity-s_p-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-3",
          "local_name": "S_p",
          "local_types": [
            "set",
            "mathematical concept"
          ],
          "iri": "Entity-s_p-Mention-2"
        }
      ],
      "relevance": 0.42529296875
    },
    "Entity-evaluation": {
      "node_id": "evaluation",
      "disambiguation_index": 0,
      "label": "Evaluation",
      "aliases": [
        "evaluation",
        "Evaluation"
      ],
      "types": [
        "process",
        "evaluation metric",
        "function",
        "algorithm component",
        "evaluation",
        "algorithm",
        "method",
        "assessment"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic process of assessing or judging the quality, performance, or value of something.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-12",
          "local_name": "Evaluation",
          "local_types": [
            "evaluation",
            "function"
          ],
          "iri": "Entity-evaluation-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-18",
          "local_name": "evaluation",
          "local_types": [
            "process",
            "assessment"
          ],
          "iri": "Entity-evaluation-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "Evaluation",
          "local_types": [
            "method",
            "algorithm component",
            "evaluation metric",
            "algorithm"
          ],
          "iri": "Entity-evaluation-Mention-3"
        }
      ],
      "relevance": 0.42529296875
    },
    "Entity-in_a_country__w_": {
      "node_id": "in_a_country__w_",
      "disambiguation_index": 0,
      "label": "in a country (w)",
      "aliases": [
        "in a country (w)"
      ],
      "types": [
        "geographic entity",
        "location",
        "country"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A geographic location within a specific country, referring to a region or area that is known and exists in the knowledge graph.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "in a country (w)",
          "local_types": [
            "geographic entity",
            "location",
            "country"
          ],
          "iri": "Entity-in_a_country__w_-Mention-1"
        }
      ],
      "relevance": 0.42529296875
    },
    "Entity-table_4": {
      "node_id": "table_4",
      "disambiguation_index": 0,
      "label": "Table 4",
      "aliases": [
        "Table 4"
      ],
      "types": [
        "dataset",
        "publication",
        "table",
        "data table"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A table presenting numerical values or statistics, typically used to summarize or display data.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "Table 4",
          "local_types": [
            "dataset",
            "publication",
            "table",
            "data table"
          ],
          "iri": "Entity-table_4-Mention-1"
        }
      ],
      "relevance": 0.4248046875
    },
    "Entity-sequential_entity": {
      "node_id": "sequential_entity",
      "disambiguation_index": 0,
      "label": "sequential entities",
      "aliases": [
        "sequential entities"
      ],
      "types": [
        "sequence",
        "data structure",
        "set of things"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of items or elements that are ordered in a specific sequence.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-17-Sentence-1",
          "local_name": "sequential entities",
          "local_types": [
            "sequence",
            "data structure",
            "set of things"
          ],
          "iri": "Entity-sequential_entity-Mention-1"
        }
      ],
      "relevance": 0.4248046875
    },
    "Entity-of_a_predicate_p_are_vector_defined_respectively_a_": {
      "node_id": "of_a_predicate_p_are_vector_defined_respectively_a_",
      "disambiguation_index": 0,
      "label": "of a predicate P are vectors defined respectively as:",
      "aliases": [
        "of a predicate P are vectors defined respectively as:"
      ],
      "types": [
        "predicate",
        "vector definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or technique for representing predicates using vector definitions.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "of a predicate P are vectors defined respectively as:",
          "local_types": [
            "predicate",
            "vector definition"
          ],
          "iri": "Entity-of_a_predicate_p_are_vector_defined_respectively_a_-Mention-1"
        }
      ],
      "relevance": 0.424560546875
    },
    "Entity-p1__e1__e2_": {
      "node_id": "p1__e1__e2_",
      "disambiguation_index": 0,
      "label": "P1(e1, e2)",
      "aliases": [
        "P1(e2, e1)",
        "P1(e2, e3)",
        "P2(e3, e2)",
        "P1(e2,e1)",
        "P1(e1,e2)",
        "P1(e1, e2)",
        "P2(e1, e2)",
        "P1(e2,e3)"
      ],
      "types": [
        "relation",
        "predicate",
        "function",
        "binary relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A binary relation between two entities.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "P1(e1, e2)",
          "local_types": [
            "relation",
            "predicate",
            "function",
            "binary relation"
          ],
          "iri": "Entity-p1__e1__e2_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "P1(e2, e1)",
          "local_types": [
            "relation",
            "predicate",
            "function",
            "binary relation"
          ],
          "iri": "Entity-p1__e1__e2_-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "P1(e2, e3)",
          "local_types": [
            "relation",
            "predicate",
            "function",
            "binary relation"
          ],
          "iri": "Entity-p1__e1__e2_-Mention-3"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "P2(e1, e2)",
          "local_types": [
            "relation",
            "predicate",
            "function",
            "binary relation"
          ],
          "iri": "Entity-p1__e1__e2_-Mention-4"
        },
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "P2(e3, e2)",
          "local_types": [
            "relation",
            "predicate",
            "function",
            "binary relation"
          ],
          "iri": "Entity-p1__e1__e2_-Mention-5"
        }
      ],
      "relevance": 0.424560546875
    },
    "Entity-oracle": {
      "node_id": "oracle",
      "disambiguation_index": 0,
      "label": "oracle",
      "aliases": [
        "oracle"
      ],
      "types": [
        "concept",
        "metaphor"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A source of wisdom or guidance",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-1-Sentence-4",
          "local_name": "oracle",
          "local_types": [
            "concept",
            "metaphor"
          ],
          "iri": "Entity-oracle-Mention-1"
        }
      ],
      "relevance": 0.424560546875
    },
    "Entity-the_result_summarized_in_table_3": {
      "node_id": "the_result_summarized_in_table_3",
      "disambiguation_index": 0,
      "label": "the results summarized in Table 3",
      "aliases": [
        "the results summarized in Table 3"
      ],
      "types": [
        "result"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A summary or compilation of outcomes, findings, or conclusions.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "the results summarized in Table 3",
          "local_types": [
            "result"
          ],
          "iri": "Entity-the_result_summarized_in_table_3-Mention-1"
        }
      ],
      "relevance": 0.42431640625
    },
    "Entity-the_fact_that_e0_is_connected_to_e1_via_predicate_p1": {
      "node_id": "the_fact_that_e0_is_connected_to_e1_via_predicate_p1",
      "disambiguation_index": 0,
      "label": "the fact that e0 is connected to e1 via predicate P1",
      "aliases": [
        "the fact that e0 is connected to e1 via predicate P1"
      ],
      "types": [
        "fact",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A specific instance or occurrence of a connection between two entities (e0 and e1) through a particular predicate (P1), representing the plausibility of this fact.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-7",
          "local_name": "the fact that e0 is connected to e1 via predicate P1",
          "local_types": [
            "fact",
            "predicate"
          ],
          "iri": "Entity-the_fact_that_e0_is_connected_to_e1_via_predicate_p1-Mention-1"
        }
      ],
      "relevance": 0.42431640625
    },
    "Entity-it": {
      "node_id": "it",
      "disambiguation_index": 0,
      "label": "It",
      "aliases": [
        "It",
        "it"
      ],
      "types": [
        "pronoun",
        "data set",
        "reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or reference point that embeds entities and predicates in a mathematical framework.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-3",
          "local_name": "It",
          "local_types": [
            "pronoun",
            "reference"
          ],
          "iri": "Entity-it-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "it",
          "local_types": [
            "data set"
          ],
          "iri": "Entity-it-Mention-2"
        }
      ],
      "relevance": 0.423583984375
    },
    "Entity-table_1": {
      "node_id": "table_1",
      "disambiguation_index": 0,
      "label": "Table 1",
      "aliases": [
        "Table 1"
      ],
      "types": [
        "table",
        "reference"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A tabular summary or reference",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-1",
          "local_name": "Table 1",
          "local_types": [
            "table",
            "reference"
          ],
          "iri": "Entity-table_1-Mention-1"
        }
      ],
      "relevance": 0.42333984375
    },
    "Entity-section_6": {
      "node_id": "section_6",
      "disambiguation_index": 0,
      "label": "Section 6",
      "aliases": [
        "Section 6"
      ],
      "types": [
        "experiments",
        "section",
        "part"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A part or division within a document, containing experimental data or methodology.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-5",
          "local_name": "Section 6",
          "local_types": [
            "experiments",
            "section",
            "part"
          ],
          "iri": "Entity-section_6-Mention-1"
        }
      ],
      "relevance": 0.42333984375
    },
    "Entity-those_entity": {
      "node_id": "those_entity",
      "disambiguation_index": 0,
      "label": "those entities",
      "aliases": [
        "those entities"
      ],
      "types": [
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Those entities refer to identifiers for objects such as places or people that exist in facts within a knowledge graph.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-5",
          "local_name": "those entities",
          "local_types": [
            "entities"
          ],
          "iri": "Entity-those_entity-Mention-1"
        }
      ],
      "relevance": 0.42333984375
    },
    "Entity-experimentally": {
      "node_id": "experimentally",
      "disambiguation_index": 0,
      "label": "Experimentally",
      "aliases": [
        "Experimentally"
      ],
      "types": [
        "study",
        "research method",
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research method or study design characterized by controlled experimentation.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-2",
          "local_name": "Experimentally",
          "local_types": [
            "study",
            "research method",
            "method"
          ],
          "iri": "Entity-experimentally-Mention-1"
        }
      ],
      "relevance": 0.4228515625
    },
    "Entity-web_question-answering_engine": {
      "node_id": "web_question-answering_engine",
      "disambiguation_index": 0,
      "label": "Web question-answering engine",
      "aliases": [
        "Web question-answering engine"
      ],
      "types": [
        "software tool",
        "technology",
        "system",
        "service"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A software tool that answers questions by searching and processing information from the web.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-7",
          "local_name": "Web question-answering engine",
          "local_types": [
            "software tool",
            "technology",
            "system",
            "service"
          ],
          "iri": "Entity-web_question-answering_engine-Mention-1"
        }
      ],
      "relevance": 0.422607421875
    },
    "Entity-query_evaluation": {
      "node_id": "query_evaluation",
      "disambiguation_index": 0,
      "label": "query evaluation",
      "aliases": [
        "query evaluation"
      ],
      "types": [
        "evaluation process",
        "performance assessment"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The act of assessing or measuring the quality or effectiveness of a query.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-2-Sentence-1",
          "local_name": "query evaluation",
          "local_types": [
            "evaluation process",
            "performance assessment"
          ],
          "iri": "Entity-query_evaluation-Mention-1"
        }
      ],
      "relevance": 0.422607421875
    },
    "Entity-bag_of_predicate": {
      "node_id": "bag_of_predicate",
      "disambiguation_index": 0,
      "label": "bag of predicates",
      "aliases": [
        "a bag of predicates",
        "bag of predicates"
      ],
      "types": [
        "collection",
        "predicate",
        "set",
        "bag"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A collection or set of random predicate instances used to generate Prand queries.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "bag of predicates",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-bag_of_predicate-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "a bag of predicates",
          "local_types": [
            "bag",
            "predicate"
          ],
          "iri": "Entity-bag_of_predicate-Mention-2"
        }
      ],
      "relevance": 0.42236328125
    },
    "Entity-relational_database": {
      "node_id": "relational_database",
      "disambiguation_index": 0,
      "label": "relational databases",
      "aliases": [
        "relational databases"
      ],
      "types": [
        "database system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of database system that organizes data into tables with defined relationships between them.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-3",
          "local_name": "relational databases",
          "local_types": [
            "database system"
          ],
          "iri": "Entity-relational_database-Mention-1"
        }
      ],
      "relevance": 0.422119140625
    },
    "Entity-given_predicate_p": {
      "node_id": "given_predicate_p",
      "disambiguation_index": 0,
      "label": "Given predicate P",
      "aliases": [
        "Given predicate P"
      ],
      "types": [
        "predicate",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical expression or variable representing a relationship between entities",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-2-Sentence-1",
          "local_name": "Given predicate P",
          "local_types": [
            "predicate",
            "variable"
          ],
          "iri": "Entity-given_predicate_p-Mention-1"
        }
      ],
      "relevance": 0.422119140625
    },
    "Entity-p_t__x__z_0_": {
      "node_id": "p_t__x__z_0_",
      "disambiguation_index": 0,
      "label": "P_t(x, z_0)",
      "aliases": [
        "P_t(x, z_0)"
      ],
      "types": [
        "logical formula",
        "equation",
        "mathematical formula"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical formula that represents a logical statement with variables x and z0.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "P_t(x, z_0)",
          "local_types": [
            "logical formula",
            "equation",
            "mathematical formula"
          ],
          "iri": "Entity-p_t__x__z_0_-Mention-1"
        }
      ],
      "relevance": 0.421875
    },
    "Entity-and_we_allow_the_extension_to_6_by_incpathfinding__": {
      "node_id": "and_we_allow_the_extension_to_6_by_incpathfinding__",
      "disambiguation_index": 0,
      "label": "and we allow the extension to 6 by IncPathFinding()",
      "aliases": [
        "and we allow the extension to 6 by IncPathFinding()"
      ],
      "types": [
        "action",
        "IncPathFinding"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The maximum allowed path finding depth when using IncPathFinding()",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-1",
          "local_name": "and we allow the extension to 6 by IncPathFinding()",
          "local_types": [
            "action",
            "IncPathFinding"
          ],
          "iri": "Entity-and_we_allow_the_extension_to_6_by_incpathfinding__-Mention-1"
        }
      ],
      "relevance": 0.421142578125
    },
    "Entity-z_i": {
      "node_id": "z_i",
      "disambiguation_index": 0,
      "label": "z_i",
      "aliases": [
        "z_i"
      ],
      "types": [
        "variable",
        "bound",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept that represents a variable with bounded values.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "z_i",
          "local_types": [
            "variable",
            "bound"
          ],
          "iri": "Entity-z_i-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "z_i",
          "local_types": [
            "variable",
            "mathematical concept"
          ],
          "iri": "Entity-z_i-Mention-2"
        }
      ],
      "relevance": 0.420654296875
    },
    "Entity-entity_and_predicate": {
      "node_id": "entity_and_predicate",
      "disambiguation_index": 0,
      "label": "entities and predicates",
      "aliases": [
        "entities and predicates"
      ],
      "types": [
        "data",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Conceptual representations of objects or ideas, along with their relationships.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-3",
          "local_name": "entities and predicates",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-entity_and_predicate-Mention-1"
        }
      ],
      "relevance": 0.420654296875
    },
    "Entity-occupation__w__y_": {
      "node_id": "occupation__w__y_",
      "disambiguation_index": 0,
      "label": "occupation(w, y)",
      "aliases": [
        "occupation(w, y)"
      ],
      "types": [
        "function",
        "attribute",
        "predicate",
        "profession",
        "relation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The actual entity referred to by 'occupation(w, y)' is a TV program's participant with an associated profession or job.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-3",
          "local_name": "occupation(w, y)",
          "local_types": [
            "function",
            "attribute",
            "predicate",
            "profession",
            "relation"
          ],
          "iri": "Entity-occupation__w__y_-Mention-1"
        }
      ],
      "relevance": 0.420166015625
    },
    "Entity-curating_task": {
      "node_id": "curating_task",
      "disambiguation_index": 0,
      "label": "curating tasks",
      "aliases": [
        "curating tasks",
        "curating task"
      ],
      "types": [
        "activity",
        "information management task",
        "data processing task",
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process of organizing, categorizing, and maintaining information or data.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "curating tasks",
          "local_types": [
            "data processing task",
            "information management task"
          ],
          "iri": "Entity-curating_task-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-7",
          "local_name": "curating task",
          "local_types": [
            "task",
            "activity"
          ],
          "iri": "Entity-curating_task-Mention-2"
        }
      ],
      "relevance": 0.420166015625
    },
    "Entity-_satisfies__support_": {
      "node_id": "_satisfies__support_",
      "disambiguation_index": 0,
      "label": "(satisfies, support)",
      "aliases": [
        "(satisfies, support)"
      ],
      "types": [
        "notation",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical relationship indicating that one entity confirms or validates another.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "(satisfies, support)",
          "local_types": [
            "notation",
            "concept"
          ],
          "iri": "Entity-_satisfies__support_-Mention-1"
        }
      ],
      "relevance": 0.420166015625
    },
    "Entity-with_element_having_a_non-zero_value": {
      "node_id": "with_element_having_a_non-zero_value",
      "disambiguation_index": 0,
      "label": "with elements having a non-zero value",
      "aliases": [
        "with elements having a non-zero value"
      ],
      "types": [
        "property",
        "value"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A matrix product or result that contains nonzero values in its elements.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-2",
          "local_name": "with elements having a non-zero value",
          "local_types": [
            "property",
            "value"
          ],
          "iri": "Entity-with_element_having_a_non-zero_value-Mention-1"
        }
      ],
      "relevance": 0.420166015625
    },
    "Entity-e1": {
      "node_id": "e1",
      "disambiguation_index": 0,
      "label": "e1",
      "aliases": [
        "e1"
      ],
      "types": [
        "mathematical entity",
        "variable",
        "parameter",
        "entity",
        "object"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical variable or parameter that represents an object.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-7",
          "local_name": "e1",
          "local_types": [
            "mathematical entity",
            "variable"
          ],
          "iri": "Entity-e1-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-6",
          "local_name": "e1",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-e1-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-7",
          "local_name": "e1",
          "local_types": [
            "entity",
            "object"
          ],
          "iri": "Entity-e1-Mention-3"
        }
      ],
      "relevance": 0.419921875
    },
    "Entity-_1_": {
      "node_id": "_1_",
      "disambiguation_index": 0,
      "label": "(1)",
      "aliases": [
        "(1)"
      ],
      "types": [
        "notation",
        "equation",
        "reference",
        "citation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical notation or reference that represents a specific equation or citation.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "(1)",
          "local_types": [
            "notation",
            "equation",
            "reference"
          ],
          "iri": "Entity-_1_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-9-Sentence-5",
          "local_name": "(1)",
          "local_types": [
            "reference",
            "citation"
          ],
          "iri": "Entity-_1_-Mention-2"
        }
      ],
      "relevance": 0.419921875
    },
    "Entity-body_of_the_rule": {
      "node_id": "body_of_the_rule",
      "disambiguation_index": 0,
      "label": "body of the rule",
      "aliases": [
        "body of the rule"
      ],
      "types": [
        "mathematical condition",
        "logical premise",
        "rule component",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The part or section that contains the logical premise or mathematical condition",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "body of the rule",
          "local_types": [
            "logical expression",
            "rule component"
          ],
          "iri": "Entity-body_of_the_rule-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "body of the rule",
          "local_types": [
            "logical premise",
            "mathematical condition"
          ],
          "iri": "Entity-body_of_the_rule-Mention-2"
        }
      ],
      "relevance": 0.419921875
    },
    "Entity-novel_component": {
      "node_id": "novel_component",
      "disambiguation_index": 0,
      "label": "novel components",
      "aliases": [
        "novel components"
      ],
      "types": [
        "technology",
        "component",
        "innovation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "New or original parts of a system, technology, or innovation",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-11-Sentence-1",
          "local_name": "novel components",
          "local_types": [
            "component"
          ],
          "iri": "Entity-novel_component-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "novel components",
          "local_types": [
            "innovation",
            "technology"
          ],
          "iri": "Entity-novel_component-Mention-2"
        }
      ],
      "relevance": 0.419921875
    },
    "Entity-rule_quality": {
      "node_id": "rule_quality",
      "disambiguation_index": 0,
      "label": "rule quality",
      "aliases": [
        "rule quality"
      ],
      "types": [
        "quality measure",
        "concept",
        "quality metric",
        "metric",
        "evaluation criterion"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or standard used to evaluate and assess the goodness of rules",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-3-Sentence-1",
          "local_name": "rule quality",
          "local_types": [
            "concept",
            "evaluation criterion",
            "quality metric",
            "metric"
          ],
          "iri": "Entity-rule_quality-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "rule quality",
          "local_types": [
            "metric",
            "evaluation criterion"
          ],
          "iri": "Entity-rule_quality-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-6",
          "local_name": "rule quality",
          "local_types": [
            "quality measure",
            "evaluation criterion",
            "metric"
          ],
          "iri": "Entity-rule_quality-Mention-3"
        }
      ],
      "relevance": 0.419677734375
    },
    "Entity-predicate_p1___p2___...__pn_": {
      "node_id": "predicate_p1___p2___...__pn_",
      "disambiguation_index": 0,
      "label": "predicates P1', P2', ..., Pn'",
      "aliases": [
        "predicates P1', P2', ..., Pn'"
      ],
      "types": [
        "predicate sequence",
        "concept list"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sequence of logical predicates",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-10",
          "local_name": "predicates P1', P2', ..., Pn'",
          "local_types": [
            "predicate sequence",
            "concept list"
          ],
          "iri": "Entity-predicate_p1___p2___...__pn_-Mention-1"
        }
      ],
      "relevance": 0.419677734375
    },
    "Entity-frobenius_norm": {
      "node_id": "frobenius_norm",
      "disambiguation_index": 0,
      "label": "Frobenius norm",
      "aliases": [
        "Frobenius norm"
      ],
      "types": [
        "mathematical operation",
        "mathematical concept",
        "norm"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical operation used to measure the magnitude of vectors or matrices, particularly in linear algebra and functional analysis.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "Frobenius norm",
          "local_types": [
            "mathematical operation",
            "mathematical concept",
            "norm"
          ],
          "iri": "Entity-frobenius_norm-Mention-1"
        }
      ],
      "relevance": 0.41943359375
    },
    "Entity-_e_1__e_2__e_3__e_4__e_5_": {
      "node_id": "_e_1__e_2__e_3__e_4__e_5_",
      "disambiguation_index": 0,
      "label": "{e_1, e_2, e_3, e_4, e_5}",
      "aliases": [
        "{e_3, e_4, e_5, e_6, e_7, e_8, e_9}",
        "{e_1, e_2, e_3, e_4, e_5}"
      ],
      "types": [
        "instantiation set for z_0 in the body part",
        "instantiations",
        "instantiation set for z_0 in the head part",
        "entities",
        "set of entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-10-Sentence-3",
          "local_name": "{e_1, e_2, e_3, e_4, e_5}",
          "local_types": [
            "entities",
            "set of entities",
            "instantiations",
            "instantiation set for z_0 in the head part"
          ],
          "iri": "Entity-_e_1__e_2__e_3__e_4__e_5_-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-10-Sentence-3",
          "local_name": "{e_3, e_4, e_5, e_6, e_7, e_8, e_9}",
          "local_types": [
            "entities",
            "set of entities",
            "instantiation set for z_0 in the body part",
            "instantiations"
          ],
          "iri": "Entity-_e_1__e_2__e_3__e_4__e_5_-Mention-2"
        }
      ],
      "relevance": 0.41943359375
    },
    "Entity-poker_hand": {
      "node_id": "poker_hand",
      "disambiguation_index": 0,
      "label": "poker hand",
      "aliases": [
        "poker hand"
      ],
      "types": [
        "dataset",
        "game",
        "concept",
        "game component"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A set of five cards dealt to a player in a game, typically including one or more specific card combinations.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-2",
          "local_name": "poker hand",
          "local_types": [
            "dataset",
            "game",
            "concept",
            "game component"
          ],
          "iri": "Entity-poker_hand-Mention-1"
        }
      ],
      "relevance": 0.419189453125
    },
    "Entity-fact": {
      "node_id": "fact",
      "disambiguation_index": 0,
      "label": "fact",
      "aliases": [
        "fact",
        "facts"
      ],
      "types": [
        "proposition",
        "statements about something",
        "information units",
        "statement",
        "information",
        "knowledge",
        "concept",
        "data",
        "piece of information",
        "statement of truth",
        "assertion",
        "data set",
        "data point",
        "fact",
        "knowledge unit",
        "information unit",
        "data points"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A statement or piece of information that provides evidence, support, or insight into something",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-2",
          "local_name": "fact",
          "local_types": [
            "information",
            "data"
          ],
          "iri": "Entity-fact-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "facts",
          "local_types": [
            "statement of truth",
            "assertion"
          ],
          "iri": "Entity-fact-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-4",
          "local_name": "fact",
          "local_types": [
            "piece of information",
            "data point"
          ],
          "iri": "Entity-fact-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-9-Sentence-2",
          "local_name": "fact",
          "local_types": [
            "information",
            "data point"
          ],
          "iri": "Entity-fact-Mention-4"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "fact",
          "local_types": [
            "assertion",
            "piece of information",
            "statement"
          ],
          "iri": "Entity-fact-Mention-5"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-3",
          "local_name": "facts",
          "local_types": [
            "concept",
            "statement"
          ],
          "iri": "Entity-fact-Mention-6"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "fact",
          "local_types": [
            "piece of information",
            "knowledge unit"
          ],
          "iri": "Entity-fact-Mention-7"
        },
        {
          "reference": "Section-3-Paragraph-4-Sentence-1",
          "local_name": "facts",
          "local_types": [
            "data point"
          ],
          "iri": "Entity-fact-Mention-8"
        },
        {
          "reference": "Section-3-Paragraph-6-Sentence-4",
          "local_name": "facts",
          "local_types": [
            "data points",
            "information units"
          ],
          "iri": "Entity-fact-Mention-9"
        },
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "fact",
          "local_types": [
            "concept",
            "statement"
          ],
          "iri": "Entity-fact-Mention-10"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "fact",
          "local_types": [
            "knowledge",
            "statement"
          ],
          "iri": "Entity-fact-Mention-11"
        },
        {
          "reference": "Section-5-Paragraph-3-Sentence-10",
          "local_name": "facts",
          "local_types": [
            "information",
            "statements about something"
          ],
          "iri": "Entity-fact-Mention-12"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-7",
          "local_name": "fact",
          "local_types": [
            "statement",
            "proposition"
          ],
          "iri": "Entity-fact-Mention-13"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-1",
          "local_name": "facts",
          "local_types": [
            "data set",
            "information"
          ],
          "iri": "Entity-fact-Mention-14"
        },
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "facts",
          "local_types": [
            "data point",
            "information unit"
          ],
          "iri": "Entity-fact-Mention-15"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-2",
          "local_name": "facts",
          "local_types": [
            "information",
            "knowledge"
          ],
          "iri": "Entity-fact-Mention-16"
        },
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "facts",
          "local_types": [
            "information",
            "data points"
          ],
          "iri": "Entity-fact-Mention-17"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-2",
          "local_name": "facts",
          "local_types": [
            "data point",
            "fact",
            "knowledge unit"
          ],
          "iri": "Entity-fact-Mention-18"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "fact",
          "local_types": [
            "information",
            "data point"
          ],
          "iri": "Entity-fact-Mention-19"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-2",
          "local_name": "facts",
          "local_types": [
            "information",
            "data"
          ],
          "iri": "Entity-fact-Mention-20"
        }
      ],
      "relevance": 0.4189453125
    },
    "Entity-presidentof____usa_": {
      "node_id": "presidentof____usa_",
      "disambiguation_index": 0,
      "label": "presidentOf(?, USA)",
      "aliases": [
        "presidentOf(?, USA)"
      ],
      "types": [
        "query",
        "entity query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The query for identifying the president of an unknown country in the United States.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "presidentOf(?, USA)",
          "local_types": [
            "query",
            "entity query"
          ],
          "iri": "Entity-presidentof____usa_-Mention-1"
        }
      ],
      "relevance": 0.418701171875
    },
    "Entity-_x__z_i__y_": {
      "node_id": "_x__z_i__y_",
      "disambiguation_index": 0,
      "label": "{x, z_i, y}",
      "aliases": [
        "{x, z_i, y}"
      ],
      "types": [
        "set",
        "variable set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "{x, z_i, y}",
          "local_types": [
            "set",
            "variable set"
          ],
          "iri": "Entity-_x__z_i__y_-Mention-1"
        }
      ],
      "relevance": 0.41845703125
    },
    "Entity-query_need_to_be_relevant_in_order_to_be_useful": {
      "node_id": "query_need_to_be_relevant_in_order_to_be_useful",
      "disambiguation_index": 0,
      "label": "queries need to be relevant in order to be useful",
      "aliases": [
        "queries need to be relevant in order to be useful"
      ],
      "types": [
        "usefulness",
        "requirement"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The requirement that queries must be relevant in order to be useful.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-1",
          "local_name": "queries need to be relevant in order to be useful",
          "local_types": [
            "usefulness",
            "requirement"
          ],
          "iri": "Entity-query_need_to_be_relevant_in_order_to_be_useful-Mention-1"
        }
      ],
      "relevance": 0.41845703125
    },
    "Entity-the_maximum_size_of_each_sample_to_800_entity": {
      "node_id": "the_maximum_size_of_each_sample_to_800_entity",
      "disambiguation_index": 0,
      "label": "the maximum size of each sample to 800 entities",
      "aliases": [
        "the maximum size of each sample to 800 entities"
      ],
      "types": [
        "size limit",
        "parameter"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The parameter that sets a limit on the number of entities included in each sample, with a maximum size of 800 entities.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-3",
          "local_name": "the maximum size of each sample to 800 entities",
          "local_types": [
            "size limit",
            "parameter"
          ],
          "iri": "Entity-the_maximum_size_of_each_sample_to_800_entity-Mention-1"
        }
      ],
      "relevance": 0.41845703125
    },
    "Entity-previous_work": {
      "node_id": "previous_work",
      "disambiguation_index": 0,
      "label": "Previous work",
      "aliases": [
        "Previous work"
      ],
      "types": [
        "study",
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Research or studies that have been conducted previously",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-1",
          "local_name": "Previous work",
          "local_types": [
            "study",
            "research"
          ],
          "iri": "Entity-previous_work-Mention-1"
        }
      ],
      "relevance": 0.41796875
    },
    "Entity-false_instead_of_true": {
      "node_id": "false_instead_of_true",
      "disambiguation_index": 0,
      "label": "false instead of true",
      "aliases": [
        "false instead of true"
      ],
      "types": [
        "condition",
        "logical condition"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The situation where genuinely missing facts in a test set are treated as false answers, thereby incorrectly penalizing precision and recall metrics.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-3",
          "local_name": "false instead of true",
          "local_types": [
            "condition",
            "logical condition"
          ],
          "iri": "Entity-false_instead_of_true-Mention-1"
        }
      ],
      "relevance": 0.41796875
    },
    "Entity-performance": {
      "node_id": "performance",
      "disambiguation_index": 0,
      "label": "performance",
      "aliases": [
        "performance"
      ],
      "types": [
        "evaluation metric",
        "result",
        "system assessment"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The outcome or achievement of a system, process, or individual measured against specific criteria.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "performance",
          "local_types": [
            "evaluation metric",
            "system assessment"
          ],
          "iri": "Entity-performance-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-1",
          "local_name": "performance",
          "local_types": [
            "evaluation metric",
            "result"
          ],
          "iri": "Entity-performance-Mention-2"
        }
      ],
      "relevance": 0.417724609375
    },
    "Entity-conventionally__this_known-missing_fact_is_used_to_generate_the_following_two_relevant_query_presidentof____usa__and_presidentof__obama___": {
      "node_id": "conventionally__this_known-missing_fact_is_used_to_generate_the_following_two_relevant_query_presidentof____usa__and_presidentof__obama___",
      "disambiguation_index": 0,
      "label": "conventionally, this known-missing fact is used to generate the following two relevant queries presidentOf(?, USA) and presidentOf(Obama, ?)",
      "aliases": [
        "conventionally, this known-missing fact is used to generate the following two relevant queries presidentOf(?, USA) and presidentOf(Obama, ?)"
      ],
      "types": [
        "methodology",
        "query generation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The known-missing fact is about Barack Obama being the President of the United States.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "conventionally, this known-missing fact is used to generate the following two relevant queries presidentOf(?, USA) and presidentOf(Obama, ?)",
          "local_types": [
            "methodology",
            "query generation"
          ],
          "iri": "Entity-conventionally__this_known-missing_fact_is_used_to_generate_the_following_two_relevant_query_presidentof____usa__and_presidentof__obama___-Mention-1"
        }
      ],
      "relevance": 0.41748046875
    },
    "Entity-this_paper": {
      "node_id": "this_paper",
      "disambiguation_index": 0,
      "label": "this paper",
      "aliases": [
        "paper",
        "this paper"
      ],
      "types": [
        "paper",
        "publication",
        "document",
        "research paper",
        "research publication",
        "academic work"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A written work presenting research or ideas",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-1",
          "local_name": "this paper",
          "local_types": [
            "publication",
            "paper",
            "research publication"
          ],
          "iri": "Entity-this_paper-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-4",
          "local_name": "paper",
          "local_types": [
            "research paper",
            "academic work"
          ],
          "iri": "Entity-this_paper-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-1",
          "local_name": "paper",
          "local_types": [
            "publication",
            "document",
            "research paper"
          ],
          "iri": "Entity-this_paper-Mention-3"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "paper",
          "local_types": [
            "document"
          ],
          "iri": "Entity-this_paper-Mention-4"
        }
      ],
      "relevance": 0.417236328125
    },
    "Entity-unknown_unknown": {
      "node_id": "unknown_unknown",
      "disambiguation_index": 0,
      "label": "unknown unknowns",
      "aliases": [
        "unknown unknowns"
      ],
      "types": [
        "concept",
        "idea",
        "unknown"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Unrecognized or unexplored concepts or ideas",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-4",
          "local_name": "unknown unknowns",
          "local_types": [
            "concept",
            "idea",
            "unknown"
          ],
          "iri": "Entity-unknown_unknown-Mention-1"
        }
      ],
      "relevance": 0.4169921875
    },
    "Entity-copy": {
      "node_id": "copy",
      "disambiguation_index": 0,
      "label": "copy",
      "aliases": [
        "copy"
      ],
      "types": [
        "document"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A reproduction or duplicate of an original document.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-5",
          "local_name": "copy",
          "local_types": [
            "document"
          ],
          "iri": "Entity-copy-Mention-1"
        }
      ],
      "relevance": 0.4169921875
    },
    "Entity-auc": {
      "node_id": "auc",
      "disambiguation_index": 0,
      "label": "AUC",
      "aliases": [
        "AUC"
      ],
      "types": [
        "performance measure",
        "statistic",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of model performance that represents the probability of correctly classifying a positive instance",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "AUC",
          "local_types": [
            "performance measure",
            "statistic",
            "metric"
          ],
          "iri": "Entity-auc-Mention-1"
        }
      ],
      "relevance": 0.4169921875
    },
    "Entity-set_of_entity": {
      "node_id": "set_of_entity",
      "disambiguation_index": 0,
      "label": "set of entities",
      "aliases": [
        "set of entities"
      ],
      "types": [
        "collection",
        "data set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A group of related or connected things",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-8",
          "local_name": "set of entities",
          "local_types": [
            "collection",
            "data set"
          ],
          "iri": "Entity-set_of_entity-Mention-1"
        }
      ],
      "relevance": 0.416748046875
    },
    "Entity-e__e1__...__en_": {
      "node_id": "e__e1__...__en_",
      "disambiguation_index": 0,
      "label": "E={e1,...,en}",
      "aliases": [
        "with E= {e1,...,en}",
        "E={e1,...,en}"
      ],
      "types": [
        "collection",
        "set",
        "entity set",
        "set definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "E={e1,...,en}",
          "local_types": [
            "set",
            "collection"
          ],
          "iri": "Entity-e__e1__...__en_-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-3",
          "local_name": "with E= {e1,...,en}",
          "local_types": [
            "set definition",
            "entity set"
          ],
          "iri": "Entity-e__e1__...__en_-Mention-2"
        }
      ],
      "relevance": 0.416748046875
    },
    "Entity-p___i1_": {
      "node_id": "p___i1_",
      "disambiguation_index": 0,
      "label": "P_{i+1}",
      "aliases": [
        "P_{i+1}"
      ],
      "types": [
        "variable",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A variable or parameter that represents a value or quantity.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-12-Sentence-2",
          "local_name": "P_{i+1}",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-p___i1_-Mention-1"
        }
      ],
      "relevance": 0.41650390625
    },
    "Entity-this_(1)": {
      "node_id": "this_(1)",
      "disambiguation_index": 1,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "article"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The current paper, which is an open-access article published under the terms of its license.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-5-Sentence-2",
          "local_name": "This",
          "local_types": [
            "article"
          ],
          "iri": "Entity-this_(1)-Mention-1"
        }
      ],
      "relevance": 0.41650390625
    },
    "Entity-our": {
      "node_id": "our",
      "disambiguation_index": 0,
      "label": "our",
      "aliases": [
        "our"
      ],
      "types": [
        "organization",
        "research group"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collective entity comprising individuals with shared goals or interests",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-6-Sentence-1",
          "local_name": "our",
          "local_types": [
            "organization",
            "research group"
          ],
          "iri": "Entity-our-Mention-1"
        }
      ],
      "relevance": 0.416259765625
    },
    "Entity-by_instantiating_the_body_of_this_rule_a_follows": {
      "node_id": "by_instantiating_the_body_of_this_rule_a_follows",
      "disambiguation_index": 0,
      "label": "By instantiating the body of this rule as follows",
      "aliases": [
        "By instantiating the body of this rule as follows"
      ],
      "types": [
        "action",
        "instantiation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The process or method of implementing a specific instance of a rule's body",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "By instantiating the body of this rule as follows",
          "local_types": [
            "action",
            "instantiation"
          ],
          "iri": "Entity-by_instantiating_the_body_of_this_rule_a_follows-Mention-1"
        }
      ],
      "relevance": 0.41552734375
    },
    "Entity-d": {
      "node_id": "d",
      "disambiguation_index": 0,
      "label": "d",
      "aliases": [
        "d"
      ],
      "types": [
        "dimension",
        "variable",
        "parameter",
        "integer"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A numerical value representing the number of features or dimensions in a data representation.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-4",
          "local_name": "d",
          "local_types": [
            "dimension",
            "variable",
            "parameter"
          ],
          "iri": "Entity-d-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-5",
          "local_name": "d",
          "local_types": [
            "parameter",
            "integer"
          ],
          "iri": "Entity-d-Mention-2"
        }
      ],
      "relevance": 0.415283203125
    },
    "Entity-predictor": {
      "node_id": "predictor",
      "disambiguation_index": 0,
      "label": "predictors",
      "aliases": [
        "predictors"
      ],
      "types": [
        "machine learning model",
        "artificial intelligence system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Variables or values that are used as inputs in a machine learning model or artificial intelligence system to predict outcomes.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-4",
          "local_name": "predictors",
          "local_types": [
            "machine learning model",
            "artificial intelligence system"
          ],
          "iri": "Entity-predictor-Mention-1"
        }
      ],
      "relevance": 0.415283203125
    },
    "Entity-heuristic": {
      "node_id": "heuristic",
      "disambiguation_index": 0,
      "label": "heuristic",
      "aliases": [
        "heuristic"
      ],
      "types": [
        "methodology",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic and efficient approach or methodology",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-9",
          "local_name": "heuristic",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-heuristic-Mention-1"
        }
      ],
      "relevance": 0.415283203125
    },
    "Entity-the_scoring_function": {
      "node_id": "the_scoring_function",
      "disambiguation_index": 0,
      "label": "The scoring function",
      "aliases": [
        "The scoring function"
      ],
      "types": [
        "function"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A mathematical formula used to estimate the quality or likelihood of a fact being true, given its predicates and entities.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-7",
          "local_name": "The scoring function",
          "local_types": [
            "function"
          ],
          "iri": "Entity-the_scoring_function-Mention-1"
        }
      ],
      "relevance": 0.415283203125
    },
    "Entity-occupation": {
      "node_id": "occupation",
      "disambiguation_index": 0,
      "label": "occupation",
      "aliases": [
        "occupation"
      ],
      "types": [
        "concept",
        "profession",
        "relation",
        "job title",
        "job"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person's main activity or role in their life, often involving remuneration.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "occupation",
          "local_types": [
            "profession",
            "job title",
            "job"
          ],
          "iri": "Entity-occupation-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-3",
          "local_name": "occupation",
          "local_types": [
            "relation",
            "profession",
            "concept",
            "job title"
          ],
          "iri": "Entity-occupation-Mention-2"
        }
      ],
      "relevance": 0.414794921875
    },
    "Entity-a_reduced_deck_with_6_rank_and_2_suit": {
      "node_id": "a_reduced_deck_with_6_rank_and_2_suit",
      "disambiguation_index": 0,
      "label": "a reduced deck with 6 ranks and 2 suits",
      "aliases": [
        "a reduced deck with 6 ranks and 2 suits"
      ],
      "types": [
        "deck",
        "ranks",
        "suits"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A standard set of five cards used to play Poker, consisting of six possible card ranks and two suit types.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-2",
          "local_name": "a reduced deck with 6 ranks and 2 suits",
          "local_types": [
            "deck",
            "ranks",
            "suits"
          ],
          "iri": "Entity-a_reduced_deck_with_6_rank_and_2_suit-Mention-1"
        }
      ],
      "relevance": 0.414794921875
    },
    "Entity-rank": {
      "node_id": "rank",
      "disambiguation_index": 0,
      "label": "ranks",
      "aliases": [
        "rank",
        "ranks"
      ],
      "types": [
        "measurement unit",
        "categories",
        "attribute",
        "labels"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a set or classification",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-2",
          "local_name": "ranks",
          "local_types": [
            "categories",
            "labels"
          ],
          "iri": "Entity-rank-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-10-Sentence-3",
          "local_name": "rank",
          "local_types": [
            "attribute",
            "measurement unit"
          ],
          "iri": "Entity-rank-Mention-2"
        }
      ],
      "relevance": 0.41455078125
    },
    "Entity-m_1_and_m_2": {
      "node_id": "m_1_and_m_2",
      "disambiguation_index": 0,
      "label": "M_1 and M_2",
      "aliases": [
        "M_1 and M_2"
      ],
      "types": [
        "matrix",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of matrices",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "M_1 and M_2",
          "local_types": [
            "matrix",
            "variable"
          ],
          "iri": "Entity-m_1_and_m_2-Mention-1"
        }
      ],
      "relevance": 0.414306640625
    },
    "Entity-return": {
      "node_id": "return",
      "disambiguation_index": 0,
      "label": "Return",
      "aliases": [
        "Return"
      ],
      "types": [
        "book",
        "function",
        "title",
        "mathematical concept"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A return refers to a movement or action that goes back, reverses direction, or comes full circle.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-13",
          "local_name": "Return",
          "local_types": [
            "book",
            "function",
            "title",
            "mathematical concept"
          ],
          "iri": "Entity-return-Mention-1"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-erroneous_fact": {
      "node_id": "erroneous_fact",
      "disambiguation_index": 0,
      "label": "erroneous facts",
      "aliases": [
        "erroneous facts"
      ],
      "types": [
        "data",
        "information"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Inaccurate or misleading data",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-8",
          "local_name": "erroneous facts",
          "local_types": [
            "data",
            "information"
          ],
          "iri": "Entity-erroneous_fact-Mention-1"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-we": {
      "node_id": "we",
      "disambiguation_index": 0,
      "label": "We",
      "aliases": [
        "we",
        "We"
      ],
      "types": [
        "author",
        "organization",
        "research group",
        "person",
        "pronoun",
        "researcher"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A group or collection of individuals who are working together to achieve a common goal",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author",
            "researcher"
          ],
          "iri": "Entity-we-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-6-Sentence-3",
          "local_name": "we",
          "local_types": [
            "pronoun",
            "person"
          ],
          "iri": "Entity-we-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-6-Sentence-1",
          "local_name": "we",
          "local_types": [
            "author",
            "researcher"
          ],
          "iri": "Entity-we-Mention-3"
        },
        {
          "reference": "Section-11-Paragraph-3-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author",
            "organization",
            "research group"
          ],
          "iri": "Entity-we-Mention-4"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-we_propose": {
      "node_id": "we_propose",
      "disambiguation_index": 0,
      "label": "We propose",
      "aliases": [
        "We propose"
      ],
      "types": [
        "research",
        "proposition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A proposal or suggestion for a research idea or plan",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "We propose",
          "local_types": [
            "research",
            "proposition"
          ],
          "iri": "Entity-we_propose-Mention-1"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-section_2": {
      "node_id": "section_2",
      "disambiguation_index": 0,
      "label": "Section 2",
      "aliases": [
        "Section 2"
      ],
      "types": [
        "chapter",
        "part-of-paper",
        "part",
        "section",
        "academic work"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A part or division within a larger work that contains organized content",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-2",
          "local_name": "Section 2",
          "local_types": [
            "chapter",
            "part-of-paper",
            "part",
            "section",
            "academic work"
          ],
          "iri": "Entity-section_2-Mention-1"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-universal_quantification_of_all_variable": {
      "node_id": "universal_quantification_of_all_variable",
      "disambiguation_index": 0,
      "label": "universal quantification of all variables",
      "aliases": [
        "universal quantification of all variables"
      ],
      "types": [
        "quantification",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept that applies universally to all variables, quantifying their scope and relationships.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "universal quantification of all variables",
          "local_types": [
            "quantification",
            "variable"
          ],
          "iri": "Entity-universal_quantification_of_all_variable-Mention-1"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-gb_ram": {
      "node_id": "gb_ram",
      "disambiguation_index": 0,
      "label": "GB RAM",
      "aliases": [
        "GB RAM"
      ],
      "types": [
        "memory capacity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A unit of measurement for computer memory capacity",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-1",
          "local_name": "GB RAM",
          "local_types": [
            "memory capacity"
          ],
          "iri": "Entity-gb_ram-Mention-1"
        }
      ],
      "relevance": 0.4140625
    },
    "Entity-definition_2": {
      "node_id": "definition_2",
      "disambiguation_index": 0,
      "label": "Definition 2",
      "aliases": [
        "Definition 3",
        "Definition 2",
        "Definition 5"
      ],
      "types": [
        "notation",
        "definition",
        "concept",
        "concept definition"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A standardized concept or notation used to describe a specific idea, principle, or rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "Definition 2",
          "local_types": [
            "notation",
            "definition",
            "concept"
          ],
          "iri": "Entity-definition_2-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-1",
          "local_name": "Definition 3",
          "local_types": [
            "concept definition",
            "definition",
            "concept",
            "notation"
          ],
          "iri": "Entity-definition_2-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-11-Sentence-1",
          "local_name": "Definition 5",
          "local_types": [
            "notation",
            "definition",
            "concept"
          ],
          "iri": "Entity-definition_2-Mention-3"
        }
      ],
      "relevance": 0.413818359375
    },
    "Entity-experiment": {
      "node_id": "experiment",
      "disambiguation_index": 0,
      "label": "experiments",
      "aliases": [
        "experiments",
        "experiment"
      ],
      "types": [
        "study",
        "test",
        "tests",
        "evaluation process",
        "scientific investigation",
        "research study",
        "evaluation",
        "research",
        "research studies",
        "experimentation",
        "research activity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic process of testing or evaluating hypotheses, theories, or ideas through controlled trials or observations.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-5",
          "local_name": "experiments",
          "local_types": [
            "study",
            "test",
            "evaluation process",
            "evaluation"
          ],
          "iri": "Entity-experiment-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "experiments",
          "local_types": [
            "research study",
            "evaluation process"
          ],
          "iri": "Entity-experiment-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-6-Sentence-1",
          "local_name": "experiments",
          "local_types": [
            "study",
            "research study",
            "test"
          ],
          "iri": "Entity-experiment-Mention-3"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-1",
          "local_name": "experiments",
          "local_types": [
            "study",
            "research",
            "research activity",
            "experimentation"
          ],
          "iri": "Entity-experiment-Mention-4"
        },
        {
          "reference": "Section-9-Paragraph-10-Sentence-1",
          "local_name": "experiments",
          "local_types": [
            "research studies",
            "tests"
          ],
          "iri": "Entity-experiment-Mention-5"
        },
        {
          "reference": "Section-10-Paragraph-8-Sentence-1",
          "local_name": "experiment",
          "local_types": [
            "research study",
            "scientific investigation"
          ],
          "iri": "Entity-experiment-Mention-6"
        },
        {
          "reference": "Section-11-Paragraph-1-Sentence-1",
          "local_name": "experiments",
          "local_types": [
            "research study",
            "evaluation"
          ],
          "iri": "Entity-experiment-Mention-7"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-4",
          "local_name": "experiment",
          "local_types": [
            "research activity",
            "study"
          ],
          "iri": "Entity-experiment-Mention-8"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-6",
          "local_name": "experiments",
          "local_types": [
            "study",
            "research study"
          ],
          "iri": "Entity-experiment-Mention-9"
        }
      ],
      "relevance": 0.413818359375
    },
    "Entity-p_h": {
      "node_id": "p_h",
      "disambiguation_index": 0,
      "label": "P_h",
      "aliases": [
        "P_h"
      ],
      "types": [
        "predicate",
        "head",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A predicate that serves as the head or main verb of a logical rule.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-5",
          "local_name": "P_h",
          "local_types": [
            "predicate",
            "head",
            "variable"
          ],
          "iri": "Entity-p_h-Mention-1"
        }
      ],
      "relevance": 0.413330078125
    },
    "Entity-holdback_test_set": {
      "node_id": "holdback_test_set",
      "disambiguation_index": 0,
      "label": "holdback test set",
      "aliases": [
        "holdback test set"
      ],
      "types": [
        "evaluation dataset",
        "testing data"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A dataset used for testing and evaluating queries of unclear origin, typically derived from experimental settings.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "holdback test set",
          "local_types": [
            "evaluation dataset",
            "testing data"
          ],
          "iri": "Entity-holdback_test_set-Mention-1"
        }
      ],
      "relevance": 0.4130859375
    },
    "Entity-earlier_work": {
      "node_id": "earlier_work",
      "disambiguation_index": 0,
      "label": "earlier work",
      "aliases": [
        "earlier work"
      ],
      "types": [
        "study",
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Research or study conducted prior to a specific investigation or project",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-1",
          "local_name": "earlier work",
          "local_types": [
            "study",
            "research"
          ],
          "iri": "Entity-earlier_work-Mention-1"
        }
      ],
      "relevance": 0.4130859375
    },
    "Entity-similarity_fitness_function": {
      "node_id": "similarity_fitness_function",
      "disambiguation_index": 0,
      "label": "similarity fitness function",
      "aliases": [
        "similarity fitness function"
      ],
      "types": [
        "mathematical concept",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function that measures the similarity between entities or concepts.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-3-Sentence-2",
          "local_name": "similarity fitness function",
          "local_types": [
            "mathematical concept",
            "function"
          ],
          "iri": "Entity-similarity_fitness_function-Mention-1"
        }
      ],
      "relevance": 0.4130859375
    },
    "Entity-evaluation__": {
      "node_id": "evaluation__",
      "disambiguation_index": 0,
      "label": "Evaluation()",
      "aliases": [
        "Evaluation()"
      ],
      "types": [
        "evaluation method",
        "evaluation_method",
        "evaluation function",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic process of assessing or judging the quality, performance, or outcome of something.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-1-Sentence-1",
          "local_name": "Evaluation()",
          "local_types": [
            "evaluation_method",
            "evaluation method",
            "function",
            "evaluation function"
          ],
          "iri": "Entity-evaluation__-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-10-Sentence-1",
          "local_name": "Evaluation()",
          "local_types": [
            "evaluation method",
            "function",
            "evaluation function"
          ],
          "iri": "Entity-evaluation__-Mention-2"
        }
      ],
      "relevance": 0.4130859375
    },
    "Entity-definition_1": {
      "node_id": "definition_1",
      "disambiguation_index": 0,
      "label": "Definition 1",
      "aliases": [
        "Definition 1"
      ],
      "types": [
        "definition",
        "concept",
        "reference"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A concept or principle that serves as a foundation for understanding or explaining something.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "Definition 1",
          "local_types": [
            "definition",
            "concept"
          ],
          "iri": "Entity-definition_1-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-3",
          "local_name": "Definition 1",
          "local_types": [
            "reference",
            "definition"
          ],
          "iri": "Entity-definition_1-Mention-2"
        }
      ],
      "relevance": 0.412841796875
    },
    "Entity-variable": {
      "node_id": "variable",
      "disambiguation_index": 0,
      "label": "variable",
      "aliases": [
        "variable",
        "variables"
      ],
      "types": [
        "mathematical concept",
        "abstract concepts",
        "mathematical variables",
        "programming terminology",
        "logical term",
        "data structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A value or symbol that represents a measurable quantity or an abstract concept.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-5",
          "local_name": "variable",
          "local_types": [
            "mathematical concept",
            "logical term"
          ],
          "iri": "Entity-variable-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-2-Sentence-4",
          "local_name": "variables",
          "local_types": [
            "data structure",
            "programming terminology"
          ],
          "iri": "Entity-variable-Mention-2"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "variables",
          "local_types": [
            "mathematical variables",
            "abstract concepts"
          ],
          "iri": "Entity-variable-Mention-3"
        }
      ],
      "relevance": 0.412841796875
    },
    "Entity-_e1__e2__e3_": {
      "node_id": "_e1__e2__e3_",
      "disambiguation_index": 0,
      "label": "{e1,e2,e3}",
      "aliases": [
        "{e1,e2,e3}"
      ],
      "types": [
        "entities",
        "mathematical entity",
        "set",
        "mathematical structure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical set of three elements with specific relationships between them.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-3-Sentence-3",
          "local_name": "{e1,e2,e3}",
          "local_types": [
            "entities",
            "mathematical entity",
            "set",
            "mathematical structure"
          ],
          "iri": "Entity-_e1__e2__e3_-Mention-1"
        }
      ],
      "relevance": 0.41259765625
    },
    "Entity-numerical_attribute": {
      "node_id": "numerical_attribute",
      "disambiguation_index": 0,
      "label": "numerical attributes",
      "aliases": [
        "numerical attributes"
      ],
      "types": [
        "property",
        "data attribute",
        "attribute",
        "feature"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A characteristic or feature of an entity that has a quantitative value",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-2",
          "local_name": "numerical attributes",
          "local_types": [
            "property",
            "data attribute",
            "attribute",
            "feature"
          ],
          "iri": "Entity-numerical_attribute-Mention-1"
        }
      ],
      "relevance": 0.41259765625
    },
    "Entity-the_head_of_r": {
      "node_id": "the_head_of_r",
      "disambiguation_index": 0,
      "label": "the head of r",
      "aliases": [
        "the head of r"
      ],
      "types": [
        "concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The 'head' of an existential rule, denoting the predicate and entities involved in the rule's conclusion.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-4",
          "local_name": "the head of r",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-the_head_of_r-Mention-1"
        }
      ],
      "relevance": 0.412109375
    },
    "Entity-rule_body": {
      "node_id": "rule_body",
      "disambiguation_index": 0,
      "label": "rule body",
      "aliases": [
        "rule body"
      ],
      "types": [
        "pattern",
        "condition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The part or component that specifies the conditions under which a rule applies.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-6",
          "local_name": "rule body",
          "local_types": [
            "pattern",
            "condition"
          ],
          "iri": "Entity-rule_body-Mention-1"
        }
      ],
      "relevance": 0.41162109375
    },
    "Entity-hybrid_approach": {
      "node_id": "hybrid_approach",
      "disambiguation_index": 0,
      "label": "hybrid approach",
      "aliases": [
        "hybrid approach"
      ],
      "types": [
        "methodology",
        "approach"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A combination of different methods or techniques used to achieve a particular goal or solve a problem.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-20-Sentence-2",
          "local_name": "hybrid approach",
          "local_types": [
            "methodology",
            "approach"
          ],
          "iri": "Entity-hybrid_approach-Mention-1"
        }
      ],
      "relevance": 0.41162109375
    },
    "Entity-future_work": {
      "node_id": "future_work",
      "disambiguation_index": 0,
      "label": "future work",
      "aliases": [
        "future work"
      ],
      "types": [
        "work",
        "research direction",
        "research",
        "future",
        "project goal"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Research or projects that are planned to be undertaken at a later time",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "future work",
          "local_types": [
            "work",
            "research direction",
            "research",
            "future",
            "project goal"
          ],
          "iri": "Entity-future_work-Mention-1"
        }
      ],
      "relevance": 0.411376953125
    },
    "Entity-a_copy_dated_december_2014_provided_in_amie": {
      "node_id": "a_copy_dated_december_2014_provided_in_amie",
      "disambiguation_index": 0,
      "label": "a copy dated December 2014 provided in AMIE+",
      "aliases": [
        "a copy dated December 2014 provided in AMIE+"
      ],
      "types": [
        "reference"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A dataset used for experiments, specifically a copy of the data from AMIE+ as of December 2014.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-5",
          "local_name": "a copy dated December 2014 provided in AMIE+",
          "local_types": [
            "reference"
          ],
          "iri": "Entity-a_copy_dated_december_2014_provided_in_amie-Mention-1"
        }
      ],
      "relevance": 0.411376953125
    },
    "Entity-citizenof__x__y__livesin__x__z___locatedin__z__y_": {
      "node_id": "citizenof__x__y__livesin__x__z___locatedin__z__y_",
      "disambiguation_index": 0,
      "label": "citizenOf(x, y) livesIn(x, z) ^ locatedIn(z, y)",
      "aliases": [
        "citizenOf(x, y) livesIn(x, z) ^ locatedIn(z, y)"
      ],
      "types": [
        "ontology statement",
        "rule",
        "logical_rule",
        "logical rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A statement describing an individual's citizenship and residence information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "citizenOf(x, y) livesIn(x, z) ^ locatedIn(z, y)",
          "local_types": [
            "ontology statement",
            "rule",
            "logical_rule",
            "logical rule"
          ],
          "iri": "Entity-citizenof__x__y__livesin__x__z___locatedin__z__y_-Mention-1"
        }
      ],
      "relevance": 0.410888671875
    },
    "Entity-parameter": {
      "node_id": "parameter",
      "disambiguation_index": 0,
      "label": "parameters",
      "aliases": [
        "Parameter",
        "parameters"
      ],
      "types": [
        "parameter",
        "concept",
        "configuration",
        "data set",
        "setting"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A variable or value that defines a specific setting or condition",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "parameters",
          "local_types": [
            "setting",
            "configuration"
          ],
          "iri": "Entity-parameter-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-2-Sentence-3",
          "local_name": "Parameter",
          "local_types": [
            "concept",
            "parameter"
          ],
          "iri": "Entity-parameter-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-13-Sentence-2",
          "local_name": "parameters",
          "local_types": [
            "setting",
            "configuration",
            "data set"
          ],
          "iri": "Entity-parameter-Mention-3"
        }
      ],
      "relevance": 0.410888671875
    },
    "Entity-entity_that_are_relevant_to_a_target_predicate": {
      "node_id": "entity_that_are_relevant_to_a_target_predicate",
      "disambiguation_index": 0,
      "label": "entities that are relevant to a target predicate",
      "aliases": [
        "entities that are relevant to a target predicate"
      ],
      "types": [
        "conceptual framework",
        "predicate logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Entities related to a specific logical or conceptual framework",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-4",
          "local_name": "entities that are relevant to a target predicate",
          "local_types": [
            "conceptual framework",
            "predicate logic"
          ],
          "iri": "Entity-entity_that_are_relevant_to_a_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.410888671875
    },
    "Entity-max_operator": {
      "node_id": "max_operator",
      "disambiguation_index": 0,
      "label": "Max operator",
      "aliases": [
        "Max operator"
      ],
      "types": [
        "operator",
        "technique",
        "mathematical function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function or technique that returns the maximum value from input values.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-8-Sentence-7",
          "local_name": "Max operator",
          "local_types": [
            "operator",
            "technique",
            "mathematical function"
          ],
          "iri": "Entity-max_operator-Mention-1"
        }
      ],
      "relevance": 0.410888671875
    },
    "Entity-article": {
      "node_id": "article",
      "disambiguation_index": 0,
      "label": "article",
      "aliases": [
        "article"
      ],
      "types": [
        "written content",
        "research output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A written work that presents research or information on a specific topic, typically published in a journal or online platform.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-5-Sentence-2",
          "local_name": "article",
          "local_types": [
            "written content",
            "research output"
          ],
          "iri": "Entity-article-Mention-1"
        }
      ],
      "relevance": 0.41064453125
    },
    "Entity-subject_and_object_argument": {
      "node_id": "subject_and_object_argument",
      "disambiguation_index": 0,
      "label": "subject and object arguments",
      "aliases": [
        "subject and object arguments"
      ],
      "types": [
        "arguments",
        "entities"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A representation of the relationships between entities, comprising the entity playing a particular role (subject) and another entity receiving an action or property (object).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-7-Sentence-2",
          "local_name": "subject and object arguments",
          "local_types": [
            "arguments",
            "entities"
          ],
          "iri": "Entity-subject_and_object_argument-Mention-1"
        }
      ],
      "relevance": 0.41064453125
    },
    "Entity-precision": {
      "node_id": "precision",
      "disambiguation_index": 0,
      "label": "precision",
      "aliases": [
        "precision"
      ],
      "types": [
        "evaluation metric",
        "metric",
        "evaluation measure",
        "performance metric",
        "measurement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure used to evaluate the accuracy or correctness of results",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-4-Sentence-3",
          "local_name": "precision",
          "local_types": [
            "performance metric",
            "evaluation measure"
          ],
          "iri": "Entity-precision-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-4-Sentence-1",
          "local_name": "precision",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-precision-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-7-Sentence-2",
          "local_name": "precision",
          "local_types": [
            "evaluation metric",
            "measurement"
          ],
          "iri": "Entity-precision-Mention-3"
        }
      ],
      "relevance": 0.41015625
    },
    "Entity-r_____.": {
      "node_id": "r_____.",
      "disambiguation_index": 0,
      "label": "R' := \u2205.",
      "aliases": [
        "R' := \u2205."
      ],
      "types": [
        "variable initialization"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An initialized variable with an empty value.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-7",
          "local_name": "R' := \u2205.",
          "local_types": [
            "variable initialization"
          ],
          "iri": "Entity-r_____.-Mention-1"
        }
      ],
      "relevance": 0.41015625
    },
    "Entity-inverse": {
      "node_id": "inverse",
      "disambiguation_index": 0,
      "label": "inverse",
      "aliases": [
        "inverse"
      ],
      "types": [
        "mathematical concept",
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical concept or notation that represents the opposite or reciprocal of an operation or function.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-9",
          "local_name": "inverse",
          "local_types": [
            "mathematical concept",
            "notation"
          ],
          "iri": "Entity-inverse-Mention-1"
        }
      ],
      "relevance": 0.41015625
    },
    "Entity-subject_argument_of_p_t": {
      "node_id": "subject_argument_of_p_t",
      "disambiguation_index": 0,
      "label": "subject argument of P_t",
      "aliases": [
        "subject argument of P_t"
      ],
      "types": [
        "mathematical concept",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical variable or concept that serves as an input to a predicate (P_t).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-5",
          "local_name": "subject argument of P_t",
          "local_types": [
            "mathematical concept",
            "variable"
          ],
          "iri": "Entity-subject_argument_of_p_t-Mention-1"
        }
      ],
      "relevance": 0.409912109375
    },
    "Entity-the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.": {
      "node_id": "the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.",
      "disambiguation_index": 0,
      "label": "the spouse of a person (z) is known, it is likely that the place of birth of that person is also known.",
      "aliases": [
        "the spouse of a person (z) is known, it is likely that the place of birth of that person is also known."
      ],
      "types": [
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A relationship between an individual and their spouse.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "the spouse of a person (z) is known, it is likely that the place of birth of that person is also known.",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.-Mention-1"
        }
      ],
      "relevance": 0.409912109375
    },
    "Entity-random.org": {
      "node_id": "random.org",
      "disambiguation_index": 0,
      "label": "random.org",
      "aliases": [
        "random.org"
      ],
      "types": [
        "random number generator",
        "tool",
        "online service",
        "website"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A website that generates truly random numbers and provides various tools for generating randomness.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-1",
          "local_name": "random.org",
          "local_types": [
            "random number generator",
            "tool",
            "online service",
            "website"
          ],
          "iri": "Entity-random.org-Mention-1"
        }
      ],
      "relevance": 0.40966796875
    },
    "Entity-our_work": {
      "node_id": "our_work",
      "disambiguation_index": 0,
      "label": "Our work",
      "aliases": [
        "Our work",
        "work"
      ],
      "types": [
        "study",
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research or study conducted by a group of individuals",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-7-Sentence-1",
          "local_name": "Our work",
          "local_types": [
            "study",
            "research"
          ],
          "iri": "Entity-our_work-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-11-Sentence-6",
          "local_name": "work",
          "local_types": [
            "research",
            "study"
          ],
          "iri": "Entity-our_work-Mention-2"
        }
      ],
      "relevance": 0.40966796875
    },
    "Entity-comparative_system": {
      "node_id": "comparative_system",
      "disambiguation_index": 0,
      "label": "comparative system",
      "aliases": [
        "comparative system"
      ],
      "types": [
        "system",
        "technology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or technology used to compare and evaluate different entities or concepts.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "comparative system",
          "local_types": [
            "system",
            "technology"
          ],
          "iri": "Entity-comparative_system-Mention-1"
        }
      ],
      "relevance": 0.40966796875
    },
    "Entity-figure_3": {
      "node_id": "figure_3",
      "disambiguation_index": 0,
      "label": "Figure 3",
      "aliases": [
        "In Figure 3",
        "Figure 3"
      ],
      "types": [
        "illustration",
        "visual representation",
        "figure_reference",
        "figure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A visual representation, such as an illustration or diagram.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "Figure 3",
          "local_types": [
            "figure",
            "illustration"
          ],
          "iri": "Entity-figure_3-Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "Figure 3",
          "local_types": [
            "visual representation",
            "figure"
          ],
          "iri": "Entity-figure_3-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-10-Sentence-4",
          "local_name": "In Figure 3",
          "local_types": [
            "figure_reference"
          ],
          "iri": "Entity-figure_3-Mention-3"
        }
      ],
      "relevance": 0.409423828125
    },
    "Entity-after_presenting_some_foundation": {
      "node_id": "after_presenting_some_foundation",
      "disambiguation_index": 0,
      "label": "After presenting some foundations",
      "aliases": [
        "After presenting some foundations"
      ],
      "types": [
        "introduction"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The introduction to the paper's methodology and concepts",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-2",
          "local_name": "After presenting some foundations",
          "local_types": [
            "introduction"
          ],
          "iri": "Entity-after_presenting_some_foundation-Mention-1"
        }
      ],
      "relevance": 0.4091796875
    },
    "Entity-e_9": {
      "node_id": "e_9",
      "disambiguation_index": 0,
      "label": "e_9",
      "aliases": [
        "e_9"
      ],
      "types": [
        "variable",
        "function",
        "predicate",
        "argument",
        "unknown entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity referred to by mention 'e_9' is an instance of predicate P_1.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "e_9",
          "local_types": [
            "predicate",
            "variable",
            "function",
            "argument"
          ],
          "iri": "Entity-e_9-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "e_9",
          "local_types": [
            "unknown entity",
            "variable"
          ],
          "iri": "Entity-e_9-Mention-2"
        }
      ],
      "relevance": 0.408935546875
    },
    "Entity-collaboratively-created": {
      "node_id": "collaboratively-created",
      "disambiguation_index": 0,
      "label": "collaboratively-created",
      "aliases": [
        "collaboratively-created"
      ],
      "types": [
        "process",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collective effort or project that involves multiple individuals working together.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-4",
          "local_name": "collaboratively-created",
          "local_types": [
            "process",
            "methodology"
          ],
          "iri": "Entity-collaboratively-created-Mention-1"
        }
      ],
      "relevance": 0.408935546875
    },
    "Entity-vector_space": {
      "node_id": "vector_space",
      "disambiguation_index": 0,
      "label": "vector space",
      "aliases": [
        "vector space"
      ],
      "types": [
        "mathematics",
        "computing"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical construct representing points or objects with specific coordinates and dimensions.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-1",
          "local_name": "vector space",
          "local_types": [
            "mathematics",
            "computing"
          ],
          "iri": "Entity-vector_space-Mention-1"
        }
      ],
      "relevance": 0.40869140625
    },
    "Entity-_ei__j_a__p1___i__j___0_and_1__j__n_": {
      "node_id": "_ei__j_a__p1___i__j___0_and_1__j__n_",
      "disambiguation_index": 0,
      "label": "{ei : \u2211j A(P1)[i,j] > 0 and 1 \u2264 j \u2264 n}",
      "aliases": [
        "{ei : \u2211j A(P1)[i,j] > 0 and 1 \u2264 j \u2264 n}"
      ],
      "types": [
        "definition",
        "set notation",
        "mathematical concept",
        "equation",
        "mathematical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-3",
          "local_name": "{ei : \u2211j A(P1)[i,j] > 0 and 1 \u2264 j \u2264 n}",
          "local_types": [
            "definition",
            "set notation",
            "mathematical concept",
            "equation",
            "mathematical expression"
          ],
          "iri": "Entity-_ei__j_a__p1___i__j___0_and_1__j__n_-Mention-1"
        }
      ],
      "relevance": 0.407958984375
    },
    "Entity-e1_and_e2": {
      "node_id": "e1_and_e2",
      "disambiguation_index": 0,
      "label": "e1 and e2",
      "aliases": [
        "e1 and e2"
      ],
      "types": [
        "entity",
        "entities"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The pair of entities 'e1' and 'e2' referred to by the term 'e1 and e2', which are included in a set of entities relevant to a target predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-7",
          "local_name": "e1 and e2",
          "local_types": [
            "entity",
            "entities"
          ],
          "iri": "Entity-e1_and_e2-Mention-1"
        }
      ],
      "relevance": 0.407958984375
    },
    "Entity-the_inverse": {
      "node_id": "the_inverse",
      "disambiguation_index": 0,
      "label": "The inverse",
      "aliases": [
        "The inverse"
      ],
      "types": [
        "mathematical concept"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A mathematical concept representing a predicate that reverses its direction, defined as \u2200e, e' P_i^-1(e', e) = P_i(e, e').",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-9",
          "local_name": "The inverse",
          "local_types": [
            "mathematical concept"
          ],
          "iri": "Entity-the_inverse-Mention-1"
        }
      ],
      "relevance": 0.407958984375
    },
    "Entity-that_is__they_explain_many_fact": {
      "node_id": "that_is__they_explain_many_fact",
      "disambiguation_index": 0,
      "label": "that is, they explain many facts",
      "aliases": [
        "that is, they explain many facts"
      ],
      "types": [
        "idea"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The idea of explaining many facts",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-1",
          "local_name": "that is, they explain many facts",
          "local_types": [
            "idea"
          ],
          "iri": "Entity-that_is__they_explain_many_fact-Mention-1"
        }
      ],
      "relevance": 0.407470703125
    },
    "Entity-pairwise_local_fitness_function_are_defined_accordingly": {
      "node_id": "pairwise_local_fitness_function_are_defined_accordingly",
      "disambiguation_index": 0,
      "label": "Pairwise local fitness functions are defined accordingly",
      "aliases": [
        "Pairwise local fitness functions are defined accordingly"
      ],
      "types": [
        "function",
        "definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function that defines a measure of compatibility or similarity between pairs of entities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-4",
          "local_name": "Pairwise local fitness functions are defined accordingly",
          "local_types": [
            "function",
            "definition"
          ],
          "iri": "Entity-pairwise_local_fitness_function_are_defined_accordingly-Mention-1"
        }
      ],
      "relevance": 0.40673828125
    },
    "Entity-cd__q_": {
      "node_id": "cd__q_",
      "disambiguation_index": 0,
      "label": "CD(q)",
      "aliases": [
        "CD(q)"
      ],
      "types": [
        "equation",
        "mathematical expression",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical function or equation that represents a maximum value",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-5-Sentence-1",
          "local_name": "CD(q)",
          "local_types": [
            "equation",
            "mathematical expression",
            "function"
          ],
          "iri": "Entity-cd__q_-Mention-1"
        }
      ],
      "relevance": 0.406494140625
    },
    "Entity-it_(5)": {
      "node_id": "it_(5)",
      "disambiguation_index": 5,
      "label": "It",
      "aliases": [
        "It"
      ],
      "types": [
        "system"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The CHAI system, an approach for filtering facts before supplying them to a link predictor",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-2-Sentence-3",
          "local_name": "It",
          "local_types": [
            "system"
          ],
          "iri": "Entity-it_(5)-Mention-1"
        }
      ],
      "relevance": 0.40625
    },
    "Entity-wikipedia_article": {
      "node_id": "wikipedia_article",
      "disambiguation_index": 0,
      "label": "Wikipedia articles",
      "aliases": [
        "Wikipedia articles"
      ],
      "types": [
        "content",
        "document type",
        "source",
        "source material",
        "article",
        "information source"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Online encyclopedic content published on a collaborative platform",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-7",
          "local_name": "Wikipedia articles",
          "local_types": [
            "content",
            "document type",
            "source",
            "source material",
            "article",
            "information source"
          ],
          "iri": "Entity-wikipedia_article-Mention-1"
        }
      ],
      "relevance": 0.406005859375
    },
    "Entity-deck": {
      "node_id": "deck",
      "disambiguation_index": 0,
      "label": "deck",
      "aliases": [
        "deck"
      ],
      "types": [
        "collection of cards",
        "data set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a collection or arrangement of items, typically cards",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-2",
          "local_name": "deck",
          "local_types": [
            "collection of cards",
            "data set"
          ],
          "iri": "Entity-deck-Mention-1"
        }
      ],
      "relevance": 0.406005859375
    },
    "Entity-for_half_of_the_instance_of_each_predicate": {
      "node_id": "for_half_of_the_instance_of_each_predicate",
      "disambiguation_index": 0,
      "label": "for half of the instances of each predicate",
      "aliases": [
        "for half of the instances of each predicate"
      ],
      "types": [
        "condition",
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A random assignment process for subject or object entities, where the probability of selection is proportional to their frequency as subjects or objects in any predicate within the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "for half of the instances of each predicate",
          "local_types": [
            "condition",
            "predicate"
          ],
          "iri": "Entity-for_half_of_the_instance_of_each_predicate-Mention-1"
        }
      ],
      "relevance": 0.406005859375
    },
    "Entity-known_unknown": {
      "node_id": "known_unknown",
      "disambiguation_index": 0,
      "label": "known unknowns",
      "aliases": [
        "known unknowns"
      ],
      "types": [
        "concept",
        "problem type"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Uncertain or ambiguous concepts that are difficult to understand or address",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-3",
          "local_name": "known unknowns",
          "local_types": [
            "concept",
            "problem type"
          ],
          "iri": "Entity-known_unknown-Mention-1"
        }
      ],
      "relevance": 0.40576171875
    },
    "Entity-hold-out_test_data": {
      "node_id": "hold-out_test_data",
      "disambiguation_index": 0,
      "label": "hold-out test data",
      "aliases": [
        "hold-out test data"
      ],
      "types": [
        "dataset",
        "data set"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A portion of data set aside during training or evaluation to assess model performance without bias from overfitting.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-6-Sentence-2",
          "local_name": "hold-out test data",
          "local_types": [
            "dataset",
            "data set"
          ],
          "iri": "Entity-hold-out_test_data-Mention-1"
        }
      ],
      "relevance": 0.40576171875
    },
    "Entity-early_exploration_published_in": {
      "node_id": "early_exploration_published_in",
      "disambiguation_index": 0,
      "label": "early explorations published in",
      "aliases": [
        "early explorations published in"
      ],
      "types": [
        "publication",
        "published research",
        "academic work"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or series of academic writings",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-1",
          "local_name": "early explorations published in",
          "local_types": [
            "publication",
            "published research",
            "academic work"
          ],
          "iri": "Entity-early_exploration_published_in-Mention-1"
        }
      ],
      "relevance": 0.405517578125
    },
    "Entity-observation": {
      "node_id": "observation",
      "disambiguation_index": 0,
      "label": "observation",
      "aliases": [
        "observation"
      ],
      "types": [
        "result",
        "finding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A recorded or noted phenomenon or outcome",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-3-Sentence-1",
          "local_name": "observation",
          "local_types": [
            "result",
            "finding"
          ],
          "iri": "Entity-observation-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-6",
          "local_name": "observation",
          "local_types": [
            "finding",
            "result"
          ],
          "iri": "Entity-observation-Mention-2"
        }
      ],
      "relevance": 0.405517578125
    },
    "Entity-number_of_distinct_entity": {
      "node_id": "number_of_distinct_entity",
      "disambiguation_index": 0,
      "label": "number of distinct entities",
      "aliases": [
        "number of distinct entities"
      ],
      "types": [
        "mathematical quantity",
        "counting process"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A quantity representing the count or magnitude of unique items, objects, or instances.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-2",
          "local_name": "number of distinct entities",
          "local_types": [
            "mathematical quantity",
            "counting process"
          ],
          "iri": "Entity-number_of_distinct_entity-Mention-1"
        }
      ],
      "relevance": 0.405517578125
    },
    "Entity-non-zero_element": {
      "node_id": "non-zero_element",
      "disambiguation_index": 0,
      "label": "non-zero element",
      "aliases": [
        "non-zero elements",
        "non-zero element"
      ],
      "types": [
        "data point",
        "mathematical concept",
        "elements",
        "data points"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A value or quantity that has magnitude, as opposed to zero.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-2",
          "local_name": "non-zero element",
          "local_types": [
            "mathematical concept",
            "data point"
          ],
          "iri": "Entity-non-zero_element-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-2",
          "local_name": "non-zero elements",
          "local_types": [
            "elements",
            "data points"
          ],
          "iri": "Entity-non-zero_element-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-3",
          "local_name": "non-zero elements",
          "local_types": [
            "elements",
            "data points"
          ],
          "iri": "Entity-non-zero_element-Mention-3"
        }
      ],
      "relevance": 0.4052734375
    },
    "Entity-_e__e___satisfies_the_head_of_r": {
      "node_id": "_e__e___satisfies_the_head_of_r",
      "disambiguation_index": 0,
      "label": "(e, e') satisfies the head of r",
      "aliases": [
        "(e, e') satisfies the head of r"
      ],
      "types": [
        "entities",
        "condition"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A pair of entities (e, e') representing an identifier for an object such as a place or person and its related predicate.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-4",
          "local_name": "(e, e') satisfies the head of r",
          "local_types": [
            "entities",
            "condition"
          ],
          "iri": "Entity-_e__e___satisfies_the_head_of_r-Mention-1"
        }
      ],
      "relevance": 0.405029296875
    },
    "Entity-sample": {
      "node_id": "sample",
      "disambiguation_index": 0,
      "label": "sample",
      "aliases": [
        "sample"
      ],
      "types": [
        "data",
        "record"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A small, representative subset or portion of data",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-3",
          "local_name": "sample",
          "local_types": [
            "data",
            "record"
          ],
          "iri": "Entity-sample-Mention-1"
        }
      ],
      "relevance": 0.405029296875
    },
    "Entity-that_ha_an_occupation__y_": {
      "node_id": "that_ha_an_occupation__y_",
      "disambiguation_index": 0,
      "label": "that has an occupation (y)",
      "aliases": [
        "that has an occupation (y)"
      ],
      "types": [
        "occupation",
        "job"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person with a specific profession or job.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "that has an occupation (y)",
          "local_types": [
            "occupation",
            "job"
          ],
          "iri": "Entity-that_ha_an_occupation__y_-Mention-1"
        }
      ],
      "relevance": 0.405029296875
    },
    "Entity-country__z__w_": {
      "node_id": "country__z__w_",
      "disambiguation_index": 0,
      "label": "country\u207b\u00b9(z, w)",
      "aliases": [
        "country\u207b\u00b9(z, w)",
        "country\u207b\u00b9( z, w )"
      ],
      "types": [
        "relation",
        "database query"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A region (z) within a country (w)",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "country\u207b\u00b9(z, w)",
          "local_types": [
            "relation",
            "database query"
          ],
          "iri": "Entity-country__z__w_-Mention-1"
        }
      ],
      "relevance": 0.40478515625
    },
    "Entity-the_head_of_the_rule": {
      "node_id": "the_head_of_the_rule",
      "disambiguation_index": 0,
      "label": "the head of the rule",
      "aliases": [
        "the head of the rule"
      ],
      "types": [
        "head",
        "rule"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The leader or primary element of a grammatical or logical structure, governing its behavior and interpretation.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-1",
          "local_name": "the head of the rule",
          "local_types": [
            "head",
            "rule"
          ],
          "iri": "Entity-the_head_of_the_rule-Mention-1"
        }
      ],
      "relevance": 0.40478515625
    },
    "Entity-specific_fact": {
      "node_id": "specific_fact",
      "disambiguation_index": 0,
      "label": "specific facts",
      "aliases": [
        "specific facts"
      ],
      "types": [
        "data point",
        "information unit"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A piece of information or data",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-4-Sentence-1",
          "local_name": "specific facts",
          "local_types": [
            "data point",
            "information unit"
          ],
          "iri": "Entity-specific_fact-Mention-1"
        }
      ],
      "relevance": 0.404296875
    },
    "Entity-z_0": {
      "node_id": "z_0",
      "disambiguation_index": 0,
      "label": "z_0",
      "aliases": [
        "z_0"
      ],
      "types": [
        "mathematical entity",
        "variable",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical variable or concept",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "z_0",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-z_0-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-10-Sentence-2",
          "local_name": "z_0",
          "local_types": [
            "mathematical entity",
            "variable",
            "mathematical concept"
          ],
          "iri": "Entity-z_0-Mention-2"
        }
      ],
      "relevance": 0.404296875
    },
    "Entity-computing": {
      "node_id": "computing",
      "disambiguation_index": 0,
      "label": "Computing",
      "aliases": [
        "Computing"
      ],
      "types": [
        "discipline",
        "field of study",
        "field"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The discipline or field of study that deals with the design, development, testing, and evaluation of computer systems, algorithms, and software.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-1",
          "local_name": "Computing",
          "local_types": [
            "discipline",
            "field of study",
            "field"
          ],
          "iri": "Entity-computing-Mention-1"
        }
      ],
      "relevance": 0.404052734375
    },
    "Entity-the_contribution_of_this_paper": {
      "node_id": "the_contribution_of_this_paper",
      "disambiguation_index": 0,
      "label": "The contributions of this paper",
      "aliases": [
        "The contributions of this paper"
      ],
      "types": [
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The outcomes or findings presented in a research publication",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-1",
          "local_name": "The contributions of this paper",
          "local_types": [
            "research"
          ],
          "iri": "Entity-the_contribution_of_this_paper-Mention-1"
        }
      ],
      "relevance": 0.404052734375
    },
    "Entity-body_r__e__e__": {
      "node_id": "body_r__e__e__",
      "disambiguation_index": 0,
      "label": "body_r(e, e')",
      "aliases": [
        "body_r(e, e')"
      ],
      "types": [
        "logical statement",
        "condition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical condition that defines a relationship between two entities.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "body_r(e, e')",
          "local_types": [
            "logical statement",
            "condition"
          ],
          "iri": "Entity-body_r__e__e__-Mention-1"
        }
      ],
      "relevance": 0.404052734375
    },
    "Entity-classic_version": {
      "node_id": "classic_version",
      "disambiguation_index": 0,
      "label": "classic version",
      "aliases": [
        "classic version"
      ],
      "types": [
        "version",
        "concept",
        "idea",
        "previous iteration",
        "reference",
        "original form"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An earlier or original form of something, often considered authoritative or definitive.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-1",
          "local_name": "classic version",
          "local_types": [
            "version",
            "concept",
            "idea",
            "previous iteration",
            "reference",
            "original form"
          ],
          "iri": "Entity-classic_version-Mention-1"
        }
      ],
      "relevance": 0.404052734375
    },
    "Entity-predictive_attribute": {
      "node_id": "predictive_attribute",
      "disambiguation_index": 0,
      "label": "predictive attributes",
      "aliases": [
        "predictive attributes"
      ],
      "types": [
        "variables",
        "metrics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of characteristics or measurements used to make predictions.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-3",
          "local_name": "predictive attributes",
          "local_types": [
            "variables",
            "metrics"
          ],
          "iri": "Entity-predictive_attribute-Mention-1"
        }
      ],
      "relevance": 0.404052734375
    },
    "Entity-object_argument": {
      "node_id": "object_argument",
      "disambiguation_index": 0,
      "label": "object argument",
      "aliases": [
        "object argument"
      ],
      "types": [
        "term",
        "variable",
        "value",
        "constant"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A value or constant that serves as the target of a predicate's action.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "object argument",
          "local_types": [
            "term",
            "variable",
            "value",
            "constant"
          ],
          "iri": "Entity-object_argument-Mention-1"
        }
      ],
      "relevance": 0.403564453125
    },
    "Entity-factual_information": {
      "node_id": "factual_information",
      "disambiguation_index": 0,
      "label": "factual information",
      "aliases": [
        "factual information"
      ],
      "types": [
        "data type"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A knowledge base or database",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-4",
          "local_name": "factual information",
          "local_types": [
            "data type"
          ],
          "iri": "Entity-factual_information-Mention-1"
        }
      ],
      "relevance": 0.403564453125
    },
    "Entity-exp__-m_1_-_m_2_f_": {
      "node_id": "exp__-m_1_-_m_2_f_",
      "disambiguation_index": 0,
      "label": "exp(-||M_1 - M_2||_F)",
      "aliases": [
        "exp(-||M_1 - M_2||_F)"
      ],
      "types": [
        "expression",
        "mathematical operation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A mathematical operation that calculates the similarity between two matrices using the Frobenius norm.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-2",
          "local_name": "exp(-||M_1 - M_2||_F)",
          "local_types": [
            "expression",
            "mathematical operation"
          ],
          "iri": "Entity-exp__-m_1_-_m_2_f_-Mention-1"
        }
      ],
      "relevance": 0.4033203125
    },
    "Entity-foundation": {
      "node_id": "foundation",
      "disambiguation_index": 0,
      "label": "foundations",
      "aliases": [
        "foundations"
      ],
      "types": [
        "principle",
        "concept",
        "theory"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Basic principles or underlying assumptions that serve as a starting point or basis for further development",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-2",
          "local_name": "foundations",
          "local_types": [
            "principle",
            "concept",
            "theory"
          ],
          "iri": "Entity-foundation-Mention-1"
        }
      ],
      "relevance": 0.40283203125
    },
    "Entity-the_first_rule_state_that_if_the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.": {
      "node_id": "the_first_rule_state_that_if_the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.",
      "disambiguation_index": 0,
      "label": "The first rule states that if the spouse of a person (z) is known, it is likely that the place of birth of that person is also known.",
      "aliases": [
        "The first rule states that if the spouse of a person (z) is known, it is likely that the place of birth of that person is also known.",
        "The first rule"
      ],
      "types": [
        "rule",
        "condition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A condition or rule governing the likelihood of knowing an individual's place of birth based on information about their spouse.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "The first rule states that if the spouse of a person (z) is known, it is likely that the place of birth of that person is also known.",
          "local_types": [
            "rule",
            "condition"
          ],
          "iri": "Entity-the_first_rule_state_that_if_the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "The first rule",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-the_first_rule_state_that_if_the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.-Mention-2"
        }
      ],
      "relevance": 0.40283203125
    },
    "Entity-there_remain_some_intriguing_challenge": {
      "node_id": "there_remain_some_intriguing_challenge",
      "disambiguation_index": 0,
      "label": "There remain some intriguing challenges",
      "aliases": [
        "There remain some intriguing challenges"
      ],
      "types": [
        "challenge"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A difficulty or obstacle that needs to be overcome",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "There remain some intriguing challenges",
          "local_types": [
            "challenge"
          ],
          "iri": "Entity-there_remain_some_intriguing_challenge-Mention-1"
        }
      ],
      "relevance": 0.40283203125
    },
    "Entity-entity_satisfying_the_subject_argument_of_the_head_predicate__p_t": {
      "node_id": "entity_satisfying_the_subject_argument_of_the_head_predicate__p_t",
      "disambiguation_index": 0,
      "label": "entities satisfying the subject argument of the head predicate, P_t",
      "aliases": [
        "entities satisfying the subject argument of the head predicate, P_t"
      ],
      "types": [
        "argument",
        "predicate",
        "entity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Entities satisfying the subject argument of the head predicate",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "entities satisfying the subject argument of the head predicate, P_t",
          "local_types": [
            "argument",
            "predicate",
            "entity"
          ],
          "iri": "Entity-entity_satisfying_the_subject_argument_of_the_head_predicate__p_t-Mention-1"
        }
      ],
      "relevance": 0.40234375
    },
    "Entity-cd": {
      "node_id": "cd",
      "disambiguation_index": 0,
      "label": "CD",
      "aliases": [
        "CD"
      ],
      "types": [
        "definition",
        "mathematical concept",
        "abbreviation",
        "concept",
        "metric",
        "notation",
        "equation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A mathematical concept or notation representing a measure of something, often used to describe a maximum value.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-5-Sentence-1",
          "local_name": "CD",
          "local_types": [
            "notation",
            "equation",
            "mathematical concept"
          ],
          "iri": "Entity-cd-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "CD",
          "local_types": [
            "notation",
            "abbreviation",
            "concept",
            "metric"
          ],
          "iri": "Entity-cd-Mention-2"
        },
        {
          "reference": "Section-8-Paragraph-4-Sentence-2",
          "local_name": "CD",
          "local_types": [
            "concept",
            "definition"
          ],
          "iri": "Entity-cd-Mention-3"
        }
      ],
      "relevance": 0.402099609375
    },
    "Entity-technique": {
      "node_id": "technique",
      "disambiguation_index": 0,
      "label": "Techniques",
      "aliases": [
        "Techniques",
        "approach",
        "approaches"
      ],
      "types": [
        "methodology",
        "methods",
        "technique",
        "techniques"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Methods or approaches used to achieve a specific goal or solve a problem",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-1",
          "local_name": "Techniques",
          "local_types": [
            "methodology",
            "technique"
          ],
          "iri": "Entity-technique-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-8",
          "local_name": "approach",
          "local_types": [
            "methodology",
            "technique"
          ],
          "iri": "Entity-technique-Mention-2"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "approaches",
          "local_types": [
            "methods",
            "techniques"
          ],
          "iri": "Entity-technique-Mention-3"
        }
      ],
      "relevance": 0.40185546875
    },
    "Entity-body": {
      "node_id": "body",
      "disambiguation_index": 0,
      "label": "body",
      "aliases": [
        "body"
      ],
      "types": [
        "function",
        "concept",
        "part",
        "sequence",
        "idea",
        "list",
        "logical construct",
        "rule component",
        "component",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The physical structure or entity that contains organs, tissues, and cells.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "body",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-body-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "body",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-body-Mention-2"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-10",
          "local_name": "body",
          "local_types": [
            "sequence",
            "list"
          ],
          "iri": "Entity-body-Mention-3"
        },
        {
          "reference": "Section-7-Paragraph-4-Sentence-4",
          "local_name": "body",
          "local_types": [
            "rule component",
            "logical construct"
          ],
          "iri": "Entity-body-Mention-4"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-3",
          "local_name": "body",
          "local_types": [
            "function",
            "logic"
          ],
          "iri": "Entity-body-Mention-5"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-3",
          "local_name": "body",
          "local_types": [
            "concept",
            "idea"
          ],
          "iri": "Entity-body-Mention-6"
        }
      ],
      "relevance": 0.40185546875
    },
    "Entity-suit": {
      "node_id": "suit",
      "disambiguation_index": 0,
      "label": "suits",
      "aliases": [
        "suit",
        "suits"
      ],
      "types": [
        "category",
        "categories",
        "attribute",
        "labels"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A set of four distinct values (Hearts, Diamonds, Clubs, or Spades) used to describe the cards in a poker hand.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-2",
          "local_name": "suits",
          "local_types": [
            "categories",
            "labels"
          ],
          "iri": "Entity-suit-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-10-Sentence-3",
          "local_name": "suit",
          "local_types": [
            "attribute",
            "category"
          ],
          "iri": "Entity-suit-Mention-2"
        }
      ],
      "relevance": 0.40185546875
    },
    "Entity-false_positive_rate": {
      "node_id": "false_positive_rate",
      "disambiguation_index": 0,
      "label": "False Positive Rate",
      "aliases": [
        "False Positive Rate"
      ],
      "types": [
        "statistic",
        "evaluation measure",
        "performance metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure that represents the proportion of instances where a test or model incorrectly identifies something as positive when it should be negative.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "False Positive Rate",
          "local_types": [
            "statistic",
            "evaluation measure",
            "performance metric"
          ],
          "iri": "Entity-false_positive_rate-Mention-1"
        }
      ],
      "relevance": 0.40185546875
    },
    "Entity-scope": {
      "node_id": "scope",
      "disambiguation_index": 0,
      "label": "scope",
      "aliases": [
        "scope"
      ],
      "types": [
        "concept",
        "definition"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The extent or range of something, such as an area of study, consideration, or application.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-4",
          "local_name": "scope",
          "local_types": [
            "concept",
            "definition"
          ],
          "iri": "Entity-scope-Mention-1"
        }
      ],
      "relevance": 0.401611328125
    },
    "Entity-early_exploration": {
      "node_id": "early_exploration",
      "disambiguation_index": 0,
      "label": "early explorations",
      "aliases": [
        "early explorations"
      ],
      "types": [
        "previous research",
        "academic work"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Pioneering investigations or studies conducted at an initial stage",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-10-Sentence-1",
          "local_name": "early explorations",
          "local_types": [
            "previous research",
            "academic work"
          ],
          "iri": "Entity-early_exploration-Mention-1"
        }
      ],
      "relevance": 0.4013671875
    },
    "Entity-0.45": {
      "node_id": "0.45",
      "disambiguation_index": 0,
      "label": "0.45",
      "aliases": [
        "0.45"
      ],
      "types": [
        "number"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A numerical value representing a point or coordinate.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "0.45",
          "local_types": [
            "number"
          ],
          "iri": "Entity-0.45-Mention-1"
        }
      ],
      "relevance": 0.401123046875
    },
    "Entity-target_predicate": {
      "node_id": "target_predicate",
      "disambiguation_index": 0,
      "label": "target predicate",
      "aliases": [
        "target predicate"
      ],
      "types": [
        "predicate",
        "concept",
        "predicate logic",
        "logical operator",
        "logical statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A logical expression or operation that relates multiple entities.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-6",
          "local_name": "target predicate",
          "local_types": [
            "predicate",
            "logical operator"
          ],
          "iri": "Entity-target_predicate-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-10",
          "local_name": "target predicate",
          "local_types": [
            "predicate",
            "concept"
          ],
          "iri": "Entity-target_predicate-Mention-2"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-4",
          "local_name": "target predicate",
          "local_types": [
            "predicate logic",
            "logical statement"
          ],
          "iri": "Entity-target_predicate-Mention-3"
        }
      ],
      "relevance": 0.401123046875
    },
    "Entity-condition": {
      "node_id": "condition",
      "disambiguation_index": 0,
      "label": "conditions",
      "aliases": [
        "conditions"
      ],
      "types": [
        "requirement",
        "constraint"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Rules or stipulations governing a particular situation",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-4",
          "local_name": "conditions",
          "local_types": [
            "requirement",
            "constraint"
          ],
          "iri": "Entity-condition-Mention-1"
        }
      ],
      "relevance": 0.401123046875
    },
    "Entity-measure_support": {
      "node_id": "measure_support",
      "disambiguation_index": 0,
      "label": "measures support",
      "aliases": [
        "measures support"
      ],
      "types": [
        "measure",
        "evaluation metric",
        "performance indicator"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or evaluation metric used to assess performance",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-2",
          "local_name": "measures support",
          "local_types": [
            "measure",
            "evaluation metric",
            "performance indicator"
          ],
          "iri": "Entity-measure_support-Mention-1"
        }
      ],
      "relevance": 0.40087890625
    },
    "Entity-66_gb_ram": {
      "node_id": "66_gb_ram",
      "disambiguation_index": 0,
      "label": "66 GB RAM",
      "aliases": [
        "66 GB RAM"
      ],
      "types": [
        "computer memory",
        "RAM",
        "memory capacity",
        "resource"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of computer memory with a capacity of 66 gigabytes",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-1",
          "local_name": "66 GB RAM",
          "local_types": [
            "computer memory",
            "RAM",
            "memory capacity",
            "resource"
          ],
          "iri": "Entity-66_gb_ram-Mention-1"
        }
      ],
      "relevance": 0.40087890625
    },
    "Entity-d_(1)": {
      "node_id": "d_(1)",
      "disambiguation_index": 1,
      "label": "\u211d^d",
      "aliases": [
        "\u211d^d"
      ],
      "types": [
        "set",
        "mathematical structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The set of all real-valued vectors with dimension d.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-3",
          "local_name": "\u211d^d",
          "local_types": [
            "set",
            "mathematical structure"
          ],
          "iri": "Entity-d_(1)-Mention-1"
        }
      ],
      "relevance": 0.400390625
    },
    "Entity-_4_": {
      "node_id": "_4_",
      "disambiguation_index": 0,
      "label": "(4)",
      "aliases": [
        "(4)"
      ],
      "types": [
        "number",
        "reference",
        "citation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A reference or citation in a text that corresponds to a specific piece of information",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-2-Sentence-5",
          "local_name": "(4)",
          "local_types": [
            "number",
            "reference",
            "citation"
          ],
          "iri": "Entity-_4_-Mention-1"
        }
      ],
      "relevance": 0.400146484375
    },
    "Entity-measure": {
      "node_id": "measure",
      "disambiguation_index": 0,
      "label": "measures",
      "aliases": [
        "measures"
      ],
      "types": [
        "measure",
        "performance indicators",
        "metric",
        "evaluation metrics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Quantifiable indicators or metrics used for evaluation purposes",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-2",
          "local_name": "measures",
          "local_types": [
            "measure",
            "metric"
          ],
          "iri": "Entity-measure-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-1-Sentence-4",
          "local_name": "measures",
          "local_types": [
            "evaluation metrics",
            "performance indicators"
          ],
          "iri": "Entity-measure-Mention-2"
        }
      ],
      "relevance": 0.400146484375
    },
    "Entity-our_objective": {
      "node_id": "our_objective",
      "disambiguation_index": 0,
      "label": "Our objective",
      "aliases": [
        "Our objective"
      ],
      "types": [
        "research goal",
        "research",
        "academic aim",
        "goal",
        "objective",
        "study aim"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research goal or aim that outlines the intended outcome or target of an investigation, study, or project.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "Our objective",
          "local_types": [
            "research goal",
            "research",
            "academic aim",
            "goal",
            "objective",
            "study aim"
          ],
          "iri": "Entity-our_objective-Mention-1"
        }
      ],
      "relevance": 0.400146484375
    },
    "Entity-target_language_for_learning": {
      "node_id": "target_language_for_learning",
      "disambiguation_index": 0,
      "label": "target language for learning",
      "aliases": [
        "target language for learning"
      ],
      "types": [
        "learning objective",
        "learning system",
        "language"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A language designed or intended to facilitate the process of acquiring knowledge or skills.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-2",
          "local_name": "target language for learning",
          "local_types": [
            "learning objective",
            "learning system",
            "language"
          ],
          "iri": "Entity-target_language_for_learning-Mention-1"
        }
      ],
      "relevance": 0.39990234375
    },
    "Entity-question": {
      "node_id": "question",
      "disambiguation_index": 0,
      "label": "questions",
      "aliases": [
        "question",
        "questions",
        "relevant questions"
      ],
      "types": [
        "queries",
        "question",
        "inquiry",
        "requests for information",
        "query",
        "information request"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A request for information or clarification",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "questions",
          "local_types": [
            "query",
            "inquiry"
          ],
          "iri": "Entity-question-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-2",
          "local_name": "questions",
          "local_types": [
            "query",
            "inquiry"
          ],
          "iri": "Entity-question-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-5-Sentence-4",
          "local_name": "question",
          "local_types": [
            "query",
            "inquiry"
          ],
          "iri": "Entity-question-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "question",
          "local_types": [
            "query",
            "inquiry"
          ],
          "iri": "Entity-question-Mention-4"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "questions",
          "local_types": [
            "query",
            "inquiry"
          ],
          "iri": "Entity-question-Mention-5"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-3",
          "local_name": "questions",
          "local_types": [
            "query",
            "inquiry"
          ],
          "iri": "Entity-question-Mention-6"
        },
        {
          "reference": "Section-9-Paragraph-3-Sentence-2",
          "local_name": "question",
          "local_types": [
            "query",
            "inquiry"
          ],
          "iri": "Entity-question-Mention-7"
        },
        {
          "reference": "Section-9-Paragraph-3-Sentence-3",
          "local_name": "questions",
          "local_types": [
            "query",
            "inquiry",
            "information request"
          ],
          "iri": "Entity-question-Mention-8"
        },
        {
          "reference": "Section-9-Paragraph-4-Sentence-1",
          "local_name": "question",
          "local_types": [
            "query",
            "inquiry"
          ],
          "iri": "Entity-question-Mention-9"
        },
        {
          "reference": "Section-9-Paragraph-4-Sentence-2",
          "local_name": "question",
          "local_types": [
            "query",
            "inquiry"
          ],
          "iri": "Entity-question-Mention-10"
        },
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "relevant questions",
          "local_types": [
            "queries",
            "requests for information",
            "question"
          ],
          "iri": "Entity-question-Mention-11"
        }
      ],
      "relevance": 0.399658203125
    },
    "Entity-n": {
      "node_id": "n",
      "disambiguation_index": 0,
      "label": "n",
      "aliases": [
        "number",
        "n"
      ],
      "types": [
        "quantity",
        "number",
        "value",
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value representing an amount or quantity.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-1",
          "local_name": "n",
          "local_types": [
            "quantity",
            "number",
            "variable"
          ],
          "iri": "Entity-n-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-12-Sentence-3",
          "local_name": "number",
          "local_types": [
            "quantity",
            "value"
          ],
          "iri": "Entity-n-Mention-2"
        }
      ],
      "relevance": 0.399658203125
    },
    "Entity-with_0.98_precision": {
      "node_id": "with_0.98_precision",
      "disambiguation_index": 0,
      "label": "with 0.98 precision",
      "aliases": [
        "with 0.98 precision"
      ],
      "types": [
        "precision"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of accuracy or correctness",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "with 0.98 precision",
          "local_types": [
            "precision"
          ],
          "iri": "Entity-with_0.98_precision-Mention-1"
        }
      ],
      "relevance": 0.399658203125
    },
    "Entity-wikipedia": {
      "node_id": "wikipedia",
      "disambiguation_index": 0,
      "label": "Wikipedia",
      "aliases": [
        "Wikipedia"
      ],
      "types": [
        "database",
        "website",
        "online encyclopedia",
        "information source",
        "encyclopedia"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A free online encyclopedia that provides access to a vast repository of human knowledge and information.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "Wikipedia",
          "local_types": [
            "database",
            "website",
            "online encyclopedia",
            "information source",
            "encyclopedia"
          ],
          "iri": "Entity-wikipedia-Mention-1"
        }
      ],
      "relevance": 0.399169921875
    },
    "Entity-about_a_specific_target_predicate_in_the_head__p": {
      "node_id": "about_a_specific_target_predicate_in_the_head__p",
      "disambiguation_index": 0,
      "label": "about a specific target predicate in the head, P",
      "aliases": [
        "about a specific target predicate in the head, P"
      ],
      "types": [
        "predicate",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept or relation representing an action or state described by a particular predicate.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-1-Sentence-1",
          "local_name": "about a specific target predicate in the head, P",
          "local_types": [
            "predicate",
            "concept"
          ],
          "iri": "Entity-about_a_specific_target_predicate_in_the_head__p-Mention-1"
        }
      ],
      "relevance": 0.399169921875
    },
    "Entity-we_have_the_following_fact_about_the_target_predicate__p_1": {
      "node_id": "we_have_the_following_fact_about_the_target_predicate__p_1",
      "disambiguation_index": 0,
      "label": "we have the following facts about the target predicate, P_1",
      "aliases": [
        "we have the following facts about the target predicate, P_1"
      ],
      "types": [
        "facts",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The set of facts about a specific target predicate (P_1) mentioned in the paper.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-9-Sentence-1",
          "local_name": "we have the following facts about the target predicate, P_1",
          "local_types": [
            "facts",
            "predicate"
          ],
          "iri": "Entity-we_have_the_following_fact_about_the_target_predicate__p_1-Mention-1"
        }
      ],
      "relevance": 0.39892578125
    },
    "Entity-reduced_deck": {
      "node_id": "reduced_deck",
      "disambiguation_index": 0,
      "label": "reduced deck",
      "aliases": [
        "reduced deck"
      ],
      "types": [
        "deck of cards",
        "collection of physical objects"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A collection of physical objects, specifically the set of cards used to draw five hands for poker games.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-2",
          "local_name": "reduced deck",
          "local_types": [
            "deck of cards",
            "collection of physical objects"
          ],
          "iri": "Entity-reduced_deck-Mention-1"
        }
      ],
      "relevance": 0.39892578125
    },
    "Entity-section_5": {
      "node_id": "section_5",
      "disambiguation_index": 0,
      "label": "Section 5",
      "aliases": [
        "Section 5"
      ],
      "types": [
        "section",
        "part"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A part or division of a document, typically containing specific information or instructions.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-4",
          "local_name": "Section 5",
          "local_types": [
            "section",
            "part"
          ],
          "iri": "Entity-section_5-Mention-1"
        }
      ],
      "relevance": 0.398681640625
    },
    "Entity-s_e": {
      "node_id": "s_e",
      "disambiguation_index": 0,
      "label": "s_e",
      "aliases": [
        "s_e"
      ],
      "types": [
        "variable",
        "statistic",
        "subject",
        "number",
        "mathematical notation",
        "count",
        "mathematical expression"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A numerical value representing the frequency or count of occurrences",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-9-Sentence-4",
          "local_name": "s_e",
          "local_types": [
            "variable",
            "statistic",
            "subject",
            "number",
            "mathematical notation",
            "count"
          ],
          "iri": "Entity-s_e-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-9-Sentence-5",
          "local_name": "s_e",
          "local_types": [
            "variable",
            "mathematical expression"
          ],
          "iri": "Entity-s_e-Mention-2"
        }
      ],
      "relevance": 0.398681640625
    },
    "Entity-e_4": {
      "node_id": "e_4",
      "disambiguation_index": 0,
      "label": "e_4",
      "aliases": [
        "e_4"
      ],
      "types": [
        "variable",
        "function",
        "predicate",
        "argument",
        "entity",
        "unknown entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity 'e_4' refers to an instance of predicate P_1.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-9-Sentence-2",
          "local_name": "e_4",
          "local_types": [
            "predicate",
            "variable",
            "function",
            "argument"
          ],
          "iri": "Entity-e_4-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-10-Sentence-1",
          "local_name": "e_4",
          "local_types": [
            "variable",
            "entity",
            "unknown entity"
          ],
          "iri": "Entity-e_4-Mention-2"
        }
      ],
      "relevance": 0.398681640625
    },
    "Entity-": {
      "node_id": "",
      "disambiguation_index": 0,
      "label": "?",
      "aliases": [
        "?"
      ],
      "types": [
        "variable",
        "placeholder",
        "symbol",
        "unknown value",
        "unknown entity"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "an unknown or missing country where Sam is a citizen",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "?",
          "local_types": [
            "unknown value",
            "variable",
            "unknown entity"
          ],
          "iri": "Entity--Mention-1"
        },
        {
          "reference": "Section-11-Paragraph-2-Sentence-4",
          "local_name": "?",
          "local_types": [
            "symbol",
            "placeholder"
          ],
          "iri": "Entity--Mention-2"
        }
      ],
      "relevance": 0.3984375
    },
    "Entity-evaluation_method": {
      "node_id": "evaluation_method",
      "disambiguation_index": 0,
      "label": "evaluation method",
      "aliases": [
        "evaluation method"
      ],
      "types": [
        "method",
        "procedure",
        "evaluation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic process for assessing or judging something",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-3",
          "local_name": "evaluation method",
          "local_types": [
            "method",
            "procedure",
            "evaluation"
          ],
          "iri": "Entity-evaluation_method-Mention-1"
        }
      ],
      "relevance": 0.398193359375
    },
    "Entity-the_rest_of_the_paper": {
      "node_id": "the_rest_of_the_paper",
      "disambiguation_index": 0,
      "label": "The rest of the paper",
      "aliases": [
        "The rest of the paper"
      ],
      "types": [
        "paper"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "This section outlines the structure and organization of the remaining content in this research paper, including sections 2-7.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-1",
          "local_name": "The rest of the paper",
          "local_types": [
            "paper"
          ],
          "iri": "Entity-the_rest_of_the_paper-Mention-1"
        }
      ],
      "relevance": 0.398193359375
    },
    "Entity-0.50": {
      "node_id": "0.50",
      "disambiguation_index": 0,
      "label": "0.50",
      "aliases": [
        "0.50",
        "0.59",
        "0.02"
      ],
      "types": [
        "number",
        "value"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A numerical value representing a proportion or ratio.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-1",
          "local_name": "0.50",
          "local_types": [
            "number",
            "value"
          ],
          "iri": "Entity-0.50-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-1",
          "local_name": "0.02",
          "local_types": [
            "number",
            "value"
          ],
          "iri": "Entity-0.50-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-3",
          "local_name": "0.59",
          "local_types": [
            "number",
            "value"
          ],
          "iri": "Entity-0.50-Mention-3"
        }
      ],
      "relevance": 0.39794921875
    },
    "Entity-attribute__suit_and_rank_": {
      "node_id": "attribute__suit_and_rank_",
      "disambiguation_index": 0,
      "label": "attributes (suit and rank)",
      "aliases": [
        "attributes (suit and rank)"
      ],
      "types": [
        "features",
        "characteristics"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A combination of suit and ranking information used to describe or identify something.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-3",
          "local_name": "attributes (suit and rank)",
          "local_types": [
            "features",
            "characteristics"
          ],
          "iri": "Entity-attribute__suit_and_rank_-Mention-1"
        }
      ],
      "relevance": 0.39794921875
    },
    "Entity-poker_hand_": {
      "node_id": "poker_hand_",
      "disambiguation_index": 0,
      "label": "'Poker Hand'",
      "aliases": [
        "'Poker Hand'"
      ],
      "types": [
        "poker",
        "gaming concept",
        "concept",
        "card game",
        "category",
        "poker hand"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A combination of cards dealt to an individual player in the card game Poker, typically consisting of five cards.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-4",
          "local_name": "'Poker Hand'",
          "local_types": [
            "poker",
            "gaming concept",
            "concept",
            "card game",
            "category",
            "poker hand"
          ],
          "iri": "Entity-poker_hand_-Mention-1"
        }
      ],
      "relevance": 0.397705078125
    },
    "Entity-citizenof__ann___": {
      "node_id": "citizenof__ann___",
      "disambiguation_index": 0,
      "label": "citizenOf(Ann, ?)",
      "aliases": [
        "citizenOf(Ann, ?)"
      ],
      "types": [
        "logical statement",
        "question",
        "query",
        "knowledge representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person whose nationality or country of origin is unknown",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "citizenOf(Ann, ?)",
          "local_types": [
            "logical statement",
            "question",
            "query",
            "knowledge representation"
          ],
          "iri": "Entity-citizenof__ann___-Mention-1"
        }
      ],
      "relevance": 0.397705078125
    },
    "Entity-scalability": {
      "node_id": "scalability",
      "disambiguation_index": 0,
      "label": "scalability",
      "aliases": [
        "scalability"
      ],
      "types": [
        "property",
        "advantage",
        "characteristic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The ability of something to be easily increased or expanded without becoming less effective.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "scalability",
          "local_types": [
            "property",
            "advantage"
          ],
          "iri": "Entity-scalability-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-18",
          "local_name": "scalability",
          "local_types": [
            "property",
            "characteristic"
          ],
          "iri": "Entity-scalability-Mention-2"
        }
      ],
      "relevance": 0.397705078125
    },
    "Entity-p_1__e_8__e_7_": {
      "node_id": "p_1__e_8__e_7_",
      "disambiguation_index": 0,
      "label": "P_1(e_8, e_7)",
      "aliases": [
        "P_1(e_8, e_7)"
      ],
      "types": [
        "predicate",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A specific instance of predicate P_1 with entities e_8 and e_7",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-11-Sentence-2",
          "local_name": "P_1(e_8, e_7)",
          "local_types": [
            "predicate",
            "logical expression"
          ],
          "iri": "Entity-p_1__e_8__e_7_-Mention-1"
        }
      ],
      "relevance": 0.397705078125
    },
    "Entity-in_the_absence_of_any_comparative_system": {
      "node_id": "in_the_absence_of_any_comparative_system",
      "disambiguation_index": 0,
      "label": "In the absence of any comparative system",
      "aliases": [
        "In the absence of any comparative system"
      ],
      "types": [
        "absence",
        "comparative system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The lack or non-existence of a framework that enables comparisons",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-1",
          "local_name": "In the absence of any comparative system",
          "local_types": [
            "absence",
            "comparative system"
          ],
          "iri": "Entity-in_the_absence_of_any_comparative_system-Mention-1"
        }
      ],
      "relevance": 0.397705078125
    },
    "Entity-a_subject__respectively_object__entity_is_assigned_by_random_selection_of_an_entity_with_probability_of_it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set": {
      "node_id": "a_subject__respectively_object__entity_is_assigned_by_random_selection_of_an_entity_with_probability_of_it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set",
      "disambiguation_index": 0,
      "label": "a subject (respectively object) entity is assigned by random selection of an entity with probability of its proportion as a subject (respectively object) of any predicate in the test set",
      "aliases": [
        "a subject (respectively object) entity is assigned by random selection of an entity with probability of its proportion as a subject (respectively object) of any predicate in the test set"
      ],
      "types": [
        "entity assignment",
        "subject",
        "object",
        "predicate",
        "test set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A random selection is made from entities with probabilities proportional to their subject (or object) proportions as subjects (or objects) of any predicate in the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "a subject (respectively object) entity is assigned by random selection of an entity with probability of its proportion as a subject (respectively object) of any predicate in the test set",
          "local_types": [
            "entity assignment",
            "subject",
            "object",
            "predicate",
            "test set"
          ],
          "iri": "Entity-a_subject__respectively_object__entity_is_assigned_by_random_selection_of_an_entity_with_probability_of_it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set-Mention-1"
        }
      ],
      "relevance": 0.397705078125
    },
    "Entity-rest_of_the_paper": {
      "node_id": "rest_of_the_paper",
      "disambiguation_index": 0,
      "label": "rest of the paper",
      "aliases": [
        "rest of the paper"
      ],
      "types": [
        "section",
        "part"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The remaining portion or sections that follow a specific point in written content.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-1",
          "local_name": "rest of the paper",
          "local_types": [
            "section",
            "part"
          ],
          "iri": "Entity-rest_of_the_paper-Mention-1"
        }
      ],
      "relevance": 0.397216796875
    },
    "Entity-playing_card": {
      "node_id": "playing_card",
      "disambiguation_index": 0,
      "label": "playing cards",
      "aliases": [
        "playing cards"
      ],
      "types": [
        "cards",
        "card game element",
        "physical object",
        "game components"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of flat, rectangular pieces used for various card games",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-2",
          "local_name": "playing cards",
          "local_types": [
            "cards",
            "card game element",
            "physical object",
            "game components"
          ],
          "iri": "Entity-playing_card-Mention-1"
        }
      ],
      "relevance": 0.397216796875
    },
    "Entity-two_attribute__suit_and_rank_": {
      "node_id": "two_attribute__suit_and_rank_",
      "disambiguation_index": 0,
      "label": "two attributes (suit and rank)",
      "aliases": [
        "two attributes (suit and rank)"
      ],
      "types": [
        "attribute"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of descriptive features used to characterize each card in a Poker hand, consisting of two types: suit and rank.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-3",
          "local_name": "two attributes (suit and rank)",
          "local_types": [
            "attribute"
          ],
          "iri": "Entity-two_attribute__suit_and_rank_-Mention-1"
        }
      ],
      "relevance": 0.397216796875
    },
    "Entity-logical_axiom": {
      "node_id": "logical_axiom",
      "disambiguation_index": 0,
      "label": "logical axioms",
      "aliases": [
        "logical axioms"
      ],
      "types": [
        "mathematical concept",
        "philosophical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of fundamental principles or statements that serve as a basis for reasoning and inference",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-10-Sentence-9",
          "local_name": "logical axioms",
          "local_types": [
            "mathematical concept",
            "philosophical concept"
          ],
          "iri": "Entity-logical_axiom-Mention-1"
        }
      ],
      "relevance": 0.39697265625
    },
    "Entity-optimum": {
      "node_id": "optimum",
      "disambiguation_index": 0,
      "label": "optimum",
      "aliases": [
        "optimum"
      ],
      "types": [
        "result",
        "output"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The best or most desirable outcome, result, or value",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-2",
          "local_name": "optimum",
          "local_types": [
            "result",
            "output"
          ],
          "iri": "Entity-optimum-Mention-1"
        }
      ],
      "relevance": 0.39697265625
    },
    "Entity-this": {
      "node_id": "this",
      "disambiguation_index": 0,
      "label": "This",
      "aliases": [
        "This"
      ],
      "types": [
        "research",
        "paper"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research paper or publication",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-1",
          "local_name": "This",
          "local_types": [
            "research",
            "paper"
          ],
          "iri": "Entity-this-Mention-1"
        }
      ],
      "relevance": 0.396728515625
    },
    "Entity-result": {
      "node_id": "result",
      "disambiguation_index": 0,
      "label": "results",
      "aliases": [
        "results"
      ],
      "types": [
        "research finding"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research outcome or finding",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-8-Sentence-2",
          "local_name": "results",
          "local_types": [
            "research finding"
          ],
          "iri": "Entity-result-Mention-1"
        }
      ],
      "relevance": 0.396728515625
    },
    "Entity-subject_argument": {
      "node_id": "subject_argument",
      "disambiguation_index": 0,
      "label": "subject argument",
      "aliases": [
        "subject argument"
      ],
      "types": [
        "component",
        "variable",
        "term",
        "argument"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A component or variable that serves as the starting point for a logical operation or relationship.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-6-Sentence-1",
          "local_name": "subject argument",
          "local_types": [
            "variable",
            "term"
          ],
          "iri": "Entity-subject_argument-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "subject argument",
          "local_types": [
            "argument",
            "component"
          ],
          "iri": "Entity-subject_argument-Mention-2"
        }
      ],
      "relevance": 0.396484375
    },
    "Entity-head": {
      "node_id": "head",
      "disambiguation_index": 0,
      "label": "head",
      "aliases": [
        "head"
      ],
      "types": [
        "function",
        "target",
        "predicate",
        "part",
        "component",
        "logic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The topmost or foremost part of an entity, often serving as a central component or focal point.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "head",
          "local_types": [
            "part",
            "component"
          ],
          "iri": "Entity-head-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-6",
          "local_name": "head",
          "local_types": [
            "target",
            "predicate"
          ],
          "iri": "Entity-head-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-2",
          "local_name": "head",
          "local_types": [
            "function",
            "logic"
          ],
          "iri": "Entity-head-Mention-3"
        }
      ],
      "relevance": 0.396240234375
    },
    "Entity-run_time": {
      "node_id": "run_time",
      "disambiguation_index": 0,
      "label": "run times",
      "aliases": [
        "run times"
      ],
      "types": [
        "time measurement",
        "performance metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of the duration or pace at which a process or task is executed.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-3",
          "local_name": "run times",
          "local_types": [
            "time measurement",
            "performance metric"
          ],
          "iri": "Entity-run_time-Mention-1"
        }
      ],
      "relevance": 0.396240234375
    },
    "Entity-weaker_performance": {
      "node_id": "weaker_performance",
      "disambiguation_index": 0,
      "label": "weaker performance",
      "aliases": [
        "weaker performance"
      ],
      "types": [
        "performance metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of achievement or accomplishment",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-5-Sentence-1",
          "local_name": "weaker performance",
          "local_types": [
            "performance metric"
          ],
          "iri": "Entity-weaker_performance-Mention-1"
        }
      ],
      "relevance": 0.395751953125
    },
    "Entity-country_(1)": {
      "node_id": "country_(1)",
      "disambiguation_index": 1,
      "label": "country\u207b\u00b9",
      "aliases": [
        "country\u207b\u00b9"
      ],
      "types": [
        "concept",
        "function",
        "inverse relation",
        "geopolitical entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sovereign nation or territory with defined borders and a distinct government.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "country\u207b\u00b9",
          "local_types": [
            "concept",
            "function",
            "inverse relation",
            "geopolitical entity"
          ],
          "iri": "Entity-country_(1)-Mention-1"
        }
      ],
      "relevance": 0.3955078125
    },
    "Entity-extant_entity": {
      "node_id": "extant_entity",
      "disambiguation_index": 0,
      "label": "extant entities",
      "aliases": [
        "extant entities"
      ],
      "types": [
        "entities",
        "existing entity",
        "known entity"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Entities or things that currently exist",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-2-Sentence-3",
          "local_name": "extant entities",
          "local_types": [
            "entities",
            "existing entity",
            "known entity"
          ],
          "iri": "Entity-extant_entity-Mention-1"
        }
      ],
      "relevance": 0.394775390625
    },
    "Entity-100": {
      "node_id": "100",
      "disambiguation_index": 0,
      "label": "100",
      "aliases": [
        "100"
      ],
      "types": [
        "number",
        "integer"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value representing a quantity or measurement.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-1",
          "local_name": "100",
          "local_types": [
            "number",
            "integer"
          ],
          "iri": "Entity-100-Mention-1"
        }
      ],
      "relevance": 0.39453125
    },
    "Entity-future_research": {
      "node_id": "future_research",
      "disambiguation_index": 0,
      "label": "future research",
      "aliases": [
        "future research"
      ],
      "types": [
        "study",
        "project"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Research planned or intended to be conducted in the future",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-5",
          "local_name": "future research",
          "local_types": [
            "study",
            "project"
          ],
          "iri": "Entity-future_research-Mention-1"
        }
      ],
      "relevance": 0.39453125
    },
    "Entity-predicate_pair": {
      "node_id": "predicate_pair",
      "disambiguation_index": 0,
      "label": "predicate pairs",
      "aliases": [
        "predicate pairs"
      ],
      "types": [
        "concept",
        "pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of related predicates or concepts",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-3",
          "local_name": "predicate pairs",
          "local_types": [
            "concept",
            "pattern"
          ],
          "iri": "Entity-predicate_pair-Mention-1"
        }
      ],
      "relevance": 0.39404296875
    },
    "Entity-with_each_selected_randomly_with_probability_of_it_proportion_in_the_test_set": {
      "node_id": "with_each_selected_randomly_with_probability_of_it_proportion_in_the_test_set",
      "disambiguation_index": 0,
      "label": "with each selected randomly with probability of its proportion in the test set",
      "aliases": [
        "with each selected randomly with probability of its proportion in the test set"
      ],
      "types": [
        "probability",
        "test set"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A bag of predicates, where each predicate is chosen randomly based on its proportion in the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-2",
          "local_name": "with each selected randomly with probability of its proportion in the test set",
          "local_types": [
            "probability",
            "test set"
          ],
          "iri": "Entity-with_each_selected_randomly_with_probability_of_it_proportion_in_the_test_set-Mention-1"
        }
      ],
      "relevance": 0.39404296875
    },
    "Entity-head_variable": {
      "node_id": "head_variable",
      "disambiguation_index": 0,
      "label": "head variables",
      "aliases": [
        "head variables"
      ],
      "types": [
        "variable",
        "mathematical term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A variable or mathematical term that serves as a head, typically representing a value or quantity.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-4",
          "local_name": "head variables",
          "local_types": [
            "variable",
            "mathematical term"
          ],
          "iri": "Entity-head_variable-Mention-1"
        }
      ],
      "relevance": 0.393310546875
    },
    "Entity-problem": {
      "node_id": "problem",
      "disambiguation_index": 0,
      "label": "problem",
      "aliases": [
        "problem"
      ],
      "types": [
        "concept",
        "issue"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concept or issue that requires resolution or solution.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-3-Sentence-3",
          "local_name": "problem",
          "local_types": [
            "concept",
            "issue"
          ],
          "iri": "Entity-problem-Mention-1"
        }
      ],
      "relevance": 0.393310546875
    },
    "Entity-star": {
      "node_id": "star",
      "disambiguation_index": 0,
      "label": "stars",
      "aliases": [
        "stars"
      ],
      "types": [
        "data structure",
        "pattern"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A geometric pattern consisting of points connected by lines or curves that radiate from a central point.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-2",
          "local_name": "stars",
          "local_types": [
            "data structure",
            "pattern"
          ],
          "iri": "Entity-star-Mention-1"
        }
      ],
      "relevance": 0.393310546875
    },
    "Entity-country": {
      "node_id": "country",
      "disambiguation_index": 0,
      "label": "countries",
      "aliases": [
        "countries",
        "country"
      ],
      "types": [
        "location",
        "geographic region",
        "polity",
        "nation",
        "state",
        "geographic",
        "nation-state",
        "geopolitical entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sovereign state or territory with defined borders and a distinct government.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "countries",
          "local_types": [
            "geopolitical entity",
            "location"
          ],
          "iri": "Entity-country-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-4",
          "local_name": "countries",
          "local_types": [
            "geographic region",
            "location"
          ],
          "iri": "Entity-country-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "country",
          "local_types": [
            "polity",
            "state",
            "geographic",
            "nation-state",
            "nation"
          ],
          "iri": "Entity-country-Mention-3"
        }
      ],
      "relevance": 0.392822265625
    },
    "Entity-support": {
      "node_id": "support",
      "disambiguation_index": 0,
      "label": "support",
      "aliases": [
        "support"
      ],
      "types": [
        "measure",
        "concept",
        "idea",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or metric used to evaluate or quantify something",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-2",
          "local_name": "support",
          "local_types": [
            "measure",
            "concept",
            "idea",
            "metric"
          ],
          "iri": "Entity-support-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-6",
          "local_name": "support",
          "local_types": [
            "concept",
            "metric"
          ],
          "iri": "Entity-support-Mention-2"
        }
      ],
      "relevance": 0.392822265625
    },
    "Entity-for_example": {
      "node_id": "for_example",
      "disambiguation_index": 0,
      "label": "For example",
      "aliases": [
        "For example"
      ],
      "types": [
        "example"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An illustrative instance or scenario used to clarify a concept or principle",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "For example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_example-Mention-1"
        },
        {
          "reference": "Section-8-Paragraph-9-Sentence-1",
          "local_name": "For example",
          "local_types": [
            "example"
          ],
          "iri": "Entity-for_example-Mention-2"
        }
      ],
      "relevance": 0.392822265625
    },
    "Entity-challenge": {
      "node_id": "challenge",
      "disambiguation_index": 0,
      "label": "challenges",
      "aliases": [
        "challenges"
      ],
      "types": [
        "problem",
        "issue"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Difficulties or obstacles that need to be overcome",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-1",
          "local_name": "challenges",
          "local_types": [
            "problem",
            "issue"
          ],
          "iri": "Entity-challenge-Mention-1"
        }
      ],
      "relevance": 0.392822265625
    },
    "Entity-runtime": {
      "node_id": "runtime",
      "disambiguation_index": 0,
      "label": "runtime",
      "aliases": [
        "runtime"
      ],
      "types": [
        "time period",
        "duration"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The time taken by a process or program to complete its execution.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-3",
          "local_name": "runtime",
          "local_types": [
            "time period",
            "duration"
          ],
          "iri": "Entity-runtime-Mention-1"
        }
      ],
      "relevance": 0.392578125
    },
    "Entity-number_of_time": {
      "node_id": "number_of_time",
      "disambiguation_index": 0,
      "label": "number of times",
      "aliases": [
        "number of times"
      ],
      "types": [
        "quantity",
        "count"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The total frequency or repetition count.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-9",
          "local_name": "number of times",
          "local_types": [
            "quantity",
            "count"
          ],
          "iri": "Entity-number_of_time-Mention-1"
        }
      ],
      "relevance": 0.391845703125
    },
    "Entity-a__p1___i__j_": {
      "node_id": "a__p1___i__j_",
      "disambiguation_index": 0,
      "label": "A(P1)[i,j]",
      "aliases": [
        "A(P1)[i,j]"
      ],
      "types": [
        "notation",
        "reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An index or reference point in a notation system, specifically denoting a relationship between entities i and j.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-3",
          "local_name": "A(P1)[i,j]",
          "local_types": [
            "notation",
            "reference"
          ],
          "iri": "Entity-a__p1___i__j_-Mention-1"
        }
      ],
      "relevance": 0.391845703125
    },
    "Entity-4": {
      "node_id": "4",
      "disambiguation_index": 0,
      "label": "4",
      "aliases": [
        "4"
      ],
      "types": [
        "number",
        "integer"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value representing an integer.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-13-Sentence-1",
          "local_name": "4",
          "local_types": [
            "number",
            "integer"
          ],
          "iri": "Entity-4-Mention-1"
        }
      ],
      "relevance": 0.39111328125
    },
    "Entity-an_intel_xeon_cpu_e5-4620v2__2.60_ghz": {
      "node_id": "an_intel_xeon_cpu_e5-4620v2__2.60_ghz",
      "disambiguation_index": 0,
      "label": "an Intel Xeon CPU E5-4620v2 @ 2.60 GHz",
      "aliases": [
        "an Intel Xeon CPU E5-4620v2 @ 2.60 GHz"
      ],
      "types": [
        "hardware",
        "CPU"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A high-performance central processing unit (CPU) designed by Intel.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-1",
          "local_name": "an Intel Xeon CPU E5-4620v2 @ 2.60 GHz",
          "local_types": [
            "hardware",
            "CPU"
          ],
          "iri": "Entity-an_intel_xeon_cpu_e5-4620v2__2.60_ghz-Mention-1"
        }
      ],
      "relevance": 0.390869140625
    },
    "Entity-it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set": {
      "node_id": "it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set",
      "disambiguation_index": 0,
      "label": "its proportion as a subject (respectively object) of any predicate in the test set",
      "aliases": [
        "its proportion as a subject (respectively object) of any predicate in the test set"
      ],
      "types": [
        "proportion",
        "predicate",
        "test set"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The proportion of entities that serve as subjects (or objects) for predicates in the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "its proportion as a subject (respectively object) of any predicate in the test set",
          "local_types": [
            "proportion",
            "predicate",
            "test set"
          ],
          "iri": "Entity-it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set-Mention-1"
        }
      ],
      "relevance": 0.390869140625
    },
    "Entity-each_card": {
      "node_id": "each_card",
      "disambiguation_index": 0,
      "label": "Each card",
      "aliases": [
        "Each card"
      ],
      "types": [
        "card",
        "card game entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A unit of playing cards, typically characterized by its suit and rank.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-3",
          "local_name": "Each card",
          "local_types": [
            "card",
            "card game entity"
          ],
          "iri": "Entity-each_card-Mention-1"
        }
      ],
      "relevance": 0.390625
    },
    "Entity-m_2": {
      "node_id": "m_2",
      "disambiguation_index": 0,
      "label": "M_2",
      "aliases": [
        "M_2"
      ],
      "types": [
        "matrix",
        "mathematical object",
        "variable"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The matrix M_2",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-13-Sentence-2",
          "local_name": "M_2",
          "local_types": [
            "mathematical object",
            "matrix",
            "variable"
          ],
          "iri": "Entity-m_2-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-13-Sentence-1",
          "local_name": "M_2",
          "local_types": [
            "matrix",
            "variable"
          ],
          "iri": "Entity-m_2-Mention-2"
        }
      ],
      "relevance": 0.389892578125
    },
    "Entity-the_plausibility_of_a_fact": {
      "node_id": "the_plausibility_of_a_fact",
      "disambiguation_index": 0,
      "label": "the plausibility of a fact",
      "aliases": [
        "the plausibility of a fact"
      ],
      "types": [
        "plausibility",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The degree to which a statement or proposition can be considered true, believable, or reasonable.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-2",
          "local_name": "the plausibility of a fact",
          "local_types": [
            "plausibility",
            "fact"
          ],
          "iri": "Entity-the_plausibility_of_a_fact-Mention-1"
        }
      ],
      "relevance": 0.389892578125
    },
    "Entity-in_this_way": {
      "node_id": "in_this_way",
      "disambiguation_index": 0,
      "label": "In this way",
      "aliases": [
        "In this way"
      ],
      "types": [
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A manner or approach used to accomplish something",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-6-Sentence-1",
          "local_name": "In this way",
          "local_types": [
            "method"
          ],
          "iri": "Entity-in_this_way-Mention-1"
        }
      ],
      "relevance": 0.389892578125
    },
    "Entity-fact_about_a_person_s_city_of_residence_and_the_nation_in_which_that_city_is_located": {
      "node_id": "fact_about_a_person_s_city_of_residence_and_the_nation_in_which_that_city_is_located",
      "disambiguation_index": 0,
      "label": "facts about a person's city of residence and the nation in which that city is located",
      "aliases": [
        "facts about a person's city of residence and the nation in which that city is located"
      ],
      "types": [
        "data"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Geographic information about an individual's place of residency",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "facts about a person's city of residence and the nation in which that city is located",
          "local_types": [
            "data"
          ],
          "iri": "Entity-fact_about_a_person_s_city_of_residence_and_the_nation_in_which_that_city_is_located-Mention-1"
        }
      ],
      "relevance": 0.3896484375
    },
    "Entity-locatedin__e___e__": {
      "node_id": "locatedin__e___e__",
      "disambiguation_index": 0,
      "label": "locatedIn( e', e')",
      "aliases": [
        "locatedIn( e', e')"
      ],
      "types": [
        "relation",
        "logical expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A relationship between two entities, where one (e') is situated within or contained by another (e').",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "locatedIn( e', e')",
          "local_types": [
            "relation",
            "logical expression"
          ],
          "iri": "Entity-locatedin__e___e__-Mention-1"
        }
      ],
      "relevance": 0.3896484375
    },
    "Entity-_3_": {
      "node_id": "_3_",
      "disambiguation_index": 0,
      "label": "(3)",
      "aliases": [
        "(3)"
      ],
      "types": [
        "quantity",
        "number",
        "reference"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A numerical value indicating the quantity or magnitude.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-4-Sentence-4",
          "local_name": "(3)",
          "local_types": [
            "quantity",
            "number"
          ],
          "iri": "Entity-_3_-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-4",
          "local_name": "(3)",
          "local_types": [
            "number",
            "reference"
          ],
          "iri": "Entity-_3_-Mention-2"
        }
      ],
      "relevance": 0.389404296875
    },
    "Entity-count": {
      "node_id": "count",
      "disambiguation_index": 0,
      "label": "count",
      "aliases": [
        "count"
      ],
      "types": [
        "quantity",
        "number",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value representing the size or magnitude of a collection, quantity, or measurement.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-2",
          "local_name": "count",
          "local_types": [
            "quantity",
            "number",
            "mathematical concept"
          ],
          "iri": "Entity-count-Mention-1"
        }
      ],
      "relevance": 0.389404296875
    },
    "Entity-false_positive_rate_of_almost_50_": {
      "node_id": "false_positive_rate_of_almost_50_",
      "disambiguation_index": 0,
      "label": "False Positive Rate of almost 50%",
      "aliases": [
        "False Positive Rate of almost 50%"
      ],
      "types": [
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure indicating the proportion of incorrect positive predictions out of total predicted positives.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-10-Sentence-1",
          "local_name": "False Positive Rate of almost 50%",
          "local_types": [
            "metric"
          ],
          "iri": "Entity-false_positive_rate_of_almost_50_-Mention-1"
        }
      ],
      "relevance": 0.389404296875
    },
    "Entity-y": {
      "node_id": "y",
      "disambiguation_index": 0,
      "label": "y",
      "aliases": [
        "y"
      ],
      "types": [
        "variable",
        "location",
        "parameter",
        "country",
        "free",
        "place",
        "occupation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A country or place where someone resides",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "y",
          "local_types": [
            "place",
            "location"
          ],
          "iri": "Entity-y-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "y",
          "local_types": [
            "occupation"
          ],
          "iri": "Entity-y-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "y",
          "local_types": [
            "location",
            "country"
          ],
          "iri": "Entity-y-Mention-3"
        },
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "y",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-y-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-2-Sentence-1",
          "local_name": "y",
          "local_types": [
            "variable",
            "free"
          ],
          "iri": "Entity-y-Mention-5"
        },
        {
          "reference": "Section-4-Paragraph-3-Sentence-2",
          "local_name": "y",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-y-Mention-6"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-16",
          "local_name": "y",
          "local_types": [
            "variable",
            "parameter"
          ],
          "iri": "Entity-y-Mention-7"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "y",
          "local_types": [
            "location",
            "place"
          ],
          "iri": "Entity-y-Mention-8"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "y",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-y-Mention-9"
        }
      ],
      "relevance": 0.38916015625
    },
    "Entity-presidentof__obama__usa_": {
      "node_id": "presidentof__obama__usa_",
      "disambiguation_index": 0,
      "label": "presidentOf(Obama, USA)",
      "aliases": [
        "presidentOf(Obama, USA)"
      ],
      "types": [
        "fact",
        "knowledge graph fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The head of state and government of the United States.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-2",
          "local_name": "presidentOf(Obama, USA)",
          "local_types": [
            "fact",
            "knowledge graph fact"
          ],
          "iri": "Entity-presidentof__obama__usa_-Mention-1"
        }
      ],
      "relevance": 0.388671875
    },
    "Entity-spouse__z__y_": {
      "node_id": "spouse__z__y_",
      "disambiguation_index": 0,
      "label": "spouse(z, y)",
      "aliases": [
        "spouse(z, y)",
        "spouse( z, y )"
      ],
      "types": [
        "relation",
        "predicate logic",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The partner or companion of a person",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-1",
          "local_name": "spouse(z, y)",
          "local_types": [
            "relation",
            "predicate logic",
            "function"
          ],
          "iri": "Entity-spouse__z__y_-Mention-1"
        }
      ],
      "relevance": 0.388427734375
    },
    "Entity-there_is_one_class_attribute_that_describes_the_poker_hand_": {
      "node_id": "there_is_one_class_attribute_that_describes_the_poker_hand_",
      "disambiguation_index": 0,
      "label": "There is one Class attribute that describes the 'Poker Hand'",
      "aliases": [
        "There is one Class attribute that describes the 'Poker Hand'"
      ],
      "types": [
        "class attribute",
        "hand"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A classifying attribute in Poker Hands, describing each hand.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-4",
          "local_name": "There is one Class attribute that describes the 'Poker Hand'",
          "local_types": [
            "class attribute",
            "hand"
          ],
          "iri": "Entity-there_is_one_class_attribute_that_describes_the_poker_hand_-Mention-1"
        }
      ],
      "relevance": 0.388427734375
    },
    "Entity-x_is_a_citizen_of_somewhere__y_": {
      "node_id": "x_is_a_citizen_of_somewhere__y_",
      "disambiguation_index": 0,
      "label": "x is a citizen of somewhere (y)",
      "aliases": [
        "x is a citizen of somewhere (y)"
      ],
      "types": [
        "citizenship"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A rule that implies the citizenship of an entity 'x' in some location 'y', given information about their studies and residence.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "x is a citizen of somewhere (y)",
          "local_types": [
            "citizenship"
          ],
          "iri": "Entity-x_is_a_citizen_of_somewhere__y_-Mention-1"
        }
      ],
      "relevance": 0.3876953125
    },
    "Entity-0.19": {
      "node_id": "0.19",
      "disambiguation_index": 0,
      "label": "0.19",
      "aliases": [
        "0.19"
      ],
      "types": [
        "number"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A numerical value representing a measurement or quantity.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "0.19",
          "local_types": [
            "number"
          ],
          "iri": "Entity-0.19-Mention-1"
        }
      ],
      "relevance": 0.387451171875
    },
    "Entity-section_3": {
      "node_id": "section_3",
      "disambiguation_index": 0,
      "label": "Section 3",
      "aliases": [
        "Section 3"
      ],
      "types": [
        "section",
        "part"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A part or division within a larger work that contains specific content",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-2",
          "local_name": "Section 3",
          "local_types": [
            "section",
            "part"
          ],
          "iri": "Entity-section_3-Mention-1"
        }
      ],
      "relevance": 0.386474609375
    },
    "Entity-all_experiment": {
      "node_id": "all_experiment",
      "disambiguation_index": 0,
      "label": "All experiments",
      "aliases": [
        "All experiments"
      ],
      "types": [
        "experiments"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of scientific tests or trials conducted to investigate a hypothesis or test a theory.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-1",
          "local_name": "All experiments",
          "local_types": [
            "experiments"
          ],
          "iri": "Entity-all_experiment-Mention-1"
        }
      ],
      "relevance": 0.386474609375
    },
    "Entity-an_entity_e": {
      "node_id": "an_entity_e",
      "disambiguation_index": 0,
      "label": "An entity e",
      "aliases": [
        "An entity e"
      ],
      "types": [
        "entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A unique identifier or reference point that represents an object, concept, or individual.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "An entity e",
          "local_types": [
            "entity"
          ],
          "iri": "Entity-an_entity_e-Mention-1"
        }
      ],
      "relevance": 0.385986328125
    },
    "Entity-citizenof": {
      "node_id": "citizenof",
      "disambiguation_index": 0,
      "label": "citizenOf",
      "aliases": [
        "citizenOf",
        "citizenOf(x, t)",
        "citizenOf(x, y)"
      ],
      "types": [
        "function",
        "relationship",
        "predicate",
        "predicate logic",
        "rule",
        "relation",
        "logic formula"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A relation indicating that an individual has citizenship in a particular country or jurisdiction.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "citizenOf",
          "local_types": [
            "relation",
            "relationship",
            "predicate",
            "function"
          ],
          "iri": "Entity-citizenof-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "citizenOf",
          "local_types": [
            "relation",
            "rule"
          ],
          "iri": "Entity-citizenof-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-6-Sentence-1",
          "local_name": "citizenOf(x, y)",
          "local_types": [
            "relation",
            "predicate",
            "function"
          ],
          "iri": "Entity-citizenof-Mention-3"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "citizenOf(x, y)",
          "local_types": [
            "relation",
            "predicate logic"
          ],
          "iri": "Entity-citizenof-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "citizenOf(x, t)",
          "local_types": [
            "function",
            "predicate",
            "predicate logic",
            "relation",
            "logic formula"
          ],
          "iri": "Entity-citizenof-Mention-5"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "citizenOf(x, t)",
          "local_types": [
            "relation",
            "predicate",
            "logic formula"
          ],
          "iri": "Entity-citizenof-Mention-6"
        }
      ],
      "relevance": 0.3857421875
    },
    "Entity-crown": {
      "node_id": "crown",
      "disambiguation_index": 0,
      "label": "Crown",
      "aliases": [
        "Crown"
      ],
      "types": [
        "government",
        "organization"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A government or organization that holds supreme authority and power, typically symbolized by a monarch's headgear.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-5-Sentence-1",
          "local_name": "Crown",
          "local_types": [
            "government",
            "organization"
          ],
          "iri": "Entity-crown-Mention-1"
        }
      ],
      "relevance": 0.385498046875
    },
    "Entity-user": {
      "node_id": "user",
      "disambiguation_index": 0,
      "label": "user",
      "aliases": [
        "user"
      ],
      "types": [
        "person",
        "individual"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person who interacts with a system, service, or application.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-7",
          "local_name": "user",
          "local_types": [
            "person",
            "individual"
          ],
          "iri": "Entity-user-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-1-Sentence-4",
          "local_name": "user",
          "local_types": [
            "person",
            "individual"
          ],
          "iri": "Entity-user-Mention-2"
        }
      ],
      "relevance": 0.385498046875
    },
    "Entity-the_count_is_the_cardinality_of_this_set": {
      "node_id": "the_count_is_the_cardinality_of_this_set",
      "disambiguation_index": 0,
      "label": "The count is the cardinality of this set",
      "aliases": [
        "The count is the cardinality of this set"
      ],
      "types": [
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value representing the size or quantity of a collection.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-9-Sentence-2",
          "local_name": "The count is the cardinality of this set",
          "local_types": [
            "description"
          ],
          "iri": "Entity-the_count_is_the_cardinality_of_this_set-Mention-1"
        }
      ],
      "relevance": 0.385498046875
    },
    "Entity-baseline": {
      "node_id": "baseline",
      "disambiguation_index": 0,
      "label": "baseline",
      "aliases": [
        "baselines",
        "baseline"
      ],
      "types": [
        "comparison group",
        "evaluation metric",
        "standard",
        "reference point",
        "standard reference point"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard or typical value used for comparison purposes.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-8-Sentence-2",
          "local_name": "baseline",
          "local_types": [
            "standard reference point",
            "evaluation metric"
          ],
          "iri": "Entity-baseline-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-4-Sentence-1",
          "local_name": "baselines",
          "local_types": [
            "standard",
            "comparison group",
            "reference point",
            "standard reference point"
          ],
          "iri": "Entity-baseline-Mention-2"
        }
      ],
      "relevance": 0.385009765625
    },
    "Entity-preliminary_attempt": {
      "node_id": "preliminary_attempt",
      "disambiguation_index": 0,
      "label": "preliminary attempts",
      "aliases": [
        "preliminary attempts"
      ],
      "types": [
        "research effort"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Initial endeavors or experiments undertaken to achieve a specific goal, often serving as a foundation for further development.",
      "mentions": [
        {
          "reference": "Section-12-Paragraph-1-Sentence-4",
          "local_name": "preliminary attempts",
          "local_types": [
            "research effort"
          ],
          "iri": "Entity-preliminary_attempt-Mention-1"
        }
      ],
      "relevance": 0.385009765625
    },
    "Entity-confidence_degree": {
      "node_id": "confidence_degree",
      "disambiguation_index": 0,
      "label": "confidence degree",
      "aliases": [
        "confidence degree"
      ],
      "types": [
        "measure",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or metric used to quantify the level of certainty or trust in a particular outcome or prediction.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-4-Sentence-1",
          "local_name": "confidence degree",
          "local_types": [
            "measure",
            "metric"
          ],
          "iri": "Entity-confidence_degree-Mention-1"
        }
      ],
      "relevance": 0.384765625
    },
    "Entity-participant": {
      "node_id": "participant",
      "disambiguation_index": 0,
      "label": "participant",
      "aliases": [
        "participant"
      ],
      "types": [
        "role",
        "concept",
        "individual",
        "event attendee",
        "person",
        "relation",
        "actor"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An individual or group involved in an event, activity, or process.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "participant",
          "local_types": [
            "person",
            "individual",
            "actor"
          ],
          "iri": "Entity-participant-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-3",
          "local_name": "participant",
          "local_types": [
            "role",
            "concept",
            "event attendee",
            "person",
            "relation"
          ],
          "iri": "Entity-participant-Mention-2"
        }
      ],
      "relevance": 0.384765625
    },
    "Entity-each": {
      "node_id": "each",
      "disambiguation_index": 0,
      "label": "Each",
      "aliases": [
        "Each"
      ],
      "types": [
        "term",
        "variable",
        "concept",
        "quantifier",
        "entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A quantifying expression that refers to individual elements or instances.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-2-Sentence-3",
          "local_name": "Each",
          "local_types": [
            "concept",
            "term",
            "entity"
          ],
          "iri": "Entity-each-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-6-Sentence-2",
          "local_name": "Each",
          "local_types": [
            "term",
            "variable"
          ],
          "iri": "Entity-each-Mention-2"
        },
        {
          "reference": "Section-7-Paragraph-5-Sentence-2",
          "local_name": "Each",
          "local_types": [
            "variable",
            "quantifier"
          ],
          "iri": "Entity-each-Mention-3"
        }
      ],
      "relevance": 0.38427734375
    },
    "Entity-for__1_": {
      "node_id": "for__1_",
      "disambiguation_index": 0,
      "label": "For (1)",
      "aliases": [
        "For (1)"
      ],
      "types": [
        "notation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A mathematical notation or formula",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-1",
          "local_name": "For (1)",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-for__1_-Mention-1"
        }
      ],
      "relevance": 0.384033203125
    },
    "Entity-class_attribute": {
      "node_id": "class_attribute",
      "disambiguation_index": 0,
      "label": "Class attribute",
      "aliases": [
        "Class attribute"
      ],
      "types": [
        "data structure",
        "computer science term"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A characteristic or property of an object, class, or category that defines its nature and distinguishes it from others.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-4",
          "local_name": "Class attribute",
          "local_types": [
            "data structure",
            "computer science term"
          ],
          "iri": "Entity-class_attribute-Mention-1"
        }
      ],
      "relevance": 0.384033203125
    },
    "Entity-section_7": {
      "node_id": "section_7",
      "disambiguation_index": 0,
      "label": "Section 7",
      "aliases": [
        "Section 7"
      ],
      "types": [
        "section",
        "part",
        "literature review"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A part of a written document that presents information or analysis on a specific topic.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-6",
          "local_name": "Section 7",
          "local_types": [
            "section",
            "part",
            "literature review"
          ],
          "iri": "Entity-section_7-Mention-1"
        }
      ],
      "relevance": 0.3837890625
    },
    "Entity-locatedin": {
      "node_id": "locatedin",
      "disambiguation_index": 0,
      "label": "locatedIn",
      "aliases": [
        "locatedIn"
      ],
      "types": [
        "relation",
        "relationship",
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a spatial or geographical relationship indicating where something exists",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "locatedIn",
          "local_types": [
            "relation",
            "relationship",
            "predicate",
            "function"
          ],
          "iri": "Entity-locatedin-Mention-1"
        }
      ],
      "relevance": 0.383544921875
    },
    "Entity-relation": {
      "node_id": "relation",
      "disambiguation_index": 0,
      "label": "relations",
      "aliases": [
        "relations"
      ],
      "types": [
        "connection",
        "linkage"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A connection or linkage between two or more entities, concepts, or things.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-8-Sentence-3",
          "local_name": "relations",
          "local_types": [
            "connection",
            "linkage"
          ],
          "iri": "Entity-relation-Mention-1"
        }
      ],
      "relevance": 0.38330078125
    },
    "Entity-e_": {
      "node_id": "e_",
      "disambiguation_index": 0,
      "label": "e'",
      "aliases": [
        "e'"
      ],
      "types": [
        "variable",
        "concept",
        "placeholder",
        "entity",
        "symbol",
        "identifier"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An identifier or symbol representing an object, such as a person, place, or concept.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "e'",
          "local_types": [
            "variable",
            "identifier"
          ],
          "iri": "Entity-e_-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-5-Sentence-3",
          "local_name": "e'",
          "local_types": [
            "variable",
            "placeholder"
          ],
          "iri": "Entity-e_-Mention-2"
        },
        {
          "reference": "Section-4-Paragraph-6-Sentence-3",
          "local_name": "e'",
          "local_types": [
            "entity",
            "concept"
          ],
          "iri": "Entity-e_-Mention-3"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-9",
          "local_name": "e'",
          "local_types": [
            "variable",
            "symbol"
          ],
          "iri": "Entity-e_-Mention-4"
        },
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "e'",
          "local_types": [
            "variable",
            "placeholder"
          ],
          "iri": "Entity-e_-Mention-5"
        }
      ],
      "relevance": 0.3828125
    },
    "Entity-definition": {
      "node_id": "definition",
      "disambiguation_index": 0,
      "label": "Definition",
      "aliases": [
        "Definition"
      ],
      "types": [
        "notation",
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A concise explanation or statement of meaning",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-5-Sentence-1",
          "local_name": "Definition",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-definition-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-7-Sentence-1",
          "local_name": "Definition",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-definition-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-15-Sentence-1",
          "local_name": "Definition",
          "local_types": [
            "concept",
            "notation"
          ],
          "iri": "Entity-definition-Mention-3"
        }
      ],
      "relevance": 0.3828125
    },
    "Entity-return_r_.": {
      "node_id": "return_r_.",
      "disambiguation_index": 0,
      "label": "Return R.",
      "aliases": [
        "Return R."
      ],
      "types": [
        "return statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A return statement.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-2-Sentence-13",
          "local_name": "Return R.",
          "local_types": [
            "return statement"
          ],
          "iri": "Entity-return_r_.-Mention-1"
        }
      ],
      "relevance": 0.382080078125
    },
    "Entity-row_index": {
      "node_id": "row_index",
      "disambiguation_index": 0,
      "label": "row index",
      "aliases": [
        "row index"
      ],
      "types": [
        "index",
        "dimension",
        "identifier"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A numerical value indicating a specific position or entity in a sequence, used to identify and distinguish between different elements.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-8-Sentence-2",
          "local_name": "row index",
          "local_types": [
            "index",
            "identifier"
          ],
          "iri": "Entity-row_index-Mention-1"
        },
        {
          "reference": "Section-7-Paragraph-8-Sentence-3",
          "local_name": "row index",
          "local_types": [
            "index",
            "dimension"
          ],
          "iri": "Entity-row_index-Mention-2"
        }
      ],
      "relevance": 0.381591796875
    },
    "Entity-they": {
      "node_id": "they",
      "disambiguation_index": 0,
      "label": "They",
      "aliases": [
        "They"
      ],
      "types": [
        "group",
        "entity",
        "organization"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A group, entity or organization",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-8-Sentence-3",
          "local_name": "They",
          "local_types": [
            "group",
            "entity",
            "organization"
          ],
          "iri": "Entity-they-Mention-1"
        }
      ],
      "relevance": 0.381591796875
    },
    "Entity-two_predicate": {
      "node_id": "two_predicate",
      "disambiguation_index": 0,
      "label": "two predicates",
      "aliases": [
        "two predicates"
      ],
      "types": [
        "concept",
        "predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A pair of related logical or grammatical expressions that convey distinct relationships between entities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "two predicates",
          "local_types": [
            "concept",
            "predicate"
          ],
          "iri": "Entity-two_predicate-Mention-1"
        }
      ],
      "relevance": 0.38134765625
    },
    "Entity-z_1": {
      "node_id": "z_1",
      "disambiguation_index": 0,
      "label": "z_1",
      "aliases": [
        "z_1"
      ],
      "types": [
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A variable representing an entity that can be a citizen of somewhere (t), given it lives in z.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "z_1",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-z_1-Mention-1"
        }
      ],
      "relevance": 0.381103515625
    },
    "Entity-livesin__x__z_": {
      "node_id": "livesin__x__z_",
      "disambiguation_index": 0,
      "label": "livesIn( x, z )",
      "aliases": [
        "livesIn(x, z)",
        "livesIn( x, z )"
      ],
      "types": [
        "function",
        "predicate",
        "predicate logic",
        "relation",
        "logic formula"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A relationship between an individual (x) and their place of residence or location (z)",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "livesIn( x, z )",
          "local_types": [
            "function",
            "predicate",
            "predicate logic",
            "relation",
            "logic formula"
          ],
          "iri": "Entity-livesin__x__z_-Mention-1"
        }
      ],
      "relevance": 0.381103515625
    },
    "Entity-standard_confidence": {
      "node_id": "standard_confidence",
      "disambiguation_index": 0,
      "label": "standard confidence",
      "aliases": [
        "standard confidence"
      ],
      "types": [
        "evaluation metric",
        "confidence metric",
        "performance indicator",
        "measure",
        "metric",
        "evaluation criterion"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of the degree of certainty or accuracy",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-4-Sentence-2",
          "local_name": "standard confidence",
          "local_types": [
            "evaluation metric",
            "confidence metric",
            "performance indicator",
            "measure",
            "metric",
            "evaluation criterion"
          ],
          "iri": "Entity-standard_confidence-Mention-1"
        }
      ],
      "relevance": 0.380615234375
    },
    "Entity-entity__country_": {
      "node_id": "entity__country_",
      "disambiguation_index": 0,
      "label": "entities (countries)",
      "aliases": [
        "entities (countries)"
      ],
      "types": [
        "set of entities",
        "geopolitical entity"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A set of countries, which are geopolitical entities.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-4",
          "local_name": "entities (countries)",
          "local_types": [
            "set of entities",
            "geopolitical entity"
          ],
          "iri": "Entity-entity__country_-Mention-1"
        }
      ],
      "relevance": 0.380615234375
    },
    "Entity-the_object__respectively_subject_": {
      "node_id": "the_object__respectively_subject_",
      "disambiguation_index": 0,
      "label": "The object (respectively subject)",
      "aliases": [
        "The object (respectively subject)"
      ],
      "types": [
        "position"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A randomly selected entity with a probability proportional to its proportion as an object (or subject) of any predicate in the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-4",
          "local_name": "The object (respectively subject)",
          "local_types": [
            "position"
          ],
          "iri": "Entity-the_object__respectively_subject_-Mention-1"
        }
      ],
      "relevance": 0.380615234375
    },
    "Entity-someone": {
      "node_id": "someone",
      "disambiguation_index": 0,
      "label": "someone",
      "aliases": [
        "someone",
        "person"
      ],
      "types": [
        "person",
        "individual",
        "human being"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A human being with their own identity, characteristics, and experiences.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "someone",
          "local_types": [
            "person",
            "individual"
          ],
          "iri": "Entity-someone-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "person",
          "local_types": [
            "individual",
            "human being"
          ],
          "iri": "Entity-someone-Mention-2"
        }
      ],
      "relevance": 0.38037109375
    },
    "Entity-we_(4)": {
      "node_id": "we_(4)",
      "disambiguation_index": 4,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of this paper, specifically Pouya Ghiasnezhad Omran, Kerry Taylor, Sergio Rodriguez Mendez, and Armin Haller.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(4)-Mention-1"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-17",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(4)-Mention-2"
        },
        {
          "reference": "Section-12-Paragraph-2-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(4)-Mention-3"
        }
      ],
      "relevance": 0.38037109375
    },
    "Entity-human_experimenter": {
      "node_id": "human_experimenter",
      "disambiguation_index": 0,
      "label": "human experimenters",
      "aliases": [
        "human experimenters"
      ],
      "types": [
        "group",
        "participant group",
        "researcher role",
        "test subjects",
        "research participants",
        "researcher"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Individuals or groups involved in conducting experiments on humans",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-2-Sentence-1",
          "local_name": "human experimenters",
          "local_types": [
            "group",
            "participant group",
            "researcher role",
            "test subjects",
            "research participants",
            "researcher"
          ],
          "iri": "Entity-human_experimenter-Mention-1"
        }
      ],
      "relevance": 0.380126953125
    },
    "Entity-studiesin__x__z_": {
      "node_id": "studiesin__x__z_",
      "disambiguation_index": 0,
      "label": "studiesIn(x, z)",
      "aliases": [
        "studiesIn(x, z)",
        "studiesIn( x, z )"
      ],
      "types": [
        "relation",
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An educational institution where an individual studies.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-1",
          "local_name": "studiesIn(x, z)",
          "local_types": [
            "relation",
            "predicate",
            "function"
          ],
          "iri": "Entity-studiesin__x__z_-Mention-1"
        }
      ],
      "relevance": 0.379638671875
    },
    "Entity-_denoted____": {
      "node_id": "_denoted____",
      "disambiguation_index": 0,
      "label": "(denoted '?')",
      "aliases": [
        "(denoted '?')"
      ],
      "types": [
        "notation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A placeholder for a randomly selected entity with probability of its proportion as an object (subject) of any predicate in the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-4",
          "local_name": "(denoted '?')",
          "local_types": [
            "notation"
          ],
          "iri": "Entity-_denoted____-Mention-1"
        }
      ],
      "relevance": 0.379638671875
    },
    "Entity-instance": {
      "node_id": "instance",
      "disambiguation_index": 0,
      "label": "instances",
      "aliases": [
        "instances"
      ],
      "types": [
        "quantity",
        "amount"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection or group of items, events, or occurrences that can be counted or measured.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "instances",
          "local_types": [
            "quantity",
            "amount"
          ],
          "iri": "Entity-instance-Mention-1"
        }
      ],
      "relevance": 0.37939453125
    },
    "Entity-building_method": {
      "node_id": "building_method",
      "disambiguation_index": 0,
      "label": "building methods",
      "aliases": [
        "building methods"
      ],
      "types": [
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A systematic approach or procedure used for constructing or developing something",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-8",
          "local_name": "building methods",
          "local_types": [
            "methodology"
          ],
          "iri": "Entity-building_method-Mention-1"
        }
      ],
      "relevance": 0.379150390625
    },
    "Entity-presenter__z__x_": {
      "node_id": "presenter__z__x_",
      "disambiguation_index": 0,
      "label": "presenter(z, x)",
      "aliases": [
        "presenter(z, x)"
      ],
      "types": [
        "role",
        "predicate",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The person presenting a TV program with a specific participant and occupation.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-3",
          "local_name": "presenter(z, x)",
          "local_types": [
            "role",
            "predicate",
            "function"
          ],
          "iri": "Entity-presenter__z__x_-Mention-1"
        }
      ],
      "relevance": 0.378662109375
    },
    "Entity-the_body_of_this_rule_(1)": {
      "node_id": "the_body_of_this_rule_(1)",
      "disambiguation_index": 1,
      "label": "the body of this rule",
      "aliases": [
        "the body of this rule"
      ],
      "types": [
        "body",
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The OP rule 'citizenOf(x, t) \u2190 livesIn(x, z)' with instantiated body as 'livesIn(Bronte, Canberra)', which generates the query 'citizenOf(Bronte, ?)'",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "the body of this rule",
          "local_types": [
            "body",
            "rule"
          ],
          "iri": "Entity-the_body_of_this_rule_(1)-Mention-1"
        }
      ],
      "relevance": 0.37841796875
    },
    "Entity-participant__z__w_": {
      "node_id": "participant__z__w_",
      "disambiguation_index": 0,
      "label": "participant(z, w)",
      "aliases": [
        "participant( z, w )",
        "participant(z, w)"
      ],
      "types": [
        "role",
        "function",
        "participation",
        "predicate",
        "relation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "A person who participates as a presenter of a TV program.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-3",
          "local_name": "participant(z, w)",
          "local_types": [
            "role",
            "function",
            "participation",
            "predicate",
            "relation"
          ],
          "iri": "Entity-participant__z__w_-Mention-1"
        }
      ],
      "relevance": 0.378173828125
    },
    "Entity-highestpoint": {
      "node_id": "highestpoint",
      "disambiguation_index": 0,
      "label": "highestPoint",
      "aliases": [
        "highestPoint"
      ],
      "types": [
        "concept",
        "location",
        "function",
        "geographic feature"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The point at which something reaches its maximum or greatest extent.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "highestPoint",
          "local_types": [
            "concept",
            "location",
            "function",
            "geographic feature"
          ],
          "iri": "Entity-highestpoint-Mention-1"
        }
      ],
      "relevance": 0.3779296875
    },
    "Entity-head_predicate__p_t": {
      "node_id": "head_predicate__p_t",
      "disambiguation_index": 0,
      "label": "head predicate, P_t",
      "aliases": [
        "head predicate, P_t"
      ],
      "types": [
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A fundamental grammatical construct that relates subjects and objects.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "head predicate, P_t",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-head_predicate__p_t-Mention-1"
        }
      ],
      "relevance": 0.377685546875
    },
    "Entity-z": {
      "node_id": "z",
      "disambiguation_index": 0,
      "label": "z",
      "aliases": [
        "z"
      ],
      "types": [
        "variable",
        "location",
        "organization",
        "institute",
        "city",
        "place"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The city or location where someone studied",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "z",
          "local_types": [
            "institute",
            "organization"
          ],
          "iri": "Entity-z-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "z",
          "local_types": [
            "location",
            "city"
          ],
          "iri": "Entity-z-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "z",
          "local_types": [
            "location",
            "place"
          ],
          "iri": "Entity-z-Mention-3"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "z",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-z-Mention-4"
        }
      ],
      "relevance": 0.37744140625
    },
    "Entity-w": {
      "node_id": "w",
      "disambiguation_index": 0,
      "label": "w",
      "aliases": [
        "w",
        "participant (w)"
      ],
      "types": [
        "person",
        "participant",
        "variable",
        "individual"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A participant or individual involved in a TV program, possibly with an occupation.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "w",
          "local_types": [
            "person",
            "participant"
          ],
          "iri": "Entity-w-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "w",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-w-Mention-2"
        },
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "participant (w)",
          "local_types": [
            "person",
            "individual"
          ],
          "iri": "Entity-w-Mention-3"
        }
      ],
      "relevance": 0.376953125
    },
    "Entity-cardinality": {
      "node_id": "cardinality",
      "disambiguation_index": 0,
      "label": "cardinality",
      "aliases": [
        "cardinality"
      ],
      "types": [
        "quantity measure",
        "number"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The quantity or measure of entities in a given set, often used to describe the size or magnitude of that set.",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-5-Sentence-3",
          "local_name": "cardinality",
          "local_types": [
            "quantity measure",
            "number"
          ],
          "iri": "Entity-cardinality-Mention-1"
        }
      ],
      "relevance": 0.376953125
    },
    "Entity-for": {
      "node_id": "for",
      "disambiguation_index": 0,
      "label": "For",
      "aliases": [
        "For"
      ],
      "types": [
        "phrase",
        "expression"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A purpose or objective",
      "mentions": [
        {
          "reference": "Section-7-Paragraph-6-Sentence-1",
          "local_name": "For",
          "local_types": [
            "phrase",
            "expression"
          ],
          "iri": "Entity-for-Mention-1"
        }
      ],
      "relevance": 0.376953125
    },
    "Entity-experimental_setting": {
      "node_id": "experimental_setting",
      "disambiguation_index": 0,
      "label": "experimental settings",
      "aliases": [
        "experimental settings"
      ],
      "types": [
        "setting",
        "experiment"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A controlled environment or situation designed to facilitate experimentation and data collection.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-2-Sentence-1",
          "local_name": "experimental settings",
          "local_types": [
            "setting",
            "experiment"
          ],
          "iri": "Entity-experimental_setting-Mention-1"
        }
      ],
      "relevance": 0.376708984375
    },
    "Entity-isbornin": {
      "node_id": "isbornin",
      "disambiguation_index": 0,
      "label": "isBornIn",
      "aliases": [
        "isBornIn"
      ],
      "types": [
        "relation",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The 'isBornIn' relation represents an individual's birthplace, connecting entities as subjects with their corresponding cities or locations where they were born.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "isBornIn",
          "local_types": [
            "relation",
            "function"
          ],
          "iri": "Entity-isbornin-Mention-1"
        }
      ],
      "relevance": 0.37646484375
    },
    "Entity-quality_threshold": {
      "node_id": "quality_threshold",
      "disambiguation_index": 0,
      "label": "quality thresholds",
      "aliases": [
        "quality thresholds"
      ],
      "types": [
        "metric",
        "parameter"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of standards or criteria used to evaluate or measure something's quality",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-4-Sentence-2",
          "local_name": "quality thresholds",
          "local_types": [
            "metric",
            "parameter"
          ],
          "iri": "Entity-quality_threshold-Mention-1"
        }
      ],
      "relevance": 0.37646484375
    },
    "Entity-the_paper_is_structured_a_follows": {
      "node_id": "the_paper_is_structured_a_follows",
      "disambiguation_index": 0,
      "label": "the paper is structured as follows",
      "aliases": [
        "the paper is structured as follows"
      ],
      "types": [
        "structure",
        "format"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A section header indicating the organization of the remaining content in the paper.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-1",
          "local_name": "the paper is structured as follows",
          "local_types": [
            "structure",
            "format"
          ],
          "iri": "Entity-the_paper_is_structured_a_follows-Mention-1"
        }
      ],
      "relevance": 0.37646484375
    },
    "Entity-instantiation": {
      "node_id": "instantiation",
      "disambiguation_index": 0,
      "label": "instantiation",
      "aliases": [
        "instantiation"
      ],
      "types": [
        "process",
        "operation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A process or operation that brings something into existence or being.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-1",
          "local_name": "instantiation",
          "local_types": [
            "process",
            "operation"
          ],
          "iri": "Entity-instantiation-Mention-1"
        }
      ],
      "relevance": 0.376220703125
    },
    "Entity-intel_xeon_cpu_e5-4620v2": {
      "node_id": "intel_xeon_cpu_e5-4620v2",
      "disambiguation_index": 0,
      "label": "Intel Xeon CPU E5-4620v2",
      "aliases": [
        "Intel Xeon CPU E5-4620v2"
      ],
      "types": [
        "hardware",
        "computer hardware",
        "CPU",
        "processor"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A high-performance processor from Intel's Xeon series",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-1",
          "local_name": "Intel Xeon CPU E5-4620v2",
          "local_types": [
            "hardware",
            "computer hardware",
            "CPU",
            "processor"
          ],
          "iri": "Entity-intel_xeon_cpu_e5-4620v2-Mention-1"
        }
      ],
      "relevance": 0.3759765625
    },
    "Entity-whence_doe_the_query_arise": {
      "node_id": "whence_doe_the_query_arise",
      "disambiguation_index": 0,
      "label": "whence does the query arise",
      "aliases": [
        "whence does the query arise"
      ],
      "types": [
        "query",
        "arise"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The origin or source from which a request or inquiry originates.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-1",
          "local_name": "whence does the query arise",
          "local_types": [
            "query",
            "arise"
          ],
          "iri": "Entity-whence_doe_the_query_arise-Mention-1"
        }
      ],
      "relevance": 0.375732421875
    },
    "Entity-tv_program": {
      "node_id": "tv_program",
      "disambiguation_index": 0,
      "label": "TV program",
      "aliases": [
        "TV program"
      ],
      "types": [
        "entertainment",
        "broadcast",
        "broadcasting",
        "program",
        "show"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A scheduled series of television content, typically featuring scripted or unscripted programming, entertainment, and information.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "TV program",
          "local_types": [
            "entertainment",
            "broadcast",
            "broadcasting",
            "program",
            "show"
          ],
          "iri": "Entity-tv_program-Mention-1"
        }
      ],
      "relevance": 0.375732421875
    },
    "Entity-z_2": {
      "node_id": "z_2",
      "disambiguation_index": 0,
      "label": "z_2",
      "aliases": [
        "z_2"
      ],
      "types": [
        "variable"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A variable",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-1-Sentence-2",
          "local_name": "z_2",
          "local_types": [
            "variable"
          ],
          "iri": "Entity-z_2-Mention-1"
        }
      ],
      "relevance": 0.374755859375
    },
    "Entity-then_(1)": {
      "node_id": "then_(1)",
      "disambiguation_index": 1,
      "label": "Then",
      "aliases": [
        "Then"
      ],
      "types": [
        "event"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The point in time when half of the instances of each predicate are assigned by random selection of an entity with probability proportional to its proportion as a subject (respectively object) of any predicate in the test set.",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-2-Sentence-3",
          "local_name": "Then",
          "local_types": [
            "event"
          ],
          "iri": "Entity-then_(1)-Mention-1"
        }
      ],
      "relevance": 0.374755859375
    },
    "Entity-crown_copyright": {
      "node_id": "crown_copyright",
      "disambiguation_index": 0,
      "label": "Crown Copyright",
      "aliases": [
        "Crown Copyright"
      ],
      "types": [
        "copyright",
        "organization"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A type of copyright that belongs to or is controlled by a monarch, typically the British monarch.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-5-Sentence-1",
          "local_name": "Crown Copyright",
          "local_types": [
            "copyright",
            "organization"
          ],
          "iri": "Entity-crown_copyright-Mention-1"
        }
      ],
      "relevance": 0.374267578125
    },
    "Entity-placeofbirth__z__x_": {
      "node_id": "placeofbirth__z__x_",
      "disambiguation_index": 0,
      "label": "placeOfBirth(z, x)",
      "aliases": [
        "placeOfBirth(z, x)"
      ],
      "types": [
        "function",
        "predicate logic"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "The birthplace of a person (x), given their spouse (y)",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-1",
          "local_name": "placeOfBirth(z, x)",
          "local_types": [
            "function",
            "predicate logic"
          ],
          "iri": "Entity-placeofbirth__z__x_-Mention-1"
        }
      ],
      "relevance": 0.3740234375
    },
    "Entity-iscitizenof__x__y_": {
      "node_id": "iscitizenof__x__y_",
      "disambiguation_index": 0,
      "label": "isCitizenOf(x, y)",
      "aliases": [
        "isCitizenOf(x, y)",
        "isCitizenOf(x,y)"
      ],
      "types": [
        "relation",
        "logic formula"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A relationship indicating that an individual has citizenship or nationality in a particular country or region.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "isCitizenOf(x, y)",
          "local_types": [
            "relation",
            "logic formula"
          ],
          "iri": "Entity-iscitizenof__x__y_-Mention-1"
        }
      ],
      "relevance": 0.373291015625
    },
    "Entity-author": {
      "node_id": "author",
      "disambiguation_index": 0,
      "label": "authors",
      "aliases": [
        "authors"
      ],
      "types": [
        "scientists",
        "scholar",
        "researcher",
        "researchers"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Individuals who have written or contributed to scholarly works, such as research papers.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-10-Sentence-1",
          "local_name": "authors",
          "local_types": [
            "scientists",
            "researchers"
          ],
          "iri": "Entity-author-Mention-1"
        },
        {
          "reference": "Section-12-Paragraph-1-Sentence-5",
          "local_name": "authors",
          "local_types": [
            "scientists",
            "scholar",
            "researcher",
            "researchers"
          ],
          "iri": "Entity-author-Mention-2"
        }
      ],
      "relevance": 0.373291015625
    },
    "Entity-section_4": {
      "node_id": "section_4",
      "disambiguation_index": 0,
      "label": "Section 4",
      "aliases": [
        "Section 4"
      ],
      "types": [
        "part of a document",
        "section",
        "part"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A section within a document, typically containing specific information or content.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-3",
          "local_name": "Section 4",
          "local_types": [
            "part of a document",
            "section",
            "part"
          ],
          "iri": "Entity-section_4-Mention-1"
        }
      ],
      "relevance": 0.37255859375
    },
    "Entity-continent": {
      "node_id": "continent",
      "disambiguation_index": 0,
      "label": "continent",
      "aliases": [
        "continent"
      ],
      "types": [
        "function",
        "region",
        "geographic",
        "geographic region",
        "concept",
        "landmass",
        "geographic area",
        "relation",
        "area"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a large continuous area of land",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "continent",
          "local_types": [
            "region",
            "geographic",
            "landmass",
            "geographic area",
            "area"
          ],
          "iri": "Entity-continent-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "continent",
          "local_types": [
            "function",
            "geographic region",
            "concept",
            "landmass",
            "relation"
          ],
          "iri": "Entity-continent-Mention-2"
        }
      ],
      "relevance": 0.372314453125
    },
    "Entity-continent__w__y_": {
      "node_id": "continent__w__y_",
      "disambiguation_index": 0,
      "label": "continent(w, y)",
      "aliases": [
        "continent(w, y)"
      ],
      "types": [
        "relation",
        "geography"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "a large continuous area of land",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-2",
          "local_name": "continent(w, y)",
          "local_types": [
            "relation",
            "geography"
          ],
          "iri": "Entity-continent__w__y_-Mention-1"
        }
      ],
      "relevance": 0.3720703125
    },
    "Entity-locatedin__z__y__(1)": {
      "node_id": "locatedin__z__y__(1)",
      "disambiguation_index": 1,
      "label": "locatedIn(z,y)",
      "aliases": [
        "locatedIn(z,y)"
      ],
      "types": [
        "location relation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A location relation indicating that an entity z is located within another entity y.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "locatedIn(z,y)",
          "local_types": [
            "location relation"
          ],
          "iri": "Entity-locatedin__z__y__(1)-Mention-1"
        }
      ],
      "relevance": 0.371337890625
    },
    "Entity-city": {
      "node_id": "city",
      "disambiguation_index": 0,
      "label": "city",
      "aliases": [
        "city"
      ],
      "types": [
        "geographic location",
        "physical entity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A populated urban area with defined boundaries, typically characterized by a high population density and infrastructure.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "city",
          "local_types": [
            "geographic location",
            "physical entity"
          ],
          "iri": "Entity-city-Mention-1"
        }
      ],
      "relevance": 0.37109375
    },
    "Entity-_z_": {
      "node_id": "_z_",
      "disambiguation_index": 0,
      "label": "(z)",
      "aliases": [
        "person (z)",
        "(z)"
      ],
      "types": [
        "person",
        "individual",
        "human being"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "An individual with personal characteristics",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "(z)",
          "local_types": [
            "person"
          ],
          "iri": "Entity-_z_-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "person (z)",
          "local_types": [
            "individual",
            "human being"
          ],
          "iri": "Entity-_z_-Mention-2"
        }
      ],
      "relevance": 0.368896484375
    },
    "Entity-which_are_involved_in_the_target_predicate": {
      "node_id": "which_are_involved_in_the_target_predicate",
      "disambiguation_index": 0,
      "label": "which are involved in the target predicate",
      "aliases": [
        "which are involved in the target predicate"
      ],
      "types": [
        "predicate",
        "target"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The set of entities related to the target predicate, including those directly connected and indirectly linked through other predicates.",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-6",
          "local_name": "which are involved in the target predicate",
          "local_types": [
            "predicate",
            "target"
          ],
          "iri": "Entity-which_are_involved_in_the_target_predicate-Mention-1"
        }
      ],
      "relevance": 0.368896484375
    },
    "Entity-parentof__z__y_": {
      "node_id": "parentof__z__y_",
      "disambiguation_index": 0,
      "label": "parentOf(z, y)",
      "aliases": [
        "parentOf(z, y)"
      ],
      "types": [
        "relation",
        "predicate",
        "logic predicate"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A relationship between two entities where one is the parent and the other is their child.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-2",
          "local_name": "parentOf(z, y)",
          "local_types": [
            "relation",
            "predicate",
            "logic predicate"
          ],
          "iri": "Entity-parentof__z__y_-Mention-1"
        }
      ],
      "relevance": 0.3681640625
    },
    "Entity-in_both_case_e_is_often_a_city": {
      "node_id": "in_both_case_e_is_often_a_city",
      "disambiguation_index": 0,
      "label": "in both cases e is often a city",
      "aliases": [
        "in both cases e is often a city"
      ],
      "types": [
        "description",
        "example"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The relationship between entities satisfying the subject argument of predicates 'liveIn' and 'locatedIn', where these entities are typically cities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "in both cases e is often a city",
          "local_types": [
            "description",
            "example"
          ],
          "iri": "Entity-in_both_case_e_is_often_a_city-Mention-1"
        }
      ],
      "relevance": 0.3681640625
    },
    "Entity-elsevier_inc_.": {
      "node_id": "elsevier_inc_.",
      "disambiguation_index": 0,
      "label": "Elsevier Inc.",
      "aliases": [
        "Elsevier Inc."
      ],
      "types": [
        "company",
        "publisher",
        "organisation"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A company and publisher that specializes in scientific, technical, and medical journals.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-5-Sentence-1",
          "local_name": "Elsevier Inc.",
          "local_types": [
            "company",
            "publisher",
            "organisation"
          ],
          "iri": "Entity-elsevier_inc_.-Mention-1"
        }
      ],
      "relevance": 0.36669921875
    },
    "Entity-sam": {
      "node_id": "sam",
      "disambiguation_index": 0,
      "label": "Sam",
      "aliases": [
        "Sam"
      ],
      "types": [
        "person",
        "individual",
        "entity"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A person or individual entity",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-3",
          "local_name": "Sam",
          "local_types": [
            "person",
            "individual",
            "entity"
          ],
          "iri": "Entity-sam-Mention-1"
        }
      ],
      "relevance": 0.3662109375
    },
    "Entity-nation": {
      "node_id": "nation",
      "disambiguation_index": 0,
      "label": "nation",
      "aliases": [
        "nation"
      ],
      "types": [
        "country",
        "state"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A sovereign territorial entity with its own government",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "nation",
          "local_types": [
            "country",
            "state"
          ],
          "iri": "Entity-nation-Mention-1"
        }
      ],
      "relevance": 0.365966796875
    },
    "Entity-then_that_entity_is_a_citizen_of_somewhere__t__.": {
      "node_id": "then_that_entity_is_a_citizen_of_somewhere__t__.",
      "disambiguation_index": 0,
      "label": "then that entity is a citizen of somewhere (t).",
      "aliases": [
        "then that entity is a citizen of somewhere (t)."
      ],
      "types": [
        "rule_statement",
        "citizenship"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "An individual who resides in a particular location (z) and thus holds citizenship in some place or country (t)",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "then that entity is a citizen of somewhere (t).",
          "local_types": [
            "rule_statement",
            "citizenship"
          ],
          "iri": "Entity-then_that_entity_is_a_citizen_of_somewhere__t__.-Mention-1"
        }
      ],
      "relevance": 0.365966796875
    },
    "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_": {
      "node_id": "livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "disambiguation_index": 0,
      "label": "livesIn(Bronte, Canberra) and locatedIn(Canberra, Australia)",
      "aliases": [
        "livesIn(Bronte, Canberra) and locatedIn(Canberra, Australia)"
      ],
      "types": [
        "data instances",
        "KG fact",
        "fact",
        "livesIn",
        "locatedIn",
        "facts"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The Australian actress Bront\u00eb",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "livesIn(Bronte, Canberra) and locatedIn(Canberra, Australia)",
          "local_types": [
            "data instances",
            "KG fact",
            "fact",
            "livesIn",
            "locatedIn",
            "facts"
          ],
          "iri": "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_-Mention-1"
        }
      ],
      "relevance": 0.365234375
    },
    "Entity-popular_online_encyclopedia": {
      "node_id": "popular_online_encyclopedia",
      "disambiguation_index": 0,
      "label": "popular online encyclopedia",
      "aliases": [
        "a popular online encyclopedia",
        "popular online encyclopedia"
      ],
      "types": [
        "information source",
        "encyclopedia",
        "source",
        "website"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Wikipedia",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-4",
          "local_name": "popular online encyclopedia",
          "local_types": [
            "information source",
            "website"
          ],
          "iri": "Entity-popular_online_encyclopedia-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-9-Sentence-4",
          "local_name": "a popular online encyclopedia",
          "local_types": [
            "encyclopedia",
            "source"
          ],
          "iri": "Entity-popular_online_encyclopedia-Mention-2"
        }
      ],
      "relevance": 0.365234375
    },
    "Entity-length": {
      "node_id": "length",
      "disambiguation_index": 0,
      "label": "length",
      "aliases": [
        "length"
      ],
      "types": [
        "dimension",
        "size"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a measure or extent in a particular direction",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-3",
          "local_name": "length",
          "local_types": [
            "dimension",
            "size"
          ],
          "iri": "Entity-length-Mention-1"
        }
      ],
      "relevance": 0.364501953125
    },
    "Entity-literature": {
      "node_id": "literature",
      "disambiguation_index": 0,
      "label": "literature",
      "aliases": [
        "literature"
      ],
      "types": [
        "academic writing",
        "published works"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Published written works or scholarly research on a particular subject",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-11-Sentence-6",
          "local_name": "literature",
          "local_types": [
            "academic writing",
            "published works"
          ],
          "iri": "Entity-literature-Mention-1"
        }
      ],
      "relevance": 0.36376953125
    },
    "Entity-we_conducted_experiment": {
      "node_id": "we_conducted_experiment",
      "disambiguation_index": 0,
      "label": "We conducted experiments",
      "aliases": [
        "We conducted experiments"
      ],
      "types": [
        "research"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A research activity involving experimentation",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-1",
          "local_name": "We conducted experiments",
          "local_types": [
            "research"
          ],
          "iri": "Entity-we_conducted_experiment-Mention-1"
        }
      ],
      "relevance": 0.36328125
    },
    "Entity-standard_confidence__sc_": {
      "node_id": "standard_confidence__sc_",
      "disambiguation_index": 0,
      "label": "Standard confidence (SC)",
      "aliases": [
        "Standard confidence (SC)"
      ],
      "types": [
        "measure",
        "abbreviation",
        "term",
        "metric"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A measure of the degree of certainty or reliability",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-1",
          "local_name": "Standard confidence (SC)",
          "local_types": [
            "measure",
            "abbreviation",
            "term",
            "metric"
          ],
          "iri": "Entity-standard_confidence__sc_-Mention-1"
        }
      ],
      "relevance": 0.36279296875
    },
    "Entity-we_conducted_two_set_of_experiment": {
      "node_id": "we_conducted_two_set_of_experiment",
      "disambiguation_index": 0,
      "label": "We conducted two sets of experiments",
      "aliases": [
        "We conducted two sets of experiments"
      ],
      "types": [
        "experiment"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A set of scientific tests or trials",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-1-Sentence-1",
          "local_name": "We conducted two sets of experiments",
          "local_types": [
            "experiment"
          ],
          "iri": "Entity-we_conducted_two_set_of_experiment-Mention-1"
        }
      ],
      "relevance": 0.36279296875
    },
    "Entity-target": {
      "node_id": "target",
      "disambiguation_index": 0,
      "label": "targets",
      "aliases": [
        "targets"
      ],
      "types": [
        "objective",
        "goal"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point or objective aimed at being achieved",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-3-Sentence-3",
          "local_name": "targets",
          "local_types": [
            "objective",
            "goal"
          ],
          "iri": "Entity-target-Mention-1"
        }
      ],
      "relevance": 0.362548828125
    },
    "Entity-region": {
      "node_id": "region",
      "disambiguation_index": 0,
      "label": "region",
      "aliases": [
        "region"
      ],
      "types": [
        "geographic area",
        "location",
        "geographic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A geographic area with defined boundaries and a specific location on Earth.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "region",
          "local_types": [
            "geographic area",
            "location",
            "geographic"
          ],
          "iri": "Entity-region-Mention-1"
        }
      ],
      "relevance": 0.3623046875
    },
    "Entity-livesin_(1)": {
      "node_id": "livesin_(1)",
      "disambiguation_index": 1,
      "label": "livesIn",
      "aliases": [
        "livesIn"
      ],
      "types": [
        "rule"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The relationship between an entity and its place of residence.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "livesIn",
          "local_types": [
            "rule"
          ],
          "iri": "Entity-livesin_(1)-Mention-1"
        }
      ],
      "relevance": 0.361572265625
    },
    "Entity-we_used": {
      "node_id": "we_used",
      "disambiguation_index": 0,
      "label": "We used",
      "aliases": [
        "We used"
      ],
      "types": [
        "method"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A method or technique employed",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-1",
          "local_name": "We used",
          "local_types": [
            "method"
          ],
          "iri": "Entity-we_used-Mention-1"
        }
      ],
      "relevance": 0.361328125
    },
    "Entity-confidence": {
      "node_id": "confidence",
      "disambiguation_index": 0,
      "label": "confidence",
      "aliases": [
        "confidence"
      ],
      "types": [
        "measure",
        "parameter",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure of the degree of certainty or trustworthiness",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-6-Sentence-3",
          "local_name": "confidence",
          "local_types": [
            "measure",
            "parameter",
            "metric"
          ],
          "iri": "Entity-confidence-Mention-1"
        }
      ],
      "relevance": 0.360595703125
    },
    "Entity-benchmark_solution": {
      "node_id": "benchmark_solution",
      "disambiguation_index": 0,
      "label": "benchmark solution",
      "aliases": [
        "benchmark solution"
      ],
      "types": [
        "standard reference"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A standard reference point or test case used as a basis for comparison and evaluation.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-5-Sentence-1",
          "local_name": "benchmark solution",
          "local_types": [
            "standard reference"
          ],
          "iri": "Entity-benchmark_solution-Mention-1"
        }
      ],
      "relevance": 0.360595703125
    },
    "Entity-the_two_predicate": {
      "node_id": "the_two_predicate",
      "disambiguation_index": 0,
      "label": "the two predicates",
      "aliases": [
        "the two predicates"
      ],
      "types": [
        "predicate"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The two predicates 'liveIn(e'', e)' and 'locatedIn(e', e')' that may co-occur because they share similar entities, such as cities.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-2-Sentence-4",
          "local_name": "the two predicates",
          "local_types": [
            "predicate"
          ],
          "iri": "Entity-the_two_predicate-Mention-1"
        }
      ],
      "relevance": 0.360107421875
    },
    "Entity-2022_published_by_elsevier_inc_.": {
      "node_id": "2022_published_by_elsevier_inc_.",
      "disambiguation_index": 0,
      "label": "2022 Published by Elsevier Inc.",
      "aliases": [
        "2022 Published by Elsevier Inc."
      ],
      "types": [
        "publisher",
        "year"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A publication year and a publisher, specifically Elsevier Inc.",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-5-Sentence-1",
          "local_name": "2022 Published by Elsevier Inc.",
          "local_types": [
            "publisher",
            "year"
          ],
          "iri": "Entity-2022_published_by_elsevier_inc_.-Mention-1"
        }
      ],
      "relevance": 0.359375
    },
    "Entity-quality": {
      "node_id": "quality",
      "disambiguation_index": 0,
      "label": "quality",
      "aliases": [
        "quality"
      ],
      "types": [
        "concept",
        "metric"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A measure or characteristic that defines an object's excellence or value.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-1-Sentence-2",
          "local_name": "quality",
          "local_types": [
            "concept",
            "metric"
          ],
          "iri": "Entity-quality-Mention-1"
        }
      ],
      "relevance": 0.359130859375
    },
    "Entity-industrial_application": {
      "node_id": "industrial_application",
      "disambiguation_index": 0,
      "label": "industrial application",
      "aliases": [
        "industrial application"
      ],
      "types": [
        "industry",
        "business sector"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The use or implementation of technology or methods within a commercial industry or sector.",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-1",
          "local_name": "industrial application",
          "local_types": [
            "industry",
            "business sector"
          ],
          "iri": "Entity-industrial_application-Mention-1"
        }
      ],
      "relevance": 0.35888671875
    },
    "Entity-that_if_an_entity__x__life_in_z__then_that_entity_is_a_citizen_of_somewhere__t_": {
      "node_id": "that_if_an_entity__x__life_in_z__then_that_entity_is_a_citizen_of_somewhere__t_",
      "disambiguation_index": 0,
      "label": "that if an entity, x, lives in z, then that entity is a citizen of somewhere (t)",
      "aliases": [
        "that if an entity, x, lives in z, then that entity is a citizen of somewhere (t)"
      ],
      "types": [
        "text",
        "description"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "A concept representing the relationship between living location and citizenship",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-2",
          "local_name": "that if an entity, x, lives in z, then that entity is a citizen of somewhere (t)",
          "local_types": [
            "text",
            "description"
          ],
          "iri": "Entity-that_if_an_entity__x__life_in_z__then_that_entity_is_a_citizen_of_somewhere__t_-Mention-1"
        }
      ],
      "relevance": 0.358642578125
    },
    "Entity-a_place_or_a_person": {
      "node_id": "a_place_or_a_person",
      "disambiguation_index": 0,
      "label": "a place or a person",
      "aliases": [
        "place or a person",
        "a place or a person"
      ],
      "types": [
        "person",
        "location"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A geographic location or individual with distinct characteristics.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "a place or a person",
          "local_types": [
            "location",
            "person"
          ],
          "iri": "Entity-a_place_or_a_person-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "place or a person",
          "local_types": [
            "location",
            "person"
          ],
          "iri": "Entity-a_place_or_a_person-Mention-2"
        }
      ],
      "relevance": 0.35791015625
    },
    "Entity-presidentof__obama___": {
      "node_id": "presidentof__obama___",
      "disambiguation_index": 0,
      "label": "presidentOf(Obama, ?)",
      "aliases": [
        "presidentOf(Obama, ?)"
      ],
      "types": [
        "query",
        "entity query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The query for identifying the country of which Barack Obama was president.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "presidentOf(Obama, ?)",
          "local_types": [
            "query",
            "entity query"
          ],
          "iri": "Entity-presidentof__obama___-Mention-1"
        }
      ],
      "relevance": 0.35693359375
    },
    "Entity-locatedin__z__y_": {
      "node_id": "locatedin__z__y_",
      "disambiguation_index": 0,
      "label": "locatedIn(z, y)",
      "aliases": [
        "locatedIn(z, y)"
      ],
      "types": [
        "location"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A logical relationship between an entity's citizenship and residence that implies the location of their residence.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "locatedIn(z, y)",
          "local_types": [
            "location"
          ],
          "iri": "Entity-locatedin__z__y_-Mention-1"
        }
      ],
      "relevance": 0.356689453125
    },
    "Entity-maximum_length": {
      "node_id": "maximum_length",
      "disambiguation_index": 0,
      "label": "maximum length",
      "aliases": [
        "maximum length"
      ],
      "types": [
        "dimensionality",
        "bound"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The longest possible extent or boundary",
      "mentions": [
        {
          "reference": "Section-5-Paragraph-3-Sentence-9",
          "local_name": "maximum length",
          "local_types": [
            "dimensionality",
            "bound"
          ],
          "iri": "Entity-maximum_length-Mention-1"
        }
      ],
      "relevance": 0.3564453125
    },
    "Entity-that_ha_a_participant__w_": {
      "node_id": "that_ha_a_participant__w_",
      "disambiguation_index": 0,
      "label": "that has a participant (w)",
      "aliases": [
        "that has a participant (w)"
      ],
      "types": [
        "participant",
        "person"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "An individual involved in an activity or event.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "that has a participant (w)",
          "local_types": [
            "participant",
            "person"
          ],
          "iri": "Entity-that_ha_a_participant__w_-Mention-1"
        }
      ],
      "relevance": 0.356201171875
    },
    "Entity-presenter": {
      "node_id": "presenter",
      "disambiguation_index": 0,
      "label": "presenter",
      "aliases": [
        "presenter"
      ],
      "types": [
        "host",
        "professional role",
        "function",
        "anchor",
        "concept",
        "entertainer",
        "person",
        "relation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person responsible for introducing and hosting a TV show, event or performance.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "presenter",
          "local_types": [
            "host",
            "anchor",
            "entertainer",
            "person"
          ],
          "iri": "Entity-presenter-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-3",
          "local_name": "presenter",
          "local_types": [
            "professional role",
            "function",
            "concept",
            "person",
            "relation"
          ],
          "iri": "Entity-presenter-Mention-2"
        }
      ],
      "relevance": 0.35595703125
    },
    "Entity-topic": {
      "node_id": "topic",
      "disambiguation_index": 0,
      "label": "topics",
      "aliases": [
        "topics"
      ],
      "types": [
        "subject matter",
        "area of study"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A subject area or field of study that encompasses various themes and areas of inquiry.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-5",
          "local_name": "topics",
          "local_types": [
            "subject matter",
            "area of study"
          ],
          "iri": "Entity-topic-Mention-1"
        }
      ],
      "relevance": 0.355712890625
    },
    "Entity-a_tv_program__z_": {
      "node_id": "a_tv_program__z_",
      "disambiguation_index": 0,
      "label": "a TV program (z)",
      "aliases": [
        "a TV program (z)",
        "TV program (z)"
      ],
      "types": [
        "media",
        "program",
        "TV show"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A television show or broadcasted content featuring scripted or unscripted material, often presented by one or more hosts.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "a TV program (z)",
          "local_types": [
            "TV show",
            "program"
          ],
          "iri": "Entity-a_tv_program__z_-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "TV program (z)",
          "local_types": [
            "program",
            "media"
          ],
          "iri": "Entity-a_tv_program__z_-Mention-2"
        }
      ],
      "relevance": 0.355224609375
    },
    "Entity-the_nation_in_which_that_city_is_located": {
      "node_id": "the_nation_in_which_that_city_is_located",
      "disambiguation_index": 0,
      "label": "the nation in which that city is located",
      "aliases": [
        "the nation in which that city is located"
      ],
      "types": [
        "country",
        "nation"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A country or nation where a specific city is situated",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "the nation in which that city is located",
          "local_types": [
            "country",
            "nation"
          ],
          "iri": "Entity-the_nation_in_which_that_city_is_located-Mention-1"
        }
      ],
      "relevance": 0.3544921875
    },
    "Entity-the_continent_of_that_country__y__is_also_known": {
      "node_id": "the_continent_of_that_country__y__is_also_known",
      "disambiguation_index": 0,
      "label": "the continent of that country (y) is also known",
      "aliases": [
        "the continent of that country (y) is also known"
      ],
      "types": [
        "continent",
        "geographic entity"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The geographic location where a specific country is situated.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "the continent of that country (y) is also known",
          "local_types": [
            "continent",
            "geographic entity"
          ],
          "iri": "Entity-the_continent_of_that_country__y__is_also_known-Mention-1"
        }
      ],
      "relevance": 0.353515625
    },
    "Entity-obama": {
      "node_id": "obama",
      "disambiguation_index": 0,
      "label": "Obama",
      "aliases": [
        "Obama, USA",
        "Obama"
      ],
      "types": [
        "person",
        "politician",
        "country",
        "public figure"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The 44th President of the United States",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-2",
          "local_name": "Obama",
          "local_types": [
            "person",
            "politician",
            "public figure"
          ],
          "iri": "Entity-obama-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "Obama",
          "local_types": [
            "person",
            "politician"
          ],
          "iri": "Entity-obama-Mention-2"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-2",
          "local_name": "Obama, USA",
          "local_types": [
            "person",
            "country"
          ],
          "iri": "Entity-obama-Mention-3"
        }
      ],
      "relevance": 0.353271484375
    },
    "Entity-we_(7)": {
      "node_id": "we_(7)",
      "disambiguation_index": 7,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors, referring to themselves as a collective entity.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-12-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(7)-Mention-1"
        },
        {
          "reference": "Section-13-Paragraph-2-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(7)-Mention-2"
        },
        {
          "reference": "Section-13-Paragraph-3-Sentence-2",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(7)-Mention-3"
        }
      ],
      "relevance": 0.35302734375
    },
    "Entity-isbornin__x__z_": {
      "node_id": "isbornin__x__z_",
      "disambiguation_index": 0,
      "label": "isBornIn( x, z )",
      "aliases": [
        "isBornIn( x, z )"
      ],
      "types": [
        "birth relation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The 'isBornIn' relation represents the birthplace of an individual, connecting their place of origin (x) with the location where they were born (z).",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "isBornIn( x, z )",
          "local_types": [
            "birth relation"
          ],
          "iri": "Entity-isbornin__x__z_-Mention-1"
        }
      ],
      "relevance": 0.3525390625
    },
    "Entity-human-curated_maintenance": {
      "node_id": "human-curated_maintenance",
      "disambiguation_index": 0,
      "label": "human-curated maintenance",
      "aliases": [
        "human-curated maintenance"
      ],
      "types": [
        "process",
        "maintenance activity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Maintenance performed by humans, often involving manual intervention and decision-making.",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-4",
          "local_name": "human-curated maintenance",
          "local_types": [
            "process",
            "maintenance activity"
          ],
          "iri": "Entity-human-curated_maintenance-Mention-1"
        }
      ],
      "relevance": 0.351806640625
    },
    "Entity-2022": {
      "node_id": "2022",
      "disambiguation_index": 0,
      "label": "2022",
      "aliases": [
        "2022"
      ],
      "types": [
        "year"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A year",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-5-Sentence-1",
          "local_name": "2022",
          "local_types": [
            "year"
          ],
          "iri": "Entity-2022-Mention-1"
        }
      ],
      "relevance": 0.3515625
    },
    "Entity-then": {
      "node_id": "then",
      "disambiguation_index": 0,
      "label": "Then",
      "aliases": [
        "Then"
      ],
      "types": [
        "time",
        "sentence",
        "time reference",
        "phrase"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point of time or a reference to a sequence of events",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-6-Sentence-4",
          "local_name": "Then",
          "local_types": [
            "phrase",
            "sentence"
          ],
          "iri": "Entity-then-Mention-1"
        },
        {
          "reference": "Section-6-Paragraph-11-Sentence-2",
          "local_name": "Then",
          "local_types": [
            "time",
            "time reference"
          ],
          "iri": "Entity-then-Mention-2"
        },
        {
          "reference": "Section-6-Paragraph-15-Sentence-2",
          "local_name": "Then",
          "local_types": [
            "time",
            "time reference"
          ],
          "iri": "Entity-then-Mention-3"
        }
      ],
      "relevance": 0.3505859375
    },
    "Entity-ghz": {
      "node_id": "ghz",
      "disambiguation_index": 0,
      "label": "GHz",
      "aliases": [
        "GHz"
      ],
      "types": [
        "unit of measurement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A unit of frequency measurement equal to one billion cycles per second.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-1",
          "local_name": "GHz",
          "local_types": [
            "unit of measurement"
          ],
          "iri": "Entity-ghz-Mention-1"
        }
      ],
      "relevance": 0.349609375
    },
    "Entity-place": {
      "node_id": "place",
      "disambiguation_index": 0,
      "label": "place",
      "aliases": [
        "place"
      ],
      "types": [
        "location",
        "geographic area"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A geographic area or location",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-1-Sentence-2",
          "local_name": "place",
          "local_types": [
            "location",
            "geographic area"
          ],
          "iri": "Entity-place-Mention-1"
        }
      ],
      "relevance": 0.3486328125
    },
    "Entity-ann": {
      "node_id": "ann",
      "disambiguation_index": 0,
      "label": "Ann",
      "aliases": [
        "Ann"
      ],
      "types": [
        "person"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "A person",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "Ann",
          "local_types": [
            "person"
          ],
          "iri": "Entity-ann-Mention-1"
        }
      ],
      "relevance": 0.348388671875
    },
    "Entity-iscitizenof": {
      "node_id": "iscitizenof",
      "disambiguation_index": 0,
      "label": "isCitizenOf",
      "aliases": [
        "isCitizenOf"
      ],
      "types": [
        "relation",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The 'isCitizenOf' relation represents an individual's citizenship status, linking entities representing people with their corresponding countries of nationality.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-5-Sentence-1",
          "local_name": "isCitizenOf",
          "local_types": [
            "relation",
            "function"
          ],
          "iri": "Entity-iscitizenof-Mention-1"
        }
      ],
      "relevance": 0.34765625
    },
    "Entity-this_begs_the_question": {
      "node_id": "this_begs_the_question",
      "disambiguation_index": 0,
      "label": "This begs the question",
      "aliases": [
        "This begs the question"
      ],
      "types": [
        "question"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A rhetorical device used to challenge or provoke further inquiry",
      "mentions": [
        {
          "reference": "Section-8-Paragraph-7-Sentence-1",
          "local_name": "This begs the question",
          "local_types": [
            "question"
          ],
          "iri": "Entity-this_begs_the_question-Mention-1"
        }
      ],
      "relevance": 0.34619140625
    },
    "Entity-usa": {
      "node_id": "usa",
      "disambiguation_index": 0,
      "label": "USA",
      "aliases": [
        "USA"
      ],
      "types": [
        "location",
        "country",
        "nation",
        "nation-state",
        "geopolitical entity"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The United States of America",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-2",
          "local_name": "USA",
          "local_types": [
            "country",
            "location",
            "nation-state",
            "nation"
          ],
          "iri": "Entity-usa-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "USA",
          "local_types": [
            "location",
            "country",
            "geopolitical entity"
          ],
          "iri": "Entity-usa-Mention-2"
        }
      ],
      "relevance": 0.345458984375
    },
    "Entity-the_continent_of_that_country__y_": {
      "node_id": "the_continent_of_that_country__y_",
      "disambiguation_index": 0,
      "label": "the continent of that country (y)",
      "aliases": [
        "the continent of that country (y)"
      ],
      "types": [
        "continent",
        "geography"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A geographical area comprising multiple countries or landmasses.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "the continent of that country (y)",
          "local_types": [
            "continent",
            "geography"
          ],
          "iri": "Entity-the_continent_of_that_country__y_-Mention-1"
        }
      ],
      "relevance": 0.345458984375
    },
    "Entity-highest_point": {
      "node_id": "highest_point",
      "disambiguation_index": 0,
      "label": "highest point",
      "aliases": [
        "highest point"
      ],
      "types": [
        "landmark",
        " geographical feature"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The summit or peak of an elevated geographical feature.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-1",
          "local_name": "highest point",
          "local_types": [
            "landmark",
            " geographical feature"
          ],
          "iri": "Entity-highest_point-Mention-1"
        }
      ],
      "relevance": 0.34423828125
    },
    "Entity-centos_7": {
      "node_id": "centos_7",
      "disambiguation_index": 0,
      "label": "CentOS 7",
      "aliases": [
        "and running CentOS 7",
        "CentOS 7"
      ],
      "types": [
        "software",
        "operating system"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A Linux-based operating system",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-11-Sentence-1",
          "local_name": "CentOS 7",
          "local_types": [
            "software",
            "operating system"
          ],
          "iri": "Entity-centos_7-Mention-1"
        },
        {
          "reference": "Section-9-Paragraph-11-Sentence-1",
          "local_name": "and running CentOS 7",
          "local_types": [
            "operating system"
          ],
          "iri": "Entity-centos_7-Mention-2"
        }
      ],
      "relevance": 0.34375
    },
    "Entity-we_(1)": {
      "node_id": "we_(1)",
      "disambiguation_index": 1,
      "label": "We",
      "aliases": [
        "we",
        "We"
      ],
      "types": [
        "author",
        "researcher"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors of the paper",
      "mentions": [
        {
          "reference": "Section-1-Paragraph-1-Sentence-4",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-1"
        },
        {
          "reference": "Section-1-Paragraph-3-Sentence-2",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-2"
        },
        {
          "reference": "Section-1-Paragraph-4-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-3"
        },
        {
          "reference": "Section-2-Paragraph-4-Sentence-6",
          "local_name": "we",
          "local_types": [
            "researcher",
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-4"
        },
        {
          "reference": "Section-4-Paragraph-10-Sentence-4",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-5"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-1",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-6"
        },
        {
          "reference": "Section-5-Paragraph-4-Sentence-18",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-7"
        },
        {
          "reference": "Section-6-Paragraph-20-Sentence-3",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-8"
        },
        {
          "reference": "Section-7-Paragraph-2-Sentence-2",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-9"
        },
        {
          "reference": "Section-7-Paragraph-11-Sentence-1",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-10"
        },
        {
          "reference": "Section-8-Paragraph-1-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-11"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-3",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-12"
        },
        {
          "reference": "Section-11-Paragraph-8-Sentence-7",
          "local_name": "we",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(1)-Mention-13"
        }
      ],
      "relevance": 0.34375
    },
    "Entity-the_subject_argument_of_the_head_predicate": {
      "node_id": "the_subject_argument_of_the_head_predicate",
      "disambiguation_index": 0,
      "label": "the subject argument of the head predicate",
      "aliases": [
        "the subject argument of the head predicate"
      ],
      "types": [
        "argument",
        "subject"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The entity referred to by 'the subject argument of the head predicate' represents an input or participant involved with the main action described by the predicate.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-18-Sentence-2",
          "local_name": "the subject argument of the head predicate",
          "local_types": [
            "argument",
            "subject"
          ],
          "iri": "Entity-the_subject_argument_of_the_head_predicate-Mention-1"
        }
      ],
      "relevance": 0.343017578125
    },
    "Entity-citizenof__bronte___": {
      "node_id": "citizenof__bronte___",
      "disambiguation_index": 0,
      "label": "citizenOf(Bronte, ?)",
      "aliases": [
        "citizenOf(Bronte, ?)"
      ],
      "types": [
        "rule",
        "citizenship"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The concept or entity referred to by 'citizenOf(Bronte, ?)' represents a specific instance of citizenship for the person Bronte.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "citizenOf(Bronte, ?)",
          "local_types": [
            "rule",
            "citizenship"
          ],
          "iri": "Entity-citizenof__bronte___-Mention-1"
        }
      ],
      "relevance": 0.34130859375
    },
    "Entity-presidentof": {
      "node_id": "presidentof",
      "disambiguation_index": 0,
      "label": "presidentOf",
      "aliases": [
        "presidentOf"
      ],
      "types": [
        "relation",
        "predicate",
        "function"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The head of state or government in a country",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-3",
          "local_name": "presidentOf",
          "local_types": [
            "predicate",
            "function"
          ],
          "iri": "Entity-presidentof-Mention-1"
        },
        {
          "reference": "Section-2-Paragraph-8-Sentence-2",
          "local_name": "presidentOf",
          "local_types": [
            "relation",
            "function"
          ],
          "iri": "Entity-presidentof-Mention-2"
        }
      ],
      "relevance": 0.33837890625
    },
    "Entity-multilingual": {
      "node_id": "multilingual",
      "disambiguation_index": 0,
      "label": "multilingual",
      "aliases": [
        "multilingual"
      ],
      "types": [
        "language characteristic"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A language or system that uses multiple languages",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-4",
          "local_name": "multilingual",
          "local_types": [
            "language characteristic"
          ],
          "iri": "Entity-multilingual-Mention-1"
        }
      ],
      "relevance": 0.338134765625
    },
    "Entity-now": {
      "node_id": "now",
      "disambiguation_index": 0,
      "label": "Now",
      "aliases": [
        "Now"
      ],
      "types": [
        "statement"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A point of time or instant, often referring to the current moment.",
      "mentions": [
        {
          "reference": "Section-6-Paragraph-10-Sentence-1",
          "local_name": "Now",
          "local_types": [
            "statement"
          ],
          "iri": "Entity-now-Mention-1"
        }
      ],
      "relevance": 0.337646484375
    },
    "Entity-citizenof__x__y_": {
      "node_id": "citizenof__x__y_",
      "disambiguation_index": 0,
      "label": "citizenOf(x, y)",
      "aliases": [
        "citizenOf(x, y)"
      ],
      "types": [
        "rule",
        "relationship"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A relationship between an individual's citizenship and their place of residence.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "citizenOf(x, y)",
          "local_types": [
            "rule",
            "relationship"
          ],
          "iri": "Entity-citizenof__x__y_-Mention-1"
        }
      ],
      "relevance": 0.337646484375
    },
    "Entity-livesin__x__z__(1)": {
      "node_id": "livesin__x__z__(1)",
      "disambiguation_index": 1,
      "label": "livesIn( x, z )",
      "aliases": [
        "livesIn( x, z )"
      ],
      "types": [
        "relation"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A relation that indicates where an entity resides or has lived.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "livesIn( x, z )",
          "local_types": [
            "relation"
          ],
          "iri": "Entity-livesin__x__z__(1)-Mention-1"
        }
      ],
      "relevance": 0.337646484375
    },
    "Entity-movie_produced_in_some_country": {
      "node_id": "movie_produced_in_some_country",
      "disambiguation_index": 0,
      "label": "movies produced in some countries",
      "aliases": [
        "movies produced in some countries"
      ],
      "types": [
        "product",
        "film"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "Movies produced in specific countries with varying levels of coverage",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "movies produced in some countries",
          "local_types": [
            "product",
            "film"
          ],
          "iri": "Entity-movie_produced_in_some_country-Mention-1"
        }
      ],
      "relevance": 0.336669921875
    },
    "Entity-someone_s_citizenship": {
      "node_id": "someone_s_citizenship",
      "disambiguation_index": 0,
      "label": "someone's citizenship",
      "aliases": [
        "someone's citizenship"
      ],
      "types": [
        "concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The legal status or nationality of an individual, typically determined by their country of birth, residency, or parentage.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "someone's citizenship",
          "local_types": [
            "concept"
          ],
          "iri": "Entity-someone_s_citizenship-Mention-1"
        }
      ],
      "relevance": 0.33642578125
    },
    "Entity-december_2014": {
      "node_id": "december_2014",
      "disambiguation_index": 0,
      "label": "December 2014",
      "aliases": [
        "December 2014"
      ],
      "types": [
        "date range"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A period of time spanning from December 1, 2014 to December 31, 2014.",
      "mentions": [
        {
          "reference": "Section-9-Paragraph-9-Sentence-5",
          "local_name": "December 2014",
          "local_types": [
            "date range"
          ],
          "iri": "Entity-december_2014-Mention-1"
        }
      ],
      "relevance": 0.336181640625
    },
    "Entity-livesin": {
      "node_id": "livesin",
      "disambiguation_index": 0,
      "label": "livesIn",
      "aliases": [
        "livesIn"
      ],
      "types": [
        "relation",
        "relationship",
        "predicate",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "a location where someone resides or has their primary dwelling",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-2",
          "local_name": "livesIn",
          "local_types": [
            "relation",
            "relationship",
            "predicate",
            "function"
          ],
          "iri": "Entity-livesin-Mention-1"
        }
      ],
      "relevance": 0.335205078125
    },
    "Entity-placeofbirth": {
      "node_id": "placeofbirth",
      "disambiguation_index": 0,
      "label": "placeOfBirth",
      "aliases": [
        "placeOfBirth"
      ],
      "types": [
        "predicate",
        "concept",
        "location",
        "function"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The location where an individual was born",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-7-Sentence-1",
          "local_name": "placeOfBirth",
          "local_types": [
            "predicate",
            "concept",
            "location",
            "function"
          ],
          "iri": "Entity-placeofbirth-Mention-1"
        }
      ],
      "relevance": 0.3349609375
    },
    "Entity-we_(8)": {
      "node_id": "we_(8)",
      "disambiguation_index": 8,
      "label": "We",
      "aliases": [
        "We"
      ],
      "types": [
        "author"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The authors, referring to themselves",
      "mentions": [
        {
          "reference": "Section-11-Paragraph-9-Sentence-3",
          "local_name": "We",
          "local_types": [
            "author"
          ],
          "iri": "Entity-we_(8)-Mention-1"
        }
      ],
      "relevance": 0.33447265625
    },
    "Entity-we_could_infer_the_query__citizenof__bronte___": {
      "node_id": "we_could_infer_the_query__citizenof__bronte___",
      "disambiguation_index": 0,
      "label": "we could infer the query, citizenOf(Bronte, ?)",
      "aliases": [
        "we could infer the query, citizenOf(Bronte, ?)"
      ],
      "types": [
        "query",
        "inference"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity mentioned by 'we could infer the query, citizenOf(Bronte, ?)' refers to Emily Bront\u00eb.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "we could infer the query, citizenOf(Bronte, ?)",
          "local_types": [
            "query",
            "inference"
          ],
          "iri": "Entity-we_could_infer_the_query__citizenof__bronte___-Mention-1"
        }
      ],
      "relevance": 0.33349609375
    },
    "Entity-movie_actor": {
      "node_id": "movie_actor",
      "disambiguation_index": 0,
      "label": "movie actors",
      "aliases": [
        "movie actors"
      ],
      "types": [
        "entertainment",
        "professionals",
        "profession",
        "entertainment industry",
        "actors"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Individuals who perform roles and portray characters in films",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "movie actors",
          "local_types": [
            "entertainment",
            "professionals",
            "profession",
            "entertainment industry",
            "actors"
          ],
          "iri": "Entity-movie_actor-Mention-1"
        }
      ],
      "relevance": 0.332763671875
    },
    "Entity-setting": {
      "node_id": "setting",
      "disambiguation_index": 0,
      "label": "setting",
      "aliases": [
        "setting"
      ],
      "types": [
        "environment",
        "context"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A location or situation where something exists, occurs, or takes place",
      "mentions": [
        {
          "reference": "Section-13-Paragraph-5-Sentence-4",
          "local_name": "setting",
          "local_types": [
            "environment",
            "context"
          ],
          "iri": "Entity-setting-Mention-1"
        }
      ],
      "relevance": 0.332763671875
    },
    "Entity-spouse": {
      "node_id": "spouse",
      "disambiguation_index": 0,
      "label": "spouse",
      "aliases": [
        "spouse"
      ],
      "types": [
        "relationship",
        "concept",
        "person",
        "relation",
        "family relationship"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The partner in a marriage or other long-term romantic relationship.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "spouse",
          "local_types": [
            "family relationship",
            "person"
          ],
          "iri": "Entity-spouse-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-7-Sentence-1",
          "local_name": "spouse",
          "local_types": [
            "relation",
            "relationship",
            "concept",
            "family relationship"
          ],
          "iri": "Entity-spouse-Mention-2"
        }
      ],
      "relevance": 0.33154296875
    },
    "Entity-_e.g_._citizenof__ann____": {
      "node_id": "_e.g_._citizenof__ann____",
      "disambiguation_index": 0,
      "label": "(e.g. citizenOf(Ann, ?))",
      "aliases": [
        "(e.g. citizenOf(Ann, ?))"
      ],
      "types": [
        "example",
        "query"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The entity Ann's citizenship country",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-5-Sentence-1",
          "local_name": "(e.g. citizenOf(Ann, ?))",
          "local_types": [
            "example",
            "query"
          ],
          "iri": "Entity-_e.g_._citizenof__ann____-Mention-1"
        }
      ],
      "relevance": 0.330078125
    },
    "Entity-citizenship": {
      "node_id": "citizenship",
      "disambiguation_index": 0,
      "label": "citizenship",
      "aliases": [
        "citizenship"
      ],
      "types": [
        "nationality",
        "identity"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A legal status or affiliation granted to an individual by a country, typically indicating their national identity and rights.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "citizenship",
          "local_types": [
            "nationality",
            "identity"
          ],
          "iri": "Entity-citizenship-Mention-1"
        }
      ],
      "relevance": 0.329833984375
    },
    "Entity-city_of_residence": {
      "node_id": "city_of_residence",
      "disambiguation_index": 0,
      "label": "city of residence",
      "aliases": [
        "city of residence"
      ],
      "types": [
        "location",
        "geographic area"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A municipality or urban area where an individual resides.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "city of residence",
          "local_types": [
            "location",
            "geographic area"
          ],
          "iri": "Entity-city_of_residence-Mention-1"
        }
      ],
      "relevance": 0.328857421875
    },
    "Entity-spouse_of_a_person": {
      "node_id": "spouse_of_a_person",
      "disambiguation_index": 0,
      "label": "spouse of a person",
      "aliases": [
        "the spouse of a person (z)",
        "spouse of a person"
      ],
      "types": [
        "spouse",
        "relationship",
        "family relationship",
        "person"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "The partner or companion in a romantic relationship with an individual.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "spouse of a person",
          "local_types": [
            "relationship",
            "family relationship"
          ],
          "iri": "Entity-spouse_of_a_person-Mention-1"
        },
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "the spouse of a person (z)",
          "local_types": [
            "spouse",
            "person"
          ],
          "iri": "Entity-spouse_of_a_person-Mention-2"
        }
      ],
      "relevance": 0.326904296875
    },
    "Entity-movie": {
      "node_id": "movie",
      "disambiguation_index": 0,
      "label": "movies",
      "aliases": [
        "movies"
      ],
      "types": [
        "film",
        "media production"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A collection of motion pictures or films",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-1-Sentence-6",
          "local_name": "movies",
          "local_types": [
            "film",
            "media production"
          ],
          "iri": "Entity-movie-Mention-1"
        }
      ],
      "relevance": 0.326171875
    },
    "Entity-city_of_residence_and_the_nation_in_which_that_city_is_located": {
      "node_id": "city_of_residence_and_the_nation_in_which_that_city_is_located",
      "disambiguation_index": 0,
      "label": "city of residence and the nation in which that city is located",
      "aliases": [
        "city of residence and the nation in which that city is located"
      ],
      "types": [
        "location",
        "nation"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The country where an individual resides, along with their place of residence.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "city of residence and the nation in which that city is located",
          "local_types": [
            "location",
            "nation"
          ],
          "iri": "Entity-city_of_residence_and_the_nation_in_which_that_city_is_located-Mention-1"
        }
      ],
      "relevance": 0.325439453125
    },
    "Entity-place_of_birth": {
      "node_id": "place_of_birth",
      "disambiguation_index": 0,
      "label": "place of birth",
      "aliases": [
        "place of birth"
      ],
      "types": [
        "location",
        "geographic location",
        "geographic area"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A geographic location where an individual was born.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "place of birth",
          "local_types": [
            "location",
            "geographic location",
            "geographic area"
          ],
          "iri": "Entity-place_of_birth-Mention-1"
        }
      ],
      "relevance": 0.32470703125
    },
    "Entity-presenter_of_the_program__x_": {
      "node_id": "presenter_of_the_program__x_",
      "disambiguation_index": 0,
      "label": "presenter of the program (x)",
      "aliases": [
        "presenter of the program (x)"
      ],
      "types": [
        "person",
        "host"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The person or host responsible for presenting a TV program.",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-6-Sentence-2",
          "local_name": "presenter of the program (x)",
          "local_types": [
            "person",
            "host"
          ],
          "iri": "Entity-presenter_of_the_program__x_-Mention-1"
        }
      ],
      "relevance": 0.32080078125
    },
    "Entity-canberra": {
      "node_id": "canberra",
      "disambiguation_index": 0,
      "label": "Canberra",
      "aliases": [
        "Canberra"
      ],
      "types": [
        "city",
        "location"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The capital city and largest settlement in Australia.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "Canberra",
          "local_types": [
            "city",
            "location"
          ],
          "iri": "Entity-canberra-Mention-1"
        },
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "Canberra",
          "local_types": [
            "city",
            "location"
          ],
          "iri": "Entity-canberra-Mention-2"
        }
      ],
      "relevance": 0.315185546875
    },
    "Entity-a_person_s_city_of_residence": {
      "node_id": "a_person_s_city_of_residence",
      "disambiguation_index": 0,
      "label": "a person's city of residence",
      "aliases": [
        "a person's city of residence"
      ],
      "types": [
        "location",
        "residence"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The location where an individual resides, typically identified by their nationality or country of origin.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-3-Sentence-3",
          "local_name": "a person's city of residence",
          "local_types": [
            "location",
            "residence"
          ],
          "iri": "Entity-a_person_s_city_of_residence-Mention-1"
        }
      ],
      "relevance": 0.315185546875
    },
    "Entity-it_is_likely_that_the_place_of_birth_of_that_person": {
      "node_id": "it_is_likely_that_the_place_of_birth_of_that_person",
      "disambiguation_index": 0,
      "label": "it is likely that the place of birth of that person",
      "aliases": [
        "it is likely that the place of birth of that person"
      ],
      "types": [
        "place",
        "birth",
        "person"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The place where someone was born",
      "mentions": [
        {
          "reference": "Section-10-Paragraph-5-Sentence-2",
          "local_name": "it is likely that the place of birth of that person",
          "local_types": [
            "place",
            "birth",
            "person"
          ],
          "iri": "Entity-it_is_likely_that_the_place_of_birth_of_that_person-Mention-1"
        }
      ],
      "relevance": 0.31494140625
    },
    "Entity-livesin__bronte__canberra_": {
      "node_id": "livesin__bronte__canberra_",
      "disambiguation_index": 0,
      "label": "livesIn(Bronte, Canberra)",
      "aliases": [
        "livesIn(Bronte, Canberra)"
      ],
      "types": [
        "rule instance",
        "fact"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A person named Bronte who resides in Canberra",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "livesIn(Bronte, Canberra)",
          "local_types": [
            "rule instance",
            "fact"
          ],
          "iri": "Entity-livesin__bronte__canberra_-Mention-1"
        }
      ],
      "relevance": 0.314453125
    },
    "Entity-australia": {
      "node_id": "australia",
      "disambiguation_index": 0,
      "label": "Australia",
      "aliases": [
        "Australia"
      ],
      "types": [
        "location",
        "country",
        "nation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A country located in Oceania.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "Australia",
          "local_types": [
            "location",
            "country",
            "nation"
          ],
          "iri": "Entity-australia-Mention-1"
        }
      ],
      "relevance": 0.313720703125
    },
    "Entity-bronte__canberra": {
      "node_id": "bronte__canberra",
      "disambiguation_index": 0,
      "label": "Bronte, Canberra",
      "aliases": [
        "Bronte, Canberra"
      ],
      "types": [
        "person",
        "location"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The Australian Rules footballer Bronte from Canberra.",
      "mentions": [
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "Bronte, Canberra",
          "local_types": [
            "person",
            "location"
          ],
          "iri": "Entity-bronte__canberra-Mention-1"
        }
      ],
      "relevance": 0.313720703125
    },
    "Entity-anu": {
      "node_id": "anu",
      "disambiguation_index": 0,
      "label": "ANU",
      "aliases": [
        "ANU"
      ],
      "types": [
        "organization",
        "educational institution",
        "institute",
        "university",
        "institution"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The Australian National University",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-3",
          "local_name": "ANU",
          "local_types": [
            "organization",
            "educational institution",
            "institute",
            "university",
            "institution"
          ],
          "iri": "Entity-anu-Mention-1"
        }
      ],
      "relevance": 0.306396484375
    },
    "Entity-presidentof__celine_dion___": {
      "node_id": "presidentof__celine_dion___",
      "disambiguation_index": 0,
      "label": "presidentOf(Celine Dion, ?)",
      "aliases": [
        "presidentOf(Celine Dion, ?)"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "A query asking for the country of which Celine Dion was president",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-4",
          "local_name": "presidentOf(Celine Dion, ?)",
          "local_types": [
            "query"
          ],
          "iri": "Entity-presidentof__celine_dion___-Mention-1"
        }
      ],
      "relevance": 0.299560546875
    },
    "Entity-institute_z": {
      "node_id": "institute_z",
      "disambiguation_index": 0,
      "label": "institute z",
      "aliases": [
        "institute z"
      ],
      "types": [
        "institution",
        "organization",
        "educational institution"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Institute Z refers to an educational institution where students study and reside.",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-2",
          "local_name": "institute z",
          "local_types": [
            "institution",
            "organization",
            "educational institution"
          ],
          "iri": "Entity-institute_z-Mention-1"
        }
      ],
      "relevance": 0.294677734375
    },
    "Entity-studiesin__sam__anu_": {
      "node_id": "studiesin__sam__anu_",
      "disambiguation_index": 0,
      "label": "studiesIn(Sam, ANU)",
      "aliases": [
        "studiesIn(Sam, ANU)"
      ],
      "types": [
        "query"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The university attended by Sam",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-6-Sentence-3",
          "local_name": "studiesIn(Sam, ANU)",
          "local_types": [
            "query"
          ],
          "iri": "Entity-studiesin__sam__anu_-Mention-1"
        }
      ],
      "relevance": 0.28076171875
    },
    "Entity-citizenof__bronte__australia_": {
      "node_id": "citizenof__bronte__australia_",
      "disambiguation_index": 0,
      "label": "citizenOf(Bronte, Australia)",
      "aliases": [
        "citizenOf(Bronte, Australia)"
      ],
      "types": [
        "fact",
        "citizenOf"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "A person named Bronte who lives in Canberra and has a location located in Australia.",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "citizenOf(Bronte, Australia)",
          "local_types": [
            "fact",
            "citizenOf"
          ],
          "iri": "Entity-citizenof__bronte__australia_-Mention-1"
        }
      ],
      "relevance": 0.2802734375
    },
    "Entity-celine_dion": {
      "node_id": "celine_dion",
      "disambiguation_index": 0,
      "label": "Celine Dion",
      "aliases": [
        "Celine Dion"
      ],
      "types": [
        "person",
        "musician",
        "singer"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "Canadian singer-songwriter and musician",
      "mentions": [
        {
          "reference": "Section-2-Paragraph-8-Sentence-4",
          "local_name": "Celine Dion",
          "local_types": [
            "person",
            "musician",
            "singer"
          ],
          "iri": "Entity-celine_dion-Mention-1"
        }
      ],
      "relevance": 0.276123046875
    },
    "Entity-bronte": {
      "node_id": "bronte",
      "disambiguation_index": 0,
      "label": "Bronte",
      "aliases": [
        "Bronte"
      ],
      "types": [
        "person",
        "individual",
        "name"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The surname of a family of English novelists",
      "mentions": [
        {
          "reference": "Section-3-Paragraph-3-Sentence-2",
          "local_name": "Bronte",
          "local_types": [
            "person",
            "individual"
          ],
          "iri": "Entity-bronte-Mention-1"
        },
        {
          "reference": "Section-4-Paragraph-4-Sentence-3",
          "local_name": "Bronte",
          "local_types": [
            "person",
            "name",
            "individual"
          ],
          "iri": "Entity-bronte-Mention-2"
        }
      ],
      "relevance": 0.2705078125
    }
  },
  "summary": "Enterprise and public Knowledge Graphs (KGs) are known to be incomplete. Methods for automatic completion, sometimes by rule learning, scale well. While previous rule-based methods learn closed (non-existential) rules, we introduce Open Path (OP) rules that are constrained existential rules. We present a novel algorithm, OPRL, for learning OP rules.\n\nClosed rules complete a KG by answering queries of unclear origin, usually derived from a holdback test set in experimental settings. However, OP rules can generate relevant queries for KG completion. OPRL generates queries even when there is no closed rule to answer the query, or when the correct answer is a missing entity that is not present in the KG.\n\nFor OPRL to scale well, we propose a novel embedding-based fitness function to efficiently estimate rule quality. Additionally, we introduce a novel, efficient vector computation to formally assess rule quality.\n\nWe evaluate OPRL using adaptations of Freebase, YAGO2, Wikidata, and a synthetic Poker KG. We find that OPRL mines hundreds of accurate rules from massive KGs with up to 8 M facts. The OP rules generate queries with precision as high as 98% and recall of 62% on a complete KG, demonstrating the first solution for active knowledge graph completion.\n\nCrown Copyright 2022 Published by Elsevier Inc. This is an open access article under the\n\nThe paper proposes a novel approach for completing knowledge graphs (KGs) by learning open path rules that generate queries to predict missing facts. Unlike traditional KG completion methods, this approach can identify missing entities and introduce new ones into the graph. The proposed method, OPRL, learns these rules from a given KG using an embedding-based heuristic function and evaluation method. The generated queries are relevant and can be used as input for link predictors to complete the KG.\n\nRule-based KG completion involves learning rules from a knowledge graph (KG) to infer new facts. Closed path (CP) rules are used, which consist of a head and body with variables that can be instantiated in the KG. The support of a rule measures how many instances it explains, while standard confidence and head coverage measure its explanatory power. Representation learning methods like RESCAL embed entities and predicates into a latent space to predict new facts.\n\nThe paper introduces open path (OP) rules for active knowledge graph completion, which are more expressive than closed path (CP) rules. OP rules have a linear shape and can be instantiated to infer questions rather than facts. The quality of mined OP rules is assessed using open path standard confidence (OPSC), open path head coverage (OPHC), and support degree (OPsupp). These metrics measure the proportion of entities that satisfy the rule's body or head, providing insights into the effectiveness of the mining process.\n\nThe paper proposes OPRL (OP Rule Miner), an algorithm to mine high-quality OP rules from a knowledge graph (KG) for a specific target predicate. The approach uses novel fitness and vector computation functions, as well as sampling and embedding-based methods to reduce KG size and improve scalability. The algorithm takes user parameters for maximum rule length and minimum quality scores, and outputs a set of mined OP rules.\n\nThe PathFinding() algorithm filters out low-quality rules by estimating their quality using two fitness functions: co-occurrence and open path. Co-occurrence measures similarity between entities, while open path evaluates rule quality based on predicate embeddings along a path of connected predicates. The hybrid approach combines both fitness functions to select top candidate rules.\n\nThe evaluation method, Evaluation(), assesses candidate rules based on sampled KGs for efficiency and then picks rules with OPsupp(r) \u2265 1. To compute OPSC and OPHC, it checks satisfiability of body atoms using an adjacency matrix representation of the KG. The method efficiently computes these measures by summing columns or rows of matrices to find distinct entities that satisfy head or body conditions.\n\nThe paper discusses how to use OP rules mined from Knowledge Graphs (KGs) for Active KG Completion (AKGC). The approach generates relevant questions that can be posed to an oracle or human expert. For AKGC, the task is to generate queries of the form P(?, e') and P(e, ?) based on predicate P in the KG. OP rules are used to induce these queries with a quantifiable confidence degree (CD). The CD is defined as the maximum OPSC of all rules inducing the query.\n\nThe paper evaluates OPRL, a system that generates relevant questions for knowledge graph completion. Unlike traditional link prediction approaches, OPRL focuses on asking relevant questions rather than answering them. The authors assume a perfect link predictor and evaluate their system by generating queries that can be used to infer new facts. They demonstrate the effectiveness of OPRL in mining quality rules from various knowledge graphs (KGs) and generate relevant queries with good recall and precision.\n\nOPRL assesses high-quality rule learning, comparing fitness function performance and reporting OPSC/OPHC scores against full benchmark KGs. The quality of rules mined from Wikidata and other datasets are presented, including two illustrative examples. An experiment shows that a hybrid fitness function can mine more quality rules than individual functions.\n\nThe paper evaluates the relevance of queries generated from OPRL-mined rules. Three baseline query sets (Prand) are developed and compared to OPRL-generated queries on three KGs: FB15KSE, YAGO2 core, and Poker. The results show that OPRL outperforms Prand by factors of 6, 2, and 9 respectively. Additionally, the paper investigates the sensitivity of OPRL's performance to the OPSC threshold and compares it with RLvLR* on query generation task.\n\nPrevious work in rule learning from a KG is closely related to ours, but it is generally focused on Closed rules. As discussed, Closed rules are less expressive than our OP rules and have a different application. While OP rule learners aim to generate new facts, we aim to generate relevant queries for new facts. There are some preliminary attempts towards learning existential rules from knowledge graphs. In this short paper, the authors outline several directions for future research to handle existential rule learning, although they do not propose a learning system.\n\nWe are unaware of any previous approach which produces relevant queries for link predictors in the knowledge graph completion process. However, CHAI filters facts before supplying them to a link predictor, aiming to improve the prediction by focusing its attention on the more probable facts and discarding irrelevant ones. It does not generate queries as OPRL does, and is highly dependent on the initial set of facts which it aims to filter.\n\nIn this paper, we proposed a method for learning rules with free variables from Knowledge Graphs (KGs). Such rules can be used to generate queries soliciting missing facts. Notably, the queries could be fed to link predictors, enabling a fully automated framework for KG completion.\n\nWe introduced the following novel components: (1) We propose OP rules, a fragment of function-free Horn rules, which allows us to mine rules with free variables while keeping the complexity of the learning phase manageable. (2) We introduced a novel method to estimate the quality of each candidate rule based on its embedding representation. (3) We proposed an efficient method to evaluate OP rules by exactly computing the quality of each rule using matrix and vector operations. (4) We showed how OP rules can be used to generate highly relevant queries for missing links, introducing the first work on active knowledge graph completion.\n\nOur experiments show that OPRL can learn rules for KGs with varying sizes and degrees of incompleteness. We demonstrate the usefulness of the mined rules by applying them to three different KGs to infer relevant queries.\n\nOur proposed method outperforms the baselines and shows its strength, especially in the complete KG, Poker, with 0.98 precision.\n\nThere remain some intriguing challenges for future work. We plan to extend OPRL to learn rules with more complex shapes, such as stars, and with numerical attributes. We plan to pair OPRL with a link predictor to form a unified framework for fully automated KG completion. We will also trial OPRL in a setting for human-curated maintenance on an enterprise KG.",
  "triples": [
    [
      "Entity-we_introduce_open_path__op__rule_that_are_constrained_existential_rule_.",
      "Predicate-introduce",
      "Entity-open_path__op__rule"
    ],
    [
      "Entity-we_(1)",
      "Predicate-introduce",
      "Entity-open_path__op__rule_that_are_constrained_existential_rule"
    ],
    [
      "Entity-a_novel_algorithm",
      "Predicate-for_learning_OP_rules",
      "Entity-oprl"
    ],
    [
      "Entity-we_(1)",
      "Predicate-present_a_novel_algorithm_OPRL_for_learning",
      "Entity-op_rule"
    ],
    [
      "Entity-closed_rule",
      "Predicate-complete",
      "Entity-a_kg"
    ],
    [
      "Entity-query_of_unclear_origin",
      "Predicate-are_answered_by",
      "Entity-closed_rule"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "Predicate-generate",
      "Entity-query"
    ],
    [
      "Entity-oprl",
      "Predicate-generates",
      "Entity-query"
    ],
    [
      "Entity-we_(1)",
      "Predicate-estimate",
      "Entity-rule_quality"
    ],
    [
      "Entity-we_(1)",
      "Predicate-assess",
      "Entity-rule_quality"
    ],
    [
      "Entity-oprl",
      "Predicate-evaluate_using_adaptations_of",
      "Entity-freebase__yago2__wikidata__and_a_synthetic_poker_kg"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-oprl"
    ],
    [
      "Entity-we_(1)",
      "Predicate-evaluate",
      "Entity-oprl"
    ],
    [
      "Entity-oprl",
      "Predicate-mines",
      "Entity-hundred_of_accurate_rule"
    ],
    [
      "Entity-massive_kg",
      "Predicate-has",
      "Entity-up_to_8_m_fact"
    ],
    [
      "Entity-oprl",
      "Predicate-mines",
      "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_."
    ],
    [
      "Entity-the_op_rule",
      "Predicate-generate",
      "Entity-query"
    ],
    [
      "Entity-the_op_rule",
      "Predicate-demonstrate",
      "Entity-the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62_",
      "Predicate-generate",
      "Entity-query"
    ],
    [
      "Entity-oprl",
      "Predicate-demonstrates",
      "Entity-the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-this_is_an_open_access_article_under_the",
      "Predicate-is",
      "Entity-open_access_article"
    ],
    [
      "Entity-elsevier_inc_.",
      "Predicate-publishes",
      "Entity-article"
    ],
    [
      "Entity-kg",
      "Predicate-model_and_store",
      "Entity-massive_quantity_of_weakly-structured_data"
    ],
    [
      "Entity-kg",
      "Predicate-arises_from",
      "Entity-a_data-first_approach"
    ],
    [
      "Entity-the_power_of_kg",
      "Predicate-arises_from",
      "Entity-a_data-first_approach"
    ],
    [
      "Entity-they_(1)",
      "Predicate-allow",
      "Entity-information"
    ],
    [
      "Entity-wikipedia",
      "Predicate-covers",
      "Entity-topic"
    ],
    [
      "Entity-building_method",
      "Predicate-are_prone_to_asserting",
      "Entity-some_erroneous_fact"
    ],
    [
      "Entity-the_building_method",
      "Predicate-asserting",
      "Entity-some_erroneous_fact"
    ],
    [
      "Entity-technique",
      "Predicate-have_been_developed_for",
      "Entity-knowledge_graph_completion_and_rule_learning"
    ],
    [
      "Entity-technique",
      "Predicate-curate",
      "Entity-kg_automatically"
    ],
    [
      "Entity-model",
      "Predicate-are_expressed_as",
      "Entity-logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-model",
      "Predicate-learnt_from",
      "Entity-a_given_kg"
    ],
    [
      "Entity-model",
      "Predicate-are_learnt_from",
      "Entity-a_given_kg"
    ],
    [
      "Entity-the_model",
      "Predicate-used_for",
      "Entity-curating_task"
    ],
    [
      "Entity-the_model",
      "Predicate-are_used_for",
      "Entity-curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity"
    ],
    [
      "Entity-rule_learning_method_for_kg",
      "Predicate-consider",
      "Entity-closed__non-existential__rule"
    ],
    [
      "Entity-city_of_residence",
      "Predicate-is_located_in",
      "Entity-the_nation_in_which_that_city_is_located"
    ],
    [
      "Entity-someone",
      "Predicate-can_be_inferred_from",
      "Entity-fact_about_a_person_s_city_of_residence_and_the_nation_in_which_that_city_is_located"
    ],
    [
      "Entity-there",
      "Predicate-quantifies_existentially",
      "Entity-variable"
    ],
    [
      "Entity-closed_rule",
      "Predicate-enable",
      "Entity-inference"
    ],
    [
      "Entity-they_(2)",
      "Predicate-draw_attention_to",
      "Entity-a_potential_missing_fact"
    ],
    [
      "Entity-kg_completion",
      "Predicate-predicts_answers_for",
      "Entity-known_unknown"
    ],
    [
      "Entity-this_paper_(1)",
      "Predicate-considers",
      "Entity-the_problem_of_rule-based_knowledge_graph_completion"
    ],
    [
      "Entity-in_knowledge_graph_completion",
      "Predicate-is",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-we_(1)",
      "Predicate-predict",
      "Entity-the_existence_of_missing_fact"
    ],
    [
      "Entity-an_entity_involved_in_the_missing_fact",
      "Predicate-may_be_absent_from",
      "Entity-kg"
    ],
    [
      "Entity-knowledge_graph",
      "Predicate-done_by_answering",
      "Entity-the_actively_generated_question"
    ],
    [
      "Entity-op_rule_formalism",
      "Predicate-is_a_fragment_of",
      "Entity-language_of_existential_rule"
    ],
    [
      "Entity-op_rule",
      "Predicate-adduce_queries",
      "Entity-query"
    ],
    [
      "Entity-query",
      "Predicate-adduce_from",
      "Entity-op_rule"
    ],
    [
      "Entity-the_answer",
      "Predicate-might_be",
      "Entity-an_entity_already_present_in_the_kg"
    ],
    [
      "Entity-the_answer",
      "Predicate-or_absent_from_it",
      "Entity-the_kg"
    ],
    [
      "Entity-query",
      "Predicate-could_be_posed_to",
      "Entity-a_user_engaged_in_a_curating_task_or_to_a_web_question-answering_engine"
    ],
    [
      "Entity-user",
      "Predicate-engaged_in",
      "Entity-curating_task"
    ],
    [
      "Entity-an_entity_x",
      "Predicate-studies",
      "Entity-institute_z"
    ],
    [
      "Entity-anu",
      "Predicate-is_instantiated_like_studiesIn_Sam__",
      "Entity-sam"
    ],
    [
      "Entity-sam",
      "Predicate-can_infer_citizenOf____",
      "Entity-"
    ],
    [
      "Entity-traditional_link_prediction_system",
      "Predicate-use",
      "Entity-the_kg_to_propose_missing_fact"
    ],
    [
      "Entity-a_link_predictor",
      "Predicate-is_deployed_over",
      "Entity-over_a_working_kg"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-propose_that",
      "Entity-query_from_op_rule"
    ],
    [
      "Entity-obama",
      "Predicate-presidentOf",
      "Entity-usa"
    ],
    [
      "Entity-obama",
      "Predicate-is_president_of",
      "Entity-usa"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "Predicate-will_try_to_rank",
      "Entity-entity__country_"
    ],
    [
      "Entity-op_rule_to_derive_query",
      "Predicate-derive",
      "Entity-query"
    ],
    [
      "Entity-kg",
      "Predicate-serve_as_input_to",
      "Entity-link_predictor"
    ],
    [
      "Entity-generating_relevant_query_that_can_serve_a_input_to_link_predictor_to_complete_the_kg",
      "Predicate-complete",
      "Entity-the_kg"
    ],
    [
      "Entity-generating_query",
      "Predicate-introduce_missing_entities_into",
      "Entity-the_kg"
    ],
    [
      "Entity-identifying_a_missing_fact_even_when_there_is_no_pattern__such_a_a_closed_rule__that_fully_instantiates_the_fact_in_the_kg_",
      "Predicate-requires",
      "Entity-link_predictor_to_complete_the_kg"
    ],
    [
      "Entity-this_paper",
      "Predicate-extend",
      "Entity-early_exploration_published_in"
    ],
    [
      "Entity-we_(2)",
      "Predicate-present",
      "Entity-a_novel_method_for_learning_open_path_rule_from_a_kg"
    ],
    [
      "Entity-method",
      "Predicate-is",
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg"
    ],
    [
      "Entity-these",
      "Predicate-are",
      "Entity-existential_rule"
    ],
    [
      "Entity-existential_rule",
      "Predicate-have_a_different_form_to",
      "Entity-the_usual_closed_path_rule"
    ],
    [
      "Entity-the_usual_closed_path_rule",
      "Predicate-are_conventionally_used_for",
      "Entity-knowledge_graph_completion_task"
    ],
    [
      "Entity-these",
      "Predicate-are",
      "Entity-existential_rule_with_a_different_form_to_the_usual_closed_path_rule_that_are_conventionally_used_for_knowledge_graph_completion_task"
    ],
    [
      "Entity-oprl",
      "Predicate-is_an_algorithm_for_learning",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-we_propose_an_algorithm",
      "Predicate-propose",
      "Entity-oprl"
    ],
    [
      "Entity-kg_sampling",
      "Predicate-together_with",
      "Entity-our_algorithm"
    ],
    [
      "Entity-our_algorithm",
      "Predicate-is_effective_over",
      "Entity-very_large_kg"
    ],
    [
      "Entity-we_introduce",
      "Predicate-introduce",
      "Entity-a_first_solution"
    ],
    [
      "Entity-after_presenting_some_foundation",
      "Predicate-describe",
      "Entity-our_target_language_for_learning_in_section_3"
    ],
    [
      "Entity-section_4",
      "Predicate-proposes",
      "Entity-the_op_rule_learning_method_oprl"
    ],
    [
      "Entity-section_5_present_the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "Predicate-presents",
      "Entity-the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule"
    ],
    [
      "Entity-section_6",
      "Predicate-formalise",
      "Entity-new_quality_notion_of_query_relevance"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-presented_in",
      "Entity-section_7"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-related_to",
      "Entity-link_prediction_and_active_knowledge_graph_completion"
    ],
    [
      "Entity-section_7__we_present_the_work_in_the_literature_related_to_link_prediction_and_active_knowledge_graph_completion",
      "Predicate-present",
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg"
    ],
    [
      "Entity-2.1",
      "Predicate-is_a_part_of",
      "Entity-rule-based_kg_completion"
    ],
    [
      "Entity-rule-based_kg_completion",
      "Predicate-involves",
      "Entity-kg_completion"
    ],
    [
      "Entity-fact",
      "Predicate-write_in",
      "Entity-the_form_p__e__e__"
    ],
    [
      "Entity-rule_learning_system",
      "Predicate-employ_a",
      "Entity-rule_language"
    ],
    [
      "Entity-each",
      "Predicate-consists",
      "Entity-each_consists_of_two_part__a_head_at_the_front_of_the_implication_arrow_and_a_body_at_the_tail_."
    ],
    [
      "Entity-the_rule",
      "Predicate-forms",
      "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable"
    ],
    [
      "Entity-we_interpret_this_kind_of_rule",
      "Predicate-interpret",
      "Entity-this_kind_of_rule"
    ],
    [
      "Entity-we_interpret_this_kind_of_rule",
      "Predicate-find_an_instantiation_of_the_body_of_the_rule_in_the_KG",
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg"
    ],
    [
      "Entity-we_(3)",
      "Predicate-interpret",
      "Entity-this_kind_of_rule"
    ],
    [
      "Entity-head_of_the_rule",
      "Predicate-instantiates",
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg"
    ],
    [
      "Entity-bronte",
      "Predicate-livesIn",
      "Entity-canberra"
    ],
    [
      "Entity-canberra",
      "Predicate-locatedIn",
      "Entity-australia"
    ],
    [
      "Entity-bronte",
      "Predicate-citizenOf",
      "Entity-australia"
    ],
    [
      "Entity-measure",
      "Predicate-support",
      "Entity-rule_learning"
    ],
    [
      "Entity-head_coverage",
      "Predicate-and",
      "Entity-standard_confidence"
    ],
    [
      "Entity-to_quantify_this_idea__we_recall_measure_support__head_coverage__and_standard_confidence_that_are_used_in_some_major_approach_to_rule_learning",
      "Predicate-are_used",
      "Entity-some_major_approach_to_rule_learning"
    ],
    [
      "Entity-measure",
      "Predicate-measure",
      "Entity-head_coverage"
    ],
    [
      "Entity-measure",
      "Predicate-standard",
      "Entity-confidence"
    ],
    [
      "Entity-definition",
      "Predicate-satisfies",
      "Entity-_satisfies__support_"
    ],
    [
      "Entity-cp",
      "Predicate-be",
      "Entity-it_ha"
    ],
    [
      "Entity-let_r_be_a_cp_rule_of_the_form_given_earlier_.",
      "Predicate-defines",
      "Entity-r"
    ],
    [
      "Entity-a_pair_of_entity",
      "Predicate-satisfies",
      "Entity-_e__f_"
    ],
    [
      "Entity-_e__f_",
      "Predicate-satisfies",
      "Entity-the_head_of_r"
    ],
    [
      "Entity-_e__e___satisfies_the_head_of_r",
      "Predicate-satisfies",
      "Entity-the_head_of_r"
    ],
    [
      "Entity-r",
      "Predicate-support",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-definition_1",
      "Predicate-satisfies",
      "Entity-_e__f_"
    ],
    [
      "Entity-definition_2",
      "Predicate-describes",
      "Entity-_standard_confidence__sc___head_coverage__hc__"
    ],
    [
      "Entity-confidence",
      "Predicate-is_closely_related_to",
      "Entity-it_(1)"
    ],
    [
      "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining_.",
      "Predicate-used_in",
      "Entity-association_rule_mining"
    ],
    [
      "Entity-hc",
      "Predicate-measures",
      "Entity-the_explanatory_power_of_the_rule"
    ],
    [
      "Entity-rule_learning",
      "Predicate-is_closely_related_to",
      "Entity-coverage"
    ],
    [
      "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming_.",
      "Predicate-uses",
      "Entity-rule_learning"
    ],
    [
      "Entity-rule",
      "Predicate-explains",
      "Entity-every_fact_in_the_kg_that_is_an_instance_of_it_head"
    ],
    [
      "Entity-head_coverage__hc_",
      "Predicate-measures",
      "Entity-the_explanatory_power_of_the_rule"
    ],
    [
      "Entity-representation_learning",
      "Predicate-for",
      "Entity-kg_completion"
    ],
    [
      "Entity-representation_learning_method",
      "Predicate-have_been_developed_to_model",
      "Entity-kg"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "Predicate-is_embedded_into",
      "Entity-a_low-dimensional_vector_space_of_latent__unnamed_feature_not_present_in_the_kg_vocabulary"
    ],
    [
      "Entity-the_plausibility",
      "Predicate-is_defined_by",
      "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity"
    ],
    [
      "Entity-fact",
      "Predicate-defined_by",
      "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity"
    ],
    [
      "Entity-fact",
      "Predicate-is_defined_by",
      "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity"
    ],
    [
      "Entity-various_method",
      "Predicate-have_been_proposed_to_construct",
      "Entity-embeddings"
    ],
    [
      "Entity-translation-based_embeddings",
      "Predicate-and",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-translation-based_embeddings",
      "Predicate-represent",
      "Entity-predicate"
    ],
    [
      "Entity-translation-based_embeddings",
      "Predicate-represent",
      "Entity-predicate_a_vector_and_use_an_additive_calculus_for_scoring"
    ],
    [
      "Entity-compositional_embeddings",
      "Predicate-represent",
      "Entity-predicate"
    ],
    [
      "Entity-the_compositional_embeddings",
      "Predicate-use",
      "Entity-a_product_calculus_for_scoring"
    ],
    [
      "Entity-rescal",
      "Predicate-learned_by",
      "Entity-embeddings"
    ],
    [
      "Entity-we_(3)",
      "Predicate-use",
      "Entity-embeddings_learned_by_rescal"
    ],
    [
      "Entity-our_novel_heuristic_function_for_mining_op_rule",
      "Predicate-uses",
      "Entity-rescal"
    ],
    [
      "Entity-rescal",
      "Predicate-is",
      "Entity-a_compositional-based_embedding_learner"
    ],
    [
      "Entity-it",
      "Predicate-embeds",
      "Entity-each_entity_e_i"
    ],
    [
      "Entity-it",
      "Predicate-embeds",
      "Entity-each_predicate_p_k"
    ],
    [
      "Entity-rescal",
      "Predicate-learns",
      "Entity-_e_i_"
    ],
    [
      "Entity-rescal",
      "Predicate-learns",
      "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_"
    ],
    [
      "Entity-rescal",
      "Predicate-captures",
      "Entity-rich_interaction_amongst_entity_and_predicate"
    ],
    [
      "Entity-method_which_embed_the_predicate_into_vector",
      "Predicate-embeds",
      "Entity-predicate"
    ],
    [
      "Entity-rescal",
      "Predicate-are_also_larger_and_simpler_than_those_in_more_recent_embedding-based_link_predictors_such_as",
      "Entity-hole"
    ],
    [
      "Entity-rescal_embeddings_are_also_larger_and_simpler_than_those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker_.",
      "Predicate-are_compared_to",
      "Entity-those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker"
    ],
    [
      "Entity-rescal_embeddings_are_also_larger_and_simpler_than_those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker_.",
      "Predicate-are_compared_to",
      "Entity-tucker"
    ],
    [
      "Entity-unlike_earlier_work",
      "Predicate-mines",
      "Entity-open_path__op__rule"
    ],
    [
      "Entity-unlike_earlier_work",
      "Predicate-mine",
      "Entity-open_path__op__rule"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-mine",
      "Entity-open_path__op__rule"
    ],
    [
      "Entity-we_mine_open_path__op__rule_of_the_following_form_",
      "Predicate-of_the_following_form",
      "Entity-p_t__x__z_0_"
    ],
    [
      "Entity-op_rule",
      "Predicate-has_logical_consequences",
      "Entity-from_an_op_rule__two_cp_rule_are_logical_consequence__one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t"
    ],
    [
      "Entity-one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t",
      "Predicate-is_consequence",
      "Entity-from_an_op_rule__two_cp_rule_are_logical_consequence__one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t"
    ],
    [
      "Entity-op",
      "Predicate-is_not_a_consequence_of",
      "Entity-any_cp_rule"
    ],
    [
      "Entity-op_rule",
      "Predicate-are_strictly_more_expressive_than",
      "Entity-cp_rule"
    ],
    [
      "Entity-cp_rule",
      "Predicate-is_also_an_instantiation_of",
      "Entity-op_rule"
    ],
    [
      "Entity-every_instantiation_of_a_cp_rule",
      "Predicate-cannot_be_instantiations_of_any",
      "Entity-cp_rule"
    ],
    [
      "Entity-citizenof",
      "Predicate-states_that_if_an_entity_x_lives_in_z_then_that_entity_is_a_citizen_of_somewhere_t.",
      "Entity-livesin__x__z_"
    ],
    [
      "Entity-by_instantiating_the_body_of_this_rule_a_follows",
      "Predicate-instantiates",
      "Entity-the_body_of_this_rule_(1)"
    ],
    [
      "Entity-we_could_infer_the_query",
      "Predicate-infer",
      "Entity-citizenof__bronte___"
    ],
    [
      "Entity-open_path_standard_confidence__opsc_",
      "Predicate-derived_from",
      "Entity-the_closed_path_form"
    ],
    [
      "Entity-open_path_head_coverage__ophc_",
      "Predicate-derived_from",
      "Entity-the_closed_path_form"
    ],
    [
      "Entity-definition_2",
      "Predicate-defines",
      "Entity-_open_path__opsupp__opsc__ophc_"
    ],
    [
      "Entity-op_rule",
      "Predicate-be",
      "Entity-r"
    ],
    [
      "Entity-then",
      "Predicate-satisfies",
      "Entity-_e__f_"
    ],
    [
      "Entity-let_r_be_an_op_rule_of_the_form_given_earlier_.",
      "Predicate-satisfies",
      "Entity-_e__f_"
    ],
    [
      "Entity-the_open_path_support",
      "Predicate-give",
      "Entity-open_path_standard_confidence"
    ],
    [
      "Entity-the_open_path_support",
      "Predicate-give",
      "Entity-open_path_head_coverage_of_r"
    ],
    [
      "Entity-the_open_path_support",
      "Predicate-given_by",
      "Entity-kg"
    ],
    [
      "Entity-op_rule",
      "Predicate-has",
      "Entity-p_2__z_0__z_1_"
    ],
    [
      "Entity-_e_3__e_4__e_5_",
      "Predicate-have",
      "Entity-z_0"
    ],
    [
      "Entity-_e_3__e_4__e_5_",
      "Predicate-can_instantiate",
      "Entity-z_0"
    ],
    [
      "Entity-we_(1)",
      "Predicate-have",
      "Entity-this_rule_(1)"
    ],
    [
      "Entity-open_path__op__rule",
      "Predicate-are_strictly_more_expressive_than",
      "Entity-cp_rule"
    ],
    [
      "Entity-our_objective",
      "Predicate-is_to_mine_a_KG_for_high-quality_OP_rules_about_a_specific_target_predicate_in_the_head_P.",
      "Entity-p"
    ],
    [
      "Entity-our_objective",
      "Predicate-is_to_mine_a_KG_for_high-quality_OP_rules_about_a_specific_target_predicate_in_the_head_P.",
      "Entity-op_rule"
    ],
    [
      "Entity-novel_fitness_function",
      "Predicate-can_estimate_the_quality_of_an_OP_rule_based_on_the_embedding_representations_of_its_predicates",
      "Entity-op_rule"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "Predicate-can_estimate_the_quality_of_an_OP_rule_based_on_the_embedding_representations_of_its_predicates",
      "Entity-op_rule"
    ],
    [
      "Entity-our_op_rule_miner",
      "Predicate-is_summarised_by",
      "Entity-algorithm_1"
    ],
    [
      "Entity-it_(3)",
      "Predicate-takes",
      "Entity-user_parameter"
    ],
    [
      "Entity-user_parameter",
      "Predicate-for",
      "Entity-the_maximum_length_of_rule"
    ],
    [
      "Entity-user_parameter",
      "Predicate-and",
      "Entity-the_least_acceptable_opsc_and_ophc_score"
    ],
    [
      "Entity-algorithm_1",
      "Predicate-is",
      "Entity-oprl"
    ],
    [
      "Entity-algorithm_1__oprl",
      "Predicate-Input",
      "Entity-oprl"
    ],
    [
      "Entity-k",
      "Predicate-Sampling",
      "Entity-p"
    ],
    [
      "Entity-parameter",
      "Predicate-has",
      "Entity-a_max_rule_length_l"
    ],
    [
      "Entity-parameter",
      "Predicate-has",
      "Entity-minopsc"
    ],
    [
      "Entity-parameter",
      "Predicate-has",
      "Entity-minophc"
    ],
    [
      "Entity-set_of_op_rule_r",
      "Predicate-defines",
      "Entity-r"
    ],
    [
      "Entity-k_",
      "Predicate-",
      "Entity-sampling__k__p_"
    ],
    [
      "Entity-_p__a_",
      "Predicate-",
      "Entity-embeddings__k__"
    ],
    [
      "Entity-k",
      "Predicate-",
      "Entity-l"
    ],
    [
      "Entity-add_pathfinding__k___p_t__p__a__k_",
      "Predicate-to",
      "Entity-r_"
    ],
    [
      "Entity-pathfinding",
      "Predicate-Add",
      "Entity-r_"
    ],
    [
      "Entity-incpathfinding",
      "Predicate-Add_to",
      "Entity-r_"
    ],
    [
      "Entity-incpathfinding",
      "Predicate-Add",
      "Entity-r_"
    ],
    [
      "Entity-evaluation",
      "Predicate-",
      "Entity-r"
    ],
    [
      "Entity-return",
      "Predicate-is",
      "Entity-r"
    ],
    [
      "Entity-existing_embedding-based_method",
      "Predicate-cannot_handle",
      "Entity-vast_kg"
    ],
    [
      "Entity-rescal",
      "Predicate-cannot_handle",
      "Entity-yago2"
    ],
    [
      "Entity-rlvlr",
      "Predicate-proposed_in",
      "Entity-sampling__"
    ],
    [
      "Entity-entity",
      "Predicate-are_computed_only_for",
      "Entity-embeddings"
    ],
    [
      "Entity-the_method",
      "Predicate-initializes",
      "Entity-a_set_of_entity"
    ],
    [
      "Entity-entity",
      "Predicate-are_involved_in",
      "Entity-the_target_predicate"
    ],
    [
      "Entity-p_t",
      "Predicate-has_as_a_fact",
      "Entity-p_t__e1__e2_"
    ],
    [
      "Entity-e1",
      "Predicate-includes",
      "Entity-e1"
    ],
    [
      "Entity-e2",
      "Predicate-includes",
      "Entity-e2"
    ],
    [
      "Entity-the_method_(1)",
      "Predicate-extends",
      "Entity-set_of_entity"
    ],
    [
      "Entity-entity_that_are_related_to_the_existing_entity_in_the_set",
      "Predicate-are_related_via_any_predicates",
      "Entity-e3"
    ],
    [
      "Entity-the_maximum_length_of_target_rule",
      "Predicate-based_on",
      "Entity-number_of_time"
    ],
    [
      "Entity-entity",
      "Predicate-are_obtained",
      "Entity-after"
    ],
    [
      "Entity-we_(1)",
      "Predicate-compute",
      "Entity-embedding_model"
    ],
    [
      "Entity-fitness_function",
      "Predicate-improve",
      "Entity-scalability"
    ],
    [
      "Entity-embeddings",
      "Predicate-for",
      "Entity-predicate_and_argument_in_the_sample_kg"
    ],
    [
      "Entity-embeddings__",
      "Predicate-obtains",
      "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg"
    ],
    [
      "Entity-existing_representation_learner",
      "Predicate-compute_embeddings_for",
      "Entity-entity"
    ],
    [
      "Entity-existing_representation_learner",
      "Predicate-compute_embeddings_for",
      "Entity-predicate"
    ],
    [
      "Entity-the_scoring_function",
      "Predicate-specifies",
      "Entity-the_fact_that_e0_is_connected_to_e1_via_predicate_p1"
    ],
    [
      "Entity-pathfinding__",
      "Predicate-exhaustively_generates_OP_rules_for_a_target_predicate_P_i_and_its_inverse_P_i-1",
      "Entity-op_rule"
    ],
    [
      "Entity-rule",
      "Predicate-apply",
      "Entity-a_novel_embedding-based_fitness_function"
    ],
    [
      "Entity-some_top-ranked_candidate",
      "Predicate-extend_to",
      "Entity-candidate_rule"
    ],
    [
      "Entity-we_(2)",
      "Predicate-learns",
      "Entity-new_short_op_rule"
    ],
    [
      "Entity-we_(2)",
      "Predicate-using",
      "Entity-pathfinding___(1)"
    ],
    [
      "Entity-p_1__x__z_0_",
      "Predicate-",
      "Entity-p2__z0__z1_"
    ],
    [
      "Entity-p2__z0__z1_",
      "Predicate-",
      "Entity-p3__z1__z2_"
    ],
    [
      "Entity-p3__z1__z2_",
      "Predicate-",
      "Entity-p4__z2__y_"
    ],
    [
      "Entity-p_1__x__z_0_",
      "Predicate-implies",
      "Entity-p2__z0__z1_"
    ],
    [
      "Entity-we_(4)",
      "Predicate-use",
      "Entity-a_redundancy_elimination_method"
    ],
    [
      "Entity-evaluate__",
      "Predicate-evaluates_candidate_rules_by_OPSC_and_OPHC",
      "Entity-candidate_rule"
    ],
    [
      "Entity-evaluation",
      "Predicate-uses",
      "Entity-efficient_matrix_and_vector_multiplication"
    ],
    [
      "Entity-scalability",
      "Predicate-is_crucial_for",
      "Entity-evaluation"
    ],
    [
      "Entity-k____sampling__k__p__.",
      "Predicate-computes_a_fragment_of_the_KG_consisting_of_a_bounded_number_of_entities_that_are_related_to_the_target_predicate",
      "Entity-kg"
    ],
    [
      "Entity-the_number_of_potential_rule",
      "Predicate-generated_in",
      "Entity-pathfinding___(3)"
    ],
    [
      "Entity-pathfinding",
      "Predicate-uses",
      "Entity-rule"
    ],
    [
      "Entity-the_former",
      "Predicate-uses",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-each_instance",
      "Predicate-connects",
      "Entity-it_head_and_body"
    ],
    [
      "Entity-an_op_rule",
      "Predicate-tends_to_have_high",
      "Entity-opsupp__and_so_high_opsc_and_ophc_"
    ],
    [
      "Entity-the_entity_which_satisfy_the_second_argument_of_p_t",
      "Predicate-have_a_large_intersection_with",
      "Entity-the_entity_that_satisfy_the_first_argument_of_p_t"
    ],
    [
      "Entity-predicate_pair",
      "Predicate-associate",
      "Entity-similar_entity"
    ],
    [
      "Entity-a_co-occurrence_fitness_function_for_mining_cp_rule",
      "Predicate-is_defined_using",
      "Entity-argument_embeddings_in_rlvlr"
    ],
    [
      "Entity-rlvlr",
      "Predicate-defines",
      "Entity-co-occurrence_fitness_function"
    ],
    [
      "Entity-we_(1)",
      "Predicate-adapt",
      "Entity-a_co-occurrence_fitness_function_for_mining_cp_rule"
    ],
    [
      "Entity-rlvlr",
      "Predicate-defines",
      "Entity-a_similarity_fitness_function"
    ],
    [
      "Entity-op_rule",
      "Predicate-are_computationally_harder_than",
      "Entity-cp_rule"
    ],
    [
      "Entity-cp_rule",
      "Predicate-present",
      "Entity-the_head_and_body"
    ],
    [
      "Entity-the_head_and_body",
      "Predicate-have_similar_concepts",
      "Entity-similar_concept"
    ],
    [
      "Entity-op_rule",
      "Predicate-have_no_holistic_similarity_between_the_head_and_body",
      "Entity-there_is_no_holistic_similarity_between_the_head_and_body"
    ],
    [
      "Entity-x",
      "Predicate-isCitizenOf",
      "Entity-y"
    ],
    [
      "Entity-x",
      "Predicate-isBornIn",
      "Entity-z"
    ],
    [
      "Entity-z",
      "Predicate-locatedIn",
      "Entity-y"
    ],
    [
      "Entity-each",
      "Predicate-embeddings",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-for_entity",
      "Predicate-write_its_embedding_vector_as",
      "Entity-e"
    ],
    [
      "Entity-e",
      "Predicate-write_its_embedding_vector_as",
      "Entity-e"
    ],
    [
      "Entity-for_entity_e__we_write_it_embedding_vector_a_e",
      "Predicate-define_the_representation_of",
      "Entity-e"
    ],
    [
      "Entity-p",
      "Predicate-write_its_embedding_matrix_as",
      "Entity-p"
    ],
    [
      "Entity-definition",
      "Predicate-defines",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-definition",
      "Predicate-defines",
      "Entity-the_argument_embeddings_of_the_subject_and_object_argument"
    ],
    [
      "Entity-_1n___s_e__e_for_e_in_s_p",
      "Predicate-",
      "Entity-p__1_"
    ],
    [
      "Entity-s_p",
      "Predicate-occurring_as",
      "Entity-entity"
    ],
    [
      "Entity-s_p",
      "Predicate-of",
      "Entity-p"
    ],
    [
      "Entity-s_p",
      "Predicate-",
      "Entity-_e__e__such_that_p__e__e____f_"
    ],
    [
      "Entity-o_p",
      "Predicate-",
      "Entity-_e__e__such_that_p__e__e____f_"
    ],
    [
      "Entity-s_p",
      "Predicate-contains",
      "Entity-_e__e__such_that_p__e__e____f_"
    ],
    [
      "Entity-o_p",
      "Predicate-contains",
      "Entity-_e__e__such_that_p__e__e____f_"
    ],
    [
      "Entity-s_e",
      "Predicate-represents",
      "Entity-__e__such_that_p__e__e____f__"
    ],
    [
      "Entity-o_e",
      "Predicate-represents",
      "Entity-__e__such_that_p__e__e____f__"
    ],
    [
      "Entity-cp_rule",
      "Predicate-used_in",
      "Entity-rlvlr"
    ],
    [
      "Entity-p__2___t",
      "Predicate-",
      "Entity-p__1___1"
    ],
    [
      "Entity-p__2___i",
      "Predicate-",
      "Entity-p__2___i"
    ],
    [
      "Entity-pairwise",
      "Predicate-defined_as",
      "Entity-pairwise_local_fitness_function"
    ],
    [
      "Entity-definition_2",
      "Predicate-defines",
      "Entity-_local_co-occurrence_fitness_"
    ],
    [
      "Entity-r_be_an_op_rule_of_the_form__2_",
      "Predicate-is",
      "Entity-an_op_rule"
    ],
    [
      "Entity-definition_2",
      "Predicate-defines",
      "Entity-op_rule"
    ],
    [
      "Entity-r_be_an_op_rule_of_the_form__2_",
      "Predicate-is",
      "Entity-then"
    ],
    [
      "Entity-f0_loc",
      "Predicate-",
      "Entity-_p_t__p_1_"
    ],
    [
      "Entity-_p_t__p_1_",
      "Predicate-simulates",
      "Entity-sim__p__2___t__p__1___1_"
    ],
    [
      "Entity-f0_loc",
      "Predicate-",
      "Entity-sim__p__2___t__p__1___1_"
    ],
    [
      "Entity-similarity_function",
      "Predicate-is_defined_by",
      "Entity-the_frobenius_norm"
    ],
    [
      "Entity-co-occurrence_capture_the_weight_of_connection_of_sequential_entity_along_the_path",
      "Predicate-obtains",
      "Entity-the_whole_rule"
    ],
    [
      "Entity-rule",
      "Predicate-can_be_obtained_by_aggregating",
      "Entity-pairwise_local_occurrence"
    ],
    [
      "Entity-f_coo",
      "Predicate-",
      "Entity-_r_"
    ],
    [
      "Entity-p_t",
      "Predicate-f0_loc",
      "Entity-p_1"
    ],
    [
      "Entity-p_i",
      "Predicate-fi_loc",
      "Entity-p___i1__(1)"
    ],
    [
      "Entity-argument_embeddings",
      "Predicate-built_from",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-entity_embeddings",
      "Predicate-built_from",
      "Entity-argument_embeddings"
    ],
    [
      "Entity-we_(1)",
      "Predicate-introduce",
      "Entity-an_alternative_quality_estimation_function"
    ],
    [
      "Entity-next",
      "Predicate-uses",
      "Entity-open_path_fitness"
    ],
    [
      "Entity-next",
      "Predicate-introduces",
      "Entity-an_alternative_quality_estimation_function"
    ],
    [
      "Entity-an_op_rule_(1)",
      "Predicate-acts_to_connect",
      "Entity-entity"
    ],
    [
      "Entity-p_t",
      "Predicate-has_a_subject_argument",
      "Entity-entity_satisfying_the_subject_argument_of_the_head_predicate__p_t"
    ],
    [
      "Entity-an_op_rule_(1)",
      "Predicate-connects_entities_along_a_path_that_satisfy",
      "Entity-a_chain_of_predicate_in_the_rule"
    ],
    [
      "Entity-we_(1)",
      "Predicate-anchor",
      "Entity-an_op_rule_(1)"
    ],
    [
      "Entity-we_(1)",
      "Predicate-propose",
      "Entity-the_open_path_fitness_function"
    ],
    [
      "Entity-this_observation_(1)",
      "Predicate-estimate",
      "Entity-rule_quality"
    ],
    [
      "Entity-open_path_fitness_function",
      "Predicate-estimates",
      "Entity-rule_quality"
    ],
    [
      "Entity-definition_7",
      "Predicate-is",
      "Entity-_open_path_fitness_"
    ],
    [
      "Entity-let_r",
      "Predicate-be",
      "Entity-an_op_rule_of_the_form__2__(1)"
    ],
    [
      "Entity-open_path_fitness_function",
      "Predicate-acts_to_connect_entities_satisfying_the_subject_argument_of_the_head_predicate_P_t_to_entities_forming_the_object_argument_of_the_tail_predicate_P_n_along_a_path_of_entities_that_satisfy_a_chain_of_predicates_in_the_rule.",
      "Entity-entity"
    ],
    [
      "Entity-open_path_fitness_function",
      "Predicate-represents_the_overall_rule_from_the_perspective_of_the_predicates.",
      "Entity-the_product_of_the_predicate_embeddings_along_the_path"
    ],
    [
      "Entity-p",
      "Predicate-",
      "Entity-the_open_path_fitness"
    ],
    [
      "Entity-f_op",
      "Predicate-",
      "Entity-p__1__t_p_t_p_1_p_2_..._p_n_p__2___n"
    ],
    [
      "Entity-there_is_no_clear_reason",
      "Predicate-prefer",
      "Entity-either_of_the_fitness_function__f_op__.__or_f_coo__.___over_the_other"
    ],
    [
      "Entity-fitness_function",
      "Predicate-use_both_to_pick",
      "Entity-top_candidate_rule"
    ],
    [
      "Entity-rule",
      "Predicate-pick_up_only_the_top",
      "Entity-the_top_t__of_rule"
    ],
    [
      "Entity-co-occurrence_fitness_function",
      "Predicate-estimates",
      "Entity-rule_quality"
    ],
    [
      "Entity-algorithm_1",
      "Predicate-has",
      "Entity-evaluation__"
    ],
    [
      "Entity-we_assess",
      "Predicate-assess",
      "Entity-the_candidate_rule"
    ],
    [
      "Entity-candidate_rule",
      "Predicate-assessed",
      "Entity-based_on_the_sampled_kg_first_for_efficiency"
    ],
    [
      "Entity-these_rule",
      "Predicate-may_include",
      "Entity-a_significant_number_of_obsolete_and_low-quality_rule"
    ],
    [
      "Entity-we_(5)",
      "Predicate-show",
      "Entity-how_to_efficiently_compute_the_measure"
    ],
    [
      "Entity-kg",
      "Predicate-can_trigger",
      "Entity-candidate_rule"
    ],
    [
      "Entity-let_kg",
      "Predicate-be",
      "Entity-_e__f_"
    ],
    [
      "Entity-k",
      "Predicate-",
      "Entity-_e__f_"
    ],
    [
      "Entity-_a__pk___k___1__...__m__",
      "Predicate-represents",
      "Entity-k"
    ],
    [
      "Entity-we_(6)",
      "Predicate-illustrate",
      "Entity-the_method_for_computing_opsc_and_ophc"
    ],
    [
      "Entity-the_method_for_computing_opsc_and_ophc",
      "Predicate-through",
      "Entity-an_example"
    ],
    [
      "Entity-the_method_for_computing_opsc_and_ophc",
      "Predicate-illustrates",
      "Entity-an_example"
    ],
    [
      "Entity-op_rule",
      "Predicate-",
      "Entity-p2__z0__z1_"
    ],
    [
      "Entity-op_rule",
      "Predicate-",
      "Entity-p3__z1__y_"
    ],
    [
      "Entity-e",
      "Predicate-",
      "Entity-_e1__e2__e3_"
    ],
    [
      "Entity-we_(1)",
      "Predicate-need_to_calculate",
      "Entity-opsc"
    ],
    [
      "Entity-we_(1)",
      "Predicate-need_to_calculate",
      "Entity-ophc"
    ],
    [
      "Entity-we_(1)",
      "Predicate-sum",
      "Entity-each_column_of_the_adjacency_matrix"
    ],
    [
      "Entity-adjacency_matrix_representation_of_the_kg",
      "Predicate-transpose_to_obtain",
      "Entity-vector_v__2___p1_"
    ],
    [
      "Entity-we_(1)",
      "Predicate-transpose",
      "Entity-to_obtain_the_vector_v__2___p1_"
    ],
    [
      "Entity-_ei__j_a__p1___i__j___0_and_1__j__n_",
      "Predicate-are",
      "Entity-the_satisfying_entity"
    ],
    [
      "Entity-for__2_",
      "Predicate-connects",
      "Entity-the_path_p1__p2__...__pm"
    ],
    [
      "Entity-to_find_distinct_entity",
      "Predicate-sum",
      "Entity-each_row"
    ],
    [
      "Entity-we",
      "Predicate-obtain",
      "Entity-the_vector_v__1___b_"
    ],
    [
      "Entity-non-zero_element_of_this_vector_indicates_a_satisfying_entity",
      "Predicate-is_given_by_counting_the_number_of_non-zero_elements_in",
      "Entity-v__1___b_"
    ],
    [
      "Entity-b",
      "Predicate-",
      "Entity-a__p1__a__p2_"
    ],
    [
      "Entity-a__p1_",
      "Predicate-",
      "Entity-_0_0_2_"
    ],
    [
      "Entity-a__p1_",
      "Predicate-",
      "Entity-_0_2_1_"
    ],
    [
      "Entity-a__p1__a__p2_",
      "Predicate-",
      "Entity-_1_0_0_"
    ],
    [
      "Entity-b",
      "Predicate-",
      "Entity-_0_0_2_"
    ],
    [
      "Entity-_0_",
      "Predicate-",
      "Entity-v__1___b_"
    ],
    [
      "Entity-v__1___b_",
      "Predicate-",
      "Entity-_0_"
    ],
    [
      "Entity-entity",
      "Predicate-satisfy",
      "Entity-e2_and_e3"
    ],
    [
      "Entity-e2",
      "Predicate-and",
      "Entity-e3"
    ],
    [
      "Entity-the_row_index",
      "Predicate-indicate",
      "Entity-entity_that_satisfy_the_second_argument_of_the_head"
    ],
    [
      "Entity-non-zero_element",
      "Predicate-indicate",
      "Entity-entity_that_satisfy_the_first_argument_of_the_body"
    ],
    [
      "Entity-v__1___b_",
      "Predicate-have",
      "Entity-the_row_index"
    ],
    [
      "Entity-these_condition",
      "Predicate-are_by",
      "Entity-pairwise_multiplication"
    ],
    [
      "Entity-computing",
      "Predicate-indicate",
      "Entity-entity_that_satisfy_the_second_argument_of_the_head"
    ],
    [
      "Entity-set",
      "Predicate-has_cardinality",
      "Entity-the_count"
    ],
    [
      "Entity-the_count",
      "Predicate-is",
      "Entity-the_cardinality_of_this_set"
    ],
    [
      "Entity-for_the_example",
      "Predicate-have",
      "Entity-e3"
    ],
    [
      "Entity-_1_",
      "Predicate-and",
      "Entity-_2_"
    ],
    [
      "Entity-algorithm_1",
      "Predicate-is_supplied_to",
      "Entity-opsc_and_ophc_(2)"
    ],
    [
      "Entity-minimum_threshold_for_opsc",
      "Predicate-are_supplied_to",
      "Entity-algorithm_1"
    ],
    [
      "Entity-algorithm",
      "Predicate-produces",
      "Entity-the_final_result_of_the_algorithm"
    ],
    [
      "Entity-the_remaining_rule",
      "Predicate-are",
      "Entity-the_final_result_of_the_algorithm"
    ],
    [
      "Entity-novel_component",
      "Predicate-introduce",
      "Entity-op_rule_from_kg"
    ],
    [
      "Entity-we_(1)",
      "Predicate-mine",
      "Entity-op_rule_from_kg"
    ],
    [
      "Entity-we_(1)",
      "Predicate-introduce",
      "Entity-the_following_novel_component"
    ],
    [
      "Entity-we_(5)",
      "Predicate-mine",
      "Entity-rule_with_free_variable_(1)"
    ],
    [
      "Entity-proposing_op_rule",
      "Predicate-proposes",
      "Entity-a_fragment_of_function-free_horn_rule"
    ],
    [
      "Entity-rule_with_free_variable_(1)",
      "Predicate-keeps",
      "Entity-the_complexity_of_the_learning_phase_manageable"
    ],
    [
      "Entity-it_embedding_representation",
      "Predicate-based_on",
      "Entity-learning_op_rule_based_on_an_embedding_representation"
    ],
    [
      "Entity-op_rule",
      "Predicate-can_now_mine_OP_rules_with_measurable_qualities_from_KGs",
      "Entity-kg"
    ],
    [
      "Entity-we_(1)",
      "Predicate-mine",
      "Entity-op_rule"
    ],
    [
      "Entity-mined_rule",
      "Predicate-can_be_used_for",
      "Entity-akgc_task"
    ],
    [
      "Entity-we_(1)",
      "Predicate-use",
      "Entity-op_rule"
    ],
    [
      "Entity-we_(1)",
      "Predicate-generate",
      "Entity-relevant_question"
    ],
    [
      "Entity-question",
      "Predicate-can_be_posed_to",
      "Entity-oracle_or_a_human_expert"
    ],
    [
      "Entity-we_use_op_rule_to_generate_relevant_question_which_can_be_posed_to_an_oracle_or_a_human_expert",
      "Predicate-generate",
      "Entity-relevant_question"
    ],
    [
      "Entity-automated_link_predictor",
      "Predicate-makes",
      "Entity-a_convenient_oracle"
    ],
    [
      "Entity-an_automated_link_predictor",
      "Predicate-makes_a_convenient_oracle",
      "Entity-oracle"
    ],
    [
      "Entity-an_automated_link_predictor_make_a_convenient_oracle",
      "Predicate-makes",
      "Entity-a_convenient_oracle"
    ],
    [
      "Entity-given_predicate",
      "Predicate-is",
      "Entity-p"
    ],
    [
      "Entity-given_predicate_p",
      "Predicate-the_AKGC_task_is_to_generate_queries_of_the_form_P_e_and_Pe_",
      "Entity-query"
    ],
    [
      "Entity-given_predicate_p",
      "Predicate-to_generate_queries_of_the_form_P_e_and_Pe_",
      "Entity-akgc_task"
    ],
    [
      "Entity-op_rule",
      "Predicate-found_by",
      "Entity-algorithm_1"
    ],
    [
      "Entity-inference_module",
      "Predicate-derives",
      "Entity-query"
    ],
    [
      "Entity-algorithm_1",
      "Predicate-finds_OP_rules_about_P_in_the_head_and_then_uses_the_rules_to_induce_queries_of_the_form_P_e_and_Pe_",
      "Entity-op_rule"
    ],
    [
      "Entity-we_first",
      "Predicate-use",
      "Entity-oprl"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head",
      "Predicate-learns",
      "Entity-op_rule"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head_and_then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___",
      "Predicate-induce",
      "Entity-query"
    ],
    [
      "Entity-p_1",
      "Predicate-has_instances_such_as_P_1e_e_1_P_2e_1_e_2_..._P_ne_n-1_e_in_the_KG",
      "Entity-kg"
    ],
    [
      "Entity-we_define",
      "Predicate-define",
      "Entity-the_confidence_degree__cd_"
    ],
    [
      "Entity-rule",
      "Predicate-induce",
      "Entity-query"
    ],
    [
      "Entity-q",
      "Predicate-induced_by",
      "Entity-r"
    ],
    [
      "Entity-cd",
      "Predicate-",
      "Entity-max__opsc__r__"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "Predicate-uses_the_test_data_to_evaluate_its_prediction_performance",
      "Entity-the_hold-out_test_data"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "Predicate-predict",
      "Entity-fact"
    ],
    [
      "Entity-query",
      "Predicate-arise",
      "Entity-an_industrial_application_of_a_link_prediction_model"
    ],
    [
      "Entity-for_akgc",
      "Predicate-need_only_a_named_predicate_or_all_predicates",
      "Entity-named_predicate__or_all_predicate_"
    ],
    [
      "Entity-_(1)",
      "Predicate-P_1_",
      "Entity-_(1)"
    ],
    [
      "Entity-_(1)",
      "Predicate-P_1_",
      "Entity-e_2"
    ],
    [
      "Entity-_(1)",
      "Predicate-P_1_",
      "Entity-e_3"
    ],
    [
      "Entity-_(1)",
      "Predicate-P_1_",
      "Entity-e_5"
    ],
    [
      "Entity-e_4",
      "Predicate-P_1e_4_",
      "Entity-_(1)"
    ],
    [
      "Entity-e_8",
      "Predicate-P_1e_8_",
      "Entity-_(1)"
    ],
    [
      "Entity-e_9",
      "Predicate-P_1e_8_",
      "Entity-_(1)"
    ],
    [
      "Entity-link_predictor",
      "Predicate-try_to_answer",
      "Entity-this_set_of_query"
    ],
    [
      "Entity-our_agkgc",
      "Predicate-mine",
      "Entity-op_rule"
    ],
    [
      "Entity-the_number_of_induced_query",
      "Predicate-is_upper-bounded_by",
      "Entity-twice_the_number_of_fact"
    ],
    [
      "Entity-different_fact__p_1__e_8__e_7__and_p_1__e_9__e_7__",
      "Predicate-can_derive",
      "Entity-the_same_query__p_1____e_7__"
    ],
    [
      "Entity-we_(6)",
      "Predicate-conducted",
      "Entity-two_set_of_experiment"
    ],
    [
      "Entity-we_(6)",
      "Predicate-evaluate",
      "Entity-oprl"
    ],
    [
      "Entity-we_(6)",
      "Predicate-conducted_two_sets_of_experiments_to_evaluate_OPRL.",
      "Entity-oprl"
    ],
    [
      "Entity-we_(6)",
      "Predicate-demonstrate1._OPRL_can_mine_quality_OP_rules_from_a_range_of_KGs._OPRL_can_mine_massive_KGs_in_a_reasonable_time._Our_novel_hybrid_fitness_function_outperforms_the_fitness_function_adapted_from_RLVLR.2._Queries_generated_from_OPRL_s_rules_are_relevant_with_good_recall_and_precision_in_multiple_KGs.",
      "Entity-oprl"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "Predicate-are_evaluated_by",
      "Entity-link_prediction"
    ],
    [
      "Entity-relevant_question_are_provided_by_human_experimenter",
      "Predicate-provide",
      "Entity-human_experimenter"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "Predicate-are_usually_evaluated_by_link_prediction_for_which_relevant_questions_are_provided_by_human_experimenters.",
      "Entity-human_experimenter"
    ],
    [
      "Entity-the_link_predictor",
      "Predicate-answer_each_query_with_a_sequence_of_ranked_entities.",
      "Entity-sequence_of_ranked_entity"
    ],
    [
      "Entity-the_link_predictor",
      "Predicate-answer",
      "Entity-each_query_with_a_sequence_of_ranked_entity"
    ],
    [
      "Entity-we",
      "Predicate-are_concerned_with",
      "Entity-asking_relevant_question"
    ],
    [
      "Entity-we",
      "Predicate-ask",
      "Entity-question"
    ],
    [
      "Entity-generated_query",
      "Predicate-can_be_used_with",
      "Entity-a_link_predictor_(2)"
    ],
    [
      "Entity-our_generated_query",
      "Predicate-can_be_used_in_combination_with_a_link_predictor_to_infer_new_facts_but_we_do_not_use_any_specific_link_predictor_to_answer_our_questions_in_this_paper.",
      "Entity-link_predictor"
    ],
    [
      "Entity-link_predictor",
      "Predicate-are_not_designed_to_answer",
      "Entity-a_query_with_one_correct_answer"
    ],
    [
      "Entity-query",
      "Predicate-answer",
      "Entity-one_correct_answer"
    ],
    [
      "Entity-answer",
      "Predicate-be",
      "Entity-a_ranked_sequence_of_answer"
    ],
    [
      "Entity-to_evaluate_our_system",
      "Predicate-assume",
      "Entity-a_perfect_link_predictor"
    ],
    [
      "Entity-to_evaluate_our_system",
      "Predicate-we_assume_a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists.",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-problem",
      "Predicate-reduced_to",
      "Entity-finding_relevant_question"
    ],
    [
      "Entity-we_(6)",
      "Predicate-evaluate",
      "Entity-the_relevancy_of_a_question"
    ],
    [
      "Entity-a_question",
      "Predicate-based_on",
      "Entity-test_fact"
    ],
    [
      "Entity-we_(6)",
      "Predicate-can_evaluate_the_relevancy_of_a_question_based_on_the_test_facts._If_we_have_the_answer_to_a_question_in_the_test_set_it_means_the_question_is_relevant_because_it_uncovers_some_missing_fact_and_if_we_have_a_perfect_link_predictor_the_question_can_be_fed_to_it_and_the_missing_fact_can_be_retrieved.",
      "Entity-test_fact"
    ],
    [
      "Entity-a_question",
      "Predicate-is_relevant_because_it_uncovers_some_missing_fact",
      "Entity-some_missing_fact"
    ],
    [
      "Entity-our_proposed_system",
      "Predicate-is",
      "Entity-the_first_method_to_learn_rule_to_generate_relevant_question_automatically"
    ],
    [
      "Entity-whose_output_is_modified_to_produce_question",
      "Predicate-produces",
      "Entity-question"
    ],
    [
      "Entity-we",
      "Predicate-demonstrate",
      "Entity-our_experiment"
    ],
    [
      "Entity-we",
      "Predicate-demonstrate",
      "Entity-experiment"
    ],
    [
      "Entity-oprl",
      "Predicate-can_mine",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-oprl",
      "Predicate-mine_from_a_range_of",
      "Entity-kg"
    ],
    [
      "Entity-oprl",
      "Predicate-can_mine",
      "Entity-massive_kg"
    ],
    [
      "Entity-oprl",
      "Predicate-mine_in_a_reasonable_time",
      "Entity-massive_kg"
    ],
    [
      "Entity-our_novel_hybrid_fitness_function",
      "Predicate-outperforms",
      "Entity-the_fitness_function_adapted_from_rlvlr"
    ],
    [
      "Entity-query",
      "Predicate-are_relevant_with_good_recall_and_precision_in",
      "Entity-multiple_kg"
    ],
    [
      "Entity-oprl",
      "Predicate-generate",
      "Entity-query"
    ],
    [
      "Entity-they_(3)",
      "Predicate-outperform",
      "Entity-a_probabilistic_baseline"
    ],
    [
      "Entity-they",
      "Predicate-outperform",
      "Entity-query_generated_by_a_modified_leading-edge_link_predictor"
    ],
    [
      "Entity-we_(6)",
      "Predicate-conducted",
      "Entity-experiment"
    ],
    [
      "Entity-fb15k_selected",
      "Predicate-is_derived_from",
      "Entity-freebase"
    ],
    [
      "Entity-fb15k_selected",
      "Predicate-is_widely_adopted_for",
      "Entity-link_prediction"
    ],
    [
      "Entity-fb15k_selected__which_we_call_fb15kse_",
      "Predicate-derived_from",
      "Entity-freebase"
    ],
    [
      "Entity-yago2",
      "Predicate-is_often_used_for",
      "Entity-rule_mining"
    ],
    [
      "Entity-yago2_core",
      "Predicate-is_often_used_for",
      "Entity-rule_mining"
    ],
    [
      "Entity-wikidata",
      "Predicate-is_a",
      "Entity-multilingual"
    ],
    [
      "Entity-wikidata",
      "Predicate-to_manage",
      "Entity-factual_information"
    ],
    [
      "Entity-wikidata",
      "Predicate-manages_the_factual_information_of_a_popular_online_encyclopedia",
      "Entity-popular_online_encyclopedia"
    ],
    [
      "Entity-the_four_benchmark_datasets_given_in_table_1",
      "Predicate-are_used_for",
      "Entity-link_prediction"
    ],
    [
      "Entity-poker",
      "Predicate-is_a_synthetic_dataset_adapted_by",
      "Entity-the_author"
    ],
    [
      "Entity-poker",
      "Predicate-adapted_from",
      "Entity-classic_version"
    ],
    [
      "Entity-author",
      "Predicate-from",
      "Entity-classic_version"
    ],
    [
      "Entity-each_poker_hand",
      "Predicate-consists",
      "Entity-5_playing_card"
    ],
    [
      "Entity-5_playing_card",
      "Predicate-drawn_from",
      "Entity-a_reduced_deck_with_6_rank_and_2_suit"
    ],
    [
      "Entity-each_card",
      "Predicate-is_described_using",
      "Entity-two_attribute__suit_and_rank_"
    ],
    [
      "Entity-each_card_is_described_using_two_attribute__suit_and_rank___for_a_total_of_10_predictive_attribute",
      "Predicate-has",
      "Entity-each_card_is_described_using_two_attribute__suit_and_rank___for_a_total_of_10_predictive_attribute"
    ],
    [
      "Entity-poker_hand_",
      "Predicate-describes",
      "Entity-class_attribute"
    ],
    [
      "Entity-we_(7)",
      "Predicate-use",
      "Entity-rescal"
    ],
    [
      "Entity-we",
      "Predicate-generate",
      "Entity-embeddings"
    ],
    [
      "Entity-the_vector_size_set_to_100",
      "Predicate-set",
      "Entity-100"
    ],
    [
      "Entity-we_(7)",
      "Predicate-generate",
      "Entity-embeddings"
    ],
    [
      "Entity-we_(7)",
      "Predicate-retain",
      "Entity-the_top_10__of_the_op_rule"
    ],
    [
      "Entity-we_(7)",
      "Predicate-retain",
      "Entity-the_top_10__of_the_op_rule_according_to_the_fitness_function"
    ],
    [
      "Entity-pathfinding",
      "Predicate-for",
      "Entity-maximum_rule_length"
    ],
    [
      "Entity-oprl",
      "Predicate-finds",
      "Entity-high_quality_rule"
    ],
    [
      "Entity-oprl",
      "Predicate-finds_high_quality_rules",
      "Entity-high_quality_rule"
    ],
    [
      "Entity-we_assess_(1)",
      "Predicate-assess_how_well_OPRL_finds_high_quality_rules",
      "Entity-high_quality_rule"
    ],
    [
      "Entity-fitness_function_proposed_for_oprl",
      "Predicate-compare_the_performance_of_fitness_functions_proposed_for_OPRL",
      "Entity-the_performance_of_fitness_function_proposed_for_oprl"
    ],
    [
      "Entity-the_quality_of_rule",
      "Predicate-is_reported_based_on",
      "Entity-opscophc_score"
    ],
    [
      "Entity-opscophc_score",
      "Predicate-calculated_against",
      "Entity-the_full_benchmark_kg"
    ],
    [
      "Entity-opscophc_score",
      "Predicate-calculated_against_the_full_benchmark_KGs",
      "Entity-full_benchmark_kg"
    ],
    [
      "Entity-rule",
      "Predicate-reported_based_on_their_OPSC_and_OPHC_values_respectively",
      "Entity-opscophc_score"
    ],
    [
      "Entity-mined_rule",
      "Predicate-used_for_generating_queries_so_we_need_some_hold-out_facts_for_query_evaluation.",
      "Entity-query_evaluation"
    ],
    [
      "Entity-later",
      "Predicate-use",
      "Entity-the_mined_rule"
    ],
    [
      "Entity-fb15kse",
      "Predicate-have",
      "Entity-training_data"
    ],
    [
      "Entity-fb15kse",
      "Predicate-has_test_and_training_sets_available",
      "Entity-test_and_training_set_are_available"
    ],
    [
      "Entity-table_2",
      "Predicate-shows",
      "Entity-the_average_number_of_quality_rule_mined_for_all_predicate_in_the_respective_kg"
    ],
    [
      "Entity-quality_rule",
      "Predicate-mined_for",
      "Entity-all_predicate_in_the_respective_kg"
    ],
    [
      "Entity-table_2",
      "Predicate-shows_the_average_numbers_of_quality_rules_mined_for_all_predicates_in_the_respective_KGs.",
      "Entity-quality_rule"
    ],
    [
      "Entity-wikidata",
      "Predicate-has_only_50_randomly_selected_predicates_targeted",
      "Entity-predicate"
    ],
    [
      "Entity-table_2",
      "Predicate-shows",
      "Entity-run_time"
    ],
    [
      "Entity-run_time_in_hour__averaged_over_the_target",
      "Predicate-averaged_over",
      "Entity-target"
    ],
    [
      "Entity-run_time",
      "Predicate-averaged_over_the_targets_in_hours",
      "Entity-target"
    ],
    [
      "Entity-opsc",
      "Predicate-shows",
      "Entity-the_distribution_of_mined_rule_by_opsc_and_length"
    ],
    [
      "Entity-figure_1",
      "Predicate-shows_the_distribution_of_mined_rules_by_OPSC_and_length",
      "Entity-mined_rule"
    ],
    [
      "Entity-oprl",
      "Predicate-can_learn",
      "Entity-plausible_rule"
    ],
    [
      "Entity-op_rule",
      "Predicate-are_mined_from",
      "Entity-wikidata"
    ],
    [
      "Entity-_z_",
      "Predicate-is_known",
      "Entity-spouse_of_a_person"
    ],
    [
      "Entity-the_first_rule_state_that_if_the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.",
      "Predicate-states_that_if",
      "Entity-it_is_likely_that_the_place_of_birth_of_that_person"
    ],
    [
      "Entity-z",
      "Predicate-spouse",
      "Entity-y"
    ],
    [
      "Entity-0.19",
      "Predicate-highestPoint_",
      "Entity-x"
    ],
    [
      "Entity-z",
      "Predicate-country",
      "Entity-w"
    ],
    [
      "Entity-w",
      "Predicate-continent",
      "Entity-y"
    ],
    [
      "Entity-z",
      "Predicate-presenter",
      "Entity-x"
    ],
    [
      "Entity-z",
      "Predicate-participant",
      "Entity-w"
    ],
    [
      "Entity-w",
      "Predicate-occupation",
      "Entity-y"
    ],
    [
      "Entity-we_conducted_an_experiment",
      "Predicate-assess",
      "Entity-the_utility_of_our_fitness_function"
    ],
    [
      "Entity-random.org_to_select_20_random_predicate_from_fb15kse",
      "Predicate-select",
      "Entity-predicate"
    ],
    [
      "Entity-the_result",
      "Predicate-summarize",
      "Entity-table_3"
    ],
    [
      "Entity-a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._",
      "Predicate-is_capable_of",
      "Entity-mining_more_quality_rule_than_either_of_these_function_individually"
    ],
    [
      "Entity-query_induced_from_oprl-mined_rule",
      "Predicate-induces",
      "Entity-query"
    ],
    [
      "Entity-our_second_set_of_experiment",
      "Predicate-assesses",
      "Entity-the_relevance_of_query_induced_from_oprl-mined_rule"
    ],
    [
      "Entity-query",
      "Predicate-is_a_relevant_query_if_it_has_an_answer_present_in_the_test_set_and_previously_filtered_out_queries_that_can_be_answered_from_the_training_set",
      "Entity-test_set"
    ],
    [
      "Entity-in_the_absence_of_any_comparative_system_for_query_generation",
      "Predicate-lacks",
      "Entity-comparative_system"
    ],
    [
      "Entity-prand",
      "Predicate-are_generated_by",
      "Entity-bag_of_predicate"
    ],
    [
      "Entity-prand_query_are_generated_by_first_selecting_a_bag_of_predicate",
      "Predicate-selecting",
      "Entity-bag_of_predicate"
    ],
    [
      "Entity-we",
      "Predicate-over",
      "Entity-three_kg"
    ],
    [
      "Entity-oprl_rule",
      "Predicate-learned_over",
      "Entity-the_training_data"
    ],
    [
      "Entity-oprl",
      "Predicate-exceeds",
      "Entity-prand"
    ],
    [
      "Entity-oprl",
      "Predicate-exceeds",
      "Entity-fb15kse"
    ],
    [
      "Entity-oprl",
      "Predicate-exceeds",
      "Entity-yago2_core"
    ],
    [
      "Entity-oprl",
      "Predicate-exceeds",
      "Entity-poker"
    ],
    [
      "Entity-yago2",
      "Predicate-induces",
      "Entity-fewer_rule"
    ],
    [
      "Entity-this_(5)",
      "Predicate-is",
      "Entity-weakly_structured"
    ],
    [
      "Entity-genuinely_missing_fact",
      "Predicate-will_be_treated_as",
      "Entity-false_instead_of_true"
    ],
    [
      "Entity-precision_and_recall",
      "Predicate-are_incorrectly_punished_by",
      "Entity-the_latter"
    ],
    [
      "Entity-our_test_set",
      "Predicate-has_all_missing_facts_present_in",
      "Entity-test_set"
    ],
    [
      "Entity-synthetic_poker",
      "Predicate-has_very_close_to_100_precision_and_excellent_recall",
      "Entity-test_set"
    ],
    [
      "Entity-very_high_precision",
      "Predicate-means",
      "Entity-our_query_are_highly_relevant"
    ],
    [
      "Entity-our_query_are_highly_relevant",
      "Predicate-ask_questions_for_which_the_answer_facts_are_missing_from_the_training_set",
      "Entity-training_data"
    ],
    [
      "Entity-the_performance_of_oprl_query",
      "Predicate-sensitivity_is_considered_for",
      "Entity-fb15kse"
    ],
    [
      "Entity-next_(1)",
      "Predicate-consider",
      "Entity-the_sensitivity_of_the_performance_of_oprl_query_to_the_opsc_threshold"
    ],
    [
      "Entity-opsc",
      "Predicate-has_the_expected_behavior_of",
      "Entity-decreasing_recall_a_poorer_rule_get_through"
    ],
    [
      "Entity-opsc",
      "Predicate-increase",
      "Entity-precision"
    ],
    [
      "Entity-we",
      "Predicate-repeated",
      "Entity-experiment"
    ],
    [
      "Entity-we_(1)",
      "Predicate-compare",
      "Entity-oprl_query"
    ],
    [
      "Entity-oprl_query",
      "Predicate-with",
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr"
    ],
    [
      "Entity-oprl_query",
      "Predicate-compare_with",
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr"
    ],
    [
      "Entity-rule_learner",
      "Predicate-predict",
      "Entity-fact"
    ],
    [
      "Entity-rule_learner",
      "Predicate-predict",
      "Entity-query"
    ],
    [
      "Entity-rlvlr",
      "Predicate-generate",
      "Entity-fact"
    ],
    [
      "Entity-we_(1)",
      "Predicate-translate",
      "Entity-each_fact_generated_by_rlvlr"
    ],
    [
      "Entity-each_fact_generated_by_rlvlr",
      "Predicate-to",
      "Entity-two_query"
    ],
    [
      "Entity-rlvlr",
      "Predicate-uses",
      "Entity-a_noisy-or_operator"
    ],
    [
      "Entity-high-performing_rule",
      "Predicate-aggregate",
      "Entity-about_a_target_predicate"
    ],
    [
      "Entity-this_aggregation",
      "Predicate-is_not_compatible_with",
      "Entity-the_query_generation_task"
    ],
    [
      "Entity-we_(1)",
      "Predicate-changed",
      "Entity-rlvlr"
    ],
    [
      "Entity-we_(1)",
      "Predicate-use",
      "Entity-max_operator"
    ],
    [
      "Entity-we_(1)",
      "Predicate-call",
      "Entity-rlvlr_"
    ],
    [
      "Entity-we_(6)",
      "Predicate-used",
      "Entity-20_randomly_selected_predicate_from_fb15kse"
    ],
    [
      "Entity-we_used_20_randomly_selected_predicate_from_fb15kse_in_the_query_generation_task",
      "Predicate-generate_queries_for",
      "Entity-the_query_generation_task"
    ],
    [
      "Entity-oprl",
      "Predicate-vary",
      "Entity-the_minimum_opsc_from_1_to_0.5_in_4_decrement"
    ],
    [
      "Entity-we_(1)",
      "Predicate-get",
      "Entity-a_false_positive_rate_of_almost_50_"
    ],
    [
      "Entity-oprl",
      "Predicate-varies",
      "Entity-the_minimum_opsc_from_1_to_0.5_in_4_decrement"
    ],
    [
      "Entity-rlvlr",
      "Predicate-vary",
      "Entity-sc"
    ],
    [
      "Entity-for_rlvlr_",
      "Predicate-varies",
      "Entity-sc_from_1_to_0.1__the_minimum_and_default__in_4_decrement"
    ],
    [
      "Entity-oprl",
      "Predicate-outperforms",
      "Entity-rlvlr_"
    ],
    [
      "Entity-oprl_query",
      "Predicate-outperforms_RLvLR_on_query_generation_by_30",
      "Entity-query_generation_task"
    ],
    [
      "Entity-previous_work_in_rule_learning_from_a_kg",
      "Predicate-is_focused_on",
      "Entity-closed_rule"
    ],
    [
      "Entity-closed_rule",
      "Predicate-are_less_expressive_than",
      "Entity-op_rule"
    ],
    [
      "Entity-closed_rule",
      "Predicate-are_less_expressive_than",
      "Entity-the_following_op_rule"
    ],
    [
      "Entity-op_rule_learner",
      "Predicate-aim_to_generate",
      "Entity-new_fact"
    ],
    [
      "Entity-the_author_(1)",
      "Predicate-outline",
      "Entity-several_direction_for_future_research_to_handle_existential_rule_learning"
    ],
    [
      "Entity-link_predictor",
      "Predicate-produces",
      "Entity-relevant_query"
    ],
    [
      "Entity-previous_approach",
      "Predicate-is_unaware_of",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-we_(4)",
      "Predicate-is_unaware_of",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-chai",
      "Predicate-filters",
      "Entity-fact"
    ],
    [
      "Entity-chai",
      "Predicate-supplies",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-chai",
      "Predicate-filters_facts_before_supplying_them_to_a_link_predictor",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-it_(5)",
      "Predicate-does_not_generate_queries_as",
      "Entity-oprl"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposed",
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_"
    ],
    [
      "Entity-we_(7)",
      "Predicate-proposed",
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_"
    ],
    [
      "Entity-such_rule",
      "Predicate-can_be_used_to_generate",
      "Entity-query"
    ],
    [
      "Entity-such_rule",
      "Predicate-generate",
      "Entity-query_soliciting_missing_fact"
    ],
    [
      "Entity-such_rule",
      "Predicate-can_be_used_to_generate",
      "Entity-query_soliciting_missing_fact"
    ],
    [
      "Entity-link_predictor",
      "Predicate-fed_to",
      "Entity-query"
    ],
    [
      "Entity-the_query_(1)",
      "Predicate-enabling",
      "Entity-a_fully_automated_framework_for_kg_completion"
    ],
    [
      "Entity-the_query_(1)",
      "Predicate-could_be_fed_to",
      "Entity-link_predictor"
    ],
    [
      "Entity-we_(7)",
      "Predicate-introduce",
      "Entity-novel_component"
    ],
    [
      "Entity-we_(7)",
      "Predicate-propose",
      "Entity-op_rule"
    ],
    [
      "Entity-op_rule",
      "Predicate-can_be_used_to_generate",
      "Entity-highly_relevant_query_for_missing_link"
    ],
    [
      "Entity-we_(7)",
      "Predicate-introducing_the_first_work_on",
      "Entity-active_knowledge_graph_completion"
    ],
    [
      "Entity-our_experiment_(1)",
      "Predicate-show_that",
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness"
    ],
    [
      "Entity-we_(7)",
      "Predicate-demonstrate_the_usefulness_of",
      "Entity-the_mined_rule_(2)"
    ],
    [
      "Entity-the_mined_rule_(2)",
      "Predicate-apply_to",
      "Entity-three_different_kg"
    ],
    [
      "Entity-our_proposed_method",
      "Predicate-outperforms",
      "Entity-the_baseline"
    ],
    [
      "Entity-challenge",
      "Predicate-remain",
      "Entity-there_remain_some_intriguing_challenge"
    ],
    [
      "Entity-some_intriguing_challenge",
      "Predicate-are",
      "Entity-future_work"
    ],
    [
      "Entity-oprl",
      "Predicate-extend_to_learn",
      "Entity-rule_with_more_complex_shape"
    ],
    [
      "Entity-oprl",
      "Predicate-learn_rules_with",
      "Entity-numerical_attribute"
    ],
    [
      "Entity-we_(9)",
      "Predicate-plan_to_extend",
      "Entity-oprl"
    ],
    [
      "Entity-oprl",
      "Predicate-pair_with",
      "Entity-link_predictor"
    ],
    [
      "Entity-we_(9)",
      "Predicate-plan_to_form_a_unified_framework_for_fully_automated_KG_completion",
      "Entity-fully_automated_kg_completion"
    ],
    [
      "Entity-oprl",
      "Predicate-trial",
      "Entity-a_setting_for_human-curated_maintenance_on_an_enterprise_kg"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-can_learn",
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-evaluate_using_adaptations_of",
      "Entity-poker_kg"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-uses",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-enables",
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-learn",
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-present",
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-is_effective",
      "Entity-our_algorithm_is_effective_over_very_large_kg"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-proposes",
      "Entity-this_paper_(2)"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-introduces",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-uses",
      "Entity-rule_mining_for_kg_completion"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-enable",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-uses",
      "Entity-oprl_find_high_quality_rule"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-generate",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-evaluates_using_adaptations_of_Freebase_YAGO2_Wikidata_and_a_synthetic_Poker_KG",
      "Entity-poker_kg"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-uses",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-evaluate",
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-relates_to",
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-can_learn",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-present",
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-is_effective_over",
      "Entity-our_algorithm_is_effective_over_very_large_kg"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-proposes",
      "Entity-this_paper_(2)"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-can_be_used_for",
      "Entity-rule_mining_for_kg_completion"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-can_learn",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-can_learn",
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-proposes",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-proposes",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-poker_kg",
      "Predicate-evaluates_using_adaptations_of",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "Predicate-uses",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-any_previous_approach",
      "Predicate-introduces",
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_"
    ],
    [
      "Entity-any_previous_approach",
      "Predicate-generates",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-introduces",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-introduces",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-proposes",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "Predicate-proposes",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-introduces",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion",
      "Predicate-introduces",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-uses",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "Predicate-introduces",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-proposes",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-any_previous_approach",
      "Predicate-generate",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-generates",
      "Entity-an_example"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-generates_queries",
      "Entity-an_example"
    ],
    [
      "Entity-any_previous_approach",
      "Predicate-introduces",
      "Entity-an_example"
    ],
    [
      "Entity-poker_kg",
      "Predicate-generates_queries_from",
      "Entity-an_example"
    ],
    [
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "Predicate-uses",
      "Entity-an_example"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-an_example"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-relates_to",
      "Entity-an_example"
    ],
    [
      "Entity-an_example",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-an_example",
      "Predicate-generates",
      "Entity-op_rule_from_a_range_of_kg"
    ],
    [
      "Entity-an_example",
      "Predicate-generates",
      "Entity-answer_fact"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-introduce",
      "Entity-an_example"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-proposes",
      "Entity-an_example"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "Predicate-generates_queries",
      "Entity-an_example"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes",
      "Entity-an_example"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion",
      "Predicate-generates",
      "Entity-an_example"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-uses",
      "Entity-an_example"
    ],
    [
      "Entity-an_example",
      "Predicate-generate",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-an_example",
      "Predicate-generates",
      "Entity-oprl_find_high_quality_rule"
    ],
    [
      "Entity-an_example",
      "Predicate-generate",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-poker_kg"
    ],
    [
      "Entity-poker_kg",
      "Predicate-relates_to",
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_"
    ],
    [
      "Entity-poker_kg",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-proposes",
      "Entity-poker_kg"
    ],
    [
      "Entity-poker_kg",
      "Predicate-proposes",
      "Entity-this_paper_(2)"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-used_in_experiments_for_evaluating",
      "Entity-poker_kg"
    ],
    [
      "Entity-poker_kg",
      "Predicate-can_now_mine",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-poker_kg",
      "Predicate-uses",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-enables",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion",
      "Predicate-enables",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-uses",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-uses",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "Predicate-enables",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-present",
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-proposes",
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-enable",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-demonstrates",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-present",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-can_learn",
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-used_to_evaluate_the_performance",
      "Entity-poker_kg"
    ],
    [
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "Predicate-uses",
      "Entity-op_rule_from_a_range_of_kg"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-evaluate",
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-enables",
      "Entity-op_rule_from_a_range_of_kg"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-present",
      "Entity-op_rule_from_a_range_of_kg"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "Predicate-is_effective_over",
      "Entity-op_rule_from_a_range_of_kg"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes",
      "Entity-op_rule_from_a_range_of_kg"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-used_for",
      "Entity-op_rule_from_a_range_of_kg"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "Predicate-can_now_mine",
      "Entity-op_rule_from_a_range_of_kg"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-finds",
      "Entity-op_rule_from_a_range_of_kg"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-enables",
      "Entity-answer_fact"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-generate_relevant_queries",
      "Entity-answer_fact"
    ],
    [
      "Entity-answer_fact",
      "Predicate-generates",
      "Entity-any_previous_approach"
    ],
    [
      "Entity-poker_kg",
      "Predicate-generate_relevant_queries",
      "Entity-answer_fact"
    ],
    [
      "Entity-answer_fact",
      "Predicate-uses",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-answer_fact"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-enables",
      "Entity-answer_fact"
    ],
    [
      "Entity-answer_fact",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-generate",
      "Entity-answer_fact"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-introduces",
      "Entity-answer_fact"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-propose",
      "Entity-answer_fact"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "Predicate-is_effective",
      "Entity-answer_fact"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes",
      "Entity-answer_fact"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion",
      "Predicate-can_be_used",
      "Entity-answer_fact"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-generate_relevant_queries_for_knowledge_graph_completion",
      "Entity-answer_fact"
    ],
    [
      "Entity-answer_fact",
      "Predicate-generate",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-answer_fact",
      "Predicate-generates",
      "Entity-oprl_find_high_quality_rule"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "Predicate-generate",
      "Entity-answer_fact"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "Predicate-propose",
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-can_learn",
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality"
    ],
    [
      "Entity-poker_kg",
      "Predicate-evaluates",
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-use",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-relates_to",
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-demonstrate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-propose",
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-propose",
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "Predicate-is_effective",
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes",
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-proposes",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-use",
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-propose",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "Predicate-proposes",
      "Entity-oprl_find_high_quality_rule"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "Predicate-can_be_used_(1)",
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "Predicate-evaluated_using",
      "Entity-poker_kg"
    ],
    [
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "Predicate-uses",
      "Entity-our_algorithm_is_effective_over_very_large_kg"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-our_algorithm_is_effective_over_very_large_kg"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-relates_to",
      "Entity-our_algorithm_is_effective_over_very_large_kg"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "Predicate-demonstrates",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-present",
      "Entity-our_algorithm_is_effective_over_very_large_kg"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "Predicate-proposes",
      "Entity-this_paper_(2)"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "Predicate-can_learn",
      "Entity-our_algorithm_is_effective_over_very_large_kg"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-this_paper_(2)"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes_an_approach_for",
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-proposes",
      "Entity-this_paper_(2)"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "Predicate-proposes",
      "Entity-this_paper_(2)"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-can_be_used_to_generate",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion",
      "Predicate-evaluates",
      "Entity-poker_kg"
    ],
    [
      "Entity-poker_kg",
      "Predicate-uses",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "Predicate-uses",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion",
      "Predicate-evaluate",
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-introduces",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-generate",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-introduce",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "Predicate-is_effective",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-can_be_used",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "Predicate-can_be_used_to_generate",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-can_be_used",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "Predicate-can_be_used_(1)",
      "Entity-op_rule_can_be_used_to_generate_highly_relevant_query_for_missing_link__introducing_the_first_work_on_active_knowledge_graph_completion"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-evaluate",
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-is_closely_related_to",
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-proposes",
      "Entity-rule_mining_for_kg_completion"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes",
      "Entity-rule_mining_for_kg_completion"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-can_now_mine_OP_rules_with_measurable_qualities_from_KGs",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "Predicate-present",
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule"
    ],
    [
      "Entity-poker_kg",
      "Predicate-evaluates_using_adaptations_of_Poker_KG",
      "Entity-oprl_find_high_quality_rule"
    ],
    [
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "Predicate-uses",
      "Entity-oprl_find_high_quality_rule"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-evaluate",
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-relates_to",
      "Entity-oprl_find_high_quality_rule"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-presents",
      "Entity-oprl_find_high_quality_rule"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-is_effective",
      "Entity-our_algorithm_is_effective_over_very_large_kg"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-proposes",
      "Entity-this_paper_(2)"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-uses",
      "Entity-oprl_find_high_quality_rule"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-generate",
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "Predicate-can_generate",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "Predicate-can_be_used_to_evaluate",
      "Entity-poker_kg"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "Predicate-enables",
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "Predicate-evaluate",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "Predicate-relates_to",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "Predicate-generate",
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "Predicate-generate",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "Predicate-present",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "Predicate-generate",
      "Entity-our_algorithm_is_effective_over_very_large_kg"
    ],
    [
      "Entity-this_paper_(2)",
      "Predicate-proposes",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-rule_mining_for_kg_completion",
      "Predicate-can_be_used",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "Predicate-generate",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "Predicate-can_be_used",
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion"
    ]
  ],
  "triples_typing": [
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-every_fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-instance"
    ],
    [
      "Entity-nation",
      "skos:broader",
      "Entity-country_(1)"
    ],
    [
      "Entity-e_1",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-in_shortest-first_order",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-specifically__the__i__j__th_element_a__pk___i__j___1_if_the_fact_pk__ei__ej__is_in_f__and_0_otherwise",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-for_learning_op_rule",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-usually_derived_from_a_holdback_test_set_in_experimental_setting",
      "skos:broader",
      "Entity-experimental_setting"
    ],
    [
      "Entity-and_a_rule-based_link_predictor",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-the_head_of_the_rule_(1)",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-a_query_with_one_correct_answer",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-pair"
    ],
    [
      "Entity-then__the_method_extends_the_set_of_entity_by_adding_entity_that_are_related_to_the_existing_entity_in_the_set_via_any_predicate__like_adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact_.",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-method_which_embed_the_predicate_into_vector",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-then_the_support_of_r_count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head_and_then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-akgc_task",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-rule-based_kg_completion",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-enterprise_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-missing_link",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-entity_forming_the_object_argument_of_the_tail_predicate",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-add_pathfinding__k___p_t__p__a__k_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-three_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-add_incpathfinding__k___p_t__p__a__k__r__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-p_t__e1__e2_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-scoring_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-e_2",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-these_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_continent_of_that_country__y__is_also_known",
      "skos:broader",
      "Entity-continent"
    ],
    [
      "Entity-it_embedding_representation",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-fb15kse",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-knowledge_graph_completion",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-then_pick_the_rule_with_opsupp__r___1",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-you",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-active_knowledge_graph_completion",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-entity_that_satisfy_the_first_argument_of_the_body",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-unified_framework",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-_1_0_0_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-the_body_of_this_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-nation",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-f__and_0_otherwise",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-a_novel_method_(1)",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-we_reduce_the_kg_size_because_existing_embedding-based_method_can_not_handle_vast_kg_.",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-p4__z2__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-it_embedding_representation_(1)",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-active_knowledge_graph_completion",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-for_example__the_following_op_rule__citizenof__x__t___livesin__x__z___state_that_if_an_entity__x__life_in_z",
      "skos:broader",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph__kg_",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-an_entity_already_present_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-experimentally",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-reduced_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-chai",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-how_to_efficiently_compute_the_measure",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-knowledge_graph_completion_approach"
    ],
    [
      "Entity-op_rule_from_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-e_2",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-only_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-non-zero_element_of_this_vector_indicates_a_satisfying_entity",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-our_argument_embeddings",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-e__e1__...__en_",
      "skos:broader",
      "Entity-set_of_entity"
    ],
    [
      "Entity-a_co-occurrence_fitness_function_for_mining_cp_rule",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-the_sampling_algorithm__sampling__",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-section_5_present_the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "skos:broader",
      "Entity-query_generation_task"
    ],
    [
      "Entity-learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-p_i-1",
      "skos:broader",
      "Entity-the_inverse"
    ],
    [
      "Entity-_p1__...__pm_",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-in_closed_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-it_is_likely_that_the_place_of_birth_of_that_person",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-_e_1__e_2__e_3__e_4__e_5_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_redundancy_elimination_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-relevant_question",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-in_the_absence_of_any_comparative_system",
      "skos:broader",
      "Entity-comparative_system"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-nation"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-m_1_and_m_2",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-industrial_application"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-pathfinding__"
    ],
    [
      "Entity-e1_and_e2",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-rlvlr_and_scalekb_use_so-called_closed_path__cp__rule_that_are_a_kind_of_closed_rule_with_no_free_variable",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-enterprise_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-let_k___e__f__be_a_kg_.",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-a_pair_of_entity_(2)",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-link_prediction"
    ],
    [
      "Entity-existential_rule_from_knowledge_graph",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-massive_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-entity_(2)",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-for_learning_op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-hybrid_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-pathfinding___(2)",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-that_ha_a_participant__w_",
      "skos:broader",
      "Entity-participant"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-rule_mining"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-an_entity_e",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-representation_learning",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-an_entity_x",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-sampling__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-opscophc_threshold",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-_0_0_2_",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-new_fact_in_the_kg",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-predicate_and_argument_in_the_sample_kg",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-a_pair_of_entity_(2)",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-it_embedding_representation",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-our_proposed_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-the_pair__e__e___satisfying_the_body_are_connected_by",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-query_from_op_rule",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-by_instantiating_the_body_of_this_rule_a_follows__livesin__bronte__canberra___we_could_infer_the_query__citizenof__bronte____.",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-highly_relevant_query_for_missing_link",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-vast_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-they_fail_to_record_relevant_entity__a_well_a_relevant_relationship_for_the_entity_they_do_record",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-occupation__w__y_",
      "skos:broader",
      "Entity-class_attribute"
    ],
    [
      "Entity-system",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-_e_3__e_4__e_5_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-citizenof"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-object_argument",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-relevant_question",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-method_for_automatic_completion",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-sam",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-open_path__op__rule_that_are_constrained_existential_rule",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-occupation__w__y_",
      "skos:broader",
      "Entity-attribute__suit_and_rank_"
    ],
    [
      "Entity-all_the_mined_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-evaluation__",
      "skos:broader",
      "Entity-scoring_function"
    ],
    [
      "Entity-an_entity_e",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-rule_learning_from_a_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_rule_form_a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-there_remain_some_intriguing_challenge",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-target_predicate_in_the_head__p",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-scalekb",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-opsc_and_ophc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-in_this_way",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-knowledge_graph_completion_and_rule_learning"
    ],
    [
      "Entity-very_large_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-top_candidate_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-target",
      "skos:broader",
      "Entity-our_objective"
    ],
    [
      "Entity-the_body_and_the_head_of_a_cp_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_following_cp_rule__iscitizenof__x__y___isbornin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-each_entity_e_i"
    ],
    [
      "Entity-oprl_can_learn_plausible_rule_over_popular_benchmark_kg_of_over_eight_million_fact_and_four_million_entity_in_less_than_two_hour",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-_e___e_",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-a__pk_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-entity_that_are_related_to_the_existing_entity_in_the_set",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-country__z__w_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-rule_learner"
    ],
    [
      "Entity-opsc_threshold",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-participant__z__w_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-p_i",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-e_9",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-pathfinding__",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-evaluation",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-for_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-evaluation_method"
    ],
    [
      "Entity-our_second_set_of_experiment",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-it_embedding_representation_(1)",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-_(1)",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-prand",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-we_use_the_sampling_algorithm__sampling____proposed_in_rlvlr",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-livesin__x__z_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-embedding",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-high-performing_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-an_entity_e_(1)",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-pathfinding__",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-entity_resolution",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-100__hc_and_sc",
      "skos:broader",
      "Entity-sc"
    ],
    [
      "Entity-an_op_rule_of_the_form__2_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-p_n",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-rlvlr_algorithm",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-an_entity_involved_in_the_missing_fact",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-evaluating_op_rule__we_propose_an_efficient_method_to_exactly_compute_the_quality_of_each_rule_by_matrix_and_vector_operation_.",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-parameter__a_max_rule_length_l__minopsc_and_minophc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-only_50_randomly_selected_predicate_are_targeted",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-the_object_argument_of_p_n",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-z1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-you_have_a_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-for_entity",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-future_work",
      "skos:broader",
      "Entity-our_work"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-knowledge_graph_completion_and_rule_learning",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-a_query_is_counted_a_true_if_it_ha_an_instance_fact_in_the_test_data_and_false_otherwise",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-_z_",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-0.19",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-link_prediction"
    ],
    [
      "Entity-a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-yago2_core",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-chai",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-how_to_efficiently_compute_the_measure",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set",
      "skos:broader",
      "Entity-test_set"
    ],
    [
      "Entity-city_of_residence_and_the_nation_in_which_that_city_is_located",
      "skos:broader",
      "Entity-nation"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-a_co-occurrence_fitness_function_for_mining_cp_rule",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-kg_sampling",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_candidate_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-entity_forming_the_object_argument_of_the_tail_predicate",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-having_previously_filtered_out_query_that_can_be_answered_from_the_training_set",
      "skos:broader",
      "Entity-training_data"
    ],
    [
      "Entity-that_is_known_to_the_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-for_predicate_p",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-each_argument",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-rule_body",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-pair_of_entity",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-about_a_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-_e__e___satisfies_the_body_of_r",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-definition_1",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-z1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-early_exploration_published_in_.",
      "skos:broader",
      "Entity-article"
    ],
    [
      "Entity-r__p1__x__z0___p2__z0__z1___p3__z1__y_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-towards_learning_existential_rule_from_knowledge_graph",
      "skos:broader",
      "Entity-existential_rule"
    ],
    [
      "Entity-a_redundancy_elimination_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-this_begs_the_question__whence_doe_the_query_arise_in_an_industrial_application_of_a_link_prediction_model_",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-while_every_instantiation_of_a_cp_rule_is_also_an_instantiation_of_a_corresponding_op_rule",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-repeatable_pattern",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-embeddings_learned_by_rescal",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-rule-based_method_learn_closed__non-existential__rule",
      "skos:broader",
      "Entity-learnt_rule"
    ],
    [
      "Entity-for_example__the_following_op_rule__citizenof__x__t___livesin__x__z___state_that_if_an_entity__x__life_in_z",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-a_shared_entity_in_place_of_z0",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-the_mined_rule_(1)",
      "skos:broader",
      "Entity-the_mined_rule"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-open_path_(1)"
    ],
    [
      "Entity-and_a_rule-based_link_predictor",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-argument_embeddings_in_rlvlr",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-the_answer_fact_are_missing_from_the_training_set",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-but_only_a_question_.",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-rule_learning_system",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_rule_that_ha_both_100__hc_and_sc_explains_every_fact_in_the_kg_that_is_an_instance_of_it_head_and_is_redundant_with_respect_to_the_kg_.",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-bronte",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-to_ask_the_best_question_to_complete_a_kg_.",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-oprl_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-cp",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-open_path_fitness",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_place_or_a_person",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-city_of_residence_and_the_nation_in_which_that_city_is_located",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-fewer_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-run_time_in_hour__averaged_over_the_target",
      "skos:broader",
      "Entity-run_time"
    ],
    [
      "Entity-_e1__e2__e3_",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-placeofbirth",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-e_2",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-count",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-_a__pk___k___1__...__m__",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-a_link_predictor_(3)",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-each_card_is_described_using_two_attribute__suit_and_rank___for_a_total_of_10_predictive_attribute",
      "skos:broader",
      "Entity-predictive_attribute"
    ],
    [
      "Entity-query",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-e_4",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-an_entity_already_present_in_the_kg",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-sampling__",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-for_the_example__we_have_only_e3_in_the_set_with_a_count_of_1",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown",
      "skos:broader",
      "Entity-knowledge_graph_completion_approach"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_usual_closed_path_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rule_with_free_variable_(1)",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-a",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-a_method_is_required_to_check_the_satisfiability_of_body_atom_of_all_candidate_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-proposing_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-_3_",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-traditional_knowledge_graph_completion"
    ],
    [
      "Entity-fact",
      "skos:broader",
      "Entity-specific_fact"
    ],
    [
      "Entity-various_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-answer",
      "skos:broader",
      "Entity-solution"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-e_5",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-several_direction_for_future_research_to_handle_existential_rule_learning",
      "skos:broader",
      "Entity-existential_rule"
    ],
    [
      "Entity-full_benchmark_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-a_fact_is_missing_even_when_there_is_evidence_for_only_one_entity_of_the_pair__and_a_question_is_generated_accordingly",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-the_full_benchmark_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-method_for_automatic_completion",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-_p_k_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-the_problem_of_knowledge_graph_completion"
    ],
    [
      "Entity-missing_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-e_4",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-akgc_task",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-non-zero_element_of_v__2___p1_",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-presidentof__obama___",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-to_compute",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_akgc_task",
      "skos:broader",
      "Entity-akgc_task"
    ],
    [
      "Entity-but_only_a_question_.",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-of_a_predicate_p_are_vector_defined_respectively_a_",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-missing_entity",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-_local_co-occurrence_fitness_",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-a",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_query_(1)",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-towards_learning_existential_rule_from_knowledge_graph",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-entity_e_and_e_",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-probabilistic-based_query_generator",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-derived_from_the_closed_path_form__definition_2__.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-two_attribute__suit_and_rank_",
      "skos:broader",
      "Entity-class_attribute"
    ],
    [
      "Entity-akgc_task",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-a_novel_embedding-based_fitness_function",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-open_path_(1)"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-fact_in_the_kg"
    ],
    [
      "Entity-we_(7)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-for_entity_e__we_write_it_embedding_vector_a_e",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-z_2",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-embeddings_learned_by_rescal",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-definition_4"
    ],
    [
      "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-livesin"
    ],
    [
      "Entity-_e__e___satisfying_the_body",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-evaluation",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-noisy-or",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-they_(3)",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_pair_of_entity_(1)",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-with_satisfying_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-two_set_of_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-we_reduce_the_kg_size_because_existing_embedding-based_method_can_not_handle_vast_kg_.",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-and_a_rule-based_link_predictor",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-f_coo",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-highestpoint__z__x_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-an_automated_link_predictor",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-prand",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-experimentally",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-traditional_link_prediction_system",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-a_reduced_deck_with_6_rank_and_2_suit",
      "skos:broader",
      "Entity-suit"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-studiesin__x__z_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-this_set_of_query",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_sampling_algorithm__sampling__",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-embedding-based_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-initial_set_of_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-p___i1_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-existential_rule_with_a_different_form_to_the_usual_closed_path_rule_that_are_conventionally_used_for_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-we_reduce_the_kg_size_because_existing_embedding-based_method_can_not_handle_vast_kg_.",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-the_subject_argument_of_p_t",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-in_the_set_with_a_count_of_1_.",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-experimentally",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-_e__e___satisfying_the_body",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-various_method_have_been_proposed_to_construct_embeddings",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-with_satisfying_entity",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-the_sampling_algorithm__sampling__",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-for_example__from_the_rule_citizenof__x__y___livesin__x__z___locatedin__z__y___if_we_have_the_fact_in_the_kg__livesin__bronte__canberra__and_locatedin__canberra__australia___then_we_can_infer_and_assert_the_following_new_fact_in_the_kg__citizenof__bronte__australia__.",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-the_first_focus_on_entity_and_the_second_on_predicate",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-that_can_induce_q_from_the_given_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-embedding_model",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-citizenof",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-e2",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-very_large_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-after_computing_embeddings",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-we_evaluate_oprl",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-false_instead_of_true",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-the_architecture_of_rlvlr_that_learns_cp_rule",
      "skos:broader",
      "Entity-rlvlr"
    ],
    [
      "Entity-e0",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-for_learning_op_rule",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-a_link_predictor_(2)",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-such_that_all_of__p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-fact_in_the_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-an_example",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-of_the_way_that_the_body_is_satisfied_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-op_rule_for_a_target_predicate_p_i_and_it_inverse_p_i-1_in_pathfinding__",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-representation_learning",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-evaluating_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-p_2",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-_e1__e2__e3_",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-embedding",
      "skos:broader",
      "Entity-each_entity_e_i"
    ],
    [
      "Entity-redundancy_elimination_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-each_fact_generated_by_rlvlr",
      "skos:broader",
      "Entity-rlvlr"
    ],
    [
      "Entity-f_op__._",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-we_need_to_find_all_kg_fact_that_can_trigger_a_candidate_rule",
      "skos:broader",
      "Entity-candidate_rule"
    ],
    [
      "Entity-any_previous_approach",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-open_path__op__rule",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-e_3",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-e2_and_e3",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-0.19",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-the_number_of_entity_that_satisfy_the_body_of_a_rule",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-representation_learning",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-rule-based_kg_completion",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_top_10__of_the_op_rule_according_to_the_fitness_function",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_fact_pk__ei__ej_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-knowledge_graph_completion_task"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-definition_6",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-target_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-new_short_op_rule",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-definition_2",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-this_begs_the_question",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-pairwise_local_fitness_function_are_defined_accordingly",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-let_r_be_a_cp_rule_of_the_form_given_earlier_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-100",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-e_",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-fitness_function_adapted_from_rlvlr",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-e_3",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-evaluate__",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-open-ended_question__e.g_._citizenof__ann_____instead_of_fact__e.g_._citizenof__ann__australia__",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-in_this_way",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-to_rapidly_estimate_a_rule_s_quality",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-we_use_a_maximum_rule_length_of_4_for_pathfinding__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-two_main_category_are_translation-based_embeddings_and_compositional_embeddings",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-conventionally__this_known-missing_fact_is_used_to_generate_the_following_two_relevant_query_presidentof____usa__and_presidentof__obama___",
      "skos:broader",
      "Entity-query_generation_task"
    ],
    [
      "Entity-presidentof__obama__usa_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-that_can_induce_q_from_the_given_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-the_former",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-hc_measure",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_entity_that_satisfy_the_first_argument_of_p_t",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-for_op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-p1__p2__...__pm",
      "skos:broader",
      "Entity-sequential_entity"
    ],
    [
      "Entity-they",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-denoted_p_h__e__e____if_p_h__e__e___is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-thus__a__pk__is_a_matrix_of_binary_value_and_the_set__a__pk___k___1__...__m___represents_k",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-according_to_the_fitness_function",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-novel_method_to_rapidly_estimate_the_quality_of_each_candidate_rule_for_early_pruning",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-entity_that_are_related_to_the_existing_entity_in_the_set",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-the_optimum_obtained_by_tuning",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-yago2_induces_fewer_rule_and_ha_much_weaker_performance_because_it_ha_significantly_fewer_repeatable_pattern",
      "skos:broader",
      "Entity-observation"
    ],
    [
      "Entity-evaluating_op_rule",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-obama",
      "skos:broader",
      "Entity-nation"
    ],
    [
      "Entity-precision",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-candidate_rule_by_opsc_and_ophc_in_evaluate__",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-entity_that_satisfy_the_first_argument_of_the_body",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1",
      "skos:broader",
      "Entity-inference"
    ],
    [
      "Entity-fully_automated_kg_completion",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-cd",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-a",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-the_answer_fact_are_missing_from_the_training_set",
      "skos:broader",
      "Entity-training_data"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-a_low-dimensional_vector_space_of_latent__unnamed_feature_not_present_in_the_kg_vocabulary",
      "skos:broader",
      "Entity-latent_feature"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-complete_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-our_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-livesin__x__z__(1)"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_distribution_of_mined_rule_by_opsc_and_length",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-closed_path_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-traditional_knowledge_graph_completion",
      "skos:broader",
      "Entity-topic"
    ],
    [
      "Entity-_3_",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-q",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-open_path__op__rule_that_are_constrained_existential_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-reduced_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-f_coo",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-knowledge_graph_completion_and_rule_learning",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-we_address_the_following_problem_in_traditional_knowledge_graph_completion",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-placeofbirth",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_novel_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-open-ended_question__e.g_._citizenof__ann_____instead_of_fact__e.g_._citizenof__ann__australia__",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-an_op_rule",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-the_kg_to_propose_missing_fact",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-sam",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-our_novel_oprl",
      "skos:broader",
      "Entity-oprl"
    ],
    [
      "Entity-to_compute_opsc_and_ophc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-co-occurrence",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-e_4",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-our_agkgc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e__",
      "skos:broader",
      "Entity-rule_body"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_actively_generated_question",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-knowledge_graph_completion_and_rule_learning",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-link_prediction_and_active_knowledge_graph_completion",
      "skos:broader",
      "Entity-topic"
    ],
    [
      "Entity-a_significant_number_of_obsolete_and_low-quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-traditional_knowledge_graph_completion"
    ],
    [
      "Entity-a_pair_of_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-recall",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-to_find_relevant_query__we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-it_embedding_representation_(1)",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-over_a_working_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-all_predicate_in_the_respective_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-representation_learning_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_baseline_query_generator_prand",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-_e__e___satisfies_the_head_of_r",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown",
      "skos:broader",
      "Entity-the_problem_of_knowledge_graph_completion"
    ],
    [
      "Entity-it_ha",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-evaluation_method"
    ],
    [
      "Entity-a_redundancy_elimination_method",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-in_a_country__w_",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-it",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-method_for_automatic_completion__sometimes_by_rule_learning__scale_well_.",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-open_path_standard_confidence",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-r_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-this_observation_(1)",
      "skos:broader",
      "Entity-observation"
    ],
    [
      "Entity-rlvlr_algorithm",
      "skos:broader",
      "Entity-rlvlr"
    ],
    [
      "Entity-occupation__w__y_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-citizenof__x__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-instance",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head",
      "skos:broader",
      "Entity-rule_learning"
    ],
    [
      "Entity-the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "skos:broader",
      "Entity-generated_query"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-first",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-each_p_i_and_p_t_are_predicate_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-co-occurrence_fitness_function",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-up_to_8_m_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-the_top_10__of_the_op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_first_rule_state_that_if_the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-e__e_",
      "skos:broader",
      "Entity-known_unknown"
    ],
    [
      "Entity-rule_with_free_variable",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-q",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-redundancy_elimination_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-for_learning_op_rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-reduced_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-evaluating_link_predictor",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-classic_version",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-each_poker_hand",
      "skos:broader",
      "Entity-poker_hand_"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_product_of_the_predicate_embeddings_along_the_path",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-increasing_precision_a_more_missing_fact_are_found",
      "skos:broader",
      "Entity-precision"
    ],
    [
      "Entity-previous_rule-based_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-this_aggregation",
      "skos:broader",
      "Entity-aggregation"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-increasing_precision_a_more_missing_fact_are_found",
      "skos:broader",
      "Entity-average_precision"
    ],
    [
      "Entity-and_a_rule-based_link_predictor",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-0.45",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-rule-based_kg_completion",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-_p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-two_main_category_are_translation-based_embeddings_and_compositional_embeddings",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-in_knowledge_graph_completion"
    ],
    [
      "Entity-predicate_a_weight_matrix",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-definition_4",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-towards_learning_existential_rule_from_knowledge_graph",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-the_whole_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-chai_filter_fact_before_supplying_them_to_a_link_predictor",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_actively_generated_question",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-sequential_entity_along_the_path",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-this_way",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-e__e_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-the_mined_rule",
      "skos:broader",
      "Entity-mined_rule"
    ],
    [
      "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-technique",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-traditional_knowledge_graph",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-optimum",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-pathfinding__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-sampling__",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-incpathfinding",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-2.1",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-very_large_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-a__pk___i__j_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-method_for_automatic_completion",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-probabilistic_baseline",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-the_fitness_function_adapted_from_rlvlr",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-a_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-test_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-rescal_evaluation_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-presenter",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-evaluation_method"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-traditional_link_prediction_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-v__1___b_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-method_for_automatic_completion",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-by_rule_learning",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-we_assess_(1)",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-non-zero_element_of_this_vector",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-citizenof__x__y__livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-entity_that_are_relevant_to_a_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rescal_evaluation_function_for_a_single_predicate",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-pairwise_local_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-and_a_rule-based_link_predictor",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-vector_multiplication",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-for_pathfinding__",
      "skos:broader",
      "Entity-pathfinding__"
    ],
    [
      "Entity-the_least_acceptable_opsc_and_ophc_score",
      "skos:broader",
      "Entity-opsc"
    ],
    [
      "Entity-novel_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-possible_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-evaluation",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-for_our_active_knowledge_graph_completion_task"
    ],
    [
      "Entity-embeddings_learned_by_rescal",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-e_3",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-a_link_predictor_(2)",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-p_2__z_0__z_1___p_3__z_1__y_",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-r_",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-_2__(1)",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-it_(4)",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-o_e",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-e_8",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-head_coverage__hc_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown",
      "skos:broader",
      "Entity-knowledge_graph_completion_task"
    ],
    [
      "Entity-a_set_of_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-fb15k_selected",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-evaluation",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-existential_rule_from_knowledge_graph",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-evaluate__",
      "skos:broader",
      "Entity-scoring_function"
    ],
    [
      "Entity-evaluating_link_predictor",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-weight_matrix"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-in_section_6_we_formalise_the_new_quality_notion_of_query_relevance_and_discus_the_result_of_a_range_of_experiment_with_our_novel_oprl",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-subject_and_object_argument",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-yago2_core",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-in_section_6_we_formalise_the_new_quality_notion_of_query_relevance_and_discus_the_result_of_a_range_of_experiment_with_our_novel_oprl",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-livesin_(1)"
    ],
    [
      "Entity-prand",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-two_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-on_the_other_hand__in_an_op_rule_like_citizenof__x__t___marriedto__x__z___parentof__z__y_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-very_large_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-for_our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-knowledge_graph_completion_and_rule_learning"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_head_of_the_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-we_(4)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-entity_satisfying_the_subject_argument_of_the_head_predicate__p_t",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-entity_forming_the_object_argument_of_the_tail_predicate",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-co-occurrence",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-the_mined_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-formally__the_cd_of_q_is_defined_a_follows_for_a_query_q__p____e___or_q__p__e____and_the_collection_of_rule_r_that_can_induce_q_from_the_given_kg_",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-that_is_known_to_the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-and_a_rule-based_link_predictor",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-let_r_be_an_open_path_rule_of_the_form__2__.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-thus__a__pk__is_a_matrix_of_binary_value_and_the_set__a__pk___k___1__...__m___represents_k",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-a_perfect_link_predictor_(1)",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-we_sum_each_row_corresponding_to_each_value_for_the_first_argument",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-our_novel_hybrid_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-fb15kse",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-star",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-two_matrix_m_1_and_m_2",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-evaluation_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-after_computing_embeddings",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-op_rule_formalism",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-a_perfect_link_predictor_(1)",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-entity_that_satisfy_the_second_argument_of_the_head",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-and_we_allow_the_extension_to_6_by_incpathfinding__",
      "skos:broader",
      "Entity-incpathfinding"
    ],
    [
      "Entity-s_p",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-the_formalism_of_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-representation_learning_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-opscophc_score",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-after_computing_embeddings",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-every_fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-each_entity_e_i",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-e_9",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-p_i",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-of_the_same_cardinality_a_those_generated_from_oprl__called_prand",
      "skos:broader",
      "Entity-prand"
    ],
    [
      "Entity-p1__p2__...__pm",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-e_2",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-op_rule_from_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-unlike_earlier_work",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-the_co-occurrence_of_z_0_a_the_object_argument_of_p_t_and_subject_argument_of_p_1__and_z_i__1__i__n_-_1__a_the_object_argument_of_p_i_and_subject_argument_of_p___i1_",
      "skos:broader",
      "Entity-co-occurrence_capture_the_weight_of_connection_of_sequential_entity_along_the_path"
    ],
    [
      "Entity-we_have_the_following_fact_about_the_target_predicate__p_1",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-target_predicate_p",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-_e_1__e_2__e_3__e_4__e_5_",
      "skos:broader",
      "Entity-set_of_entity"
    ],
    [
      "Entity-f_op",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-o_p",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-horn_rule",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-the_result",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-r_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-a_correct_and_complete_kg_for_experiment",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-highly_relevant_query_for_missing_link",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-yago2_core",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-city_of_residence_and_the_nation_in_which_that_city_is_located",
      "skos:broader",
      "Entity-country_(1)"
    ],
    [
      "Entity-those_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-standard_confidence",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-complete_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-specific_fact_that__if_true__are_missing_from_the_kg",
      "skos:broader",
      "Entity-definition_4"
    ],
    [
      "Entity-the_building_method",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-the_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-opsc_threshold",
      "skos:broader",
      "Entity-setting"
    ],
    [
      "Entity-answer_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-occupation",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-enterprise_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-a_link_predictor_(2)",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-scope",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-that_is_known_to_the_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-specifically__the__i__j__th_element_a__pk___i__j___1_if_the_fact_pk__ei__ej__is_in_f__and_0_otherwise",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-open_path_rule"
    ],
    [
      "Entity-_e1__e2__e3_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-two_main_category_are_translation-based_embeddings_and_compositional_embeddings",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_first_rule_state_that_if_the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-for_the_example",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-p_t__e___e_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-kg_k",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_full_benchmark_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-pathfinding__",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-incpathfinding",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-_4_",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-each_p_i_and_p_t_are_predicate_in_the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-massive_kg_in_a_reasonable_time",
      "skos:broader",
      "Entity-evaluation_method"
    ],
    [
      "Entity-the_subject_and_object_argument_of_a_predicate_p",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-the_open_path_fitness_function",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-heuristic",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-spouse",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-varying_it_from_0.1_to_1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-two_main_category_are_translation-based_embeddings_and_compositional_embeddings",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-embeddings_learned_by_rescal",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-product_calculus",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-each_instance",
      "skos:broader",
      "Entity-instance"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-_e__f_"
    ],
    [
      "Entity-we_define",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-each_entity_e_i",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-a_pair_of_entity_(2)",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-an_instantiation_of_a_corresponding_op_rule",
      "skos:broader",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-synthetic_poker",
      "skos:broader",
      "Entity-poker"
    ],
    [
      "Entity-vast_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-a_ranked_sequence_of_answer",
      "skos:broader",
      "Entity-sequential_entity"
    ],
    [
      "Entity-z3",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-generate_query_of_the_form_p____e___and_p__e___",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-_e1__e2__e3_",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-novel_method_to_estimate_the_quality_of_each_candidate_rule_based_on_it_embedding_representation",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_sampling_algorithm__sampling__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-0.45",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-p2__z0__z1_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-pathfinding___(1)",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-_x__z_i__y_",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-the_rule_is_true",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-an_entity_e",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-subject_argument",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-those_proposed_in_rlvlr",
      "skos:broader",
      "Entity-this_paper"
    ],
    [
      "Entity-our_proposed_system",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-2.1",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-by_instantiating_the_body_of_this_rule_a_follows__livesin__bronte__canberra___we_could_infer_the_query__citizenof__bronte____.",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-our_novel_heuristic_function_for_mining_op_rule",
      "skos:broader",
      "Entity-heuristic"
    ],
    [
      "Entity-r_is_defined_a",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-livesin__x__z_"
    ],
    [
      "Entity-our_argument_embeddings",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-in_a_country__w_",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-b",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-e_5",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-max_operator",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-from_an_op_rule__two_cp_rule_are_logical_consequence__one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-to_evaluate_our_system",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-representation_learning",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-rule_learning"
    ],
    [
      "Entity-very_high_precision",
      "skos:broader",
      "Entity-precision"
    ],
    [
      "Entity-the_full_benchmark_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-pathfinding___(3)",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-each_p_i_and_p_t_are_predicate_in_the_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-each_rule_on_generation_to_rapidly_discard_poor_performer",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-very_high_precision",
      "skos:broader",
      "Entity-average_precision"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-link_predictor_in_the_knowledge_graph_completion_process",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-representation_learning",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-sample_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-we_conducted_an_experiment",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-the_plausibility_of_a_fact",
      "skos:broader",
      "Entity-the_plausibility"
    ],
    [
      "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-we_conducted_an_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-question",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-for_example__the_following_op_rule__citizenof__x__t___livesin__x__z___state_that_if_an_entity__x__life_in_z",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_method_(1)",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-existential_rule_learning",
      "skos:broader",
      "Entity-topic"
    ],
    [
      "Entity-country",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-pairwise_multiplication",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-several_direction_for_future_research_to_handle_existential_rule_learning",
      "skos:broader",
      "Entity-future_research"
    ],
    [
      "Entity-open_access_article",
      "skos:broader",
      "Entity-article"
    ],
    [
      "Entity-adjacency_matrix_representation_of_the_kg",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-number_of_time",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-a_hybrid_approach_is_preferable__see_table_3_",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-it_embedding_representation_(1)",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-p4__z2__y_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-first",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-freebase",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity__and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b__.",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-an_entity_involved_in_the_missing_fact",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-r_",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-we_have_only_e3",
      "skos:broader",
      "Entity-e3"
    ],
    [
      "Entity-_e_1__e_2__e_3__e_4__e_5_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-embedding",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-rule_learning_from_a_kg",
      "skos:broader",
      "Entity-topic"
    ],
    [
      "Entity-rescal_is_unable_to_handle_yago2_.",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-our_test_set",
      "skos:broader",
      "Entity-test_set"
    ],
    [
      "Entity-for_entity",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-knowledge_graph_completion_approach"
    ],
    [
      "Entity-rule_learning_system_employ_a_rule_language_to_express_rule_.",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-which_can_instantiate_z_0_to_satisfy_both_p_1__x__z_0__and_p_2__z_0__z_1___p_3__z_1__y_",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown",
      "skos:broader",
      "Entity-for_our_active_knowledge_graph_completion_task"
    ],
    [
      "Entity-first",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-various_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-and_an_object_argument_in_the_second_position",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-the_method_for_computing_opsc_and_ophc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-previous_rule-based_method",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-a_probabilistic_baseline",
      "skos:broader",
      "Entity-baseline"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_performance_of_fitness_function_proposed_for_oprl",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-novel_heuristic_function",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-embedding_model",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-entity_satisfying_the_subject_argument_of_the_head_predicate__p_t",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-query_that_can_be_answered_from_the_training_set",
      "skos:broader",
      "Entity-training_data"
    ],
    [
      "Entity-the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-the_initial_set_of_fact_which_it_aim_to_filter",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-head",
      "skos:broader",
      "Entity-target"
    ],
    [
      "Entity-object_argument_of_p_n",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-our_op_rule_miner__oprl",
      "skos:broader",
      "Entity-oprl"
    ],
    [
      "Entity-rlvlr__doe",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-rule-based_method_learn_closed__non-existential__rule",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-yago2",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-f_op",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-previous_rule-based_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-over_eight_million_fact_and_four_million_entity",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-the_first_method_to_learn_rule_to_generate_relevant_question_automatically",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-our_proposed_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-let_r_be_an_op_rule_of_the_form_given_earlier_.",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-d",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-to_evaluate_our_system",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-e__e1__...__en_",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-a_shared_entity_in_place_of_z0",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-new_fact_in_the_kg",
      "skos:broader",
      "Entity-fact_in_the_kg"
    ],
    [
      "Entity-a_fully_automated_framework_for_kg_completion",
      "skos:broader",
      "Entity-fully_automated_kg_completion"
    ],
    [
      "Entity-p3__z1__y_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-prand_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-thus__if_the_body_of_each_rule_is_instantiated_but_there_is_no_fact_to_fully_instantiate_the_head_of_the_rule__a_relevant_query_is_induced_.",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-noisy-or",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-then_the_support_of_r_count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-we_will_use_the_mined_rule_for_generating_query__so_we_need_some_hold-out_fact_for_query_evaluation_.",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-place_of_birth",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-opsc_and_ophc_(2)",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-this_(1)",
      "skos:broader",
      "Entity-article"
    ],
    [
      "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-p_1__e_9__e_7_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-scoring_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-_e_3__e_4__e_5_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-co-occurrence",
      "skos:broader",
      "Entity-co-occurrence_capture_the_weight_of_connection_of_sequential_entity_along_the_path"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-fb15k_selected__which_we_call_fb15kse_",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-entity_and_predicate",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-in_order_to_generate_query_that_predict_those_same_fact",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-sampled_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-rule-based_link_predictor",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-an_entity_already_present_in_the_kg",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-poker_hand_",
      "skos:broader",
      "Entity-poker"
    ],
    [
      "Entity-livesin",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-a_specific_target_predicate_in_the_head__p_.",
      "skos:broader",
      "Entity-target"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-the_head",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-complete_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-a_region__z_",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-quality_opsc__0.1_and_ophc__0.01",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-canberra",
      "skos:broader",
      "Entity-city"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-the_sampling_algorithm__sampling__",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_mined_rule_(2)",
      "skos:broader",
      "Entity-mined_rule"
    ],
    [
      "Entity-one_correct_answer",
      "skos:broader",
      "Entity-answer"
    ],
    [
      "Entity-formally__the_cd_of_q_is_defined_a_follows_for_a_query_q__p____e___or_q__p__e____and_the_collection_of_rule_r_that_can_induce_q_from_the_given_kg_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-n",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-entity_that_are_related_to_the_existing_entity_in_the_set",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-0.19",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-continent",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-top_candidate_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-yago2",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-that_ha_an_occupation__y_",
      "skos:broader",
      "Entity-occupation"
    ],
    [
      "Entity-the_body_and_the_head_of_a_cp_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-movie_produced_in_some_country",
      "skos:broader",
      "Entity-product"
    ],
    [
      "Entity-a_rule_that_ha_both_100__hc_and_sc_explains_every_fact_in_the_kg_that_is_an_instance_of_it_head_and_is_redundant_with_respect_to_the_kg_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-these",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-r_be_an_op_rule_of_the_form__2_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-_4_",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-p_1____e_2_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-e_4",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-query_evaluation",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-it_head_and_body",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-inference_module",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-sc",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-the_product_of_the_predicate_embeddings_along_the_path",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-open_path_head_coverage_of_r",
      "skos:broader",
      "Entity-class_attribute"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-high-performing_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-the_compositional_embeddings",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-f_op",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-all_predicate_in_the_respective_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-p2__z0__z1_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-query_soliciting_missing_fact",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_open_path_fitness_function",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-open_path_head_coverage_of_r",
      "skos:broader",
      "Entity-attribute__suit_and_rank_"
    ],
    [
      "Entity-evaluation_method",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-co-occurrence"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-representation_learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-this_begs_the_question__whence_doe_the_query_arise_in_an_industrial_application_of_a_link_prediction_model_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-an_instantiation_of_a_corresponding_op_rule",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-from_an_instantiation_of_the_body_of_an_op_rule__we_can_not_infer_a_fact",
      "skos:broader",
      "Entity-inference"
    ],
    [
      "Entity-in_both_case_e_is_often_a_city",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-rule_with_more_complex_shape__such_a_star",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-an_entity_already_present_in_the_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-representation_learning_method",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-argument_embeddings_in_rlvlr",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-the_path_p1__p2__...__pm",
      "skos:broader",
      "Entity-sequential_entity"
    ],
    [
      "Entity-sampling__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-evaluation_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining_.",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-problem_of_active_knowledge_graph_completion__akgc_",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-sampling__k__p_",
      "skos:broader",
      "Entity-sampling"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-e_8",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-algorithm",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-using_an_adjacency_matrix_representation_of_the_kg",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-the_utility_of_our_fitness_function",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-our_algorithm",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-representation_learning_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-with_numerical_attribute",
      "skos:broader",
      "Entity-class_attribute"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-e1_and_e2",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-experiment",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-fact__also_known_a_a_link_",
      "skos:broader",
      "Entity-link"
    ],
    [
      "Entity-our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-a_link_predictor_(2)",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-method_for_automatic_completion",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-_e__e___satisfying_the_body",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-probabilistic-based_query_generator",
      "skos:broader",
      "Entity-process_for_generating_relevant_query"
    ],
    [
      "Entity-in_this_section__we_show_how_the_mined_rule_can_be_used_for_akgc",
      "skos:broader",
      "Entity-akgc_task"
    ],
    [
      "Entity-the_method",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-confidence",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_performance_of_fitness_function_proposed_for_oprl",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-with_satisfying_entity",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-the_top_t__of_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-conventionally__this_known-missing_fact_is_used_to_generate_the_following_two_relevant_query_presidentof____usa__and_presidentof__obama___",
      "skos:broader",
      "Entity-generated_query"
    ],
    [
      "Entity-opsc_and_ophc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-embeddings_learned_by_rescal",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-e_j__rd_and_each_predicate_p_i_to_a_2d_array_p_i__r__dd_",
      "skos:broader",
      "Entity-entity_and_predicate"
    ],
    [
      "Entity-agkgc",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-for_our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-traditional_knowledge_graph_completion"
    ],
    [
      "Entity-like_rescal__we_represent_k_a_a_set_of_square_n__n_adjacency_matrix_by_defining_the_function_a",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-z",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-embedding_model",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-all_predicate_in_the_respective_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-fully_automated_kg_completion",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-_open_path__opsupp__opsc__ophc_",
      "skos:broader",
      "Entity-opsupp"
    ],
    [
      "Entity-the_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-then__for_half_of_the_instance_of_each_predicate",
      "skos:broader",
      "Entity-instance"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-an_entity_x",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_reduced_deck_with_6_rank_and_2_suit",
      "skos:broader",
      "Entity-rank"
    ],
    [
      "Entity-open-ended_question__e.g_._citizenof__ann_____instead_of_fact__e.g_._citizenof__ann__australia__",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-the_product_of_the_predicate_embeddings_along_the_path",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-open_path_fitness_function",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-a_novel_embedding-based_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-oprl_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-suit",
      "skos:broader",
      "Entity-attribute__suit_and_rank_"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-p_1__e__e_1_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-incpathfinding__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-m_1_and_m_2",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-s_e",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-section_5_present_the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "skos:broader",
      "Entity-the_query_generation_task"
    ],
    [
      "Entity-parentof__z__y_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-association_rule_mining",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-prand",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-co-occurrence_capture_the_weight_of_connection_of_sequential_entity_along_the_path"
    ],
    [
      "Entity-learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-co-occurrence",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-the_number_of_entity_that_satisfy_the_body_of_a_rule",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-of_a_predicate_p_are_vector_defined_respectively_a_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-extant_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-a_rule-based_link_predictor_whose_output_is_modified_to_produce_question"
    ],
    [
      "Entity-the_usual_closed_path_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-our_argument_embeddings",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-from_an_instantiation_of_the_body_of_an_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-open_path"
    ],
    [
      "Entity-the_op_rule_learning_method_oprl",
      "skos:broader",
      "Entity-rule_learning"
    ],
    [
      "Entity-knowledge_graph_completion_and_rule_learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-freebase",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-proposing_op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-probabilistic-based_query_generator",
      "skos:broader",
      "Entity-query_generation"
    ],
    [
      "Entity-p_1__x__z_0_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-e_3",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-city_of_residence",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-yago2_core",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-our_proposed_system",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-embedding",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-entity_that_satisfy_the_first_argument_of_the_body",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-similarity_fitness_function"
    ],
    [
      "Entity-_e___e_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-to_quantify_this_idea__we_recall_measure_support__head_coverage__and_standard_confidence_that_are_used_in_some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-sample_kg"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-method_for_automatic_completion__sometimes_by_rule_learning__scale_well_.",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-and_the_number_of_distinct_entity_is_given_by_counting_the_number_of_non-zero_element_in_v__1___b_",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-a_query_is_counted_a_true_if_it_ha_an_instance_fact_in_the_test_data_and_false_otherwise",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-presidentof",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-that_can_induce_q_from_the_given_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-the_problem_of_knowledge_graph_completion"
    ],
    [
      "Entity-of_the_same_cardinality_a_those_generated_from_oprl__called_prand",
      "skos:broader",
      "Entity-oprl"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_the_query",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-our_proposed_system",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-embeddings_learned_by_rescal",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-marriedto__x__z_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-there_is_one_class_attribute_that_describes_the_poker_hand_",
      "skos:broader",
      "Entity-class_attribute"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-the_remaining_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_continent_of_that_country__y_",
      "skos:broader",
      "Entity-continent"
    ],
    [
      "Entity-the_subject_and_object_argument_of_a_predicate_p",
      "skos:broader",
      "Entity-p"
    ],
    [
      "Entity-rule_mining",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-the_answer",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-the_method_(1)",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-numerical_attribute",
      "skos:broader",
      "Entity-attribute__suit_and_rank_"
    ],
    [
      "Entity-minimum_opsc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-table_4",
      "skos:broader",
      "Entity-article"
    ],
    [
      "Entity-the_baseline",
      "skos:broader",
      "Entity-baseline"
    ],
    [
      "Entity-even_for_poker__recall_show_that_there_are_relevant_query_that_were_not_generated",
      "skos:broader",
      "Entity-generated_query"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-a_co-occurrence_fitness_function_for_mining_cp_rule",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-then__for_half_of_the_instance_of_each_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_maximum_length_of_rule",
      "skos:broader",
      "Entity-length"
    ],
    [
      "Entity-sc",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-relevant_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-_e__e__such_that_p__e__e____f_",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-query_generation_task"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-target_predicate"
    ],
    [
      "Entity-e_7",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-data-first_approach",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_method_(1)",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-you_have_a_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-p_t__e1__e2_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "skos:broader",
      "Entity-query_generation_task"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-a_link_predictor",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-presidentof__obama__usa_",
      "skos:broader",
      "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_."
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-the_performance_of_fitness_function_proposed_for_oprl",
      "skos:broader",
      "Entity-performance"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-quality_threshold"
    ],
    [
      "Entity-evaluate__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-sampling__",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-we_conducted_two_set_of_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-active_kgc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-e_7",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-open_path"
    ],
    [
      "Entity-the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-in_other_word__a_pair_of_entity_satisfies_both_the_body_and_the_head_of_a_cp_rule",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-a_query_with_an_answer_present_in_the_test_set_is_a_relevant_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-usa",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-a_correct_and_complete_kg_for_experiment",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-rule-based_method_learn_closed__non-existential__rule",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-in_this_paper",
      "skos:broader",
      "Entity-this_paper"
    ],
    [
      "Entity-this_begs_the_question",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-erroneous_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-presenter_of_the_program__x_",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-method_for_automatic_completion",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-by_rule_learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-p_n",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-_1_",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-4",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-for_our_active_knowledge_graph_completion_task"
    ],
    [
      "Entity-even_when_there_is_no_pattern__such_a_a_closed_rule__that_fully_instantiates_the_fact_in_the_kg_",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-e_8",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-new_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-inference"
    ],
    [
      "Entity-_local_co-occurrence_fitness_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-to_find_distinct_entity__we_sum_each_row_corresponding_to_each_value_for_the_first_argument_to_obtain_the_vector_v__1___b_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-to_ask_the_best_question_to_complete_a_kg_.",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-rule-based_method_learn_closed__non-existential__rule",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-pair",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-evaluating_op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_query_performance_of_oprl_and_rlvlr__a_roc_curve_in_figure_3",
      "skos:broader",
      "Entity-figure_1"
    ],
    [
      "Entity-rule_learning_from_a_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-body",
      "skos:broader",
      "Entity-sequential_entity"
    ],
    [
      "Entity-in_other_word__a_pair_of_entity_satisfies_both_the_body_and_the_head_of_a_cp_rule",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-kg_k",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-w",
      "skos:broader",
      "Entity-participant"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-our_query_are_highly_relevant",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-of_a_predicate_p_are_vector_defined_respectively_a_",
      "skos:broader",
      "Entity-vector_space"
    ],
    [
      "Entity-the_result_summarized_in_table_3",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-held-out_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_vector_v__1___b_",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-in_knowledge_graph_completion"
    ],
    [
      "Entity-the_head_of_the_rule_(1)",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-user_parameter",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-probabilistic-based_query_generator",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-we_address_the_following_problem_in_traditional_knowledge_graph_completion",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-in_the_absence_of_any_comparative_system_for_query_generation",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-oprl_generates_query_even_when_there_is_no_closed_rule_to_answer_the_query__or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg_.",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-derived_from_the_closed_path_form__definition_2__.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-e_2",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-reduced_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-predicate_a_weight_matrix",
      "skos:broader",
      "Entity-weight_matrix"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "skos:broader",
      "Entity-learnt_rule"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-knowledge_graph_completion_task"
    ],
    [
      "Entity-prand",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-closed_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-non-zero_element_of_v__2___p1_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-let_r_be_a_cp_rule_of_the_form_given_earlier_.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-occupation__w__y_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-incpathfinding__",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_following_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-they_(3)",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-rlvlr_with_noisy-or",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-op_rule_admit_instantiation_that_can_not_be_instantiation_of_any_cp_rule_.",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-of_a_predicate_p_are_vector_defined_respectively_a_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-the_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-p2",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-agkgc",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-quality_threshold"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-the_former",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-a_correct_and_complete_kg_for_experiment",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-e_5",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-our_active_knowledge_graph_completion_task"
    ],
    [
      "Entity-bronte__canberra",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-_0_",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-op_rule_learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-they",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-they_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-to_obtain_the_vector_v__2___p1_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-a_sequence_of_predicate_p1___p2___...__pn_",
      "skos:broader",
      "Entity-sequential_entity"
    ],
    [
      "Entity-the_number_of_entity_that_satisfy_the_body_of_a_rule",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-this_mean_that_embeddings_are_computed_only_for_entity_that_are_relevant_to_a_target_predicate_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_method_is_required_to_check_the_satisfiability_of_body_atom_of_all_candidate_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-f___p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-wikipedia_article",
      "skos:broader",
      "Entity-article"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-embedding-based_method"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-kg_k",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-a_first_solution",
      "skos:broader",
      "Entity-solution"
    ],
    [
      "Entity-entity_e_and_e_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_proportion_of_the_fact_satisfying_the_head_of_the_rule_that_can_be_inferred_by_satisfying_the_rule_body",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-former",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-_ei__j_a__p1___i__j___0_and_1__j__n_",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-different_fact__p_1__e_8__e_7__and_p_1__e_9__e_7__",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-argument_embeddings_in_rlvlr",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-pathfinding__k___p_t__p__a__k_",
      "skos:broader",
      "Entity-pathfinding__"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-language_of_existential_rule",
      "skos:broader",
      "Entity-existential_rule"
    ],
    [
      "Entity-kg_sampling",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-they",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-query_generation"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-open_path__op__rule_that_are_constrained_existential_rule",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-the_following_scoring_function_is_defined",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-the_distribution_of_mined_rule_by_opsc_and_length",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-a_novel_embedding-based_fitness_function",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-freebase",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-in_our_case__an_automated_link_predictor_make_a_convenient_oracle",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-efficient_vector_computation",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-a_link_predictor"
    ],
    [
      "Entity-the_kg_to_propose_missing_fact",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-definition_6",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-we_(6)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-p_k",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-our_op_language",
      "skos:broader",
      "Entity-op_language"
    ],
    [
      "Entity-two_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-with_each_selected_randomly_with_probability_of_it_proportion_in_the_test_set",
      "skos:broader",
      "Entity-test_set"
    ],
    [
      "Entity-_0_2_1_",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-this",
      "skos:broader",
      "Entity-this_paper"
    ],
    [
      "Entity-some_intriguing_challenge",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-we_reduce_the_kg_size_because_existing_embedding-based_method_can_not_handle_vast_kg_.",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-a_pair_of_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-0.45",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-highestpoint",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-let_r_be_an_op_rule_of_the_form_given_earlier_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_hybrid_setting",
      "skos:broader",
      "Entity-setting"
    ],
    [
      "Entity-open_path_rule__op_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-_e__e___satisfies_the_head_of_r",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_significant_number_of_obsolete_and_low-quality_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-very_large_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space"
    ],
    [
      "Entity-p4__z2__y_",
      "skos:broader",
      "Entity-logical_rule"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-active_kgc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-entity_satisfying_the_subject_argument_of_the_head_predicate__p_t",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-australia",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-definition_2",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-e_j__rd_and_each_predicate_p_i_to_a_2d_array_p_i__r__dd_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-evaluate__",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-query_generated_by_a_modified_leading-edge_link_predictor",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-2.1",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-it_ha",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-rule-based_method_learn_closed__non-existential__rule",
      "skos:broader",
      "Entity-rule_learning"
    ],
    [
      "Entity-pairwise_local_fitness_function_are_defined_accordingly",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_the_query",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-predicate_p",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-rank",
      "skos:broader",
      "Entity-attribute__suit_and_rank_"
    ],
    [
      "Entity-a_fact_is_missing_even_when_there_is_evidence_for_only_one_entity_of_the_pair__and_a_question_is_generated_accordingly",
      "skos:broader",
      "Entity-pair_of_entity"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-the_problem_of_knowledge_graph_completion"
    ],
    [
      "Entity-a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-_open_path_fitness_",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-embedding_model",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-citizenof__x__y_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-query_generated_by_a_modified_leading-edge_link_predictor",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-they_fail_to_record_relevant_entity__a_well_a_relevant_relationship_for_the_entity_they_do_record",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-of_the_way_that_the_body_is_satisfied_in_the_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-in_incpathfinding__",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-the_mined_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_answer_fact_are_missing_from_the_training_set",
      "skos:broader",
      "Entity-some_missing_fact"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-product"
    ],
    [
      "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-embedding-based_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_architecture_of_rlvlr_that_learns_cp_rule",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-for_argument_embeddings",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-novel_method_to_rapidly_estimate_the_quality_of_each_candidate_rule_for_early_pruning",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-embedding_model",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-we_(5)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-freebase",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-setting"
    ],
    [
      "Entity-the_fitting_function_or_the_opscophc_threshold",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-it_embedding_representation_(1)",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_product_of_the_predicate_embeddings_along_the_path",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-_0_0_2_",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-oprl_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-e_7",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-sequential_entity_along_the_path",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-fewer_rule",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-m_1",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-p__e__e__",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_whole_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_number_of_entity_(1)",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-livesin__x__z__(1)"
    ],
    [
      "Entity-the_following_novel_component_(1)",
      "skos:broader",
      "Entity-novel_component"
    ],
    [
      "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-yago2_core",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-_a__pk___k___1__...__m__",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-by_learning_op_rule_to_derive_query",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-celine_dion",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-a_reduced_deck_with_6_rank_and_2_suit",
      "skos:broader",
      "Entity-deck"
    ],
    [
      "Entity-trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-representation_learning_method"
    ],
    [
      "Entity-some_missing_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-section_6",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-4",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-section_6",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-20_randomly_selected_predicate_from_fb15kse",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-entity__country_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-that_is_known_to_the_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-m_1_and_m_2",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-our_novel_oprl",
      "skos:broader",
      "Entity-product"
    ],
    [
      "Entity-similarity_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-foundation",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-_p_k_",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-for_akgc__we_need_only_a_named_predicate__or_all_predicate__and_use_op_rule_mined_over_training_data_to_induce_the_most_relevant_query_over_the_full_kb",
      "skos:broader",
      "Entity-akgc_task"
    ],
    [
      "Entity-s_p",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-for__2_",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-the_entity_that_satisfy_the_first_argument_of_p_t",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-opsupp__and_so_high_opsc_and_ophc_",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-sequential_entity_along_the_path",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-p_1__...__p_n",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-usa",
      "skos:broader",
      "Entity-country_(1)"
    ],
    [
      "Entity-each_argument_s_embedding",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-denoted_p_h__e__e____if_p_h__e__e___is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-answering_such_question",
      "skos:broader",
      "Entity-answer"
    ],
    [
      "Entity-each_card_is_described_using_two_attribute__suit_and_rank___for_a_total_of_10_predictive_attribute",
      "skos:broader",
      "Entity-attribute__suit_and_rank_"
    ],
    [
      "Entity-canberra",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-for_entity"
    ],
    [
      "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-opsupp__r_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_query_generation_task",
      "skos:broader",
      "Entity-query_generation_task"
    ],
    [
      "Entity-the_open_path_support",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-p1__e3__e1_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-a_place_or_a_person"
    ],
    [
      "Entity-v__1___b_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-the_fact_that_e0_is_connected_to_e1_via_predicate_p1",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-to_find_relevant_query__we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-or",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-fact_in_the_kg",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-citizenof__x__y__livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-logical_rule"
    ],
    [
      "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-the_subject_argument_of_p_t",
      "skos:broader",
      "Entity-p_t"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-p4__z2__y_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-possible_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-according_to_the_fitness_function",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-bag_of_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_link_predictor_answer_each_query_with_a_sequence_of_ranked_entity",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-_e1__e2__e3_",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-other_op_rule_learner_with_which_to_compare",
      "skos:broader",
      "Entity-oprl"
    ],
    [
      "Entity-_0_0_2_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-if_the_rule__instantiated_by_those_entity__hold_true_in_the_kg_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-multiple_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-for_our_active_knowledge_graph_completion_task"
    ],
    [
      "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown",
      "skos:broader",
      "Entity-in_knowledge_graph_completion"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-maximum_rule_length",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-p_t____e_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-locatedin__z__y_",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-an_entity_already_present_in_the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-subject_and_object_argument",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-w",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-a_novel_embedding-based_fitness_function",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-pair_of_entity"
    ],
    [
      "Entity-closed_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-rule_learning_system"
    ],
    [
      "Entity-the_kg_to_propose_missing_fact",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_baseline_query_generator_prand",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-logical_axiom"
    ],
    [
      "Entity-usa",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-knowledge_graph_completion_task"
    ],
    [
      "Entity-oprl_s_performance_exceeds_prand_on_fb15kse__yago2_core__and_poker_by_factor_of_approximately_6__2__and_9__respectively",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-for_example__the_following_op_rule__citizenof__x__t___livesin__x__z___state_that_if_an_entity__x__life_in_z",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-definition_4",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-the_product_of_the_predicate_embeddings_along_the_path",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-we_address_the_following_problem_in_traditional_knowledge_graph_completion",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-rescal_learns_the_two_set_of_embeddings__vector__e_i__and_matrix__p_k___by_minimizing_a_loss_function_defined_over_the_product_of_the_entity_and_predicate_embeddings_.",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-e___e1__e2__e3_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-our_proposed_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-to_mine_a_kg_for_high-quality_op_rule_about_a_specific_target_predicate_in_the_head__p_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_problem_of_rule-based_knowledge_graph_completion",
      "skos:broader",
      "Entity-traditional_knowledge_graph_completion"
    ],
    [
      "Entity-we_used",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_number_of_entity_that_satisfy_the_body_of_a_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_mined_rule_(1)",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-link_prediction_model",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_novel_method_for_learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-prand",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-e_4",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-chai_filter_fact_before_supplying_them_to_a_link_predictor",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_full_benchmark_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-z_0",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-our_argument_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-knowledge_graph_completion",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-evaluating_op_rule__we_propose_an_efficient_method_to_exactly_compute_the_quality_of_each_rule_by_matrix_and_vector_operation_.",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-co-occurrence_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-s_e",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-region",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-e_j__rd_and_each_predicate_p_i_to_a_2d_array_p_i__r__dd_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-op_language",
      "skos:broader",
      "Entity-rule_language"
    ],
    [
      "Entity-a_region__z_",
      "skos:broader",
      "Entity-region"
    ],
    [
      "Entity-the_term",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-_4_",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-mining_more_quality_rule_than_either_of_these_function_individually",
      "skos:broader",
      "Entity-mined_rule"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-each_entity_e_i",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-the_runtime_for_mining",
      "skos:broader",
      "Entity-run_time"
    ],
    [
      "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-path",
      "skos:broader",
      "Entity-sequential_entity"
    ],
    [
      "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_intended_scope_of_kg",
      "skos:broader",
      "Entity-topic"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-op_rule_learner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-we_define_the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-the_count_is_the_cardinality_of_this_set",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-these",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-massive_kg_in_a_reasonable_time",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-three_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-an_entity_already_present_in_the_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-similar_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-p_n",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-those_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "skos:broader",
      "Entity-target_predicate"
    ],
    [
      "Entity-citizenof__bronte__australia_",
      "skos:broader",
      "Entity-citizenof"
    ],
    [
      "Entity-the_op_rule_learning_method_oprl",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-vector_multiplication",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-livesin_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_person_s_city_of_residence",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-closed_rule_complete_a_kg_by_answering_query_of_unclear_origin__usually_derived_from_a_holdback_test_set_in_experimental_setting_.",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-rule_with_free_variable",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-entity",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-that_ha_a_participant__w_",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-two_set_of_experiment",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-incpathfinding__",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-e_1",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-op"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-body_r__e__e__",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-then__the_method_extends_the_set_of_entity_by_adding_entity_that_are_related_to_the_existing_entity_in_the_set_via_any_predicate__like_adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact_.",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-open_path_rule__op_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-to_ask_the_best_question_to_complete_a_kg_.",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-which_are_involved_in_the_target_predicate",
      "skos:broader",
      "Entity-target"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_third_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_head_and_body",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-latter",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_link_predictor",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_link_predictor_(3)",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-the_fact_pk__ei__ej_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-automated_link_predictor",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-those_entity",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-knowledge_graph_completion",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-e_9",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-then_pick_the_rule_with_opsupp__r___1",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-observation",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-australia",
      "skos:broader",
      "Entity-country_(1)"
    ],
    [
      "Entity-to_find_distinct_entity",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_pair_of_entity_(1)",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-our_argument_embeddings",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-the_fitness_function_adapted_from_rlvlr",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-a_perfect_link_predictor_(1)",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-towards_learning_existential_rule_from_knowledge_graph",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-our_novel_hybrid_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-an_op_rule_of_the_form__2__(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-using_an_adjacency_matrix_representation_of_the_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-our_experiment",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-fb15k_selected__which_we_call_fb15kse_",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-pathfinding"
    ],
    [
      "Entity-our_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-definition_7",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-p2__z0__z1_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_maximum_length_of_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_novel_method_(1)",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-a_given_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-how_to_efficiently_compute_the_measure",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-to_ask_the_best_question_to_complete_a_kg_.",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-according_to_the_fitness_function",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-active_knowledge_graph_completion"
    ],
    [
      "Entity-standard_confidence__sc_",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-high-quality_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-the_quality_of_rule",
      "skos:broader",
      "Entity-quality"
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-possible_query_about_this_set_of_fact_are___p_1__e_1_____p_1____e_2___p_1____e_3___p_1__e_4_____p_1____e_5___p_1__e_8_____p_1__e_9_____p_1____e_7__",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-coverage",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "skos:broader",
      "Entity-rule_learning"
    ],
    [
      "Entity-the_rule_citizenof",
      "skos:broader",
      "Entity-citizenof"
    ],
    [
      "Entity-_a__pk___k___1__...__m__",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-you_have_a_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-fb15k_selected",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-australia",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-r___evaluation__r___k__.",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-one_correct_answer",
      "skos:broader",
      "Entity-the_answer_to_a_question_in_the_test_set"
    ],
    [
      "Entity-it_is_quite_correctly_weakly_structured_or_because_it_ha_significantly_more_missing_fact",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-learning",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-each_predicate_p_k",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_body_of_this_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-yago2",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-rlvlr__and_oprl",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-a_co-occurrence_fitness_function_for_mining_cp_rule",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-sim",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-head_predicate__p_t",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-from_an_op_rule__two_cp_rule_are_logical_consequence__one_for_each_unification_of_free_variable_y_with_a_variable_of_the_head_p_t",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-argument_embeddings_in_rlvlr",
      "skos:broader",
      "Entity-rlvlr"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-observing_a_sharp_anomaly",
      "skos:broader",
      "Entity-observation"
    ],
    [
      "Entity-f_op",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-head",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-entity_forming_the_object_argument_of_the_tail_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-we_evaluate_oprl",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-e_1",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_building_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-_e_3__e_4__e_5_",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-specific_fact_that__if_true__are_missing_from_the_kg",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-a_data-first_approach",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-table_3",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-presenter__z__x_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-each_predicate_ha_a_subject_argument_in_the_first_position_and_an_object_argument_in_the_second_position",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-e2_and_e3",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-scope",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-argument",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-genuinely_missing_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-p_1__e_1___",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-the_learnt_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-pair_of_entity"
    ],
    [
      "Entity-chai",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-in_incpathfinding__",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-evaluate__",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_compositional_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-p3__z1__z2_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-link_prediction"
    ],
    [
      "Entity-co-occurrence_fitness_function",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-head_coverage__hc_",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-in_this_way",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-t_",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-op_rule__r__p1__x__z0___p2__z0__z1___p3__z1__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-set_of_entity"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-rescal_embeddings",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-system",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_cardinality_of_this_set",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-complete_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-you_have_a_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-the_body_of_this_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-in_incpathfinding__",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-opsupp__r_",
      "skos:broader",
      "Entity-scoring_function"
    ],
    [
      "Entity-we_address_the_following_problem_in_traditional_knowledge_graph_completion",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-we_define",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-a_specific_target_predicate_in_the_head__p_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-_open_path__opsupp__opsc__ophc_",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-for_our_active_knowledge_graph_completion_task"
    ],
    [
      "Entity-argument_embeddings_in_rlvlr",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-p_h",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_op_rule",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-spouse_of_a_person",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-the_entity_which_satisfy_the_second_argument_of_p_t",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-novel_method_to_estimate_the_quality_of_each_candidate_rule_based_on_it_embedding_representation",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-novel_method_to_rapidly_estimate_the_quality_of_each_candidate_rule_for_early_pruning",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___are_fact_in_the_kg",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-we",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-each_predicate_ha_a_subject_argument_in_the_first_position_and_an_object_argument_in_the_second_position",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-each_argument_s_embedding",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-multiple_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-by_learning_op_rule_to_derive_query",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-hundred_of_accurate_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-r___evaluation__r___k__.",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-a_place_or_a_person",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-city_of_residence_and_the_nation_in_which_that_city_is_located",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-a_link_predictor"
    ],
    [
      "Entity-entity_(2)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-where_t__is_a_learning_system_parameter_that_is_going_to_be_tuned",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-each_entity_e_i",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-missing_fact",
      "skos:broader",
      "Entity-specific_fact"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-k___e__f_",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-of_the_same_cardinality_a_those_generated_from_oprl__called_prand",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-evaluating_op_rule",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-all_predicate_in_the_respective_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-automatic_completion",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-oprl_s_performance",
      "skos:broader",
      "Entity-performance"
    ],
    [
      "Entity-by_learning_op_rule_to_derive_query",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-candidate_rule_by_opsc_and_ophc_in_evaluate__",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-each_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_entity_which_satisfy_the_second_argument_of_p_t",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-the_mined_rule_(2)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-x",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_open_path_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-quality_threshold",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-the_method_(1)",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_second_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_novel_method_for_learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-p3",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-it_ha_the_following_general_form__where_p_h_is_the_single_predicate_of_the_head__and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-spouse__z__y_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-a_potential_missing_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-w",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-where_t__is_a_learning_system_parameter_that_is_going_to_be_tuned",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-we_assess_(1)",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-generated_query"
    ],
    [
      "Entity-the_co-occurrence_of_z_0_a_the_object_argument_of_p_t_and_subject_argument_of_p_1__and_z_i__1__i__n_-_1__a_the_object_argument_of_p_i_and_subject_argument_of_p___i1_",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-to_rapidly_estimate_a_rule_s_quality",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-the_fitness_function_adapted_from_rlvlr",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-p_2",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-solution",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-the_object_argument_of_p_n",
      "skos:broader",
      "Entity-p_n"
    ],
    [
      "Entity-answer",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-we_address_the_following_problem_in_traditional_knowledge_graph_completion",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-_r_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-it_is_likely_that_the_place_of_birth_of_that_person",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-an_entity_e",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_quality_of_each_rule",
      "skos:broader",
      "Entity-quality"
    ],
    [
      "Entity-for_sampling",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-z_0",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-the_compositional_embeddings",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-bag_of_predicate",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-adding_e3_if_we_have_some_p_i__e3__e1__a_a_fact",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-figure_3",
      "skos:broader",
      "Entity-figure_1"
    ],
    [
      "Entity-a_redundancy_elimination_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-for_predicate_p__we_write_it_embedding_matrix_a_p__also_called_a_weight_matrix_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted",
      "skos:broader",
      "Entity-traditional_knowledge_graph_completion"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-learning_op_rule_based_on_an_embedding_representation",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-rlvlr_and_scalekb_use_so-called_closed_path__cp__rule_that_are_a_kind_of_closed_rule_with_no_free_variable",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-these",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-embedding_matrix",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-how_to_efficiently_compute_the_measure",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-over_a_working_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-z",
      "skos:broader",
      "Entity-city"
    ],
    [
      "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-every_fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-argument_embeddings_in_rlvlr",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-for_our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-our_active_knowledge_graph_completion_task"
    ],
    [
      "Entity-table_3",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-we_need_to_find_all_kg_fact_that_can_trigger_a_candidate_rule",
      "skos:broader",
      "Entity-the_candidate_rule"
    ],
    [
      "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "skos:broader",
      "Entity-link"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-novel_hybrid_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-country_(1)"
    ],
    [
      "Entity-citizenof",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-sample_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-_e___e_",
      "skos:broader",
      "Entity-pair"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-it_embedding_representation",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-open_path_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-oprl_query",
      "skos:broader",
      "Entity-rule_language"
    ],
    [
      "Entity-two_matrix_m_1_and_m_2",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-rule_learning_system",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-the_first_method_to_learn_rule_to_generate_relevant_question_automatically",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-_0_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-mining_more_quality_rule_than_either_of_these_function_individually",
      "skos:broader",
      "Entity-rule_mining"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-an_automated_link_predictor_make_a_convenient_oracle",
      "skos:broader",
      "Entity-oracle"
    ],
    [
      "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-opsc_and_ophc_are_supplied_to_algorithm_1_at_runtime__and_evaluation___discard_failing_rule_.",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_relevancy_of_a_question",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-the_argument_embeddings_of_the_subject_and_object_argument",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-an_entity_involved_in_the_missing_fact",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-of_the_way_that_the_body_is_satisfied_in_the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-p____e___or_q__p__e___",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-e_8",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-full_benchmark_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_kg__k__",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-x__y__z_1__...__z___n-1_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-d_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-e_1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-active_knowledge_graph_completion",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-for_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-any_cp_rule",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-e1_and_e2",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-such_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-a",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-entity_e_is_an_identifier_for_an_object_such_a_a_place_or_a_person__and_a_fact__also_known_a_a_link__is_an_rdf_triple__e__p__e____whereby_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-towards_learning_existential_rule_from_knowledge_graph",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-these",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-query_from_op_rule",
      "skos:broader",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-e_7",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-citizenof__bronte__australia_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-high_quality_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-our_question_in_this_paper",
      "skos:broader",
      "Entity-this_paper"
    ],
    [
      "Entity-a_given_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-universal_quantification_of_all_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-100",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-e_8",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-a_product_calculus_for_scoring",
      "skos:broader",
      "Entity-product_calculus"
    ],
    [
      "Entity-p_n",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-supporting_this_explanation",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-prand_query_are_generated_by_first_selecting_a_bag_of_predicate",
      "skos:broader",
      "Entity-generated_query"
    ],
    [
      "Entity-the_body_of_this_rule_(1)",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-an_rdf_triple__e__p__e__",
      "skos:broader",
      "Entity-rdf_triple"
    ],
    [
      "Entity-definition_1",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-body",
      "skos:broader",
      "Entity-rule_body"
    ],
    [
      "Entity-an_entity_x",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-we_(9)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-former",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-in_both_case_e_is_often_a_city",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-a_maximum_rule_length_of_4",
      "skos:broader",
      "Entity-length"
    ],
    [
      "Entity-the_same_query__p_1____e_7__",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-a_shared_entity_in_place_of_z0",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-this_set_of_query",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-it_mean_the_question_is_relevant_because_it_uncovers_some_missing_fact",
      "skos:broader",
      "Entity-inference"
    ],
    [
      "Entity-we_use_the_sampling_algorithm__sampling____proposed_in_rlvlr",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-chai",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-to_compute",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-rescal_evaluation_function_for_a_single_predicate",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-f_op",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-evaluating_link_predictor",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-op_rule_from_kg",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-in_other_word__a_pair_of_entity_satisfies_both_the_body_and_the_head_of_a_cp_rule",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-for_our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-the_problem_of_knowledge_graph_completion"
    ],
    [
      "Entity-novel_embedding-based_heuristic_function",
      "skos:broader",
      "Entity-heuristic"
    ],
    [
      "Entity-r__p1__x__z0___p2__z0__z1___p3__z1__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-vector_v__2___p1_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-the_relevance_of_query_induced_from_oprl-mined_rule",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-of_the_way_that_the_body_is_satisfied_in_the_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-inference_module",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-identifying_a_missing_fact_even_when_there_is_no_pattern__such_a_a_closed_rule__that_fully_instantiates_the_fact_in_the_kg_",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-method_which_embed_the_predicate_into_vector",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-livesin"
    ],
    [
      "Entity-extant_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-missing_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-named_predicate__or_all_predicate_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-our_argument_embeddings",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-it_(4)",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-section_5_present_the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "skos:broader",
      "Entity-query_generation"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-the_answer_to_a_question_in_the_test_set",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-sampled_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_head_of_the_rule",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-an_entity_already_present_in_the_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_novel_method_(1)",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-from_an_instantiation_of_the_body_of_an_op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-m_2",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-yago2_core",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-cp",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-new_quality_notion_of_query_relevance",
      "skos:broader",
      "Entity-quality"
    ],
    [
      "Entity-curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-a_rule_language_to_express_rule"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-opsc_and_ophc_are_supplied_to_algorithm_1_at_runtime__and_evaluation___discard_failing_rule_.",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-unified_framework",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-roc_curve",
      "skos:broader",
      "Entity-figure_1"
    ],
    [
      "Entity-the_product_of_the_predicate_embeddings_along_the_path",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-p_1__x__z_0_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-multiple_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-a_convenient_oracle",
      "skos:broader",
      "Entity-oracle"
    ],
    [
      "Entity-_e___e_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-f_coo",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-the_head_of_the_rule_by_finding_an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-an_op_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-novel_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-citizenof__x__y__livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-logical_rule"
    ],
    [
      "Entity-a_novel_method_(1)",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-learning",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-a_correct_and_complete_kg_for_experiment",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-the_kg_to_propose_missing_fact",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-extant_entity",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-the_number_of_possible_rule_grows_significantly_with_increasing_length__a_doe_the_runtime_for_mining",
      "skos:broader",
      "Entity-observation"
    ],
    [
      "Entity-p_i",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-b",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-evaluation__r___k_",
      "skos:broader",
      "Entity-scoring_function"
    ],
    [
      "Entity-entity_that_satisfy_the_second_argument_of_the_head",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-locatedin__e___e__"
    ],
    [
      "Entity-this_vector",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-s_p",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-p_1__...__p_n",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-experimental_setting",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-yago2_core",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-rlvlr_and_scalekb_use_so-called_closed_path__cp__rule_that_are_a_kind_of_closed_rule_with_no_free_variable",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-the_following_two_op_rule_which_are_mined_from_wikidata__with_their_opsc_and_ophc_value_respectively_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_remaining_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-learning",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-a_novel_method_for_learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-o_e",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-akgc_task",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-over_a_working_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-4",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-kg_k",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-the_rightmost_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-_z__x_",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-fb15kse",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-open_path__op__rule_that_are_constrained_existential_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-redundancy_elimination_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-link_predictor_to_complete_the_kg",
      "skos:broader",
      "Entity-kg_completion"
    ],
    [
      "Entity-rule-based_link_predictor",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-f_op__._",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-k___e__f_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_building_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-they",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-the_plausibility_of_a_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-continent",
      "skos:broader",
      "Entity-region"
    ],
    [
      "Entity-in_this_way__we_go_beyond_link_prediction_to_infer_relevant_query_for_missing_link__that_is__active_kgc",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-pk__ei__ej_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-rule-based_kg_completion",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_answer_fact_are_missing_from_the_training_set",
      "skos:broader",
      "Entity-missing_fact"
    ],
    [
      "Entity-multiple_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-open_path_(1)"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-agkgc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-p_1__e_1__e_2_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-association_rule_mining",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-fitness_function_adapted_from_rlvlr",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_kg_to_propose_missing_fact",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-the_op_rule",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-_e__e___satisfying_the_body",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-we_use_a_maximum_rule_length_of_4_for_pathfinding__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-opsc_and_ophc_are_supplied_to_algorithm_1_at_runtime__and_evaluation___discard_failing_rule_.",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-for_our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-knowledge_graph_completion_task"
    ],
    [
      "Entity-if_pathfinding___also_generates",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-the_problem_of_knowledge_graph_completion",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-with_satisfying_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-p_3__z_1__y_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-for_each_given_fact",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-learnt_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-sim",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-a_novel_method_for_learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-the_op_rule",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-given_predicate"
    ],
    [
      "Entity-the_vector_size_set_to_100",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-over_a_working_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-op_rule_learner",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-if_we_find_a_good_rule",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-top_candidate_rule",
      "skos:broader",
      "Entity-the_candidate_rule"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-hc_measure",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-the_query_generation_task",
      "skos:broader",
      "Entity-generated_query"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-each_fact_generated_by_rlvlr",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-our_argument_embeddings",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-they_fail_to_record_relevant_entity__a_well_a_relevant_relationship_for_the_entity_they_do_record",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-rule_learner",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-f_op",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-we_will_use_the_mined_rule_for_generating_query__so_we_need_some_hold-out_fact_for_query_evaluation_.",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-maximum_rule_length",
      "skos:broader",
      "Entity-setting"
    ],
    [
      "Entity-curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity",
      "skos:broader",
      "Entity-link_prediction"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-a_first_solution",
      "skos:broader",
      "Entity-answer"
    ],
    [
      "Entity-_e__e__such_that_p__e__e____f_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-open_path_fitness_function",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-each_p_i_and_p_t_are_predicate_in_the_kg",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-process_for_generating_relevant_query",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_number_of_entity_that_satisfy_the_body_of_a_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-in_knowledge_graph_completion"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-towards_learning_existential_rule_from_knowledge_graph",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming_.",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-e2_and_e3",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-traditional_link_prediction_system",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-we_(8)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-it_(5)",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-op_rule_for_a_target_predicate_p_i_and_it_inverse_p_i-1_in_pathfinding__",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-closed_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-f__and_0_otherwise",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-vast_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_body_of_each_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-livesin__x__z__(1)",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-the_problem_of_rule-based_knowledge_graph_completion",
      "skos:broader",
      "Entity-knowledge_graph_completion_approach"
    ],
    [
      "Entity-curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-a_low-dimensional_vector_space_of_latent__unnamed_feature_not_present_in_the_kg_vocabulary",
      "skos:broader",
      "Entity-latent_representation"
    ],
    [
      "Entity-new_short_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-a_given_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-for_sampling",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-an_rdf_triple__e__p__e__",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-subject_argument_of_p_t",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-figure_1_show_the_distribution_of_mined_rule_by_opsc_and_length",
      "skos:broader",
      "Entity-figure_1"
    ],
    [
      "Entity-p2",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-a_link_predictor",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-e_8",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-e_3",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_overall_rule_from_the_perspective_of_the_predicate",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-the_kg__k__",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-they_(1)",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-the_maximum_length_of_target_rule",
      "skos:broader",
      "Entity-length"
    ],
    [
      "Entity-open_path_(1)",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-entity__country_",
      "skos:broader",
      "Entity-set_of_entity"
    ],
    [
      "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-fb15k_selected",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-rule_learning_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-livesin__x__z_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-how_to_efficiently_compute_the_measure",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-for_sampling",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-traditional_knowledge_graph",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-their_relation",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-evaluate__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-to_compute_opsc_and_ophc",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-either_of_the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-minimum_opsc_(1)",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-entity_e_and_e_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_method_is_required_to_check_the_satisfiability_of_body_atom_of_all_candidate_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-p2__z0__z1_",
      "skos:broader",
      "Entity-logical_rule"
    ],
    [
      "Entity-argument_embeddings_in_rlvlr",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-co-occurrence",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-sc_from_1_to_0.1__the_minimum_and_default_",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-sequential_entity_along_the_path",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-p__1_",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-this_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-for_half_of_the_instance_of_each_predicate",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-_p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-head_with_one_free_variable",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-z_1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-how_to_efficiently_compute_the_measure",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-_e_1__e_2__e_3__e_4__e_5_",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-kg_sampling",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-they_(1)",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-x",
      "skos:broader",
      "Entity-presenter"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-there_is_a_tv_program__z__that_ha_a_participant__w__that_ha_an_occupation__y___then_it_is_likely_that_the_presenter_of_the_program__x__is_known_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_number_of_potential_rule",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-akgc_task",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-this_paper",
      "skos:broader",
      "Entity-article"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-rule_learner"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-for_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-add_pathfinding__k___p_t__p__a__k_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-to_evaluate_our_system",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-a_given_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-the_first_method_to_learn_rule_to_generate_relevant_question_automatically",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_author_(1)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-in_this_way__we_go_beyond_link_prediction_to_infer_relevant_query_for_missing_link__that_is__active_kgc",
      "skos:broader",
      "Entity-active_kgc"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-subject_argument",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-the_open_path_fitness_function",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-redundancy_elimination_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-the_utility_of_our_fitness_function",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-or",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-an_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-open_path__op__rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-fb15k_selected",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-open_path_rule__op_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-we_reduce_the_kg_size_because_existing_embedding-based_method_can_not_handle_vast_kg_.",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-_e__e___satisfying_the_body",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-rule-based_kg_completion",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-closed_path_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-entity_that_satisfy_the_second_argument_of_the_head",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-citizenof__x__y___livesin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-experimentally",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-non-zero_element_of_this_vector",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-incpathfinding",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rlvlr_with_noisy-or",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-o_e",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-the_method_initializes_a_set_of_entity_by_considering_a_number_of_entity_which_are_involved_in_the_target_predicate_.",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-agkgc",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-tail_predicate__p_n",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-embeddings__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-_e_3__e_4__e_5_",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-the_experiment",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-for_pathfinding__",
      "skos:broader",
      "Entity-pathfinding"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-the_following_cp_rule__iscitizenof__x__y___isbornin__x__z___locatedin__z__y_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-then_the_existence_of_an_instance_of_the_head_with_one_free_variable__viz_the_query_p_t____e_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-k___e__f_",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-rule_learning_from_a_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-either_of_the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-the_mined_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_subject_and_object_argument_of_a_predicate_p",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-a_set_of_entity",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-a_redundancy_elimination_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-to_compute",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-the_maximum_size_of_each_sample_to_800_entity",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-_ei__j_a__p1___i__j___0_and_1__j__n_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-learnt_rule"
    ],
    [
      "Entity-_e__e___satisfies_the_head_of_r",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-experiment",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-a_link_predictor_(2)",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-the_body_and_the_head_of_a_cp_rule",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-the_fact_that_e0_is_connected_to_e1_via_predicate_p1",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_novel_algorithm",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_following_scoring_function_is_defined",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-to_compute",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-non-zero_element_of_this_vector_indicates_a_satisfying_entity",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-the_compositional_embeddings",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-an_entity_already_present_in_the_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-entity_that_are_related_to_the_existing_entity_in_the_set",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-poker",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-test_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-pathfinding___(2)",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-or",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-open_path_fitness_function",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-reduced_kg__k_",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-fb15kse",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-open_path_standard_confidence",
      "skos:broader",
      "Entity-evaluation_method"
    ],
    [
      "Entity-_p1__...__pm_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-obama",
      "skos:broader",
      "Entity-country_(1)"
    ],
    [
      "Entity-given_predicate_p",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-unknown_unknown",
      "skos:broader",
      "Entity-known_unknown"
    ],
    [
      "Entity-the_top_10__of_the_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_first_rule_state_that_if_the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-our_generated_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-an_instantiation_of_a_corresponding_op_rule",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-rule-based_link_predictor",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-_open_path__opsupp__opsc__ophc_",
      "skos:broader",
      "Entity-opsc"
    ],
    [
      "Entity-akgc_task",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-the_two_key_phase_in_representation_learning_are__1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-given_predicate_p__the_akgc_task_is_to_generate_query_of_the_form_p____e___and_p__e___",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-the_head_and_body",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-argument_embeddings_in_rlvlr",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-each_fitness_function",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-complete_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-efficient_vector_computation",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_entity_that_satisfy_the_first_argument_of_p_t",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-livesin_(1)"
    ],
    [
      "Entity-each_column_of_the_adjacency_matrix",
      "skos:broader",
      "Entity-adjacency_matrix"
    ],
    [
      "Entity-the_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-a_place_or_a_person",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-denoted_p_h__e__e____if_p_h__e__e___is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-definition_6",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-the_rule_is_extended_to_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-those_entity",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-novel_method_for_learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-k___e__f_",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-evaluate__",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-p_h",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-section_5_present_the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "skos:broader",
      "Entity-generating_query"
    ],
    [
      "Entity-in_this_way",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-it_embedding_representation",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-our_question_in_this_paper",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-a_pair_of_entity_(1)",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-o_p",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-obama",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-sample_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-_e___e_",
      "skos:broader",
      "Entity-pair_of_entity"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-embedding-based_method"
    ],
    [
      "Entity-learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-plausible_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-query_generated_by_a_modified_leading-edge_link_predictor",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-sequential_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-the_problem_of_rule-based_knowledge_graph_completion",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_the_query",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-spouse",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-enterprise_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-in_incpathfinding__",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-suit",
      "skos:broader",
      "Entity-class_attribute"
    ],
    [
      "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-model",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-z0",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-if_the_rule__instantiated_by_those_entity__hold_true_in_the_kg_.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-a_link_predictor"
    ],
    [
      "Entity-the_query_themselves",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-the_method_for_computing_opsc_and_ophc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-all_predicate_in_the_respective_kg",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-novel_method_to_rapidly_estimate_the_quality_of_each_candidate_rule_for_early_pruning",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "skos:broader",
      "Entity-kg_completion"
    ],
    [
      "Entity-_0_0_2___0_2_1___1_0_0_",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-the_two_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-experiment",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-our_target_language_for_learning_in_section_3",
      "skos:broader",
      "Entity-target"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-in_knowledge_graph_completion"
    ],
    [
      "Entity-the_kg__k__",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-for_argument_embeddings",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-embedding-based_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-evaluation",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-this_paper"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-country",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-the_fitting_function_or_the_opscophc_threshold",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-bag_of_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-rule_with_free_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-conventionally__this_known-missing_fact_is_used_to_generate_the_following_two_relevant_query_presidentof____usa__and_presidentof__obama___",
      "skos:broader",
      "Entity-query_generation"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-rule-based_link_predictor",
      "skos:broader",
      "Entity-link_prediction"
    ],
    [
      "Entity-z0",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_number_of_entity_that_satisfy_the_body_of_a_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-knowledge_graph",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-entity_resolution",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-by_learning_op_rule_to_derive_query",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-entity_satisfying_the_subject_argument_of_the_head_predicate__p_t",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-vast_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-fact__also_known_a_a_link_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-query_of_unclear_origin",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-rule-based_link_predictor",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-rescal_embeddings",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-which_are_involved_in_the_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_problem_of_rule-based_knowledge_graph_completion",
      "skos:broader",
      "Entity-the_problem_of_knowledge_graph_completion"
    ],
    [
      "Entity-for_our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-object_argument",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-each_argument_s_embedding",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_link_predictor",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-chai",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-fitness_function",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-sample_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-hc_measure",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-every_instantiation_of_a_cp_rule",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-e2_and_e3",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-incpathfinding",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-a_fully_automated_framework_for_kg_completion",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-product_calculus",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-quality_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation",
      "skos:broader",
      "Entity-latent_feature"
    ],
    [
      "Entity-similar_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-increasing_opsc",
      "skos:broader",
      "Entity-opsc"
    ],
    [
      "Entity-predicate_pair",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-p_2__z_0__z_1___p_3__z_1__y_",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-the_head_of_the_rule_by_finding_an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted",
      "skos:broader",
      "Entity-knowledge_graph_completion_approach"
    ],
    [
      "Entity-a_redundancy_elimination_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-for_entity_e__we_write_it_embedding_vector_a_e",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-numerical_attribute",
      "skos:broader",
      "Entity-class_attribute"
    ],
    [
      "Entity-hc_measure",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-to_ask_the_best_question_to_complete_a_kg_.",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-participant",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-our_agkgc",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-this_set_of_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-an_entity_e_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-learning_op_rule_based_on_an_embedding_representation",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_kg__k__",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-cd",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-livesin_(1)",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-you_have_a_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-definition_4"
    ],
    [
      "Entity-_1_0_0_",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-open_path_standard_confidence",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "skos:broader",
      "Entity-rule_mining"
    ],
    [
      "Entity-rule_with_free_variable",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-even_for_poker__recall_show_that_there_are_relevant_query_that_were_not_generated",
      "skos:broader",
      "Entity-recall"
    ],
    [
      "Entity-sampled_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-each_p_i",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-open_path__op__rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_mined_rule_(1)",
      "skos:broader",
      "Entity-mined_rule"
    ],
    [
      "Entity-we_introduce_open_path__op__rule_that_are_constrained_existential_rule_.",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-similar_entity",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-opscophc_score",
      "skos:broader",
      "Entity-evaluation_method"
    ],
    [
      "Entity-about_that_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-head_of_a_rule",
      "skos:broader",
      "Entity-rule_body"
    ],
    [
      "Entity-open_path_fitness",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_two_set_of_embeddings__vector__e_i__and_matrix__p_k_",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-we_(3)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-livesin__x__z_"
    ],
    [
      "Entity-run_time_in_hour__averaged_over_the_target",
      "skos:broader",
      "Entity-runtime"
    ],
    [
      "Entity-a_novel_method",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-for_entity_e__we_write_it_embedding_vector_a_e",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-closed_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_third_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-pair_of_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-these_parameter",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_baseline_query_generator_prand",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-existential_rule_with_a_different_form_to_the_usual_closed_path_rule_that_are_conventionally_used_for_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-evaluation",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-ann",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-we_conducted_two_set_of_experiment",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-z",
      "skos:broader",
      "Entity-a_place_or_a_person"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-specific_fact_that__if_true__are_missing_from_the_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-to_compute_opsc_and_ophc",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-pathfinding___(3)",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-our_argument_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-a_rule-based_link_predictor_whose_output_is_modified_to_produce_question",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity",
      "skos:broader",
      "Entity-scoring_function"
    ],
    [
      "Entity-definition_4",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-sequential_entity_along_the_path",
      "skos:broader",
      "Entity-sequential_entity"
    ],
    [
      "Entity-100",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-a_tv_program__z_",
      "skos:broader",
      "Entity-tv_program"
    ],
    [
      "Entity-a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_entity_which_satisfy_the_second_argument_of_p_t",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-even_for_poker__recall_show_that_there_are_relevant_query_that_were_not_generated",
      "skos:broader",
      "Entity-query_generation"
    ],
    [
      "Entity-the_term",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-p_1__x__z_0_",
      "skos:broader",
      "Entity-logical_rule"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-to_compute_opsc_and_ophc",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-m_1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-an_op_rule_of_the_form__2__(1)",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-hc",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-locatedin",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-citizenof",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-co-occurrence_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_method_is_required_to_check_the_satisfiability_of_body_atom_of_all_candidate_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-whence_doe_the_query_arise",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-a_link_predictor",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-fb15kse",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-we_define_the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-sampling___computes_a_fragment_of_the_kg__k___consisting_of_a_bounded_number_of_entity_that_are_related_to_the_target_predicate",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-a_chain_of_predicate_in_the_rule",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-rescal_is_unable_to_handle_yago2_.",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-e__e_",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-we_address_the_following_problem_in_traditional_knowledge_graph_completion",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-each_entity_e_i"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-open_path_(1)"
    ],
    [
      "Entity-arbitrary_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-b",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-sampled_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-_e__f_"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-op_rule_learner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_problem_of_rule-based_knowledge_graph_completion",
      "skos:broader",
      "Entity-knowledge_graph_completion_task"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-spouse__z__y_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-increasing_opsc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-redundancy_elimination_method",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-entity_forming_the_object_argument_of_the_tail_predicate",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-e_1",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-rescal_embeddings",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-each_entity_e_i"
    ],
    [
      "Entity-spouse_of_a_person",
      "skos:broader",
      "Entity-spouse"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-evaluation",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-process_for_generating_relevant_query"
    ],
    [
      "Entity-the_method_for_computing_opsc_and_ophc",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-a__p1___i__j_",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-novel_heuristic_function",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-number_of_induced_query",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-rule-based_kg_completion",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-reduced_kg__k_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-this_paper"
    ],
    [
      "Entity-6__co-occurrence_fitness_",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-redundancy_elimination_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-the_performance_of_fitness_function_proposed_for_oprl",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-n",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-rlvlr__doe",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-the_op_rule_learning_method_oprl",
      "skos:broader",
      "Entity-learnt_rule"
    ],
    [
      "Entity-_p_1__e_1__e_2___p_1__e_1__e_3___p_1__e_4__e_5___p_1__e_8__e_7___p_1__e_9__e_7__",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-if_the_rule__instantiated_by_those_entity__hold_true_in_the_kg_.",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-traditional_link_prediction_system",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-open_path_rule__op_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-opsupp__and_so_high_opsc_and_ophc_",
      "skos:broader",
      "Entity-measure_support"
    ],
    [
      "Entity-embeddings_learned_by_rescal",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-prand_query_are_generated_by_first_selecting_a_bag_of_predicate",
      "skos:broader",
      "Entity-query_generation_task"
    ],
    [
      "Entity-pair_oprl_with_a_link_predictor_to_form_a_unified_framework_for_fully_automated_kg_completion",
      "skos:broader",
      "Entity-fully_automated_kg_completion"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-scoring_function"
    ],
    [
      "Entity-embedding-based_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-_open_path_fitness_",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-the_path_p1__p2__...__pm",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-sc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-e_1",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-the_link_predictor",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a__pk_",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-this_way",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-p3__z1__z2_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-the_rule_citizenof",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-entity_forming_the_object_argument_of_the_tail_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-agkgc",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-op_rule__r__p1__x__z0___p2__z0__z1___p3__z1__y_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-e_1",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-opsupp__opsc__ophc",
      "skos:broader",
      "Entity-open_path_(1)"
    ],
    [
      "Entity-latent_feature_of_a_path_that_connects_it_endpoint",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-missing_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-placeofbirth",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-op_rule_admit_instantiation_that_can_not_be_instantiation_of_any_cp_rule",
      "skos:broader",
      "Entity-rule_language"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-three_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-definition_7",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-for_half_of_the_instance_of_each_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-generating_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e__",
      "skos:broader",
      "Entity-instance"
    ],
    [
      "Entity-obama",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-after_computing_embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_hybrid_fitness_function_that_combine_both_f_co__.__and_f_op__._",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-the_former",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-standard_confidence__sc_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-l",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-traditional_knowledge_graph_completion"
    ],
    [
      "Entity-the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-z",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-the_mined_rule_(2)",
      "skos:broader",
      "Entity-the_mined_rule"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-from__1__and__2___we_can_easily_obtain_ophc__r___11_and_opsc__r___12",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-p_1__x__z_0_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-vast_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-entity_(2)",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-the_relevancy_of_a_question",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-e_8",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-several_direction_for_future_research_to_handle_existential_rule_learning",
      "skos:broader",
      "Entity-existential_rule_learning"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-the_maximum_length_of_target_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph__kg_",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-country",
      "skos:broader",
      "Entity-country_(1)"
    ],
    [
      "Entity-p_t__e___e_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-some_erroneous_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-l",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-question",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-existential_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_mined_rule_(2)",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-a_link_predictor_(1)",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_building_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-formally__the_cd_of_q_is_defined_a_follows_for_a_query_q__p____e___or_q__p__e____and_the_collection_of_rule_r_that_can_induce_q_from_the_given_kg_",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-pathfinding",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_two_metric__opsc_and_ophc",
      "skos:broader",
      "Entity-ophc"
    ],
    [
      "Entity-the_second_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-open_path__op__rule_that_are_constrained_existential_rule",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-p3",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-in_this_way__we_go_beyond_link_prediction_to_infer_relevant_query_for_missing_link__that_is__active_kgc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-rank",
      "skos:broader",
      "Entity-class_attribute"
    ],
    [
      "Entity-e_9",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-heuristic",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_first_focus_on_entity_and_the_second_on_predicate",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-query_that_can_be_answered_from_the_training_set",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-of_the_way_that_the_body_is_satisfied_in_the_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head_and_then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-a_rule-based_link_predictor_whose_output_is_modified_to_produce_question"
    ],
    [
      "Entity-let_k___e__f__be_a_kg_.",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-two_main_category_are_translation-based_embeddings_and_compositional_embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-fb15k_selected__which_we_call_fb15kse_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-head_coverage__hc_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-massive_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_number",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-it_(4)",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-rlvlr__and_oprl",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-e0",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-entity_resolution",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-a_pair_of_entity",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "skos:broader",
      "Entity-akgc_task"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-x__y__z_1__...__z___n-1_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-open_path_head_coverage",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-we_could_infer_the_query__citizenof__bronte___",
      "skos:broader",
      "Entity-inference"
    ],
    [
      "Entity-and_the_head_relates_different_pair_of_entity__x__t__to_the_pair_connected_via_the_body_of_the_same_rule__x__y_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-argument_embeddings_in_rlvlr",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-_e__e___satisfies_the_head_of_r",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-the_relevancy_of_a_question",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_product",
      "skos:broader",
      "Entity-product"
    ],
    [
      "Entity-then_that_entity_is_a_citizen_of_somewhere__t__.",
      "skos:broader",
      "Entity-citizenship"
    ],
    [
      "Entity-we_need_to_find_all_kg_fact_that_can_trigger_a_candidate_rule",
      "skos:broader",
      "Entity-fact_in_the_kg"
    ],
    [
      "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-entity_that_satisfy_the_second_argument_of_the_head",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-algorithm",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-iscitizenof",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-a_significant_number_of_obsolete_and_low-quality_rule",
      "skos:broader",
      "Entity-quality"
    ],
    [
      "Entity-the_op_rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-ophc",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-op_rule_learner",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted",
      "skos:broader",
      "Entity-the_problem_of_knowledge_graph_completion"
    ],
    [
      "Entity-we_(2)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-p___i1__(1)",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-_0_2_1_",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-p_1__...__p_n",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-extant_entity",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-target_predicate"
    ],
    [
      "Entity-the_collection_of_rule_r",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-for_argument_embeddings",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-test_fact_that_are_held_out_from_the_kg",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-x__y__z_1__...__z___n-1_",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_number_of_entity",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-e_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-entity_that_satisfy_the_second_argument_of_the_head",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-_2_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-s_p",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-we_evaluate_oprl_using_adaptation_of_freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-yago2_core",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-the_following_novel_component",
      "skos:broader",
      "Entity-novel_component"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-based_on_the_test_fact",
      "skos:broader",
      "Entity-foundation"
    ],
    [
      "Entity-the_target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-link_predictor_in_the_knowledge_graph_completion_process",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-thus__a__pk__is_a_matrix_of_binary_value_and_the_set__a__pk___k___1__...__m___represents_k",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-an_entity_involved_in_the_missing_fact",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_copy_dated_december_2014_provided_in_amie",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-a_novel_embedding-based_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_following_two_op_rule_which_are_mined_from_wikidata__with_their_opsc_and_ophc_value_respectively_.",
      "skos:broader",
      "Entity-opsc"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-presidentof__celine_dion___",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-traditional_link_prediction_system",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-each_card_is_described_using_two_attribute__suit_and_rank___for_a_total_of_10_predictive_attribute",
      "skos:broader",
      "Entity-class_attribute"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-it_ha_the_following_general_form__where_p_h_is_the_single_predicate_of_the_head__and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-citizenof__ann___",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-oprl_generates_query_even_when_there_is_no_closed_rule_to_answer_the_query__or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg_.",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-incpathfinding",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-specific_fact_that__if_true__are_missing_from_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-for_example_(1)",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-rule_learning_from_a_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-rule_language"
    ],
    [
      "Entity-x",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-the_model",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-x__y__z_1__...__z___n-1_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-a_hybrid_approach_is_preferable__see_table_3_",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-our_second_set_of_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-that_can_induce_q_from_the_given_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-body_of_the_rule",
      "skos:broader",
      "Entity-rule_body"
    ],
    [
      "Entity-decreasing_recall_a_poorer_rule_get_through",
      "skos:broader",
      "Entity-recall"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-rule_are_considered_more_useful_if_they_generalise_well__that_is__they_explain_many_fact_.",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-sequential_entity_along_the_path",
      "skos:broader",
      "Entity-path"
    ],
    [
      "Entity-representation_learning_method",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-for_example__if_we_have_p_t__e1__e2__a_a_fact__then_our_set_of_entity_includes_e1_and_e2_.",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-incpathfinding",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_problem_of_rule-based_knowledge_graph_completion",
      "skos:broader",
      "Entity-for_our_active_knowledge_graph_completion_task"
    ],
    [
      "Entity-entity_that_satisfy_the_first_argument_of_the_body",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-co-occurrence_fitness_function",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-multiple_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-a_rule_language_to_express_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-y",
      "skos:broader",
      "Entity-occupation"
    ],
    [
      "Entity-fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-for_entity"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-high_quality_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-e_5",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-first",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-for_sampling",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-user",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-op_rule_learning",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-reduced_kg__k_",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-the_kg_to_propose_missing_fact",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-a_set_of_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-we_introduce_open_path__op__rule_that_are_constrained_existential_rule_.",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-along_a_path_of_entity_that_satisfy_a_chain_of_predicate_in_the_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-sc_from_1_to_0.1__the_minimum_and_default_",
      "skos:broader",
      "Entity-setting"
    ],
    [
      "Entity-the_performance_of_fitness_function_proposed_for_oprl",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-new_short_op_rule",
      "skos:broader",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-_0_2_1_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-opsc",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-rule_with_more_complex_shape",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-a_shared_entity_in_place_of_z0",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-rule_with_free_variable",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_correct_and_complete_kg_for_experiment",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-r_is_defined_a",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-entity_e_and_e_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-sam",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_correct_and_complete_kg_for_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-a_novel_method_for_learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-existential_rule",
      "skos:broader",
      "Entity-a_rule_language_to_express_rule"
    ],
    [
      "Entity-previous_rule-based_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-to_quantify_this_idea__we_recall_measure_support__head_coverage__and_standard_confidence_that_are_used_in_some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-e_1",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-rule_learning_method_for_kg",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-we_introduce_open_path__op__rule_that_are_constrained_existential_rule_.",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-method_for_automatic_completion__sometimes_by_rule_learning__scale_well_.",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-the_generated_query_may_be_valid_but_there_is_no_answer_in_the_test_set",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-early_exploration_published_in",
      "skos:broader",
      "Entity-article"
    ],
    [
      "Entity-open_path_head_coverage_of_r",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-o_e",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation",
      "skos:broader",
      "Entity-latent_representation"
    ],
    [
      "Entity-let_r_be_an_open_path_rule_of_the_form__2__.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_top_t__of_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rule_learning_from_a_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-a_set_of_entity",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-novel_hybrid_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-an_entity_already_present_in_the_kg",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-embeddings_are_computed_only_for_entity_that_are_relevant_to_a_target_predicate_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-rule_mining",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-the_first_method_to_learn_rule_to_generate_relevant_question_automatically",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-entity_resolution",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-max_operator",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-subject_and_object_argument",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-p____e___or_q__p__e___",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-bronte__canberra",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-k",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-in_a_country__w_",
      "skos:broader",
      "Entity-nation"
    ],
    [
      "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted",
      "skos:broader",
      "Entity-knowledge_graph_completion_task"
    ],
    [
      "Entity-our_novel_heuristic_function_for_mining_op_rule",
      "skos:broader",
      "Entity-heuristic_function"
    ],
    [
      "Entity-each",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-_open_path__opsupp__opsc__ophc_",
      "skos:broader",
      "Entity-ophc"
    ],
    [
      "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-the_support_of_r",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-the_quality_of_each_candidate_rule",
      "skos:broader",
      "Entity-quality"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-rescal_embeddings",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-existential_rule",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-entity_e_is_an_identifier_for_an_object_such_a_a_place_or_a_person__and_a_fact__also_known_a_a_link__is_an_rdf_triple__e__p__e____whereby_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-an_op_rule_(1)",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-reduced_kg__k_",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-evaluation_method",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-active_kgc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-pair",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-generating_relevant_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-new_fact_in_the_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-o_p",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_first_solution",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-various_method",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-m_1",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-based_on_the_test_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-evaluating_op_rule__we_propose_an_efficient_method_to_exactly_compute_the_quality_of_each_rule_by_matrix_and_vector_operation_.",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-the_problem_of_rule-based_knowledge_graph_completion",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-a_co-occurrence_fitness_function_for_mining_cp_rule",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-the_method_for_computing_opsc_and_ophc",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-this_kind_of_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-an_op_rule",
      "skos:broader",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-novel_heuristic_function",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-_e_1__e_2__e_3__e_4__e_5_",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-e0",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-novel_fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-query_even_when_there_is_no_closed_rule_to_answer_the_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-in_shortest-first_order",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-the_following_two_op_rule_which_are_mined_from_wikidata__with_their_opsc_and_ophc_value_respectively_.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-query_soliciting_missing_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-each_entity_e_i",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-reduced_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-we_evaluate_oprl",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-a_heuristic_for_mining_logical_axiom",
      "skos:broader",
      "Entity-logical_axiom"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-rlvlr__doe",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-each_poker_hand",
      "skos:broader",
      "Entity-poker_hand"
    ],
    [
      "Entity-in_a_country__w_",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-each_selected_randomly_with_probability_of_it_proportion_in_the_test_set",
      "skos:broader",
      "Entity-test_set"
    ],
    [
      "Entity-our_argument_embeddings",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-citizenof__bronte___",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-the_problem",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-the_method_for_computing_opsc_and_ophc",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-this_observation",
      "skos:broader",
      "Entity-observation"
    ],
    [
      "Entity-studiesin__sam__anu_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-novel_heuristic_function",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-and_a_rule-based_link_predictor",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph__kg_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-o_p",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-they_(1)",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-_e_1__e_2__e_3__e_4__e_5_",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-massive_kg_in_a_reasonable_time",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-livesin__bronte__canberra_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-incpathfinding__",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-a_sequence_of_predicate_p1___p2___...__pn_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-e_4",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-add_incpathfinding__k___p_t__p__a__k__r__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rlvlr__doe",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_count",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-full_benchmark_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-e0",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-kg_sampling",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-then_the_support_of_r_count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg_.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-e_",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-for_oprl_to_scale_well__we_propose_a_novel_embedding-based_fitness_function_to_efficiently_estimate_rule_quality",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-s_e",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-two_attribute__suit_and_rank_",
      "skos:broader",
      "Entity-attribute__suit_and_rank_"
    ],
    [
      "Entity-head_with_one_free_variable",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-evaluation_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a_given_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-a_ranked_sequence_of_answer",
      "skos:broader",
      "Entity-answer"
    ],
    [
      "Entity-to_obtain_the_vector_v__2___p1_",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-link_prediction"
    ],
    [
      "Entity-f___p1__e1__e2___p1__e2__e1___p1__e2__e3___p1__e3__e1___p2__e1__e2___p2__e3__e2___p2__e3__e3___p1__e1__e3__",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-rescal_embeddings",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-presenter",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-let_k___e__f__be_a_kg_.",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-where_p_h_is_the_single_predicate_of_the_head",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-oprl_generates_query_even_when_there_is_no_closed_rule_to_answer_the_query__or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg_.",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-e_7",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-to_the_problem_of_active_knowledge_graph_completion__akgc_",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-for_our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-in_knowledge_graph_completion"
    ],
    [
      "Entity-massive_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-representation_learning_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_performance_of_oprl_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-fb15k_selected",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-co-occurrence_fitness_function",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-chai",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_rule_is_true",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-0.50",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-to_quantify_this_idea__we_recall_measure_support__head_coverage__and_standard_confidence_that_are_used_in_some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-p1__e1__e2_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-evaluation_method",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-_e.g_._citizenof__ann____",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-specific_fact_that__if_true__are_missing_from_the_kg",
      "skos:broader",
      "Entity-_e__f_"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-latent-feature_relationship",
      "skos:broader",
      "Entity-latent_feature"
    ],
    [
      "Entity-op_rule_learning",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-_e_3__e_4__e_5_",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-argument",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-open_path"
    ],
    [
      "Entity-entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-specific_fact_that__if_true__are_missing_from_the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-evaluating_op_rule",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-p_1__e__e_1_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-it_head_and_body",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-in_other_word__a_pair_of_entity_satisfies_both_the_body_and_the_head_of_a_cp_rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-predicate_a_vector_and_use_an_additive_calculus_for_scoring",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_body_and_the_head_of_a_cp_rule",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-candidate_rule_by_opsc_and_ophc_in_evaluate__",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-livesin",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_number_of_entity_that_satisfy_the_body_of_a_rule",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-each_rule_on_generation_to_rapidly_discard_poor_performer",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-rlvlr_and_scalekb_use_so-called_closed_path__cp__rule_that_are_a_kind_of_closed_rule_with_no_free_variable",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-association_rule_mining",
      "skos:broader",
      "Entity-rule_mining"
    ],
    [
      "Entity-these_parameter_are_the_optimum_obtained_by_tuning_.",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-hybrid_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-e3",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-p___i1_",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-this_paper_(1)",
      "skos:broader",
      "Entity-this_paper"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-body"
    ],
    [
      "Entity-to_ask_the_best_question_to_complete_a_kg_.",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-the_head_of_the_rule_(1)",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-fewer_rule_and_ha_much_weaker_performance_because_it_ha_significantly_fewer_repeatable_pattern",
      "skos:broader",
      "Entity-performance"
    ],
    [
      "Entity-head_with_one_free_variable",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-_m_1__m_2_",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-given_predicate_p",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_body_of_each_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-entity_that_are_related_to_the_existing_entity_in_the_set",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-e_3",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-then_the_existence_of_an_instance_of_the_head_with_one_free_variable__viz_the_query_p_t____e_",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-new_short_op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-query_about_potential_missing_fact",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-p_2__z_0__z_1_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-p_1____e_2_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-the_overall_rule_from_the_perspective_of_the_predicate",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-these_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-canberra",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-a_novel_embedding-based_fitness_function",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-it_embedding_representation",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-e_2",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-agkgc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-hybrid_approach",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-p_1__e_8__e_7_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-yago2",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-marriedto__x__z_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-trial_oprl_in_a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-freebase",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-false_positive_rate",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-experimental_setting",
      "skos:broader",
      "Entity-setting"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_novel_algorithm",
      "skos:broader",
      "Entity-novel"
    ],
    [
      "Entity-this_rule_(1)",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-active_kgc",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-x",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-algorithm",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-specific_fact_that__if_true__are_missing_from_the_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-several_direction_for_future_research_to_handle_existential_rule_learning",
      "skos:broader",
      "Entity-future_work"
    ],
    [
      "Entity-pathfinding___(1)",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-prand",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-k___e__f_",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-locatedin__z__y_",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-our_proposed_system",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-only_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-oprl_can_learn_plausible_rule_over_popular_benchmark_kg_of_over_eight_million_fact_and_four_million_entity_in_less_than_two_hour",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-learnt_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-sequential_entity",
      "skos:broader",
      "Entity-set_of_entity"
    ],
    [
      "Entity-there_is_a_tv_program__z__that_ha_a_participant__w__that_ha_an_occupation__y___then_it_is_likely_that_the_presenter_of_the_program__x__is_known_.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-m_2",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-subject_and_object_argument",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-yago2_core",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-in_closed_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-and_so_significantly_improve_scalability",
      "skos:broader",
      "Entity-scalability"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-opsupp__opsc__ophc",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-a__pk___i__j_",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-for_our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-r___evaluation__r___k__.",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-x_is_a_citizen_of_somewhere__y_",
      "skos:broader",
      "Entity-citizenship"
    ],
    [
      "Entity-experimentally__we_find_that_they_complement_each_other",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted",
      "skos:broader",
      "Entity-for_our_active_knowledge_graph_completion_task"
    ],
    [
      "Entity-that_is_known_to_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-probabilistic-based_query_generator",
      "skos:broader",
      "Entity-query_generation_task"
    ],
    [
      "Entity-open_path",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-rule_learner",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-the_embeddings_for_predicate_and_argument_in_the_sample_kg",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_nation_in_which_that_city_is_located",
      "skos:broader",
      "Entity-nation"
    ],
    [
      "Entity-oprl_rule",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-b",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-data-first_approach",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-head_coverage",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-_x__z_i__y_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-evaluation__",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-for_learning_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-three_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-our_question_in_this_paper",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-a_pair_of_entity_(2)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-region",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-an_op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-open_path__op__rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-rlvlr_algorithm",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-process_for_generating_relevant_query",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-we_define_the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query",
      "skos:broader",
      "Entity-confidence"
    ],
    [
      "Entity-rule_body",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-_e__e__such_that_p__e__e____f_",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-a_subject__respectively_object__entity_is_assigned_by_random_selection_of_an_entity_with_probability_of_it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-an_answer_to_the_question",
      "skos:broader",
      "Entity-the_answer_to_a_question_in_the_test_set"
    ],
    [
      "Entity-v__1___b_",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-p3__z1__z2_",
      "skos:broader",
      "Entity-logical_rule"
    ],
    [
      "Entity-by_instantiating_the_body_of_this_rule_a_follows",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-fitness_function",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-some_topic_are_more_richly_covered_than_others",
      "skos:broader",
      "Entity-topic"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-oracle_or_a_human_expert",
      "skos:broader",
      "Entity-oracle"
    ],
    [
      "Entity-table_1",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-open_path_standard_confidence",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-similarity_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "skos:broader",
      "Entity-learnt_rule"
    ],
    [
      "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-to_ask_the_best_question_to_complete_a_kg_.",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph__kg_",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-open_path_(1)",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-parentof__z__y_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-curating_task_including_link_prediction_that_predict_missing_fact_about_extant_entity",
      "skos:broader",
      "Entity-evaluating_link_predictor"
    ],
    [
      "Entity-to_quantify_this_idea__we_recall_measure_support__head_coverage__and_standard_confidence_that_are_used_in_some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-r_be_an_op_rule_of_the_form__2_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-p____e___and_p__e___",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-rule_learning_method_for_kg",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-sample_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-method_for_automatic_completion__sometimes_by_rule_learning__scale_well_.",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-a_query_is_counted_a_true_if_it_ha_an_instance_fact_in_the_test_data_and_false_otherwise",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-they_fail_to_record_relevant_entity__a_well_a_relevant_relationship_for_the_entity_they_do_record",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_author",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-about_that_predicate",
      "skos:broader",
      "Entity-topic"
    ],
    [
      "Entity-a_person_s_city_of_residence",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-the_first_work_on_active_knowledge_graph_completion",
      "skos:broader",
      "Entity-our_work"
    ],
    [
      "Entity-e_7",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-all_the_mined_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-sampling",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-learning_and_operating_on_latent_representation_benefit_from_the_use_of_unobserved_but_intrinsic_property_of_entity_and_their_relation",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-query_generation"
    ],
    [
      "Entity-to_rapidly_estimate_a_rule_s_quality",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-rule-based_method_learn_closed__non-existential__rule",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-a__p1_",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-n",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-rescal_evaluation_function_for_a_single_predicate",
      "skos:broader",
      "Entity-evaluate__"
    ],
    [
      "Entity-embedding_model",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-some_missing_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-thus__a__pk__is_a_matrix_of_binary_value_and_the_set__a__pk___k___1__...__m___represents_k",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-e___e1__e2__e3_",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-s_e",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-existing_embedding-based_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-the_problem_of_active_knowledge_graph_completion__akgc_",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-to_quantify_this_idea__we_recall_measure_support__head_coverage__and_standard_confidence_that_are_used_in_some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-rule_learning_method_for_kg",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-it_ha",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-rule_mining",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "skos:broader",
      "Entity-query_generation"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-those_in_more_recent_embedding-based_link_predictor_such_a_hole_and_tucker",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-our_question_in_this_paper",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-let_k___e__f__be_a_kg_.",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-it_embedding_representation",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-the_full_benchmark_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-three_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-wikidata",
      "skos:broader",
      "Entity-collaboratively-created"
    ],
    [
      "Entity-the_kg__k__",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-the_quality",
      "skos:broader",
      "Entity-quality"
    ],
    [
      "Entity-embeddings__k__",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-massive_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-target_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-according_to_the_fitness_function",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-the_complexity_of_the_learning_phase_manageable",
      "skos:broader",
      "Entity-learning"
    ],
    [
      "Entity-rule_with_more_complex_shape__such_a_star",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_rest_of_the_paper",
      "skos:broader",
      "Entity-this_paper"
    ],
    [
      "Entity-0.50",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-rule_mining",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-learnt_op_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-subject_argument",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-presidentof",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-and_a_rule-based_link_predictor",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-entity_e_and_e__occurring_in_the_kg",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-p_t",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-e_j__rd_and_each_predicate_p_i_to_a_2d_array_p_i__r__dd_",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-rule_to_generate_relevant_question_automatically",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-we_could_infer_the_query__citizenof__bronte___",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-f_coo",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-similar_entity",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-rescal_learns_the_two_set_of_embeddings__vector__e_i__and_matrix__p_k___by_minimizing_a_loss_function_defined_over_the_product_of_the_entity_and_predicate_embeddings_.",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-relevant_question",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-knowledge_graph_completion",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-e_8",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-for_entity_e__we_write_it_embedding_vector_a_e",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-link_prediction_model",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-sampling__",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-support",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-the_rule_is_extended_to_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-an_op_rule_of_the_form__2_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph__kg_",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-our_proposed_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-e",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-we_assess_(1)",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-we_used",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-link",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-agkgc",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-probabilistic-based_query_generator",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-whence_doe_a_query_arise_to_drive_the_link_predictor_",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-performance",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-standard_confidence__sc_",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-of_the_way_that_the_body_is_satisfied_in_the_kg",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-e__e1__...__en_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-plausible_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-the_following_op_rule",
      "skos:broader",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-either_of_the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-the_learnt_rule",
      "skos:broader",
      "Entity-learnt_rule"
    ],
    [
      "Entity-the_method_initializes_a_set_of_entity_by_considering_a_number_of_entity_which_are_involved_in_the_target_predicate_.",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-embeddings__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-p3__z1__z2_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-e1_and_e2",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-vector_space",
      "skos:broader",
      "Entity-computing"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-assessed_over_the_whole_kg",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-e_2",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-knowledge_graph_completion_approach"
    ],
    [
      "Entity-we_could_infer_the_query",
      "skos:broader",
      "Entity-inference"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-knowledge_graph_completion_approach",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-let_k___e__f__be_a_kg_.",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-it_embedding_representation_(1)",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-the_candidate_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_low-dimensional_vector_space_of_latent__unnamed_feature_not_present_in_the_kg_vocabulary",
      "skos:broader",
      "Entity-vector_space"
    ],
    [
      "Entity-denoted_p_h__e__e____if_p_h__e__e___is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-it_is_likely_that_the_place_of_birth_of_that_person",
      "skos:broader",
      "Entity-a_place_or_a_person"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-for_entity"
    ],
    [
      "Entity-massive_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-minimum_sc_parameter",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-additionally__we_introduce_a_novel__efficient_vector_computation_to_formally_assess_rule_quality_.",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-a_heuristic_for_mining_logical_axiom",
      "skos:broader",
      "Entity-heuristic"
    ],
    [
      "Entity-_ei__j_a__p1___i__j___0_and_1__j__n_",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-sampled_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-the_co-occurrence_of_z_0_a_the_object_argument_of_p_t_and_subject_argument_of_p_1__and_z_i__1__i__n_-_1__a_the_object_argument_of_p_i_and_subject_argument_of_p___i1_",
      "skos:broader",
      "Entity-co-occurrence"
    ],
    [
      "Entity-the_intended_scope_of_kg",
      "skos:broader",
      "Entity-scope"
    ],
    [
      "Entity-p_in_k_respectively",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-vector_space"
    ],
    [
      "Entity-a_maximum_rule_length_of_4",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-the_kg_to_propose_missing_fact",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-locatedin",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_product_of_the_predicate_embeddings_along_the_path",
      "skos:broader",
      "Entity-product"
    ],
    [
      "Entity-top_candidate_rule",
      "skos:broader",
      "Entity-candidate_rule"
    ],
    [
      "Entity-entity_satisfying_the_subject_argument_of_the_head_predicate__p_t",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-a_novel_algorithm",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-derived_from_the_closed_path_form__definition_2__.",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-an_entity_x",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-oprl_generates_query_even_when_there_is_no_closed_rule_to_answer_the_query__or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg_.",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-a_relevant_query_is_induced",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-every_instantiation_of_a_cp_rule",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_query_arise_in_an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-the_op_rule_learning_method_oprl",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-a_closed_path__or_single_unbroken_loop_of_link_between_the_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-prand_query_are_generated_by_first_selecting_a_bag_of_predicate",
      "skos:broader",
      "Entity-query_generation"
    ],
    [
      "Entity-for_example__the_following_op_rule__citizenof__x__t___livesin__x__z___state_that_if_an_entity__x__life_in_z",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-highestpoint__z__x_",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-web_question-answering_engine",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-the_following_scoring_function_is_defined",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-closed_rule_complete_a_kg_by_answering_query_of_unclear_origin__usually_derived_from_a_holdback_test_set_in_experimental_setting_.",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-prand",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-section_5_present_the_process_for_generating_relevant_query_derived_from_the_learnt_op_rule",
      "skos:broader",
      "Entity-generated_query"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-embedding_model"
    ],
    [
      "Entity-rule_learning",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-which_can_instantiate_z_0_to_satisfy_both_p_1__x__z_0__and_p_2__z_0__z_1___p_3__z_1__y_",
      "skos:broader",
      "Entity-instantiation"
    ],
    [
      "Entity-an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-placeofbirth__z__x_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head",
      "skos:broader",
      "Entity-learnt_rule"
    ],
    [
      "Entity-the_utility_of_our_fitness_function",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-fewer_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rescal_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-e3",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-the_number_of_induced_query",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-that_if_an_entity__x__life_in_z__then_that_entity_is_a_citizen_of_somewhere__t_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-oprl_generates_query_even_when_there_is_no_closed_rule_to_answer_the_query__or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg_.",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-a_kg"
    ],
    [
      "Entity-automated_link_predictor",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_following_two_op_rule_which_are_mined_from_wikidata__with_their_opsc_and_ophc_value_respectively_.",
      "skos:broader",
      "Entity-ophc"
    ],
    [
      "Entity-the_performance_of_oprl_query",
      "skos:broader",
      "Entity-performance"
    ],
    [
      "Entity-predictive_attribute",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-challenge",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-highly_relevant_query_for_missing_link",
      "skos:broader",
      "Entity-link"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-query_generation_task"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-a_link_predictor_(1)"
    ],
    [
      "Entity-opscophc_score",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-embeddings",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-op_rule_learning",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-table_2",
      "skos:broader",
      "Entity-article"
    ],
    [
      "Entity-oprl_can_learn_rule_for_kg_with_varying_size_and_degree_of_incompleteness",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-head_variable",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-participant__z__w_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-our_algorithm",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-e_1",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-a_single_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-e_4",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-place_of_birth",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-op_rule_can_be_used_to_generate_the_query",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-we_first",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-entity_satisfying_the_subject_argument_of_the_head_predicate__p_t",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-yago2",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-it_embedding_matrix_a_p__also_called_a_weight_matrix",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-the_subject_argument_of_the_head_predicate",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-poker_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph_completion"
    ],
    [
      "Entity-to_find_distinct_entity",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-the_answer_to_a_question_in_the_test_set",
      "skos:broader",
      "Entity-answer"
    ],
    [
      "Entity-an_entity_e_(1)",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-let_r_be_an_op_rule_of_the_form_given_earlier_.",
      "skos:broader",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-experimental_setting",
      "skos:broader",
      "Entity-all_experiment"
    ],
    [
      "Entity-the_head_of_the_rule_by_finding_an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-_e.g_._citizenof__ann____",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-op_rule_learning",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-some_major_approach_to_rule_learning",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-for_illustration",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-generated_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-to_ask_the_best_question_to_complete_a_kg_.",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-_e___e_",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-embedding_model",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-the_fitness_function_adapted_from_rlvlr",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-missing_fact"
    ],
    [
      "Entity-the_former",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-held_back_from_training_data_for_a_link_predictor",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-the_product_of_the_predicate_embeddings_along_the_path",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-the_head",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-adjacency_matrix_representation_of_the_kg",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-rlvlr_and_scalekb_use_so-called_closed_path__cp__rule_that_are_a_kind_of_closed_rule_with_no_free_variable",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-a_region__z_",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-rule",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_link_predictor_(2)",
      "skos:broader",
      "Entity-perfect_link_predictor"
    ],
    [
      "Entity-to_ask_the_best_question_to_complete_a_kg_.",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-this_known-missing_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-instance_of_the_rule_body",
      "skos:broader",
      "Entity-for_example"
    ],
    [
      "Entity-for_argument_embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-a_fully_automated_framework_for_kg_completion",
      "skos:broader",
      "Entity-kg_completion"
    ],
    [
      "Entity-then_the_support_of_r_count_the_head__target__instance_for_which_the_rule_body_and_head_are_both_satisfied_in_the_kg_.",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-coverage",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-the_method_for_computing_opsc_and_ophc",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-they_(2)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-sc_and_opsc_are_similar_measure",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-increasing_length",
      "skos:broader",
      "Entity-length"
    ],
    [
      "Entity-an_entity_e_(1)",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-we_implement_an_inference_module_that_derives_query_from_kg_fact_together_with_op_rule_found_by_algorithm_1",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-incpathfinding__",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-link_prediction"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-place",
      "skos:broader",
      "Entity-locatedin"
    ],
    [
      "Entity-p_1__e_9___",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-support_degree",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-op_rule_from_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-we_need_to_find_all_kg_fact_that_can_trigger_a_candidate_rule",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-in_contrast__we_predict_the_existence_of_missing_fact_even_when_an_entity_involved_in_the_missing_fact_may_be_absent_from_the_kg",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-rule_s_quality",
      "skos:broader",
      "Entity-quality"
    ],
    [
      "Entity-presidentof____usa_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-_e__f_"
    ],
    [
      "Entity-object_argument",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-co-occurrence",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-active_kgc",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-fitness_function",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-b",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-a_pair_of_entity_(1)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-early_exploration",
      "skos:broader",
      "Entity-previous_work"
    ],
    [
      "Entity-p_i",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-pairwise_local_fitness_function_are_defined_accordingly",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-open_path__op__rule_that_are_constrained_existential_rule",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-a_user_engaged_in_a_curating_task_or_to_a_web_question-answering_engine",
      "skos:broader",
      "Entity-user"
    ],
    [
      "Entity-rescal_embeddings",
      "skos:broader",
      "Entity-compositional_embeddings"
    ],
    [
      "Entity-_p_1__e_1__e_2___p_1__e_1__e_3___p_1__e_4__e_5___p_1__e_8__e_7___p_1__e_9__e_7__",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-_3_",
      "skos:broader",
      "Entity-n"
    ],
    [
      "Entity-we_can_now_mine_op_rule_with_measurable_quality_from_kg",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-opsc_and_ophc_are_supplied_to_algorithm_1_at_runtime__and_evaluation___discard_failing_rule_.",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-enterprise_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-but_only_a_question_.",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-either_of_the_fitness_function__f_op__.__or_f_coo__.___over_the_other",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-from_an_instantiation_of_the_body_of_an_op_rule__we_can_not_infer_a_fact",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-active_kgc",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-rule_learning_from_a_kg",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-embeddings_learned_by_rescal",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-bronte__canberra",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-in_a_country__w_",
      "skos:broader",
      "Entity-country_(1)"
    ],
    [
      "Entity-a_pair_of_entity",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-the_problem_of_rule-based_knowledge_graph_completion",
      "skos:broader",
      "Entity-in_knowledge_graph_completion"
    ],
    [
      "Entity-full_benchmark_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-cd",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-all_predicate_in_the_respective_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-the_sensitivity_of_the_performance_of_oprl_query_to_the_opsc_threshold",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-_e__e___satisfies_the_head_of_r",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-kg"
    ],
    [
      "Entity-the_two_metric__opsc_and_ophc",
      "skos:broader",
      "Entity-opsc"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-we_(10)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-m_2",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-target_predicate_in_the_head__p",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-we_(1)",
      "skos:broader",
      "Entity-author"
    ],
    [
      "Entity-_e_i_",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-we_introduce_open_path__op__rule_that_are_constrained_existential_rule_.",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-or_do_you_generate_query_with_a_preference_given_to_those_with_a_higher_probability_in_the_kg_",
      "skos:broader",
      "Entity-they_(1)"
    ],
    [
      "Entity-",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-article"
    ],
    [
      "Entity-the_following_op_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-rule_learning_system"
    ],
    [
      "Entity-those_with_a_higher_probability_in_the_kg",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-e_5",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-we_use_the_sampling_algorithm__sampling____proposed_in_rlvlr",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-open_path__op__rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-the_query_generation_task",
      "skos:broader",
      "Entity-query_generation"
    ],
    [
      "Entity-query_from_op_rule",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-argument_embeddings_for_the_subject_argument_of_p_t_and_the_object_argument_of_p_n",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-rule-based_link_predictor",
      "skos:broader",
      "Entity-a_link_predictor"
    ],
    [
      "Entity-opsupp",
      "skos:broader",
      "Entity-open_path"
    ],
    [
      "Entity-the_utility_of_our_fitness_function",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-z3",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-a_novel_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-our_agkgc",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_top_10__of_the_op_rule_according_to_the_fitness_function",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-the_model",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-missing_entity",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-the_open_path_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-e2_and_e3",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_following_op_rule",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-the_rule_citizenof",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-it_embedding_representation",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-100__hc_and_sc",
      "skos:broader",
      "Entity-hc"
    ],
    [
      "Entity-z",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-a_subject__respectively_object__entity_is_assigned_by_random_selection_of_an_entity_with_probability_of_it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set",
      "skos:broader",
      "Entity-test_set"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-e_5",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-chai",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-full_benchmark_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-this_paper_(2)",
      "skos:broader",
      "Entity-this_paper"
    ],
    [
      "Entity-oprl",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-the_spouse_of_a_person__z__is_known__it_is_likely_that_the_place_of_birth_of_that_person_is_also_known_.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-the_learnt_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-participant",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-missing_entity",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-chai_filter_fact_before_supplying_them_to_a_link_predictor",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-oprl_find_high_quality_rule",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-it_is_closely_related_to_confidence_widely_used_in_association_rule_mining",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-towards_learning_existential_rule_from_knowledge_graph",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-to_find_distinct_entity__we_sum_each_row_corresponding_to_each_value_for_the_first_argument_to_obtain_the_vector_v__1___b_",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-studiesin__x__z_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-citizenof__ann___",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-entity_e_and_e_",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-e_4",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-citizenof__bronte___",
      "skos:broader",
      "Entity-citizenship"
    ],
    [
      "Entity-city_of_residence",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-we_define_the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-the_problem_of_knowledge_graph_completion"
    ],
    [
      "Entity-the_maximum_length_of_target_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-opsupp__opsc__ophc",
      "skos:broader",
      "Entity-open_path"
    ],
    [
      "Entity-p1__e3__e1_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_pair_of_entity__e__e___satisfies_the_body_of_r",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-if_we_have_the_fact_in_the_kg",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-_0_",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-latent_representation",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-predictor"
    ],
    [
      "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-for_learning_op_rule",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-6__co-occurrence_fitness_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-we_will_use_the_mined_rule_for_generating_query__so_we_need_some_hold-out_fact_for_query_evaluation_.",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-d_(1)",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-kg_fact",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-let_r_be_an_op_rule_of_the_form_given_earlier_.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-existential_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-prand",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-cardinality",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-incpathfinding__",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-this_can_be_obtained_directly_from_the_matrix_product_b__a__p1__a__p2__..._a__pm_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-latter",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_first_focus_on_entity_and_the_second_on_predicate",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-we_used",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-the_problem_of_rule-based_knowledge_graph_completion",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-a_setting_for_human-curated_maintenance_on_an_enterprise_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-isbornin",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-the_entity_which_satisfy_the_second_argument_of_p_t",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-a_fact_is_missing_even_when_there_is_evidence_for_only_one_entity_of_the_pair__and_a_question_is_generated_accordingly",
      "skos:broader",
      "Entity-pair"
    ],
    [
      "Entity-open_path_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-learning_open_path_rule_from_a_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-entity_resolution",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-hundred_of_accurate_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-pathfinding__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-fb15k_selected__which_we_call_fb15kse_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-two_fitness_function__co-occurrence_or_open_path__both_of_which_are_derived_from_embedding_representation",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-the_co-occurrence_fitness_function_for_cp_rule_used_in_rlvlr",
      "skos:broader",
      "Entity-rlvlr"
    ],
    [
      "Entity-comparative_system",
      "skos:broader",
      "Entity-system"
    ],
    [
      "Entity-oprl_to_learn_op_rule_about_p_in_the_head_and_then_use_the_rule_to_induce_query_of_the_form_p____e___and_p__e___",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-e0",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-continent__w__y_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-usa",
      "skos:broader",
      "Entity-nation"
    ],
    [
      "Entity-a_set_of_entity",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-specific_fact_that__if_true__are_missing_from_the_kg",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-rule_learning_from_a_kg",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-our_proposed_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-probabilistic_baseline",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-link_predictor_to_complete_the_kg",
      "skos:broader",
      "Entity-fully_automated_kg_completion"
    ],
    [
      "Entity-it_embedding_representation",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-opsc_and_ophc_are_supplied_to_algorithm_1_at_runtime__and_evaluation___discard_failing_rule_.",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_vector_v__1___b_",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-rule_learning_system"
    ],
    [
      "Entity-we_used",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-weight_matrix"
    ],
    [
      "Entity-like_rescal__we_represent_k_a_a_set_of_square_n__n_adjacency_matrix_by_defining_the_function_a",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-each_fitness_function",
      "skos:broader",
      "Entity-similarity_fitness_function"
    ],
    [
      "Entity-that_join_the_head_of_a_rule_to_it_body_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-subject_and_object_argument",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-possible_query_about_this_set_of_fact_are___p_1__e_1_____p_1____e_2___p_1____e_3___p_1__e_4_____p_1____e_5___p_1__e_8_____p_1__e_9_____p_1____e_7__",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rescal_evaluation_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown",
      "skos:broader",
      "Entity-traditional_knowledge_graph_completion"
    ],
    [
      "Entity-translation-based_embeddings",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f"
    ],
    [
      "Entity-the_first_focus_on_entity_and_the_second_on_predicate",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-confidence",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-citizenof__ann___",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-latent-feature_relationship",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-the_first_focus_on_entity_and_the_second_on_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-active_knowledge_graph_completion",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-pairwise_local_fitness_function",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-genuinely_missing_fact",
      "skos:broader",
      "Entity-missing_fact"
    ],
    [
      "Entity-reduced_kg__k_",
      "skos:broader",
      "Entity-public_knowledge_graph"
    ],
    [
      "Entity-this_begs_the_question__whence_doe_the_query_arise_in_an_industrial_application_of_a_link_prediction_model_",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-evaluation__",
      "skos:broader",
      "Entity-evaluation_method"
    ],
    [
      "Entity-e0",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-head_variable",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-each_argument_s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-existential_rule",
      "skos:broader",
      "Entity-rule_language"
    ],
    [
      "Entity-iscitizenof__x__y_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-d",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-open_path_rule__op_"
    ],
    [
      "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-definition_7",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-embedding_model",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-fact_p_1__e0__e1_",
      "skos:broader",
      "Entity-information"
    ],
    [
      "Entity-query_evaluation",
      "skos:broader",
      "Entity-evaluation__"
    ],
    [
      "Entity-you_have_a_kg_and_a_high-performing_link-predicting_model_built_for_the_kg",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-e_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-the_op_rule_learning_method_oprl",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-the_collection_of_rule_r",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-usa",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-closed_rule_complete_a_kg_by_answering_query_of_unclear_origin__usually_derived_from_a_holdback_test_set_in_experimental_setting_.",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-rescal_embeds_each_entity_e_j_to_a_vector_e_j__rd",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-vector_v__2___p1_",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-open-ended_question__e.g_._citizenof__ann_____instead_of_fact__e.g_._citizenof__ann__australia__",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-link_prediction_model"
    ],
    [
      "Entity-_2_",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-entity_embeddings",
      "skos:broader",
      "Entity-embedding"
    ],
    [
      "Entity-or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-tucker",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-each_entity_e_i",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-each_non-zero_element_of_this_vector_indicates_a_satisfying_entity",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-_3_",
      "skos:broader",
      "Entity-count"
    ],
    [
      "Entity-the_op_rule_learning_method_oprl",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-k_",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-representation_learning_for_kg_completion",
      "skos:broader",
      "Entity-representation_learning"
    ],
    [
      "Entity-a_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-a_link_predictor_(3)",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-a_link_predictor_(2)",
      "skos:broader",
      "Entity-rule-based_link_predictor"
    ],
    [
      "Entity-closed_rule_complete_a_kg_by_answering_query_of_unclear_origin__usually_derived_from_a_holdback_test_set_in_experimental_setting_.",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-kg_completion_in_this_way_predicts_answer_for_known_unknown",
      "skos:broader",
      "Entity-link_predictor_in_the_knowledge_graph_completion_process"
    ],
    [
      "Entity-three_different_kg",
      "skos:broader",
      "Entity-kg_fact"
    ],
    [
      "Entity-the_final_result_of_the_algorithm",
      "skos:broader",
      "Entity-result"
    ],
    [
      "Entity-formally__the_cd_of_q_is_defined_a_follows_for_a_query_q__p____e___or_q__p__e____and_the_collection_of_rule_r_that_can_induce_q_from_the_given_kg_",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-proposed_system",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-fitness_function",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-rlvlr_",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-training_data"
    ],
    [
      "Entity-o_p",
      "skos:broader",
      "Entity-entity_(2)"
    ],
    [
      "Entity-e_",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-where_p_h_is_the_single_predicate_of_the_head",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-p__1_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-parameter",
      "skos:broader",
      "Entity-setting"
    ],
    [
      "Entity-and_a_rule-based_link_predictor",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-a_correct_and_complete_kg_for_experiment",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-algorithm_1",
      "skos:broader",
      "Entity-_4_"
    ],
    [
      "Entity-op_rule_from_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-argument_embeddings",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-we_sum_each_row_corresponding_to_each_value_for_the_first_argument",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-to_find_distinct_entity",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-rlvlr_and_scalekb",
      "skos:broader",
      "Entity-knowledge_graph_completion_task"
    ],
    [
      "Entity-entity_that_satisfy_the_first_argument_of_the_body",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-entity_embeddings"
    ],
    [
      "Entity-all_experiment",
      "skos:broader",
      "Entity-experiment"
    ],
    [
      "Entity-for_an_op_rule_of_the_form__2___if_an_instance_of_the_rule_body_such_a_p_1__e__e_1___p_2__e_1__e_2___...__p_n__e___n-1___e___exists_in_the_kg",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-_open_path_fitness_",
      "skos:broader",
      "Entity-the_co-occurrence_fitness_function"
    ],
    [
      "Entity-op_rule_for_a_target_predicate_p_i_and_it_inverse_p_i-1_in_pathfinding__",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-p1",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-e_3",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-z_i",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-poker_hand_",
      "skos:broader",
      "Entity-poker_hand"
    ],
    [
      "Entity-the_nation_in_which_that_city_is_located",
      "skos:broader",
      "Entity-country_(1)"
    ],
    [
      "Entity-a_ranked_sequence_of_answer",
      "skos:broader",
      "Entity-the_answer_to_a_question_in_the_test_set"
    ],
    [
      "Entity-the_entity_that_satisfy_the_first_argument_of_p_t",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-link_prediction",
      "skos:broader",
      "Entity-problem"
    ],
    [
      "Entity-to_find_distinct_entity",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-kg_k",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-denoted_p_h__e__e____if_p_h__e__e___is_a_fact_in_the_kg_.",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-scoring_function"
    ],
    [
      "Entity-hybrid_approach",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-rlvlr__and_oprl",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-q",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-pair"
    ],
    [
      "Entity-a_potential_missing_fact",
      "skos:broader",
      "Entity-missing_fact"
    ],
    [
      "Entity-novel_method",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-the_query_performance_of_oprl_and_rlvlr__a_roc_curve_in_figure_3",
      "skos:broader",
      "Entity-performance"
    ],
    [
      "Entity-coverage",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-a_novel_vector_computation_which_allows_the_system_to_evaluate_the_op_rule_against_a_massive_kg_to_compute_quality_measure__opsc_and_ophc",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-sam",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-r",
      "skos:broader",
      "Entity-cp_rule"
    ],
    [
      "Entity-op",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-entity_that_satisfy_the_first_argument_of_the_body",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-specific_fact_that__if_true__are_missing_from_the_kg",
      "skos:broader",
      "Entity-for_entity"
    ],
    [
      "Entity-such_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-locatedin__e___e__",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-the_confidence_degree__cd__of_such_a_query_to_be_the_maximum_opsc_of_all_the_rule_inducing_the_query__thereby_giving_no_weight_to_redundant_rule_that_induce_the_same_query_.",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-rescal",
      "skos:broader",
      "Entity-model__often_expressed_a_logical_rule_or_vector_embeddings"
    ],
    [
      "Entity-the_open_path_fitness",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-op_rule_can_generate_relevant_query_for_kg_completion",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-the_first_argument_of_the_body",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-f",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-p_1____e_2_",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-query",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-the_actively_generated_question",
      "skos:broader",
      "Entity-a_question"
    ],
    [
      "Entity-oprl_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-our_algorithm_is_effective_over_very_large_kg",
      "skos:broader",
      "Entity-evaluation"
    ],
    [
      "Entity-livesin__bronte__canberra__and_locatedin__canberra__australia_",
      "skos:broader",
      "Entity-locatedin__e___e__"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-kg_k"
    ],
    [
      "Entity-with_numerical_attribute",
      "skos:broader",
      "Entity-attribute__suit_and_rank_"
    ],
    [
      "Entity-coverage",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-for_illustration",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-an_industrial_application_of_a_link_prediction_model",
      "skos:broader",
      "Entity-link_predictor"
    ],
    [
      "Entity-prand_query_are_generated_by_first_selecting_a_bag_of_predicate",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-akgc_task",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-an_answer_to_the_question",
      "skos:broader",
      "Entity-answer"
    ],
    [
      "Entity-kg_completion",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-opsupp__r__(1)",
      "skos:broader",
      "Entity-support"
    ],
    [
      "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-rdf_triple__e__p__e__",
      "skos:broader",
      "Entity-rdf_triple"
    ],
    [
      "Entity-about_a_specific_target_predicate_in_the_head__p",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-any_previous_approach",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-it_is_closely_related_to_coverage_widely_used_for_rule_learning_in_inductive_logic_programming",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_nation_in_which_that_city_is_located",
      "skos:broader",
      "Entity-country"
    ],
    [
      "Entity-a_new_fact_is_needed_when_the_answer_is_not_known",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-link_predictor",
      "skos:broader",
      "Entity-a_link_predictor_(3)"
    ],
    [
      "Entity-our_active_knowledge_graph_completion_task",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-p1__e1__e2_",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-e_5",
      "skos:broader",
      "Entity-argument"
    ],
    [
      "Entity-sam",
      "skos:broader",
      "Entity-entity_(1)"
    ],
    [
      "Entity-australia",
      "skos:broader",
      "Entity-nation"
    ],
    [
      "Entity-a_query_is_counted_a_true_if_it_ha_an_instance_fact_in_the_test_data_and_false_otherwise",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted",
      "skos:broader",
      "Entity-in_knowledge_graph_completion"
    ],
    [
      "Entity-e1",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-s_embedding_is_a_vector_obtained_by_averaging_the_embeddings_of_all_the_entity_in_the_argument_position_.",
      "skos:broader",
      "Entity-vector"
    ],
    [
      "Entity-it_(4)",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-logical_rule_or_vector_embeddings",
      "skos:broader",
      "Entity-embeddings__"
    ],
    [
      "Entity-scope",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-or_do_you_instead_generate_every_possible_query_with_no_indication_of_comparative_value_to_the_kg_",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-on_the_other_hand__in_an_op_rule_like_citizenof__x__t___marriedto__x__z___parentof__z__y_",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-hundred_of_accurate_rule_from_massive_kg_with_up_to_8_m_fact_.",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-x",
      "skos:broader",
      "Entity-unknown_unknown"
    ],
    [
      "Entity-the_head_of_the_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-hole",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-embeddings___obtains_the_embeddings_for_predicate_and_argument_in_the_sample_kg_.",
      "skos:broader",
      "Entity-embeddings"
    ],
    [
      "Entity-op_rule_from_kg",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-each_argument_s_embedding"
    ],
    [
      "Entity-of_the_same_cardinality_a_those_generated_from_oprl__called_prand",
      "skos:broader",
      "Entity-cardinality"
    ],
    [
      "Entity-p_h__e__e__",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-we_could_infer_the_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-pathfinding__",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-p_h",
      "skos:broader",
      "Entity-head"
    ],
    [
      "Entity-oprl_generates_query_even_when_there_is_no_closed_rule_to_answer_the_query__or_when_the_correct_answer_is_a_missing_entity_that_is_not_present_in_the_kg_.",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-a_data-first_approach",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_problem_of_knowledge_graph_completion",
      "skos:broader",
      "Entity-challenge"
    ],
    [
      "Entity-p_1",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-candidate_rule",
      "skos:broader",
      "Entity-pattern"
    ],
    [
      "Entity-it_ha_the_following_general_form__where_p_h_is_the_single_predicate_of_the_head__and_p_1__...__p_n__for_n___1__are_predicate_of_the_body_and_x__y__z_1__...__z___n-1__are_variable_in_the_rule",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-minopsc_and_minophc",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-it_proportion_a_a_subject__respectively_object__of_any_predicate_in_the_test_set",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-a_fact_is_defined_by_a_scoring_function_over_the_embedded_representation_of_it_predicate_and_entity_.",
      "skos:broader",
      "Entity-predicate"
    ],
    [
      "Entity-the_open_path_fitness_function",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-freebase__yago2__wikidata__and_a_synthetic_poker_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_state-of-the-art_rule-based_link_predictor__rlvlr",
      "skos:broader",
      "Entity-automated_link_predictor"
    ],
    [
      "Entity-_e__f_",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-highestpoint",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-compositional_embeddings",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-_a__pk___k___1__...__m__",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_sampling_algorithm__sampling__",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-we_present_a_novel_algorithm__oprl__for_learning_op_rule",
      "skos:broader",
      "Entity-rule_learning"
    ],
    [
      "Entity-op_rule_formalism",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-we_define",
      "skos:broader",
      "Entity-definition_2"
    ],
    [
      "Entity-e_j",
      "skos:broader",
      "Entity-this_vector"
    ],
    [
      "Entity-this_kind_of_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-a_method_for_learning_rule_with_free_variable_from_knowledge_graph__kg_",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-the_sensitivity_of_the_performance_of_oprl_query_to_the_opsc_threshold",
      "skos:broader",
      "Entity-performance"
    ],
    [
      "Entity-citizenof",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-by_learning_op_rule_to_derive_query",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ],
    [
      "Entity-0.50",
      "skos:broader",
      "Entity-_2_"
    ],
    [
      "Entity-australia",
      "skos:broader",
      "Entity-place"
    ],
    [
      "Entity-the_link_predictor_answer_each_query_with_a_sequence_of_ranked_entity",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-op_rule_learning",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-entity_that_satisfy_the_second_argument_of_the_head",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-sim",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-s_p",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-state-of-the-art_rule-based_link_predictor",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-efficient_method_to_evaluate_op_rule_by_exactly_computing_the_quality_of_each_rule_using_matrix_and_vector_operation",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-r_is_defined_a",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-with_0.98_precision",
      "skos:broader",
      "Entity-precision"
    ],
    [
      "Entity-the_performance_of_fitness_function_proposed_for_oprl",
      "skos:broader",
      "Entity-hybrid_fitness_function"
    ],
    [
      "Entity-citizenof__bronte___",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-fact_in_the_kg_that_is_an_instance_of_it_head",
      "skos:broader",
      "Entity-definition_4"
    ],
    [
      "Entity-with_0.98_precision",
      "skos:broader",
      "Entity-average_precision"
    ],
    [
      "Entity-f__and_0_otherwise",
      "skos:broader",
      "Entity-set"
    ],
    [
      "Entity-confidence_degree",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-existing_embedding-based_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-rule_learning_method_for_kg",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-mined_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-cp_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-query_induced_from_oprl-mined_rule",
      "skos:broader",
      "Entity-query"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-link"
    ],
    [
      "Entity-each_consists_of_two_part__a_head_at_the_front_of_the_implication_arrow_and_a_body_at_the_tail_.",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-this_begs_the_question",
      "skos:broader",
      "Entity-question"
    ],
    [
      "Entity-link_predictor_need_to_repair_working_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-representation_learning",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-but_do_you_continue_to_hold_out_fact_from_your_kg_in_order_to_generate_query_that_predict_those_same_fact__fact_that_are_missing_only_because_you_need_them_to_generate_query_",
      "skos:broader",
      "Entity-a_given_kg"
    ],
    [
      "Entity-a_novel_method",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-an_instantiation_of_the_body_of_the_rule_in_the_kg",
      "skos:broader",
      "Entity-the_kg__k__"
    ],
    [
      "Entity-that_can_induce_q_from_the_given_kg",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-we",
      "skos:broader",
      "Entity-someone"
    ],
    [
      "Entity-the_least_acceptable_opsc_and_ophc_score",
      "skos:broader",
      "Entity-ophc"
    ],
    [
      "Entity-these_condition",
      "skos:broader",
      "Entity-condition"
    ],
    [
      "Entity-e_7",
      "skos:broader",
      "Entity-definition"
    ],
    [
      "Entity-pairwise_multiplication",
      "skos:broader",
      "Entity-algorithm_1"
    ],
    [
      "Entity-rule_to_generate_relevant_question_automatically",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_op_rule_generate_query_with_precision_a_high_a_98__and_recall_of_62__on_a_complete_kg__demonstrating_the_first_solution_for_active_knowledge_graph_completion",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-enterprise_and_public_knowledge_graph",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-missing_link",
      "skos:broader",
      "Entity-link"
    ],
    [
      "Entity-automatic_completion",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-the_product_of_the_predicate_embeddings_along_the_path",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-p",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-open_path__op__rule_that_are_constrained_existential_rule",
      "skos:broader",
      "Entity-rule"
    ],
    [
      "Entity-_open_path_fitness_",
      "skos:broader",
      "Entity-fitness_function"
    ],
    [
      "Entity-predicate_embeddings",
      "skos:broader",
      "Entity-technique"
    ],
    [
      "Entity-public_knowledge_graph",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-subject_argument",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-open_path_fitness_function",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-_e1__e2__e3_",
      "skos:broader",
      "Entity-entity"
    ],
    [
      "Entity-the_maximum_length_of_rule",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-measure_support",
      "skos:broader",
      "Entity-measure"
    ],
    [
      "Entity-_0_0_2___0_2_1___1_0_0_",
      "skos:broader",
      "Entity-matrix"
    ],
    [
      "Entity-a_novel_method_(1)",
      "skos:broader",
      "Entity-novel_method"
    ],
    [
      "Entity-p____e___or_q__p__e___",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-the_runtime_for_mining",
      "skos:broader",
      "Entity-runtime"
    ],
    [
      "Entity-a_novel_fitness_function_which_can_estimate_the_quality_of_an_op_rule_based_on_the_embedding_representation_of_it_predicate_",
      "skos:broader",
      "Entity-op_rule"
    ],
    [
      "Entity-open_path_rule",
      "skos:broader",
      "Entity-algorithm"
    ],
    [
      "Entity-_1_0_0_",
      "skos:broader",
      "Entity-_1_"
    ],
    [
      "Entity-knowledge_graph__kg__is_a_pair_k___e__f__where_f_is_a_set_of_fact_and_e_is_the_set_of_entity_that_exist_in_the_fact_f",
      "skos:broader",
      "Entity-rule-based_knowledge_graph"
    ],
    [
      "Entity-op_rule",
      "skos:broader",
      "Entity-their_relation"
    ],
    [
      "Entity-we_have_the_following_fact_about_the_target_predicate__p_1",
      "skos:broader",
      "Entity-fact"
    ],
    [
      "Entity-each_fitness_function",
      "skos:broader",
      "Entity-novel_fitness_function"
    ],
    [
      "Entity-then_we_can_infer_and_assert_the_following_new_fact_in_the_kg",
      "skos:broader",
      "Entity-you_have_a_kg"
    ],
    [
      "Entity-rlvlr",
      "skos:broader",
      "Entity-model"
    ],
    [
      "Entity-generally__in_knowledge_graph_completion__a_specific_missing_fact_is_predicted",
      "skos:broader",
      "Entity-knowledge_graph_completion"
    ],
    [
      "Entity-p_k",
      "skos:broader",
      "Entity-embedding_matrix"
    ],
    [
      "Entity-op_rule_from_a_range_of_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-entity_e_is_an_identifier_for_an_object_such_a_a_place_or_a_person__and_a_fact__also_known_a_a_link__is_an_rdf_triple__e__p__e____whereby_the_subject_entity_e_is_related_to_an_object_entity_e__via_the_binary_predicate__also_known_a_a_property___p_.",
      "skos:broader",
      "Entity-definition_1"
    ],
    [
      "Entity-the_body_of_this_rule_(1)",
      "skos:broader",
      "Entity-this_rule"
    ],
    [
      "Entity-for_learning_op_rule",
      "skos:broader",
      "Entity-our_proposed_method"
    ],
    [
      "Entity-for_r",
      "skos:broader",
      "Entity-parameter"
    ],
    [
      "Entity-various_method",
      "skos:broader",
      "Entity-building_method"
    ],
    [
      "Entity-_1__embedding_the_entity_and_predicate_of_a_given_kg_into_a_latent_space__and__2__reconstructing_the_kg_based_on_the_learned_embeddings_to_predict_new_fact_.",
      "skos:broader",
      "Entity-vector_embeddings"
    ],
    [
      "Entity-sc",
      "skos:broader",
      "Entity-variable"
    ],
    [
      "Entity-rescal_embeddings",
      "skos:broader",
      "Entity-embedding_representation"
    ],
    [
      "Entity-if_there_exist_entity_e_1__...__e___n-1__in_the_kg",
      "skos:broader",
      "Entity-knowledge_graph"
    ],
    [
      "Entity-predicate",
      "skos:broader",
      "Entity-relation"
    ],
    [
      "Entity-op_rule_from_kg",
      "skos:broader",
      "Entity-traditional_knowledge_graph"
    ]
  ],
  "predicates": {
    "Predicate-introduce": {
      "label": "introduce",
      "description": "To introduce means to bring forth or present something new, often for consideration, discussion, or implementation. The predicate 'introduce' connects the subject (the entity introducing) with an object that represents a concept, idea, proposal, rule, or other notion being presented or brought into existence.",
      "disambiguation_index": 0
    },
    "Predicate-for_learning_OP_rules": {
      "label": "for learning OP rules",
      "description": "The predicate 'for learning OP rules' indicates that the subject (e.g., a novel algorithm) is designed or intended to learn and understand the principles, patterns, or relationships defined by OP rules. This connection enables the subject to operate within the scope of these rules, potentially leading to improved performance, decision-making, or problem-solving capabilities.",
      "disambiguation_index": 0
    },
    "Predicate-present_a_novel_algorithm_OPRL_for_learning": {
      "label": "present a novel algorithm, OPRL, for learning",
      "description": "To introduce or propose a new method or approach (algorithm), specifically designed to facilitate the process of acquiring knowledge or skills ('learning'), which is characterized as novel and innovative.",
      "disambiguation_index": 0
    },
    "Predicate-complete": {
      "label": "complete",
      "description": "The predicate 'complete' indicates that the subject has reached a state of being fully formed or finished with respect to the object. It suggests a sense of finality and totality, implying that all necessary components are present and accounted for.",
      "disambiguation_index": 0
    },
    "Predicate-are_answered_by": {
      "label": "are answered by",
      "description": "The predicate 'are answered by' indicates a relationship where the subject (in this case, queries of unclear origin) have their questions or concerns resolved through the object (Closed rules), which provides the answers or solutions.",
      "disambiguation_index": 0
    },
    "Predicate-generate": {
      "label": "generate",
      "description": "To generate means to produce or create something new from existing information or resources. The predicate 'generate' indicates a process of creation, formation, or production that results in an object being brought into existence.",
      "disambiguation_index": 0
    },
    "Predicate-generates": {
      "label": "generates",
      "description": "The predicate 'generates' indicates a relationship where the subject entity produces or creates something new, which is represented by the object. This process can involve generating ideas, data, queries, or any other type of output that originates from the subject.",
      "disambiguation_index": 0
    },
    "Predicate-estimate": {
      "label": "estimate",
      "description": "To estimate means to form an opinion or make a judgment about the magnitude or likelihood of something based on available information and/or expertise. The subject (e.g., 'We') exercises their cognitive abilities to arrive at this assessment, which connects them with the object (e.g., 'rule quality').",
      "disambiguation_index": 0
    },
    "Predicate-assess": {
      "label": "assess",
      "description": "To assess means to evaluate or judge the value, significance, or quality of something based on certain criteria or standards. The subject performs this evaluation process and forms an opinion about the object's characteristics.",
      "disambiguation_index": 0
    },
    "Predicate-evaluate_using_adaptations_of": {
      "label": "evaluate using adaptations of",
      "description": "The predicate 'evaluate using adaptations of' connects the subject (a knowledge graph or dataset) to one or more objects that are alternative representations or formats for evaluating the same information. The adaptation refers to a process of transforming, mapping, or reconciling the different data structures and semantics between these representations, allowing for a unified evaluation or comparison.",
      "disambiguation_index": 0
    },
    "Predicate-evaluate": {
      "label": "evaluate",
      "description": "To assess or judge the quality, accuracy, relevance, or value of something based on certain criteria or standards.",
      "disambiguation_index": 0
    },
    "Predicate-mines": {
      "label": "mines",
      "description": "The predicate 'mines' indicates that a subject has extracted or obtained information from an object, which can be understood as a source or repository. This connection implies that the subject has processed and analyzed the content of the object to extract valuable insights or knowledge.",
      "disambiguation_index": 0
    },
    "Predicate-has": {
      "label": "has",
      "description": "The predicate 'has' indicates a relationship of possession or association between the subject and object. It suggests that the subject possesses, contains, or is related to the object in some way.",
      "disambiguation_index": 0
    },
    "Predicate-demonstrate": {
      "label": "demonstrate",
      "description": "To demonstrate means to show or illustrate something through evidence, examples, or a clear explanation. It implies providing tangible proof or a convincing representation of an idea, concept, or solution that connects the subject and object in a meaningful way.",
      "disambiguation_index": 0
    },
    "Predicate-demonstrates": {
      "label": "demonstrates",
      "description": "The predicate 'demonstrates' indicates that the subject (a person, entity, or concept) presents evidence or shows an example of something, which is described by the object. The demonstration can be a proof, a solution, a method, or any other form of illustration that clarifies or validates the object's meaning.",
      "disambiguation_index": 0
    },
    "Predicate-is": {
      "label": "is",
      "description": "The predicate 'is' connects a subject to its inherent or attributed property, characteristic, or classification. It indicates that the subject possesses or exemplifies the quality described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-publishes": {
      "label": "publishes",
      "description": "To publish means to make publicly available a written work or other creative content, such as an article, book, or research paper. The subject of the predicate, in this case Elsevier Inc., is responsible for making the object, which could be any type of published material, accessible and shareable with others.",
      "disambiguation_index": 0
    },
    "Predicate-model_and_store": {
      "label": "model and store",
      "description": "To model and store means to create a representation or framework for organizing and managing large amounts of information, often with the goal of making it more accessible, searchable, or usable. This predicate connects the subject (e.g., KG) to the object (e.g., massive quantities of weakly-structured data), indicating that the subject is responsible for creating this representation or framework to manage the object.",
      "disambiguation_index": 0
    },
    "Predicate-arises_from": {
      "label": "arises from",
      "description": "Indicates that the subject has its origin or foundation in the object. The predicate 'arises from' suggests a causal relationship between the subject and the object, implying that the existence or nature of the subject can be attributed to the object.",
      "disambiguation_index": 0
    },
    "Predicate-allow": {
      "label": "allow",
      "description": "To 'allow' means to give permission or consent for something to happen or exist. The subject of the predicate has control over whether the object can occur or be present. In general, allowing implies a sense of freedom or possibility for the object to take place.",
      "disambiguation_index": 0
    },
    "Predicate-covers": {
      "label": "covers",
      "description": "The predicate 'covers' indicates that the subject provides a comprehensive or detailed treatment of the object. It suggests that the subject has a broad scope or range that encompasses the object, often implying a sense of completeness, thoroughness, or mastery.",
      "disambiguation_index": 0
    },
    "Predicate-are_prone_to_asserting": {
      "label": "are prone to asserting",
      "description": "The predicate 'are prone to asserting' indicates that a subject (e.g. building methods) has a tendency or inclination towards making claims or statements about an object (e.g. some erroneous facts), which may not necessarily be accurate, reliable, or supported by evidence.",
      "disambiguation_index": 0
    },
    "Predicate-asserting": {
      "label": "asserting",
      "description": "Asserting connects a subject that presents or claims something to an object that represents the thing being claimed. This predicate indicates that the subject has stated or declared the existence, truth, or validity of the object, which can be facts, statements, ideas, or concepts.",
      "disambiguation_index": 0
    },
    "Predicate-have_been_developed_for": {
      "label": "have been developed for",
      "description": "This predicate indicates that a subject has undergone a process of creation or refinement to achieve a specific purpose or goal. The object represents the intended application, use case, or domain for which the subject was developed.",
      "disambiguation_index": 0
    },
    "Predicate-curate": {
      "label": "curate",
      "description": "To curate means to carefully select and organize a set of items or information from a larger pool, often with the goal of presenting them in a coherent and meaningful way. This process typically involves evaluating each item's relevance, quality, and significance before including it in the curated collection.",
      "disambiguation_index": 0
    },
    "Predicate-are_expressed_as": {
      "label": "are expressed as",
      "description": "The predicate 'are expressed as' indicates a relationship where the subject (e.g. models) has its underlying representation or essence captured by the object (e.g. logical rules or vector embeddings). In other words, it describes how something is represented or formulated using certain concepts, principles, or structures.",
      "disambiguation_index": 0
    },
    "Predicate-learnt_from": {
      "label": "learnt from",
      "description": "The predicate 'learnt from' indicates that the subject has acquired knowledge or understanding by drawing upon or referencing the object. The connection between the subject and object suggests a relationship of learning, inference, or inspiration, where the subject's cognitive processes are influenced by the information, concepts, or experiences represented in the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_learnt_from": {
      "label": "are learnt from",
      "description": "The predicate 'are learnt from' indicates that the subject (e.g. models) acquire or derive knowledge, skills, or concepts from the object (e.g. a given KG), suggesting a relationship of learning, acquisition, or inspiration.",
      "disambiguation_index": 0
    },
    "Predicate-used_for": {
      "label": "used for",
      "description": "Indicates a purpose or function that something (the subject) serves or fulfills. The predicate 'used for' establishes a relationship between the subject and object, suggesting that the subject has been employed or applied to achieve or accomplish the specified goal or task.",
      "disambiguation_index": 0
    },
    "Predicate-are_used_for": {
      "label": "are used for",
      "description": "Indicates a purpose or function of something (the subject), which involves utilizing it to achieve a specific goal, perform an activity, or accomplish a task (the object).",
      "disambiguation_index": 0
    },
    "Predicate-consider": {
      "label": "consider",
      "description": "To consider something means to think about it carefully and weigh its significance or implications. In this sense, the predicate 'consider' connects the subject (Rule learning methods for KGs) with the object (Closed non-existential rules), suggesting that these rule learning methods take into account or evaluate Closed non-existent rules in some way.",
      "disambiguation_index": 0
    },
    "Predicate-is_located_in": {
      "label": "is located in",
      "description": "The predicate 'is located in' indicates a spatial relationship between two entities, where the subject (e.g. an object or location) exists within the boundaries of the object (e.g. another location). This connection implies that the subject is situated inside, surrounded by, or contained within the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_inferred_from": {
      "label": "can be inferred from",
      "description": "The predicate 'can be inferred from' indicates that there exists an underlying relationship or pattern between the subject and object, where information about the subject can be deduced or derived from the characteristics, features, or properties described in the object. This connection implies a logical link between the two entities, suggesting that one's understanding of the subject is informed by or dependent on the knowledge contained within the object.",
      "disambiguation_index": 0
    },
    "Predicate-quantifies_existentially": {
      "label": "quantifies existentially",
      "description": "The predicate 'quantifies existentially' indicates that a subject refers to an unspecified or unknown entity that satisfies some condition described by the object. The connection between the subject and object is one of existential quantification, where the subject represents a placeholder for any instance that meets the criteria defined by the object.",
      "disambiguation_index": 0
    },
    "Predicate-enable": {
      "label": "enable",
      "description": "To enable means to make something possible or effective by providing the necessary conditions, resources, or support. It implies a causal relationship between the subject and object, where the subject's presence or action allows for or facilitates the occurrence of the object.",
      "disambiguation_index": 0
    },
    "Predicate-draw_attention_to": {
      "label": "draw attention to",
      "description": "To 'draw attention to' means to bring focus or notice to something previously overlooked or unnoticed. The subject of this predicate takes an action that highlights, emphasizes, or makes prominent the object, which can be a fact, issue, problem, or other matter requiring consideration.",
      "disambiguation_index": 0
    },
    "Predicate-predicts_answers_for": {
      "label": "predicts answers for",
      "description": "The predicate 'predicts answers for' indicates that the subject (a system or model) generates responses to a set of inputs or questions represented by the object. The connection between the subject and object is one of prediction, where the subject attempts to provide accurate answers or solutions to the unknowns or challenges presented in the object.",
      "disambiguation_index": 0
    },
    "Predicate-considers": {
      "label": "considers",
      "description": "To consider something means to think about it carefully and weigh its significance or implications. In this sense, the predicate 'considers' indicates that the subject has given thought to the object, evaluating its importance, relevance, or potential consequences.",
      "disambiguation_index": 0
    },
    "Predicate-predict": {
      "label": "predict",
      "description": "To predict means to form an educated guess or make a forecast about something's future state or occurrence based on available information and analysis. The subject of the predicate, in this case 'We', uses their knowledge and expertise to anticipate what might happen or be true, which is reflected in the object, such as 'the existence of missing facts'. In general, predicting involves using reasoning and evidence to make a probabilistic statement about an uncertain event or situation.",
      "disambiguation_index": 0
    },
    "Predicate-may_be_absent_from": {
      "label": "may be absent from",
      "description": "The predicate 'may be absent from' indicates a potential relationship between an entity and a context or domain (represented by the object), suggesting that this entity may not have any involvement, presence, or representation within that specific context.",
      "disambiguation_index": 0
    },
    "Predicate-done_by_answering": {
      "label": "done by answering",
      "description": "The predicate 'done by answering' indicates that a subject has been created or produced as a result of responding to queries or questions. It implies an interactive process where the object (e.g., actively generated questions) serves as input, and the resulting output is represented by the subject.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_fragment_of": {
      "label": "is a fragment of",
      "description": "The predicate 'is a fragment of' indicates that the subject represents a part or subset of the object. It suggests a relationship where the subject is a smaller, more specific instance or component of the larger entity described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-adduce_queries": {
      "label": "adduce queries",
      "description": "To adduce queries means to derive or infer questions from a given context, often based on rules or patterns. The predicate connects the subject (OP rule) with the object (queries), indicating that the rule generates or yields these queries.",
      "disambiguation_index": 0
    },
    "Predicate-adduce_from": {
      "label": "adduce from",
      "description": "To 'adduce from' means to derive or infer a conclusion or evidence from something else. This predicate establishes a connection between the subject and object by indicating that the subject obtains its meaning, relevance, or significance from the object. In general, it implies a relationship of origin, foundation, or basis.",
      "disambiguation_index": 0
    },
    "Predicate-might_be": {
      "label": "might be",
      "description": "Indicates a possibility or potentiality between the subject and object, suggesting that the subject could have a relationship with the object. The predicate 'might be' implies a degree of uncertainty or ambiguity in this connection.",
      "disambiguation_index": 0
    },
    "Predicate-or_absent_from_it": {
      "label": "or absent from it",
      "description": "This predicate indicates that there may be a connection between the subject and object, but only if the subject has some presence or relevance within the scope defined by the object. In other words, it suggests that the subject's absence from the object would imply its irrelevance to the context.",
      "disambiguation_index": 0
    },
    "Predicate-could_be_posed_to": {
      "label": "could be posed to",
      "description": "The predicate 'could be posed to' indicates that something (the subject) can potentially be presented, asked, or proposed to someone or some entity (the object), which may involve interaction, inquiry, or consideration.",
      "disambiguation_index": 0
    },
    "Predicate-engaged_in": {
      "label": "engaged in",
      "description": "Indicates that the subject is actively involved or occupied with the object, suggesting a state of participation, commitment, or dedication. The predicate 'engaged in' implies a sense of immersion and focus on the object, highlighting the subject's role as an active participant.",
      "disambiguation_index": 0
    },
    "Predicate-studies": {
      "label": "studies",
      "description": "The predicate 'studies' indicates a relationship of investigation or inquiry between an individual (subject) and a specific institution, organization, or entity (object), suggesting that the subject engages in academic research, learning, or exploration within the context defined by the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_instantiated_like_studiesIn_Sam__": {
      "label": "is instantiated like studiesIn( Sam , )",
      "description": "This predicate indicates that the subject has a relationship with the object similar to how someone (Sam) studied at an institution. It suggests a connection between the subject and the object based on shared characteristics or patterns of study, research, or academic pursuit.",
      "disambiguation_index": 0
    },
    "Predicate-can_infer_citizenOf____": {
      "label": "can infer citizenOf(  ? , )",
      "description": "This predicate indicates that the subject has the ability to logically deduce or conclude information about a country of citizenship for an individual. The object represents the entity whose citizenship can be inferred by the subject.",
      "disambiguation_index": 0
    },
    "Predicate-use": {
      "label": "use",
      "description": "To employ or utilize something for a specific purpose or function. This predicate indicates that the subject is making use of the object in order to achieve some goal, complete a task, or fulfill a need.",
      "disambiguation_index": 0
    },
    "Predicate-is_deployed_over": {
      "label": "is deployed over",
      "description": "The predicate 'is deployed over' indicates that the subject (an entity or system) operates or functions within the scope of the object (a context, framework, or infrastructure). This relationship suggests a hierarchical or structural connection between the two entities, where the subject is situated or positioned above or within the boundaries defined by the object.",
      "disambiguation_index": 0
    },
    "Predicate-propose_that": {
      "label": "propose that",
      "description": "To suggest or recommend something as being true, possible, or desirable. This predicate indicates an attempt to persuade others of a particular idea, theory, or proposal by presenting evidence and reasoning.",
      "disambiguation_index": 0
    },
    "Predicate-presidentOf": {
      "label": "presidentOf",
      "description": "The predicate 'presidentOf' indicates a relationship between the subject and object where the subject holds or has held the highest executive office in the government of the object. This connection implies that the subject has been entrusted with leading, governing, or representing the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_president_of": {
      "label": "is president of",
      "description": "The predicate 'is president of' indicates a relationship between an individual (the subject) and a country or organization they lead as head of state. It describes the role or position held by the subject, emphasizing their authority and responsibility over the object.",
      "disambiguation_index": 0
    },
    "Predicate-will_try_to_rank": {
      "label": "will try to rank",
      "description": "To attempt to arrange or categorize a set of entities (e.g. countries) according to some criteria or standard, often with the goal of establishing a relative order or hierarchy.",
      "disambiguation_index": 0
    },
    "Predicate-derive": {
      "label": "derive",
      "description": "The predicate 'derive' indicates a process of obtaining or generating something from another thing. It implies a transformation or extraction of information, concepts, or rules from an existing source to create a new entity, such as queries.",
      "disambiguation_index": 0
    },
    "Predicate-serve_as_input_to": {
      "label": "serve as input to",
      "description": "To serve as input to means that something (the subject) provides data or information that is used by another entity (the object), typically for processing, analysis, or decision-making purposes. This predicate indicates a directional relationship where the subject's content is being utilized or fed into the object.",
      "disambiguation_index": 0
    },
    "Predicate-introduce_missing_entities_into": {
      "label": "introduce missing entities into",
      "description": "To 'introduce missing entities into' means to incorporate or bring forth previously unknown or absent entities that are relevant and necessary for a specific context, process, or system. This predicate connects the subject (the entity performing the action) with the object (a knowledge graph, database, or other structured representation), indicating that the subject is responsible for populating the object with missing or lacking entities.",
      "disambiguation_index": 0
    },
    "Predicate-requires": {
      "label": "requires",
      "description": "Indicates that some action or process needs to be taken in order for something else to happen. The subject 'requires' specifies a condition or constraint that must be met, and the object represents the means by which this requirement can be fulfilled.",
      "disambiguation_index": 0
    },
    "Predicate-extend": {
      "label": "extend",
      "description": "To extend something means to expand or broaden its scope, reach, or applicability by incorporating additional ideas, concepts, or perspectives. This predicate connects the subject (the entity being extended) with the object (what is being incorporated), indicating a relationship of inclusion, elaboration, or amplification.",
      "disambiguation_index": 0
    },
    "Predicate-present": {
      "label": "present",
      "description": "The predicate 'present' indicates that the subject has introduced or made available something new, such as an idea, concept, method, or solution. It suggests a sense of offering or providing access to something previously unknown or unexplored.",
      "disambiguation_index": 0
    },
    "Predicate-are": {
      "label": "are",
      "description": "The predicate 'are' indicates a state of being or existence between the subject and object. It connects the two by stating that the properties or characteristics described in the object are true for the subject, often implying equivalence, similarity, or classification.",
      "disambiguation_index": 0
    },
    "Predicate-have_a_different_form_to": {
      "label": "have a different form to",
      "description": "This predicate indicates that there exists a distinction or disparity between two entities (subject and object), suggesting that they do not share a common structure, pattern, or form. The subject and object are connected by the idea of having distinct forms, implying a difference in their underlying nature, organization, or presentation.",
      "disambiguation_index": 0
    },
    "Predicate-are_conventionally_used_for": {
      "label": "are conventionally used for",
      "description": "This predicate indicates a relationship between a set of conventions or standards (subject) and their typical application domain or purpose (object). It suggests that the subject is commonly employed for achieving specific goals, solving problems, or fulfilling certain needs within the object's context.",
      "disambiguation_index": 0
    },
    "Predicate-is_an_algorithm_for_learning": {
      "label": "is an algorithm for learning",
      "description": "This predicate indicates that a given subject represents a computational process or method used to acquire knowledge, skills, or insights from data. The object is typically an artificial intelligence system, machine learning model, or other type of algorithm designed for learning purposes.",
      "disambiguation_index": 0
    },
    "Predicate-propose": {
      "label": "propose",
      "description": "To propose means to formally suggest or recommend something, such as a plan, idea, or solution. It implies presenting and advocating for an option or proposal with the intention of gaining acceptance or approval from others.",
      "disambiguation_index": 0
    },
    "Predicate-together_with": {
      "label": "together with",
      "description": "Indicates a collaborative or joint relationship between the subject and object. The predicate 'together with' suggests that the subject and object are working together to achieve a common goal, share resources, or combine efforts.",
      "disambiguation_index": 0
    },
    "Predicate-is_effective_over": {
      "label": "is effective over",
      "description": "Indicates that a subject has a specified level of control or influence over an object. The predicate suggests that the subject can operate within or make decisions about the scope defined by the object, which may imply some form of authority, dominance, or applicability.",
      "disambiguation_index": 0
    },
    "Predicate-describe": {
      "label": "describe",
      "description": "To convey a detailed and accurate representation of something, typically providing an overview or explanation that clarifies its nature, characteristics, or features.",
      "disambiguation_index": 0
    },
    "Predicate-proposes": {
      "label": "proposes",
      "description": "To propose means to suggest or recommend something as a solution, approach, or idea. It implies that the subject has put forward an option for consideration and evaluation by others.",
      "disambiguation_index": 0
    },
    "Predicate-presents": {
      "label": "presents",
      "description": "The predicate 'presents' indicates a relationship where the subject provides or offers something to someone or something else. This can be interpreted as introducing, displaying, or making available information, ideas, concepts, or processes.",
      "disambiguation_index": 0
    },
    "Predicate-formalise": {
      "label": "formalise",
      "description": "To formalise means to give a systematic and structured form or definition to something, typically an abstract concept or idea. This predicate connects the subject (a conceptual entity such as Section 6) with the object (an abstract notion), indicating that the subject is being given a precise and organized framework for understanding or describing the object.",
      "disambiguation_index": 0
    },
    "Predicate-presented_in": {
      "label": "presented in",
      "description": "The predicate 'presented in' indicates that the subject (a piece of information or an idea) was introduced, discussed, or explained within a specific context or framework denoted by the object. This context can be a section, chapter, paper, presentation, etc.",
      "disambiguation_index": 0
    },
    "Predicate-related_to": {
      "label": "related to",
      "description": "Indicates that there exists some connection or association between two concepts, ideas, methods, or domains. The subject represents a concept, idea, method, or domain that has a relationship with the object, which can be another concept, idea, method, or domain.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_part_of": {
      "label": "is a part of",
      "description": "The predicate 'is a part of' indicates that the subject is an integral component or constituent of the object. It suggests a relationship where the subject is contained within, belongs to, or forms a subset of the object.",
      "disambiguation_index": 0
    },
    "Predicate-involves": {
      "label": "involves",
      "description": "The predicate 'involves' indicates a relationship where the subject (a process or activity) encompasses or includes the object (an aspect or component), suggesting that the subject's nature, function, or purpose involves or incorporates the object.",
      "disambiguation_index": 0
    },
    "Predicate-write_in": {
      "label": "write in",
      "description": "The predicate 'write in' connects a subject (typically an entity or concept) to its representation or manifestation within a specific framework or structure. This connection implies that the subject's essence, properties, or characteristics are being captured, conveyed, or formalized through the object, which can be a physical medium, a symbolic system, or another abstract construct.",
      "disambiguation_index": 0
    },
    "Predicate-employ_a": {
      "label": "employ a",
      "description": "To employ 'a' means to utilize or make use of something (typically an abstract concept, method, or system) as part of one's operations, processes, or practices. This predicate indicates a relationship where the subject entity adopts, incorporates, or relies on the object entity in order to achieve its goals or functions.",
      "disambiguation_index": 0
    },
    "Predicate-consists": {
      "label": "consists",
      "description": "The predicate 'consists' indicates that the subject is composed or made up of one or more parts, which are described in the object. The relationship between the subject and object is one of containment or composition.",
      "disambiguation_index": 0
    },
    "Predicate-forms": {
      "label": "forms",
      "description": "The predicate 'forms' represents a relationship where the subject defines or structures something that takes on a specific shape, pattern, or organization. This connection implies a process of shaping, molding, or arranging elements to create a cohesive whole.",
      "disambiguation_index": 0
    },
    "Predicate-interpret": {
      "label": "interpret",
      "description": "To interpret means to understand or explain the meaning of something, often involving a process of analysis, consideration, and possibly even creative thinking. The subject performs this action on the object, which can be an idea, concept, text, rule, or any other entity that requires comprehension.",
      "disambiguation_index": 0
    },
    "Predicate-find_an_instantiation_of_the_body_of_the_rule_in_the_KG": {
      "label": "find an instantiation of the body of the rule in the KG",
      "description": "This predicate connects a subject (typically a concept or entity representing a type of rule) to its corresponding object (an actual instance of the rule's body within a knowledge graph). The predicate indicates that the subject has an instantiation in the KG, which serves as evidence for the existence and applicability of the rule.",
      "disambiguation_index": 0
    },
    "Predicate-instantiates": {
      "label": "instantiates",
      "description": "The predicate 'instantiates' establishes a relationship between its subject and object, indicating that the former corresponds to or represents an instance of the latter. This connection implies a mapping from the abstract concept described by the subject to a specific realization or manifestation in the context defined by the object.",
      "disambiguation_index": 0
    },
    "Predicate-livesIn": {
      "label": "livesIn",
      "description": "The predicate 'livesIn' indicates a spatial relationship between two entities, where the subject (an individual or entity) resides at the location specified by the object. This relationship implies that the subject has a physical presence and/or habitual residence at the designated place.",
      "disambiguation_index": 0
    },
    "Predicate-locatedIn": {
      "label": "locatedIn",
      "description": "The predicate 'locatedIn' indicates a spatial relationship between two entities, where the subject (a geographic location or entity) is situated within or contained by the object (another geographic area or region).",
      "disambiguation_index": 0
    },
    "Predicate-citizenOf": {
      "label": "citizenOf",
      "description": "The predicate 'citizenOf' indicates a relationship between an individual (subject) and their country of citizenship or nationality. It implies that the subject has a legal status, rights, and obligations tied to being a citizen of the object country.",
      "disambiguation_index": 0
    },
    "Predicate-support": {
      "label": "support",
      "description": "The predicate 'support' indicates a relationship where the subject provides resources, context, or justification for the object to exist, operate, or be effective. In general, it suggests that the subject enables or facilitates the object's purpose, function, or goal.",
      "disambiguation_index": 0
    },
    "Predicate-and": {
      "label": "and",
      "description": "The predicate 'and' connects the subject to the object by indicating a logical conjunction or combination of two entities. It suggests that both the subject and the object share a common characteristic, property, or relationship.",
      "disambiguation_index": 0
    },
    "Predicate-are_used": {
      "label": "are used",
      "description": "The predicate 'are used' indicates a relationship between the subject (a set of measures or methods) and object (some context or framework), suggesting that these measures or methods are employed, applied, or utilized within this specific context.",
      "disambiguation_index": 0
    },
    "Predicate-measure": {
      "label": "measure",
      "description": "To measure means to determine the magnitude or extent of something by comparing it to a standard unit or scale. The predicate 'measure' establishes a relationship between the subject and object, indicating that the subject (e.g., measures) quantifies or evaluates the object (e.g., head coverage), resulting in an assessment of its size, amount, or degree.",
      "disambiguation_index": 0
    },
    "Predicate-standard": {
      "label": "standard",
      "description": "The 'standard' predicate indicates a reference point or benchmark against which something (the subject) can be evaluated or compared. It establishes a common framework for measuring the quality, accuracy, or reliability of an attribute (object), such as confidence.",
      "disambiguation_index": 0
    },
    "Predicate-satisfies": {
      "label": "satisfies",
      "description": "The predicate 'satisfies' indicates a relationship between two entities where one entity (the subject) meets or fulfills some condition or requirement specified by another entity (the object). This connection implies that the subject has properties, characteristics, or attributes that align with or conform to those defined in the object.",
      "disambiguation_index": 0
    },
    "Predicate-be": {
      "label": "be",
      "description": "The predicate 'be' connects the subject and object by indicating a state of being or existence between them. It suggests that there is an inherent relationship or correspondence between the two entities, which can be described as having, possessing, or inhering.",
      "disambiguation_index": 0
    },
    "Predicate-defines": {
      "label": "defines",
      "description": "The predicate 'defines' establishes a relationship between its subject and object, indicating that the subject provides a clear or precise explanation, description, or meaning for the object. In this sense, it implies a causal connection where the subject's definition serves as the foundation or basis for understanding the object.",
      "disambiguation_index": 0
    },
    "Predicate-describes": {
      "label": "describes",
      "description": "The predicate 'describes' connects a subject (a definition) to an object that provides information about what it describes, typically specifying characteristics or attributes of the subject.",
      "disambiguation_index": 0
    },
    "Predicate-is_closely_related_to": {
      "label": "is closely related to",
      "description": "Indicates a connection or association between two concepts where one concept has a significant influence on the other. This predicate suggests that there exists an intimate relationship between the subject and object, implying a high degree of relevance, similarity, or interdependence.",
      "disambiguation_index": 0
    },
    "Predicate-used_in": {
      "label": "used in",
      "description": "Indicates that a concept or technique (subject) has been applied or employed for a specific purpose or domain (object).",
      "disambiguation_index": 0
    },
    "Predicate-measures": {
      "label": "measures",
      "description": "The predicate 'measures' indicates a relationship where the subject (e.g. HC) evaluates or quantifies the object (e.g. the explanatory power of the rule), often in terms of its magnitude, extent, or effectiveness.",
      "disambiguation_index": 0
    },
    "Predicate-uses": {
      "label": "uses",
      "description": "The predicate 'uses' indicates a relationship of utilization or application between the subject and object. It suggests that the subject employs, exploits, or makes use of something (the object), often for a specific purpose or function.",
      "disambiguation_index": 0
    },
    "Predicate-explains": {
      "label": "explains",
      "description": "The predicate 'explains' establishes a relationship between the subject and object by indicating that the subject provides a clear understanding or justification for the object. In this sense, it implies a causal link where the subject is the source of comprehension or insight into the nature or meaning of the object.",
      "disambiguation_index": 0
    },
    "Predicate-for": {
      "label": "for",
      "description": "The predicate 'for' indicates a purpose or objective relationship between the subject and object. It suggests that the subject (e.g., Representation Learning) aims to achieve or accomplish something, which is described by the object (e.g., KG completion).",
      "disambiguation_index": 0
    },
    "Predicate-have_been_developed_to_model": {
      "label": "have been developed to model",
      "description": "This predicate indicates that a subject has undergone a process of development or creation with the intention of representing or capturing the essence of an object. The connection between the subject and object suggests a relationship where the subject's purpose or function is to model, simulate, or mimic the characteristics or behavior of the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_embedded_into": {
      "label": "is embedded into",
      "description": "The predicate 'is embedded into' indicates that the subject (a conceptual or abstract entity) has its structure, properties, or essence contained within or represented by the object (typically a more concrete or tangible entity). This relationship suggests an embedding of one concept into another, where the subject is somehow nested or incorporated within the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_defined_by": {
      "label": "is defined by",
      "description": "Indicates that the subject concept or measure is formally specified, constrained, or determined by the object entity. This relationship suggests a precise and explicit connection between the two entities, implying that the definition of the subject relies on or is grounded in the characteristics, properties, or behavior described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-defined_by": {
      "label": "defined by",
      "description": "The 'defined by' predicate indicates that the subject's meaning or scope is determined or characterized by the object. The object provides a framework, rule, or principle that outlines how to understand or interpret the subject.",
      "disambiguation_index": 0
    },
    "Predicate-have_been_proposed_to_construct": {
      "label": "have been proposed to construct",
      "description": "The predicate 'have been proposed to construct' indicates that a set of ideas or approaches (subject) were suggested as potential solutions for creating or building something specific (object). The subject and object are connected by the idea that these proposals aim to develop or establish the object in some way.",
      "disambiguation_index": 0
    },
    "Predicate-represent": {
      "label": "represent",
      "description": "To represent a concept or entity by capturing its essential characteristics, features, or properties. This predicate connects the subject (the representation method or tool) to the object (the thing being represented), indicating that the former provides an abstracted or symbolic description of the latter.",
      "disambiguation_index": 0
    },
    "Predicate-learned_by": {
      "label": "learned by",
      "description": "The predicate 'learned by' indicates that the subject acquired knowledge or understanding from the object. It represents a relationship of acquisition or derivation between the two entities, where the subject gained insight or proficiency through interaction with or exposure to the object.",
      "disambiguation_index": 0
    },
    "Predicate-embeds": {
      "label": "embeds",
      "description": "The predicate 'embeds' indicates a relationship where the subject (e.g. It) contains or incorporates the object (e.g. each entity e_i), often implying a hierarchical or structural connection between them.",
      "disambiguation_index": 0
    },
    "Predicate-learns": {
      "label": "learns",
      "description": "The predicate 'learns' represents a process of acquiring knowledge or understanding through experience, instruction, or practice. It indicates that the subject (RESCAL) gains new information, skills, or insights from the object ({e_i}), which can be an entity, concept, or idea.",
      "disambiguation_index": 0
    },
    "Predicate-captures": {
      "label": "captures",
      "description": "Captures refers to a process of grasping or encompassing something abstract or concrete. It implies that the subject has taken hold of, comprehended, or understood the object, which can be an idea, concept, phenomenon, or entity.",
      "disambiguation_index": 0
    },
    "Predicate-are_also_larger_and_simpler_than_those_in_more_recent_embedding-based_link_predictors_such_as": {
      "label": "are also larger and simpler than those in more recent embedding-based link predictors such as",
      "description": "This predicate indicates a comparison between two groups of entities or systems (subject and object), highlighting that the subject exhibits larger and simpler characteristics compared to those found in more recent embedding-based link predictors, which are represented by the object. The phrase 'such as' suggests that the object is an exemplar or representative of this group.",
      "disambiguation_index": 0
    },
    "Predicate-are_compared_to": {
      "label": "are compared to",
      "description": "The predicate 'are compared to' indicates a relationship of similarity or equivalence between two entities (subject and object), suggesting that they share common characteristics, properties, or features.",
      "disambiguation_index": 0
    },
    "Predicate-mine": {
      "label": "mine",
      "description": "The predicate 'mine' indicates that the subject has a personal or proprietary connection to the object. It suggests ownership, authorship, or responsibility for the object, implying a sense of possession or control.",
      "disambiguation_index": 0
    },
    "Predicate-of_the_following_form": {
      "label": "of the following form",
      "description": "This predicate indicates that a specific pattern or structure exists between the subject and object. It suggests that there is an underlying relationship or template that governs how they are connected, which can be used to inform or guide further analysis or decision-making.",
      "disambiguation_index": 0
    },
    "Predicate-has_logical_consequences": {
      "label": "has logical consequences",
      "description": "The predicate 'has logical consequences' indicates that there exists an inherent relationship between the subject and object, where the subject's properties or characteristics directly influence or determine the nature of the object. In other words, it suggests a causal link between the two entities, implying that the subject's presence or existence has a direct impact on the object's state, behavior, or outcome.",
      "disambiguation_index": 0
    },
    "Predicate-is_consequence": {
      "label": "is consequence",
      "description": "The predicate 'is consequence' establishes a relationship between its subject and object, indicating that the object logically follows or results from the subject. In other words, it describes an inference or implication where the subject serves as the premise and the object represents the conclusion.",
      "disambiguation_index": 0
    },
    "Predicate-is_not_a_consequence_of": {
      "label": "is not a consequence of",
      "description": "This predicate indicates that there is no logical or causal relationship between the subject and object. It suggests that the existence or occurrence of the subject does not lead to, result from, or be a direct outcome of the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_strictly_more_expressive_than": {
      "label": "are strictly more expressive than",
      "description": "The predicate 'are strictly more expressive than' indicates a relationship between two sets of formal systems or grammars (OP rule and CP rules), where one set (the subject) has a greater capacity to express or describe certain aspects, concepts, or structures compared to the other set (the object). This connection highlights the relative power or capabilities of these formal systems in terms of their expressive abilities.",
      "disambiguation_index": 0
    },
    "Predicate-is_also_an_instantiation_of": {
      "label": "is also an instantiation of",
      "description": "This predicate indicates a relationship between two entities where one (the subject) is a specific instance or realization of another (the object), often implying a connection to a broader concept, framework, or standard. The subject and object are linked by their shared characteristics, principles, or rules that define the instantiation.",
      "disambiguation_index": 0
    },
    "Predicate-cannot_be_instantiations_of_any": {
      "label": "cannot be instantiations of any",
      "description": "This predicate indicates that there exists no common classification or categorization scheme under which the subject can be grouped with other entities. The subject and object are mutually exclusive, implying that any attempt to classify the subject as an instance of a particular category would fail.",
      "disambiguation_index": 0
    },
    "Predicate-states_that_if_an_entity_x_lives_in_z_then_that_entity_is_a_citizen_of_somewhere_t.": {
      "label": "states that if an entity, x, lives in z, then that entity is a citizen of somewhere (t).",
      "description": "This predicate establishes a conditional relationship between an individual's residency and their citizenship. It asserts that if an entity resides in a particular location (z), then they are considered a citizen of some place or jurisdiction (t).",
      "disambiguation_index": 0
    },
    "Predicate-infer": {
      "label": "infer",
      "description": "To infer means to draw a conclusion or make an educated guess based on available information. The predicate 'infer' connects the subject (the entity making the inference) with the object (the statement, fact, or relationship being inferred), indicating that the subject has derived or deduced the object from existing knowledge.",
      "disambiguation_index": 0
    },
    "Predicate-derived_from": {
      "label": "derived from",
      "description": "The predicate 'derived from' indicates a relationship between two entities where one entity (the subject) has its origin or basis in another entity (the object). This connection implies that the subject's characteristics, properties, or nature are rooted in or influenced by the object. In general, this predicate suggests an etymological or genealogical link between the subject and object.",
      "disambiguation_index": 0
    },
    "Predicate-give": {
      "label": "give",
      "description": "To 'give' means to transfer or bestow something from one entity to another. This predicate establishes a relationship between two entities where the subject (the giver) relinquishes control or possession of an object, which can be physical, abstract, or intangible.",
      "disambiguation_index": 0
    },
    "Predicate-given_by": {
      "label": "given by",
      "description": "Indicates that the subject provides or originates from the object. The predicate 'given by' establishes a relationship between the subject and the object, suggesting that the subject is responsible for providing information, guidance, or authority about the object.",
      "disambiguation_index": 0
    },
    "Predicate-have": {
      "label": "have",
      "description": "The predicate 'have' indicates a relationship of possession or ownership between the subject and object. It suggests that the subject has control over or holds something, which can be physical (e.g., an object) or abstract (e.g., a quality).",
      "disambiguation_index": 0
    },
    "Predicate-can_instantiate": {
      "label": "can instantiate",
      "description": "The predicate 'can instantiate' connects a subject (typically an entity or concept) to an object that represents a specific instance of something. This connection indicates that the subject has the ability to generate, create, or exemplify instances of the type represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_to_mine_a_KG_for_high-quality_OP_rules_about_a_specific_target_predicate_in_the_head_P.": {
      "label": "is to mine a KG for high-quality OP rules about a specific target predicate in the head, P.",
      "description": "This predicate indicates that the subject's goal or intention is to extract and utilize knowledge graph (KG) patterns of high quality related to a specific target concept or relationship represented by the object, P. The connection between the subject and object lies in the idea that the subject aims to uncover valuable insights or rules within the KG that are relevant to understanding the nature of the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_estimate_the_quality_of_an_OP_rule_based_on_the_embedding_representations_of_its_predicates": {
      "label": "can estimate the quality of an OP rule based on the embedding representations of its predicates;",
      "description": "This predicate establishes a connection between a subject (e.g., novel fitness function) and an object (e.g., OP rule), indicating that the quality of the latter can be evaluated or judged based on the embedding representations of its predicates. In other words, it suggests that the quality of the OP rule is dependent on the semantic meaning conveyed by its constituent predicates.",
      "disambiguation_index": 0
    },
    "Predicate-is_summarised_by": {
      "label": "is summarised by",
      "description": "The predicate 'is summarised by' indicates that a concept or process (the subject) can be condensed into or represented by another entity (the object), which provides a concise summary of its essential characteristics.",
      "disambiguation_index": 0
    },
    "Predicate-takes": {
      "label": "takes",
      "description": "The predicate 'takes' indicates the acquisition or assumption of something by a subject. It implies that the subject receives, accepts, or incorporates the object into its being or operation.",
      "disambiguation_index": 0
    },
    "Predicate-Input": {
      "label": "Input",
      "description": "The 'Input' predicate represents a relationship where the subject (in this case, an algorithm or process) receives or accepts data from another entity, which is represented by the object. This connection indicates that the input serves as a source of information for the subject to operate on.",
      "disambiguation_index": 0
    },
    "Predicate-Sampling": {
      "label": "Sampling",
      "description": "The predicate 'Sampling' represents the act of selecting or gathering a subset from a larger population or dataset (the object), which is typically done for the purpose of analysis, evaluation, or understanding. This process involves taking a representative portion of the original data and using it to make inferences about the entire set.",
      "disambiguation_index": 0
    },
    "Predicate-": {
      "label": ":=",
      "description": "",
      "disambiguation_index": 0
    },
    "Predicate-to": {
      "label": "to",
      "description": "The predicate 'to' indicates a directional relationship between two entities or concepts. It suggests movement, transition, or connection from one point (subject) to another (object).",
      "disambiguation_index": 0
    },
    "Predicate-Add": {
      "label": "Add",
      "description": "The 'Add' predicate represents the operation of combining or aggregating two entities (subject and object) to form a new entity. It implies an incremental process where the subject contributes to the formation of the object, resulting in a modified or enhanced state.",
      "disambiguation_index": 0
    },
    "Predicate-Add_to": {
      "label": "Add to",
      "description": "The predicate 'Add to' indicates a relationship where the subject contributes or incorporates new information into the object. This can be seen as an extension or augmentation of the existing entity, resulting in a modified or enriched version.",
      "disambiguation_index": 0
    },
    "Predicate-cannot_handle": {
      "label": "cannot handle",
      "description": "The predicate 'cannot handle' indicates that the subject lacks the capability or resources to manage, process, or comprehend the object. It suggests a limitation or inability of the subject to deal with the complexity, scale, or nature of the object.",
      "disambiguation_index": 0
    },
    "Predicate-proposed_in": {
      "label": "proposed in",
      "description": "The predicate 'proposed in' indicates a relationship where an idea or concept (subject) was suggested to be implemented within a specific context or framework (object).",
      "disambiguation_index": 0
    },
    "Predicate-are_computed_only_for": {
      "label": "are computed only for",
      "description": "This predicate indicates that a specific computation or process applies exclusively to the object, with respect to the subject. In other words, it specifies the scope or domain within which the computation occurs.",
      "disambiguation_index": 0
    },
    "Predicate-initializes": {
      "label": "initializes",
      "description": "Establishes or sets up something (e.g. an entity, process, state) from scratch, typically marking the beginning of its existence or operation.",
      "disambiguation_index": 0
    },
    "Predicate-are_involved_in": {
      "label": "are involved in",
      "description": "Indicates a relationship of participation or engagement between entities and an activity, process, or goal. The subject (entities) is connected to the object (the target predicate) through their shared involvement in it.",
      "disambiguation_index": 0
    },
    "Predicate-has_as_a_fact": {
      "label": "has as a fact",
      "description": "The predicate 'has as a fact' indicates that the subject (P_t) possesses or acknowledges the object (P_t(e1, e2)) as an established truth or reality. It implies a state of acceptance, recognition, or confirmation by P_t regarding the factual nature of the relationship between entities e1 and e2.",
      "disambiguation_index": 0
    },
    "Predicate-includes": {
      "label": "includes",
      "description": "The predicate 'includes' indicates that the subject encompasses or contains the object as a whole. It suggests a relationship of containment, where the subject has the object within its scope, boundaries, or definition.",
      "disambiguation_index": 0
    },
    "Predicate-extends": {
      "label": "extends",
      "description": "The predicate 'extends' indicates a relationship where the subject conceptually builds upon or inherits properties from the object. This can imply a hierarchical structure, where the subject is a specialization or an instance of the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_related_via_any_predicates": {
      "label": "are related via any predicates",
      "description": "This predicate indicates a connection between two entities based on their relationships with other entities. It suggests that there exists at least one predicate (e.g., 'is-a', 'part-of', 'located-at') that links the subject to the object, potentially through multiple intermediate entities.",
      "disambiguation_index": 0
    },
    "Predicate-based_on": {
      "label": "based on",
      "description": "The predicate 'based on' indicates a relationship where the subject's value or characteristic is derived from or measured against the object. It suggests that the subject's property or attribute is determined, influenced, or calculated using the information provided by the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_obtained": {
      "label": "are obtained",
      "description": "The predicate 'are obtained' indicates a relationship where the subject (entities) acquire or gain possession of something described by the object (After), implying a sense of acquisition, attainment, or receipt.",
      "disambiguation_index": 0
    },
    "Predicate-compute": {
      "label": "compute",
      "description": "To compute means to perform a mathematical or logical operation on data in order to derive new information, generate insights, or solve problems. The subject of the predicate performs an intellectual activity that involves processing and transforming input into output.",
      "disambiguation_index": 0
    },
    "Predicate-improve": {
      "label": "improve",
      "description": "To improve means to enhance or augment the quality, effectiveness, or efficiency of something. It implies a positive change that results in an improved state or outcome.",
      "disambiguation_index": 0
    },
    "Predicate-obtains": {
      "label": "obtains",
      "description": "The predicate 'obtains' indicates that a subject entity or concept has acquired or possesses some property, characteristic, or relationship described by the object. It suggests a state of having or being in possession of something, which can be physical, abstract, or conceptual.",
      "disambiguation_index": 0
    },
    "Predicate-compute_embeddings_for": {
      "label": "compute embeddings for",
      "description": "To compute embeddings for a given set of inputs or data points means to generate numerical representations that capture their inherent characteristics and relationships. This predicate connects the subject (a type of learner) with the object (the entities being represented), indicating that the subject's computational process is aimed at producing meaningful vectorial summaries of those entities, which can be used for various downstream applications such as classification, clustering or similarity analysis.",
      "disambiguation_index": 0
    },
    "Predicate-specifies": {
      "label": "specifies",
      "description": "Specifies indicates a relationship where the subject defines or characterizes the object by providing specific information about it. This connection implies that the subject provides a detailed description, explanation, or definition of the object.",
      "disambiguation_index": 0
    },
    "Predicate-exhaustively_generates_OP_rules_for_a_target_predicate_P_i_and_its_inverse_P_i-1": {
      "label": "exhaustively generates OP rules for a target predicate P_i and its inverse P_i^-1;",
      "description": "This predicate connects the subject, which represents an entity or process that generates rules for a target predicate, to the object, which is the generated OP rules themselves. The predicate exhaustively generates these rules for both the original predicate and its inverse, providing a comprehensive set of logical statements.",
      "disambiguation_index": 0
    },
    "Predicate-apply": {
      "label": "apply",
      "description": "To apply means to bring into effect or utilize something (typically an idea, concept, method, or principle) with the intention of achieving a specific outcome or solving a problem. This predicate establishes a connection between the subject and object by indicating that the subject is using or implementing the object in some way.",
      "disambiguation_index": 0
    },
    "Predicate-extend_to": {
      "label": "extend to",
      "description": "The predicate 'extend to' indicates a relationship where the subject (in this case, some top-ranked candidates) has a scope or applicability that reaches out to or encompasses the object (candidate rules). This implies that the subject's characteristics, properties, or influence are relevant and applicable to the object.",
      "disambiguation_index": 0
    },
    "Predicate-using": {
      "label": "using",
      "description": "The predicate 'using' indicates the subject's utilization or application of a particular object to achieve some goal or accomplish a task. It implies that the subject has chosen and employed the object as a means to an end, often in a deliberate or intentional manner.",
      "disambiguation_index": 0
    },
    "Predicate-implies": {
      "label": "implies",
      "description": "The predicate 'implies' indicates a logical relationship between two propositions or statements. It suggests that if one statement (the subject) holds true, then another statement (the object) must also be true.",
      "disambiguation_index": 0
    },
    "Predicate-evaluates_candidate_rules_by_OPSC_and_OPHC": {
      "label": "evaluates candidate rules by OPSC and OPHC;",
      "description": "The predicate 'evaluates' indicates a process of examining or assessing the given subject (candidate rules) using two specific evaluation methods, OPSC and OPHC. This connection implies that the subject's quality, validity, or effectiveness are being evaluated against these established criteria.",
      "disambiguation_index": 0
    },
    "Predicate-is_crucial_for": {
      "label": "is crucial for",
      "description": "The predicate 'is crucial for' indicates a relationship where the subject has a fundamental or essential role in achieving or realizing the object. It suggests that the subject is vital, necessary, or indispensable to accomplish or understand the object.",
      "disambiguation_index": 0
    },
    "Predicate-computes_a_fragment_of_the_KG_consisting_of_a_bounded_number_of_entities_that_are_related_to_the_target_predicate": {
      "label": "computes a fragment of the KG consisting of a bounded number of entities that are related to the target predicate;",
      "description": "This predicate connects the subject (a knowledge graph or its sampling) with an object (the resulting fragment of the knowledge graph), indicating a process that extracts and organizes a bounded number of entities related to a specific target predicate, thereby creating a smaller, focused representation of the original knowledge graph.",
      "disambiguation_index": 0
    },
    "Predicate-generated_in": {
      "label": "generated in",
      "description": "The predicate 'generated in' indicates that a subject (e.g., an entity or quantity) was produced or created within a specific context or framework denoted by the object. This relationship suggests a causal link between the subject and the object, implying that the generation of the subject is contingent upon or influenced by the object.",
      "disambiguation_index": 0
    },
    "Predicate-connects": {
      "label": "connects",
      "description": "The predicate 'connects' establishes a relationship between two entities or concepts, linking them together to form a meaningful whole. It implies a sense of unity, coherence, and interdependence between the subject and object.",
      "disambiguation_index": 0
    },
    "Predicate-tends_to_have_high": {
      "label": "tends to have high",
      "description": "The predicate 'tends to have high' indicates a general tendency or propensity for the subject (an OP rule) to possess or exhibit a characteristic, attribute, or quality that is considered high or of a certain level. This connection suggests an inherent relationship between the subject and object, where the subject's nature or behavior tends towards possessing this particular property.",
      "disambiguation_index": 0
    },
    "Predicate-have_a_large_intersection_with": {
      "label": "have a large intersection with",
      "description": "This predicate indicates that there exists a significant overlap or commonality between two sets of entities. The subject and object are related in that they share a substantial portion of their respective domains, implying some level of similarity, correlation, or shared characteristics.",
      "disambiguation_index": 0
    },
    "Predicate-associate": {
      "label": "associate",
      "description": "To associate means to connect or link two concepts (subject and object) in a way that highlights their relationship, similarity, or shared characteristics. This predicate indicates that the subject has some kind of connection or affinity with the object, which can be based on various criteria such as meaning, function, category, or context.",
      "disambiguation_index": 0
    },
    "Predicate-is_defined_using": {
      "label": "is defined using",
      "description": "The predicate 'is defined using' indicates a relationship between a concept or entity (the subject) and its underlying foundation, framework, or methodology that explains how it operates. It suggests that the subject relies on or is grounded in the object to function, make sense, or achieve its purpose.",
      "disambiguation_index": 0
    },
    "Predicate-adapt": {
      "label": "adapt",
      "description": "To modify or adjust something to fit a specific context, purpose, or situation. This predicate indicates that the subject takes an object and transforms it into a form that suits its needs.",
      "disambiguation_index": 0
    },
    "Predicate-are_computationally_harder_than": {
      "label": "are computationally harder than",
      "description": "This predicate indicates a comparative relationship between two sets of computational problems or algorithms (subject and object), suggesting that one set is more challenging to solve or analyze than another. The subject, typically representing a specific type of problem or rule-based system, is considered harder to process computationally compared to the object, which may represent alternative approaches or rules.",
      "disambiguation_index": 0
    },
    "Predicate-have_similar_concepts": {
      "label": "have similar concepts",
      "description": "The predicate 'have similar concepts' connects two entities (subject) by indicating that they share a common conceptual framework or understanding. The object represents this shared concept, which can be an abstract idea, theme, principle, or notion.",
      "disambiguation_index": 0
    },
    "Predicate-have_no_holistic_similarity_between_the_head_and_body": {
      "label": "have no holistic similarity between the head and body",
      "description": "This predicate indicates that there is a lack of overall coherence or unity between two entities (head and body), suggesting that they do not share any meaningful connections, patterns, or relationships. It implies a state where the subject lacks an integrated understanding or correspondence with its corresponding object.",
      "disambiguation_index": 0
    },
    "Predicate-isCitizenOf": {
      "label": "isCitizenOf",
      "description": "The predicate 'isCitizenOf' establishes a relationship between two entities (subject and object), indicating that the subject has citizenship or nationality of the country or region represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-isBornIn": {
      "label": "isBornIn",
      "description": "The predicate 'isBornIn' indicates a spatial-temporal relationship between the subject and object. It describes an event where the subject (x) came into existence or was brought forth within the context of the location denoted by the object (z).",
      "disambiguation_index": 0
    },
    "Predicate-embeddings": {
      "label": "embeddings",
      "description": "The predicate 'embeddings' represents a relationship where the subject (e.g., Each) maps or corresponds to the object (e.g., argument embeddings), typically in a context of semantic representation, dimensionality reduction, or feature extraction. This connection enables the subject to be understood as being composed of or related to the embedded elements described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-write_its_embedding_vector_as": {
      "label": "write its embedding vector as",
      "description": "This predicate connects a subject (typically an entity or concept) to an object (an embedding vector), indicating that the subject's semantic representation should be converted into its corresponding numerical vector, which can then be used for various natural language processing tasks.",
      "disambiguation_index": 0
    },
    "Predicate-define_the_representation_of": {
      "label": "define the representation of",
      "description": "This predicate establishes a connection between two entities by specifying how one represents or encodes another. It indicates that the subject entity's meaning or essence is captured through some form of representation, which is then defined in terms of the object entity.",
      "disambiguation_index": 0
    },
    "Predicate-write_its_embedding_matrix_as": {
      "label": "write its embedding matrix as",
      "description": "This predicate connects a subject (typically an entity or concept) to its representation in a vector space, where the object represents the resulting embedding matrix. The act of writing this matrix captures the process of converting abstract concepts into numerical representations that can be used for computational purposes.",
      "disambiguation_index": 0
    },
    "Predicate-occurring_as": {
      "label": "occurring as",
      "description": "The predicate 'occurring as' indicates a relationship where the subject (S_p) takes on or embodies certain characteristics, properties, or identities that are described by the object ('entities'). This connection suggests an equivalence or similarity between S_p and the entities it is occurring as.",
      "disambiguation_index": 0
    },
    "Predicate-of": {
      "label": "of",
      "description": "The predicate 'of' indicates a relationship between the subject and object where the subject has an inherent or characteristic connection to the object. This can include possession, origin, material composition, or other types of association.",
      "disambiguation_index": 0
    },
    "Predicate-contains": {
      "label": "contains",
      "description": "The predicate 'contains' indicates a relationship of inclusion or possession between the subject and object. It suggests that the subject has something within it, possesses it, or encompasses it, which can be physical, abstract, or conceptual.",
      "disambiguation_index": 0
    },
    "Predicate-represents": {
      "label": "represents",
      "description": "The predicate 'represents' connects a subject (a concept or entity) to an object (an idea, symbol, or representation), indicating that the subject embodies, exemplifies, or corresponds to the meaning or essence of the object. In general, it suggests a relationship where the subject serves as a proxy for understanding or conveying the characteristics, properties, or concepts represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-defined_as": {
      "label": "defined as",
      "description": "The predicate 'defined as' indicates a relationship where the subject concept or entity is characterized by its connection to the object, which serves as an explanation or specification of what the subject represents. In general, this predicate establishes a semantic link between two concepts, clarifying their meaning and scope.",
      "disambiguation_index": 0
    },
    "Predicate-simulates": {
      "label": "simulates",
      "description": "The predicate 'simulates' indicates a relationship where the subject (a system or process) mimics or imitates the behavior of another entity, as described by the object. This can involve reproducing certain characteristics, patterns, or outcomes that are typical of the simulated entity.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_obtained_by_aggregating": {
      "label": "can be obtained by aggregating",
      "description": "This predicate indicates that a subject (e.g., rules) can be transformed or reduced into its object (e.g., pairwise local occurrences) by combining individual elements or instances of the subject, often through some form of summarization, consolidation, or grouping. The resulting aggregated entity is equivalent to the original subject in terms of conveying meaningful information.",
      "disambiguation_index": 0
    },
    "Predicate-f0_loc": {
      "label": "f^0_loc",
      "description": "The predicate 'f^0_loc' indicates a spatial or locative relationship between the subject and object. It describes the location of the object with respect to the subject, such as being located at, near, or within the same space as the subject.",
      "disambiguation_index": 0
    },
    "Predicate-fi_loc": {
      "label": "f^i_loc",
      "description": "The predicate 'f^i_loc' establishes a spatial relationship between two entities (subject and object), indicating that the subject is located at or near the location of the object.",
      "disambiguation_index": 0
    },
    "Predicate-built_from": {
      "label": "built from",
      "description": "The predicate 'built from' indicates a relationship where the subject (e.g. argument embeddings) is constructed or composed of parts that are represented by the object (e.g. entity embeddings). This connection suggests a process of assembly, combination, or synthesis, implying that the subject has been formed using the components specified in the object.",
      "disambiguation_index": 0
    },
    "Predicate-introduces": {
      "label": "introduces",
      "description": "Introduces establishes a connection between two entities by presenting or bringing forth one entity to another. This predicate indicates that the subject brings into existence, reveals, or makes known the object, often implying a sense of novelty, innovation, or alternative perspective.",
      "disambiguation_index": 0
    },
    "Predicate-acts_to_connect": {
      "label": "acts to connect",
      "description": "The predicate 'acts to connect' indicates a relationship where the subject (an entity or concept) establishes a link between two or more other entities or concepts. This connection can be based on various criteria, such as semantic similarity, hierarchical structure, or logical relationships.",
      "disambiguation_index": 0
    },
    "Predicate-has_a_subject_argument": {
      "label": "has a subject argument",
      "description": "The 'has a subject argument' predicate establishes a relationship between the subject and object by indicating that the subject's meaning or scope includes entities that satisfy the conditions specified in the subject argument. In other words, it defines the domain of discourse for which the subject holds true.",
      "disambiguation_index": 0
    },
    "Predicate-connects_entities_along_a_path_that_satisfy": {
      "label": "connects entities along a path that satisfy",
      "description": "This predicate establishes a relationship between two concepts by linking them through a sequence of intermediate elements that meet certain conditions. It defines how entities are connected along a path, where each step satisfies specific criteria.",
      "disambiguation_index": 0
    },
    "Predicate-anchor": {
      "label": "anchor",
      "description": "To anchor means to establish a connection or relationship between two entities (subject and object), typically indicating that the subject has a strong influence over or control of the object, often in a specific context or domain.",
      "disambiguation_index": 0
    },
    "Predicate-estimates": {
      "label": "estimates",
      "description": "The predicate 'estimates' indicates a predictive or evaluative relationship between the subject and object. It suggests that the subject has made an assessment or prediction about the quality, value, or likelihood of the object.",
      "disambiguation_index": 0
    },
    "Predicate-acts_to_connect_entities_satisfying_the_subject_argument_of_the_head_predicate_P_t_to_entities_forming_the_object_argument_of_the_tail_predicate_P_n_along_a_path_of_entities_that_satisfy_a_chain_of_predicates_in_the_rule.": {
      "label": "acts to connect entities satisfying the subject argument of the head predicate, P_t, to entities forming the object argument of the tail predicate, P_n, along a path of entities that satisfy a chain of predicates in the rule.",
      "description": "This predicate establishes a connection between two sets of entities by traversing a sequence of intermediate entities that satisfy specific conditions. It links the subject and object arguments together through a chain of predicates, effectively creating a path or relationship between them.",
      "disambiguation_index": 0
    },
    "Predicate-represents_the_overall_rule_from_the_perspective_of_the_predicates.": {
      "label": "represents the overall rule from the perspective of the predicates.",
      "description": "This predicate indicates that the subject defines or embodies a general principle or guideline that governs the relationship between itself and the object. The perspective taken by this rule is from the viewpoint of the predicates themselves, suggesting an intrinsic understanding of how these predicates relate to each other.",
      "disambiguation_index": 0
    },
    "Predicate-prefer": {
      "label": "prefer",
      "description": "The predicate 'prefer' indicates a subjective preference or inclination towards one option (object) over another. It implies that the subject has a stronger affinity for, or leans more heavily in favor of, the object compared to other possible alternatives.",
      "disambiguation_index": 0
    },
    "Predicate-use_both_to_pick": {
      "label": "use both to pick",
      "description": "To 'use both' means to combine or integrate two distinct approaches, methods, or criteria to select or identify something. This predicate indicates that the subject (fitness function) employs a combination of strategies or rules to pick out the object (top candidate rules), likely considering multiple factors and perspectives.",
      "disambiguation_index": 0
    },
    "Predicate-pick_up_only_the_top": {
      "label": "pick up only the top",
      "description": "The predicate 'pick up only the top' indicates a selective action where the subject (e.g., rules) identifies and takes only the most prominent or highest-quality elements from among its options, as specified by the object (e.g., the top t% of rules).",
      "disambiguation_index": 0
    },
    "Predicate-assessed": {
      "label": "assessed",
      "description": "To assess means to evaluate or judge something against a standard or criteria. It implies a process of examination and evaluation that leads to a conclusion, judgment, or determination about the quality, validity, or relevance of the subject with respect to the object.",
      "disambiguation_index": 0
    },
    "Predicate-may_include": {
      "label": "may include",
      "description": "The predicate 'may include' indicates that the subject (in this case, 'rules') potentially contains or comprises part of its object (a significant number of obsolete and low-quality rules), suggesting a relationship of partial inclusion or membership.",
      "disambiguation_index": 0
    },
    "Predicate-show": {
      "label": "show",
      "description": "To 'show' means to demonstrate or illustrate something (typically an idea, process, or skill) for someone else's understanding. The predicate connects the subject with a specific aspect of knowledge or expertise that they are expected to convey or make accessible to others.",
      "disambiguation_index": 0
    },
    "Predicate-can_trigger": {
      "label": "can trigger",
      "description": "The predicate 'can trigger' indicates a relationship where the subject (in this case, KG) has the ability or potential to cause or initiate the object (candidate rules), potentially leading to some effect or consequence.",
      "disambiguation_index": 0
    },
    "Predicate-illustrate": {
      "label": "illustrate",
      "description": "To illustrate means to clarify or make clear through visual representation, explanation, or demonstration. The subject of the predicate illustrates something about the object, providing a deeper understanding or insight into its nature, functionality, or process.",
      "disambiguation_index": 0
    },
    "Predicate-through": {
      "label": "through",
      "description": "The predicate 'through' indicates a means or manner by which something connects or relates to another. It suggests that there exists a path, channel, or medium through which the subject and object are linked.",
      "disambiguation_index": 0
    },
    "Predicate-illustrates": {
      "label": "illustrates",
      "description": "The predicate 'illustrates' connects a subject (typically a concept or process) to an object (usually a concrete representation), indicating that the subject serves as a model, example, or demonstration of the object. In general, it suggests that the subject provides insight into the nature, functionality, or characteristics of the object.",
      "disambiguation_index": 0
    },
    "Predicate-need_to_calculate": {
      "label": "need to calculate",
      "description": "To indicate a requirement for mathematical or logical processing of information, often involving quantification, measurement, or analysis. The subject needs to perform some form of calculation on the object (e.g., data, numbers) to achieve a specific goal or understanding.",
      "disambiguation_index": 0
    },
    "Predicate-sum": {
      "label": "sum",
      "description": "The predicate 'sum' represents a mathematical operation that combines or aggregates values in the object to produce a total or overall value. It indicates that the subject is performing an accumulation of quantities, totals, or counts represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-transpose_to_obtain": {
      "label": "transpose to obtain",
      "description": "To transform or convert a given subject (typically a data structure) into an object that represents its transposed form. This predicate indicates the process of rearranging elements in the subject to obtain the desired output, often used for mathematical operations like matrix transpose.",
      "disambiguation_index": 0
    },
    "Predicate-transpose": {
      "label": "transpose",
      "description": "The predicate 'transpose' indicates a transformation or reorganization of the subject's representation or structure in order to relate it to the object, which may be another representation, concept, or entity. This process involves rearranging or rewriting the subject's properties or characteristics to align with the object's perspective or framework.",
      "disambiguation_index": 0
    },
    "Predicate-obtain": {
      "label": "obtain",
      "description": "The predicate 'obtain' indicates that the subject has acquired or gained possession of the object. It implies a sense of accomplishment or achievement in securing or getting hold of something, which can be an abstract concept, a physical entity, or even information.",
      "disambiguation_index": 0
    },
    "Predicate-is_given_by_counting_the_number_of_non-zero_elements_in": {
      "label": "is given by counting the number of non-zero elements in",
      "description": "This predicate establishes a relationship between its subject and object by defining how to determine or quantify the information provided by the object. In general, it indicates that the object's properties or characteristics can be understood or measured through counting the number of non-zero elements within it.",
      "disambiguation_index": 0
    },
    "Predicate-satisfy": {
      "label": "satisfy",
      "description": "To satisfy connects a subject (in this case, entities) to an object that represents a condition or requirement. The predicate indicates that the subject meets or fulfills the specified criteria, which can be expressed as a combination of conditions (e.g., e2 and e3).",
      "disambiguation_index": 0
    },
    "Predicate-indicate": {
      "label": "indicate",
      "description": "To indicate means to point out or show something's presence or existence by providing a sign, signal, or marker. It implies a connection between the subject and object, where the subject serves as a reference or pointer that highlights or identifies specific information in the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_by": {
      "label": "are by",
      "description": "The predicate 'are by' indicates a relationship where the subject (conditions) is related to or characterized by the object (pairwise multiplication), suggesting that the conditions are described, explained, or understood through pairwise multiplication.",
      "disambiguation_index": 0
    },
    "Predicate-has_cardinality": {
      "label": "has cardinality",
      "description": "The predicate 'has cardinality' establishes a relationship between its subject and object, indicating that the subject possesses or exhibits a specific quantity or magnitude as described by the object. In general, this predicate connects the subject to an abstract concept of countability or quantifiable measure.",
      "disambiguation_index": 0
    },
    "Predicate-is_supplied_to": {
      "label": "is supplied to",
      "description": "The predicate 'is supplied to' indicates a relationship where the subject (in this case, an algorithm or process) provides its input or resources to another entity (the object), which is typically a system, platform, or environment. This connection implies that the subject's output or capabilities are being utilized by the object for some purpose.",
      "disambiguation_index": 0
    },
    "Predicate-are_supplied_to": {
      "label": "are supplied to",
      "description": "The predicate 'are supplied to' indicates a relationship where some information or resource (subject) is provided or made available for use by another entity (object). This connection implies that the subject's content, rules, or guidelines are being utilized or applied by the object.",
      "disambiguation_index": 0
    },
    "Predicate-produces": {
      "label": "produces",
      "description": "The predicate 'produces' indicates a causal relationship between the subject and object, suggesting that the subject brings into existence or generates the object. In general, it implies a process of creation, generation, or transformation that results in the production of something.",
      "disambiguation_index": 0
    },
    "Predicate-keeps": {
      "label": "keeps",
      "description": "The predicate 'keeps' indicates a relationship where the subject maintains or sustains the object in some way. This can imply control, regulation, or management of the object's properties, complexity, or behavior.",
      "disambiguation_index": 0
    },
    "Predicate-can_now_mine_OP_rules_with_measurable_qualities_from_KGs": {
      "label": "can now mine OP rules with measurable qualities from KGs",
      "description": "This predicate indicates that a subject (typically an ontology pattern or rule) has gained the ability to extract and utilize other ontology patterns or rules with measurable qualities from knowledge graphs. The connection between the subject and object is one of access, allowing the subject to leverage the object's contents for further analysis, inference, or decision-making.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_for": {
      "label": "can be used for",
      "description": "The predicate 'can be used for' indicates a relationship between the subject and object where the subject has an application or purpose that aligns with the object. It suggests that the subject (e.g., mined rules) serves as a means to achieve, accomplish, or fulfill the object (e.g., AKGC task).",
      "disambiguation_index": 0
    },
    "Predicate-can_be_posed_to": {
      "label": "can be posed to",
      "description": "The predicate 'can be posed to' indicates that the subject (in this case, questions) has the potential to be presented or asked of someone or something specified by the object (oracle or a human expert). This connection suggests an interactive scenario where the subject is being queried or examined in some way.",
      "disambiguation_index": 0
    },
    "Predicate-makes": {
      "label": "makes",
      "description": "The predicate 'makes' indicates that the subject has created or brought into existence something described by the object. This can imply a range of relationships between the subject and object, including but not limited to creation, design, development, production, or provision.",
      "disambiguation_index": 0
    },
    "Predicate-makes_a_convenient_oracle": {
      "label": "makes a convenient oracle",
      "description": "The predicate 'makes a convenient oracle' indicates that the subject creates or provides an intuitive and accessible source of guidance or insight (the object), which facilitates decision-making, problem-solving, or understanding. This connection implies that the subject's actions or capabilities enable others to tap into valuable information or wisdom.",
      "disambiguation_index": 0
    },
    "Predicate-the_AKGC_task_is_to_generate_queries_of_the_form_P_e_and_Pe_": {
      "label": "the AKGC task is to generate queries of the form P(?, e') and P(e, ?)",
      "description": "This predicate describes a task in knowledge graph completion (AKGC), where the goal is to generate query patterns that involve a given predicate P. The pattern involves two types of queries: one with an unknown subject and a fixed object, denoted as P(?, e'), and another with a fixed subject and an unknown object, denoted as P(e, ?).",
      "disambiguation_index": 0
    },
    "Predicate-to_generate_queries_of_the_form_P_e_and_Pe_": {
      "label": "to generate queries of the form P(?, e') and P(e, ?)",
      "description": "This predicate describes a process that generates two types of queries based on a given predicate P. The first type of query takes the form P(? , e') where ? represents an unknown entity and e' is another entity related to e, which is also unknown. The second type of query has the form P(e, ?) where e is known and ? is another unknown entity. This process connects the subject (the given predicate P) with the object by generating queries that explore relationships between entities.",
      "disambiguation_index": 0
    },
    "Predicate-found_by": {
      "label": "found by",
      "description": "The predicate 'found by' indicates that the subject (a method or approach) discovered or identified the object (an entity, concept, or solution), often through a process of exploration, investigation, or experimentation.",
      "disambiguation_index": 0
    },
    "Predicate-derives": {
      "label": "derives",
      "description": "The predicate 'derives' indicates a relationship where the subject generates or produces the object as a result. This can be seen in various contexts such as logical reasoning, artificial intelligence, and knowledge representation, among others.",
      "disambiguation_index": 0
    },
    "Predicate-finds_OP_rules_about_P_in_the_head_and_then_uses_the_rules_to_induce_queries_of_the_form_P_e_and_Pe_": {
      "label": "finds OP rules about P in the head and then uses the rules to induce queries of the form P(?, e') and P(e, ?)",
      "description": "This predicate connects a subject (typically an algorithm or process) with an object (a set of rules about a specific concept P). The predicate describes the action of finding and utilizing these rules to generate queries that relate to P. In essence, it represents how the subject uses knowledge from the head (rules) to formulate questions or hypotheses related to P.",
      "disambiguation_index": 0
    },
    "Predicate-induce": {
      "label": "induce",
      "description": "To induce means to derive or bring forth a conclusion or result from existing information or knowledge. It implies the application of rules, principles, or patterns to generate new insights, hypotheses, or predictions.",
      "disambiguation_index": 0
    },
    "Predicate-has_instances_such_as_P_1e_e_1_P_2e_1_e_2_..._P_ne_n-1_e_in_the_KG": {
      "label": "has instances such as P_1(e, e_1), P_2(e_1, e_2), ..., P_n(e_{n-1}, e') in the KG",
      "description": "This predicate indicates that the subject has instances of relationships described by a sequence of predicates (P_1 to P_n), where each relationship instance connects entities e and e' through intermediate entities e_1, ..., e_{n-1}.",
      "disambiguation_index": 0
    },
    "Predicate-define": {
      "label": "define",
      "description": "To specify or clarify the meaning of something by establishing a clear and precise concept or boundary. The predicate 'define' connects the subject to an object, which can be a term, concept, or idea, indicating that the subject provides a detailed explanation or description of what the object represents.",
      "disambiguation_index": 0
    },
    "Predicate-induced_by": {
      "label": "induced by",
      "description": "The predicate 'induced by' indicates a causal relationship between the subject and object, suggesting that the subject's existence or properties are caused or influenced by the object. The connection implies a direction of influence from the object to the subject.",
      "disambiguation_index": 0
    },
    "Predicate-uses_the_test_data_to_evaluate_its_prediction_performance": {
      "label": "uses the test data to evaluate its prediction performance",
      "description": "This predicate describes an action where a subject entity utilizes specific evaluation data (the object) to assess and quantify its predictive capabilities. The process involves comparing predicted outcomes with actual results from the test dataset, allowing for performance metrics such as accuracy or precision to be calculated.",
      "disambiguation_index": 0
    },
    "Predicate-arise": {
      "label": "arise",
      "description": "To 'arise' means to emerge or come into being as a result of something. It implies that the subject has taken shape, developed, or become apparent due to some underlying cause or factor.",
      "disambiguation_index": 0
    },
    "Predicate-need_only_a_named_predicate_or_all_predicates": {
      "label": "need only a named predicate (or all predicates)",
      "description": "This predicate indicates that there exists at least one specific or general term (named predicate) that satisfies a particular requirement, connecting the subject to the object by specifying the necessary condition for their relationship.",
      "disambiguation_index": 0
    },
    "Predicate-P_1_": {
      "label": "P_1(?, ?)",
      "description": "P_1 represents a relationship between two entities where one entity (the subject) has some kind of connection or association with another entity (the object). The nature and strength of this connection can vary depending on the context, but it generally implies that the subject is linked to the object in some meaningful way.",
      "disambiguation_index": 0
    },
    "Predicate-P_1e_4_": {
      "label": "P_1(e_4, ?)",
      "description": "P_1 represents a relationship where e_4 (the subject) has or possesses something that can be described by the object. The nature of this possession or connection between e_4 and the object is not specified, but it implies some kind of association or attachment.",
      "disambiguation_index": 0
    },
    "Predicate-P_1e_8_": {
      "label": "P_1(e_8, ?)",
      "description": "P_1(e_8, ?) represents a relationship where e_8 (the subject) has or possesses something that can be described by the object (?).",
      "disambiguation_index": 0
    },
    "Predicate-try_to_answer": {
      "label": "try to answer",
      "description": "To attempt to formulate or propose a response to a given question, query, or problem. The subject (e.g., link predictors) engages in this action with respect to the object (e.g., this set of queries), seeking to provide an answer that addresses the underlying inquiry.",
      "disambiguation_index": 0
    },
    "Predicate-is_upper-bounded_by": {
      "label": "is upper-bounded by",
      "description": "Indicates that there exists a maximum value or limit for the subject that is equal to or less than the object. The predicate establishes an upper bound on the magnitude or extent of the subject, suggesting a quantitative relationship between them.",
      "disambiguation_index": 0
    },
    "Predicate-can_derive": {
      "label": "can derive",
      "description": "The predicate 'can derive' indicates that there exists a logical connection or relationship between two entities (subject and object), where the subject has the ability to infer, deduce, or generate the object. In other words, it represents an inference process from one set of information (the subject) to another (the object).",
      "disambiguation_index": 0
    },
    "Predicate-conducted": {
      "label": "conducted",
      "description": "To conduct something means to take charge and oversee its execution or implementation. The subject performs an action that involves managing, directing, or supervising the object, which can be a process, activity, experiment, test, investigation, etc.",
      "disambiguation_index": 0
    },
    "Predicate-conducted_two_sets_of_experiments_to_evaluate_OPRL.": {
      "label": "conducted two sets of experiments to evaluate OPRL.",
      "description": "The predicate 'conducted two sets of experiments to evaluate' indicates that the subject performed a series of scientific investigations aimed at assessing or testing the object (OPRL), which implies a connection between the subject's actions and their understanding or evaluation of the object.",
      "disambiguation_index": 0
    },
    "Predicate-demonstrate1._OPRL_can_mine_quality_OP_rules_from_a_range_of_KGs._OPRL_can_mine_massive_KGs_in_a_reasonable_time._Our_novel_hybrid_fitness_function_outperforms_the_fitness_function_adapted_from_RLVLR.2._Queries_generated_from_OPRL_s_rules_are_relevant_with_good_recall_and_precision_in_multiple_KGs.": {
      "label": "demonstrate:\n1. OPRL can mine quality OP rules from a range of KGs. OPRL can mine massive KGs in a reasonable time. Our novel hybrid fitness function outperforms the fitness function adapted from RLVLR.\n2. Queries generated from OPRL' s rules are relevant with good recall and precision in multiple KGs.",
      "description": "To demonstrate means to show or prove the capabilities, effectiveness, or relevance of something (typically an object or a system), often through experimentation, testing, or evaluation. In this context, it connects the subject with the object by highlighting how the subject's features, abilities, or performance are showcased and validated.",
      "disambiguation_index": 0
    },
    "Predicate-are_evaluated_by": {
      "label": "are evaluated by",
      "description": "This predicate indicates that a set of methods or techniques (subject) have their performance or effectiveness measured and assessed using a specific evaluation method or criteria (object).",
      "disambiguation_index": 0
    },
    "Predicate-provide": {
      "label": "provide",
      "description": "To provide means to offer or supply something (e.g. information, resources, services) from one entity to another, often implying a sense of availability, accessibility, and/or facilitation.",
      "disambiguation_index": 0
    },
    "Predicate-are_usually_evaluated_by_link_prediction_for_which_relevant_questions_are_provided_by_human_experimenters.": {
      "label": "are usually evaluated by link prediction, for which relevant questions are provided by human experimenters.",
      "description": "This predicate indicates that a subject's performance or quality is typically assessed using link prediction methods and accompanied by question sets designed by humans, with the goal of evaluating their effectiveness.",
      "disambiguation_index": 0
    },
    "Predicate-answer_each_query_with_a_sequence_of_ranked_entities.": {
      "label": "answer each query with a sequence of ranked entities.",
      "description": "This predicate describes an action where the subject (e.g. a model or system) generates a ranking of entities as responses to queries, providing a sequence of ranked entities for each query.",
      "disambiguation_index": 0
    },
    "Predicate-answer": {
      "label": "answer",
      "description": "To respond or provide a solution to something posed or asked. The predicate 'answer' indicates that the subject provides a response, explanation, or resolution to the object, which can be a question, query, problem, or challenge.",
      "disambiguation_index": 0
    },
    "Predicate-are_concerned_with": {
      "label": "are concerned with",
      "description": "The predicate 'are concerned with' indicates a subject's focus or attention on an object. It suggests that the subject has a vested interest or involvement in the matter described by the object, and is actively engaged with it.",
      "disambiguation_index": 0
    },
    "Predicate-ask": {
      "label": "ask",
      "description": "To 'ask' means to request information or clarification from someone by posing a question. The predicate connects the subject (the one doing the asking) with the object (what is being asked), indicating that the subject seeks knowledge, understanding, or confirmation through inquiry.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_with": {
      "label": "can be used with",
      "description": "This predicate indicates that the subject (a system or process) has an operational relationship with the object (another system, tool, or technique), allowing them to work together effectively. The connection between the subject and object implies a functional compatibility, where the subject can utilize the object's capabilities or properties in some way.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_in_combination_with_a_link_predictor_to_infer_new_facts_but_we_do_not_use_any_specific_link_predictor_to_answer_our_questions_in_this_paper.": {
      "label": "can be used in combination with a link predictor to infer new facts, but we do not use any specific link predictor to answer our questions in this paper.",
      "description": "This predicate indicates that the subject can be combined with a particular type of tool or system (link predictor) to generate new information, insights, or facts. The object refers to this tool or system.",
      "disambiguation_index": 0
    },
    "Predicate-are_not_designed_to_answer": {
      "label": "are not designed to answer",
      "description": "This predicate indicates that the subject entity or system does not have the intention or capability to respond to or address the object, which can be a query, question, or problem. The relationship suggests that the subject's design or purpose does not include providing an answer or solution to the object.",
      "disambiguation_index": 0
    },
    "Predicate-assume": {
      "label": "assume",
      "description": "The predicate 'assume' indicates that the subject takes on or adopts the characteristics described by the object. It implies a mental act of taking something as true, real, or actual, and often involves making an inference or supposition about a situation.",
      "disambiguation_index": 0
    },
    "Predicate-we_assume_a_perfect_link_predictor_that_can_answer_any_question_with_a_correct_answer_when_such_an_answer_exists.": {
      "label": "we assume a perfect link predictor that can answer any question with a correct answer when such an answer exists.",
      "description": "This predicate indicates the assumption of a hypothetical entity, specifically a 'perfect link predictor', that has the capability to accurately respond to any question with a correct answer when such an answer exists. The subject and object are connected by this assumption, implying that the perfect link predictor is being considered as a reference point for evaluating or assessing something.",
      "disambiguation_index": 0
    },
    "Predicate-reduced_to": {
      "label": "reduced to",
      "description": "The predicate 'reduced to' indicates a relationship where the subject is condensed or simplified into its most fundamental essence, which is described by the object. The object represents the underlying nature or core of the subject, and the predicate suggests that this essential aspect can be understood or grasped through the means specified in the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_evaluate_the_relevancy_of_a_question_based_on_the_test_facts._If_we_have_the_answer_to_a_question_in_the_test_set_it_means_the_question_is_relevant_because_it_uncovers_some_missing_fact_and_if_we_have_a_perfect_link_predictor_the_question_can_be_fed_to_it_and_the_missing_fact_can_be_retrieved.": {
      "label": "can evaluate the relevancy of a question based on the test facts. If we have the answer to a question in the test set, it means the question is relevant because it uncovers some missing fact, and if we have a perfect link predictor, the question can be fed to it, and the missing fact can be retrieved.",
      "description": "This predicate connects the subject with the ability to assess the relevance of a question based on provided information (test facts). The connection implies that the subject has the capacity to determine whether a given question is pertinent or not, and if so, what specific fact it uncovers.",
      "disambiguation_index": 0
    },
    "Predicate-is_relevant_because_it_uncovers_some_missing_fact": {
      "label": "is relevant because it uncovers some missing fact",
      "description": "This predicate indicates that the subject (e.g., a question) has significance or importance due to its ability to reveal previously unknown information. The object represents this missing fact, which provides context and meaning for the subject's relevance.",
      "disambiguation_index": 0
    },
    "Predicate-can_mine": {
      "label": "can mine",
      "description": "The predicate 'can mine' indicates that the subject has the capability or authority to extract or access information, resources, or knowledge from the object. The connection between the subject and object suggests a relationship of permission, authorization, or expertise.",
      "disambiguation_index": 0
    },
    "Predicate-mine_from_a_range_of": {
      "label": "mine from a range of",
      "description": "The predicate 'mine from a range' indicates that the subject has extracted or selected specific information (the object) from a given scope or set. This can imply a process of filtering, categorizing, or prioritizing to identify relevant data.",
      "disambiguation_index": 0
    },
    "Predicate-mine_in_a_reasonable_time": {
      "label": "mine in a reasonable time",
      "description": "The predicate 'mine in a reasonable time' indicates that the subject has access to or control over the object within a reasonable timeframe. It implies a sense of ownership, possession, or agency over the object's contents or resources.",
      "disambiguation_index": 0
    },
    "Predicate-outperforms": {
      "label": "outperforms",
      "description": "Indicates that the subject has a superior performance or achievement compared to the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_relevant_with_good_recall_and_precision_in": {
      "label": "are relevant with good recall and precision in",
      "description": "This predicate indicates that there exists a relationship between queries and knowledge graphs (KGs), where the queries retrieve information from the KGs with high accuracy and relevance. The phrase 'good recall' suggests that most of the relevant information is retrieved, while 'precision in' implies that the retrieved information is accurate and specific to the query.",
      "disambiguation_index": 0
    },
    "Predicate-outperform": {
      "label": "outperform",
      "description": "To outperform means to surpass or excel beyond expectations, typically implying superiority or achievement of a higher standard compared to something else. This predicate connects the subject and object by indicating that the subject has demonstrated exceptional performance or results that exceed those expected from the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_derived_from": {
      "label": "is derived from",
      "description": "Indicates that a subject entity has its origin or foundation rooted in another entity (the object), suggesting a causal relationship where the subject emerges as a result of, or is influenced by, the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_widely_adopted_for": {
      "label": "is widely adopted for",
      "description": "Indicates that a particular entity (subject) has been commonly used or applied to achieve a specific purpose or goal (object).",
      "disambiguation_index": 0
    },
    "Predicate-is_often_used_for": {
      "label": "is often used for",
      "description": "This predicate indicates that a subject (typically an entity or system) has a specific purpose or function related to its object. The relationship suggests that the subject is commonly employed, utilized, or applied for achieving or accomplishing something described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_a": {
      "label": "is a",
      "description": "Indicates that the subject has a specific category or classification to which it belongs. This predicate establishes an instance-of relationship between the subject and object, suggesting that the subject is a representative example of the concept denoted by the object.",
      "disambiguation_index": 0
    },
    "Predicate-to_manage": {
      "label": "to manage",
      "description": "To manage refers to the act of being responsible for and overseeing the organization, coordination, or direction of something. This predicate indicates a relationship where the subject has control over the object, ensuring its proper functioning, maintenance, or development.",
      "disambiguation_index": 0
    },
    "Predicate-manages_the_factual_information_of_a_popular_online_encyclopedia": {
      "label": "manages the factual information of a popular online encyclopedia",
      "description": "This predicate indicates that the subject entity is responsible for ensuring the accuracy and reliability of the factual content presented in an online encyclopedia. The object refers to a specific type of digital resource, which provides access to verifiable information on various topics.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_synthetic_dataset_adapted_by": {
      "label": "is a synthetic dataset adapted by",
      "description": "This predicate indicates that the subject has undergone adaptation or modification to create a synthetic dataset. The object refers to the entity responsible for performing this adaptation process.",
      "disambiguation_index": 0
    },
    "Predicate-adapted_from": {
      "label": "adapted from",
      "description": "The predicate 'adapted from' indicates a relationship where the subject has been modified or transformed to derive its current form from an existing object. This connection implies that the subject's essence, characteristics, or features have been influenced by the original source represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-from": {
      "label": "from",
      "description": "The 'from' predicate indicates the origin or source of something. It connects the subject to an object that represents a starting point, foundation, or basis for the subject's existence, identity, or characteristics.",
      "disambiguation_index": 0
    },
    "Predicate-drawn_from": {
      "label": "drawn from",
      "description": "The predicate 'drawn from' indicates that the subject (in this case, 5 playing cards) has been obtained or selected from a specified source or pool (the object), which can be a physical location, an abstract concept, or another entity. The relationship between the subject and object is one of extraction, selection, or sampling.",
      "disambiguation_index": 0
    },
    "Predicate-is_described_using": {
      "label": "is described using",
      "description": "This predicate indicates a relationship between a subject (a concept or entity) and an object (a description or characterization), where the subject is described using the characteristics, attributes, or features specified by the object.",
      "disambiguation_index": 0
    },
    "Predicate-set": {
      "label": "set",
      "description": "The predicate 'set' indicates a relationship where the subject specifies or determines the value of the object. This can be interpreted as assigning, fixing, or establishing the object's state to match the subject.",
      "disambiguation_index": 0
    },
    "Predicate-retain": {
      "label": "retain",
      "description": "To retain means to keep or maintain something in a particular state or condition. It implies holding onto or preserving an aspect, quality, or characteristic that has been previously established or acquired.",
      "disambiguation_index": 0
    },
    "Predicate-finds": {
      "label": "finds",
      "description": "The predicate 'finds' indicates a subject's discovery or identification of an object. It implies that the subject has come across, recognized, or determined the existence of the object through some means.",
      "disambiguation_index": 0
    },
    "Predicate-finds_high_quality_rules": {
      "label": "finds high quality rules",
      "description": "The predicate 'finds high quality rules' describes an action where a subject (e.g. OPRL) identifies or discovers rules that meet certain standards of excellence, such as accuracy, relevance, or effectiveness.",
      "disambiguation_index": 0
    },
    "Predicate-assess_how_well_OPRL_finds_high_quality_rules": {
      "label": "assess how well OPRL finds high quality rules",
      "description": "To evaluate or judge the effectiveness of a process (OPRL) in identifying and extracting high-quality rules.",
      "disambiguation_index": 0
    },
    "Predicate-compare_the_performance_of_fitness_functions_proposed_for_OPRL": {
      "label": "compare the performance of fitness functions proposed for OPRL",
      "description": "To evaluate and contrast the effectiveness or efficiency of different sets of fitness functions designed to optimize parameters in an Optimization Problem Representation Language (OPRL).",
      "disambiguation_index": 0
    },
    "Predicate-is_reported_based_on": {
      "label": "is reported based on",
      "description": "This predicate indicates that a statement or finding about the subject is derived from or grounded in the object. The object serves as evidence, data, or criteria for making claims about the subject.",
      "disambiguation_index": 0
    },
    "Predicate-calculated_against": {
      "label": "calculated against",
      "description": "The predicate 'calculated against' indicates a relationship where the subject (a set of values or metrics) has been evaluated and compared to the object (typically, a standard or reference point), resulting in an assessment or measurement.",
      "disambiguation_index": 0
    },
    "Predicate-calculated_against_the_full_benchmark_KGs": {
      "label": "calculated against the full benchmark KGs",
      "description": "The predicate 'calculated against the full benchmark KGs' indicates a relationship where the subject (a set of scores or metrics) has been evaluated and compared to a comprehensive standard or reference point, specifically the full benchmark knowledge graphs. This connection highlights that the subject's value is being measured in relation to this established baseline.",
      "disambiguation_index": 0
    },
    "Predicate-reported_based_on_their_OPSC_and_OPHC_values_respectively": {
      "label": "reported based on their OPSC and OPHC values respectively",
      "description": "The predicate 'reported' indicates that the subject's characteristics or properties are being described based on their corresponding OPSC and OPHC values, respectively. This connection links the subject to its attributes as measured by these two metrics.",
      "disambiguation_index": 0
    },
    "Predicate-used_for_generating_queries_so_we_need_some_hold-out_facts_for_query_evaluation.": {
      "label": "used for generating queries, so we need some hold-out facts for query evaluation.",
      "description": "This predicate indicates that the subject is employed or utilized to produce a set of queries, which requires having some additional facts (hold-out facts) for evaluating those queries.",
      "disambiguation_index": 0
    },
    "Predicate-has_test_and_training_sets_available": {
      "label": "has test and training sets available",
      "description": "Indicates that a dataset or resource provides access to both testing data (test set) and training data for machine learning model development, evaluation, or refinement.",
      "disambiguation_index": 0
    },
    "Predicate-shows": {
      "label": "shows",
      "description": "Indicates a relationship where the subject presents or displays information about the object. This can include revealing characteristics, patterns, trends, or insights that are inherent to the object.",
      "disambiguation_index": 0
    },
    "Predicate-mined_for": {
      "label": "mined for",
      "description": "The predicate 'mined for' indicates that the subject has been searched or explored to extract information relevant to the object. The connection between the subject and object suggests a process of discovery, where the subject serves as a source from which valuable insights or knowledge are extracted.",
      "disambiguation_index": 0
    },
    "Predicate-shows_the_average_numbers_of_quality_rules_mined_for_all_predicates_in_the_respective_KGs.": {
      "label": "shows the average numbers of quality rules mined for all predicates in the respective KGs.",
      "description": "This predicate connects a subject (typically an entity or table) to information about the average number and type of quality rules extracted from knowledge graphs, providing insight into the distribution and characteristics of these rules across different predicates.",
      "disambiguation_index": 0
    },
    "Predicate-has_only_50_randomly_selected_predicates_targeted": {
      "label": "has only 50 randomly selected predicates targeted",
      "description": "Indicates that a subject's set of predicates is limited to exactly 50 instances, which were chosen at random. This predicate highlights the uniqueness and scarcity of these targeted predicates.",
      "disambiguation_index": 0
    },
    "Predicate-averaged_over": {
      "label": "averaged over",
      "description": "The predicate 'averaged over' indicates a statistical aggregation operation that groups values from the subject (e.g., run times in hours) according to categories or classes defined by the object (e.g., targets). The resulting value represents an average of these grouped values, providing a summary measure for each category.",
      "disambiguation_index": 0
    },
    "Predicate-averaged_over_the_targets_in_hours": {
      "label": "averaged over the targets, in hours",
      "description": "This predicate indicates that a measurement or value (subject) has been aggregated or summarized to represent an average across multiple target values. The result of this averaging process is expressed in units of time, specifically hours.",
      "disambiguation_index": 0
    },
    "Predicate-shows_the_distribution_of_mined_rules_by_OPSC_and_length": {
      "label": "shows the distribution of mined rules by OPSC and length",
      "description": "This predicate describes a visual representation that illustrates how the frequency or quantity of mined rules varies according to two distinct categories: Operational Process Specification Code (OPSC) and length. The subject refers to an image, chart, or graph that displays this distribution.",
      "disambiguation_index": 0
    },
    "Predicate-can_learn": {
      "label": "can learn",
      "description": "The predicate 'can learn' indicates that a subject has the capacity or ability to acquire knowledge, skills, or understanding from an object. It suggests a potential for growth and development through interaction with the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_mined_from": {
      "label": "are mined from",
      "description": "The predicate 'are mined from' indicates a relationship between a subject and an object where the subject's content or information is derived or obtained from the object, often implying that the object serves as a source or repository for the subject.",
      "disambiguation_index": 0
    },
    "Predicate-is_known": {
      "label": "is known",
      "description": "The predicate 'is known' indicates that there exists some information or knowledge about the subject with respect to the object. The connection between the subject and object is one of familiarity, recognition, or understanding.",
      "disambiguation_index": 0
    },
    "Predicate-states_that_if": {
      "label": "states that if",
      "description": "The predicate 'states that if' indicates a conditional relationship between its subject and object. It suggests that the truth or validity of the statement (object) depends on, or is contingent upon, some condition or circumstance being met (expressed in the subordinate clause). In other words, it implies that the state described by the object holds true only when the specified condition is satisfied.",
      "disambiguation_index": 0
    },
    "Predicate-spouse": {
      "label": "spouse",
      "description": "The predicate 'spouse' connects the subject to a person with whom they are in a long-term romantic partnership or marriage.",
      "disambiguation_index": 0
    },
    "Predicate-highestPoint_": {
      "label": "highestPoint( )",
      "description": "The predicate 'highestPoint' describes a spatial relationship between the subject and object, indicating that the object represents the point with the greatest elevation or altitude relative to its surroundings.",
      "disambiguation_index": 0
    },
    "Predicate-country": {
      "label": "country\u207b\u00b9()",
      "description": "The predicate 'country\u207b\u00b9()' establishes a relationship between two entities where one entity (the subject) has its geographical or political boundaries defined by another entity (the object).",
      "disambiguation_index": 0
    },
    "Predicate-continent": {
      "label": "continent()",
      "description": "The predicate 'continent()' indicates a spatial relationship between the subject and object, where the subject represents a geographic entity (e.g., country, city, etc.) that is located on or within the continent specified by the object. The predicate establishes an association between the two entities, conveying information about their geographical context.",
      "disambiguation_index": 0
    },
    "Predicate-presenter": {
      "label": "presenter",
      "description": "The predicate 'presenter' indicates a relationship where the subject (z) facilitates or introduces the object (x), often in an official capacity such as hosting a show, event, or ceremony. The subject's role is to bring attention and visibility to the object, which can be a person, idea, product, or concept.",
      "disambiguation_index": 0
    },
    "Predicate-participant": {
      "label": "participant",
      "description": "A predicate indicating that the subject (z) has a role or involvement in an event or situation related to the object (w).",
      "disambiguation_index": 0
    },
    "Predicate-occupation": {
      "label": "occupation",
      "description": "The predicate 'occupation' represents the type of work or activity that a subject (e.g. person w) engages in to earn their living and fulfill social roles, connecting them with an object (e.g. profession y).",
      "disambiguation_index": 0
    },
    "Predicate-select": {
      "label": "select",
      "description": "To choose or pick out a specific subset of entities or options from a larger set, often based on certain criteria or conditions.",
      "disambiguation_index": 0
    },
    "Predicate-summarize": {
      "label": "summarize",
      "description": "To condense and convey the essential information of a subject into a concise form that can be represented by an object.",
      "disambiguation_index": 0
    },
    "Predicate-is_capable_of": {
      "label": "is capable of",
      "description": "The predicate 'is capable of' indicates that the subject has a specific ability or potential to perform an action or achieve a certain outcome, as described by the object. It suggests a relationship between the subject and the object where the subject possesses the necessary skills, knowledge, or resources to accomplish something.",
      "disambiguation_index": 0
    },
    "Predicate-induces": {
      "label": "induces",
      "description": "The predicate 'induces' represents a causal relationship between its subject and object. It implies that the subject has led to or caused the existence of the object, often through some process or mechanism.",
      "disambiguation_index": 0
    },
    "Predicate-assesses": {
      "label": "assesses",
      "description": "To assess means to evaluate or judge something based on certain criteria, standards, or expectations. The predicate 'assesses' connects the subject (an entity that performs an evaluation) with the object (the thing being evaluated), indicating a process of examination and judgment.",
      "disambiguation_index": 0
    },
    "Predicate-is_a_relevant_query_if_it_has_an_answer_present_in_the_test_set_and_previously_filtered_out_queries_that_can_be_answered_from_the_training_set": {
      "label": "is a relevant query if it has an answer present in the test set and previously filtered out queries that can be answered from the training set",
      "description": "This predicate establishes a connection between 'queries' (the subject) and 'test set' (the object), indicating that relevant queries are those whose answers can be found in the test set, after filtering out potential duplicates from the training set. The predicate highlights the relationship between query relevance and answer presence within specific datasets.",
      "disambiguation_index": 0
    },
    "Predicate-lacks": {
      "label": "lacks",
      "description": "The predicate 'lacks' indicates a state or condition where something (the subject) does not possess or have the specified object. It implies an absence or deficiency of the object, which can be physical, abstract, or conceptual.",
      "disambiguation_index": 0
    },
    "Predicate-are_generated_by": {
      "label": "are generated by",
      "description": "The predicate 'are generated by' indicates a relationship where the subject (a set or collection) produces or originates from the object. The connection between the subject and object suggests that the subject's existence, properties, or behavior are derived or influenced by the object.",
      "disambiguation_index": 0
    },
    "Predicate-selecting": {
      "label": "selecting",
      "description": "The predicate 'selecting' indicates the act of choosing or picking out one option from multiple possibilities. It implies that the subject has a set of options to consider, and it identifies which specific option(s) are being chosen as the object.",
      "disambiguation_index": 0
    },
    "Predicate-over": {
      "label": "over",
      "description": "The predicate 'over' indicates a spatial or temporal relationship between the subject and object, suggesting that the subject has some kind of dominance, control, or extension over the object. This can be interpreted in various ways depending on the context, such as physical proximity, authority, measurement, or metaphorical superiority.",
      "disambiguation_index": 0
    },
    "Predicate-learned_over": {
      "label": "learned over",
      "description": "The predicate 'learned over' indicates that a subject (e.g., OPRL rules) acquired knowledge or understanding by processing or analyzing an object (e.g., the training data). This implies a causal relationship between the subject and the object, where the subject's learning is directly influenced by its interaction with the object.",
      "disambiguation_index": 0
    },
    "Predicate-exceeds": {
      "label": "exceeds",
      "description": "The predicate 'exceeds' indicates a relationship where the subject has surpassed or gone beyond what is expected, required, or typical of the object. It implies that the subject's value, quality, or performance exceeds the standard, norm, or benchmark represented by the object.",
      "disambiguation_index": 0
    },
    "Predicate-will_be_treated_as": {
      "label": "will be treated as",
      "description": "The predicate 'will be treated as' indicates a transformation or reinterpretation process that connects the subject to the object. It suggests that the subject will have its inherent characteristics, properties, or nature altered or redefined according to the standards or criteria specified by the object. This connection implies a change in perspective, classification, or evaluation of the subject.",
      "disambiguation_index": 0
    },
    "Predicate-are_incorrectly_punished_by": {
      "label": "are incorrectly punished by",
      "description": "The predicate 'are incorrectly punished by' indicates a relationship where the subject (a measure or metric) suffers from an unfair consequence or penalty due to some inherent characteristic or property, which is described in the object. This connection implies that there is a mismatch between what should be expected and what actually occurs.",
      "disambiguation_index": 0
    },
    "Predicate-has_all_missing_facts_present_in": {
      "label": "has all missing facts present in",
      "description": "This predicate indicates that the subject and object share a commonality of having all missing facts accounted for or represented. It suggests a state where both entities have a complete picture, with no gaps in their respective knowledge bases.",
      "disambiguation_index": 0
    },
    "Predicate-has_very_close_to_100_precision_and_excellent_recall": {
      "label": "has very close to 100% precision and excellent recall",
      "description": "The predicate indicates that a system or model accurately identifies instances of a specific concept (e.g., synthetic Poker hands), with near-perfect precision and recall, demonstrating exceptional performance on a given test set.",
      "disambiguation_index": 0
    },
    "Predicate-means": {
      "label": "means",
      "description": "Indicates a relationship of equivalence or correspondence between two concepts. The subject represents a characteristic, quality, or attribute that corresponds to or implies the object.",
      "disambiguation_index": 0
    },
    "Predicate-ask_questions_for_which_the_answer_facts_are_missing_from_the_training_set": {
      "label": "ask questions for which the answer facts are missing from the training set",
      "description": "This predicate describes a relationship between the subject and object where the subject (e.g., queries or inquiries) seeks answers that do not exist in the available training dataset. The object, typically referring to a data source or repository, does not contain facts that can answer these questions.",
      "disambiguation_index": 0
    },
    "Predicate-sensitivity_is_considered_for": {
      "label": "sensitivity is considered for",
      "description": "This predicate indicates that the consideration or evaluation of sensitivity is directed towards a specific context, entity, or aspect (the object), with respect to which the subject's properties or characteristics are being assessed.",
      "disambiguation_index": 0
    },
    "Predicate-has_the_expected_behavior_of": {
      "label": "has the expected behavior of",
      "description": "This predicate indicates that there exists a relationship between the subject and object such that the subject's behavior or characteristics align with what would be expected based on its properties, attributes, or context. The connection implies a sense of conformity to norms, standards, or patterns.",
      "disambiguation_index": 0
    },
    "Predicate-increase": {
      "label": "increase",
      "description": "To increase means to cause the magnitude or amount of something (the object) to grow or expand in a positive direction. This predicate indicates an upward trend or growth from the subject, resulting in a greater quantity, quality, or intensity.",
      "disambiguation_index": 0
    },
    "Predicate-repeated": {
      "label": "repeated",
      "description": "The predicate 'repeated' indicates that the subject has performed or carried out an action multiple times with respect to the object. It implies a sense of iteration or duplication in relation to the object, suggesting that the subject's actions have been done more than once.",
      "disambiguation_index": 0
    },
    "Predicate-compare": {
      "label": "compare",
      "description": "To compare means to examine and evaluate the similarities or differences between two or more entities, concepts, or ideas. The predicate 'compare' establishes a relationship of equivalence, distinction, or ranking between its subject and object, highlighting their commonalities or disparities.",
      "disambiguation_index": 0
    },
    "Predicate-with": {
      "label": "with",
      "description": "The predicate 'with' indicates a relationship of association or accompaniment between the subject and object. It suggests that the subject has some connection to, relies on, or uses the object in order to achieve its purpose or function.",
      "disambiguation_index": 0
    },
    "Predicate-compare_with": {
      "label": "compare with",
      "description": "The predicate 'compare with' indicates a relationship where the subject (e.g., OPRL queries) is evaluated or assessed against another entity (the object, e.g., state-of-the-art rule-based link predictor), typically to identify similarities, differences, or equivalencies between them.",
      "disambiguation_index": 0
    },
    "Predicate-translate": {
      "label": "translate",
      "description": "To convert or render a piece of text from one language to another, often preserving its original meaning and context.",
      "disambiguation_index": 0
    },
    "Predicate-aggregate": {
      "label": "aggregate",
      "description": "The 'aggregate' predicate indicates that the subject (in this case, high-performing rules) collects or summarizes information related to the object (about a target predicate), potentially providing an overview or summary of the relationships between them.",
      "disambiguation_index": 0
    },
    "Predicate-is_not_compatible_with": {
      "label": "is not compatible with",
      "description": "Indicates a lack of suitability or harmony between two entities. The subject and object are mutually exclusive in terms of their purpose, function, or nature.",
      "disambiguation_index": 0
    },
    "Predicate-changed": {
      "label": "changed",
      "description": "The predicate 'changed' indicates a transformation or alteration of the object by the subject. It suggests that the subject has undergone some kind of modification, adjustment, or revision to achieve the state described in the object.",
      "disambiguation_index": 0
    },
    "Predicate-call": {
      "label": "call",
      "description": "The predicate 'call' represents an action of contacting or summoning something (e.g. a person, place, thing) to initiate communication, attention, or interaction.",
      "disambiguation_index": 0
    },
    "Predicate-used": {
      "label": "used",
      "description": "The predicate 'used' indicates that the subject has employed or utilized something (the object), often implying a sense of purpose, intention, or practical application.",
      "disambiguation_index": 0
    },
    "Predicate-generate_queries_for": {
      "label": "generate queries for",
      "description": "To create or formulate questions related to a specific topic, activity, or process.",
      "disambiguation_index": 0
    },
    "Predicate-vary": {
      "label": "vary",
      "description": "The predicate 'vary' indicates a change or fluctuation of some quantity or value over a specified range, often with specific constraints such as increments or decrements. It suggests that the subject has different values or states at different points in time or under varying conditions.",
      "disambiguation_index": 0
    },
    "Predicate-get": {
      "label": "get",
      "description": "The predicate 'get' indicates that the subject has acquired or obtained something, which can be an attribute, value, rate, or measurement. It suggests a sense of attainment or possession, connecting the subject to the object by implying a state of having or experiencing it.",
      "disambiguation_index": 0
    },
    "Predicate-varies": {
      "label": "varies",
      "description": "The predicate 'varies' indicates a relationship between the subject and object where the subject exhibits different values or ranges of values, often with some degree of change or fluctuation. The object typically specifies the scope or extent of this variation.",
      "disambiguation_index": 0
    },
    "Predicate-outperforms_RLvLR_on_query_generation_by_30": {
      "label": "outperforms RLvLR* on query generation by 30%",
      "description": "Indicates that the subject's performance exceeds or surpasses a baseline (RLvLR*) by a specified percentage (in this case, 30%) on query generation tasks.",
      "disambiguation_index": 0
    },
    "Predicate-is_focused_on": {
      "label": "is focused on",
      "description": "Indicates that the subject has its primary attention or emphasis directed towards the object. This predicate suggests a sense of concentration, prioritization, or specialization, implying that the subject is primarily concerned with or centered around the object.",
      "disambiguation_index": 0
    },
    "Predicate-are_less_expressive_than": {
      "label": "are less expressive than",
      "description": "This predicate indicates a comparison between two entities that have different levels of expressiveness. The subject entity (e.g., Closed rules) has less expressive capabilities compared to the object entity (e.g., OP rule).",
      "disambiguation_index": 0
    },
    "Predicate-aim_to_generate": {
      "label": "aim to generate",
      "description": "To aim to generate means that the subject intends or strives to produce a specific type of content or outcome (the object), often with a goal of creating something new, innovative, or original. This predicate indicates an intentional effort by the subject to bring forth or create the specified output.",
      "disambiguation_index": 0
    },
    "Predicate-outline": {
      "label": "outline",
      "description": "To outline means to present a concise and structured overview of something, typically highlighting key points or main ideas. The predicate 'outline' connects the subject (the entity providing the overview) with the object (the content being summarized), indicating that the subject has created a clear and organized representation of the object.",
      "disambiguation_index": 0
    },
    "Predicate-is_unaware_of": {
      "label": "is unaware of",
      "description": "The predicate 'is unaware of' indicates a lack of knowledge or understanding about something. It suggests that the subject has no conscious awareness or recognition of the object, implying a state of ignorance or obliviousness.",
      "disambiguation_index": 0
    },
    "Predicate-filters": {
      "label": "filters",
      "description": "The predicate 'filters' indicates that the subject (in this case, CHAI) categorizes or organizes information into a specific category or set of categories represented by the object (fact).",
      "disambiguation_index": 0
    },
    "Predicate-supplies": {
      "label": "supplies",
      "description": "The predicate 'supplies' indicates that the subject provides or offers something to fulfill a need or requirement, which is described by the object. In general, it implies a relationship of provision, support, or availability between the subject and the object.",
      "disambiguation_index": 0
    },
    "Predicate-filters_facts_before_supplying_them_to_a_link_predictor": {
      "label": "filters facts before supplying them to a link predictor",
      "description": "This predicate describes an entity that processes and refines factual information prior to providing it as input for predicting links between entities.",
      "disambiguation_index": 0
    },
    "Predicate-does_not_generate_queries_as": {
      "label": "does not generate queries as",
      "description": "This predicate indicates that there is no relationship or correspondence between the subject and object. The subject does not produce or formulate questions in a manner similar to what is represented by the object, which can be an ontology, language, or query system.",
      "disambiguation_index": 0
    },
    "Predicate-proposed": {
      "label": "proposed",
      "description": "To propose something means to suggest or put forward an idea, concept, plan, or solution as a potential option for consideration. The predicate 'proposed' indicates that the subject has presented or offered the object as a possible approach, method, or proposal.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_to_generate": {
      "label": "can be used to generate",
      "description": "This predicate indicates that a subject has the capability or potentiality to produce or create an object. It implies a functional relationship between the subject and the object, suggesting that the subject can be employed or utilized as a means of generating something.",
      "disambiguation_index": 0
    },
    "Predicate-fed_to": {
      "label": "fed to",
      "description": "The predicate 'fed to' indicates a relationship where the subject provides or supplies information, data, or resources to the object. This connection implies that the subject has generated, processed, or prepared something for consumption by the object.",
      "disambiguation_index": 0
    },
    "Predicate-enabling": {
      "label": "enabling",
      "description": "The predicate 'enabling' indicates that the subject (queries) facilitates or makes possible the existence of the object (a fully automated framework for KG completion), allowing it to function, operate, or be effective. In general, this predicate describes a relationship where the subject provides the necessary conditions, resources, or support for the object's purpose or functionality.",
      "disambiguation_index": 0
    },
    "Predicate-could_be_fed_to": {
      "label": "could be fed to",
      "description": "Indicates that something (typically a set of data or information) can be processed by another entity (such as an algorithm, system, or tool), resulting in some kind of analysis, transformation, or utilization.",
      "disambiguation_index": 0
    },
    "Predicate-introducing_the_first_work_on": {
      "label": "introducing the first work on",
      "description": "This predicate indicates that a subject entity is presenting or publishing its initial contribution to a specific domain or field of study, as represented by the object. The introduction marks a significant milestone in the development and sharing of knowledge within this area.",
      "disambiguation_index": 0
    },
    "Predicate-show_that": {
      "label": "show that",
      "description": "To demonstrate or prove the existence of something by providing evidence or empirical support. The predicate 'show that' indicates a causal relationship between the subject and object, where the subject (typically an experiment, study, or investigation) provides proof or demonstration for the object (a claim, hypothesis, or conclusion).",
      "disambiguation_index": 0
    },
    "Predicate-demonstrate_the_usefulness_of": {
      "label": "demonstrate the usefulness of",
      "description": "To indicate that the subject has shown or proven the value or effectiveness of something (the object), often through experimentation, testing, or evaluation.",
      "disambiguation_index": 0
    },
    "Predicate-apply_to": {
      "label": "apply to",
      "description": "The predicate 'apply to' indicates a relationship where the subject (a set of rules or criteria) has relevance or validity for the object (one or more entities, concepts, or systems). This connection suggests that the subject's characteristics, properties, or principles are applicable or suitable for the object in some context.",
      "disambiguation_index": 0
    },
    "Predicate-remain": {
      "label": "remain",
      "description": "The predicate 'remain' indicates that a state or condition persists over time, often implying continuity or stability. It suggests that something continues to exist, be present, or have an effect despite potential changes or challenges.",
      "disambiguation_index": 0
    },
    "Predicate-extend_to_learn": {
      "label": "extend to learn",
      "description": "The predicate 'extend to learn' indicates that the subject (a learning system or agent) expands its knowledge or capabilities by incorporating new information, concepts, or rules with more complexity. This process enables the subject to better understand and interact with a given domain or environment.",
      "disambiguation_index": 0
    },
    "Predicate-learn_rules_with": {
      "label": "learn rules with",
      "description": "The predicate 'learn rules with' indicates a relationship where the subject (a learner or system) acquires and internalizes specific guidelines or principles from the object, which represents the source of these rules. This connection implies that the subject is actively engaging with the object to absorb and understand the underlying patterns or structures.",
      "disambiguation_index": 0
    },
    "Predicate-plan_to_extend": {
      "label": "plan to extend",
      "description": "To intend or propose to enlarge, expand, or increase something's scope, scale, or duration. This predicate indicates a deliberate and intentional action of expanding or growing towards a specific goal or objective.",
      "disambiguation_index": 0
    },
    "Predicate-pair_with": {
      "label": "pair with",
      "description": "To pair with indicates a relationship where two entities or concepts are matched together to form a cohesive unit. This predicate suggests an association between the subject and object, implying that they share common characteristics, properties, or functions.",
      "disambiguation_index": 0
    },
    "Predicate-plan_to_form_a_unified_framework_for_fully_automated_KG_completion": {
      "label": "plan to form a unified framework for fully automated KG completion",
      "description": "To intend or propose the creation of a comprehensive and integrated system that enables automatic knowledge graph (KG) completion, with the goal of streamlining and optimizing the process.",
      "disambiguation_index": 0
    },
    "Predicate-trial": {
      "label": "trial",
      "description": "A predicate indicating that the subject is undergoing or has undergone evaluation, testing, or examination to determine its validity, quality, or effectiveness. The object represents a context, process, or framework within which this evaluation takes place.",
      "disambiguation_index": 0
    },
    "Predicate-enables": {
      "label": "enables",
      "description": "The predicate 'enables' indicates that the subject has the capability or authority to facilitate or make possible the occurrence or achievement of the object. It implies a causal relationship where the subject's presence, action, or existence allows for or enables the object to happen, exist, or be accomplished.",
      "disambiguation_index": 0
    },
    "Predicate-learn": {
      "label": "learn",
      "description": "To acquire or gain knowledge, understanding, or skill through study, instruction, or experience. The subject engages with the object to absorb new information, develop an ability, or improve their comprehension.",
      "disambiguation_index": 0
    },
    "Predicate-is_effective": {
      "label": "is effective",
      "description": "Indicates that an entity or approach has achieved its intended purpose or goal, resulting in successful outcomes. The predicate 'is effective' establishes a connection between the subject and object by suggesting that the subject is capable of producing the desired outcome or achieving the stated objective.",
      "disambiguation_index": 0
    },
    "Predicate-evaluates_using_adaptations_of_Freebase_YAGO2_Wikidata_and_a_synthetic_Poker_KG": {
      "label": "evaluates using adaptations of Freebase, YAGO2, Wikidata, and a synthetic Poker KG",
      "description": "The predicate 'evaluates using adaptations' indicates that the subject (a knowledge representation language or system) assesses its performance or quality by leveraging various data sources and knowledge graphs, including Freebase, YAGO2, Wikidata, and a synthetic Poker KG. This adaptation process enables the evaluation of the subject's capabilities in processing and reasoning with diverse types of knowledge.",
      "disambiguation_index": 0
    },
    "Predicate-relates_to": {
      "label": "relates to",
      "description": "Indicates a connection between an entity or concept (subject) and a broader context, issue, or challenge that it addresses or has implications for (object).",
      "disambiguation_index": 0
    },
    "Predicate-evaluates_using_adaptations_of": {
      "label": "evaluates using adaptations of",
      "description": "The predicate 'evaluates using adaptations of' indicates that the subject (an entity or system) assesses or judges its object by applying modifications or transformations to existing methods, approaches, or frameworks. This connection suggests a process of refinement, extension, or innovation, where the subject builds upon previous knowledge or practices to arrive at an evaluation.",
      "disambiguation_index": 0
    },
    "Predicate-generates_queries": {
      "label": "generates queries",
      "description": "The predicate 'generates queries' indicates that the subject (a system or process) produces a set of questions or inquiries related to the object. This connection implies that the subject has generated these queries based on its understanding, analysis, or processing of the object's information.",
      "disambiguation_index": 0
    },
    "Predicate-generates_queries_from": {
      "label": "generates queries from",
      "description": "The predicate 'generates queries from' indicates that the subject (a knowledge graph or a database) produces questions or inquiries based on the object (which can be an example, instance, concept, etc.). This connection represents the process of extracting relevant information and formulating it into query-like structures.",
      "disambiguation_index": 0
    },
    "Predicate-used_in_experiments_for_evaluating": {
      "label": "used in experiments for evaluating",
      "description": "Indicates that a specific method or technique (subject) was employed to assess or measure the performance of something else (object), typically with the goal of drawing conclusions about its effectiveness, accuracy, or quality.",
      "disambiguation_index": 0
    },
    "Predicate-can_now_mine": {
      "label": "can now mine",
      "description": "The predicate 'can now mine' indicates that the subject has acquired a capability to extract or derive valuable information, insights, or patterns from the object. The object typically represents a knowledge graph (KG) or a dataset containing structured data. In this context, the subject is able to utilize the object's contents to discover new relationships, rules, or measurable qualities.",
      "disambiguation_index": 0
    },
    "Predicate-used_to_evaluate_the_performance": {
      "label": "used to evaluate the performance",
      "description": "This predicate indicates that the subject (a set of rules or models) serves as a means to assess and measure the quality or effectiveness of something related to the object (in this case, Poker KG). The evaluation can be based on various criteria such as accuracy, precision, recall, or other performance metrics.",
      "disambiguation_index": 0
    },
    "Predicate-generate_relevant_queries": {
      "label": "generate relevant queries",
      "description": "To generate relevant queries means to produce a set of questions or inquiries that are pertinent and meaningful with respect to a given context, often involving knowledge graphs (KGs), databases, or other information sources. This predicate connects the subject (an entity capable of generating queries) to the object (the facts or answers being sought), indicating an action that facilitates discovery, exploration, or retrieval of specific information.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used": {
      "label": "can be used",
      "description": "Indicates that a subject has an application or purpose in relation to achieving or accomplishing something described by the object. The predicate 'can be used' suggests a functional connection between the subject and object, implying that the subject can serve as a means to achieve the outcome or result described by the object.",
      "disambiguation_index": 0
    },
    "Predicate-generate_relevant_queries_for_knowledge_graph_completion": {
      "label": "generate relevant queries for knowledge graph completion",
      "description": "This predicate connects a process or method (subject) to its outcome of generating relevant questions that facilitate the completion of a knowledge graph. The object represents the resulting answers or facts, which are generated through the queries produced by the subject.",
      "disambiguation_index": 0
    },
    "Predicate-evaluates": {
      "label": "evaluates",
      "description": "To evaluate means to assess or judge the value, quality, or validity of something based on certain criteria. The subject evaluates the object by examining it against specific standards, principles, or expectations, and determining its worthiness, accuracy, or effectiveness.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_(1)": {
      "label": "can be used",
      "description": "Indicates that the subject has a practical application or utility for achieving a specific goal or purpose, as described by the object. The predicate 'can be used' suggests a functional relationship between the subject and object, implying that the subject can be employed to accomplish something beneficial according to the information provided in the object.",
      "disambiguation_index": 1
    },
    "Predicate-evaluated_using": {
      "label": "evaluated using",
      "description": "The predicate 'evaluated using' indicates that a subject's effectiveness or performance was determined through the use of a specific object. It implies a process of assessment, testing, or measurement where the object played a crucial role in evaluating the subject.",
      "disambiguation_index": 0
    },
    "Predicate-proposes_an_approach_for": {
      "label": "proposes an approach for",
      "description": "Indicates that a method or strategy (the subject) offers a solution or methodology (approach) specifically designed for addressing, tackling, or resolving the specified issue or challenge (object).",
      "disambiguation_index": 0
    },
    "Predicate-evaluates_using_adaptations_of_Poker_KG": {
      "label": "evaluates using adaptations of Poker KG",
      "description": "The predicate 'evaluates using adaptations of Poker KG' indicates that a subject (e.g., an ontology or a reasoning system) uses adaptations of the Poker Knowledge Graph to evaluate something, such as rules, concepts, or relationships. This evaluation process involves applying modifications or transformations to the original Poker KG knowledge graph in order to assess its quality, relevance, or consistency with respect to the object being evaluated.",
      "disambiguation_index": 0
    },
    "Predicate-can_generate": {
      "label": "can generate",
      "description": "The predicate 'can generate' indicates that the subject has the ability to produce or create something new from existing information. It implies a creative process where the subject transforms input into an output, which can be in various forms such as text, queries, rules, etc.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_used_to_evaluate": {
      "label": "can be used to evaluate",
      "description": "This predicate indicates that a subject (e.g., OP rules) has an evaluative relationship with an object (e.g., Poker KG), suggesting that the subject can be employed to assess or judge the quality, accuracy, or effectiveness of the object. In general, this connection implies that the subject provides a means for evaluating the properties, characteristics, or performance of the object.",
      "disambiguation_index": 0
    },
    "skos:broader": {
      "label": "has a broader term",
      "description": "The predicate 'has a broader term' indicates that the subject concept is a specific instance or subclass of the object concept. It represents an is-a relationship between the two, where the subject is more specialized than the object.",
      "disambiguation_index": 0
    }
  }
}