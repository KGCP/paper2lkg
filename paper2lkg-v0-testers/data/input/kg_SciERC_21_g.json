{
  "iri": "Paper-21",
  "title": "N06-1037",
  "authors": [],
  "keywords": [],
  "sections": [
    {
      "iri": "Paper-21-Section-1",
      "subtitle": "Abstract",
      "paragraphs": [
        {
          "iri": "Paper-21-Section-1-Paragraph-1",
          "sentences": [
            {
              "iri": "Paper-21-Section-1-Paragraph-1-Sentence-1",
              "text": "This paper proposes to use a convolution kernel over parse trees to model syntactic structure information for relation extraction ."
            },
            {
              "iri": "Paper-21-Section-1-Paragraph-1-Sentence-2",
              "text": "Our study reveals that the syntactic structure features embedded in a parse tree are very effective for relation extraction and these features can be well captured by the convolution tree kernel ."
            },
            {
              "iri": "Paper-21-Section-1-Paragraph-1-Sentence-3",
              "text": "Evaluation on the ACE 2003 corpus shows that the convolution kernel over parse trees can achieve comparable performance with the previous best-reported feature-based methods on the 24 ACE relation subtypes ."
            },
            {
              "iri": "Paper-21-Section-1-Paragraph-1-Sentence-4",
              "text": "It also shows that our method significantly outperforms the previous two dependency tree kernels on the 5 ACE relation major types ."
            }
          ]
        }
      ]
    }
  ],
  "times": [
    6.508827209472656e-05,
    9.903517961502075,
    19.557821035385132,
    25.516133069992065,
    0.033612966537475586,
    0.0001780986785888672,
    0.00019288063049316406,
    28.508045196533203,
    38.91147708892822,
    4.765663146972656,
    0.055770158767700195,
    0.009604215621948242,
    0.00017523765563964844,
    21.731287240982056,
    0.0012211799621582031,
    0.03428506851196289,
    0.0009560585021972656,
    3.189197063446045,
    0.7566499710083008,
    1.1207220554351807,
    69.73074722290039,
    5.375147104263306,
    55.83775734901428,
    3.047740936279297,
    0.001798868179321289,
    0.008476972579956055
  ],
  "nodes": {
    "Entity-the_convolution_kernel_over_parse_tree": {
      "node_id": "the_convolution_kernel_over_parse_tree",
      "disambiguation_index": 0,
      "label": "the convolution kernel over parse trees",
      "aliases": [
        "the convolution kernel over parse trees"
      ],
      "types": [
        "method",
        "kernel"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The convolution kernel over parse trees is a method used to model syntactic structure information for relation extraction, effectively capturing features from parse trees to improve performance in identifying relationships in text.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "the convolution kernel over parse trees",
          "local_types": [
            "method",
            "kernel"
          ],
          "iri": "Entity-the_convolution_kernel_over_parse_tree-Mention-1"
        }
      ],
      "relevance": 0.857421875
    },
    "Entity-this_paper": {
      "node_id": "this_paper",
      "disambiguation_index": 0,
      "label": "This paper",
      "aliases": [
        "This paper"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "This paper presents a research study that introduces a convolution kernel applied to parse trees to effectively model syntactic structure information for the task of relation extraction.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-1",
          "local_name": "This paper",
          "local_types": [
            "research"
          ],
          "iri": "Entity-this_paper-Mention-1"
        }
      ],
      "relevance": 0.83251953125
    },
    "Entity-our_study": {
      "node_id": "our_study",
      "disambiguation_index": 0,
      "label": "Our study",
      "aliases": [
        "Our study"
      ],
      "types": [
        "research"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Our study refers to the research conducted on the effectiveness of syntactic structure features embedded in parse trees for relation extraction, demonstrating that these features can be effectively captured by a convolution tree kernel.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-2",
          "local_name": "Our study",
          "local_types": [
            "research"
          ],
          "iri": "Entity-our_study-Mention-1"
        }
      ],
      "relevance": 0.830078125
    },
    "Entity-convolution_tree_kernel": {
      "node_id": "convolution_tree_kernel",
      "disambiguation_index": 0,
      "label": "convolution tree kernel",
      "aliases": [
        "convolution tree kernel",
        "the convolution tree kernel"
      ],
      "types": [
        "algorithm",
        "kernel",
        "method",
        "machine learning model"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "The convolution tree kernel is a machine learning method that utilizes the hierarchical structure of parse trees to effectively capture and analyze syntactic features for various tasks, such as relation extraction.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-2",
          "local_name": "convolution tree kernel",
          "local_types": [
            "algorithm",
            "method",
            "machine learning model"
          ],
          "iri": "Entity-convolution_tree_kernel-Mention-1"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-2",
          "local_name": "the convolution tree kernel",
          "local_types": [
            "method",
            "kernel"
          ],
          "iri": "Entity-convolution_tree_kernel-Mention-2"
        }
      ],
      "relevance": 0.82080078125
    },
    "Entity-the_previous_two_dependency_tree_kernel": {
      "node_id": "the_previous_two_dependency_tree_kernel",
      "disambiguation_index": 0,
      "label": "the previous two dependency tree kernels",
      "aliases": [
        "the previous two dependency tree kernels"
      ],
      "types": [
        "dependency tree kernel"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The previous two dependency tree kernels refer to two specific kernel methods used for extracting syntactic features from dependency parse trees in the context of relation extraction tasks, which the paper claims to outperform with a new convolution kernel approach.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-4",
          "local_name": "the previous two dependency tree kernels",
          "local_types": [
            "dependency tree kernel"
          ],
          "iri": "Entity-the_previous_two_dependency_tree_kernel-Mention-1"
        }
      ],
      "relevance": 0.78857421875
    },
    "Entity-our_method": {
      "node_id": "our_method",
      "disambiguation_index": 0,
      "label": "our method",
      "aliases": [
        "our method"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "Our method refers to the convolution kernel over parse trees used for modeling syntactic structure information in relation extraction, which has been shown to significantly outperform previous dependency tree kernels.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-4",
          "local_name": "our method",
          "local_types": [
            "method"
          ],
          "iri": "Entity-our_method-Mention-1"
        }
      ],
      "relevance": 0.775390625
    },
    "Entity-method": {
      "node_id": "method",
      "disambiguation_index": 0,
      "label": "method",
      "aliases": [
        "method"
      ],
      "types": [
        "research method",
        "technique"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The 'method' refers to the convolution kernel over parse trees, which is a research technique used to model syntactic structure information for relation extraction.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-4",
          "local_name": "method",
          "local_types": [
            "research method",
            "technique"
          ],
          "iri": "Entity-method-Mention-1"
        }
      ],
      "relevance": 0.77197265625
    },
    "Entity-study": {
      "node_id": "study",
      "disambiguation_index": 0,
      "label": "study",
      "aliases": [
        "study"
      ],
      "types": [
        "research program",
        "project"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The study refers to a research program that investigates the effectiveness of syntactic structure features in parse trees for relation extraction using a convolution tree kernel.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-2",
          "local_name": "study",
          "local_types": [
            "research program",
            "project"
          ],
          "iri": "Entity-study-Mention-1"
        }
      ],
      "relevance": 0.755859375
    },
    "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree": {
      "node_id": "the_syntactic_structure_feature_embedded_in_a_parse_tree",
      "disambiguation_index": 0,
      "label": "the syntactic structure features embedded in a parse tree",
      "aliases": [
        "the syntactic structure features embedded in a parse tree"
      ],
      "types": [
        "feature",
        "syntactic structure",
        "parse tree"
      ],
      "node_type": "other",
      "LLM_familiarity": true,
      "description": "The syntactic structure features embedded in a parse tree refer to the specific linguistic characteristics and relationships represented within a parse tree that are utilized to enhance the performance of relation extraction tasks in natural language processing.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-2",
          "local_name": "the syntactic structure features embedded in a parse tree",
          "local_types": [
            "feature",
            "syntactic structure",
            "parse tree"
          ],
          "iri": "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree-Mention-1"
        }
      ],
      "relevance": 0.7216796875
    },
    "Entity-the_previous_best-reported_feature-based_method": {
      "node_id": "the_previous_best-reported_feature-based_method",
      "disambiguation_index": 0,
      "label": "the previous best-reported feature-based methods",
      "aliases": [
        "the previous best-reported feature-based methods"
      ],
      "types": [
        "method"
      ],
      "node_type": "other",
      "LLM_familiarity": false,
      "description": "The previous best-reported feature-based methods refer to the most effective techniques previously documented for relation extraction that utilize feature-based approaches, which the proposed convolution kernel over parse trees aims to match or exceed in performance.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "the previous best-reported feature-based methods",
          "local_types": [
            "method"
          ],
          "iri": "Entity-the_previous_best-reported_feature-based_method-Mention-1"
        }
      ],
      "relevance": 0.71044921875
    },
    "Entity-syntactic_structure_information": {
      "node_id": "syntactic_structure_information",
      "disambiguation_index": 0,
      "label": "syntactic structure information",
      "aliases": [
        "syntactic structure information"
      ],
      "types": [
        "linguistic feature",
        "structure",
        "information type",
        "information",
        "syntactic structure"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Syntactic structure information refers to the features derived from the arrangement and relationships of words in parse trees, which are utilized to enhance the performance of relation extraction in natural language processing.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-1",
          "local_name": "syntactic structure information",
          "local_types": [
            "linguistic feature",
            "structure",
            "information type",
            "information",
            "syntactic structure"
          ],
          "iri": "Entity-syntactic_structure_information-Mention-1"
        }
      ],
      "relevance": 0.689453125
    },
    "Entity-syntactic_structure_feature": {
      "node_id": "syntactic_structure_feature",
      "disambiguation_index": 0,
      "label": "syntactic structure features",
      "aliases": [
        "syntactic structure features"
      ],
      "types": [
        "linguistic feature",
        "data characteristic"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "Syntactic structure features refer to the characteristics of the arrangement and relationships of words within a parse tree that are utilized to enhance the effectiveness of relation extraction in natural language processing.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-2",
          "local_name": "syntactic structure features",
          "local_types": [
            "linguistic feature",
            "data characteristic"
          ],
          "iri": "Entity-syntactic_structure_feature-Mention-1"
        }
      ],
      "relevance": 0.67138671875
    },
    "Entity-convolution_kernel": {
      "node_id": "convolution_kernel",
      "disambiguation_index": 0,
      "label": "convolution kernel",
      "aliases": [
        "convolution kernel"
      ],
      "types": [
        "algorithm",
        "kernel",
        "method",
        "mathematical concept"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A convolution kernel is a mathematical function used in machine learning and pattern recognition that computes the similarity between data structures, often applied in the context of convolutional operations on various types of data.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-1",
          "local_name": "convolution kernel",
          "local_types": [
            "algorithm",
            "kernel",
            "method",
            "mathematical concept"
          ],
          "iri": "Entity-convolution_kernel-Mention-1"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "convolution kernel",
          "local_types": [
            "algorithm",
            "method"
          ],
          "iri": "Entity-convolution_kernel-Mention-2"
        }
      ],
      "relevance": 0.66552734375
    },
    "Entity-5_ace_relation_major_type": {
      "node_id": "5_ace_relation_major_type",
      "disambiguation_index": 0,
      "label": "5 ACE relation major types",
      "aliases": [
        "ACE relation major types",
        "5 ACE relation major types",
        "the 5 ACE relation major types"
      ],
      "types": [
        "data type",
        "relation type",
        "ACE",
        "relation major type",
        "classification"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "The '5 ACE relation major types' refers to a classification of primary relation types used in the Automatic Content Extraction (ACE) program, which are evaluated in the context of relation extraction methods.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-4",
          "local_name": "5 ACE relation major types",
          "local_types": [
            "ACE",
            "data type",
            "relation type",
            "classification"
          ],
          "iri": "Entity-5_ace_relation_major_type-Mention-1"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-4",
          "local_name": "ACE relation major types",
          "local_types": [
            "relation type",
            "relation major type",
            "classification"
          ],
          "iri": "Entity-5_ace_relation_major_type-Mention-2"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-4",
          "local_name": "the 5 ACE relation major types",
          "local_types": [
            "relation type",
            "ACE"
          ],
          "iri": "Entity-5_ace_relation_major_type-Mention-3"
        }
      ],
      "relevance": 0.654296875
    },
    "Entity-parse_tree": {
      "node_id": "parse_tree",
      "disambiguation_index": 0,
      "label": "parse trees",
      "aliases": [
        "parse tree",
        "parse trees"
      ],
      "types": [
        "data structure",
        "tree",
        "linguistic structure",
        "linguistic representation"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Parse trees are hierarchical data structures that represent the syntactic structure of sentences, illustrating the grammatical relationships between words and phrases.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-1",
          "local_name": "parse trees",
          "local_types": [
            "data structure",
            "tree",
            "linguistic structure",
            "linguistic representation"
          ],
          "iri": "Entity-parse_tree-Mention-1"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-2",
          "local_name": "parse tree",
          "local_types": [
            "data structure",
            "linguistic representation"
          ],
          "iri": "Entity-parse_tree-Mention-2"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "parse trees",
          "local_types": [
            "data structure",
            "linguistic structure"
          ],
          "iri": "Entity-parse_tree-Mention-3"
        }
      ],
      "relevance": 0.65283203125
    },
    "Entity-ace_relation_subtypes": {
      "node_id": "ace_relation_subtypes",
      "disambiguation_index": 0,
      "label": "ACE relation subtypes",
      "aliases": [
        "the 24 ACE relation subtypes",
        "ACE relation subtypes",
        "24 ACE relation subtypes"
      ],
      "types": [
        "relation subtype",
        "ACE",
        "relation type",
        "classification"
      ],
      "node_type": "general term",
      "LLM_familiarity": false,
      "description": "ACE relation subtypes refer to the 24 specific categories of relationships defined in the ACE 2003 corpus, which are used for evaluating relation extraction methods.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "ACE relation subtypes",
          "local_types": [
            "relation subtype",
            "relation type",
            "classification"
          ],
          "iri": "Entity-ace_relation_subtypes-Mention-1"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "24 ACE relation subtypes",
          "local_types": [
            "relation subtype",
            "ACE"
          ],
          "iri": "Entity-ace_relation_subtypes-Mention-2"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "the 24 ACE relation subtypes",
          "local_types": [
            "relation subtype"
          ],
          "iri": "Entity-ace_relation_subtypes-Mention-3"
        }
      ],
      "relevance": 0.6435546875
    },
    "Entity-dependency_tree_kernel": {
      "node_id": "dependency_tree_kernel",
      "disambiguation_index": 0,
      "label": "dependency tree kernels",
      "aliases": [
        "dependency tree kernels"
      ],
      "types": [
        "algorithm",
        "kernel",
        "method",
        "computational model"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Dependency tree kernels are a class of algorithms used in machine learning that leverage the structure of dependency trees to compute similarity measures for tasks such as natural language processing.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-4",
          "local_name": "dependency tree kernels",
          "local_types": [
            "algorithm",
            "kernel",
            "method",
            "computational model"
          ],
          "iri": "Entity-dependency_tree_kernel-Mention-1"
        }
      ],
      "relevance": 0.642578125
    },
    "Entity-ace": {
      "node_id": "ace",
      "disambiguation_index": 0,
      "label": "ACE",
      "aliases": [
        "ACE"
      ],
      "types": [
        "organization",
        "dataset"
      ],
      "node_type": "named entity",
      "LLM_familiarity": false,
      "description": "ACE refers to the Automatic Content Extraction program, which includes a dataset used for evaluating relation extraction methods, specifically the ACE 2003 corpus that contains various relation subtypes.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-4",
          "local_name": "ACE",
          "local_types": [
            "organization",
            "dataset"
          ],
          "iri": "Entity-ace-Mention-1"
        }
      ],
      "relevance": 0.63525390625
    },
    "Entity-relation_extraction": {
      "node_id": "relation_extraction",
      "disambiguation_index": 0,
      "label": "relation extraction",
      "aliases": [
        "relation extraction"
      ],
      "types": [
        "natural language processing",
        "natural language processing task",
        "extraction",
        "information extraction",
        "task"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Relation extraction is a natural language processing task that involves identifying and classifying relationships between entities in text.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-1",
          "local_name": "relation extraction",
          "local_types": [
            "natural language processing",
            "extraction",
            "natural language processing task",
            "information extraction",
            "task"
          ],
          "iri": "Entity-relation_extraction-Mention-1"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-2",
          "local_name": "relation extraction",
          "local_types": [
            "extraction",
            "information extraction",
            "task",
            "natural language processing task"
          ],
          "iri": "Entity-relation_extraction-Mention-2"
        }
      ],
      "relevance": 0.63427734375
    },
    "Entity-ace_2003": {
      "node_id": "ace_2003",
      "disambiguation_index": 0,
      "label": "ACE 2003",
      "aliases": [
        "ACE 2003",
        "the ACE 2003 corpus",
        "ACE 2003 corpus"
      ],
      "types": [
        "corpus",
        "dataset"
      ],
      "node_type": "named entity",
      "LLM_familiarity": true,
      "description": "ACE 2003 refers to a dataset used for evaluating relation extraction methods, specifically containing annotated data for various relation subtypes.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "ACE 2003",
          "local_types": [
            "corpus",
            "dataset"
          ],
          "iri": "Entity-ace_2003-Mention-1"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "ACE 2003 corpus",
          "local_types": [
            "corpus",
            "dataset"
          ],
          "iri": "Entity-ace_2003-Mention-2"
        },
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "the ACE 2003 corpus",
          "local_types": [
            "corpus"
          ],
          "iri": "Entity-ace_2003-Mention-3"
        }
      ],
      "relevance": 0.6328125
    },
    "Entity-feature-based_method": {
      "node_id": "feature-based_method",
      "disambiguation_index": 0,
      "label": "feature-based methods",
      "aliases": [
        "feature-based methods"
      ],
      "types": [
        "approach",
        "method",
        "feature-based",
        "methodology"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "Feature-based methods are a category of approaches in machine learning and data analysis that utilize specific characteristics or attributes of data to inform models and improve performance.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-3",
          "local_name": "feature-based methods",
          "local_types": [
            "approach",
            "method",
            "feature-based",
            "methodology"
          ],
          "iri": "Entity-feature-based_method-Mention-1"
        }
      ],
      "relevance": 0.5009765625
    },
    "Entity-paper": {
      "node_id": "paper",
      "disambiguation_index": 0,
      "label": "paper",
      "aliases": [
        "paper"
      ],
      "types": [
        "academic work",
        "research document"
      ],
      "node_type": "general term",
      "LLM_familiarity": true,
      "description": "A paper is a written document that presents research findings, theories, or analyses, typically in an academic or scholarly context.",
      "mentions": [
        {
          "reference": "Paper-21-Section-1-Paragraph-1-Sentence-1",
          "local_name": "paper",
          "local_types": [
            "academic work",
            "research document"
          ],
          "iri": "Entity-paper-Mention-1"
        }
      ],
      "relevance": 0.436767578125
    }
  },
  "summary": "This paper proposes to use a convolution kernel over parse trees to model syntactic structure information for relation extraction . Our study reveals that the syntactic structure features embedded in a parse tree are very effective for relation extraction and these features can be well captured by the convolution tree kernel . Evaluation on the ACE 2003 corpus shows that the convolution kernel over parse trees can achieve comparable performance with the previous best-reported feature-based methods on the 24 ACE relation subtypes . It also shows that our method significantly outperforms the previous two dependency tree kernels on the 5 ACE relation major types .",
  "triples": [
    [
      "Entity-this_paper",
      "Predicate-proposes_to_use",
      "Entity-convolution_kernel"
    ],
    [
      "Entity-convolution_kernel",
      "Predicate-over",
      "Entity-parse_tree"
    ],
    [
      "Entity-convolution_kernel",
      "Predicate-to_model",
      "Entity-syntactic_structure_information"
    ],
    [
      "Entity-syntactic_structure_information",
      "Predicate-for",
      "Entity-relation_extraction"
    ],
    [
      "Entity-our_study",
      "Predicate-reveals",
      "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree"
    ],
    [
      "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree",
      "Predicate-are_effective_for",
      "Entity-relation_extraction"
    ],
    [
      "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree",
      "Predicate-can_be_captured_by",
      "Entity-convolution_tree_kernel"
    ],
    [
      "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree",
      "Predicate-can_be_well_captured_by",
      "Entity-convolution_tree_kernel"
    ],
    [
      "Entity-convolution_tree_kernel",
      "Predicate-can_capture",
      "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree"
    ],
    [
      "Entity-ace_2003",
      "Predicate-shows",
      "Entity-the_convolution_kernel_over_parse_tree"
    ],
    [
      "Entity-the_convolution_kernel_over_parse_tree",
      "Predicate-achieves",
      "Entity-the_previous_best-reported_feature-based_method"
    ],
    [
      "Entity-the_previous_best-reported_feature-based_method",
      "Predicate-relates_to",
      "Entity-ace_relation_subtypes"
    ],
    [
      "Entity-our_method",
      "Predicate-outperforms",
      "Entity-the_previous_two_dependency_tree_kernel"
    ],
    [
      "Entity-our_method",
      "Predicate-outperforms",
      "Entity-dependency_tree_kernel"
    ],
    [
      "Entity-our_method",
      "Predicate-outperforms",
      "Entity-5_ace_relation_major_type"
    ],
    [
      "Entity-our_method",
      "Predicate-significantly_outperforms",
      "Entity-the_previous_two_dependency_tree_kernel"
    ],
    [
      "Entity-our_method",
      "Predicate-significantly_outperforms",
      "Entity-5_ace_relation_major_type"
    ],
    [
      "Entity-this_paper",
      "Predicate-introduces",
      "Entity-the_convolution_kernel_over_parse_tree"
    ]
  ],
  "triples_typing": [
    [
      "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree",
      "skos:broader",
      "Entity-parse_tree"
    ],
    [
      "Entity-feature-based_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_previous_best-reported_feature-based_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-our_method",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-dependency_tree_kernel",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree",
      "skos:broader",
      "Entity-syntactic_structure_feature"
    ],
    [
      "Entity-the_previous_two_dependency_tree_kernel",
      "skos:broader",
      "Entity-dependency_tree_kernel"
    ],
    [
      "Entity-ace_relation_subtypes",
      "skos:broader",
      "Entity-ace"
    ],
    [
      "Entity-convolution_kernel",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_convolution_kernel_over_parse_tree",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-syntactic_structure_information",
      "skos:broader",
      "Entity-syntactic_structure_feature"
    ],
    [
      "Entity-convolution_tree_kernel",
      "skos:broader",
      "Entity-method"
    ],
    [
      "Entity-the_syntactic_structure_feature_embedded_in_a_parse_tree",
      "skos:broader",
      "Entity-syntactic_structure_information"
    ],
    [
      "Entity-5_ace_relation_major_type",
      "skos:broader",
      "Entity-ace"
    ]
  ],
  "predicates": {
    "Predicate-proposes_to_use": {
      "label": "proposes to use",
      "description": "The predicate 'proposes to use' indicates a suggestion or recommendation made by the subject regarding the application or implementation of the object. It implies that the subject is advocating for the adoption of the object as a method, tool, or approach in a particular context or for a specific purpose.",
      "disambiguation_index": 0
    },
    "Predicate-over": {
      "label": "over",
      "description": "The predicate 'over' indicates a relationship where the subject is applied to, or operates in relation to, the object, often suggesting a spatial, functional, or conceptual dominance or influence of the subject over the object.",
      "disambiguation_index": 0
    },
    "Predicate-to_model": {
      "label": "to model",
      "description": "The predicate 'to model' indicates the action of representing or simulating a particular concept, system, or phenomenon through a structured framework or mathematical formulation. In this context, the subject is the entity that performs the modeling, while the object is the specific aspect or information that is being represented or analyzed. This relationship highlights the process of abstraction and interpretation, where the subject seeks to capture the essential characteristics of the object in a way that facilitates understanding, prediction, or manipulation.",
      "disambiguation_index": 0
    },
    "Predicate-for": {
      "label": "for",
      "description": "The predicate 'for' indicates a purpose, function, or intended use of the subject in relation to the object. It establishes a connection where the subject serves as a means or resource that facilitates, supports, or is relevant to the object, often implying a beneficial or instrumental relationship.",
      "disambiguation_index": 0
    },
    "Predicate-reveals": {
      "label": "reveals",
      "description": "The predicate 'reveals' serves to indicate that the subject provides or uncovers information, insights, or characteristics about the object. It implies a process of discovery or clarification, where the subject's actions or findings bring to light aspects of the object that may not have been previously understood or visible.",
      "disambiguation_index": 0
    },
    "Predicate-are_effective_for": {
      "label": "are effective for",
      "description": "The predicate 'are effective for' indicates that the subject possesses qualities, characteristics, or capabilities that contribute positively to achieving or facilitating the outcome represented by the object. It suggests a functional relationship where the subject plays a significant role in enhancing, supporting, or improving the processes or results associated with the object.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_captured_by": {
      "label": "can be captured by",
      "description": "The predicate 'can be captured by' indicates a relationship where the subject, which represents a certain concept, feature, or phenomenon, is able to be represented, modeled, or understood through the means of the object. This suggests that the object provides a framework, method, or tool that effectively encapsulates or conveys the essence of the subject, allowing for analysis, interpretation, or application in a specific context.",
      "disambiguation_index": 0
    },
    "Predicate-can_be_well_captured_by": {
      "label": "can be well captured by",
      "description": "The predicate 'can be well captured by' indicates that the subject possesses characteristics or properties that can be effectively represented, modeled, or understood through the object. It suggests a strong correspondence or suitability between the subject and the object, implying that the object provides a reliable framework or method for encapsulating the essential aspects of the subject.",
      "disambiguation_index": 0
    },
    "Predicate-can_capture": {
      "label": "can capture",
      "description": "The predicate 'can capture' indicates the ability of the subject to effectively represent, encompass, or convey the characteristics, properties, or elements described by the object. It suggests a functional relationship where the subject possesses the capability to understand or embody the complexities or nuances inherent in the object.",
      "disambiguation_index": 0
    },
    "Predicate-shows": {
      "label": "shows",
      "description": "The predicate 'shows' indicates a relationship where the subject presents, demonstrates, or reveals information, concepts, or phenomena to the object. It implies that the subject provides evidence or an illustration of the object, making it visible or understandable in some context.",
      "disambiguation_index": 0
    },
    "Predicate-achieves": {
      "label": "achieves",
      "description": "The predicate 'achieves' indicates a successful attainment or realization of a goal, standard, or outcome as represented by the object. It connects the subject, which is typically an entity or method, to the object, which represents the result or benchmark that the subject has reached or surpassed.",
      "disambiguation_index": 0
    },
    "Predicate-relates_to": {
      "label": "relates to",
      "description": "The predicate 'relates to' indicates a connection or association between the subject and the object, suggesting that the subject has a relevant or significant link to the object in terms of context, characteristics, or implications. This relationship can encompass various forms of interaction, influence, or relevance, highlighting how the subject and object are interconnected within a particular domain or topic.",
      "disambiguation_index": 0
    },
    "Predicate-outperforms": {
      "label": "outperforms",
      "description": "The predicate 'outperforms' indicates that the subject demonstrates superior performance or effectiveness compared to the object in a specific context or set of criteria. It establishes a comparative relationship where the subject is evaluated as being better than the object in terms of measurable outcomes, efficiency, or results.",
      "disambiguation_index": 0
    },
    "Predicate-significantly_outperforms": {
      "label": "significantly outperforms",
      "description": "The predicate 'significantly outperforms' indicates a comparative relationship where the subject demonstrates a notably higher level of performance, effectiveness, or efficiency than the object. This suggests that the subject not only exceeds the object in performance metrics but does so to a degree that is substantial and meaningful, implying a clear advantage or superiority in the context being discussed.",
      "disambiguation_index": 0
    },
    "Predicate-introduces": {
      "label": "introduces",
      "description": "The predicate 'introduces' signifies the act of presenting or bringing forth a new concept, idea, method, or entity to an audience or context. In the context of a subject and object, it indicates that the subject is the source or originator of the introduction, while the object represents the specific concept or entity being presented. This relationship often implies that the subject provides information, explanation, or context regarding the object, thereby facilitating understanding or awareness of the object within a particular domain.",
      "disambiguation_index": 0
    },
    "skos:broader": {
      "label": "has a broader term",
      "description": "The predicate 'has a broader term' establishes a hierarchical relationship between the subject and the object, indicating that the subject is a specific instance or subset of the more general concept represented by the object. This relationship implies that the subject shares characteristics or properties with the object, but is more narrowly defined within the broader category that the object represents.",
      "disambiguation_index": 0
    }
  }
}