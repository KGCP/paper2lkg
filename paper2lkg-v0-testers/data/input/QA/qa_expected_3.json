[
 {
 "question": "What are the two primary architectures that form the basis of most processors?",
 "answer": "CISC and RISC"
 },
 {
 "question": "What does CISC stand for and what is one of its key features?",
 "answer": "CISC stands for Complex Instruction Set Computer, and one of its key features is backward compatibility since the 1970s."
 },
 {
 "question": "What is the main advantage of RISC architecture over CISC?",
 "answer": "The main advantage of RISC architecture over CISC is that it simplifies command sets and handles access to memory with load-store commands, which allows the hardware to run faster."
 },
 {
 "question": "What is the significance of the RISC-V architecture being developed as an open source instruction set?",
 "answer": "The significance of the RISC-V architecture being developed as an open source instruction set is that it allows communities and organizations to produce their own processors without license restrictions, fostering innovation and collaboration."
 },
 {
 "question": "What is the name of the open source operating system development project implemented as a base in the paper?",
 "answer": "MILIS Linux"
 },
 {
 "question": "What are the target users of MILIS Linux?",
 "answer": "The target users of MILIS Linux are primarily government agencies, commercial organizations, and private users."
 },
 {
 "question": "What is the purpose of using QEMU in the development and testing of the OS for RISC-V?",
 "answer": "The purpose of using QEMU in the development and testing of the OS for RISC-V is to emulate the RISC-V system, allowing for development and testing without the need for real hardware."
 },
 {
 "question": "What version of the Linux kernel first included support for RISC-V?",
 "answer": "The Linux kernel first included support for RISC-V in version 4.15."
 },
 {
 "question": "What is the role of the Berkley Bootloader (BBL) in the RISC-V project?",
 "answer": "The role of the Berkley Bootloader (BBL) in the RISC-V project is to handle tasks such as starting and responding to timer interrupts, boot chain loading for Linux, and managing instructions that the RISC-V processor cannot handle directly in hardware."
 },
 {
 "question": "What are the future work plans mentioned for the MILIS Linux project on RISC-V?",
 "answer": "The future work plans mentioned for the MILIS Linux project on RISC-V include physical implementation and optimizations on real RISC-V hardware, evaluation of alternative libraries to Glibc, and further exploration of RISC-V porting for kernel level difficulties."
 }
]